<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T02:16:49Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hackiftekhar/IQKeyboardManager</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/hackiftekhar/IQKeyboardManager</id>
    <link href="https://github.com/hackiftekhar/IQKeyboardManager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView. Neither need to write any code nor any setup required and much more.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/Demo/Resources/icon.png&#34; alt=&#34;Icon&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;IQKeyboardManager&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/hackiftekhar/IQKeyboardManager.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/hackiftekhar/IQKeyboardManager&#34;&gt;&lt;img src=&#34;https://travis-ci.org/hackiftekhar/IQKeyboardManager.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;While developing iOS apps, we often run into issues where the iPhone keyboard slides up and covers the &lt;code&gt;UITextField/UITextView&lt;/code&gt;. &lt;code&gt;IQKeyboardManager&lt;/code&gt; allows you to prevent this issue of keyboard sliding up and covering &lt;code&gt;UITextField/UITextView&lt;/code&gt; without needing you to write any code or make any additional setup. To use &lt;code&gt;IQKeyboardManager&lt;/code&gt; you simply need to add source files to your project.&lt;/p&gt; &#xA;&lt;h4&gt;Key Features&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;**CODELESS**, Zero Lines of Code&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Works Automatically&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;No More UIScrollView&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;No More Subclasses&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;No More Manual Work&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;No More #imports&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;IQKeyboardManager&lt;/code&gt; works on all orientations, and with the toolbar. It also has nice optional features allowing you to customize the distance from the text field, behaviour of previous, next and done buttons in the keyboard toolbar, play sound when the user navigates through the form and more.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://youtu.be/6nhLw6hju2A&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/v3.3.0/Screenshot/IQKeyboardManagerScreenshot.png&#34; alt=&#34;IQKeyboardManager&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://youtu.be/6nhLw6hju2A&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/v3.3.0/Screenshot/IQKeyboardManagerSettings.png&#34; alt=&#34;Settings&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GIF animation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://youtu.be/6nhLw6hju2A&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/v3.3.0/Screenshot/IQKeyboardManager.gif&#34; alt=&#34;IQKeyboardManager&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://youtu.be/WAYc2Qj-OQg&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/WAYc2Qj-OQg/0.jpg&#34; alt=&#34;IQKeyboardManager Demo Video&#34; width=&#34;480&#34; height=&#34;360&#34; border=&#34;10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial video by @rebeloper (&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/issues/1135&#34;&gt;#1135&lt;/a&gt;)&lt;/h2&gt; &#xA;&lt;p&gt;@rebeloper demonstrated two videos on how to implement &lt;strong&gt;IQKeyboardManager&lt;/strong&gt; at it&#39;s core:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL_csAAO9PQ8aTL87XnueOXi3RpWE2m_8v&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/Screenshot/ThirdPartyYoutubeTutorial.jpg&#34; alt=&#34;Youtube Tutorial Playlist&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL_csAAO9PQ8aTL87XnueOXi3RpWE2m_8v&#34;&gt;https://www.youtube.com/playlist?list=PL_csAAO9PQ8aTL87XnueOXi3RpWE2m_8v&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;If you&#39;re planning to build SDK/library/framework and want to handle UITextField/UITextView with IQKeyboardManager then you&#39;re totally going the wrong way.&lt;/strong&gt; I would never suggest to add &lt;strong&gt;IQKeyboardManager&lt;/strong&gt; as &lt;strong&gt;dependency/adding/shipping&lt;/strong&gt; with any third-party library. Instead of adding &lt;strong&gt;IQKeyboardManager&lt;/strong&gt; you should implement your own solution to achieve same kind of results. &lt;strong&gt;IQKeyboardManager&lt;/strong&gt; is totally designed for projects to help developers for their convenience, it&#39;s not designed for &lt;strong&gt;adding/dependency/shipping&lt;/strong&gt; with any &lt;strong&gt;third-party library&lt;/strong&gt;, because &lt;strong&gt;doing this could block adoption by other developers for their projects as well (who are not using IQKeyboardManager and have implemented their custom solution to handle UITextField/UITextView in the project).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;If &lt;strong&gt;IQKeyboardManager&lt;/strong&gt; conflicts with other &lt;strong&gt;third-party library&lt;/strong&gt;, then it&#39;s &lt;strong&gt;developer responsibility&lt;/strong&gt; to &lt;strong&gt;enable/disable IQKeyboardManager&lt;/strong&gt; when &lt;strong&gt;presenting/dismissing&lt;/strong&gt; third-party library UI. Third-party libraries are not responsible to handle IQKeyboardManager.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Platform-iOS-blue.svg?style=fla&#34; alt=&#34;Platform iOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Minimum iOS Target&lt;/th&gt; &#xA;   &lt;th&gt;Minimum Xcode Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IQKeyboardManager&lt;/td&gt; &#xA;   &lt;td&gt;Obj-C&lt;/td&gt; &#xA;   &lt;td&gt;iOS 8.0&lt;/td&gt; &#xA;   &lt;td&gt;Xcode 9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IQKeyboardManagerSwift&lt;/td&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;iOS 8.0&lt;/td&gt; &#xA;   &lt;td&gt;Xcode 9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Demo Project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Xcode 11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Swift versions support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Swift&lt;/th&gt; &#xA;   &lt;th&gt;Xcode&lt;/th&gt; &#xA;   &lt;th&gt;IQKeyboardManagerSwift&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.1, 5.0, 4.2, 4.0, 3.2, 3.0&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 6.5.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.0,4.2, 4.0, 3.2, 3.0&lt;/td&gt; &#xA;   &lt;td&gt;10.2&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 6.2.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.2, 4.0, 3.2, 3.0&lt;/td&gt; &#xA;   &lt;td&gt;10.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 6.0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.0, 3.2, 3.0&lt;/td&gt; &#xA;   &lt;td&gt;9.0&lt;/td&gt; &#xA;   &lt;td&gt;5.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h4&gt;Installation with CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cocoadocs.org/docsets/IQKeyboardManager&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/IQKeyboardManager.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;IQKeyboardManager (Objective-C):&lt;/strong&gt;&lt;/em&gt; IQKeyboardManager is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile: (&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/issues/9&#34;&gt;#9&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;IQKeyboardManager&#39; #iOS8 and later&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;IQKeyboardManager (Swift):&lt;/strong&gt;&lt;/em&gt; IQKeyboardManagerSwift is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile: (&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/issues/236&#34;&gt;#236&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Swift 5.1, 5.0, 4.2, 4.0, 3.2, 3.0 (Xcode 11)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;IQKeyboardManagerSwift&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Or you can choose the version you need based on Swift support table from &lt;a href=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/README.md#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;IQKeyboardManagerSwift&#39;, &#39;6.3.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In AppDelegate.swift, just import IQKeyboardManagerSwift framework and enable IQKeyboardManager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import IQKeyboardManagerSwift&#xA;&#xA;@UIApplicationMain&#xA;class AppDelegate: UIResponder, UIApplicationDelegate {&#xA;&#xA;    var window: UIWindow?&#xA;&#xA;    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&amp;gt; Bool {&#xA;&#xA;      IQKeyboardManager.shared.enable = true&#xA;&#xA;      return true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installation with Carthage&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.&lt;/p&gt; &#xA;&lt;p&gt;You can install Carthage with &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew update&#xA;$ brew install carthage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To integrate &lt;code&gt;IQKeyboardManger&lt;/code&gt; or &lt;code&gt;IQKeyboardManagerSwift&lt;/code&gt; into your Xcode project using Carthage, add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;hackiftekhar/IQKeyboardManager&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;carthage&lt;/code&gt; to build the frameworks and drag the appropriate framework (&lt;code&gt;IQKeyboardManager.framework&lt;/code&gt; or &lt;code&gt;IQKeyboardManagerSwift.framework&lt;/code&gt;) into your Xcode project based on your need. Make sure to add only one framework and not both.&lt;/p&gt; &#xA;&lt;h4&gt;Installation with Source Code&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/hackiftekhar/iqkeyboardmanager.svg?sanitize=true&#34; alt=&#34;Github tag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;IQKeyboardManager (Objective-C):&lt;/strong&gt;&lt;/em&gt; Just &lt;em&gt;&lt;strong&gt;drag and drop&lt;/strong&gt;&lt;/em&gt; &lt;code&gt;IQKeyboardManager&lt;/code&gt; directory from demo project to your project. That&#39;s it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;IQKeyboardManager (Swift):&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;&lt;strong&gt;Drag and drop&lt;/strong&gt;&lt;/em&gt; &lt;code&gt;IQKeyboardManagerSwift&lt;/code&gt; directory from demo project to your project&lt;/p&gt; &#xA;&lt;p&gt;In AppDelegate.swift, just enable IQKeyboardManager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;@UIApplicationMain&#xA;class AppDelegate: UIResponder, UIApplicationDelegate {&#xA;&#xA;    var window: UIWindow?&#xA;&#xA;    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&amp;gt; Bool {&#xA;&#xA;      IQKeyboardManager.shared.enable = true&#xA;&#xA;      return true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installation with Swift Package Manager&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager(SPM)&lt;/a&gt; is Apple&#39;s dependency manager tool. It is now supported in Xcode 11. So it can be used in all appleOS types of projects. It can be used alongside other tools like CocoaPods and Carthage as well.&lt;/p&gt; &#xA;&lt;p&gt;To install IQKeyboardManager package into your packages, add a reference to IQKeyboardManager and a targeting release version in the dependencies section in &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PackageDescription&#xA;&#xA;let package = Package(&#xA;    name: &#34;YOUR_PROJECT_NAME&#34;,&#xA;    products: [],&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/hackiftekhar/IQKeyboardManager.git&#34;, from: &#34;6.5.0&#34;)&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install IQKeyboardManager package via Xcode&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency...&lt;/li&gt; &#xA; &lt;li&gt;Then search for &lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager.git&#34;&gt;https://github.com/hackiftekhar/IQKeyboardManager.git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And choose the version you want&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Migration Guide&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/wiki/IQKeyboardManager-6.0.0-Migration-Guide&#34;&gt;IQKeyboardManager 6.0.0 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Other Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/wiki/Known-Issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/wiki/Manual-Management&#34;&gt;Manual Management Tweaks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager/wiki/Properties-&amp;amp;-Functions&#34;&gt;Properties and functions usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Flow Diagram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/Screenshot/IQKeyboardManagerFlowDiagram.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/Screenshot/IQKeyboardManagerFlowDiagram.jpg&#34; alt=&#34;IQKeyboardManager CFD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to see detailed Flow diagram then check &lt;a href=&#34;https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/v3.3.0/Screenshot/IQKeyboardManagerCFD.jpg&#34;&gt;Detailed Flow Diagram&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the MIT License.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Any contribution is more than welcome! You can contribute through pull requests and issues on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contact me, email at: &lt;a href=&#34;mailto:hack.iftekhar@gmail.com&#34;&gt;hack.iftekhar@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>robbiehanson/CocoaAsyncSocket</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/robbiehanson/CocoaAsyncSocket</id>
    <link href="https://github.com/robbiehanson/CocoaAsyncSocket" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asynchronous socket networking library for Mac and iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CocoaAsyncSocket&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/robbiehanson/CocoaAsyncSocket&#34;&gt;&lt;img src=&#34;https://travis-ci.org/robbiehanson/CocoaAsyncSocket.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/CocoaAsyncSocket&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/CocoaAsyncSocket.svg?style=flat&#34; alt=&#34;Version Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/?q=CocoaAsyncSocket&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/CocoaAsyncSocket.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Public_domain&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Public%20Domain-orange.svg?style=flat&#34; alt=&#34;license Public Domain&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CocoaAsyncSocket provides easy-to-use and powerful asynchronous socket libraries for macOS, iOS, and tvOS. The classes are described below.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; by adding this line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;use_frameworks! # Add this if you are targeting iOS 8+ or using Swift&#xA;pod &#39;CocoaAsyncSocket&#39;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;CocoaAsyncSocket is &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; compatible. To include it add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;github &#34;robbiehanson/CocoaAsyncSocket&#34; &#34;master&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The project is currently configured to build for &lt;strong&gt;iOS&lt;/strong&gt;, &lt;strong&gt;tvOS&lt;/strong&gt; and &lt;strong&gt;Mac&lt;/strong&gt;. After building with carthage the resultant frameworks will be stored in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Carthage/Build/iOS/CocoaAsyncSocket.framework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Carthage/Build/tvOS/CocoaAsyncSocket.framework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Carthage/Build/Mac/CocoaAsyncSocket.framework&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Select the correct framework(s) and drag it into your project.&lt;/p&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;p&gt;Simply add the package dependency to your Package.swift and depend on &#34;CocoaAsyncSocket&#34; in the necessary targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/robbiehanson/CocoaAsyncSocket&#34;, from: &#34;7.6.4&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manual&lt;/h4&gt; &#xA;&lt;p&gt;You can also include it into your project by adding the source files directly, but you should probably be using a dependency manager to keep up to date.&lt;/p&gt; &#xA;&lt;h3&gt;Importing&lt;/h3&gt; &#xA;&lt;p&gt;Using Objective-C:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-obj-c&#34;&gt;// When using Clang Modules:&#xA;@import CocoaAsyncSocket; &#xA;&#xA;// or when not:&#xA;#import &#34;GCDAsyncSocket.h&#34; // for TCP&#xA;#import &#34;GCDAsyncUdpSocket.h&#34; // for UDP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using Swift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import CocoaAsyncSocket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TCP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GCDAsyncSocket&lt;/strong&gt; is a TCP/IP socket networking library built atop Grand Central Dispatch. Here are the key features available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Native Objective-C, fully self-contained in one class.&lt;br&gt; &lt;em&gt;No need to muck around with sockets or streams. This class handles everything for you.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full delegate support&lt;br&gt; &lt;em&gt;Errors, connections, read completions, write completions, progress, and disconnections all result in a call to your delegate method.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Queued non-blocking reads and writes, with optional timeouts.&lt;br&gt; &lt;em&gt;You tell it what to read or write, and it handles everything for you. Queueing, buffering, and searching for termination sequences within the stream - all handled for you automatically.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatic socket acceptance.&lt;br&gt; &lt;em&gt;Spin up a server socket, tell it to accept connections, and it will call you with new instances of itself for each connection.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for TCP streams over IPv4 and IPv6.&lt;br&gt; &lt;em&gt;Automatically connect to IPv4 or IPv6 hosts. Automatically accept incoming connections over both IPv4 and IPv6 with a single instance of this class. No more worrying about multiple sockets.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for TLS / SSL&lt;br&gt; &lt;em&gt;Secure your socket with ease using just a single method call. Available for both client and server sockets.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fully GCD based and Thread-Safe&lt;br&gt; &lt;em&gt;It runs entirely within its own GCD dispatch_queue, and is completely thread-safe. Further, the delegate methods are all invoked asynchronously onto a dispatch_queue of your choosing. This means parallel operation of your socket code, and your delegate/processing code.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UDP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GCDAsyncUdpSocket&lt;/strong&gt; is a UDP/IP socket networking library built atop Grand Central Dispatch. Here are the key features available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Native Objective-C, fully self-contained in one class.&lt;br&gt; &lt;em&gt;No need to muck around with low-level sockets. This class handles everything for you.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full delegate support.&lt;br&gt; &lt;em&gt;Errors, send completions, receive completions, and disconnections all result in a call to your delegate method.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Queued non-blocking send and receive operations, with optional timeouts.&lt;br&gt; &lt;em&gt;You tell it what to send or receive, and it handles everything for you. Queueing, buffering, waiting and checking errno - all handled for you automatically.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for IPv4 and IPv6.&lt;br&gt; &lt;em&gt;Automatically send/recv using IPv4 and/or IPv6. No more worrying about multiple sockets.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fully GCD based and Thread-Safe&lt;br&gt; &lt;em&gt;It runs entirely within its own GCD dispatch_queue, and is completely thread-safe. Further, the delegate methods are all invoked asynchronously onto a dispatch_queue of your choosing. This means parallel operation of your socket code, and your delegate/processing code.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For those new(ish) to networking, it&#39;s recommended you &lt;strong&gt;&lt;a href=&#34;https://github.com/robbiehanson/CocoaAsyncSocket/wiki&#34;&gt;read the wiki&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt;&lt;em&gt;Sockets might not work exactly like you think they do...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Still got questions?&lt;/strong&gt; Try the &lt;strong&gt;&lt;a href=&#34;https://groups.google.com/group/cocoaasyncsocket&#34;&gt;CocoaAsyncSocket Mailing List&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Love the project? Wanna buy me a ☕️&amp;nbsp;&amp;nbsp;? (or a 🍺&amp;nbsp;&amp;nbsp;😀&amp;nbsp;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://onename.com/robbiehanson&#34;&gt;&lt;img src=&#34;https://bitpay.com/img/donate-sm.png&#34; alt=&#34;donation-bitcoin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=2M8C699FQ8AW2&#34;&gt;&lt;img src=&#34;https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;donation-paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>realm/realm-swift</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/realm/realm-swift</id>
    <link href="https://github.com/realm/realm-swift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Realm is a mobile database: a replacement for Core Data &amp; SQLite&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/realm/realm-swift/raw/master/logo.png&#34; alt=&#34;Realm&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Realm is a mobile database that runs directly inside phones, tablets or wearables. This repository holds the source code for the iOS, macOS, tvOS &amp;amp; watchOS versions of Realm Swift &amp;amp; Realm Objective-C.&lt;/p&gt; &#xA;&lt;h2&gt;Why Use Realm&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive to Developers:&lt;/strong&gt; Realm’s object-oriented data model is simple to learn, doesn’t need an ORM, and lets you write less code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Designed for Offline Use:&lt;/strong&gt; Realm’s local database persists data on-disk, so apps work as well offline as they do online.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built for Mobile:&lt;/strong&gt; Realm is fully-featured, lightweight, and efficiently uses memory, disk space, and battery life.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Object-Oriented: Streamline Your Code&lt;/h2&gt; &#xA;&lt;p&gt;Realm was built for mobile developers, with simplicity in mind. The idiomatic, object-oriented data model can save you thousands of lines of code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Define your models like regular Swift classes&#xA;class Dog: Object {&#xA;    @Persisted var name: String&#xA;    @Persisted var age: Int&#xA;}&#xA;class Person: Object {&#xA;    @Persisted(primaryKey: true) var _id: String&#xA;    @Persisted var name: String&#xA;    @Persisted var age: Int&#xA;    // Create relationships by pointing an Object field to another Class&#xA;    @Persisted var dogs: List&amp;lt;Dog&amp;gt;&#xA;}&#xA;// Use them like regular Swift objects&#xA;let dog = Dog()&#xA;dog.name = &#34;Rex&#34;&#xA;dog.age = 1&#xA;print(&#34;name of dog: \(dog.name)&#34;)&#xA;&#xA;// Get the default Realm&#xA;let realm = try! Realm()&#xA;// Persist your data easily with a write transaction &#xA;try! realm.write {&#xA;    realm.add(dog)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Live Objects: Build Reactive Apps&lt;/h2&gt; &#xA;&lt;p&gt;Realm’s live objects mean data updated anywhere is automatically updated everywhere.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Open the default realm.&#xA;let realm = try! Realm()&#xA;&#xA;var token: NotificationToken?&#xA;&#xA;let dog = Dog()&#xA;dog.name = &#34;Max&#34;&#xA;&#xA;// Create a dog in the realm.&#xA;try! realm.write {&#xA;    realm.add(dog)&#xA;}&#xA;&#xA;//  Set up the listener &amp;amp; observe object notifications.&#xA;token = dog.observe { change in&#xA;    switch change {&#xA;    case .change(let properties):&#xA;        for property in properties {&#xA;            print(&#34;Property &#39;\(property.name)&#39; changed to &#39;\(property.newValue!)&#39;&#34;);&#xA;        }&#xA;    case .error(let error):&#xA;        print(&#34;An error occurred: (error)&#34;)&#xA;    case .deleted:&#xA;        print(&#34;The object was deleted.&#34;)&#xA;    }&#xA;}&#xA;&#xA;// Update the dog&#39;s name to see the effect.&#xA;try! realm.write {&#xA;    dog.name = &#34;Wolfie&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SwiftUI&lt;/h3&gt; &#xA;&lt;p&gt;Realm integrates directly with SwiftUI, updating your views so you don&#39;t have to.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContactsView: View {&#xA;    @ObservedResults(Person.self) var persons&#xA;    &#xA;    var body: some View {&#xA;        List {&#xA;            ForEach(persons) { person in&#xA;                Text(person.name)&#xA;            }&#xA;            .onMove(perform: $persons.move)&#xA;            .onDelete(perform: $persons.remove)&#xA;        }.navigationBarItems(trailing:&#xA;            Button(&#34;Add&#34;) {&#xA;                $persons.append(Person())&#xA;            }&#xA;        )&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fully Encrypted&lt;/h2&gt; &#xA;&lt;p&gt;Data can be encrypted in-flight and at-rest, keeping even the most sensitive data secure.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Generate a random encryption key&#xA;var key = Data(count: 64)&#xA;_ = key.withUnsafeMutableBytes { bytes in&#xA;    SecRandomCopyBytes(kSecRandomDefault, 64, bytes)&#xA;}&#xA;&#xA;// Add the encryption key to the config and open the realm&#xA;let config = Realm.Configuration(encryptionKey: key)&#xA;let realm = try Realm(configuration: config)&#xA;&#xA;// Use the Realm as normal&#xA;let dogs = realm.objects(Dog.self).filter(&#34;name contains &#39;Fido&#39;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data Sync&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.mongodb.com/realm/mobile/sync&#34;&gt;MongoDB Realm Sync&lt;/a&gt; service makes it simple to keep data in sync across users, devices, and your backend in real-time.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We support installing Realm via Swift Package Manager, CocoaPods, Carthage, or by importing a dynamic XCFramework.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the detailed instructions in our &lt;a href=&#34;https://docs.mongodb.com/realm/sdk/ios/install/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation can be found at &lt;a href=&#34;https://docs.mongodb.com/realm/sdk/ios/&#34;&gt;docs.mongodb.com/realm/sdk/ios/&lt;/a&gt;.&lt;br&gt; The API reference is located at &lt;a href=&#34;https://docs.mongodb.com/realm-sdks/swift/latest/&#34;&gt;docs.mongodb.com/realm-sdks/swift/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need help with your code?&lt;/strong&gt;: Look for previous questions with the&lt;a href=&#34;https://stackoverflow.com/questions/tagged/realm?sort=newest&#34;&gt;&lt;code&gt;realm&lt;/code&gt; tag&lt;/a&gt; on Stack Overflow or &lt;a href=&#34;https://stackoverflow.com/questions/ask?tags=realm&#34;&gt;ask a new question&lt;/a&gt;. For general discussion that might be considered too broad for Stack Overflow, use the &lt;a href=&#34;https://developer.mongodb.com/community/forums/tags/c/realm-sdks/58/swift/&#34;&gt;Community Forum&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Have a bug to report?&lt;/strong&gt; &lt;a href=&#34;https://github.com/realm/realm-swift/issues/new&#34;&gt;Open a GitHub issue&lt;/a&gt;. If possible, include the version of Realm, a full log, the Realm file, and a project that shows the issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Have a feature request?&lt;/strong&gt; &lt;a href=&#34;https://github.com/realm/realm-swift/issues/new&#34;&gt;Open a GitHub issue&lt;/a&gt;. Tell us what the feature should do and why you want the feature.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building Realm&lt;/h2&gt; &#xA;&lt;p&gt;In case you don&#39;t want to use the precompiled version, you can build Realm yourself from source.&lt;/p&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Building Realm requires Xcode 11.x or newer.&lt;/li&gt; &#xA; &lt;li&gt;Building Realm documentation requires &lt;a href=&#34;https://github.com/realm/jazzy&#34;&gt;jazzy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have all the necessary prerequisites, building Realm.framework just takes a single command: &lt;code&gt;sh build.sh build&lt;/code&gt;. You&#39;ll need an internet connection the first time you build Realm to download the core binary.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;sh build.sh help&lt;/code&gt; to see all the actions you can perform (build ios/osx, generate docs, test, etc.).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-swift/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details!&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project adheres to the &lt;a href=&#34;https://www.mongodb.com/community-code-of-conduct&#34;&gt;MongoDB Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please report unacceptable behavior to &lt;a href=&#34;mailto:community-conduct@mongodb.com&#34;&gt;community-conduct@mongodb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Realm Objective-C &amp;amp; Realm Swift are published under the Apache 2.0 license.&lt;br&gt; Realm Core is also published under the Apache 2.0 license and is available &lt;a href=&#34;https://github.com/realm/realm-core&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This product is not being made available to any person located in Cuba, Iran, North Korea, Sudan, Syria or the Crimea region, or to any other person that is not eligible to receive the product under U.S. law.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you use Realm and are happy with it, please consider sending out a tweet mentioning &lt;a href=&#34;https://twitter.com/realm&#34;&gt;@realm&lt;/a&gt; to share your thoughts!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;And if you don&#39;t like it, please let us know what you would like improved, so we can fix it!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img style=&#34;width: 0px; height: 0px;&#34; src=&#34;https://3eaz4mshcd.execute-api.us-east-1.amazonaws.com/prod?s=https://github.com/realm/realm-swift#README.md&#34;&gt;</summary>
  </entry>
  <entry>
    <title>expo/expo</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/expo/expo</id>
    <link href="https://github.com/expo/expo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source platform for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://expo.dev/&#34;&gt; &lt;img alt=&#34;expo sdk&#34; height=&#34;128&#34; src=&#34;https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://expo.dev/&#34;&gt;Expo&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;a href=&#34;https://expo.dev/&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;SDK version&#34; href=&#34;https://www.npmjs.com/package/expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo SDK version&#34; src=&#34;https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Join our forums&#34; href=&#34;https://forums.expo.dev&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Forums&#34; src=&#34;https://img.shields.io/badge/Ask%20Questions%20-blue.svg?style=flat-square&amp;amp;logo=discourse&amp;amp;logoWidth=15&amp;amp;labelColor=000000&amp;amp;color=4630EB&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Join our Discord&#34; href=&#34;https://discord.gg/4gtbPAdpaE&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Expo is free to use&#34; href=&#34;https://github.com/expo/expo/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: MIT&#34; src=&#34;https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;expo downloads&#34; href=&#34;http://www.npmtrends.com/expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;try expo with snack&#34; href=&#34;https://snack.expo.dev&#34;&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt; | &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://docs.expo.dev&#34;&gt;Read the Documentation 📚&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a aria-label=&#34;Follow @expo on Twitter&#34; href=&#34;https://twitter.com/intent/follow?screen_name=expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Twitter: expo&#34; src=&#34;https://img.shields.io/twitter/follow/expo.svg?style=flat-square&amp;amp;label=Follow%20%40expo&amp;amp;logo=TWITTER&amp;amp;logoColor=FFFFFF&amp;amp;labelColor=00aced&amp;amp;logoWidth=15&amp;amp;color=lightgray&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Follow Expo on Medium&#34; href=&#34;https://blog.expo.dev&#34;&gt; &lt;img align=&#34;right&#34; alt=&#34;Medium: exposition&#34; src=&#34;https://img.shields.io/badge/Learn%20more%20on%20our%20blog-lightgray.svg?style=flat-square&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-documentation&#34;&gt;📚 Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-project-layout&#34;&gt;🗺 Project Layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-badges&#34;&gt;🏅 Badges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-contributing&#34;&gt;👏 Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-faq&#34;&gt;❓ FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-the-team&#34;&gt;💙 The Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript. This repository is where the Expo client software is developed, and includes the client apps, modules, apps, and more. The &lt;a href=&#34;https://github.com/expo/expo-cli&#34;&gt;Expo CLI&lt;/a&gt; repository contains the Expo development tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://expo.dev/guidelines&#34;&gt;Click here to view the Expo Community Guidelines&lt;/a&gt;. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://docs.expo.dev&#34;&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/versions/latest/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/bare/exploring-bare-workflow/&#34;&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗺 Project Layout&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for the Unimodules, if you want to edit a library or just see how it works this is where you&#39;ll find it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/apps&#34;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development Unimodules. You&#39;ll do most of your testing in here.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href=&#34;https://docs.expo.dev&#34;&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/templates&#34;&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;expo start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/react-native-lab&#34;&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt;. We keep this very close to the upstream but sometimes need to add quick fixes locally before they can land.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/guides&#34;&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/android&#34;&gt;&lt;code&gt;android&lt;/code&gt;&lt;/a&gt; contains the Android project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/home&#34;&gt;&lt;code&gt;home&lt;/code&gt;&lt;/a&gt; contains the JavaScript source code of the app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/ios&#34;&gt;&lt;code&gt;ios&lt;/code&gt;&lt;/a&gt; contains the iOS project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/ios&#34;&gt;&lt;code&gt;ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. Always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/tools&#34;&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contains build and configuration tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/template-files&#34;&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json&#34;&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏅 Badges&lt;/h2&gt; &#xA;&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://expo.dev/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000&#34; alt=&#34;runs with Expo Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://expo.dev/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000&#34; alt=&#34;runs with Expo Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)&#xA;&#xA;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;👏 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href=&#34;http://github.com/expo/expo-cli&#34;&gt;Expo CLI repo&lt;/a&gt; to work on the Expo CLI, and various other universal development tools.&lt;/p&gt; &#xA;&lt;h2&gt;❓ FAQ&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href=&#34;https://docs.expo.dev/versions/latest/introduction/faq/&#34;&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;If you still have questions you can ask them on our &lt;a href=&#34;https://forums.expo.dev&#34;&gt;forums&lt;/a&gt;, &lt;a href=&#34;https://discord.gg/4gtbPAdpaE&#34;&gt;Discord&lt;/a&gt; or on Twitter &lt;a href=&#34;https://twitter.com/expo&#34;&gt;@Expo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💙 The Team&lt;/h2&gt; &#xA;&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href=&#34;https://expo.dev/about&#34;&gt;team members&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Expo source code is made available under the &lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>material-components/material-components-ios</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/material-components/material-components-ios</id>
    <link href="https://github.com/material-components/material-components-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[In maintenance mode] Modular and customizable Material Design UI components for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Material Components for iOS&lt;/h1&gt; &#xA;&lt;h2&gt;Material&#39;s iOS libraries are in maintenance mode as of July 15, 2021&lt;/h2&gt; &#xA;&lt;p&gt;On July 15, 2021, the Material Components for iOS library and its related Material Foundation and Material Motion dependencies entered maintenance mode. This included:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-components/material-components-ios/&#34;&gt;https://github.com/material-components/material-components-ios/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-internationalization-ios&#34;&gt;https://github.com/material-foundation/material-internationalization-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-text-accessibility-ios&#34;&gt;https://github.com/material-foundation/material-text-accessibility-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/cocoapods-catalog-by-convention&#34;&gt;https://github.com/material-foundation/cocoapods-catalog-by-convention&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-testing-ios&#34;&gt;https://github.com/material-foundation/material-testing-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/bazel-workspace-apple&#34;&gt;https://github.com/material-foundation/bazel-workspace-apple&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/xctestrunner&#34;&gt;https://github.com/material-foundation/xctestrunner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/bazel-apple-framework-relative-headers&#34;&gt;https://github.com/material-foundation/bazel-apple-framework-relative-headers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/bazel-test-host-apple&#34;&gt;https://github.com/material-foundation/bazel-test-host-apple&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-sprited-animation-view-ios&#34;&gt;https://github.com/material-foundation/material-sprited-animation-view-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/clang-format-ci&#34;&gt;https://github.com/material-foundation/clang-format-ci&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/github-squash-and-merge-pr-descriptions&#34;&gt;https://github.com/material-foundation/github-squash-and-merge-pr-descriptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-roboto-font-loader-ios&#34;&gt;https://github.com/material-foundation/material-roboto-font-loader-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-scrollview-delegate-multiplexer-ios&#34;&gt;https://github.com/material-foundation/material-scrollview-delegate-multiplexer-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/SettingsKit&#34;&gt;https://github.com/material-foundation/SettingsKit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/clang-format&#34;&gt;https://github.com/material-foundation/clang-format&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/bazel_ios_warnings&#34;&gt;https://github.com/material-foundation/bazel_ios_warnings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/github-comment&#34;&gt;https://github.com/material-foundation/github-comment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-automation&#34;&gt;https://github.com/material-foundation/material-automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/kokoro-ios-runner&#34;&gt;https://github.com/material-foundation/kokoro-ios-runner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-remixer-ios&#34;&gt;https://github.com/material-foundation/material-remixer-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/codereview.cc&#34;&gt;https://github.com/material-foundation/codereview.cc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-font-disk-loader-ios&#34;&gt;https://github.com/material-foundation/material-font-disk-loader-ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/arc-tslint&#34;&gt;https://github.com/material-foundation/arc-tslint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/material-arc-tools&#34;&gt;https://github.com/material-foundation/material-arc-tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/arc-tsclint&#34;&gt;https://github.com/material-foundation/arc-tsclint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/material-foundation/arc-hook-github-issues&#34;&gt;https://github.com/material-foundation/arc-hook-github-issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All libraries at &lt;a href=&#34;https://github.com/material-motion&#34;&gt;https://github.com/material-motion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What can you use instead?&lt;/h3&gt; &#xA;&lt;p&gt;We recommend that you follow Apple&#39;s Human Interface Guidelines and consider using modern UIKit components or SwiftUI instead. Both offer a high degree of flexibility through which you can express your product&#39;s brand while providing a predictable and familiar Apple platforms experience for your users. You&#39;ll also benefit from ongoing investments Apple makes in accessibility, ease of use, and deep integrations with OS features.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, &lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets/material&#34;&gt;Flutter&lt;/a&gt; enables you to get a Material look and feel across all platforms.&lt;/p&gt; &#xA;&lt;h3&gt;What maintenance mode means for MDC iOS&lt;/h3&gt; &#xA;&lt;p&gt;Once we enter maintenance mode we will have the following support policy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Releases will be cut on a best-effort and as-needed basis.&lt;/li&gt; &#xA; &lt;li&gt;Feature and support requests will automatically be closed.&lt;/li&gt; &#xA; &lt;li&gt;Bugs will be addressed on a best-effort basis.&lt;/li&gt; &#xA; &lt;li&gt;All iOS-specific documentation on material.io will be removed.&lt;/li&gt; &#xA; &lt;li&gt;We will no longer maintain any &lt;code&gt;.md&lt;/code&gt; documentation on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Contributions may still be accepted, but reviews will be performed on a best-effort basis and are not guaranteed to result in a merge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/material-components/material-components-ios/develop/docs/&#34;&gt;How To Use MDC-iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/material-components/material-components-ios/develop/components/&#34;&gt;All Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.stackoverflow.com/questions/tagged/material-components+ios&#34;&gt;MDC-iOS on Stack Overflow&lt;/a&gt; (external site)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://material.io&#34;&gt;Material.io&lt;/a&gt; (external site)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://material.io/guidelines&#34;&gt;Material Design Guidelines&lt;/a&gt; (external site)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SDWebImage/SDWebImage</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/SDWebImage/SDWebImage</id>
    <link href="https://github.com/SDWebImage/SDWebImage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asynchronous image downloader with cache support as a UIImageView category&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/SDWebImage_logo.png&#34; title=&#34;SDWebImage logo&#34; float=&#34;left&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/SDWebImage/SDWebImage&#34;&gt;&lt;img src=&#34;http://img.shields.io/travis/SDWebImage/SDWebImage/master.svg?style=flat&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/SDWebImage/&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/SDWebImage.svg?style=flat&#34; alt=&#34;Pod Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/SDWebImage/&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/SDWebImage.svg?style=flat&#34; alt=&#34;Pod Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/l/SDWebImage.svg?style=flat&#34; alt=&#34;Pod License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;SwiftPM compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developer.apple.com/documentation/xcode/creating_a_mac_version_of_your_ipad_app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Catalyst-compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;Mac Catalyst compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SDWebImage/SDWebImage&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SDWebImage/SDWebImage/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library provides an async image downloader with cache support. For convenience, we added categories for UI elements like &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;UIButton&lt;/code&gt;, &lt;code&gt;MKAnnotationView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Categories for &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;UIButton&lt;/code&gt;, &lt;code&gt;MKAnnotationView&lt;/code&gt; adding web image and cache management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; An asynchronous image downloader&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; An asynchronous memory + disk image caching with automatic cache expiration handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A background image decompression to avoid frame rate drop&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#progressive-animation&#34;&gt;Progressive image loading&lt;/a&gt; (including animated image, like GIF showing in Web browser)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#thumbnail-decoding-550&#34;&gt;Thumbnail image decoding&lt;/a&gt; to save CPU &amp;amp;&amp;amp; Memory for large images&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#custom-coder-420&#34;&gt;Extendable image coder&lt;/a&gt; to support massive image format, like WebP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#animated-image-50&#34;&gt;Full-stack solution for animated images&lt;/a&gt; which keep a balance between CPU &amp;amp;&amp;amp; Memory&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#transformer-50&#34;&gt;Customizable and composable transformations&lt;/a&gt; can be applied to the images right after download&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#custom-cache-50&#34;&gt;Customizable and multiple caches system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#custom-loader-50&#34;&gt;Customizable and multiple loaders system&lt;/a&gt; to expand the capabilities, like &lt;a href=&#34;https://github.com/SDWebImage/SDWebImagePhotosPlugin&#34;&gt;Photos Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/How-to-use#use-view-indicator-50&#34;&gt;Image loading indicators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#image-transition-430&#34;&gt;Image loading transition animation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A guarantee that the same URL won&#39;t be downloaded several times&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A guarantee that bogus URLs won&#39;t be retried again and again&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A guarantee that main thread will never be blocked&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modern Objective-C and better Swift support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Performances!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Image Formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Image formats supported by Apple system (JPEG, PNG, TIFF, BMP, ...), including &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#gif-coder&#34;&gt;GIF&lt;/a&gt;/&lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#apng-coder&#34;&gt;APNG&lt;/a&gt; animated image&lt;/li&gt; &#xA; &lt;li&gt;HEIC format from iOS 11/macOS 10.13, including animated HEIC from iOS 13/macOS 10.15 via &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#heic-coder&#34;&gt;SDWebImageHEICCoder&lt;/a&gt;. For lower firmware, use coder plugin &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageHEIFCoder&#34;&gt;SDWebImageHEIFCoder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WebP format from iOS 14/macOS 11.0 via &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#awebp-coder&#34;&gt;SDWebImageAWebPCoder&lt;/a&gt;. For lower firmware, use coder plugin &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder&#34;&gt;SDWebImageWebPCoder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support extendable coder plugins for new image formats like BPG, AVIF. And vector format like PDF, SVG. See all the list in &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Coder-Plugin-List&#34;&gt;Image coder plugin List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional modules and Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;In order to keep SDWebImage focused and limited to the core features, but also allow extensibility and custom behaviors, during the 5.0 refactoring we focused on modularizing the library. As such, we have moved/built new modules to &lt;a href=&#34;https://github.com/SDWebImage&#34;&gt;SDWebImage org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;SwiftUI&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/xcode/swiftui/&#34;&gt;SwiftUI&lt;/a&gt; is an innovative UI framework written in Swift to build user interfaces across all Apple platforms.&lt;/p&gt; &#xA;&lt;p&gt;We support SwiftUI by building a brand new framework called &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageSwiftUI&#34;&gt;SDWebImageSwiftUI&lt;/a&gt;, which is built on top of SDWebImage core functions (caching, loading and animation).&lt;/p&gt; &#xA;&lt;p&gt;The new framework introduce two View structs &lt;code&gt;WebImage&lt;/code&gt; and &lt;code&gt;AnimatedImage&lt;/code&gt; for SwiftUI world, &lt;code&gt;ImageIndicator&lt;/code&gt; modifier for any View, &lt;code&gt;ImageManager&lt;/code&gt; observable object for data source. Supports iOS 13+/macOS 10.15+/tvOS 13+/watchOS 6+ and Swift 5.1. Have a nice try and provide feedback!&lt;/p&gt; &#xA;&lt;h4&gt;Coders for additional image formats&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder&#34;&gt;SDWebImageWebPCoder&lt;/a&gt; - coder for WebP format. iOS 8+/macOS 10.10+. Based on &lt;a href=&#34;https://chromium.googlesource.com/webm/libwebp&#34;&gt;libwebp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageHEIFCoder&#34;&gt;SDWebImageHEIFCoder&lt;/a&gt; - coder for HEIF format, iOS 8+/macOS 10.10+ support. Based on &lt;a href=&#34;https://github.com/strukturag/libheif&#34;&gt;libheif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageBPGCoder&#34;&gt;SDWebImageBPGCoder&lt;/a&gt; - coder for BPG format. Based on &lt;a href=&#34;https://github.com/mirrorer/libbpg&#34;&gt;libbpg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageFLIFCoder&#34;&gt;SDWebImageFLIFCoder&lt;/a&gt; - coder for FLIF format. Based on &lt;a href=&#34;https://github.com/FLIF-hub/FLIF&#34;&gt;libflif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageAVIFCoder&#34;&gt;SDWebImageAVIFCoder&lt;/a&gt; - coder for AVIF (AV1-based) format. Based on &lt;a href=&#34;https://github.com/AOMediaCodec/libavif&#34;&gt;libavif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImagePDFCoder&#34;&gt;SDWebImagePDFCoder&lt;/a&gt; - coder for PDF vector format. Using built-in frameworks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageSVGCoder&#34;&gt;SDWebImageSVGCoder&lt;/a&gt; - coder for SVG vector format. Using built-in frameworks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageLottieCoder&#34;&gt;SDWebImageLottieCoder&lt;/a&gt; - coder for Lottie animation format. Based on &lt;a href=&#34;https://github.com/Samsung/rlottie&#34;&gt;rlottie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and more from community!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Custom Caches&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageYYPlugin&#34;&gt;SDWebImageYYPlugin&lt;/a&gt; - plugin to support caching images with &lt;a href=&#34;https://github.com/ibireme/YYCache&#34;&gt;YYCache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImagePINPlugin&#34;&gt;SDWebImagePINPlugin&lt;/a&gt; - plugin to support caching images with &lt;a href=&#34;https://github.com/pinterest/PINCache&#34;&gt;PINCache&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Custom Loaders&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImagePhotosPlugin&#34;&gt;SDWebImagePhotosPlugin&lt;/a&gt; - plugin to support loading images from Photos (using &lt;code&gt;Photos.framework&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageLinkPlugin&#34;&gt;SDWebImageLinkPlugin&lt;/a&gt; - plugin to support loading images from rich link url, as well as &lt;code&gt;LPLinkView&lt;/code&gt; (using &lt;code&gt;LinkPresentation.framework&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Integration with 3rd party libraries&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageLottiePlugin&#34;&gt;SDWebImageLottiePlugin&lt;/a&gt; - plugin to support &lt;a href=&#34;https://github.com/airbnb/lottie-ios&#34;&gt;Lottie-iOS&lt;/a&gt;, vector animation rending with remote JSON files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageSVGKitPlugin&#34;&gt;SDWebImageSVGKitPlugin&lt;/a&gt; - plugin to support &lt;a href=&#34;https://github.com/SVGKit/SVGKit&#34;&gt;SVGKit&lt;/a&gt;, SVG rendering using Core Animation, iOS 8+/macOS 10.10+ support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageFLPlugin&#34;&gt;SDWebImageFLPlugin&lt;/a&gt; - plugin to support &lt;a href=&#34;https://github.com/Flipboard/FLAnimatedImage&#34;&gt;FLAnimatedImage&lt;/a&gt; as the engine for animated GIFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageYYPlugin&#34;&gt;SDWebImageYYPlugin&lt;/a&gt; - plugin to integrate &lt;a href=&#34;https://github.com/ibireme/YYImage&#34;&gt;YYImage&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/ibireme/YYCache&#34;&gt;YYCache&lt;/a&gt; for image rendering &amp;amp; caching&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Community driven popular libraries&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/firebase/FirebaseUI-iOS&#34;&gt;FirebaseUI&lt;/a&gt; - Firebase Storage binding for query images, based on SDWebImage loader system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DylanVann/react-native-fast-image&#34;&gt;react-native-fast-image&lt;/a&gt; - React Native fast image component, based on SDWebImage Animated Image solution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_image_compress&#34;&gt;flutter_image_compress&lt;/a&gt; - Flutter compresses image plugin, based on SDWebImage WebP coder plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Make our lives easier&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/libwebp-Xcode&#34;&gt;libwebp-Xcode&lt;/a&gt; - A wrapper for &lt;a href=&#34;https://chromium.googlesource.com/webm/libwebp&#34;&gt;libwebp&lt;/a&gt; + an Xcode project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/libheif-Xcode&#34;&gt;libheif-Xcode&lt;/a&gt; - A wrapper for &lt;a href=&#34;https://github.com/strukturag/libheif&#34;&gt;libheif&lt;/a&gt; + an Xcode project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/libavif-Xcode&#34;&gt;libavif-Xcode&lt;/a&gt; - A wrapper for &lt;a href=&#34;https://github.com/AOMediaCodec/libavif&#34;&gt;libavif&lt;/a&gt; + an Xcode project.&lt;/li&gt; &#xA; &lt;li&gt;and more third-party C/C++ image codec libraries with CocoaPods/Carthage/SwiftPM support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use those directly, or create similar components of your own, by using the customizable architecture of SDWebImage.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 9.0 or later&lt;/li&gt; &#xA; &lt;li&gt;tvOS 9.0 or later&lt;/li&gt; &#xA; &lt;li&gt;watchOS 2.0 or later&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.11 or later (10.15 for Catalyst)&lt;/li&gt; &#xA; &lt;li&gt;Xcode 11.0 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Backwards compatibility&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For iOS 8, macOS 10.10 or Xcode &amp;lt; 11, use &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/releases/tag/5.9.5&#34;&gt;any 5.x version up to 5.9.5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For iOS 7, macOS 10.9 or Xcode &amp;lt; 8, use &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/releases/tag/4.4.6&#34;&gt;any 4.x version up to 4.4.6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For macOS 10.8, use &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/releases/tag/4.3.0&#34;&gt;any 4.x version up to 4.3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For iOS 5 and 6, use &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/releases/tag/3.7.6&#34;&gt;any 3.x version up to 3.7.6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For iOS &amp;lt; 5.0, please use the last &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/tree/2.0-compat&#34;&gt;2.0 version&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read this Readme doc&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage#how-to-use&#34;&gt;How to use section&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://sdwebimage.github.io/&#34;&gt;Latest Documentation&lt;/a&gt; and &lt;a href=&#34;http://cocoadocs.org/docsets/SDWebImage/&#34;&gt;CocoaDocs for old version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try the example by downloading the project from Github or even easier using CocoaPods try &lt;code&gt;pod try SDWebImage&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Installation-Guide&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/raw/master/Docs/SDWebImage-5.0-Migration-guide.md&#34;&gt;SDWebImage 5.0 Migration Guide&lt;/a&gt; to get an idea of the changes from 4.x to 5.x&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/raw/master/Docs/SDWebImage-4.0-Migration-guide.md&#34;&gt;SDWebImage 4.0 Migration Guide&lt;/a&gt; to get an idea of the changes from 3.x to 4.x&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Common-Problems&#34;&gt;Common Problems&lt;/a&gt; to find the solution for common problems&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki&#34;&gt;Wiki Page&lt;/a&gt; for more information such as &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who Uses It&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find out &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Who-Uses-SDWebImage&#34;&gt;who uses SDWebImage&lt;/a&gt; and add your app to the list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need help&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/sdwebimage&#34;&gt;Stack Overflow&lt;/a&gt;. (Tag &#39;sdwebimage&#39;)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;ask a general question&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/sdwebimage&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need IRC channel&lt;/strong&gt;, use &lt;a href=&#34;https://gitter.im/SDWebImage/community&#34;&gt;Gitter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;development contribution guide&lt;/strong&gt;, read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/How-to-Contribute&#34;&gt;How-To-Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;understanding code architecture&lt;/strong&gt;, read the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/5.6-Code-Architecture-Analysis&#34;&gt;Code Architecture Analysis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;SDWebImage/SDWebImage.h&amp;gt;&#xA;...&#xA;[imageView sd_setImageWithURL:[NSURL URLWithString:@&#34;http://www.domain.com/path/to/image.jpg&#34;]&#xA;             placeholderImage:[UIImage imageNamed:@&#34;placeholder.png&#34;]];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import SDWebImage&#xA;&#xA;imageView.sd_setImage(with: URL(string: &#34;http://www.domain.com/path/to/image.jpg&#34;), placeholderImage: UIImage(named: &#34;placeholder.png&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For details about how to use the library and clear examples, see &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/raw/master/Docs/HowToUse.md&#34;&gt;The detailed How to use&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Animated Images (GIF) support&lt;/h2&gt; &#xA;&lt;p&gt;In 5.0, we introduced a brand new mechanism for supporting animated images. This includes animated image loading, rendering, decoding, and also supports customizations (for advanced users).&lt;/p&gt; &#xA;&lt;p&gt;This animated image solution is available for &lt;code&gt;iOS&lt;/code&gt;/&lt;code&gt;tvOS&lt;/code&gt;/&lt;code&gt;macOS&lt;/code&gt;. The &lt;code&gt;SDAnimatedImage&lt;/code&gt; is subclass of &lt;code&gt;UIImage/NSImage&lt;/code&gt;, and &lt;code&gt;SDAnimatedImageView&lt;/code&gt; is subclass of &lt;code&gt;UIImageView/NSImageView&lt;/code&gt;, to make them compatible with the common frameworks APIs.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;SDAnimatedImageView&lt;/code&gt; supports the familiar image loading category methods, works like drop-in replacement for &lt;code&gt;UIImageView/NSImageView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t have &lt;code&gt;UIView&lt;/code&gt; (like &lt;code&gt;WatchKit&lt;/code&gt; or &lt;code&gt;CALayer&lt;/code&gt;)? you can still use &lt;code&gt;SDAnimatedPlayer&lt;/code&gt; the player engine for advanced playback and rendering.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#animated-image-50&#34;&gt;Animated Image&lt;/a&gt; for more detailed information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;SDAnimatedImageView *imageView = [SDAnimatedImageView new];&#xA;SDAnimatedImage *animatedImage = [SDAnimatedImage imageNamed:@&#34;image.gif&#34;];&#xA;imageView.image = animatedImage;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let imageView = SDAnimatedImageView()&#xA;let animatedImage = SDAnimatedImage(named: &#34;image.gif&#34;)&#xA;imageView.image = animatedImage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FLAnimatedImage integration has its own dedicated repo&lt;/h4&gt; &#xA;&lt;p&gt;In order to clean up things and make our core project do less things, we decided that the &lt;code&gt;FLAnimatedImage&lt;/code&gt; integration does not belong here. From 5.0, this will still be available, but under a dedicated repo &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageFLPlugin&#34;&gt;SDWebImageFLPlugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are four ways to use SDWebImage in your project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;using CocoaPods&lt;/li&gt; &#xA; &lt;li&gt;using Carthage&lt;/li&gt; &#xA; &lt;li&gt;using Swift Package Manager&lt;/li&gt; &#xA; &lt;li&gt;manual install (build frameworks or embed Xcode Project)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation with CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Objective-C, which automates and simplifies the process of using 3rd-party libraries in your projects. See the &lt;a href=&#34;http://cocoapods.org/#get_started&#34;&gt;Get Started&lt;/a&gt; section for more details.&lt;/p&gt; &#xA;&lt;h4&gt;Podfile&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;platform :ios, &#39;8.0&#39;&#xA;pod &#39;SDWebImage&#39;, &#39;~&amp;gt; 5.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Swift and static framework&lt;/h5&gt; &#xA;&lt;p&gt;Swift project previously had to use &lt;code&gt;use_frameworks!&lt;/code&gt; to make all Pods into dynamic framework to let CocoaPods work.&lt;/p&gt; &#xA;&lt;p&gt;However, starting with &lt;code&gt;CocoaPods 1.5.0+&lt;/code&gt; (with &lt;code&gt;Xcode 9+&lt;/code&gt;), which supports to build both Objective-C &amp;amp;&amp;amp; Swift code into static framework. You can use modular headers to use SDWebImage as static framework, without the need of &lt;code&gt;use_frameworks!&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;platform :ios, &#39;8.0&#39;&#xA;# Uncomment the next line when you want all Pods as static framework&#xA;# use_modular_headers!&#xA;pod &#39;SDWebImage&#39;, :modular_headers =&amp;gt; true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See more on &lt;a href=&#34;http://blog.cocoapods.org/CocoaPods-1.5.0/&#34;&gt;CocoaPods 1.5.0 — Swift Static Libraries&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If not, you still need to add &lt;code&gt;use_frameworks!&lt;/code&gt; to use SDWebImage as dynamic framework:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;platform :ios, &#39;8.0&#39;&#xA;use_frameworks!&#xA;pod &#39;SDWebImage&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Subspecs&lt;/h4&gt; &#xA;&lt;p&gt;There are 2 subspecs available now: &lt;code&gt;Core&lt;/code&gt; and &lt;code&gt;MapKit&lt;/code&gt; (this means you can install only some of the SDWebImage modules. By default, you get just &lt;code&gt;Core&lt;/code&gt;, so if you need &lt;code&gt;MapKit&lt;/code&gt;, you need to specify it).&lt;/p&gt; &#xA;&lt;p&gt;Podfile example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;SDWebImage/MapKit&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installation with Carthage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a lightweight dependency manager for Swift and Objective-C. It leverages CocoaTouch modules and is less invasive than CocoaPods.&lt;/p&gt; &#xA;&lt;p&gt;To install with carthage, follow the instruction on &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Carthage users can point to this repository and use whichever generated framework they&#39;d like: SDWebImage, SDWebImageMapKit or both.&lt;/p&gt; &#xA;&lt;p&gt;Make the following entry in your Cartfile: &lt;code&gt;github &#34;SDWebImage/SDWebImage&#34;&lt;/code&gt; Then run &lt;code&gt;carthage update&lt;/code&gt; If this is your first time using Carthage in the project, you&#39;ll need to go through some additional steps as explained &lt;a href=&#34;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&#34;&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: At this time, Carthage does not provide a way to build only specific repository subcomponents (or equivalent of CocoaPods&#39;s subspecs). All components and their dependencies will be built with the above command. However, you don&#39;t need to copy frameworks you aren&#39;t using into your project. For instance, if you aren&#39;t using &lt;code&gt;SDWebImageMapKit&lt;/code&gt;, feel free to delete that framework from the Carthage Build directory after &lt;code&gt;carthage update&lt;/code&gt; completes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation with Swift Package Manager (Xcode 11+)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; (SwiftPM) is a tool for managing the distribution of Swift code as well as C-family dependency. From Xcode 11, SwiftPM got natively integrated with Xcode.&lt;/p&gt; &#xA;&lt;p&gt;SDWebImage support SwiftPM from version 5.1.0. To use SwiftPM, you should use Xcode 11 to open your project. Click &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;Swift Packages&lt;/code&gt; -&amp;gt; &lt;code&gt;Add Package Dependency&lt;/code&gt;, enter &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage.git&#34;&gt;SDWebImage repo&#39;s URL&lt;/a&gt;. Or you can login Xcode with your GitHub account and just type &lt;code&gt;SDWebImage&lt;/code&gt; to search.&lt;/p&gt; &#xA;&lt;p&gt;After select the package, you can choose the dependency type (tagged version, branch or commit). Then Xcode will setup all the stuff for you.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a framework author and use SDWebImage as a dependency, update your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let package = Package(&#xA;    // 5.1.0 ..&amp;lt; 6.0.0&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/SDWebImage/SDWebImage.git&#34;, from: &#34;5.1.0&#34;)&#xA;    ],&#xA;    // ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation Guide&lt;/h3&gt; &#xA;&lt;p&gt;See more on &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Installation-Guide#manual-installation-guide&#34;&gt;Manual install Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Import headers in your source files&lt;/h3&gt; &#xA;&lt;p&gt;In the source files where you need to use the library, import the umbrella header file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;SDWebImage/SDWebImage.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s also recommend to use the module import syntax, available for CocoaPods(enable &lt;code&gt;modular_headers&lt;/code&gt;)/Carthage/SwiftPM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objecitivec&#34;&gt;@import SDWebImage;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build Project&lt;/h3&gt; &#xA;&lt;p&gt;At this point your workspace should build without error. If you are having problem, post to the Issue and the community can help you solve it.&lt;/p&gt; &#xA;&lt;h2&gt;Data Collection Practices&lt;/h2&gt; &#xA;&lt;p&gt;As required by the &lt;a href=&#34;https://developer.apple.com/app-store/app-privacy-details/&#34;&gt;App privacy details on the App Store&lt;/a&gt;, here&#39;s SDWebImage&#39;s list of &lt;a href=&#34;https://sdwebimage.github.io/DataCollection/index.html&#34;&gt;Data Collection Practices&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rs&#34;&gt;Olivier Poitrey&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Collaborators&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mythodeia&#34;&gt;Konstantinos K.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bpoplauschi&#34;&gt;Bogdan Poplauschi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skyline75489&#34;&gt;Chester Liu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dreampiggy&#34;&gt;DreamPiggy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhongwuzw&#34;&gt;Wu Zhong&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all the people who have already contributed to SDWebImage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/SDWebImage/contributors.svg?width=890&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;All source code is licensed under the &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;To learn about SDWebImage&#39;s architecture design for contribution, read &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/5.6-Code-Architecture-Analysis&#34;&gt;The Core of SDWebImage v5.6 Architecture&lt;/a&gt;. Thanks @looseyi for the post and translation.&lt;/p&gt; &#xA;&lt;h4&gt;High Level Diagram&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageHighLevelDiagram.jpeg&#34; title=&#34;SDWebImage high level diagram&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Overall Class Diagram&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageClassDiagram.png&#34; title=&#34;SDWebImage overall class diagram&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Top Level API Diagram&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageTopLevelClassDiagram.png&#34; title=&#34;SDWebImage top level API diagram&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Main Sequence Diagram&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageSequenceDiagram.png&#34; title=&#34;SDWebImage sequence diagram&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;More detailed diagrams&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageManagerClassDiagram.png&#34;&gt;Manager API Diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageCodersClassDiagram.png&#34;&gt;Coders API Diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageLoaderClassDiagram.png&#34;&gt;Loader API Diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImage/master/Docs/Diagrams/SDWebImageCacheClassDiagram.png&#34;&gt;Cache API Diagram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>insoxin/imaotai</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/insoxin/imaotai</id>
    <link href="https://github.com/insoxin/imaotai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;i茅台app 每日自动预约 抢茅台&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;imaotai&lt;/h1&gt; &#xA;&lt;p&gt;i茅台app 每日自动预约 抢茅台&lt;/p&gt; &#xA;&lt;p&gt;软件免费,无任何盈利 不要相信任何收费.唯一更新地址&lt;a href=&#34;https://github.com/insoxin/imaotai/&#34;&gt;https://github.com/insoxin/imaotai/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;h2&gt;1.拉取镜像&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;docker pull insoxin/imaotai:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2.创建容器&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;docker run -dit --name imaotai -p 1499:1499 -v $PWD/imaotai/config:/go/src/imaotai/config --restart unless-stopped insoxin/imaotai:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3.配置参数&lt;/h2&gt; &#xA;&lt;h3&gt;配置config.json&lt;/h3&gt; &#xA;&lt;p&gt;下载下载&lt;a href=&#34;https://github.com/insoxin/imaotai/raw/main/config/config.json&#34;&gt;https://github.com/insoxin/imaotai/blob/main/config/config.json&lt;/a&gt; 至本地 /root/imaotai/config/config.json&lt;/p&gt; &#xA;&lt;p&gt;修改本地/root/imaotai/config/config.json参数&lt;/p&gt; &#xA;&lt;p&gt;User-Agent,Client_Secret,Cookie.必填&lt;/p&gt; &#xA;&lt;p&gt;还有经纬度不要默认(APP数据以高德地图为准) 程序会就近预约最近距离店铺 若不想预约太远店铺,可设置GeoKM参数 默认0无限制&lt;/p&gt; &#xA;&lt;p&gt;其他配置不懂的默认即可&lt;/p&gt; &#xA;&lt;p&gt;默认每天九点执行(淘宝时间库),预约抢购页面获取到的前四个商品.&lt;/p&gt; &#xA;&lt;h3&gt;配置sendNotify.js 通知&lt;/h3&gt; &#xA;&lt;p&gt;下载&lt;a href=&#34;https://github.com/insoxin/imaotai/raw/main/config/sendNotify.js&#34;&gt;https://github.com/insoxin/imaotai/blob/main/config/sendNotify.js&lt;/a&gt; 至本地/root/imaotai/config/sendNotify.js&lt;/p&gt; &#xA;&lt;p&gt;sendNotify.js是通知文件按需修改&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Main&#34;: {&#xA;    &#34;Title&#34;: &#34;insoxin/imaotai&#34;,&#xA;    &#34;Open&#34;: &#34;1,2,3,4&#34;,&#xA;    &#34;cron&#34;: &#34;0 0 9 * * *&#34;,&#xA;    &#34;Tzone&#34;: &#34;http://api.m.taobao.com/rest/api3.do?api=mtop.common.getTimestamp&#34;,&#xA;    &#34;MT-APP-Version&#34;: &#34;1.0.0&#34;,&#xA;    &#34;GeoN&#34;: &#34;26.598194&#34;,&#xA;    &#34;GeoE&#34;: &#34;106.707410&#34;,&#xA;    &#34;GeoKM&#34;:&#34;0&#34;,&#xA;    &#34;sendNotify&#34;: &#34;/config/sendNotify.js&#34;,&#xA;    &#34;oksendNotify&#34;: &#34;true&#34;&#xA;  },&#xA;  &#34;user&#34;: {&#xA;    &#34;Cookie&#34;: &#34;&#34;,&#xA;    &#34;Origin&#34;: &#34;https://h5.moutai519.com.cn&#34;,&#xA;    &#34;Client_Secret&#34;: &#34;aaa&#34;,&#xA;    &#34;User-Agent&#34;: &#34;Mozilla/5.0 (iPhone; CPU iPhone OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 moutaiapp/1.0.6 device-id/insoxin/imaotai&#34;&#xA;  },&#xA;  &#34;Notice&#34;: &#34;通知中的标题&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;4.重启 imaotai&lt;/h2&gt; &#xA;&lt;h2&gt;5.点个star 再进 &lt;a href=&#34;https://github.com/insoxin/&#34;&gt;https://github.com/insoxin/&lt;/a&gt; 点follow 关注一下 项目被ban了 我会第一时间更新 新项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://blog.isoyu.com/wp-content/uploads/2022/04/2022040300072260.jpg&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openid/AppAuth-iOS</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/openid/AppAuth-iOS</id>
    <link href="https://github.com/openid/AppAuth-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS and macOS SDK for communicating with OAuth 2.0 and OpenID Connect providers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://rawgit.com/openid/AppAuth-iOS/master/appauth_lockup.svg?sanitize=true&#34; alt=&#34;AppAuth for iOS and macOS&#34;&gt; &lt;a href=&#34;https://github.com/openid/AppAuth-iOS/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/openid/AppAuth-iOS/actions/workflows/tests.yml/badge.svg?event=push&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/openid/AppAuth-iOS&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/openid/AppAuth-iOS/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swift.org/package-manager&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-compatible-brightgreen.svg?style=flat&#34; alt=&#34;SwiftPM compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/AppAuth&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AppAuth.svg?style=flat&#34; alt=&#34;Pod Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openid/AppAuth-iOS/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/AppAuth.svg?style=flat&#34; alt=&#34;Pod License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/AppAuth&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/AppAuth.svg?style=flat&#34; alt=&#34;Pod Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developer.apple.com/documentation/xcode/creating_a_mac_version_of_your_ipad_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Catalyst-compatible-brightgreen.svg?style=flat&#34; alt=&#34;Catalyst compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AppAuth for iOS and macOS, and tvOS is a client SDK for communicating with &lt;a href=&#34;https://tools.ietf.org/html/rfc6749&#34;&gt;OAuth 2.0&lt;/a&gt; and &lt;a href=&#34;http://openid.net/specs/openid-connect-core-1_0.html&#34;&gt;OpenID Connect&lt;/a&gt; providers. It strives to directly map the requests and responses of those specifications, while following the idiomatic style of the implementation language. In addition to mapping the raw protocol flows, convenience methods are available to assist with common tasks like performing an action with fresh tokens.&lt;/p&gt; &#xA;&lt;p&gt;It follows the best practices set out in &lt;a href=&#34;https://tools.ietf.org/html/rfc8252&#34;&gt;RFC 8252&amp;nbsp;- OAuth 2.0 for Native Apps&lt;/a&gt; including using &lt;code&gt;SFAuthenticationSession&lt;/code&gt; and &lt;code&gt;SFSafariViewController&lt;/code&gt; on iOS for the auth request. &lt;code&gt;UIWebView&lt;/code&gt; and &lt;code&gt;WKWebView&lt;/code&gt; are explicitly &lt;em&gt;not&lt;/em&gt; supported due to the security and usability reasons explained in &lt;a href=&#34;https://tools.ietf.org/html/rfc8252#section-8.12&#34;&gt;Section 8.12 of RFC 8252&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It also supports the &lt;a href=&#34;https://tools.ietf.org/html/rfc7636&#34;&gt;PKCE&lt;/a&gt; extension to OAuth, which was created to secure authorization codes in public clients when custom URI scheme redirects are used. The library is friendly to other extensions (standard or otherwise), with the ability to handle additional params in all protocol requests and responses.&lt;/p&gt; &#xA;&lt;p&gt;For tvOS, AppAuth implements &lt;a href=&#34;https://tools.ietf.org/html/rfc8628&#34;&gt;OAuth 2.0 Device Authorization Grant &lt;/a&gt; to allow for tvOS sign-ins through a secondary device.&lt;/p&gt; &#xA;&lt;h2&gt;Specification&lt;/h2&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;h4&gt;Supported Versions&lt;/h4&gt; &#xA;&lt;p&gt;AppAuth supports iOS 7 and above.&lt;/p&gt; &#xA;&lt;p&gt;iOS 9+ uses the in-app browser tab pattern (via &lt;code&gt;SFSafariViewController&lt;/code&gt;), and falls back to the system browser (mobile Safari) on earlier versions.&lt;/p&gt; &#xA;&lt;h4&gt;Authorization Server Requirements&lt;/h4&gt; &#xA;&lt;p&gt;Both Custom URI Schemes (all supported versions of iOS) and Universal Links (iOS 9+) can be used with the library.&lt;/p&gt; &#xA;&lt;p&gt;In general, AppAuth can work with any authorization server that supports native apps, as documented in &lt;a href=&#34;https://tools.ietf.org/html/rfc8252&#34;&gt;RFC 8252&lt;/a&gt;, either through custom URI scheme redirects, or universal links. Authorization servers that assume all clients are web-based, or require clients to maintain confidentiality of the client secrets may not work well.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;h4&gt;Supported Versions&lt;/h4&gt; &#xA;&lt;p&gt;AppAuth supports macOS (OS X) 10.9 and above.&lt;/p&gt; &#xA;&lt;h4&gt;Authorization Server Requirements&lt;/h4&gt; &#xA;&lt;p&gt;AppAuth for macOS supports both custom schemes; a loopback HTTP redirects via a small embedded server.&lt;/p&gt; &#xA;&lt;p&gt;In general, AppAuth can work with any authorization server that supports native apps, as documented in &lt;a href=&#34;https://tools.ietf.org/html/rfc8252&#34;&gt;RFC 8252&lt;/a&gt;; either through custom URI schemes, or loopback HTTP redirects. Authorization servers that assume all clients are web-based, or require clients to maintain confidentiality of the client secrets may not work well.&lt;/p&gt; &#xA;&lt;h3&gt;tvOS&lt;/h3&gt; &#xA;&lt;h4&gt;Supported Versions&lt;/h4&gt; &#xA;&lt;p&gt;AppAuth supports tvOS 9.0 and above. Please note that while it is possible to run the standard AppAuth library on tvOS, the documentation below describes implementing &lt;a href=&#34;https://tools.ietf.org/html/rfc8628&#34;&gt;OAuth 2.0 Device Authorization Grant&lt;/a&gt; (AppAuthTV).&lt;/p&gt; &#xA;&lt;h4&gt;Authorization Server Requirements&lt;/h4&gt; &#xA;&lt;p&gt;AppAuthTV is designed for servers that support the device authorization flow as documented in &lt;a href=&#34;https://tools.ietf.org/html/rfc8628&#34;&gt;RFC 8628&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Try&lt;/h2&gt; &#xA;&lt;p&gt;Want to try out AppAuth? Just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod try AppAuth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/openid/AppAuth-iOS/master/Examples/README.md&#34;&gt;Examples/README.md&lt;/a&gt; to configure with your own OAuth client (you need to update three configuration points with your client info to try the demo).&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;AppAuth supports four options for dependency management.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html&#34;&gt;CocoaPods&lt;/a&gt;, add the following line to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;AppAuth&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tvOS:&lt;/strong&gt; Use the &lt;code&gt;TV&lt;/code&gt; subspec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;AppAuth/TV&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://swift.org/package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;, add the following &lt;code&gt;dependency&lt;/code&gt; to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/openid/AppAuth-iOS.git&#34;, .upToNextMajor(from: &#34;1.3.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;tvOS:&lt;/strong&gt; Use the &lt;code&gt;AppAuthTV&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;openid/AppAuth-iOS&#34; &#34;master&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;carthage bootstrap&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tvOS:&lt;/strong&gt; Use the &lt;code&gt;AppAuthTV&lt;/code&gt; framework.&lt;/p&gt; &#xA;&lt;h3&gt;Static Library&lt;/h3&gt; &#xA;&lt;p&gt;You can also use AppAuth as a static library. This requires linking the library and your project, and including the headers. Here is a suggested configuration:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create an Xcode Workspace.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;AppAuth.xcodeproj&lt;/code&gt; to your Workspace.&lt;/li&gt; &#xA; &lt;li&gt;Include libAppAuth as a linked library for your target (in the &#34;General -&amp;gt; Linked Framework and Libraries&#34; section of your target).&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;AppAuth-iOS/Source&lt;/code&gt; to your search paths of your target (&#34;Build Settings -&amp;gt; &#34;Header Search Paths&#34;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: There is no static library for AppAuthTV.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Auth Flow&lt;/h2&gt; &#xA;&lt;p&gt;AppAuth supports both manual interaction with the authorization server where you need to perform your own token exchanges, as well as convenience methods that perform some of this logic for you. This example uses the convenience method, which returns either an &lt;code&gt;OIDAuthState&lt;/code&gt; object, or an error.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;OIDAuthState&lt;/code&gt; is a class that keeps track of the authorization and token requests and responses, and provides a convenience method to call an API with fresh tokens. This is the only object that you need to serialize to retain the authorization state of the session.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can configure AppAuth by specifying the endpoints directly:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSURL *authorizationEndpoint =&#xA;    [NSURL URLWithString:@&#34;https://accounts.google.com/o/oauth2/v2/auth&#34;];&#xA;NSURL *tokenEndpoint =&#xA;    [NSURL URLWithString:@&#34;https://www.googleapis.com/oauth2/v4/token&#34;];&#xA;&#xA;OIDServiceConfiguration *configuration =&#xA;    [[OIDServiceConfiguration alloc]&#xA;        initWithAuthorizationEndpoint:authorizationEndpoint&#xA;                        tokenEndpoint:tokenEndpoint];&#xA;&#xA;// perform the auth request...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let authorizationEndpoint = URL(string: &#34;https://accounts.google.com/o/oauth2/v2/auth&#34;)!&#xA;let tokenEndpoint = URL(string: &#34;https://www.googleapis.com/oauth2/v4/token&#34;)!&#xA;let configuration = OIDServiceConfiguration(authorizationEndpoint: authorizationEndpoint,&#xA;                                            tokenEndpoint: tokenEndpoint)&#xA;&#xA;// perform the auth request...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;tvOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSURL *deviceAuthorizationEndpoint =&#xA;    [NSURL URLWithString:@&#34;https://oauth2.googleapis.com/device/code&#34;];&#xA;NSURL *tokenEndpoint =&#xA;    [NSURL URLWithString:@&#34;https://www.googleapis.com/oauth2/v4/token&#34;];&#xA;&#xA;OIDTVServiceConfiguration *configuration =&#xA;    [[OIDTVServiceConfiguration alloc]&#xA;        initWithDeviceAuthorizationEndpoint:deviceAuthorizationEndpoint&#xA;                              tokenEndpoint:tokenEndpoint];&#xA;&#xA;// perform the auth request...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or through discovery:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSURL *issuer = [NSURL URLWithString:@&#34;https://accounts.google.com&#34;];&#xA;&#xA;[OIDAuthorizationService discoverServiceConfigurationForIssuer:issuer&#xA;    completion:^(OIDServiceConfiguration *_Nullable configuration,&#xA;                 NSError *_Nullable error) {&#xA;&#xA;  if (!configuration) {&#xA;    NSLog(@&#34;Error retrieving discovery document: %@&#34;,&#xA;          [error localizedDescription]);&#xA;    return;&#xA;  }&#xA;&#xA;  // perform the auth request...&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let issuer = URL(string: &#34;https://accounts.google.com&#34;)!&#xA;&#xA;// discovers endpoints&#xA;OIDAuthorizationService.discoverConfiguration(forIssuer: issuer) { configuration, error in&#xA;  guard let config = configuration else {&#xA;    print(&#34;Error retrieving discovery document: \(error?.localizedDescription ?? &#34;Unknown error&#34;)&#34;)&#xA;    return&#xA;  }&#xA;&#xA;  // perform the auth request...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;tvOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSURL *issuer = [NSURL URLWithString:@&#34;https://accounts.google.com&#34;];&#xA;&#xA;[OIDTVAuthorizationService discoverServiceConfigurationForIssuer:issuer&#xA;    completion:^(OIDTVServiceConfiguration *_Nullable configuration,&#xA;                 NSError *_Nullable error) {&#xA;&#xA;  if (!configuration) {&#xA;    NSLog(@&#34;Error retrieving discovery document: %@&#34;,&#xA;          [error localizedDescription]);&#xA;    return;&#xA;  }&#xA;&#xA;  // perform the auth request...&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authorizing –&amp;nbsp;iOS&lt;/h3&gt; &#xA;&lt;p&gt;First, you need to have a property in your &lt;code&gt;UIApplicationDelegate&lt;/code&gt; implementation to hold the session, in order to continue the authorization flow from the redirect. In this example, the implementation of this delegate is a class named &lt;code&gt;AppDelegate&lt;/code&gt;, if your app&#39;s application delegate has a different name, please update the class name in samples below accordingly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@interface AppDelegate : UIResponder &amp;lt;UIApplicationDelegate&amp;gt;&#xA;// property of the app&#39;s AppDelegate&#xA;@property(nonatomic, strong, nullable) id&amp;lt;OIDExternalUserAgentSession&amp;gt; currentAuthorizationFlow;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class AppDelegate: UIResponder, UIApplicationDelegate {&#xA;  // property of the app&#39;s AppDelegate&#xA;  var currentAuthorizationFlow: OIDExternalUserAgentSession?&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And your main class, a property to store the auth state:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// property of the containing class&#xA;@property(nonatomic, strong, nullable) OIDAuthState *authState;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// property of the containing class&#xA;private var authState: OIDAuthState?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, initiate the authorization request. By using the &lt;code&gt;authStateByPresentingAuthorizationRequest&lt;/code&gt; convenience method, the token exchange will be performed automatically, and everything will be protected with PKCE (if the server supports it). AppAuth also lets you perform these requests manually. See the &lt;code&gt;authNoCodeExchange&lt;/code&gt; method in the included Example app for a demonstration:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// builds authentication request&#xA;OIDAuthorizationRequest *request =&#xA;    [[OIDAuthorizationRequest alloc] initWithConfiguration:configuration&#xA;                                                  clientId:kClientID&#xA;                                                    scopes:@[OIDScopeOpenID,&#xA;                                                             OIDScopeProfile]&#xA;                                               redirectURL:kRedirectURI&#xA;                                              responseType:OIDResponseTypeCode&#xA;                                      additionalParameters:nil];&#xA;&#xA;// performs authentication request&#xA;AppDelegate *appDelegate =&#xA;    (AppDelegate *)[UIApplication sharedApplication].delegate;&#xA;appDelegate.currentAuthorizationFlow =&#xA;    [OIDAuthState authStateByPresentingAuthorizationRequest:request&#xA;        presentingViewController:self&#xA;                        callback:^(OIDAuthState *_Nullable authState,&#xA;                                   NSError *_Nullable error) {&#xA;  if (authState) {&#xA;    NSLog(@&#34;Got authorization tokens. Access token: %@&#34;,&#xA;          authState.lastTokenResponse.accessToken);&#xA;    [self setAuthState:authState];&#xA;  } else {&#xA;    NSLog(@&#34;Authorization error: %@&#34;, [error localizedDescription]);&#xA;    [self setAuthState:nil];&#xA;  }&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// builds authentication request&#xA;let request = OIDAuthorizationRequest(configuration: configuration,&#xA;                                      clientId: clientID,&#xA;                                      clientSecret: clientSecret,&#xA;                                      scopes: [OIDScopeOpenID, OIDScopeProfile],&#xA;                                      redirectURL: redirectURI,&#xA;                                      responseType: OIDResponseTypeCode,&#xA;                                      additionalParameters: nil)&#xA;&#xA;// performs authentication request&#xA;print(&#34;Initiating authorization request with scope: \(request.scope ?? &#34;nil&#34;)&#34;)&#xA;&#xA;let appDelegate = UIApplication.shared.delegate as! AppDelegate&#xA;&#xA;appDelegate.currentAuthorizationFlow =&#xA;    OIDAuthState.authState(byPresenting: request, presenting: self) { authState, error in&#xA;  if let authState = authState {&#xA;    self.setAuthState(authState)&#xA;    print(&#34;Got authorization tokens. Access token: &#34; +&#xA;          &#34;\(authState.lastTokenResponse?.accessToken ?? &#34;nil&#34;)&#34;)&#xA;  } else {&#xA;    print(&#34;Authorization error: \(error?.localizedDescription ?? &#34;Unknown error&#34;)&#34;)&#xA;    self.setAuthState(nil)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Handling the Redirect&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The authorization response URL is returned to the app via the iOS openURL app delegate method, so you need to pipe this through to the current authorization session (created in the previous session):&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)app&#xA;            openURL:(NSURL *)url&#xA;            options:(NSDictionary&amp;lt;NSString *, id&amp;gt; *)options {&#xA;  // Sends the URL to the current authorization flow (if any) which will&#xA;  // process it if it relates to an authorization response.&#xA;  if ([_currentAuthorizationFlow resumeExternalUserAgentFlowWithURL:url]) {&#xA;    _currentAuthorizationFlow = nil;&#xA;    return YES;&#xA;  }&#xA;&#xA;  // Your additional URL handling (if any) goes here.&#xA;&#xA;  return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func application(_ app: UIApplication,&#xA;                 open url: URL,&#xA;                 options: [UIApplicationOpenURLOptionsKey : Any] = [:]) -&amp;gt; Bool {&#xA;  // Sends the URL to the current authorization flow (if any) which will&#xA;  // process it if it relates to an authorization response.&#xA;  if let authorizationFlow = self.currentAuthorizationFlow,&#xA;                             authorizationFlow.resumeExternalUserAgentFlow(with: url) {&#xA;    self.currentAuthorizationFlow = nil&#xA;    return true&#xA;  }&#xA;&#xA;  // Your additional URL handling (if any)&#xA;&#xA;  return false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authorizing –&amp;nbsp;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;On macOS, the most popular way to get the authorization response redirect is to start a local HTTP server on the loopback interface (limited to incoming requests from the user&#39;s machine only). When the authorization is complete, the user is redirected to that local server, and the authorization response can be processed by the app. AppAuth takes care of managing the local HTTP server lifecycle for you.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;&lt;span&gt;💡&lt;/span&gt; Alternative: Custom URI Schemes&lt;/h4&gt; &#xA; &lt;p&gt;Custom URI schemes are also supported on macOS, but some browsers display an interstitial, which reduces the usability. For an example on using custom URI schemes with macOS, See &lt;code&gt;Example-Mac&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To receive the authorization response using a local HTTP server, first you need to have an instance variable in your main class to retain the HTTP redirect handler:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;OIDRedirectHTTPHandler *_redirectHTTPHandler;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, as the port used by the local HTTP server varies, you need to start it before building the authorization request, in order to get the exact redirect URI to use:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;static NSString *const kSuccessURLString =&#xA;    @&#34;http://openid.github.io/AppAuth-iOS/redirect/&#34;;&#xA;NSURL *successURL = [NSURL URLWithString:kSuccessURLString];&#xA;&#xA;// Starts a loopback HTTP redirect listener to receive the code.  This needs to be started first,&#xA;// as the exact redirect URI (including port) must be passed in the authorization request.&#xA;_redirectHTTPHandler = [[OIDRedirectHTTPHandler alloc] initWithSuccessURL:successURL];&#xA;NSURL *redirectURI = [_redirectHTTPHandler startHTTPListener:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, initiate the authorization request. By using the &lt;code&gt;authStateByPresentingAuthorizationRequest&lt;/code&gt; convenience method, the token exchange will be performed automatically, and everything will be protected with PKCE (if the server supports it). By assigning the return value to the &lt;code&gt;OIDRedirectHTTPHandler&lt;/code&gt;&#39;s &lt;code&gt;currentAuthorizationFlow&lt;/code&gt;, the authorization will continue automatically once the user makes their choice:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// builds authentication request&#xA;OIDAuthorizationRequest *request =&#xA;    [[OIDAuthorizationRequest alloc] initWithConfiguration:configuration&#xA;                                                  clientId:kClientID&#xA;                                              clientSecret:kClientSecret&#xA;                                                    scopes:@[ OIDScopeOpenID ]&#xA;                                               redirectURL:redirectURI&#xA;                                              responseType:OIDResponseTypeCode&#xA;                                      additionalParameters:nil];&#xA;// performs authentication request&#xA;__weak __typeof(self) weakSelf = self;&#xA;_redirectHTTPHandler.currentAuthorizationFlow =&#xA;    [OIDAuthState authStateByPresentingAuthorizationRequest:request&#xA;                        callback:^(OIDAuthState *_Nullable authState,&#xA;                                   NSError *_Nullable error) {&#xA;  // Brings this app to the foreground.&#xA;  [[NSRunningApplication currentApplication]&#xA;      activateWithOptions:(NSApplicationActivateAllWindows |&#xA;                           NSApplicationActivateIgnoringOtherApps)];&#xA;&#xA;  // Processes the authorization response.&#xA;  if (authState) {&#xA;    NSLog(@&#34;Got authorization tokens. Access token: %@&#34;,&#xA;          authState.lastTokenResponse.accessToken);&#xA;  } else {&#xA;    NSLog(@&#34;Authorization error: %@&#34;, error.localizedDescription);&#xA;  }&#xA;  [weakSelf setAuthState:authState];&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authorizing –&amp;nbsp;tvOS&lt;/h3&gt; &#xA;&lt;p&gt;Ensure that your main class is a delegate of &lt;code&gt;OIDAuthStateChangeDelegate&lt;/code&gt;, &lt;code&gt;OIDAuthStateErrorDelegate&lt;/code&gt;, implement the corresponding methods, and include the following property and instance variable:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// property of the containing class&#xA;@property(nonatomic, strong, nullable) OIDAuthState *authState;&#xA;&#xA;// instance variable of the containing class&#xA;OIDTVAuthorizationCancelBlock _cancelBlock;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, build and perform the authorization request.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// builds authentication request&#xA;__weak __typeof(self) weakSelf = self;&#xA;&#xA;OIDTVAuthorizationRequest *request =&#xA;    [[OIDTVAuthorizationRequest alloc] initWithConfiguration:configuration&#xA;                                                    clientId:kClientID&#xA;                                                clientSecret:kClientSecret&#xA;                                                      scopes:@[ OIDScopeOpenID, OIDScopeProfile ]&#xA;                                        additionalParameters:nil];&#xA;&#xA;// performs authentication request&#xA;OIDTVAuthorizationInitialization initBlock =&#xA;    ^(OIDTVAuthorizationResponse *_Nullable response, NSError *_Nullable error) {&#xA;      if (response) {&#xA;        // process authorization response&#xA;        NSLog(@&#34;Got authorization response: %@&#34;, response);&#xA;      } else {&#xA;        // handle initialization error&#xA;        NSLog(@&#34;Error: %@&#34;, error);&#xA;      }&#xA;    };&#xA;&#xA;OIDTVAuthorizationCompletion completionBlock =&#xA;    ^(OIDAuthState *_Nullable authState, NSError *_Nullable error) {&#xA;      weakSelf.signInView.hidden = YES;&#xA;      if (authState) {&#xA;        NSLog(@&#34;Token response: %@&#34;, authState.lastTokenResponse);&#xA;        [weakSelf setAuthState:authState];&#xA;      } else {&#xA;        NSLog(@&#34;Error: %@&#34;, error);&#xA;        [weakSelf setAuthState:nil];&#xA;      }&#xA;    };&#xA;&#xA;_cancelBlock = [OIDTVAuthorizationService authorizeTVRequest:request&#xA;                                              initialization:initBlock&#xA;                                                  completion:completionBlock];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Making API Calls&lt;/h3&gt; &#xA;&lt;p&gt;AppAuth gives you the raw token information, if you need it. However, we recommend that users of the &lt;code&gt;OIDAuthState&lt;/code&gt; convenience wrapper use the provided &lt;code&gt;performActionWithFreshTokens:&lt;/code&gt; method to perform their API calls to avoid needing to worry about token freshness:&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[_authState performActionWithFreshTokens:^(NSString *_Nonnull accessToken,&#xA;                                           NSString *_Nonnull idToken,&#xA;                                           NSError *_Nullable error) {&#xA;  if (error) {&#xA;    NSLog(@&#34;Error fetching fresh tokens: %@&#34;, [error localizedDescription]);&#xA;    return;&#xA;  }&#xA;&#xA;  // perform your API request using the tokens&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let userinfoEndpoint = URL(string:&#34;https://openidconnect.googleapis.com/v1/userinfo&#34;)!&#xA;self.authState?.performAction() { (accessToken, idToken, error) in&#xA;&#xA;  if error != nil  {&#xA;    print(&#34;Error fetching fresh tokens: \(error?.localizedDescription ?? &#34;Unknown error&#34;)&#34;)&#xA;    return&#xA;  }&#xA;  guard let accessToken = accessToken else {&#xA;    return&#xA;  }&#xA;&#xA;  // Add Bearer token to request&#xA;  var urlRequest = URLRequest(url: userinfoEndpoint)&#xA;  urlRequest.allHTTPHeaderFields = [&#34;Authorization&#34;: &#34;Bearer \(accessToken)&#34;]&#xA;&#xA;  // Perform request...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom User-Agents (iOS and macOS)&lt;/h3&gt; &#xA;&lt;p&gt;Each OAuth flow involves presenting an external user-agent to the user, that allows them to interact with the OAuth authorization server. Typical examples of a user-agent are the user&#39;s browser, or an in-app browser tab incarnation like &lt;code&gt;ASWebAuthenticationSession&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;p&gt;AppAuth ships with several implementations of an external user-agent out of the box, including defaults for iOS and macOS suitable for most cases. The default user-agents typically share persistent cookies with the system default browser, to improve the chance that the user doesn&#39;t need to sign-in all over again.&lt;/p&gt; &#xA;&lt;p&gt;It is possible to change the user-agent that AppAuth uses, and even write your own - all without needing to fork the library.&lt;/p&gt; &#xA;&lt;p&gt;All implementations of the external user-agent, be they included or created by you need to conform to the &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/protocol_o_i_d_external_user_agent-p.html&#34;&gt;&lt;code&gt;OIDExternalUserAgent&lt;/code&gt;&lt;/a&gt; protocol.&lt;/p&gt; &#xA;&lt;p&gt;Instances of the &lt;code&gt;OIDExternalUserAgent&lt;/code&gt;are passed into &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/interface_o_i_d_auth_state.html#ac762fe2bf95c116f0b437419be211fa1&#34;&gt;&lt;code&gt;OIDAuthState.authStateByPresentingAuthorizationRequest:externalUserAgent:callback&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/interface_o_i_d_authorization_service.html#ae551f8e6887366a46e49b09b37389b8f&#34;&gt;&lt;code&gt;OIDAuthorizationService.presentAuthorizationRequest:externalUserAgent:callback:&lt;/code&gt;&lt;/a&gt; rather than using the platform-specific convenience methods (which use the default user-agents for their respective platforms), like &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/category_o_i_d_auth_state_07_i_o_s_08.html#ae32fd0732cd3192cd5219f2655a4c85c&#34;&gt;&lt;code&gt;OIDAuthState.authStateByPresentingAuthorizationRequest:presentingViewController:callback:&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Popular use-cases for writing your own user-agent implementation include needing to style the user-agent in ways not supported by AppAuth, and implementing a fully custom flow with your own business logic. You can take one of the existing implementations as a starting point to copy, rename, and customize to your needs.&lt;/p&gt; &#xA;&lt;h4&gt;Custom Browser User-Agent&lt;/h4&gt; &#xA;&lt;p&gt;AppAuth for iOS includes a few extra user-agent implementations which you can try, or use as a reference for your own implementation. One of them, &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/interface_o_i_d_external_user_agent_i_o_s_custom_browser.html&#34;&gt;&lt;code&gt;OIDExternalUserAgentIOSCustomBrowser&lt;/code&gt;&lt;/a&gt; enables you to use a different browser for authentication, like Chrome for iOS or Firefox for iOS.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to configure AppAuth to use a custom browser using the &lt;code&gt;OIDExternalUserAgentIOSCustomBrowser&lt;/code&gt; user agent:&lt;/p&gt; &#xA;&lt;p&gt;First, add the following array to your &lt;a href=&#34;https://github.com/openid/AppAuth-iOS/raw/135f99d2cb4e9d18d310ac2588b905e612461561/Examples/Example-iOS_ObjC/Source/Info.plist#L34&#34;&gt;Info.plist&lt;/a&gt; (in XCode, right click -&amp;gt; Open As -&amp;gt; Source Code)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;key&amp;gt;LSApplicationQueriesSchemes&amp;lt;/key&amp;gt;&#xA;    &amp;lt;array&amp;gt;&#xA;        &amp;lt;string&amp;gt;googlechromes&amp;lt;/string&amp;gt;&#xA;        &amp;lt;string&amp;gt;opera-https&amp;lt;/string&amp;gt;&#xA;        &amp;lt;string&amp;gt;firefox&amp;lt;/string&amp;gt;&#xA;    &amp;lt;/array&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is required so that AppAuth can test for the browser and open the app store if it&#39;s not installed (the default behavior of this user-agent). You only need to include the URL scheme of the actual browser you intend to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Objective-C&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// performs authentication request&#xA;AppDelegate *appDelegate =&#xA;    (AppDelegate *)[UIApplication sharedApplication].delegate;&#xA;id&amp;lt;OIDExternalUserAgent&amp;gt; userAgent =&#xA;    [OIDExternalUserAgentIOSCustomBrowser CustomBrowserChrome];&#xA;appDelegate.currentAuthorizationFlow =&#xA;    [OIDAuthState authStateByPresentingAuthorizationRequest:request&#xA;        externalUserAgent:userAgent&#xA;                 callback:^(OIDAuthState *_Nullable authState,&#xA;                                   NSError *_Nullable error) {&#xA;  if (authState) {&#xA;    NSLog(@&#34;Got authorization tokens. Access token: %@&#34;,&#xA;          authState.lastTokenResponse.accessToken);&#xA;    [self setAuthState:authState];&#xA;  } else {&#xA;    NSLog(@&#34;Authorization error: %@&#34;, [error localizedDescription]);&#xA;    [self setAuthState:nil];&#xA;  }&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt;Swift&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {&#xA;            self.logMessage(&#34;Error accessing AppDelegate&#34;)&#xA;            return&#xA;        }&#xA;let userAgent = OIDExternalUserAgentIOSCustomBrowser.customBrowserChrome()&#x9;&#x9;&#xA;appDelegate.currentAuthorizationFlow = OIDAuthState.authState(byPresenting: request, externalUserAgent: userAgent) { authState, error in&#xA;    if let authState = authState {&#xA;        self.setAuthState(authState)&#xA;        self.logMessage(&#34;Got authorization tokens. Access token: \(authState.lastTokenResponse?.accessToken ?? &#34;DEFAULT_TOKEN&#34;)&#34;)&#xA;    } else {&#xA;        self.logMessage(&#34;Authorization error: \(error?.localizedDescription ?? &#34;DEFAULT_ERROR&#34;)&#34;)&#xA;        self.setAuthState(nil)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! With those two changes (which you can try on the included sample), AppAuth will use Chrome iOS for the authorization request (and open Chrome in the App Store if it&#39;s not installed).&lt;/p&gt; &#xA;&lt;p&gt;⚠️&lt;strong&gt;Note: the &lt;code&gt;OIDExternalUserAgentIOSCustomBrowser&lt;/code&gt; user-agent is not intended for consumer apps&lt;/strong&gt;. It is designed for advanced enterprise use-cases where the app developers have greater control over the operating environment and have special requirements that require a custom browser like Chrome.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t need to stop with the included external user agents either! Since the &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/protocol_o_i_d_external_user_agent-p.html&#34;&gt;&lt;code&gt;OIDExternalUserAgent&lt;/code&gt;&lt;/a&gt; protocol is part of AppAuth&#39;s public API, you can implement your own versions of it. In the above example, &lt;code&gt;userAgent = [OIDExternalUserAgentIOSCustomBrowser CustomBrowserChrome]&lt;/code&gt; would be replaced with an instantiation of your user-agent implementation.&lt;/p&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Browse the &lt;a href=&#34;http://openid.github.io/AppAuth-iOS/docs/latest/annotated.html&#34;&gt;API documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Included Samples&lt;/h2&gt; &#xA;&lt;p&gt;Sample apps that explore core AppAuth features are available for iOS, macOS and tvOS; follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/openid/AppAuth-iOS/master/Examples/README.md&#34;&gt;Examples/README.md&lt;/a&gt; to get started.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JackJiang2011/MobileIMSDK</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/JackJiang2011/MobileIMSDK</id>
    <link href="https://github.com/JackJiang2011/MobileIMSDK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个原创移动端IM通信层框架，轻量级、高度提炼，历经8年、久经考验。可能是市面上唯一同时支持UDP+TCP+WebSocket三种协议的同类开源框架，支持iOS、Android、Java、H5，服务端基于Netty。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; 特别提示：如Github下载慢，请往：&lt;a href=&#34;https://gitee.com/jackjiang/MobileIMSDK&#34;&gt;https://gitee.com/jackjiang/MobileIMSDK&lt;/a&gt;，代码完全同步，请放心下载 &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;一、快捷目录&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.1、理论资料&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/topic-tcpipvol1.html&#34;&gt;网络编程理论经典《TCP/IP详解》（在线阅读版）&lt;/a&gt; &lt;span&gt;🚩&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.2、相关资料&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-1270-1-1.html&#34;&gt;MobileIMSDK版本更新日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-60-1-1.html&#34;&gt;MobileIMSDK常见问题解答&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-57-1-1.html&#34;&gt;MobileIMSDK性能测试报告&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.3、产品案例&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-19-1-1.html&#34;&gt;RainbowChat体验版&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-20-1-1.html&#34;&gt;RainbowChat体验版截图预览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-21-1-1.html&#34;&gt;某Chat的部分非敏感运营数据&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.4、Demo安装&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-55-1-1.html&#34;&gt;客户端Demo安装和使用帮助(Android)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-54-1-1.html&#34;&gt;客户端Demo安装和使用帮助(iOS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-56-1-1.html&#34;&gt;客户端Demo安装和使用帮助(Java)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-3682-1-1.html&#34;&gt;客户端Demo演示和说明(H5)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-1272-1-1.html&#34;&gt;服务端Demo安装和使用帮助&lt;/a&gt; &lt;span&gt;🆕&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.5、开发指南&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-61-1-1.html&#34;&gt;客户端开发指南(Android)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-62-1-1.html&#34;&gt;客户端开发指南(iOS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-59-1-1.html&#34;&gt;客户端开发指南(Java)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-3686-1-1.html&#34;&gt;客户端开发指南(H5)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-63-1-1.html&#34;&gt;服务端开发指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.6、API文档&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;客户端SDK API文档(Android)：&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/android_tcp/&#34;&gt;TCP版&lt;/a&gt;、&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/android/&#34;&gt;UDP版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;客户端SDK API文档(iOS)：&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/ios_tcp/&#34;&gt;TCP版&lt;/a&gt;、&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/ios/&#34;&gt;UDP版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;客户端SDK API文档(Java)：&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/java_tcp/&#34;&gt;TCP版&lt;/a&gt;、&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/java/&#34;&gt;UDP版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;客户端SDK API文档(H5)：&lt;a href=&#34;http://www.52im.net/thread-3682-1-1.html&#34;&gt;点此进入&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/server/&#34;&gt;服务端SDK API文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.7、打包下载&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JackJiang2011/MobileIMSDK/releases/latest&#34;&gt;MobileIMSDK最新版打包下载&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;国外地址：&lt;a href=&#34;https://github.com/JackJiang2011/MobileIMSDK&#34;&gt;MobileIMSDK的Github地址&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;国内地址：&lt;a href=&#34;https://gitee.com/jackjiang/MobileIMSDK&#34;&gt;MobileIMSDK的码云gitee地址&lt;/a&gt;（访问速度快！）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;1.8、学习交流&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;技术交流社区：&lt;a href=&#34;http://www.52im.net/forum-89-1.html&#34;&gt;点此进入&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;常见问题讨论：&lt;a href=&#34;http://www.52im.net/forum.php?mod=collection&amp;amp;action=view&amp;amp;ctid=2&amp;amp;fromop=all&#34;&gt;点此进入&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;技术交流Q群：&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/qq_group_icon_16-16.png&#34; alt=&#34;&#34;&gt; &lt;code&gt;215477170&lt;/code&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;技术支持/合作/咨询请联系作者QQ：&lt;code&gt;413980957&lt;/code&gt; （&lt;a href=&#34;http://www.52im.net/thread-2792-1-1.html&#34;&gt;关于作者&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;）&lt;/li&gt; &#xA; &lt;li&gt;关注我的公众号：&lt;span&gt;👇&lt;/span&gt; &lt;span&gt;👇&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/my_mp_qr_400_b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;二、项目简介&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/github_header_logo_h.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;MobileIMSDK是一套专为移动端开发的原创IM通信层框架：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;历经8年、久经考验；&lt;/li&gt; &#xA; &lt;li&gt;超轻量级、高度提炼，lib包50KB以内；&lt;/li&gt; &#xA; &lt;li&gt;精心封装，一套API优雅支持&lt;b&gt;UDP&lt;/b&gt; 、&lt;b&gt;TCP&lt;/b&gt; 、&lt;b&gt;WebSocket&lt;/b&gt; 三种协议（可能是全网唯一开源的）；&lt;/li&gt; &#xA; &lt;li&gt;客户端支持iOS、Android、标准Java、H5(&lt;a href=&#34;http://www.52im.net/thread-3682-1-1.html&#34;&gt;暂未开源&lt;/a&gt;)、小程序(开发中..)、Uniap(开发中..)；&lt;/li&gt; &#xA; &lt;li&gt;服务端基于Netty，性能卓越、易于扩展；&lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;可与姊妹工程 &lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;MobileIMSDK-Web&lt;/a&gt; 无缝互通实现网页端聊天或推送等；&lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;可应用于跨设备、跨网络的聊天APP、企业OA、消息推送等各种场景。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;MobileIMSDK工程始于2013年10月（当前最新版是v6.1.2，&lt;a href=&#34;http://www.52im.net/thread-1270-1-1.html&#34;&gt;版本更新日志点此查看&lt;/a&gt; ），起初用作某自用产品的即时通讯底层，完全从零开发。&lt;br&gt; MobileIMSDK现已完全开源，希望对需要的人有所启发和帮助。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; 您可能需要：&lt;a href=&#34;http://www.52im.net/thread-60-1-1.html&#34;&gt;查看更多关于MobileIMSDK的疑问及解答&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; 另一姊妹工程：&lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;轻量级Web端即时通讯框架：MobileIMSDK-Web&lt;/a&gt; 也在持续更新中，专用于手机或PC端的网页聊天和消息推送等。&lt;/p&gt; &#xA;&lt;h1&gt;三、代码托管同步更新&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub.com&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;代码托管： &lt;a href=&#34;https://github.com/JackJiang2011/MobileIMSDK&#34;&gt;https://github.com/JackJiang2011/MobileIMSDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;技术社区： &lt;a href=&#34;http://www.52im.net/forum-89-1.html&#34;&gt;点击查看更多资料&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;码云gitee&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;代码托管： &lt;a href=&#34;https://gitee.com/jackjiang/MobileIMSDK&#34;&gt;https://gitee.com/jackjiang/MobileIMSDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;技术社区： &lt;a href=&#34;http://www.52im.net/forum-89-1.html&#34;&gt;点击查看更多资料&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MobileIMSDK版本更新日志：&lt;a href=&#34;http://www.52im.net/thread-1270-1-1.html&#34;&gt;点此查看&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;四、设计目标&lt;/h1&gt; &#xA;&lt;p&gt;让开发者专注于应用逻辑的开发，底层&lt;code&gt;复杂的即时通讯算法交由SDK开发人员&lt;/code&gt;，从而&lt;code&gt;解偶即时通讯应用开发的复杂性&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;五、框架组成&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;整套MobileIMSDK框架由以下6部分组成：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;b&gt;Android客户端SDK：&lt;/b&gt;用于Android版即时通讯客户端，支持Android 2.3及以上，&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/android_tcp/&#34;&gt;查看API文档&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;iOS客户端SDK：&lt;/b&gt;用于开发iOS版即时通讯客户端，支持iOS 8.0及以上，&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/ios_tcp/&#34;&gt;查看API文档&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;Java客户端SDK：&lt;/b&gt;用于开发跨平台的PC端即时通讯客户端，支持Java 1.6及以上，&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/java_tcp/&#34;&gt;查看API文档&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;H5客户端SDK：&lt;/b&gt;暂无开源版，&lt;a href=&#34;http://www.52im.net/thread-3682-1-1.html&#34;&gt;查看精编注释版&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;小程序端SDK：&lt;/b&gt;持续开发中，敬请关注；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;服务端SDK：&lt;/b&gt;用于开发即时通讯服务端，支持Java 1.7及以上版本，&lt;a href=&#34;http://docs.52im.net/extend/docs/api/mobileimsdk/server/&#34;&gt;查看API文档&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;b&gt;整套MobileIMSDK框架的架构组成：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/mibileimsdk_framework.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; &lt;b&gt;另外：&lt;/b&gt;MobileIMSDK可与姊妹工程 &lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;MobileIMSDK-Web&lt;/a&gt; 无缝互通，从而实现Web网页端聊天或推送等。&lt;/p&gt; &#xA;&lt;h1&gt;六、技术特征&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;久经考验：&lt;/b&gt;历经8年，从Andriod 2.3、iOS 5.0 时代持续升级至今（绝不烂尾）；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;超轻量级：&lt;/b&gt;高度提炼，lib包50KB以内；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;多种协议：&lt;/b&gt;可能是全网唯一开源可一套API同时支持UDP、TCP、WebSocket三种协议的同类框架 &lt;span&gt;🆕&lt;/span&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;多种网络：&lt;/b&gt;精心优化的TCP、UDP、WebSocket协议实现，可应用于卫星网、移动网、嵌入式物联网等场景；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;高效费比：&lt;/b&gt;独有的UDP协议实现，无连接特性，同等条件下可实现更高的网络负载和吞吐能力；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;消息走向：&lt;/b&gt;支持即时通讯技术中消息的所有可能走向，共3种（即C2C、C2S、S2C）；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;粘包半包：&lt;/b&gt;优雅解决各端的TCP经典粘包和半包问题，底层封装，应用层完全无感知；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;QoS机制：&lt;/b&gt;完善的消息送达保证机制（多重保障），不漏过每一条消息；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;健壮可靠：&lt;/b&gt;实践表明，非常适于在高延迟、跨洲际、不同网络制式环境中稳定、可靠地运行；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;断网恢复：&lt;/b&gt;拥有网络状况自动检测、断网自动治愈的能力；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;原创算法：&lt;/b&gt;核心算法和实现均为原创，保证了持续改进和提升的空间；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;多种模式：&lt;/b&gt;预设多种实时灵敏度模式，可根据不同场景控制即时性、流量和客户端电量消耗；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;数据压缩：&lt;/b&gt;自有协议实现，未来可自主定制数据压缩，灵活控制客户端的流量、服务端网络吞吐；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;高度封装：&lt;/b&gt;高度封装的API接口，保证了调用的简易性，也使得可应用于更多的应用场景；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;Web支持：&lt;/b&gt;可与姊妹工程 &lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;MobileIMSDK-Web&lt;/a&gt; 无缝互通实现网页端聊天或推送等；&lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;扩展性好：&lt;/b&gt;服务端基于Netty，继承了Netty的优秀高可扩展性；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;性能优异：&lt;/b&gt;服务端继承了Netty高性能、高吞吐特性，适用于高性能服务端场景。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;b&gt;MobileIMSDK 所支持的全部3种即时通讯消息走向分别是：&lt;/b&gt;&lt;br&gt; (1) Client to Client (C2C)：即由某客户端主动发起，接收者是另一客户端；&lt;br&gt; (2) Client to Server (C2S)：即由某客户端主动发起，接收者是服务端；&lt;br&gt; (3) Server to Client (S2C)：即由服务端主动发起，接收者是某客户端。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; 您可能需要：&lt;a href=&#34;http://www.52im.net/thread-60-1-1.html&#34;&gt;查看更多关于MobileIMSDK的疑问及解答&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;七、性能测试&lt;/h1&gt; &#xA;&lt;p&gt;压力测试表明，MobileIMSDK用于推送场景时，理论单机负载可接近千万级。用于聊天应用时，单机负载也可达数十万。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;当然，每款应用都有各自的特点和差异，请视具体场景具体评估之，测试数据仅供参考。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; 性能测试报告：&lt;a href=&#34;http://www.52im.net/thread-57-1-1.html&#34;&gt;点此查看&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;八、演示程序&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;b&gt;Android客户端 Demo：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-55-1-1.html&#34;&gt;点此安装和使用&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;iOS客户端 Demo：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-54-1-1.html&#34;&gt;点此安装和使用&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;Java客户端 Demo：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-56-1-1.html&#34;&gt;点此安装和使用&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;H5客户端 Demo：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-3682-1-1.html&#34;&gt;点此查看介绍&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;服务端 Demo：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-1272-1-1.html&#34;&gt;点此安装和使用&lt;/a&gt; &lt;span&gt;🆕&lt;/span&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;九、应用案例&lt;/h1&gt; &#xA;&lt;h4&gt;① 基于MobileIMSDK的产品级聊天APP：&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://www.52im.net/thread-19-1-1.html&#34;&gt;详细介绍&lt;/a&gt;、&lt;a href=&#34;http://www.52im.net/thread-19-1-1.html&#34;&gt;下载体验&lt;/a&gt; 或 &lt;a href=&#34;http://www.52im.net/thread-20-1-1.html&#34;&gt;查看运行截图&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;② MobileIMSDK在高网络延迟下的案例：&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;某款基于MobileIMSDK的商业商品，曾运营于跨洲际的复杂网络环境下，端到端通信延迟在洲际网络繁忙时可高达600ms以上（与服务端的单向延迟约为300ms左右，而通常大家访问国内主流门户的延迟约为20~50ms），某段时期的非敏感运营数据 &lt;a href=&#34;http://www.52im.net/forum.php?mod=viewthread&amp;amp;tid=21&amp;amp;page=1&amp;amp;extra=#pid35&#34;&gt;点此查看&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;十、打包下载（all in one）&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;📎&lt;/span&gt; ① 最新发布版（国外地址）：&lt;a href=&#34;https://github.com/JackJiang2011/MobileIMSDK/releases/latest&#34;&gt;Github打包下载&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📎&lt;/span&gt; ② 最新发布版（国内地址）：&lt;a href=&#34;https://gitee.com/jackjiang/MobileIMSDK/releases&#34;&gt;码云gitee打包下载&lt;/a&gt;（访问速度快！ &lt;span&gt;👈&lt;/span&gt;）&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;说明：最新发布版打包内容中，已包含完整的demo源码、sdk源码、api文档、编译后的分发包等。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;十一、典型应用场景&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; 场景1：聊天APP&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;应用说明：&lt;/b&gt;可用于开发类似于微信、QQ等聊天工具。&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;消息走向：&lt;/b&gt;需使用C2C、C2S、S2C全部类型。&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;特别说明：&lt;/b&gt;MobileIMSDK并未定义聊天应用的应用层逻辑和协议，开发者可自行定义并实现之。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; 场景2：消息推送&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;应用说明：&lt;/b&gt;可用于需要向客户端实时推送信息的各种类型APP。&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;消息走向：&lt;/b&gt;仅需使用S2C 1种消息走向，属MobileIMSDK的最简单应用场景。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; 场景3：企业OA&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;应用说明：&lt;/b&gt;可用于实现企业OA的指令、公文、申请等各种消息实时推送，极大提升用户体验，并可延伸至移动设备。&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;消息走向：&lt;/b&gt;仅需使用S2C 1种消息走向，属MobileIMSDK的最简单应用场景。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; 场景4：企业OA的增强型&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;应用说明：&lt;/b&gt;可用于实现企业OA中各种系统级、用户级消息的实时互动，充分利用即时通讯技术提升传统OA的价值。&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;消息走向：&lt;/b&gt;可使用C2C、C2S、S2C全部类型，这与聊天APP在很多方面已无差别，但企业OA有自已的用户关系管理模型和逻辑，较之全功能聊天APP要简单的多。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;十二、开发指南&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;b&gt;Android客户端开发指南：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-61-1-1.html&#34;&gt;点此查看&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;iOS客户端开发指南：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-62-1-1.html&#34;&gt;点此查看&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;Java客户端开发指南：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-59-1-1.html&#34;&gt;点此查看&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;H5客户端开发指南：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-3686-1-1.html&#34;&gt;点此查看&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;Server端开发指南：&lt;/b&gt;&lt;a href=&#34;http://www.52im.net/thread-63-1-1.html&#34;&gt;点此查看&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;十三、授权方式&lt;/h1&gt; &#xA;&lt;p&gt;你可永久免费且自由地使用MobileIMSDK，如：用于研究、学习、甚至商业用途， 但禁止在超越License约束内容的情况下用于商业用途等，请尊重知识产权。 更详细的授权说明，请见&lt;a href=&#34;http://www.52im.net/thread-52-1-1.html&#34;&gt;MobileIMSDK社区介绍贴&lt;/a&gt;中的“十二、授权方式”一节。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;b&gt;补充说明：&lt;/b&gt;如您还需获得更多技术支持或技术合作请联系作者，QQ：&lt;code&gt;413980957&lt;/code&gt;（&lt;span&gt;👉&lt;/span&gt; &lt;a href=&#34;http://www.52im.net/thread-2792-1-1.html&#34;&gt;关于作者&lt;/a&gt;）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;十四、联系方式&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;讨论学习和资料区：&lt;span&gt;🌎&lt;/span&gt; &lt;a href=&#34;http://www.52im.net/forum-89-1.html&#34;&gt;点此进入&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;即时通讯技术交流群：&lt;code&gt;215477170&lt;/code&gt; &lt;a target=&#34;_blank&#34; href=&#34;http://shang.qq.com/wpa/qunwpa?idkey=b05cf91f7b0aa8f00159793feb080c75f4fe0778b5b5385c5b8485905a2d8a4a&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://pub.idqqimg.com/wpa/images/group.png&#34; alt=&#34;即时通讯(IM/推送)开发2&#34; title=&#34;即时通讯(IM/推送)开发2&#34;&gt;&lt;/a&gt; （&lt;a href=&#34;http://www.52im.net/portal.php?mod=topic&amp;amp;topicid=2&#34;&gt;更多QQ群点此进入&lt;/a&gt;）；&lt;/li&gt; &#xA; &lt;li&gt;bug和建议请发送至：&lt;span&gt;💌&lt;/span&gt; &lt;code&gt;jb2011@163.com&lt;/code&gt;；&lt;/li&gt; &#xA; &lt;li&gt;技术培训/转让/合作/咨询等欢迎联系作者QQ：&lt;span&gt;🐧&lt;/span&gt; &lt;code&gt;413980957&lt;/code&gt;、微信：&lt;code&gt;hellojackjiang&lt;/code&gt; （&lt;span&gt;👉&lt;/span&gt; &lt;a href=&#34;http://www.52im.net/thread-2792-1-1.html&#34;&gt;关于作者&lt;/a&gt;）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;十五、捐助作者&lt;/h1&gt; &#xA;&lt;p&gt;优秀的开源需要您的支持才能走的更远，衷心感谢您的支持与理解，也希望您能从开源中收益。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;捐助链接： &lt;a href=&#34;http://www.52im.net/thread-411-1-1.html&#34;&gt;点此进入&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;十六、关注作者&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关于作者：&lt;a href=&#34;http://www.52im.net/thread-2792-1-1.html&#34;&gt;点击进入&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;推荐关注：&lt;a href=&#34;https://github.com/JackJiang2011/beautyeye&#34;&gt;BeautyEye工程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;博客地址：&lt;a href=&#34;http://www.52im.net/space-uid-1.html&#34;&gt;点击入进&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github主页：&lt;a href=&#34;https://github.com/JackJiang2011&#34;&gt;点击进入&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;我的公众号：&lt;span&gt;👇&lt;/span&gt; &lt;span&gt;👇&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/my_mp_qr_400_b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;附录1：Demo运行截图&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; MobileIMSDK Demo在Android和iOS 运行效果：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;安装和使用：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-55-1-1.html&#34;&gt;进入Android版Demo帮助页&lt;/a&gt;、&lt;a href=&#34;http://www.52im.net/thread-54-1-1.html&#34;&gt;进入iOS版Demo帮助页&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/andriod_demo_main.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/ios_demo_main.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/ios_android_real_run2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; MobileIMSDK Demo在Windows 运行效果：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;安装和使用：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-56-1-1.html&#34;&gt;进入Java版Demo帮助页&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/java_demo_main.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; MobileIMSDK Demo在Mac OS X 运行效果：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;安装和使用：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-56-1-1.html&#34;&gt;进入Java版Demo帮助页&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_screenshots/others/mac_real_run.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; MobileIMSDK-Web版客户端Demo运行效果：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;1）MobileIMSDK-Web Demo在手机端浏览器运行效果：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;查看MobileIMSDK-Web版详情&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/mibileimsdk_web_demo_on_mobile_browsers.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;2）MobileIMSDK-Web Demo在PC端多种主流浏览器的运行效果：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-959-1-1.html&#34;&gt;查看MobileIMSDK-Web版详情&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/mibileimsdk_web_demo_on_pc_browsers.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;附录2：基于MobileIMSDK的全功能IM产品【案例】&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;关于RainbowChat产品的更多资料请见：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-20-1-1.html&#34;&gt;RainbowChat产品的全部功能截图&lt;/a&gt; （真机实拍视频：&lt;a href=&#34;https://v.youku.com/v_show/id_XNDIzMzM4MzA3Mg==.html&#34;&gt;Andriod端&lt;/a&gt;、&lt;a href=&#34;https://v.youku.com/v_show/id_XNDcwMDA4MDQwMA==.html&#34;&gt;iOS端&lt;/a&gt;）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;span&gt;👉&lt;/span&gt; &lt;span&gt;👉&lt;/span&gt;【特别说明】：因github图片被墙，图未同步成功，请从 &lt;a href=&#34;http://www.52im.net/thread-20-1-1.html&#34;&gt;RainbowChat产品的全部功能截图&lt;/a&gt; 中查看！&lt;span&gt;👈&lt;/span&gt; &lt;span&gt;👈&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_2.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_03.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_04.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_05.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v4_6.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_v8_7.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;更多清晰运行截图请见：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-20-1-1.html&#34;&gt;RainbowCha产品的全部功能截图&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;附录3：基于MobileIMSDK-Web的网页端IM系统【案例】&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; RainbowChat-Web产品主界面：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;更多截图和视频：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-2470-1-1.html&#34;&gt;更多截图点此进入&lt;/a&gt;、&lt;a href=&#34;http://www.52im.net/thread-2491-1-1.html&#34;&gt;更多演示视频点此进入&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_web/rbchat_web_main_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; RainbowChat-Web产品主界面(聊天窗全屏时)：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;更多截图和视频：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-2470-1-1.html&#34;&gt;更多截图点此进入&lt;/a&gt;、&lt;a href=&#34;http://www.52im.net/thread-2491-1-1.html&#34;&gt;更多演示视频点此进入&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_web/rbchat_web_main_2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🚩&lt;/span&gt; RainbowChat-Web产品主界面(独立UI效果)：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;更多截图和视频：&lt;/code&gt;&lt;a href=&#34;http://www.52im.net/thread-2470-1-1.html&#34;&gt;更多截图点此进入&lt;/a&gt;、&lt;a href=&#34;http://www.52im.net/thread-2491-1-1.html&#34;&gt;更多演示视频点此进入&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jackimgs.52im.net/images/mobileimsdk/preview/more_products/rainbowchat_web/rbchat_web_main_0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/GoogleSignIn-iOS</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/google/GoogleSignIn-iOS</id>
    <link href="https://github.com/google/GoogleSignIn-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enables iOS and macOS apps to sign in with Google.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/GoogleSignIn&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/GoogleSignIn.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/GoogleSignIn&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/GoogleSignIn.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/GoogleSignIn&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/GoogleSignIn.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/GoogleSignIn-iOS/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/google/GoogleSignIn-iOS/actions/workflows/tests.yml/badge.svg?event=push&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Google Sign-In for iOS and macOS&lt;/h1&gt; &#xA;&lt;p&gt;Get users into your apps quickly and securely, using a registration system they already use and trust—their Google account.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://developers.google.com/identity/sign-in/ios/&#34;&gt;our developer site&lt;/a&gt; for integration instructions, documentation, support information, and terms of service.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Try either the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleSignIn-iOS/main/Samples/ObjC&#34;&gt;Objective-C&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleSignIn-iOS/main/Samples/Swift&#34;&gt;Swift&lt;/a&gt; sample app. For example, to demo the Objective-C sample project, you have three options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;&#39;s &lt;code&gt;try&lt;/code&gt; method:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod try GoogleSignIn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note, this will default to providing you with the Objective-C sample app.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using CocoaPod&#39;s &lt;code&gt;install&lt;/code&gt; method:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/google/GoogleSignIn-iOS&#xA;cd GoogleSignIn-iOS/Samples/ObjC/SignInSample/&#xA;pod install&#xA;open SignInSampleForPod.xcworkspace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/google/GoogleSignIn-iOS&#xA;open GoogleSignIn-iOS/Samples/ObjC/SignInSample/SignInSample.xcodeproj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to see a Swift example, take a look at &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleSignIn-iOS/main/Samples/Swift/DaysUntilBirthday&#34;&gt;Samples/Swift/DaysUntilBirthday&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add Google Sign-In to your own app by following our &lt;a href=&#34;https://developers.google.com/identity/sign-in/ios/start-integrating&#34;&gt;getting started guides&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://developers.google.com/identity/sign-in/ios/api/&#34;&gt;API reference&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Google Sign-In on macOS&lt;/h2&gt; &#xA;&lt;p&gt;Google Sign-In allows your users to sign-in to your native macOS app using their Google account and default browser. When building for macOS, the &lt;code&gt;signInWithConfiguration:&lt;/code&gt; and &lt;code&gt;addScopes:&lt;/code&gt; methods take a &lt;code&gt;presentingWindow:&lt;/code&gt; parameter in place of &lt;code&gt;presentingViewController:&lt;/code&gt;. Note that in order for your macOS app to store credientials via the Keychain on macOS, you will need to &lt;a href=&#34;https://developer.apple.com/support/code-signing/&#34;&gt;sign your app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mac Catalyst&lt;/h3&gt; &#xA;&lt;p&gt;Google Sign-In also supports iOS apps that are built for macOS via &lt;a href=&#34;https://developer.apple.com/mac-catalyst/&#34;&gt;Mac Catalyst&lt;/a&gt;. In order for your Mac Catalyst app to store credientials via the Keychain on macOS, you will need to &lt;a href=&#34;https://developer.apple.com/support/code-signing/&#34;&gt;sign your app&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>git-up/GitUp</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/git-up/GitUp</id>
    <link href="https://github.com/git-up/GitUp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Git interface you&#39;ve been missing all your life has finally arrived.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/git-up/GitUp&#34;&gt;&lt;img src=&#34;https://travis-ci.org/git-up/GitUp.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GitUp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Work quickly, safely, and without headaches. The Git interface you&#39;ve been missing all your life has finally arrived.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/JuQIxJu.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt;&lt;img src=&#34;https://i.imgur.com/9rgXktz.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Git recently celebrated its 10 years anniversary, but most engineers are still confused by its intricacy (3 of the &lt;a href=&#34;http://stackoverflow.com/questions?sort=votes&#34;&gt;top 5 questions of all time&lt;/a&gt; on Stack Overflow are Git related). Since Git turns even simple actions into mystifying commands (“git add” to stage versus “git reset HEAD” to unstage anyone?), it’s no surprise users waste time, get frustrated, distract the rest of their team for help, or worse, screw up their repo!&lt;/p&gt; &#xA;&lt;p&gt;GitUp is a bet to invent a new Git interaction model that lets engineers of all levels work quickly, safely, and without headaches. It&#39;s unlike any other Git client out there from the way it’s built (it interacts directly with the Git database on disk), to the way it works (you manipulate the repository graph instead of manipulating commits).&lt;/p&gt; &#xA;&lt;p&gt;With GitUp, you get a truly efficient Git client for Mac:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;live and interactive repo graph&lt;/strong&gt; (edit, reorder, fixup, merge commits…),&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unlimited undo / redo&lt;/strong&gt; of almost all operations (even rebases and merges),&lt;/li&gt; &#xA; &lt;li&gt;Time Machine like &lt;strong&gt;snapshots for 1-click rollbacks&lt;/strong&gt; to previous repo states,&lt;/li&gt; &#xA; &lt;li&gt;Features that don’t even exist natively in Git like a &lt;strong&gt;visual commit splitter&lt;/strong&gt; or a &lt;strong&gt;unified reflog browser&lt;/strong&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instant search across the entire repo&lt;/strong&gt; including diff contents,&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;ridiculously fast UI&lt;/strong&gt;, often faster than the command line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;GitUp was created by &lt;a href=&#34;https://github.com/swisspol&#34;&gt;@swisspol&lt;/a&gt; in late 2014 as a bet to reinvent the way developers interact with Git. After several months of work, it was made available in pre-release early 2015 and reached the &lt;a href=&#34;https://news.ycombinator.com/item?id=9653978&#34;&gt;top of Hacker News&lt;/a&gt; along with being &lt;a href=&#34;http://www.producthunt.com/tech/gitup-1&#34;&gt;featured by Product Hunt&lt;/a&gt; and &lt;a href=&#34;http://daringfireball.net/linked/2015/06/04/gitup&#34;&gt;Daring Fireball&lt;/a&gt;. 30,000 lines of code later, GitUp reached 1.0 mid-August 2015 and was released open source as a gift to the developer community.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Learn all about GitUp and download the latest release from &lt;a href=&#34;http://gitup.co&#34;&gt;http://gitup.co&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://github.com/git-up/GitUp/wiki&#34;&gt;docs&lt;/a&gt; and use &lt;a href=&#34;https://github.com/git-up/GitUp/issues&#34;&gt;GitHub Issues&lt;/a&gt; for support &amp;amp; feedback.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Releases notes are available at &lt;a href=&#34;https://github.com/git-up/GitUp/releases&#34;&gt;https://github.com/git-up/GitUp/releases&lt;/a&gt;. Builds tagged with a &lt;code&gt;v&lt;/code&gt; (e.g. &lt;code&gt;v1.2.3&lt;/code&gt;) are released on the &#34;Stable&#34; channel, while builds tagged with a &lt;code&gt;b&lt;/code&gt; (e.g. &lt;code&gt;b1234&lt;/code&gt;) are only released on the &#34;Continuous&#34; channel. You can change the update channel used by GitUp in the app preferences.&lt;/p&gt; &#xA;&lt;p&gt;To build GitUp yourself, simply run the command &lt;code&gt;git clone --recursive https://github.com/git-up/GitUp.git&lt;/code&gt; in Terminal, then open the &lt;code&gt;GitUp/GitUp.xcodeproj&lt;/code&gt; Xcode project and hit Run.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; If you do not have an Apple ID with a developer account for code signing Mac apps, the build will fail with a code signing error. Simply delete the &#34;Code Signing Identity&#34; build setting of the &#34;Application&#34; target to work around the issue:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/dWpJExk.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Alternatively&lt;/strong&gt;, if you do have a developer account, you can create the file &#34;Xcode-Configurations/DEVELOPMENT_TEAM.xcconfig&#34; with the following build setting as its content:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;DEVELOPMENT_TEAM = [Your TeamID]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For a more detailed description of this, you can have a look at the comments at the end of the file &#34;Xcode-Configurations/Base.xcconfig&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;GitUpKit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitUp is built as a thin layer on top of a reusable generic Git toolkit called &#34;GitUpKit&#34;. This means that you can use that same GitUpKit framework to build your very own Git UI!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;GitUpKit has a very different goal than &lt;a href=&#34;https://github.com/libgit2/objective-git&#34;&gt;ObjectiveGit&lt;/a&gt;. Instead of offering extensive raw bindings to &lt;a href=&#34;https://github.com/libgit2/libgit2&#34;&gt;libgit2&lt;/a&gt;, GitUpKit only uses a minimal subset of libgit2 and reimplements everything else on top of it (it has its own &#34;rebase engine&#34; for instance). This allows it to expose a very tight and consistent API, that completely follows Obj-C conventions and hides away the libgit2 complexity and sometimes inconsistencies. GitUpKit adds on top of that a number of exclusive and powerful features, from undo/redo and Time Machine like snapshots, to entire drop-in UI components.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The GitUpKit source code is organized as 2 independent layers communicating only through the use of public APIs:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Base Layer (depends on Foundation only and is compatible with OS X and iOS)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Core/&lt;/code&gt;: wrapper around the required minimal functionality of &lt;a href=&#34;https://github.com/libgit2/libgit2&#34;&gt;libgit2&lt;/a&gt;, on top of which is then implemented all the Git functionality required by GitUp (note that GitUp uses a &lt;a href=&#34;https://github.com/git-up/libgit2/tree/gitup&#34;&gt;slightly customized fork&lt;/a&gt; of libgit2)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Extensions/&lt;/code&gt;: categories on the &lt;code&gt;Core&lt;/code&gt; classes to add convenience features implemented only using the public APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;UI Layer (depends on AppKit and is compatible with OS X only)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Interface/&lt;/code&gt;: low-level view classes e.g. &lt;code&gt;GIGraphView&lt;/code&gt; to render the GitUp Map view&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Utilities/&lt;/code&gt;: interface utility classes e.g. the base view controller class &lt;code&gt;GIViewController&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Components/&lt;/code&gt;: reusable single-view view controllers e.g. &lt;code&gt;GIDiffContentsViewController&lt;/code&gt; to render a diff&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Views/&lt;/code&gt;: high-level reusable multi-views view controllers e.g. &lt;code&gt;GIAdvancedCommitViewController&lt;/code&gt; to implement the entire GitUp Advanced Commit view&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: If the preprocessor constant &lt;code&gt;DEBUG&lt;/code&gt; is defined to a non-zero value when building GitUpKit (this is the default when building in &#34;Debug&#34; configuration), a number of extra consistency checks are enabled at run time as well as extra logging. Be aware that this overhead can significantly affect performance.&lt;/p&gt; &#xA;&lt;h2&gt;GitUpKit API&lt;/h2&gt; &#xA;&lt;p&gt;Using the GitUpKit API should be pretty straightforward since it is organized by functionality (e.g. repository, branches, commits, interface components, etc...) and a best effort has been made to name functions clearly.&lt;/p&gt; &#xA;&lt;p&gt;Regarding the &#34;Core&#34; APIs, the best way to learn them is to peruse the associated unit tests - for instance see &lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/GitUpKit/Core/GCBranch-Tests.m&#34;&gt;the branch tests&lt;/a&gt; for the branch API.&lt;/p&gt; &#xA;&lt;p&gt;Here is some sample code to get you started (error handling is left as an exercise to the reader):&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Opening and browsing a repository:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Open repo&#xA;GCRepository* repo = [[GCRepository alloc] initWithExistingLocalRepository:&amp;lt;PATH&amp;gt; error:NULL];&#xA;&#xA;// Make sure repo is clean&#xA;assert([repo checkClean:kGCCleanCheckOption_IgnoreUntrackedFiles error:NULL]);&#xA;&#xA;// List all branches&#xA;NSArray* branches = [repo listAllBranches:NULL];&#xA;NSLog(@&#34;%@&#34;, branches);&#xA;&#xA;// Lookup HEAD&#xA;GCLocalBranch* headBranch;  // This would be nil if the HEAD is detached&#xA;GCCommit* headCommit;&#xA;[repo lookupHEADCurrentCommit:&amp;amp;headCommit branch:&amp;amp;headBranch error:NULL];&#xA;NSLog(@&#34;%@ = %@&#34;, headBranch, headCommit);&#xA;&#xA;// Load the *entire* repo history in memory for fast access, including all commits, branches and tags&#xA;GCHistory* history = [repo loadHistoryUsingSorting:kGCHistorySorting_ReverseChronological error:NULL];&#xA;assert(history);&#xA;NSLog(@&#34;%lu commits total&#34;, history.allCommits.count);&#xA;NSLog(@&#34;%@\n%@&#34;, history.rootCommits, history.leafCommits);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Modifying a repository:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Take a snapshot of the repo&#xA;GCSnapshot* snapshot = [repo takeSnapshot:NULL];&#xA;&#xA;// Create a new branch and check it out&#xA;GCLocalBranch* newBranch = [repo createLocalBranchFromCommit:headCommit withName:@&#34;temp&#34; force:NO error:NULL];&#xA;NSLog(@&#34;%@&#34;, newBranch);&#xA;assert([repo checkoutLocalBranch:newBranch options:0 error:NULL]);&#xA;&#xA;// Add a file to the index&#xA;[[NSData data] writeToFile:[repo.workingDirectoryPath stringByAppendingPathComponent:@&#34;empty.data&#34;] atomically:YES];&#xA;assert([repo addFileToIndex:@&#34;empty.data&#34; error:NULL]);&#xA;&#xA;// Check index status&#xA;GCDiff* diff = [repo diffRepositoryIndexWithHEAD:nil options:0 maxInterHunkLines:0 maxContextLines:0 error:NULL];&#xA;assert(diff.deltas.count == 1);&#xA;NSLog(@&#34;%@&#34;, diff);&#xA;&#xA;// Create a commit&#xA;GCCommit* newCommit = [repo createCommitFromHEADWithMessage:@&#34;Added file&#34; error:NULL];&#xA;assert(newCommit);&#xA;NSLog(@&#34;%@&#34;, newCommit);&#xA;&#xA;// Restore repo to saved snapshot before topic branch and commit were created&#xA;BOOL success = [repo restoreSnapshot:snapshot withOptions:kGCSnapshotOption_IncludeAll reflogMessage:@&#34;Rolled back&#34; didUpdateReferences:NULL error:NULL];&#xA;assert(success);&#xA;  &#xA;// Make sure topic branch is gone&#xA;assert([repo findLocalBranchWithName:@&#34;temp&#34; error:NULL] == nil);&#xA;  &#xA;// Update workdir and index to match HEAD&#xA;assert([repo resetToHEAD:kGCResetMode_Hard error:NULL]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Complete Example #1: GitDown&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/Examples/GitDown&#34;&gt;GitDown&lt;/a&gt; is a very basic app that prompts the user for a repo and displays an interactive and live-updating list of its stashes (all with ~20 lines of code in &lt;code&gt;-[AppDelegate applicationDidFinishLaunching:]&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/ZfxM7su.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Through GitUpKit, this basic app also gets for free unlimited undo/redo, unified and side-by-side diffs, text selection and copy, keyboard shortcuts, etc...&lt;/p&gt; &#xA;&lt;p&gt;This source code also demonstrates how to use some other GitUpKit view controllers as well as building a customized one.&lt;/p&gt; &#xA;&lt;h2&gt;Complete Example #2: GitDiff&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/Examples/GitDiff&#34;&gt;GitDiff&lt;/a&gt; demonstrates how to create a view controller that displays a live updating diff between &lt;code&gt;HEAD&lt;/code&gt; and the workdir à la &lt;code&gt;git diff HEAD&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/29hxDcJ.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Complete Example #3: GitY&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/Examples/GitY&#34;&gt;GitY&lt;/a&gt; is a &lt;a href=&#34;http://gitx.frim.nl/&#34;&gt;GitX&lt;/a&gt; clone built using GitUpKit and less than 200 lines of code:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/6cuPcT4.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Complete Example #4: iGit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/Examples/iGit&#34;&gt;iGit&lt;/a&gt; is a test iOS app that simply uses GitUpKit to clone a GitHub repo and perform a commit.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swisspol&#34;&gt;@swisspol&lt;/a&gt;: concept and code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wwayneee&#34;&gt;@wwayneee&lt;/a&gt;: UI design&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jayeb&#34;&gt;@jayeb&lt;/a&gt;: website&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Also a big thanks to the fine &lt;a href=&#34;https://libgit2.github.com/&#34;&gt;libgit2&lt;/a&gt; contributors without whom GitUp would have never existed!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;GitUp is copyright 2015-2018 Pierre-Olivier Latour and available under &lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.txt&#34;&gt;GPL v3 license&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/git-up/GitUp/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file in the project for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; GitUp includes some other open-source projects and such projects remain under their own license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adjust/ios_sdk</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/adjust/ios_sdk</id>
    <link href="https://github.com/adjust/ios_sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the iOS SDK of&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;This guide is being retired.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This README file will be retired shortly. The SDK documentation can now be found on our help center:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.adjust.com/en/developer/ios-sdk-documentation&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.adjust.com/zh/developer/ios-sdk-documentation&#34;&gt;中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.adjust.com/ja/developer/ios-sdk-documentation&#34;&gt;日本語&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.adjust.com/ko/developer/ios-sdk-documentation&#34;&gt;한국어&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;This is the iOS SDK of Adjust™. You can read more about Adjust™ at &lt;a href=&#34;http://adjust.com&#34;&gt;adjust.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your app is an app which uses web views you would like to use adjust tracking from Javascript code, please consult our &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/doc/english/web_views.md&#34;&gt;iOS web views SDK guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read this in other languages: &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/README.md&#34;&gt;English&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/doc/chinese/README.md&#34;&gt;中文&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/doc/japanese/README.md&#34;&gt;日本語&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/doc/korean/README.md&#34;&gt;한국어&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#example-apps&#34;&gt;Example apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#basic-integration&#34;&gt;Basic integration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-add&#34;&gt;Add the SDK to your project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-frameworks&#34;&gt;Add iOS frameworks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-integrate&#34;&gt;Integrate the SDK into your app&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#basic-setup&#34;&gt;Basic setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#basic-setup-imessage&#34;&gt;iMessage specific setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#adjust-logging&#34;&gt;Adjust logging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#build-the-app&#34;&gt;Build your app&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#additional-features&#34;&gt;Additional features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#att-framework&#34;&gt;AppTrackingTransparency framework&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ata-wrapper&#34;&gt;App-tracking authorisation wrapper&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ata-getter&#34;&gt;Get current authorisation status&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#att-status-change&#34;&gt;Check for ATT status change&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#skadn-framework&#34;&gt;SKAdNetwork framework&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#skadn-update-conversion-value&#34;&gt;Update SKAdNetwork conversion value&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#skadn-cv-updated-callback&#34;&gt;Conversion value updated callback&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#event-tracking&#34;&gt;Event tracking&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#revenue-tracking&#34;&gt;Revenue tracking&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#revenue-deduplication&#34;&gt;Revenue deduplication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#callback-parameters&#34;&gt;Callback parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#partner-parameters&#34;&gt;Partner parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#callback-id&#34;&gt;Callback identifier&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#session-parameters&#34;&gt;Session parameters&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#session-callback-parameters&#34;&gt;Session callback parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#session-partner-parameters&#34;&gt;Session partner parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#delay-start&#34;&gt;Delay start&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#attribution-callback&#34;&gt;Attribution callback&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ad-revenue&#34;&gt;Ad revenue tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#subscriptions&#34;&gt;Subscription tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#event-session-callbacks&#34;&gt;Event and session callbacks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#disable-tracking&#34;&gt;Disable tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#offline-mode&#34;&gt;Offline mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#event-buffering&#34;&gt;Event buffering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#gdpr-forget-me&#34;&gt;GDPR right to be forgotten&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#third-party-sharing&#34;&gt;Third-party sharing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#disable-third-party-sharing&#34;&gt;Disable third-party sharing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#enable-third-party-sharing&#34;&gt;Enable third-party sharing&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#measurement-consent&#34;&gt;Consent measurement&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-signature&#34;&gt;SDK signature&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#background-tracking&#34;&gt;Background tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#device-ids&#34;&gt;Device IDs&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#di-idfa&#34;&gt;iOS Advertising Identifier&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#di-adid&#34;&gt;Adjust device identifier&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#user-attribution&#34;&gt;User attribution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#push-token&#34;&gt;Push token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#pre-installed-trackers&#34;&gt;Pre-installed trackers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking&#34;&gt;Deep linking&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-standard&#34;&gt;Standard deep linking scenario&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-setup-old&#34;&gt;Deep linking on iOS 8 and earlier&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-setup-new&#34;&gt;Deep linking on iOS 9 and later&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-deferred&#34;&gt;Deferred deep linking scenario&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-reattribution&#34;&gt;Reattribution via deep links&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#link-resolution&#34;&gt;Link resolution&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#data-residency&#34;&gt;Data residency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#af-coppa-compliance&#34;&gt;COPPA compliance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-delayed-init&#34;&gt;Issues with delayed SDK initialisation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-arc&#34;&gt;I&#39;m seeing &#34;Adjust requires ARC&#34; error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-categories&#34;&gt;I&#39;m seeing &#34;[UIDevice adjTrackingEnabled]: unrecognized selector sent to instance&#34; error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-session-failed&#34;&gt;I&#39;m seeing the &#34;Session failed (Ignoring too frequent session.)&#34; error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-install-tracked&#34;&gt;I&#39;m not seeing &#34;Install tracked&#34; in the logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-iad-sdk-click&#34;&gt;I&#39;m seeing &#34;Unattributable SDK click ignored&#34; message&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-wrong-revenue-amount&#34;&gt;I&#39;m seeing wrong revenue data in the adjust dashboard&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;example-apps&#34;&gt;&lt;/a&gt;Example apps&lt;/h2&gt; &#xA;&lt;p&gt;There are example apps inside the &lt;a href=&#34;http://github.com/adjust/ios_sdk/tree/master/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt; directory&lt;/a&gt; for &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/examples/AdjustExample-ObjC&#34;&gt;&lt;code&gt;iOS (Objective-C)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/examples/AdjustExample-Swift&#34;&gt;&lt;code&gt;iOS (Swift)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/examples/AdjustExample-tvOS&#34;&gt;&lt;code&gt;tvOS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/examples/AdjustExample-iMessage&#34;&gt;&lt;code&gt;iMessage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/examples/AdjustExample-iWatch&#34;&gt;&lt;code&gt;Apple Watch&lt;/code&gt;&lt;/a&gt;. You can open any of these Xcode projects to see an example of how the Adjust SDK can be integrated.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;basic-integration&#34;&gt;Basic integration&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a id=&#34;basic-integration&#34;&gt; &lt;p&gt;We will describe the steps to integrate the Adjust SDK into your iOS project. We are going to assume that you are using Xcode for your iOS development.&lt;/p&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a id=&#34;basic-integration&#34;&gt;&lt;/a&gt;&lt;a id=&#34;sdk-add&#34;&gt;&lt;/a&gt;Add the SDK to your project&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;, you can add the following line to your &lt;code&gt;Podfile&lt;/code&gt; and continue from &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-integrate&#34;&gt;this step&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Adjust&#39;, &#39;~&amp;gt; 4.30.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Adjust&#39;, :git =&amp;gt; &#39;https://github.com/adjust/ios_sdk.git&#39;, :tag =&amp;gt; &#39;v4.30.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, you can add following line to your &lt;code&gt;Cartfile&lt;/code&gt; and continue from &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-frameworks&#34;&gt;this step&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;adjust/ios_sdk&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you&#39;re using Swift Package Manager, you can add the repository address directly in Xcode going to &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/code&gt; and continue from &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#sdk-frameworks&#34;&gt;this step&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/adjust/ios_sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;You can also choose to integrate the Adjust SDK by adding it to your project as a framework. On the &lt;a href=&#34;https://github.com/adjust/ios_sdk/releases&#34;&gt;releases page&lt;/a&gt; you can find the following archives:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AdjustSdkStatic.framework.zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AdjustSdkDynamic.framework.zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AdjustSdkTv.framework.zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AdjustSdkIm.framework.zip&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since the release of iOS 8, Apple has introduced dynamic frameworks (also known as embedded frameworks). If your app is targeting iOS 8 or higher, you can use the Adjust SDK dynamic framework. Choose which framework you want to use – static or dynamic – and add it to your project.&lt;/p&gt; &#xA;&lt;p&gt;If you are having &lt;code&gt;tvOS&lt;/code&gt; app, you can use the Adjust SDK with it as well with usage of our tvOS framework which you can extract from &lt;code&gt;AdjustSdkTv.framework.zip&lt;/code&gt; archive.&lt;/p&gt; &#xA;&lt;p&gt;If you are having &lt;code&gt;iMessage&lt;/code&gt; app, you can use the Adjust SDK with it as well with usage of our IM framework which you can extract from &lt;code&gt;AdjustSdkIm.framework.zip&lt;/code&gt; archive.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;sdk-frameworks&#34;&gt;&lt;/a&gt;Add iOS frameworks&lt;/h3&gt; &#xA;&lt;p&gt;Adjust SDK is able to get additional information in case you link additional iOS frameworks to your app. Please, add following frameworks in case you want to enable Adjust SDK features based on their presence in your app and mark them as optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AdSupport.framework&lt;/code&gt; - This framework is needed so that SDK can access to IDFA value and (prior to iOS 14) LAT information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iAd.framework&lt;/code&gt; - This framework is needed so that SDK can automatically handle attribution for ASA campaigns you might be running.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AdServices.framework&lt;/code&gt; - For devices running iOS 14.3 or higher, this framework allows the SDK to automatically handle attribution for ASA campaigns. It is required when leveraging the Apple Ads Attribution API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CoreTelephony.framework&lt;/code&gt; - This framework is needed so that SDK can determine current radio access technology.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StoreKit.framework&lt;/code&gt; - This framework is needed for access to &lt;code&gt;SKAdNetwork&lt;/code&gt; framework and for Adjust SDK to handle communication with it automatically in iOS 14 or later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AppTrackingTransparency.framework&lt;/code&gt; - This framework is needed in iOS 14 and later for SDK to be able to wrap user&#39;s tracking consent dialog and access to value of the user&#39;s consent to be tracked or not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;sdk-integrate&#34;&gt;&lt;/a&gt;Integrate the SDK into your app&lt;/h3&gt; &#xA;&lt;p&gt;If you added the Adjust SDK via a Pod repository, you should use one of the following import statements:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &#34;Adjust.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &amp;lt;Adjust/Adjust.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you added the Adjust SDK as a static/dynamic framework or via Carthage, you should use the following import statement:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &amp;lt;AdjustSdk/Adjust.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you are are using the Adjust SDK with your tvOS app, you should use the following import statement:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &amp;lt;AdjustSdkTv/Adjust.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you are are using the Adjust SDK with your iMessage app, you should use the following import statement:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &amp;lt;AdjustSdkIm/Adjust.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, we&#39;ll set up basic session tracking.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;basic-setup&#34;&gt;&lt;/a&gt;Basic setup&lt;/h3&gt; &#xA;&lt;p&gt;In the Project Navigator, open the source file of your application delegate. Add the &lt;code&gt;import&lt;/code&gt; statement at the top of the file, then add the following call to &lt;code&gt;Adjust&lt;/code&gt; in the &lt;code&gt;didFinishLaunching&lt;/code&gt; or &lt;code&gt;didFinishLaunchingWithOptions&lt;/code&gt; method of your app delegate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &#34;Adjust.h&#34;&#xA;// or #import &amp;lt;Adjust/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdk/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdkTv/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdkIm/Adjust.h&amp;gt;&#xA;&#xA;// ...&#xA;&#xA;NSString *yourAppToken = @&#34;{YourAppToken}&#34;;&#xA;NSString *environment = ADJEnvironmentSandbox;&#xA;ADJConfig *adjustConfig = [ADJConfig configWithAppToken:yourAppToken&#xA;                                            environment:environment];&#xA;&#xA;[Adjust appDidLaunch:adjustConfig];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/adjust/sdks/master/Resources/ios/delegate5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Initialising the Adjust SDK like this is &lt;code&gt;very important&lt;/code&gt;. Otherwise, you may encounter different kinds of issues as described in our &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ts-delayed-init&#34;&gt;troubleshooting section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;{YourAppToken}&lt;/code&gt; with your app token. You can find this in your &lt;a href=&#34;http://adjust.com&#34;&gt;dashboard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Depending on whether you build your app for testing or for production, you must set &lt;code&gt;environment&lt;/code&gt; with one of these values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *environment = ADJEnvironmentSandbox;&#xA;NSString *environment = ADJEnvironmentProduction;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; This value should be set to &lt;code&gt;ADJEnvironmentSandbox&lt;/code&gt; if and only if you or someone else is testing your app. Make sure to set the environment to &lt;code&gt;ADJEnvironmentProduction&lt;/code&gt; just before you publish the app. Set it back to &lt;code&gt;ADJEnvironmentSandbox&lt;/code&gt; when you start developing and testing it again.&lt;/p&gt; &#xA;&lt;p&gt;We use this environment to distinguish between real traffic and test traffic from test devices. It is very important that you keep this value meaningful at all times! This is especially important if you are tracking revenue.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;basic-setup-imessage&#34;&gt;&lt;/a&gt;iMessage specific setup&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding SDK from source:&lt;/strong&gt; In case that you have chosen to add Adjust SDK to your iMessage app &lt;strong&gt;from source&lt;/strong&gt;, please make sure that you have pre-processor macro &lt;strong&gt;ADJUST_IM=1&lt;/strong&gt; set in your iMessage project settings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding SDK as framework:&lt;/strong&gt; After you have added &lt;code&gt;AdjustSdkIm.framework&lt;/code&gt; to your iMessage app, please make sure to add &lt;code&gt;New Copy Files Phase&lt;/code&gt; in your &lt;code&gt;Build Phases&lt;/code&gt; project settings and select that &lt;code&gt;AdjustSdkIm.framework&lt;/code&gt; should be copied to &lt;code&gt;Frameworks&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Session tracking:&lt;/strong&gt; If you would like to have session tracking properly working in your iMessage app, you will need to do one additional integration step. In standard iOS apps Adjust SDK is automatically subscribed to iOS system notifications which enable us to know when app entered or left foreground. In case of iMessage app, this is not the case, so we need you to add explicit calls to &lt;code&gt;trackSubsessionStart&lt;/code&gt; and &lt;code&gt;trackSubsessionEnd&lt;/code&gt; methods inside of your iMessage app view controller to make our SDK aware of the moments when your app is being in foreground or not.&lt;/p&gt; &#xA;&lt;p&gt;Add call to &lt;code&gt;trackSubsessionStart&lt;/code&gt; inside of &lt;code&gt;didBecomeActiveWithConversation:&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {&#xA;    // Called when the extension is about to move from the inactive to active state.&#xA;    // This will happen when the extension is about to present UI.&#xA;    // Use this method to configure the extension and restore previously stored state.&#xA;&#xA;    [Adjust trackSubsessionStart];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add call to &lt;code&gt;trackSubsessionEnd&lt;/code&gt; inside of &lt;code&gt;willResignActiveWithConversation:&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;-(void)willResignActiveWithConversation:(MSConversation *)conversation {&#xA;    // Called when the extension is about to move from the active to inactive state.&#xA;    // This will happen when the user dissmises the extension, changes to a different&#xA;    // conversation or quits Messages.&#xA;    &#xA;    // Use this method to release shared resources, save user data, invalidate timers,&#xA;    // and store enough state information to restore your extension to its current state&#xA;    // in case it is terminated later.&#xA;&#xA;    [Adjust trackSubsessionEnd];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this set, Adjust SDK will be able to successfully perform session tracking inside of your iMessage app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should be aware that your iOS app and iMessage extension you wrote for it are running in different memory spaces and they as well have different bundle identifiers. Initialising Adjust SDK with same app token in both places will result in two independent instances tracking things unaware of each other which might cause data mixture you don&#39;t want to see in your dashboard data. General advice would be to create separate app in Adjust dashboard for your iMessage app and initialise SDK inside of it with separate app token.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;adjust-logging&#34;&gt;&lt;/a&gt;Adjust logging&lt;/h3&gt; &#xA;&lt;p&gt;You can increase or decrease the amount of logs that you see during testing by calling &lt;code&gt;setLogLevel:&lt;/code&gt; on your &lt;code&gt;ADJConfig&lt;/code&gt; instance with one of the following parameters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setLogLevel:ADJLogLevelVerbose];  // enable all logging&#xA;[adjustConfig setLogLevel:ADJLogLevelDebug];    // enable more logging&#xA;[adjustConfig setLogLevel:ADJLogLevelInfo];     // the default&#xA;[adjustConfig setLogLevel:ADJLogLevelWarn];     // disable info logging&#xA;[adjustConfig setLogLevel:ADJLogLevelError];    // disable warnings as well&#xA;[adjustConfig setLogLevel:ADJLogLevelAssert];   // disable errors as well&#xA;[adjustConfig setLogLevel:ADJLogLevelSuppress]; // disable all logging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want your app in production to display any logs coming from the Adjust SDK, then you should select &lt;code&gt;ADJLogLevelSuppress&lt;/code&gt; and in addition to that, initialise &lt;code&gt;ADJConfig&lt;/code&gt; object with another constructor where you should enable suppress log level mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &#34;Adjust.h&#34;&#xA;// or #import &amp;lt;Adjust/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdk/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdkTv/Adjust.h&amp;gt;&#xA;// or #import &amp;lt;AdjustSdkIm/Adjust.h&amp;gt;&#xA;&#xA;// ...&#xA;&#xA;NSString *yourAppToken = @&#34;{YourAppToken}&#34;;&#xA;NSString *environment = ADJEnvironmentSandbox;&#xA;ADJConfig *adjustConfig = [ADJConfig configWithAppToken:yourAppToken&#xA;                                            environment:environment&#xA;                                   allowSuppressLogLevel:YES];&#xA;&#xA;[Adjust appDidLaunch:adjustConfig];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;build-the-app&#34;&gt;&lt;/a&gt;Build your app&lt;/h3&gt; &#xA;&lt;p&gt;Build and run your app. If the build succeeds, you should carefully read the SDK logs in the console. After the app launches for the first time, you should see the info log &lt;code&gt;Install tracked&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/adjust/sdks/master/Resources/ios/run5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;additional-feature&#34;&gt;Additional features&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a id=&#34;additional-feature&#34;&gt; &lt;p&gt;Once you integrate the Adjust SDK into your project, you can take advantage of the following features.&lt;/p&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a id=&#34;additional-feature&#34;&gt;&lt;/a&gt;&lt;a id=&#34;att-framework&#34;&gt;&lt;/a&gt;AppTrackingTransparency framework&lt;/h3&gt; &#xA;&lt;p&gt;For each package sent, the Adjust backend receives one of the following four (4) states of consent for access to app-related data that can be used for tracking the user or the device:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Authorized&lt;/li&gt; &#xA; &lt;li&gt;Denied&lt;/li&gt; &#xA; &lt;li&gt;Not Determined&lt;/li&gt; &#xA; &lt;li&gt;Restricted&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After a device receives an authorization request to approve access to app-related data, which is used for user device tracking, the returned status will either be Authorized or Denied.&lt;/p&gt; &#xA;&lt;p&gt;Before a device receives an authorization request for access to app-related data, which is used for tracking the user or device, the returned status will be Not Determined.&lt;/p&gt; &#xA;&lt;p&gt;If authorization to use app tracking data is restricted, the returned status will be Restricted.&lt;/p&gt; &#xA;&lt;p&gt;The SDK has a built-in mechanism to receive an updated status after a user responds to the pop-up dialog, in case you don&#39;t want to customize your displayed dialog pop-up. To conveniently and efficiently communicate the new state of consent to the backend, Adjust SDK offers a wrapper around the app tracking authorization method described in the following chapter, App-tracking authorization wrapper.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ata-wrapper&#34;&gt;&lt;/a&gt;App-tracking authorisation wrapper&lt;/h3&gt; &#xA;&lt;p&gt;Adjust SDK offers the possibility to use it for requesting user authorization in accessing their app-related data. Adjust SDK has a wrapper built on top of the &lt;a href=&#34;https://developer.apple.com/documentation/apptrackingtransparency/attrackingmanager/3547037-requesttrackingauthorizationwith?language=objc&#34;&gt;requestTrackingAuthorizationWithCompletionHandler:&lt;/a&gt; method, where you can as well define the callback method to get information about a user&#39;s choice. Also, with the use of this wrapper, as soon as a user responds to the pop-up dialog, it&#39;s then communicated back using your callback method. The SDK will also inform the backend of the user&#39;s choice. The &lt;code&gt;NSUInteger&lt;/code&gt; value will be delivered via your callback method with the following meaning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0: &lt;code&gt;ATTrackingManagerAuthorizationStatusNotDetermined&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;1: &lt;code&gt;ATTrackingManagerAuthorizationStatusRestricted&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2: &lt;code&gt;ATTrackingManagerAuthorizationStatusDenied&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;3: &lt;code&gt;ATTrackingManagerAuthorizationStatusAuthorized&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use this wrapper, you can call it as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust requestTrackingAuthorizationWithCompletionHandler:^(NSUInteger status) {&#xA;    switch (status) {&#xA;        case 0:&#xA;            // ATTrackingManagerAuthorizationStatusNotDetermined case&#xA;            break;&#xA;        case 1:&#xA;            // ATTrackingManagerAuthorizationStatusRestricted case&#xA;            break;&#xA;        case 2:&#xA;            // ATTrackingManagerAuthorizationStatusDenied case&#xA;            break;&#xA;        case 3:&#xA;            // ATTrackingManagerAuthorizationStatusAuthorized case&#xA;            break;&#xA;    }&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ata-getter&#34;&gt;&lt;/a&gt;Get current authorisation status&lt;/h3&gt; &#xA;&lt;p&gt;To get the current app tracking authorization status you can call &lt;code&gt;[Adjust appTrackingAuthorizationStatus]&lt;/code&gt; that will return one of the following possibilities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;0&lt;/code&gt;: The user hasn&#39;t been asked yet&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1&lt;/code&gt;: The user device is restricted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2&lt;/code&gt;: The user denied access to IDFA&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3&lt;/code&gt;: The user authorized access to IDFA&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-1&lt;/code&gt;: The status is not available&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;att-status-change&#34;&gt;&lt;/a&gt;Check for ATT status change&lt;/h3&gt; &#xA;&lt;p&gt;In cases where you are not using &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#ata-wrapper&#34;&gt;Adjust app-tracking authorization wrapper&lt;/a&gt;, Adjust SDK will not be able to know immediately upon answering the dialog what is the new value of app-tracking status. In situations like this, if you would want Adjust SDK to read the new app-tracking status value and communicate it to our backend, make sure to make a call to this method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust checkForNewAttStatus];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;skadn-framework&#34;&gt;&lt;/a&gt;SKAdNetwork framework&lt;/h3&gt; &#xA;&lt;p&gt;If you have implemented the Adjust iOS SDK v4.23.0 or above and your app is running on iOS 14, the communication with SKAdNetwork will be set on by default, although you can choose to turn it off. When set on, Adjust automatically registers for SKAdNetwork attribution when the SDK is initialized. If events are set up in the Adjust dashboard to receive conversion values, the Adjust backend sends the conversion value data to the SDK. The SDK then sets the conversion value. After Adjust receives the SKAdNetwork callback data, it is then displayed in the dashboard.&lt;/p&gt; &#xA;&lt;p&gt;In case you don&#39;t want the Adjust SDK to automatically communicate with SKAdNetwork, you can disable that by calling the following method on configuration object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig deactivateSKAdNetworkHandling];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;skadn-update-conversion-value&#34;&gt;&lt;/a&gt;Update SKAdNetwork conversion value&lt;/h3&gt; &#xA;&lt;p&gt;As of iOS SDK v4.26.0 you can use Adjust SDK wrapper method &lt;code&gt;updateConversionValue:&lt;/code&gt; to update SKAdNetwork conversion value for your user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust updateConversionValue:6];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;skadn-cv-updated-callback&#34;&gt;&lt;/a&gt;Conversion value updated callback&lt;/h3&gt; &#xA;&lt;p&gt;You can register callback to get notified each time when Adjust SDK updates conversion value for the user. You need to implement &lt;code&gt;AdjustDelegate&lt;/code&gt; protocol, implement optional &lt;code&gt;adjustConversionValueUpdated:&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustConversionValueUpdated:(NSNumber *)conversionValue {&#xA;    NSLog(@&#34;Conversion value updated callback called!&#34;);&#xA;    NSLog(@&#34;Conversion value: %@&#34;, conversionValue);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;event-tracking&#34;&gt;&lt;/a&gt;Event tracking&lt;/h3&gt; &#xA;&lt;p&gt;You can use adjust to track events. Lets say you want to track every tap on a particular button. You would create a new event token in your &lt;a href=&#34;http://adjust.com&#34;&gt;dashboard&lt;/a&gt;, which has an associated event token - looking something like &lt;code&gt;abc123&lt;/code&gt;. In your button&#39;s &lt;code&gt;buttonDown&lt;/code&gt; method you would then add the following lines to track the tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;[Adjust trackEvent:event];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When tapping the button you should now see &lt;code&gt;Event tracked&lt;/code&gt; in the logs.&lt;/p&gt; &#xA;&lt;p&gt;The event instance can be used to configure the event further before tracking it:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;revenue-tracking&#34;&gt;&lt;/a&gt;Revenue tracking&lt;/h3&gt; &#xA;&lt;p&gt;If your users can generate revenue by tapping on advertisements or making in-app purchases you can track those revenues with events. Lets say a tap is worth one Euro cent. You could then track the revenue event like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;&#xA;[event setRevenue:0.01 currency:@&#34;EUR&#34;];&#xA;&#xA;[Adjust trackEvent:event];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be combined with callback parameters of course.&lt;/p&gt; &#xA;&lt;p&gt;When you set a currency token, adjust will automatically convert the incoming revenues into a reporting revenue of your choice. Read more about &lt;a href=&#34;https://docs.adjust.com/en/event-tracking/#tracking-purchases-in-different-currencies&#34;&gt;currency conversion here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can read more about revenue and event tracking in the &lt;a href=&#34;https://docs.adjust.com/en/event-tracking/#tracking-purchases-and-revenues&#34;&gt;event tracking guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;revenue-deduplication&#34;&gt;&lt;/a&gt;Revenue deduplication&lt;/h3&gt; &#xA;&lt;p&gt;You can also pass in an optional transaction ID to avoid tracking duplicate revenues. The last ten transaction IDs are remembered and revenue events with duplicate transaction IDs are skipped. This is especially useful for in-app purchase tracking. See an example below.&lt;/p&gt; &#xA;&lt;p&gt;If you want to track in-app purchases, please make sure to call &lt;code&gt;trackEvent&lt;/code&gt; after &lt;code&gt;finishTransaction&lt;/code&gt; in &lt;code&gt;paymentQueue:updatedTransactions&lt;/code&gt; only if the state changed to &lt;code&gt;SKPaymentTransactionStatePurchased&lt;/code&gt;. That way you can avoid tracking revenue that is not actually being generated.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray *)transactions {&#xA;    for (SKPaymentTransaction *transaction in transactions) {&#xA;        switch (transaction.transactionState) {&#xA;            case SKPaymentTransactionStatePurchased:&#xA;                [self finishTransaction:transaction];&#xA;&#xA;                ADJEvent *event = [ADJEvent eventWithEventToken:...];&#xA;                [event setRevenue:... currency:...];&#xA;                [event setTransactionId:transaction.transactionIdentifier]; // avoid duplicates&#xA;                [Adjust trackEvent:event];&#xA;&#xA;                break;&#xA;            // more cases&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;callback-parameters&#34;&gt;&lt;/a&gt;Callback parameters&lt;/h3&gt; &#xA;&lt;p&gt;You can register a callback URL for your events in your &lt;a href=&#34;http://adjust.com&#34;&gt;dashboard&lt;/a&gt;. We will send a GET request to that URL whenever the event is tracked. You can add callback parameters to that event by calling &lt;code&gt;addCallbackParameter&lt;/code&gt; to the event before tracking it. We will then append these parameters to your callback URL.&lt;/p&gt; &#xA;&lt;p&gt;For example, suppose you have registered the URL &lt;code&gt;http://www.mydomain.com/callback&lt;/code&gt; then track an event like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;&#xA;[event addCallbackParameter:@&#34;key&#34; value:@&#34;value&#34;];&#xA;[event addCallbackParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&#xA;[Adjust trackEvent:event];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In that case we would track the event and send a request to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.mydomain.com/callback?key=value&amp;amp;foo=bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It should be mentioned that we support a variety of placeholders like &lt;code&gt;{idfa}&lt;/code&gt; that can be used as parameter values. In the resulting callback this placeholder would be replaced with the ID for Advertisers of the current device. Also note that we don&#39;t store any of your custom parameters, but only append them to your callbacks, thus without a callback they will not be saved nor sent to you.&lt;/p&gt; &#xA;&lt;p&gt;You can read more about using URL callbacks, including a full list of available values, in our &lt;a href=&#34;https://docs.adjust.com/en/callbacks&#34;&gt;callbacks guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;partner-parameters&#34;&gt;&lt;/a&gt;Partner parameters&lt;/h3&gt; &#xA;&lt;p&gt;You can also add parameters to be transmitted to network partners, which have been activated in your Adjust dashboard.&lt;/p&gt; &#xA;&lt;p&gt;This works similarly to the callback parameters mentioned above, but can be added by calling the &lt;code&gt;addPartnerParameter&lt;/code&gt; method on your &lt;code&gt;ADJEvent&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;&#xA;[event addPartnerParameter:@&#34;key&#34; value:@&#34;value&#34;];&#xA;[event addPartnerParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&#xA;[Adjust trackEvent:event];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about special partners and these integrations in our &lt;a href=&#34;https://docs.adjust.com/en/special-partners&#34;&gt;guide to special partners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;callback-id&#34;&gt;&lt;/a&gt;Callback identifier&lt;/h3&gt; &#xA;&lt;p&gt;You can also add custom string identifier to each event you want to track. This identifier will later be reported in event success and/or event failure callbacks to enable you to keep track on which event was successfully tracked or not. You can set this identifier by calling the &lt;code&gt;setCallbackId&lt;/code&gt; method on your &lt;code&gt;ADJEvent&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;&#xA;[event setCallbackId:@&#34;Your-Custom-Id&#34;];&#xA;&#xA;[Adjust trackEvent:event];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;session-parameters&#34;&gt;&lt;/a&gt;Session parameters&lt;/h3&gt; &#xA;&lt;p&gt;Some parameters are saved to be sent in every event and session of the Adjust SDK. Once you have added any of these parameters, you don&#39;t need to add them every time, since they will be saved locally. If you add the same parameter twice, there will be no effect.&lt;/p&gt; &#xA;&lt;p&gt;If you want to send session parameters with the initial install event, they must be called before the Adjust SDK launches via &lt;code&gt;[Adjust appDidLaunch:]&lt;/code&gt;. If you need to send them with an install, but can only obtain the needed values after launch, it&#39;s possible to &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#delay-start&#34;&gt;delay&lt;/a&gt; the first launch of the Adjust SDK to allow this behavior.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;session-callback-parameters&#34;&gt;&lt;/a&gt;Session callback parameters&lt;/h3&gt; &#xA;&lt;p&gt;The same callback parameters that are registered for &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#callback-parameters&#34;&gt;events&lt;/a&gt; can be also saved to be sent in every event or session of the Adjust SDK.&lt;/p&gt; &#xA;&lt;p&gt;The session callback parameters have a similar interface of the event callback parameters. Instead of adding the key and it&#39;s value to an event, it&#39;s added through a call to &lt;code&gt;Adjust&lt;/code&gt; method &lt;code&gt;addSessionCallbackParameter:value:&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust addSessionCallbackParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The session callback parameters will be merged with the callback parameters added to an event. The callback parameters added to an event have precedence over the session callback parameters. Meaning that, when adding a callback parameter to an event with the same key to one added from the session, the value that prevails is the callback parameter added to the event.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to remove a specific session callback parameter by passing the desiring key to the method &lt;code&gt;removeSessionCallbackParameter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust removeSessionCallbackParameter:@&#34;foo&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to remove all key and values from the session callback parameters, you can reset it with the method &lt;code&gt;resetSessionCallbackParameters&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust resetSessionCallbackParameters];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;session-partner-parameters&#34;&gt;&lt;/a&gt;Session partner parameters&lt;/h3&gt; &#xA;&lt;p&gt;In the same way that there is &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#session-callback-parameters&#34;&gt;session callback parameters&lt;/a&gt; that are sent every in event or session of the Adjust SDK, there is also session partner parameters.&lt;/p&gt; &#xA;&lt;p&gt;These will be transmitted to network partners, for the integrations that have been activated in your adjust &lt;a href=&#34;http://adjust.com&#34;&gt;dashboard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The session partner parameters have a similar interface to the event partner parameters. Instead of adding the key and it&#39;s value to an event, it&#39;s added through a call to &lt;code&gt;Adjust&lt;/code&gt; method &lt;code&gt;addSessionPartnerParameter:value:&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust addSessionPartnerParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The session partner parameters will be merged with the partner parameters added to an event. The partner parameters added to an event have precedence over the session partner parameters. Meaning that, when adding a partner parameter to an event with the same key to one added from the session, the value that prevails is the partner parameter added to the event.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to remove a specific session partner parameter by passing the desiring key to the method &lt;code&gt;removeSessionPartnerParameter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust removeSessionPartnerParameter:@&#34;foo&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to remove all key and values from the session partner parameters, you can reset it with the method &lt;code&gt;resetSessionPartnerParameters&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust resetSessionPartnerParameters];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;delay-start&#34;&gt;&lt;/a&gt;Delay start&lt;/h3&gt; &#xA;&lt;p&gt;Delaying the start of the Adjust SDK allows your app some time to obtain session parameters, such as unique identifiers, to be send on install.&lt;/p&gt; &#xA;&lt;p&gt;Set the initial delay time in seconds with the method &lt;code&gt;setDelayStart&lt;/code&gt; in the &lt;code&gt;ADJConfig&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setDelayStart:5.5];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case this will make the Adjust SDK not send the initial install session and any event created for 5.5 seconds. After this time is expired or if you call &lt;code&gt;[Adjust sendFirstPackages]&lt;/code&gt; in the meanwhile, every session parameter will be added to the delayed install session and events and the Adjust SDK will resume as usual.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The maximum delay start time of the Adjust SDK is 10 seconds&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;attribution-callback&#34;&gt;&lt;/a&gt;Attribution callback&lt;/h3&gt; &#xA;&lt;p&gt;You can register a delegate callback to be notified of tracker attribution changes. Due to the different sources considered for attribution, this information can not be provided synchronously. Follow these steps to implement the optional delegate protocol in your app delegate:&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to consider our &lt;a href=&#34;https://github.com/adjust/sdks/raw/master/doc/attribution-data.md&#34;&gt;applicable attribution data policies.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;AppDelegate.h&lt;/code&gt; and add the import and the &lt;code&gt;AdjustDelegate&lt;/code&gt; declaration.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@interface AppDelegate : UIResponder &amp;lt;UIApplicationDelegate, AdjustDelegate&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;AppDelegate.m&lt;/code&gt; and add the following delegate callback function to your app delegate implementation.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustAttributionChanged:(ADJAttribution *)attribution {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the delegate with your &lt;code&gt;ADJConfig&lt;/code&gt; instance:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setDelegate:self];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;As the delegate callback is configured using the &lt;code&gt;ADJConfig&lt;/code&gt; instance, you should call &lt;code&gt;setDelegate&lt;/code&gt; before calling &lt;code&gt;[Adjust appDidLaunch:adjustConfig]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The delegate function will be called after the SDK receives the final attribution data. Within the delegate function you have access to the &lt;code&gt;attribution&lt;/code&gt; parameter. Here is a quick summary of its properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString trackerToken&lt;/code&gt; the tracker token of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString trackerName&lt;/code&gt; the tracker name of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString network&lt;/code&gt; the network grouping level of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString campaign&lt;/code&gt; the campaign grouping level of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString adgroup&lt;/code&gt; the ad group grouping level of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString creative&lt;/code&gt; the creative grouping level of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString clickLabel&lt;/code&gt; the click label of the current attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString adid&lt;/code&gt; the unique device identifier provided by attribution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString costType&lt;/code&gt; the cost type string.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSNumber costAmount&lt;/code&gt; the cost amount.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString costCurrency&lt;/code&gt; the cost currency string.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If any value is unavailable, it will default to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: The cost data - &lt;code&gt;costType&lt;/code&gt;, &lt;code&gt;costAmount&lt;/code&gt; &amp;amp; &lt;code&gt;costCurrency&lt;/code&gt; are only available when configured in &lt;code&gt;ADJConfig&lt;/code&gt; by calling &lt;code&gt;setNeedsCost:&lt;/code&gt; method. If not configured or configured, but not being part of the attribution, these fields will have value &lt;code&gt;nil&lt;/code&gt;. This feature is available in SDK v4.24.0 and above.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ad-revenue&#34;&gt;&lt;/a&gt;Ad revenue tracking&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This ad revenue tracking API is available only in the native SDK v4.29.0 and above.&lt;/p&gt; &#xA;&lt;p&gt;You can track ad revenue information with Adjust SDK by invoking the following method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// initilise ADJAdRevenue instance with appropriate ad revenue source&#xA;ADJAdRevenue *adRevenue = [[ADJAdRevenue alloc] initWithSource:source];&#xA;// pass revenue and currency values&#xA;[adRevenue setRevenue:1.6 currency:@&#34;USD&#34;];&#xA;// pass optional parameters&#xA;[adRevenue setAdImpressionsCount:adImpressionsCount];&#xA;[adRevenue setAdRevenueUnit:adRevenueUnit];&#xA;[adRevenue setAdRevenuePlacement:adRevenuePlacement];&#xA;[adRevenue setAdRevenueNetwork:adRevenueNetwork];&#xA;// attach callback and/or partner parameter if needed&#xA;[adRevenue addCallbackParameter:key value:value];&#xA;[adRevenue addPartnerParameter:key value:value];&#xA;&#xA;// track ad revenue&#xA;[Adjust trackAdRevenue:source payload:payload];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently we support the below &lt;code&gt;source&lt;/code&gt; parameter values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceAppLovinMAX&lt;/code&gt; - representing AppLovin MAX platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceMopub&lt;/code&gt; - representing MoPub platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceAdMob&lt;/code&gt; - representing AdMob platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceIronSource&lt;/code&gt; - representing IronSource platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceAdMost&lt;/code&gt;- representing AdMost platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceUnity&lt;/code&gt; - representing Unity platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourceHeliumChartboost&lt;/code&gt; - representing Helium Chartboost platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADJAdRevenueSourcePublisher&lt;/code&gt; - representing Generic platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Additional documentation which explains detailed integration with every of the supported sources will be provided outside of this README. Also, in order to use this feature, additional setup is needed for your app in Adjust dashboard, so make sure to get in touch with our support team to make sure that everything is set up correctly before you start to use this feature.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;subscriptions&#34;&gt;&lt;/a&gt;Subscription tracking&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This feature is only available in the native SDK v4.22.0 and above. We recommend using at least version 4.22.1.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: The following steps only set up subscription tracking within the SDK. To complete setup, certain app-specific information must be added within Adjust’s internal interface. An Adjust representative must take this action: please contact &lt;a href=&#34;mailto:support@adjust.com&#34;&gt;support@adjust.com&lt;/a&gt; or your Technical Account Manager.&lt;/p&gt; &#xA;&lt;p&gt;You can track App Store subscriptions and verify their validity with the Adjust SDK. After a subscription has been successfully purchased, make the following call to the Adjust SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJSubscription *subscription = [[ADJSubscription alloc] initWithPrice:price&#xA;                                                              currency:currency&#xA;                                                         transactionId:transactionId&#xA;                                                            andReceipt:receipt];&#xA;[subscription setTransactionDate:transactionDate];&#xA;[subscription setSalesRegion:salesRegion];&#xA;&#xA;[Adjust trackSubscription:subscription];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only do this when the state has changed to &lt;code&gt;SKPaymentTransactionStatePurchased&lt;/code&gt; or &lt;code&gt;SKPaymentTransactionStateRestored&lt;/code&gt;. Then make a call to &lt;code&gt;finishTransaction&lt;/code&gt; in &lt;code&gt;paymentQueue:updatedTransactions&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;p&gt;Subscription tracking parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/documentation/storekit/skproduct/1506094-price?language=objc&#34;&gt;price&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;currency (you need to pass &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nslocale/1642836-currencycode?language=objc&#34;&gt;currencyCode&lt;/a&gt; of the &lt;a href=&#34;https://developer.apple.com/documentation/storekit/skproduct/1506145-pricelocale?language=objc&#34;&gt;priceLocale&lt;/a&gt; object)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/documentation/storekit/skpaymenttransaction/1411288-transactionidentifier?language=objc&#34;&gt;transactionId&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsbundle/1407276-appstorereceipturl&#34;&gt;receipt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/documentation/storekit/skpaymenttransaction/1411273-transactiondate?language=objc&#34;&gt;transactionDate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;salesRegion (you need to pass &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nslocale/1643060-countrycode?language=objc&#34;&gt;countryCode&lt;/a&gt; of the &lt;a href=&#34;https://developer.apple.com/documentation/storekit/skproduct/1506145-pricelocale?language=objc&#34;&gt;priceLocale&lt;/a&gt; object)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Just like with event tracking, you can attach callback and partner parameters to the subscription object as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJSubscription *subscription = [[ADJSubscription alloc] initWithPrice:price&#xA;                                                              currency:currency&#xA;                                                         transactionId:transactionId&#xA;                                                            andReceipt:receipt];&#xA;[subscription setTransactionDate:transactionDate];&#xA;[subscription setSalesRegion:salesRegion];&#xA;&#xA;// add callback parameters&#xA;[subscription addCallbackParameter:@&#34;key&#34; value:@&#34;value&#34;];&#xA;[subscription addCallbackParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&#xA;// add partner parameters&#xA;[subscription addPartnerParameter:@&#34;key&#34; value:@&#34;value&#34;];&#xA;[subscription addPartnerParameter:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;&#xA;[Adjust trackSubscription:subscription];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;event-session-callbacks&#34;&gt;&lt;/a&gt;Event and session callbacks&lt;/h3&gt; &#xA;&lt;p&gt;You can register a delegate callback to be notified of successful and failed tracked events and/or sessions. The same optional protocol &lt;code&gt;AdjustDelegate&lt;/code&gt; used for the &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#attribution-callback&#34;&gt;attribution callback&lt;/a&gt; is used.&lt;/p&gt; &#xA;&lt;p&gt;Follow the same steps and implement the following delegate callback function for successful tracked events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustEventTrackingSucceeded:(ADJEventSuccess *)eventSuccessResponseData {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following delegate callback function for failed tracked events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustEventTrackingFailed:(ADJEventFailure *)eventFailureResponseData {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For successful tracked sessions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustSessionTrackingSucceeded:(ADJSessionSuccess *)sessionSuccessResponseData {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And for failed tracked sessions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)adjustSessionTrackingFailed:(ADJSessionFailure *)sessionFailureResponseData {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The delegate functions will be called after the SDK tries to send a package to the server. Within the delegate callback you have access to a response data object specifically for the delegate callback. Here is a quick summary of the session response data properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString message&lt;/code&gt; the message from the server or the error logged by the SDK.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString timeStamp&lt;/code&gt; timestamp from the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString adid&lt;/code&gt; a unique device identifier provided by adjust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSDictionary jsonResponse&lt;/code&gt; the JSON object with the response from the server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both event response data objects contain:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString eventToken&lt;/code&gt; the event token, if the package tracked was an event.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSString callbackId&lt;/code&gt; the custom defined callback ID set on event object.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If any value is unavailable, it will default to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And both event and session failed objects also contain:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BOOL willRetry&lt;/code&gt; indicates that there will be an attempt to resend the package at a later time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;disable-tracking&#34;&gt;&lt;/a&gt;Disable tracking&lt;/h3&gt; &#xA;&lt;p&gt;You can disable the Adjust SDK from tracking any activities of the current device by calling &lt;code&gt;setEnabled&lt;/code&gt; with parameter &lt;code&gt;NO&lt;/code&gt;. &lt;strong&gt;This setting is remembered between sessions&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust setEnabled:NO];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a id=&#34;is-enabled&#34;&gt;You can check if the Adjust SDK is currently enabled by calling the function &lt;code&gt;isEnabled&lt;/code&gt;. It is always possible to activate the Adjust SDK by invoking &lt;code&gt;setEnabled&lt;/code&gt; with the enabled parameter as &lt;code&gt;YES&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a id=&#34;is-enabled&#34;&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a id=&#34;is-enabled&#34;&gt;&lt;/a&gt;&lt;a id=&#34;offline-mode&#34;&gt;&lt;/a&gt;Offline mode&lt;/h3&gt; &#xA;&lt;p&gt;You can put the Adjust SDK in offline mode to suspend transmission to our servers while retaining tracked data to be sent later. While in offline mode, all information is saved in a file, so be careful not to trigger too many events while in offline mode.&lt;/p&gt; &#xA;&lt;p&gt;You can activate offline mode by calling &lt;code&gt;setOfflineMode&lt;/code&gt; with the parameter &lt;code&gt;YES&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust setOfflineMode:YES];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Conversely, you can deactivate offline mode by calling &lt;code&gt;setOfflineMode&lt;/code&gt; with &lt;code&gt;NO&lt;/code&gt;. When the Adjust SDK is put back in online mode, all saved information is sent to our servers with the correct time information.&lt;/p&gt; &#xA;&lt;p&gt;Unlike disabling tracking, this setting is &lt;strong&gt;not remembered&lt;/strong&gt; bettween sessions. This means that the SDK is in online mode whenever it is started, even if the app was terminated in offline mode.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;event-buffering&#34;&gt;&lt;/a&gt;Event buffering&lt;/h3&gt; &#xA;&lt;p&gt;If your app makes heavy use of event tracking, you might want to delay some HTTP requests in order to send them in one batch every minute. You can enable event buffering with your &lt;code&gt;ADJConfig&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setEventBufferingEnabled:YES];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If nothing is set, event buffering is &lt;strong&gt;disabled by default&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;gdpr-forget-me&#34;&gt;&lt;/a&gt;GDPR right to be forgotten&lt;/h3&gt; &#xA;&lt;p&gt;In accordance with article 17 of the EU&#39;s General Data Protection Regulation (GDPR), you can notify Adjust when a user has exercised their right to be forgotten. Calling the following method will instruct the Adjust SDK to communicate the user&#39;s choice to be forgotten to the Adjust backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust gdprForgetMe];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon receiving this information, Adjust will erase the user&#39;s data and the Adjust SDK will stop tracking the user. No requests from this device will be sent to Adjust in the future.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;third-party-sharing&#34;&gt;&lt;/a&gt;Third-party sharing for specific users&lt;/h2&gt; &#xA;&lt;p&gt;You can notify Adjust when a user disables, enables, and re-enables data sharing with third-party partners.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;disable-third-party-sharing&#34;&gt;&lt;/a&gt;Disable third-party sharing for specific users&lt;/h3&gt; &#xA;&lt;p&gt;Call the following method to instruct the Adjust SDK to communicate the user&#39;s choice to disable data sharing to the Adjust backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJThirdPartySharing *adjustThirdPartySharing = [[ADJThirdPartySharing alloc] initWithIsEnabledNumberBool:@NO];&#xA;[Adjust trackThirdPartySharing:adjustThirdPartySharing];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon receiving this information, Adjust will block the sharing of that specific user&#39;s data to partners and the Adjust SDK will continue to work as usual.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;enable-third-party-sharing&#34;&gt;Enable or re-enable third-party sharing for specific users&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Call the following method to instruct the Adjust SDK to communicate the user&#39;s choice to share data or change data sharing, to the Adjust backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJThirdPartySharing *adjustThirdPartySharing = [[ADJThirdPartySharing alloc] initWithIsEnabledNumberBool:@YES];&#xA;[Adjust trackThirdPartySharing:adjustThirdPartySharing];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon receiving this information, Adjust changes sharing the specific user&#39;s data to partners. The Adjust SDK will continue to work as expected.&lt;/p&gt; &#xA;&lt;p&gt;Call the following method to instruct the Adjust SDK to send the granular options to the Adjust backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJThirdPartySharing *adjustThirdPartySharing = [[ADJThirdPartySharing alloc] initWithIsEnabledNumberBool:nil];&#xA;[adjustThirdPartySharing addGranularOption:@&#34;PartnerA&#34; key:@&#34;foo&#34; value:@&#34;bar&#34;];&#xA;[Adjust trackThirdPartySharing:adjustThirdPartySharing];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;measurement-consent&#34;&gt;&lt;/a&gt;Consent measurement for specific users&lt;/h3&gt; &#xA;&lt;p&gt;To enable or disable the Data Privacy settings in the Adjust Dashboard, including the consent expiry period and the user data retention period, you need to implement the below method.&lt;/p&gt; &#xA;&lt;p&gt;Call the following method to instruct the Adjust SDK to communicate the Data Privacy settings, to the Adjust backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust trackMeasurementConsent:YES];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon receiving this information, Adjust changes sharing the specific user&#39;s data to partners. The Adjust SDK will continue to work as expected.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;sdk-signature&#34;&gt;&lt;/a&gt; SDK signature&lt;/h3&gt; &#xA;&lt;p&gt;The Adjust SDK signature is enabled on a client-by-client basis. If you are interested in using this feature, please contact your account manager.&lt;/p&gt; &#xA;&lt;p&gt;If the SDK signature has already been enabled on your account and you have access to App Secrets in your Adjust Dashboard, please use the method below to integrate the SDK signature into your app.&lt;/p&gt; &#xA;&lt;p&gt;An App Secret is set by calling &lt;code&gt;setAppSecret&lt;/code&gt; on your &lt;code&gt;AdjustConfig&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setAppSecret:secretId info1:info1 info2:info2 info3:info3 info4:info4];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;background-tracking&#34;&gt;&lt;/a&gt;Background tracking&lt;/h3&gt; &#xA;&lt;p&gt;The default behaviour of the Adjust SDK is to pause sending HTTP requests while the app is in the background. You can change this in your &lt;code&gt;AdjustConfig&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setSendInBackground:YES];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If nothing is set, sending in background is &lt;strong&gt;disabled by default&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;device-ids&#34;&gt;&lt;/a&gt;Device IDs&lt;/h3&gt; &#xA;&lt;p&gt;The Adjust SDK offers you possibility to obtain some of the device identifiers.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;di-idfa&#34;&gt;&lt;/a&gt;iOS Advertising Identifier&lt;/h3&gt; &#xA;&lt;p&gt;Certain services (such as Google Analytics) require you to coordinate device and client IDs in order to prevent duplicate reporting.&lt;/p&gt; &#xA;&lt;p&gt;To obtain the device identifier IDFA, call the function &lt;code&gt;idfa&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *idfa = [Adjust idfa];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;di-adid&#34;&gt;&lt;/a&gt;Adjust device identifier&lt;/h3&gt; &#xA;&lt;p&gt;For each device with your app installed, adjust backend generates unique &lt;strong&gt;adjust device identifier&lt;/strong&gt; (&lt;strong&gt;adid&lt;/strong&gt;). In order to obtain this identifier, you can make a call to the following method on the &lt;code&gt;Adjust&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *adid = [Adjust adid];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Information about the &lt;strong&gt;adid&lt;/strong&gt; is available after the app&#39;s installation has been tracked by the adjust backend. From that moment on, the Adjust SDK has information about the device &lt;strong&gt;adid&lt;/strong&gt; and you can access it with this method. So, &lt;strong&gt;it is not possible&lt;/strong&gt; to access the &lt;strong&gt;adid&lt;/strong&gt; before the SDK has been initialised and the installation of your app has been tracked successfully.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;user-attribution&#34;&gt;&lt;/a&gt;User attribution&lt;/h3&gt; &#xA;&lt;p&gt;The attribution callback will be triggered as described in the &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#attribution-callback&#34;&gt;attribution callback section&lt;/a&gt;, providing you with the information about any new attribution when ever it changes. In any other case, where you want to access information about your user&#39;s current attribution, you can make a call to the following method of the &lt;code&gt;Adjust&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJAttribution *attribution = [Adjust attribution];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Information about current attribution is available after app installation has been tracked by the adjust backend and attribution callback has been initially triggered. From that moment on, Adjust SDK has information about your user&#39;s attribution and you can access it with this method. So, &lt;strong&gt;it is not possible&lt;/strong&gt; to access user&#39;s attribution value before the SDK has been initialised and attribution callback has been initially triggered.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;push-token&#34;&gt;&lt;/a&gt;Push token&lt;/h3&gt; &#xA;&lt;p&gt;Push tokens are used for Audience Builder and client callbacks, and they are required for uninstall and reinstall tracking.&lt;/p&gt; &#xA;&lt;p&gt;To send us the push notification token, add the following call to &lt;code&gt;Adjust&lt;/code&gt; in the &lt;code&gt;didRegisterForRemoteNotificationsWithDeviceToken&lt;/code&gt; of your app delegate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)application:(UIApplication *)app didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {&#xA;    [Adjust setDeviceToken:deviceToken];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;pre-installed-trackers&#34;&gt;&lt;/a&gt;Pre-installed trackers&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the Adjust SDK to recognize users that found your app pre-installed on their device, follow these steps.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new tracker in your &lt;a href=&#34;http://adjust.com&#34;&gt;dashboard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open your app delegate and add set the default tracker of your &lt;code&gt;ADJConfig&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;ADJConfig *adjustConfig = [ADJConfig configWithAppToken:yourAppToken environment:environment];&#xA;[adjustConfig setDefaultTracker:@&#34;{TrackerToken}&#34;];&#xA;[Adjust appDidLaunch:adjustConfig];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;{TrackerToken}&lt;/code&gt; with the tracker token you created in step 2. Please note that the dashboard displays a tracker URL (including &lt;code&gt;http://app.adjust.com/&lt;/code&gt;). In your source code, you should specify only the six-character token and not the entire URL.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and run your app. You should see a line like the following in XCode:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Default tracker: &#39;abc123&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking&#34;&gt;&lt;/a&gt;Deep linking&lt;/h3&gt; &#xA;&lt;p&gt;If you are using the adjust tracker URL with an option to deep link into your app from the URL, there is the possibility to get info about the deep link URL and its content. Hitting the URL can happen when the user has your app already installed (standard deep linking scenario) or if they don&#39;t have the app on their device (deferred deep linking scenario). Both of these scenarios are supported by the Adjust SDK and in both cases the deep link URL will be provided to you after you app has been started after hitting the tracker URL. In order to use this feature in your app, you need to set it up properly.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking-standard&#34;&gt;&lt;/a&gt;Standard deep linking scenario&lt;/h3&gt; &#xA;&lt;p&gt;If your user already has the app installed and hits the tracker URL with deep link information in it, your application will be opened and the content of the deep link will be sent to your app so that you can parse it and decide what to do next. With introduction of iOS 9, Apple has changed the way how deep linking should be handled in the app. Depending on which scenario you want to use for your app (or if you want to use them both to support wide range of devices), you need to set up your app to handle one or both of the following scenarios.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking-setup-old&#34;&gt;&lt;/a&gt;Deep linking on iOS 8 and earlier&lt;/h3&gt; &#xA;&lt;p&gt;Deep linking on iOS 8 and earlier devices is being done with usage of a custom URL scheme setting. You need to pick a custom URL scheme name which your app will be in charge for opening. This scheme name will also be used in the adjust tracker URL as part of the &lt;code&gt;deep_link&lt;/code&gt; parameter. In order to set this in your app, open your &lt;code&gt;Info.plist&lt;/code&gt; file and add new &lt;code&gt;URL types&lt;/code&gt; row to it. In there, as &lt;code&gt;URL identifier&lt;/code&gt; write you app&#39;s bundle ID and under &lt;code&gt;URL schemes&lt;/code&gt; add scheme name(s) which you want your app to handle. In the example below, we have chosen that our app should handle the &lt;code&gt;adjustExample&lt;/code&gt; scheme name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/adjust/sdks/master/Resources/ios/custom-url-scheme.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After this has been set up, your app will be opened after you click the adjust tracker URL with &lt;code&gt;deep_link&lt;/code&gt; parameter which contains the scheme name which you have chosen. After app is opened, &lt;code&gt;openURL&lt;/code&gt; method of your &lt;code&gt;AppDelegate&lt;/code&gt; class will be triggered and the place where the content of the &lt;code&gt;deep_link&lt;/code&gt; parameter from the tracker URL will be delivered. If you want to access the content of the deep link, override this method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary *)options {&#xA;    // url object contains your deep link content&#xA;&#xA;    // Apply your logic to determine the return value of this method&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this setup, you have successfully set up deep linking handling for iOS devices with iOS 8 and earlier versions.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking-setup-new&#34;&gt;&lt;/a&gt;Deep linking on iOS 9 and later&lt;/h3&gt; &#xA;&lt;p&gt;In order to set deep linking support for iOS 9 and later devices, you need to enable your app to handle Apple universal links. To find out more about universal links and how their setup looks like, you can check &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Adjust is taking care of lots of things to do with universal links behind the scenes. But, in order to support universal links with the adjust, you need to perform small setup for universal links in the adjust dashboard. For more information on that should be done, please consult our official &lt;a href=&#34;https://docs.adjust.com/en/universal-links/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have successfully enabled the universal links feature in the dashboard, you need to do this in your app as well:&lt;/p&gt; &#xA;&lt;p&gt;After enabling &lt;code&gt;Associated Domains&lt;/code&gt; for your app in Apple Developer Portal, you need to do the same thing in your app&#39;s Xcode project. After enabling &lt;code&gt;Assciated Domains&lt;/code&gt;, add the universal link which was generated for you in the adjust dashboard in the &lt;code&gt;Domains&lt;/code&gt; section by prefixing it with &lt;code&gt;applinks:&lt;/code&gt; and make sure that you also remove the &lt;code&gt;http(s)&lt;/code&gt; part of the universal link.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/adjust/sdks/master/Resources/ios/associated-domains-applinks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After this has been set up, your app will be opened after you click the adjust tracker universal link. After app is opened, &lt;code&gt;continueUserActivity&lt;/code&gt; method of your &lt;code&gt;AppDelegate&lt;/code&gt; class will be triggered and the place where the content of the universal link URL will be delivered. If you want to access the content of the deep link, override this method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity&#xA; restorationHandler:(void (^)(NSArray *restorableObjects))restorationHandler {&#xA;    if ([[userActivity activityType] isEqualToString:NSUserActivityTypeBrowsingWeb]) {&#xA;        NSURL *url = [userActivity webpageURL];&#xA;&#xA;        // url object contains your universal link content&#xA;    }&#xA;&#xA;    // Apply your logic to determine the return value of this method&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this setup, you have successfully set up deep linking handling for iOS devices with iOS 9 and later versions.&lt;/p&gt; &#xA;&lt;p&gt;We provide a helper function that allows you to convert a universal link to an old style deep link URL, in case you had some custom logic in your code which was always expecting deep link info to arrive in old style custom URL scheme format. You can call this method with universal link and the custom URL scheme name which you would like to see your deep link prefixed with and we will generate the custom URL scheme deep link for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity&#xA; restorationHandler:(void (^)(NSArray *restorableObjects))restorationHandler {&#xA;    if ([[userActivity activityType] isEqualToString:NSUserActivityTypeBrowsingWeb]) {&#xA;        NSURL *url = [userActivity webpageURL];&#xA;&#xA;        NSURL *oldStyleDeeplink = [Adjust convertUniversalLink:url scheme:@&#34;adjustExample&#34;];&#xA;    }&#xA;&#xA;    // Apply your logic to determine the return value of this method&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking-deferred&#34;&gt;&lt;/a&gt;Deferred deep linking scenario&lt;/h3&gt; &#xA;&lt;p&gt;You can register a delegate callback to be notified before a deferred deep link is opened and decide if the Adjust SDK will try to open it. The same optional protocol &lt;code&gt;AdjustDelegate&lt;/code&gt; used for the &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#attribution-callback&#34;&gt;attribution callback&lt;/a&gt; and for &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#event-session-callbacks&#34;&gt;event and session callbacks&lt;/a&gt; is used.&lt;/p&gt; &#xA;&lt;p&gt;Follow the same steps and implement the following delegate callback function for deferred deep links:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)adjustDeeplinkResponse:(NSURL *)deeplink {&#xA;    // deeplink object contains information about deferred deep link content&#xA;&#xA;    // Apply your logic to determine whether the Adjust SDK should try to open the deep link&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The callback function will be called after the SDK receives a deferred deep link from our server and before opening it. Within the callback function you have access to the deep link. The returned boolean value determines if the SDK will launch the deep link. You could, for example, not allow the SDK to open the deep link at the current moment, save it, and open it yourself later.&lt;/p&gt; &#xA;&lt;p&gt;If this callback is not implemented, &lt;strong&gt;the Adjust SDK will always try to open the deep link by default&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;deeplinking-reattribution&#34;&gt;&lt;/a&gt;Reattribution via deep links&lt;/h3&gt; &#xA;&lt;p&gt;Adjust enables you to run re-engagement campaigns with usage of deep links. For more information on how to do that, please check our &lt;a href=&#34;https://docs.adjust.com/en/deeplinking/#manually-appending-attribution-data-to-a-deep-link&#34;&gt;official docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using this feature, in order for your user to be properly reattributed, you need to make one additional call to the Adjust SDK in your app.&lt;/p&gt; &#xA;&lt;p&gt;Once you have received deep link content information in your app, add a call to the &lt;code&gt;appWillOpenUrl&lt;/code&gt; method. By making this call, the Adjust SDK will try to find if there is any new attribution info inside of the deep link and if any, it will be sent to the adjust backend. If your user should be reattributed due to a click on the adjust tracker URL with deep link content in it, you will see the &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#attribution-callback&#34;&gt;attribution callback&lt;/a&gt; in your app being triggered with new attribution info for this user.&lt;/p&gt; &#xA;&lt;p&gt;The call to &lt;code&gt;appWillOpenUrl&lt;/code&gt; should be done like this to support deep linking reattributions in all iOS versions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary *)options {&#xA;    // url object contains your deep link content&#xA;    &#xA;    [Adjust appWillOpenUrl:url];&#xA;&#xA;    // Apply your logic to determine the return value of this method&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity&#xA; restorationHandler:(void (^)(NSArray *restorableObjects))restorationHandler {&#xA;    if ([[userActivity activityType] isEqualToString:NSUserActivityTypeBrowsingWeb]) {&#xA;        NSURL url = [userActivity webpageURL];&#xA;&#xA;        [Adjust appWillOpenUrl:url];&#xA;    }&#xA;&#xA;    // Apply your logic to determine the return value of this method&#xA;    return YES;&#xA;    // or&#xA;    // return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;link-resolution&#34;&gt;&lt;/a&gt;Link resolution&lt;/h3&gt; &#xA;&lt;p&gt;If you are serving deep links from an Email Service Provider (ESP) and need to track clicks through a custom tracking link, you can use the &lt;code&gt;resolveLinkWithUrl&lt;/code&gt; method of the &lt;code&gt;ADJLinkResolution&lt;/code&gt; class to resolve the link. This ensures that you record the interaction with your email tracking campaigns when a deep link is opened in your application.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;resolveLinkWithUrl&lt;/code&gt; method takes the following parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; - the deep link that opened the application&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resolveUrlSuffixArray&lt;/code&gt; - the custom domains of the configured campaigns that need to be resolved&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;callback&lt;/code&gt; - the callback that will contain the final URL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the link received does not belong to any of the domains specified in the &lt;code&gt;resolveUrlSuffixArray&lt;/code&gt;, the callback will forward the deep link URL as is. If the link does contain one of the domains specified, the SDK will attempt to resolve the link and return the resulting deep link to the &lt;code&gt;callback&lt;/code&gt; parameter. The returned deep link can also be reattributed in the Adjust SDK using the &lt;code&gt;[Adjust appWillOpenUrl:]&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The SDK will automatically follow up to ten redirects when attempting to resolve the URL. It will return the latest URL it has followed as the &lt;code&gt;callback&lt;/code&gt; URL, meaning that if there are more than ten redirects to follow the &lt;strong&gt;tenth redirect URL&lt;/strong&gt; will be returned.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[ADJLinkResolution&#xA;    resolveLinkWithUrl:url&#xA;    resolveUrlSuffixArray:@[@&#34;example.com&#34;]&#xA;    callback:^(NSURL * _Nullable resolvedLink)&#xA;    {&#xA;        [Adjust appWillOpenUrl:resolvedLink];&#xA;    }];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;data-residency&#34;&gt;&lt;/a&gt;Data residency&lt;/h3&gt; &#xA;&lt;p&gt;In order to enable data residency feature, make sure to make a call to &lt;code&gt;setUrlStrategy:&lt;/code&gt; method of the &lt;code&gt;ADJConfig&lt;/code&gt; instance with one of the following constants:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setUrlStrategy:ADJDataResidencyEU]; // for EU data residency region&#xA;[adjustConfig setUrlStrategy:ADJDataResidencyTR]; // for Turkey data residency region&#xA;[adjustConfig setUrlStrategy:ADJDataResidencyUS]; // for US data residency region&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please, do not turn this setting on before making sure with the support team that this feature is enabled for your app because otherwise SDK traffic will get dropped.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;af-coppa-compliance&#34;&gt;&lt;/a&gt;COPPA compliance&lt;/h3&gt; &#xA;&lt;p&gt;By default Adjust SDK doesn&#39;t mark app as COPPA compliant. In order to mark your app as COPPA compliant, make sure to call &lt;code&gt;setCoppaCompliantEnabled&lt;/code&gt; method of &lt;code&gt;AdjustConfig&lt;/code&gt; instance with boolean parameter &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;b&gt;Native App SDK&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[adjustConfig setCoppaCompliantEnabled:YES];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;b&gt;Web View SDK&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;adjustConfig.setCoppaCompliantEnabled(true);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By enabling this feature, third-party sharing will be automatically disabled for the users. If later during the app lifetime you decide not to mark app as COPPA compliant anymore, third-party sharing &lt;strong&gt;will not be automatically re-enabled&lt;/strong&gt;. Instead, next to not marking your app as COPPA compliant anymore, you will need to explicitly re-enable third-party sharing in case you want to do that.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;troubleshooting&#34;&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-delayed-init&#34;&gt;&lt;/a&gt;Issues with delayed SDK initialisation&lt;/h3&gt; &#xA;&lt;p&gt;As described in the &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#basic-setup&#34;&gt;basic setup step&lt;/a&gt;, we strongly advise you to initialise the Adjust SDK in the &lt;code&gt;didFinishLaunching&lt;/code&gt; or &lt;code&gt;didFinishLaunchingWithOptions&lt;/code&gt; method of your app delegate. It is imperative to initialise the Adjust SDK in as soon as possible so that you can use all the features of the SDK.&lt;/p&gt; &#xA;&lt;p&gt;Deciding not to initialise the Adjust SDK immediately can have all kinds of impacts on the tracking in your app: &lt;strong&gt;In order to perform any kind of tracking in your app, the Adjust SDK &lt;em&gt;must&lt;/em&gt; be initialised.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you decide to perform any of these actions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#event-tracking&#34;&gt;Event tracking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-reattribution&#34;&gt;Reattribution via deep links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#disable-tracking&#34;&gt;Disable tracking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#offline-mode&#34;&gt;Offline mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;before initialising the SDK, &lt;code&gt;they won&#39;t be performed&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want any of these actions to be tracked with the Adjust SDK before its actual initialisation, you must build a &lt;code&gt;custom actions queueing mechanism&lt;/code&gt; inside your app. You need to queue all the actions you want our SDK to perform and perform them once the SDK is initialised.&lt;/p&gt; &#xA;&lt;p&gt;Offline mode state won&#39;t be changed, tracking enabled/disabled state won&#39;t be changed, deep link reattributions will not be possible to happen, any of tracked events will be &lt;code&gt;dropped&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Another thing which might be affected by delayed SDK initialisation is session tracking. The Adjust SDK can&#39;t start to collect any session length info before it is actually initialised. This can affect your DAU numbers in the dashboard which might not be tracked properly.&lt;/p&gt; &#xA;&lt;p&gt;As an example, let&#39;s assume this scenario: You are initialising the Adjust SDK when some specific view or view controller is loaded and let&#39;s say that this is not the splash nor the first screen in your app, but user has to navigate to it from the home screen. If user downloads your app and opens it, the home screen will be displayed. At this moment, this user has made an install which should be tracked. However, the Adjust SDK doesn&#39;t know anything about this, because the user needs to navigate to the screen mentioned previously where you decided to initialise the Adjust SDK. Further, if the user decides that he/she doesn&#39;t like the app and uninstalls it right after seeing home screen, all the information mentioned above will never be tracked by our SDK, nor displayed in the dashboard.&lt;/p&gt; &#xA;&lt;h4&gt;Event tracking&lt;/h4&gt; &#xA;&lt;p&gt;For the events you want to track, queue them with some internal queueing mechanism and track them after SDK is initialised. Tracking events before initialising SDK will cause the events to be &lt;code&gt;dropped&lt;/code&gt; and &lt;code&gt;permanently lost&lt;/code&gt;, so make sure you are tracking them once SDK is &lt;code&gt;initialised&lt;/code&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#is-enabled&#34;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Offline mode and enable/disable tracking&lt;/h4&gt; &#xA;&lt;p&gt;Offline mode is not the feature which is persisted between SDK initialisations, so it is set to &lt;code&gt;false&lt;/code&gt; by default. If you try to enable offline mode before initialising SDK, it will still be set to &lt;code&gt;false&lt;/code&gt; when you eventually initialise the SDK.&lt;/p&gt; &#xA;&lt;p&gt;Enabling/disabling tracking is the setting which is persisted between the SDK initialisations. If you try to toggle this value before initialising the SDK, toggle attempt will be ignored. Once initialised, SDK will be in the state (enabled or disabled) like before this toggle attempt.&lt;/p&gt; &#xA;&lt;h4&gt;Reattribution via deep links&lt;/h4&gt; &#xA;&lt;p&gt;As described &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#deeplinking-reattribution&#34;&gt;above&lt;/a&gt;, when handling deep link reattributions, depending on deep linking mechanism you are using (old style vs. universal links), you will obtain &lt;code&gt;NSURL&lt;/code&gt; object after which you need to make following call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[Adjust appWillOpenUrl:url]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you make this call before the SDK has been initialised, information about the attribution information from the deep link URL will be permanetly lost. If you want the Adjust SDK to successfully reattribute your user, you would need to queue this &lt;code&gt;NSURL&lt;/code&gt; object information and trigger &lt;code&gt;appWillOpenUrl&lt;/code&gt; method once the SDK has been initialised.&lt;/p&gt; &#xA;&lt;h4&gt;Session tracking&lt;/h4&gt; &#xA;&lt;p&gt;Session tracking is something what the Adjust SDK performs automatically and is beyond reach of an app developer. For proper session tracking it is crucial to have the Adjust SDK initialised as advised in this README. Not doing so can have unpredicted influences on proper session tracking and DAU numbers in the dashboard.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A user opens but then deletes your app before the SDK was even inialised, causing the install and session to have never been tracked, thus never reported in the dashboard.&lt;/li&gt; &#xA; &lt;li&gt;If a user downloads and opens your app before midnight, and the Adjust SDK gets initialised after midnight, all queued install and session data will be reported on wrong day.&lt;/li&gt; &#xA; &lt;li&gt;If a user didn&#39;t use your app on some day but opens it shortly after midnight and the SDK gets initialised after midnight, causing DAU to be reported on another day from the day of the app opening.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For all these reasons, please follow the instructions in this document and initialise the Adjust SDK in the &lt;code&gt;didFinishLaunching&lt;/code&gt; or &lt;code&gt;didFinishLaunchingWithOptions&lt;/code&gt; method of your app delegate.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-arc&#34;&gt;&lt;/a&gt;I&#39;m seeing &#34;Adjust requires ARC&#34; error&lt;/h3&gt; &#xA;&lt;p&gt;If your build failed with the error &lt;code&gt;Adjust requires ARC&lt;/code&gt;, it looks like your project is not using &lt;a href=&#34;http://en.wikipedia.org/wiki/Automatic_Reference_Counting&#34;&gt;ARC&lt;/a&gt;. In that case we recommend &lt;a href=&#34;http://developer.apple.com/library/mac/#releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html&#34;&gt;transitioning your project&lt;/a&gt; so that it does use ARC. If you don&#39;t want to use ARC, you have to enable ARC for all source files of adjust in the target&#39;s Build Phases:&lt;/p&gt; &#xA;&lt;p&gt;Expand the &lt;code&gt;Compile Sources&lt;/code&gt; group, select all adjust files and change the &lt;code&gt;Compiler Flags&lt;/code&gt; to &lt;code&gt;-fobjc-arc&lt;/code&gt; (Select all and press the &lt;code&gt;Return&lt;/code&gt; key to change all at once).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-categories&#34;&gt;&lt;/a&gt;I&#39;m seeing &#34;[UIDevice adjTrackingEnabled]: unrecognized selector sent to instance&#34; error&lt;/h3&gt; &#xA;&lt;p&gt;This error can occur when you are adding the Adjust SDK framework to your app. The Adjust SDK contains &lt;code&gt;categories&lt;/code&gt; among it&#39;s source files and for this reason, if you have chosen this SDK integration approach, you need to add &lt;code&gt;-ObjC&lt;/code&gt; flags to &lt;code&gt;Other Linker Flags&lt;/code&gt; in your Xcode project settings. Adding this flag will fix this error.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-session-failed&#34;&gt;&lt;/a&gt;I&#39;m seeing the &#34;Session failed (Ignoring too frequent session.)&#34; error&lt;/h3&gt; &#xA;&lt;p&gt;This error typically occurs when testing installs. Uninstalling and reinstalling the app is not enough to trigger a new install. The servers will determine that the SDK has lost its locally aggregated session data and ignore the erroneous message, given the information available on the servers about the device.&lt;/p&gt; &#xA;&lt;p&gt;This behaviour can be cumbersome during tests, but is necessary in order to have the sandbox behaviour match production as much as possible.&lt;/p&gt; &#xA;&lt;p&gt;You can reset the session data of the device in our servers. Check the error message in the logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Session failed (Ignoring too frequent session. Last session: YYYY-MM-DDTHH:mm:ss, this session: YYYY-MM-DDTHH:mm:ss, interval: XXs, min interval: 20m) (app_token: {yourAppToken}, adid: {adidValue})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a id=&#34;forget-device&#34;&gt;With the &lt;code&gt;{yourAppToken}&lt;/code&gt; and either &lt;code&gt;{adidValue}&lt;/code&gt; or &lt;code&gt;{idfaValue}&lt;/code&gt; values filled in below, open one of the following links:&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a id=&#34;forget-device&#34;&gt; &lt;pre&gt;&lt;code&gt;http://app.adjust.com/forget_device?app_token={yourAppToken}&amp;amp;adid={adidValue}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;http://app.adjust.com/forget_device?app_token={yourAppToken}&amp;amp;idfa={idfaValue}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When the device is forgotten, the link just returns &lt;code&gt;Forgot device&lt;/code&gt;. If the device was already forgotten or the values were incorrect, the link returns &lt;code&gt;Device not found&lt;/code&gt;.&lt;/p&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a id=&#34;forget-device&#34;&gt;&lt;/a&gt;&lt;a id=&#34;ts-install-tracked&#34;&gt;&lt;/a&gt;I&#39;m not seeing &#34;Install tracked&#34; in the logs&lt;/h3&gt; &#xA;&lt;p&gt;If you want to simulate the installation scenario of your app on your test device, it is not enough if you just re-run the app from the Xcode on your test device. Re-running the app from the Xcode doesn&#39;t cause app data to be wiped out and all internal files that our SDK is keeping inside your app will still be there, so upon re-run, our SDK will see those files and think of your app was already installed (and that SDK was already launched in it) but just opened for another time rather than being opened for the first time.&lt;/p&gt; &#xA;&lt;p&gt;In order to run the app installation scenario, you need to do following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uninstall app from your device (completely remove it)&lt;/li&gt; &#xA; &lt;li&gt;Forget your test device from the adjust backend like explained in the issue &lt;a href=&#34;https://raw.githubusercontent.com/adjust/ios_sdk/master/#forget-device&#34;&gt;above&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run your app from the Xcode on the test device and you will see log message &#34;Install tracked&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-iad-sdk-click&#34;&gt;&lt;/a&gt;I&#39;m seeing the &#34;Unattributable SDK click ignored&#34; message&lt;/h3&gt; &#xA;&lt;p&gt;You may notice this message while testing your app in &lt;code&gt;sandbox&lt;/code&gt; environment. It is related to some changes Apple introduced in &lt;code&gt;iAd.framework&lt;/code&gt; version 3. With this, a user can be directed to your app from a click on iAd banner and this will cause our SDK to send an &lt;code&gt;sdk_click&lt;/code&gt; package to the adjust backend informing it about the content of the clicked URL. For some reason, Apple decided that if the app was opened without clicking on iAd banner, they will artificially generate an iAd banner URL click with some random values. Our SDK won&#39;t be able to distinguish if the iAd banner click was genuine or artificially generated and will send an &lt;code&gt;sdk_click&lt;/code&gt; package regardless to the adjust backend. If you have your log level set to &lt;code&gt;verbose&lt;/code&gt;, you will see this &lt;code&gt;sdk_click&lt;/code&gt; package looking something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Adjust]d: Added package 1 (click)&#xA;[Adjust]v: Path:      /sdk_click&#xA;[Adjust]v: ClientSdk: ios4.10.1&#xA;[Adjust]v: Parameters:&#xA;[Adjust]v:      app_token              {YourAppToken}&#xA;[Adjust]v:      created_at             2016-04-15T14:25:51.676Z+0200&#xA;[Adjust]v:      details                {&#34;Version3.1&#34;:{&#34;iad-lineitem-id&#34;:&#34;1234567890&#34;,&#34;iad-org-name&#34;:&#34;OrgName&#34;,&#34;iad-creative-name&#34;:&#34;CreativeName&#34;,&#34;iad-click-date&#34;:&#34;2016-04-15T12:25:51Z&#34;,&#34;iad-campaign-id&#34;:&#34;1234567890&#34;,&#34;iad-attribution&#34;:&#34;true&#34;,&#34;iad-lineitem-name&#34;:&#34;LineName&#34;,&#34;iad-creative-id&#34;:&#34;1234567890&#34;,&#34;iad-campaign-name&#34;:&#34;CampaignName&#34;,&#34;iad-conversion-date&#34;:&#34;2016-04-15T12:25:51Z&#34;}}&#xA;[Adjust]v:      environment            sandbox&#xA;[Adjust]v:      idfa                   XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&#xA;[Adjust]v:      idfv                   YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY&#xA;[Adjust]v:      needs_response_details 1&#xA;[Adjust]v:      source                 iad3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If for some reason this &lt;code&gt;sdk_click&lt;/code&gt; would be accepted, it would mean that a user who has opened your app by clicking on some other campaign URL or even as an organic user, will get attributed to this unexisting iAd source. This is the reason why our backend ignores it and informs you with this message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Adjust]v: Response: {&#34;message&#34;:&#34;Unattributable SDK click ignored.&#34;}&#xA;[Adjust]i: Unattributable SDK click ignored.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, this message doesn&#39;t indicate any issue with your SDK integration but it&#39;s simply informing you that our backend has ignored this artificially created &lt;code&gt;sdk_click&lt;/code&gt; which could have lead to your user being wrongly attributed/reattributed.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;ts-wrong-revenue-amount&#34;&gt;&lt;/a&gt;I&#39;m seeing incorrect revenue data in the adjust dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Adjust SDK tracks what you tell it to track. If you are attaching revenue to your event, the number you write as an amount is the only amount which will reach the adjust backend and be displayed in the dashboard. Our SDK does not manipulate your amount value, nor does our backend. So, if you see wrong amount being tracked, it&#39;s because our SDK was told to track that amount.&lt;/p&gt; &#xA;&lt;p&gt;Usually, a user&#39;s code for tracking revenue event looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// ...&#xA;&#xA;- (double)someLogicForGettingRevenueAmount {&#xA;    // This method somehow handles how user determines&#xA;    // what&#39;s the revenue value which should be tracked.&#xA;&#xA;    // It is maybe making some calculations to determine it.&#xA;&#xA;    // Or maybe extracting the info from In-App purchase which&#xA;    // was successfully finished.&#xA;&#xA;    // Or maybe returns some predefined double value.&#xA;&#xA;    double amount; // double amount = some double value&#xA;&#xA;    return amount;&#xA;}&#xA;&#xA;// ...&#xA;&#xA;- (void)someRandomMethodInTheApp {&#xA;    double amount = [self someLogicForGettingRevenueAmount];&#xA;&#xA;    ADJEvent *event = [ADJEvent eventWithEventToken:@&#34;abc123&#34;];&#xA;    [event setRevenue:amount currency:@&#34;EUR&#34;];&#xA;    [Adjust trackEvent:event];&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are seing any value in the dashboard other than what you expected to be tracked, &lt;strong&gt;please, check your logic for determining amount value&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;license&#34;&gt;&lt;/a&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Adjust SDK is licensed under the MIT License.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2012-Present Adjust GmbH, &lt;a href=&#34;http://www.adjust.com&#34;&gt;http://www.adjust.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/cordova-plugin-inappbrowser</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/apache/cordova-plugin-inappbrowser</id>
    <link href="https://github.com/apache/cordova-plugin-inappbrowser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Cordova Plugin inappbrowser&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;title: Inappbrowser description: Open an in-app browser window.&lt;/h2&gt; &#xA;&lt;!--&#xA;# license: Licensed to the Apache Software Foundation (ASF) under one&#xA;#         or more contributor license agreements.  See the NOTICE file&#xA;#         distributed with this work for additional information&#xA;#         regarding copyright ownership.  The ASF licenses this file&#xA;#         to you under the Apache License, Version 2.0 (the&#xA;#         &#34;License&#34;); you may not use this file except in compliance&#xA;#         with the License.  You may obtain a copy of the License at&#xA;#&#xA;#           http://www.apache.org/licenses/LICENSE-2.0&#xA;#&#xA;#         Unless required by applicable law or agreed to in writing,&#xA;#         software distributed under the License is distributed on an&#xA;#         &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY&#xA;#         KIND, either express or implied.  See the License for the&#xA;#         specific language governing permissions and limitations&#xA;#         under the License.&#xA;--&gt; &#xA;&lt;h1&gt;cordova-plugin-inappbrowser&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/chrome.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/chrome.yml/badge.svg?sanitize=true&#34; alt=&#34;Chrome Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/ios.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/ios.yml/badge.svg?sanitize=true&#34; alt=&#34;iOS Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-inappbrowser/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can show helpful articles, videos, and web resources inside of your app. Users can view web pages without leaving your app.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To get a few ideas, check out the &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#sample&#34;&gt;sample&lt;/a&gt; at the bottom of this page or go straight to the &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#reference&#34;&gt;reference&lt;/a&gt; content.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This plugin provides a web browser view that displays when calling &lt;code&gt;cordova.InAppBrowser.open()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;window.open&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;cordova.InAppBrowser.open()&lt;/code&gt; function is defined to be a drop-in replacement for the &lt;code&gt;window.open()&lt;/code&gt; function. Existing &lt;code&gt;window.open()&lt;/code&gt; calls can use the InAppBrowser window, by replacing window.open:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;window.open = cordova.InAppBrowser.open;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you change the browsers &lt;code&gt;window.open&lt;/code&gt; function this way, it can have unintended side effects (especially if this plugin is included only as a dependency of another plugin).&lt;/p&gt; &#xA;&lt;p&gt;The InAppBrowser window behaves like a standard web browser, and can&#39;t access Cordova APIs. For this reason, the InAppBrowser is recommended if you need to load third-party (untrusted) content, instead of loading that into the main Cordova webview. The InAppBrowser is not subject to the whitelist, nor is opening links in the system browser.&lt;/p&gt; &#xA;&lt;p&gt;The InAppBrowser provides by default its own GUI controls for the user (back, forward, done).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;cordova plugin add cordova-plugin-inappbrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want all page loads in your app to go through the InAppBrowser, you can simply hook &lt;code&gt;window.open&lt;/code&gt; during initialization. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;document.addEventListener(&#34;deviceready&#34;, onDeviceReady, false);&#xA;function onDeviceReady() {&#xA;    window.open = cordova.InAppBrowser.open;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Preferences&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;b&gt;config.xml&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;InAppBrowserStatusBarStyle [iOS only]&lt;/b&gt;: (string, options &#39;lightcontent&#39;, &#39;darkcontent&#39; or &#39;default&#39;. Defaults to &#39;default&#39;) set text color style for iOS. &#39;lightcontent&#39; is intended for use on dark backgrounds. &#39;darkcontent&#39; is only available since iOS 13 and intended for use on light backgrounds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;preference name=&#34;InAppBrowserStatusBarStyle&#34; value=&#34;lightcontent&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;cordova.InAppBrowser.open&lt;/h2&gt; &#xA;&lt;p&gt;Opens a URL in a new &lt;code&gt;InAppBrowser&lt;/code&gt; instance, the current browser instance, or the system browser.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(url, target, options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;: Reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;. &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;url&lt;/strong&gt;: The URL to load &lt;em&gt;(String)&lt;/em&gt;. Call &lt;code&gt;encodeURI()&lt;/code&gt; on this if the URL contains Unicode characters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;target&lt;/strong&gt;: The target in which to load the URL, an optional parameter that defaults to &lt;code&gt;_self&lt;/code&gt;. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;_self&lt;/code&gt;: Opens in the Cordova WebView if the URL is in the white list, otherwise it opens in the &lt;code&gt;InAppBrowser&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;_blank&lt;/code&gt;: Opens in the &lt;code&gt;InAppBrowser&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;_system&lt;/code&gt;: Opens in the system&#39;s web browser.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;: Options for the &lt;code&gt;InAppBrowser&lt;/code&gt;. Optional, defaulting to: &lt;code&gt;location=yes&lt;/code&gt;. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;options&lt;/code&gt; string must not contain any blank space, and each feature&#39;s name/value pairs must be separated by a comma. Feature names are case insensitive.&lt;/p&gt; &lt;p&gt;All platforms support:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;location&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to turn the &lt;code&gt;InAppBrowser&lt;/code&gt;&#39;s location bar on or off.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Android supports these additional options:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to create the browser and load the page, but not show it. The loadstop event fires when loading is complete. Omit or set to &lt;code&gt;no&lt;/code&gt; (default) to have the browser open and load normally.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;beforeload&lt;/strong&gt;: set to enable the &lt;code&gt;beforeload&lt;/code&gt; event to modify which pages are actually loaded in the browser. Accepted values are &lt;code&gt;get&lt;/code&gt; to intercept only GET requests, &lt;code&gt;post&lt;/code&gt; to intercept on POST requests or &lt;code&gt;yes&lt;/code&gt; to intercept both GET &amp;amp; POST requests. Note that POST requests are not currently supported and will be ignored (if you set &lt;code&gt;beforeload=post&lt;/code&gt; it will raise an error).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;clearcache&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to have the browser&#39;s cookie cache cleared before the new window is opened&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;clearsessioncache&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to have the session cookie cache cleared before the new window is opened&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;closebuttoncaption&lt;/strong&gt;: set to a string to use as the close button&#39;s caption instead of a X. Note that you need to localize this value yourself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;closebuttoncolor&lt;/strong&gt;: set to a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, and it will change the close button color from default, regardless of being a text or default X. Only has effect if user has location set to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;footer&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to show a close button in the footer similar to the iOS &lt;strong&gt;Done&lt;/strong&gt; button. The close button will appear the same as for the header hence use &lt;strong&gt;closebuttoncaption&lt;/strong&gt; and &lt;strong&gt;closebuttoncolor&lt;/strong&gt; to set its properties.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;footercolor&lt;/strong&gt;: set to a valid hex color string, for example &lt;code&gt;#00ff00&lt;/code&gt; or &lt;code&gt;#CC00ff00&lt;/code&gt; (&lt;code&gt;#aarrggbb&lt;/code&gt;) , and it will change the footer color from default. Only has effect if user has &lt;strong&gt;footer&lt;/strong&gt; set to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hardwareback&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to use the hardware back button to navigate backwards through the &lt;code&gt;InAppBrowser&lt;/code&gt;&#39;s history. If there is no previous page, the &lt;code&gt;InAppBrowser&lt;/code&gt; will close. The default value is &lt;code&gt;yes&lt;/code&gt;, so you must set it to &lt;code&gt;no&lt;/code&gt; if you want the back button to simply close the InAppBrowser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidenavigationbuttons&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to hide the navigation buttons on the location toolbar, only has effect if user has location set to &lt;code&gt;yes&lt;/code&gt;. The default value is &lt;code&gt;no&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hideurlbar&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to hide the url bar on the location toolbar, only has effect if user has location set to &lt;code&gt;yes&lt;/code&gt;. The default value is &lt;code&gt;no&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;navigationbuttoncolor&lt;/strong&gt;: set to a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, and it will change the color of both navigation buttons from default. Only has effect if user has location set to &lt;code&gt;yes&lt;/code&gt; and not hidenavigationbuttons set to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;toolbarcolor&lt;/strong&gt;: set to a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, and it will change the color the toolbar from default. Only has effect if user has location set to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;lefttoright&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; to swap positions of the navigation buttons and the close button. Specifically, navigation buttons go to the right and close button to the left. Default value is &lt;code&gt;no&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;zoom&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to show Android browser&#39;s zoom controls, set to &lt;code&gt;no&lt;/code&gt; to hide them. Default value is &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;mediaPlaybackRequiresUserAction&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; to prevent HTML5 audio or video from autoplaying (defaults to &lt;code&gt;no&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;shouldPauseOnSuspend&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; to make InAppBrowser WebView to pause/resume with the app to stop background audio (this may be required to avoid Google Play issues like described in &lt;a href=&#34;https://issues.apache.org/jira/browse/CB-11013&#34;&gt;CB-11013&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;useWideViewPort&lt;/strong&gt;: Sets whether the WebView should enable support for the &#34;viewport&#34; HTML meta tag or should use a wide viewport. When the value of the setting is &lt;code&gt;no&lt;/code&gt;, the layout width is always set to the width of the WebView control in device-independent (CSS) pixels. When the value is &lt;code&gt;yes&lt;/code&gt; and the page contains the viewport meta tag, the value of the width specified in the tag is used. If the page does not contain the tag or does not provide a width, then a wide viewport will be used. (defaults to &lt;code&gt;yes&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;fullscreen&lt;/strong&gt;: Sets whether the InappBrowser WebView is displayed fullscreen or not. In fullscreen mode, the status bar is hidden. Default value is &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;iOS supports these additional options:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to create the browser and load the page, but not show it. The loadstop event fires when loading is complete. Omit or set to &lt;code&gt;no&lt;/code&gt; (default) to have the browser open and load normally.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;beforeload&lt;/strong&gt;: set to enable the &lt;code&gt;beforeload&lt;/code&gt; event to modify which pages are actually loaded in the browser. Accepted values are &lt;code&gt;get&lt;/code&gt; to intercept only GET requests, &lt;code&gt;post&lt;/code&gt; to intercept on POST requests or &lt;code&gt;yes&lt;/code&gt; to intercept both GET &amp;amp; POST requests. Note that POST requests are not currently supported and will be ignored (if you set &lt;code&gt;beforeload=post&lt;/code&gt; it will raise an error).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;clearcache&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to have the browser&#39;s cookie cache cleared before the new window is opened&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;clearsessioncache&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to have the session cookie cache cleared before the new window is opened. For WKWebView, requires iOS 11+ on target device.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;cleardata&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to have the browser&#39;s entire local storage cleared (cookies, HTML5 local storage, IndexedDB, etc.) before the new window is opened&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;closebuttoncolor&lt;/strong&gt;: set as a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, to change from the default &lt;strong&gt;Done&lt;/strong&gt; button&#39;s color. Only applicable if toolbar is not disabled.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;closebuttoncaption&lt;/strong&gt;: set to a string to use as the &lt;strong&gt;Done&lt;/strong&gt; button&#39;s caption. Note that you need to localize this value yourself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;disallowoverscroll&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; (default is &lt;code&gt;no&lt;/code&gt;). Turns on/off the the bounce of the WKWebView&#39;s UIScrollView.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidenavigationbuttons&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to turn the toolbar navigation buttons on or off (defaults to &lt;code&gt;no&lt;/code&gt;). Only applicable if toolbar is not disabled.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;navigationbuttoncolor&lt;/strong&gt;: set as a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, to change from the default color. Only applicable if navigation buttons are visible.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;toolbar&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to turn the toolbar on or off for the InAppBrowser (defaults to &lt;code&gt;yes&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;toolbarcolor&lt;/strong&gt;: set as a valid hex color string, for example: &lt;code&gt;#00ff00&lt;/code&gt;, to change from the default color of the toolbar. Only applicable if toolbar is not disabled.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;toolbartranslucent&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to make the toolbar translucent(semi-transparent) (defaults to &lt;code&gt;yes&lt;/code&gt;). Only applicable if toolbar is not disabled.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;lefttoright&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; to swap positions of the navigation buttons and the close button. Specifically, close button goes to the right and navigation buttons to the left.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;enableViewportScale&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to prevent viewport scaling through a meta tag (defaults to &lt;code&gt;no&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;mediaPlaybackRequiresUserAction&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; to prevent HTML5 audio or video from autoplaying (defaults to &lt;code&gt;no&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;allowInlineMediaPlayback&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to allow in-line HTML5 media playback, displaying within the browser window rather than a device-specific playback interface. The HTML&#39;s &lt;code&gt;video&lt;/code&gt; element must also include the &lt;code&gt;webkit-playsinline&lt;/code&gt; attribute (defaults to &lt;code&gt;no&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;presentationstyle&lt;/strong&gt;: Set to &lt;code&gt;pagesheet&lt;/code&gt;, &lt;code&gt;formsheet&lt;/code&gt; or &lt;code&gt;fullscreen&lt;/code&gt; to set the &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uimodalpresentationstyle&#34;&gt;presentation style&lt;/a&gt; (defaults to &lt;code&gt;fullscreen&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;transitionstyle&lt;/strong&gt;: Set to &lt;code&gt;fliphorizontal&lt;/code&gt;, &lt;code&gt;crossdissolve&lt;/code&gt; or &lt;code&gt;coververtical&lt;/code&gt; to set the &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uimodaltransitionstyle&#34;&gt;transition style&lt;/a&gt; (defaults to &lt;code&gt;coververtical&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;toolbarposition&lt;/strong&gt;: Set to &lt;code&gt;top&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt; (default is &lt;code&gt;bottom&lt;/code&gt;). Causes the toolbar to be at the top or bottom of the window.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidespinner&lt;/strong&gt;: Set to &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to change the visibility of the loading indicator (defaults to &lt;code&gt;no&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Windows supports these additional options:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to create the browser and load the page, but not show it. The loadstop event fires when loading is complete. Omit or set to &lt;code&gt;no&lt;/code&gt; (default) to have the browser open and load normally.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hardwareback&lt;/strong&gt;: works the same way as on Android platform.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;fullscreen&lt;/strong&gt;: set to &lt;code&gt;yes&lt;/code&gt; to create the browser control without a border around it. Please note that if &lt;strong&gt;location=no&lt;/strong&gt; is also specified, there will be no control presented to user to close IAB window.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;OSX&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;var ref2 = cordova.InAppBrowser.open(encodeURI(&#39;http://ja.m.wikipedia.org/wiki/ハングル&#39;), &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OSX Quirks&lt;/h3&gt; &#xA;&lt;p&gt;At the moment the only supported target in OSX is &lt;code&gt;_system&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;_blank&lt;/code&gt; and &lt;code&gt;_self&lt;/code&gt; targets are not yet implemented and are ignored silently. Pull requests and patches to get these to work are greatly appreciated.&lt;/p&gt; &#xA;&lt;h3&gt;iOS Quirks&lt;/h3&gt; &#xA;&lt;p&gt;Since the introduction of iPadOS 13, iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to Macintosh, making it hard to detect them as mobile devices using user agent string sniffing. You can change this with the &lt;code&gt;PreferredContentMode&lt;/code&gt; preference in &lt;code&gt;config.xml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;preference name=&#34;PreferredContentMode&#34; value=&#34;mobile&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example above forces the user agent to contain &lt;code&gt;iPad&lt;/code&gt;. The other option is to use the value &lt;code&gt;desktop&lt;/code&gt; to turn the user agent to &lt;code&gt;Macintosh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Browser Quirks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Plugin is implemented via iframe,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigation history (&lt;code&gt;back&lt;/code&gt; and &lt;code&gt;forward&lt;/code&gt; buttons in LocationBar) is not implemented.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;InAppBrowser&lt;/h2&gt; &#xA;&lt;p&gt;The object returned from a call to &lt;code&gt;cordova.InAppBrowser.open&lt;/code&gt; when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;addEventListener&lt;/li&gt; &#xA; &lt;li&gt;removeEventListener&lt;/li&gt; &#xA; &lt;li&gt;close&lt;/li&gt; &#xA; &lt;li&gt;show&lt;/li&gt; &#xA; &lt;li&gt;hide&lt;/li&gt; &#xA; &lt;li&gt;executeScript&lt;/li&gt; &#xA; &lt;li&gt;insertCSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;InAppBrowser.addEventListener&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Adds a listener for an event from the &lt;code&gt;InAppBrowser&lt;/code&gt;. (Only available when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.addEventListener(eventname, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;eventname&lt;/strong&gt;: the event to listen for &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loadstart&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; starts to load a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loadstop&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; finishes loading a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loaderror&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; encounters an error when loading a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;exit&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; window is closed.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;beforeload&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; decides whether to load an URL or not (only with option &lt;code&gt;beforeload&lt;/code&gt; set).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; receives a message posted from the page loaded inside the &lt;code&gt;InAppBrowser&lt;/code&gt; Webview.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;: the function that executes when the event fires. The function is passed an &lt;code&gt;InAppBrowserEvent&lt;/code&gt; object as a parameter.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;var inAppBrowserRef;&#xA;&#xA;function showHelp(url) {&#xA;&#xA;    var target = &#34;_blank&#34;;&#xA;&#xA;    var options = &#34;location=yes,hidden=yes,beforeload=yes&#34;;&#xA;&#xA;    inAppBrowserRef = cordova.InAppBrowser.open(url, target, options);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loadstart&#39;, loadStartCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loadstop&#39;, loadStopCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loaderror&#39;, loadErrorCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;beforeload&#39;, beforeloadCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;message&#39;, messageCallBack);&#xA;}&#xA;&#xA;function loadStartCallBack() {&#xA;&#xA;    $(&#39;#status-message&#39;).text(&#34;loading please wait ...&#34;);&#xA;&#xA;}&#xA;&#xA;function loadStopCallBack() {&#xA;&#xA;    if (inAppBrowserRef != undefined) {&#xA;&#xA;        inAppBrowserRef.insertCSS({ code: &#34;body{font-size: 25px;}&#34; });&#xA;&#xA;        inAppBrowserRef.executeScript({ code: &#34;\&#xA;            var message = &#39;this is the message&#39;;\&#xA;            var messageObj = {my_message: message};\&#xA;            var stringifiedMessageObj = JSON.stringify(messageObj);\&#xA;            webkit.messageHandlers.cordova_iab.postMessage(stringifiedMessageObj);&#34;&#xA;        });&#xA;&#xA;        $(&#39;#status-message&#39;).text(&#34;&#34;);&#xA;&#xA;        inAppBrowserRef.show();&#xA;    }&#xA;&#xA;}&#xA;&#xA;function loadErrorCallBack(params) {&#xA;&#xA;    $(&#39;#status-message&#39;).text(&#34;&#34;);&#xA;&#xA;    var scriptErrorMesssage =&#xA;       &#34;alert(&#39;Sorry we cannot open that page. Message from the server is : &#34;&#xA;       + params.message + &#34;&#39;);&#34;&#xA;&#xA;    inAppBrowserRef.executeScript({ code: scriptErrorMesssage }, executeScriptCallBack);&#xA;&#xA;    inAppBrowserRef.close();&#xA;&#xA;    inAppBrowserRef = undefined;&#xA;&#xA;}&#xA;&#xA;function executeScriptCallBack(params) {&#xA;&#xA;    if (params[0] == null) {&#xA;&#xA;        $(&#39;#status-message&#39;).text(&#xA;           &#34;Sorry we couldn&#39;t open that page. Message from the server is : &#39;&#34;&#xA;           + params.message + &#34;&#39;&#34;);&#xA;    }&#xA;&#xA;}&#xA;&#xA;function beforeloadCallBack(params, callback) {&#xA;&#xA;    if (params.url.startsWith(&#34;http://www.example.com/&#34;)) {&#xA;&#xA;        // Load this URL in the inAppBrowser.&#xA;        callback(params.url);&#xA;    } else {&#xA;&#xA;        // The callback is not invoked, so the page will not be loaded.&#xA;        $(&#39;#status-message&#39;).text(&#34;This browser only opens pages on http://www.example.com/&#34;);&#xA;    }&#xA;&#xA;}&#xA;&#xA;function messageCallBack(params){&#xA;    $(&#39;#status-message&#39;).text(&#34;message received: &#34;+params.data.my_message);&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;InAppBrowserEvent Properties&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;type&lt;/strong&gt;: the eventname, either &lt;code&gt;loadstart&lt;/code&gt;, &lt;code&gt;loadstop&lt;/code&gt;, &lt;code&gt;loaderror&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;exit&lt;/code&gt;. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;url&lt;/strong&gt;: the URL that was loaded. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;code&lt;/strong&gt;: the error code, only in the case of &lt;code&gt;loaderror&lt;/code&gt;. &lt;em&gt;(Number)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;: the error message, only in the case of &lt;code&gt;loaderror&lt;/code&gt;. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;data&lt;/strong&gt;: the message contents , only in the case of &lt;code&gt;message&lt;/code&gt;. A stringified JSON object. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;OSX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Browser Quirks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;loadstart&lt;/code&gt;, &lt;code&gt;loaderror&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; events are not fired.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Quirks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;message&lt;/code&gt; event is not fired.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;ref.addEventListener(&#39;loadstart&#39;, function(event) { alert(event.url); });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InAppBrowser.removeEventListener&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Removes a listener for an event from the &lt;code&gt;InAppBrowser&lt;/code&gt;. (Only available when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.removeEventListener(eventname, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window. &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;eventname&lt;/strong&gt;: the event to stop listening for. &lt;em&gt;(String)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loadstart&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; starts to load a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loadstop&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; finishes loading a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;loaderror&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; encounters an error loading a URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;exit&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; window is closed.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: event fires when the &lt;code&gt;InAppBrowser&lt;/code&gt; receives a message posted from the page loaded inside the &lt;code&gt;InAppBrowser&lt;/code&gt; Webview.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;: the function to execute when the event fires. The function is passed an &lt;code&gt;InAppBrowserEvent&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;var myCallback = function(event) { alert(event.url); }&#xA;ref.addEventListener(&#39;loadstart&#39;, myCallback);&#xA;ref.removeEventListener(&#39;loadstart&#39;, myCallback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InAppBrowser.close&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Closes the &lt;code&gt;InAppBrowser&lt;/code&gt; window.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;ref.close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InAppBrowser.show&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Displays an InAppBrowser window that was opened hidden. Calling this has no effect if the InAppBrowser was already visible.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.show();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the InAppBrowser window (&lt;code&gt;InAppBrowser&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;hidden=yes&#39;);&#xA;// some time later...&#xA;ref.show();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InAppBrowser.hide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Hides the InAppBrowser window. Calling this has no effect if the InAppBrowser was already hidden.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.hide();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the InAppBrowser window (&lt;code&gt;InAppBrowser&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;);&#xA;// some time later...&#xA;ref.hide();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InAppBrowser.executeScript&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Injects JavaScript code into the &lt;code&gt;InAppBrowser&lt;/code&gt; window. (Only available when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.executeScript(details, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window. &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;injectDetails&lt;/strong&gt;: details of the script to run, specifying either a &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;code&lt;/code&gt; key. &lt;em&gt;(Object)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: URL of the script to inject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: Text of the script to inject.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;: the function that executes after the JavaScript code is injected.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If the injected script is of type &lt;code&gt;code&lt;/code&gt;, the callback executes with a single parameter, which is the return value of the script, wrapped in an &lt;code&gt;Array&lt;/code&gt;. For multi-line scripts, this is the return value of the last statement, or the last expression evaluated.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;ref.addEventListener(&#39;loadstop&#39;, function() {&#xA;    ref.executeScript({file: &#34;myscript.js&#34;});&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Browser Quirks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;only &lt;strong&gt;code&lt;/strong&gt; key is supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows Quirks&lt;/h3&gt; &#xA;&lt;p&gt;Due to &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows.ui.xaml.controls.webview.invokescriptasync.aspx&#34;&gt;MSDN docs&lt;/a&gt; the invoked script can return only string values, otherwise the parameter, passed to &lt;strong&gt;callback&lt;/strong&gt; will be &lt;code&gt;[null]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;InAppBrowser.insertCSS&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Injects CSS into the &lt;code&gt;InAppBrowser&lt;/code&gt; window. (Only available when the target is set to &lt;code&gt;&#39;_blank&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;ref.insertCSS(details, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;: reference to the &lt;code&gt;InAppBrowser&lt;/code&gt; window &lt;em&gt;(InAppBrowser)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;injectDetails&lt;/strong&gt;: details of the script to run, specifying either a &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;code&lt;/code&gt; key. &lt;em&gt;(Object)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: URL of the stylesheet to inject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: Text of the stylesheet to inject.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;: the function that executes after the CSS is injected.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var ref = cordova.InAppBrowser.open(&#39;http://apache.org&#39;, &#39;_blank&#39;, &#39;location=yes&#39;);&#xA;ref.addEventListener(&#39;loadstop&#39;, function() {&#xA;    ref.insertCSS({file: &#34;mystyles.css&#34;});&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;__&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;sample&#34;&gt;&lt;/a&gt;Sample: Show help pages with an InAppBrowser&lt;/h2&gt; &#xA;&lt;p&gt;You can use this plugin to show helpful documentation pages within your app. Users can view online help documents and then close them without leaving the app.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a few snippets that show how you do this.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#give&#34;&gt;Give users a way to ask for help&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#load&#34;&gt;Load a help page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#let&#34;&gt;Let users know that you&#39;re getting their page ready&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#show&#34;&gt;Show the help page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-inappbrowser/master/#handle&#34;&gt;Handle page errors&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;give&#34;&gt;&lt;/a&gt;Give users a way to ask for help&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s lots of ways to do this in your app. A drop down list is a simple way to do that.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&#xA;&amp;lt;select id=&#34;help-select&#34;&amp;gt;&#xA;    &amp;lt;option value=&#34;default&#34;&amp;gt;Need help?&amp;lt;/option&amp;gt;&#xA;    &amp;lt;option value=&#34;article&#34;&amp;gt;Show me a helpful article&amp;lt;/option&amp;gt;&#xA;    &amp;lt;option value=&#34;video&#34;&amp;gt;Show me a helpful video&amp;lt;/option&amp;gt;&#xA;    &amp;lt;option value=&#34;search&#34;&amp;gt;Search for other topics&amp;lt;/option&amp;gt;&#xA;&amp;lt;/select&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Gather the users choice in the &lt;code&gt;onDeviceReady&lt;/code&gt; function of the page and then send an appropriate URL to a helper function in some shared library file. Our helper function is named &lt;code&gt;showHelp()&lt;/code&gt; and we&#39;ll write that function next.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;$(&#39;#help-select&#39;).on(&#39;change&#39;, function (e) {&#xA;&#xA;    var url;&#xA;&#xA;    switch (this.value) {&#xA;&#xA;        case &#34;article&#34;:&#xA;            url = &#34;https://cordova.apache.org/docs/en/latest/&#34;&#xA;                        + &#34;reference/cordova-plugin-inappbrowser/index.html&#34;;&#xA;            break;&#xA;&#xA;        case &#34;video&#34;:&#xA;            url = &#34;https://youtu.be/F-GlVrTaeH0&#34;;&#xA;            break;&#xA;&#xA;        case &#34;search&#34;:&#xA;            url = &#34;https://www.google.com/#q=inAppBrowser+plugin&#34;;&#xA;            break;&#xA;    }&#xA;&#xA;    showHelp(url);&#xA;&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;load&#34;&gt;&lt;/a&gt;Load a help page&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;ll use the &lt;code&gt;open&lt;/code&gt; function to load the help page. We&#39;re setting the &lt;code&gt;hidden&lt;/code&gt; property to &lt;code&gt;yes&lt;/code&gt; so that we can show the browser only after the page content has loaded. That way, users don&#39;t see a blank browser while they wait for content to appear. When the &lt;code&gt;loadstop&lt;/code&gt; event is raised, we&#39;ll know when the content has loaded. We&#39;ll handle that event shortly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;function showHelp(url) {&#xA;&#xA;    var target = &#34;_blank&#34;;&#xA;&#xA;    var options = &#34;location=yes,hidden=yes&#34;;&#xA;&#xA;    inAppBrowserRef = cordova.InAppBrowser.open(url, target, options);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loadstart&#39;, loadStartCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loadstop&#39;, loadStopCallBack);&#xA;&#xA;    inAppBrowserRef.addEventListener(&#39;loaderror&#39;, loadErrorCallBack);&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;let&#34;&gt;&lt;/a&gt;Let users know that you&#39;re getting their page ready&lt;/h3&gt; &#xA;&lt;p&gt;Because the browser doesn&#39;t immediately appear, we can use the &lt;code&gt;loadstart&lt;/code&gt; event to show a status message, progress bar, or other indicator. This assures users that content is on the way.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;function loadStartCallBack() {&#xA;&#xA;    $(&#39;#status-message&#39;).text(&#34;loading please wait ...&#34;);&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;show&#34;&gt;&lt;/a&gt;Show the help page&lt;/h3&gt; &#xA;&lt;p&gt;When the &lt;code&gt;loadstopcallback&lt;/code&gt; event is raised, we know that the content has loaded and we can make the browser visible. This sort of trick can create the impression of better performance. The truth is that whether you show the browser before content loads or not, the load times are exactly the same.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;function loadStopCallBack() {&#xA;&#xA;    if (inAppBrowserRef != undefined) {&#xA;&#xA;        inAppBrowserRef.insertCSS({ code: &#34;body{font-size: 25px;}&#34; });&#xA;&#xA;        $(&#39;#status-message&#39;).text(&#34;&#34;);&#xA;&#xA;        inAppBrowserRef.show();&#xA;    }&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might have noticed the call to the &lt;code&gt;insertCSS&lt;/code&gt; function. This serves no particular purpose in our scenario. But it gives you an idea of why you might use it. In this case, we&#39;re just making sure that the font size of your pages have a certain size. You can use this function to insert any CSS style elements. You can even point to a CSS file in your project.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;handle&#34;&gt;&lt;/a&gt;Handle page errors&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes a page no longer exists, a script error occurs, or a user lacks permission to view the resource. How or if you handle that situation is completely up to you and your design. You can let the browser show that message or you can present it in another way.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll try to show that error in a message box. We can do that by injecting a script that calls the &lt;code&gt;alert&lt;/code&gt; function. That said, this won&#39;t work in browsers on Windows devices so we&#39;ll have to look at the parameter of the &lt;code&gt;executeScript&lt;/code&gt; callback function to see if our attempt worked. If it didn&#39;t work out for us, we&#39;ll just show the error message in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; on the page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;function loadErrorCallBack(params) {&#xA;&#xA;    $(&#39;#status-message&#39;).text(&#34;&#34;);&#xA;&#xA;    var scriptErrorMesssage =&#xA;       &#34;alert(&#39;Sorry we cannot open that page. Message from the server is : &#34;&#xA;       + params.message + &#34;&#39;);&#34;&#xA;&#xA;    inAppBrowserRef.executeScript({ code: scriptErrorMesssage }, executeScriptCallBack);&#xA;&#xA;    inAppBrowserRef.close();&#xA;&#xA;    inAppBrowserRef = undefined;&#xA;&#xA;}&#xA;&#xA;function executeScriptCallBack(params) {&#xA;&#xA;    if (params[0] == null) {&#xA;&#xA;        $(&#39;#status-message&#39;).text(&#xA;           &#34;Sorry we couldn&#39;t open that page. Message from the server is : &#39;&#34;&#xA;           + params.message + &#34;&#39;&#34;);&#xA;    }&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More Usage Info&lt;/h2&gt; &#xA;&lt;h3&gt;Local Urls ( source is in the app package )&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var iab = cordova.InAppBrowser;&#xA;&#xA;iab.open(&#39;local-url.html&#39;);                  // loads in the Cordova WebView&#xA;iab.open(&#39;local-url.html&#39;, &#39;_self&#39;);         // loads in the Cordova WebView&#xA;iab.open(&#39;local-url.html&#39;, &#39;_system&#39;);       // Security error: system browser, but url will not load (iOS)&#xA;iab.open(&#39;local-url.html&#39;, &#39;_blank&#39;);        // loads in the InAppBrowser&#xA;iab.open(&#39;local-url.html&#39;, &#39;random_string&#39;); // loads in the InAppBrowser&#xA;iab.open(&#39;local-url.html&#39;, &#39;random_string&#39;, &#39;location=no&#39;); // loads in the InAppBrowser, no location bar&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Whitelisted Content&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var iab = cordova.InAppBrowser;&#xA;&#xA;iab.open(&#39;http://whitelisted-url.com&#39;);                  // loads in the Cordova WebView&#xA;iab.open(&#39;http://whitelisted-url.com&#39;, &#39;_self&#39;);         // loads in the Cordova WebView&#xA;iab.open(&#39;http://whitelisted-url.com&#39;, &#39;_system&#39;);       // loads in the system browser&#xA;iab.open(&#39;http://whitelisted-url.com&#39;, &#39;_blank&#39;);        // loads in the InAppBrowser&#xA;iab.open(&#39;http://whitelisted-url.com&#39;, &#39;random_string&#39;); // loads in the InAppBrowser&#xA;&#xA;iab.open(&#39;http://whitelisted-url.com&#39;, &#39;random_string&#39;, &#39;location=no&#39;); // loads in the InAppBrowser, no location bar&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Urls that are not white-listed&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;var iab = cordova.InAppBrowser;&#xA;&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;);                  // loads in the InAppBrowser&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;, &#39;_self&#39;);         // loads in the InAppBrowser&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;, &#39;_system&#39;);       // loads in the system browser&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;, &#39;_blank&#39;);        // loads in the InAppBrowser&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;, &#39;random_string&#39;); // loads in the InAppBrowser&#xA;iab.open(&#39;http://url-that-fails-whitelist.com&#39;, &#39;random_string&#39;, &#39;location=no&#39;); // loads in the InAppBrowser, no location bar&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>WenchaoD/FSCalendar</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/WenchaoD/FSCalendar</id>
    <link href="https://github.com/WenchaoD/FSCalendar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully customizable iOS calendar library, compatible with Objective-C and Swift&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/16540124/efc51f72-408b-11e6-934a-4e750b8b55bb.png&#34; alt=&#34;logo&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://cocoapods.org/pods/FSCalendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Apps%20Using-%3E%2010,000-00BFFF.svg?style=plastic&#34; alt=&#34;Apps Using&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/FSCalendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Total%20Downloads-%3E%20500,000-00BFFF.svg?style=plastic&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://travis-ci.org/WenchaoD/FSCalendar&#34;&gt;&lt;img src=&#34;https://travis-ci.org/WenchaoD/FSCalendar.svg?branch=master&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/FSCalendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/FSCalendar.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/FSCalendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-iOS%207%2B-blue.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/language-objc%20%7C%20swift-FF69B4.svg?style=plastic&#34; alt=&#34;Languages&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#pre-knowledge&#34;&gt;Pre-knowledge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;screenshots&#34;&gt;&lt;/a&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;iPhone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/10262249/4fabae40-69f2-11e5-97ab-afbacd0a3da2.jpg&#34; alt=&#34;fscalendar&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iPad&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/10927681/d2448cb6-82dc-11e5-9d11-f664a06698a7.jpg&#34; alt=&#34;fscalendar-ipad&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Safe Orientation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20325758/ea125e1e-abc0-11e6-9e29-491acbcb0d07.gif&#34; alt=&#34;fscalendar-scope-orientation-autolayout&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Today Extension&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;iOS8/9&lt;/th&gt; &#xA;   &lt;th&gt;iOS10&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20288375/ed3fba0e-ab0d-11e6-8b15-43d3dc656f22.gif&#34; alt=&#34;today1&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20288378/f11e318c-ab0d-11e6-8d1d-9d89b563e9d7.gif&#34; alt=&#34;today2&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Interactive Scope Gesture&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/21559640/e92a9ccc-ce8a-11e6-8c60-e52204f33249.gif&#34; alt=&#34;1&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;DIY support&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20026983/22354a0e-a342-11e6-8ae6-0614ea7f35ae.gif&#34; alt=&#34;1&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To customize your own cell, view DIY Example in &lt;code&gt;Example-Swift&lt;/code&gt; or &lt;code&gt;Example-Objc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Swipe-To-Choose&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Single-Selection&lt;br&gt;Swipe-To-Choose&lt;/th&gt; &#xA;   &lt;th&gt;Multiple-Selection&lt;br&gt;Swipe-To-Choose&lt;/th&gt; &#xA;   &lt;th&gt;DIY&lt;br&gt;Swipe-To-Choose&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20257768/cb1905d4-aa86-11e6-9ef7-af76f9caa024.gif&#34; alt=&#34;1&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20257826/254070ec-aa87-11e6-81b1-1815453fd464.gif&#34; alt=&#34;2&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/20257836/2ffa3252-aa87-11e6-8ff9-3b40f5b2307b.gif&#34; alt=&#34;3&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Achievement of Users &lt;a id=&#34;achievement&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/21747193/3111e4ee-d59a-11e6-8e4d-ca695b53e421.png&#34; alt=&#34;1&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/21747393/42a753fa-d5a0-11e6-9cb2-de7cc642e69e.png&#34; alt=&#34;2&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/21897255/ff78fcdc-d923-11e6-9d59-62119bc4343f.png&#34; alt=&#34;3&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/21747192/3111cacc-d59a-11e6-8626-44cd75ebd794.png&#34; alt=&#34;4&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/WenchaoD/FSCalendar/wiki/&#34;&gt;&lt;em&gt;&lt;strong&gt;More Achievements&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; are available in &lt;a href=&#34;https://github.com/WenchaoD/FSCalendar/wiki/&#34;&gt;&lt;em&gt;&lt;strong&gt;FSCalendar Gallery&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h1&gt;&lt;a id=&#34;installation&#34;&gt;&lt;/a&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;CocoaPods:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For iOS8+: 👍&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;use_frameworks!&#xA;target &#39;&amp;lt;Your Target Name&amp;gt;&#39; do&#xA;    pod &#39;FSCalendar&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For iOS7+:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;target &#39;&amp;lt;Your Target Name&amp;gt;&#39; do&#xA;&#x9;pod &#39;FSCalendar&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/WenchaoD/NSCalendarExtension&#34;&gt;NSCalendarExtension&lt;/a&gt; is required to get iOS7 compatibility.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Carthage:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For iOS8+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;WenchaoD/FSCalendar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SPM:&lt;/h2&gt; &#xA;&lt;p&gt;Add dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.package(url: &#34;https://github.com/WenchaoD/FSCalendar.git&#34;, from: &#34;2.8.3&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manually:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drag all files under &lt;code&gt;FSCalendar&lt;/code&gt; folder into your project. 👍&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Alternatively to give it a test run, simply press &lt;code&gt;command+u&lt;/code&gt; in &lt;code&gt;Example-Objc&lt;/code&gt; or &lt;code&gt;Example-Swift&lt;/code&gt; and launch the &lt;em&gt;&lt;strong&gt;UITest Target&lt;/strong&gt;&lt;/em&gt;. &lt;br&gt; Only the methods marked &#34;👍&#34; support IBInspectable / IBDesignable feature. &lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#roll_with_interface_builder&#34;&gt;Have fun with Interface builder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;h2&gt;Use Interface Builder&lt;/h2&gt; &#xA;&lt;p&gt;1、 Drag an UIView object to ViewController Scene 2、 Change the &lt;code&gt;Custom Class&lt;/code&gt; to &lt;code&gt;FSCalendar&lt;/code&gt;&lt;br&gt; 3、 Link &lt;code&gt;dataSource&lt;/code&gt; and &lt;code&gt;delegate&lt;/code&gt; to the ViewController &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/9488580/a360297e-4c0d-11e5-8548-ee9274e7c4af.jpg&#34; alt=&#34;fscalendar-ib&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;4、 Finally, implement &lt;code&gt;FSCalendarDataSource&lt;/code&gt; and &lt;code&gt;FSCalendarDelegate&lt;/code&gt; in your &lt;code&gt;ViewController&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Or use code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@property (weak , nonatomic) FSCalendar *calendar;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// In loadView(Recommended) or viewDidLoad&#xA;FSCalendar *calendar = [[FSCalendar alloc] initWithFrame:CGRectMake(0, 0, 320, 300)];&#xA;calendar.dataSource = self;&#xA;calendar.delegate = self;&#xA;[self.view addSubview:calendar];&#xA;self.calendar = calendar;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Or swift&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use &lt;code&gt;FSCalendar&lt;/code&gt; in swift, you need to &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html&#34;&gt;Create Bridge Header&lt;/a&gt; first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;fileprivate weak var calendar: FSCalendar!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// In loadView or viewDidLoad&#xA;let calendar = FSCalendar(frame: CGRect(x: 0, y: 0, width: 320, height: 300))&#xA;calendar.dataSource = self&#xA;calendar.delegate = self&#xA;view.addSubview(calendar)&#xA;self.calendar = calendar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To use &lt;strong&gt;FSCalendar&lt;/strong&gt; in Swift3, see &lt;code&gt;Example-Swift&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;adjusts_frame_dynamicly&#34;&gt;&lt;/a&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;FSCalendar&lt;/code&gt; &lt;em&gt;&lt;strong&gt;doesn&#39;t&lt;/strong&gt;&lt;/em&gt; update frame by itself, Please implement&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;em&gt;&lt;strong&gt;AutoLayout&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)calendar:(FSCalendar *)calendar boundingRectWillChange:(CGRect)bounds animated:(BOOL)animated&#xA;{&#xA;    self.calendarHeightConstraint.constant = CGRectGetHeight(bounds);&#xA;    // Do other updates here&#xA;    [self.view layoutIfNeeded];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;em&gt;&lt;strong&gt;Manual Layout&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)calendar:(FSCalendar *)calendar boundingRectWillChange:(CGRect)bounds animated:(BOOL)animated&#xA;{&#xA;    calendar.frame = (CGRect){calendar.frame.origin,bounds.size};&#xA;    // Do other updates here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are using &lt;em&gt;&lt;strong&gt;Masonry&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)calendar:(FSCalendar *)calendar boundingRectWillChange:(CGRect)bounds animated:(BOOL)animated&#xA;{&#xA;    [calendar mas_updateConstraints:^(MASConstraintMaker *make) {&#xA;        make.height.equalTo(@(bounds.size.height));&#xA;        // Do other updates&#xA;    }];&#xA;    [self.view layoutIfNeeded];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are using &lt;em&gt;&lt;strong&gt;SnapKit&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func calendar(_ calendar: FSCalendar, boundingRectWillChange bounds: CGRect, animated: Bool) {&#xA;    calendar.snp.updateConstraints { (make) in&#xA;        make.height.equalTo(bounds.height)&#xA;        // Do other updates&#xA;    }&#xA;    self.view.layoutIfNeeded()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;roll_with_interface_builder&#34;&gt;&lt;/a&gt; Roll with Interface Builder&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/9301716/2e76a2ca-4503-11e5-8450-1fa7aa93e9fd.gif&#34; alt=&#34;fscalendar - ibdesignable&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a id=&#34;pre-knowledge&#34;&gt;&lt;/a&gt;Pre-knowledge&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In &lt;code&gt;Swift3&lt;/code&gt;, &lt;code&gt;NSDate&lt;/code&gt; and &lt;code&gt;NSDateFormatter&lt;/code&gt; have been renamed to &lt;em&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;DateFormatter&lt;/strong&gt;&lt;/em&gt; , see &lt;code&gt;Example-Swift&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;How to create NSDate object&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By &lt;strong&gt;NSCalendar&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;self.gregorian = [NSCalendar calendarWithIdentifier:NSCalendarIdentifierGregorian];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSDate *date = [gregorian dateWithEra:1 year:2016 month:9 day:10 hour:0 minute:0 second:0 nanosecond:0];&#xA;// 2016-09-10 00:00:00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Or by &lt;strong&gt;NSDateFormatter&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;self.formatter = [[NSDateFormatter alloc] init];&#xA;self.formatter.dateFormat = @&#34;yyyy-MM-dd&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSDate *date = [self.formatter dateFromString:@&#34;2016-09-10&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to print out NSDate object&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;NSDateFormatter&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;self.formatter = [[NSDateFormatter alloc] init];&#xA;self.formatter.dateFormat = @&#34;yyyy/MM/dd&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *string = [self.formatter stringFromDate:date];&#xA;NSLog(@&#34;Date is %@&#34;, string);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to manipulate NSDate with NSCalendar&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;self.gregorian = [NSCalendar calendarWithIdentifier:NSCalendarIdentifierGregorian];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get component of NSDate&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSInteger era = [self.gregorian component:NSCalendarUnitEra fromDate:date];&#xA;NSInteger year = [self.gregorian component:NSCalendarUnitYear fromDate:date];&#xA;NSInteger month = [self.gregorian component:NSCalendarUnitMonth fromDate:date];&#xA;NSInteger day = [self.gregorian component:NSCalendarUnitDay fromDate:date];&#xA;NSInteger hour = [self.gregorian component:NSCalendarUnitHour fromDate:date];&#xA;NSInteger minute = [self.gregorian component:NSCalendarUnitMinute fromDate:date];&#xA;...&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get next &lt;strong&gt;month&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSDate *nextMonth = [self.gregorain dateByAddingUnit:NSCalendarUnitMonth value:1 toDate:date options:0];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get next &lt;strong&gt;day&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSDate *nextDay = [self.gregorain dateByAddingUnit:NSCalendarUnitDay value:1 toDate:date options:0];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is date in today/tomorrow/yesterday/weekend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;BOOL isToday = [self.gregorian isDateInToday:date];&#xA;BOOL isYesterday = [self.gregorian isDateInYesterday:date];&#xA;BOOL isTomorrow = [self.gregorian isDateInTomorrow:date];&#xA;BOOL isWeekend = [self.gregorian isDateInWeekend:date];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compare two dates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;&#xA;BOOL sameDay = [self.gregorian isDate:date1 inSameDayAsDate:date2];&#xA;// Yes if the date1 and date2 are in same day&#xA;&#xA;&#xA;[self.gregorian compareDate:date1 toDate:date2 toUnitGranularity:unit];&#xA;// compare the era/year/month/day/hour/minute .etc ...&#xA;// return NSOrderAscending/NSOrderSame/NSOrderDecending&#xA;&#xA;BOOL inSameUnit = [self.gregorian isDate:date1 equalToDate:date2 toUnitGranularity:unit];&#xA;// if the given unit (era/year/month/day/hour/minute .etc) are the same&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;support&#34;&gt;&lt;/a&gt;Support this repo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WenchaoD/FSCalendar/master/#&#34;&gt;&lt;strong&gt;★Star&lt;/strong&gt;&lt;/a&gt; this repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; * Support with &amp;nbsp; &#xA;&lt;a href=&#34;https://www.paypal.me/WenchaoD&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/webstatic/i/logo/rebrand/ppcom.svg?sanitize=true&#34; width=&#34;100&#34; height=&#34;40&#34; style=&#34;margin-bottom:-15px;&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; * Support with &#xA;&lt;a href=&#34;https://user-images.githubusercontent.com/5186464/45949944-46960480-c030-11e8-9e90-30b015698cf6.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://a1.mzstatic.com/us/r30/Purple49/v4/50/16/b3/5016b341-39c1-b47b-2994-d7e23823baed/icon175x175.png&#34; width=&#34;40&#34; height=&#34;40&#34; style=&#34;margin-bottom:-15px;-webkit-border-radius:10px;border:1px solid rgba(30, 154, 236, 1);&#34;&gt;&lt;/a&gt; or &#xA;&lt;a href=&#34;https://cloud.githubusercontent.com/assets/5186464/15096872/b06f3a3a-153c-11e6-89f9-2e9c7b88ef42.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://a4.mzstatic.com/us/r30/Purple49/v4/23/31/14/233114f8-2e8d-7b63-8dc5-85d29893061e/icon175x175.jpeg&#34; height=&#34;40&#34; width=&#34;40&#34; style=&#34;margin-bottom:-15px; -webkit-border-radius: 10px;border:1px solid rgba(43, 177, 0, 1)&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;contact&#34;&gt;&lt;/a&gt; Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;微博： &lt;a href=&#34;http://weibo.com/WenchaoD&#34;&gt;&lt;strong&gt;@WenchaoD&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter：&lt;a href=&#34;https://twitter.com/WenchaoD&#34;&gt;&lt;strong&gt;@WenchaoD&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a id=&#34;qq_group&#34;&gt;&lt;/a&gt;QQ支持群: &lt;br&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/5186464/18407011/8e4b6e48-7738-11e6-9fad-0e23cc881516.JPG&#34; alt=&#34;fscalendar&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If your made a beautiful calendar with this library in your app, please take a screen shot and &lt;a href=&#34;https://twitter.com/WenchaoD&#34;&gt;@me&lt;/a&gt; in twitter. Your help really means a lot to me! &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;FSCalendar is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://cocoadocs.org/docsets/FSCalendar/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/WenchaoD/FSCalendar/raw/master/MOREUSAGE.md&#34;&gt;More Usage&lt;/a&gt; | &lt;a href=&#34;http://www.jianshu.com/notebooks/4276521/latest&#34;&gt;简书&lt;/a&gt;&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>FLEXTool/FLEX</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/FLEXTool/FLEX</id>
    <link href="https://github.com/FLEXTool/FLEX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An in-app debugging and exploration tool for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FLEX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/?q=FLEX&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/FLEX.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Flipboard/FLEX/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/FLEX.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/FLEX.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ryanolsonk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contact-@ryanolsonk-blue.svg?style=flat&#34; alt=&#34;Twitter: @ryanolsonk&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Flipboard/FLEX&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Flipboard/FLEX.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;FLEX (Flipboard Explorer) is a set of in-app debugging and exploration tools for iOS development. When presented, FLEX shows a toolbar that lives in a window above your application. From this toolbar, you can view and modify nearly every piece of state in your running application.&lt;/p&gt; &#xA;&lt;img alt=&#34;Demo&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70185687-e842c800-16af-11ea-8ef9-9e071380a462.gif&#34;&gt; &#xA;&lt;h2&gt;Give Yourself Debugging Superpowers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inspect and modify views in the hierarchy.&lt;/li&gt; &#xA; &lt;li&gt;See the properties and ivars on any object.&lt;/li&gt; &#xA; &lt;li&gt;Dynamically modify many properties and ivars.&lt;/li&gt; &#xA; &lt;li&gt;Dynamically call instance and class methods.&lt;/li&gt; &#xA; &lt;li&gt;Observe detailed network request history with timing, headers, and full responses.&lt;/li&gt; &#xA; &lt;li&gt;Add your own simulator keyboard shortcuts.&lt;/li&gt; &#xA; &lt;li&gt;View system log messages (e.g. from &lt;code&gt;NSLog&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Access any live object via a scan of the heap.&lt;/li&gt; &#xA; &lt;li&gt;View the file system within your app&#39;s sandbox.&lt;/li&gt; &#xA; &lt;li&gt;Browse SQLite/Realm databases in the file system.&lt;/li&gt; &#xA; &lt;li&gt;Trigger 3D touch in the simulator using the control, shift, and command keys.&lt;/li&gt; &#xA; &lt;li&gt;Explore all classes in your app and linked systems frameworks (public and private).&lt;/li&gt; &#xA; &lt;li&gt;Quickly access useful objects such as &lt;code&gt;[UIApplication sharedApplication]&lt;/code&gt;, the app delegate, the root view controller on the key window, and more.&lt;/li&gt; &#xA; &lt;li&gt;Dynamically view and modify &lt;code&gt;NSUserDefaults&lt;/code&gt; values.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unlike many other debugging tools, FLEX runs entirely inside your app, so you don&#39;t need to be connected to LLDB/Xcode or a different remote debugging server. It works well in the simulator and on physical devices.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In the iOS simulator, you can use keyboard shortcuts to activate FLEX. &lt;code&gt;f&lt;/code&gt; will toggle the FLEX toolbar. Hit the &lt;code&gt;?&lt;/code&gt; key for a full list of shortcuts. You can also show FLEX programmatically:&lt;/p&gt; &#xA;&lt;p&gt;Short version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Objective-C&#xA;[[FLEXManager sharedManager] showExplorer];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Swift&#xA;FLEXManager.shared.showExplorer()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More complete version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#if DEBUG&#xA;#import &#34;FLEXManager.h&#34;&#xA;#endif&#xA;&#xA;...&#xA;&#xA;- (void)handleSixFingerQuadrupleTap:(UITapGestureRecognizer *)tapRecognizer&#xA;{&#xA;#if DEBUG&#xA;    if (tapRecognizer.state == UIGestureRecognizerStateRecognized) {&#xA;        // This could also live in a handler for a keyboard shortcut, debug menu item, etc.&#xA;        [[FLEXManager sharedManager] showExplorer];&#xA;    }&#xA;#endif&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Aside: tvOS&lt;/h4&gt; &#xA;&lt;p&gt;FLEX itself does not support tvOS out of the box. However, others have taken it upon themselves to port FLEX to tvOS. If you need tvOS support, seek out one of these forks. &lt;a href=&#34;https://github.com/lechium/FLEX/tree/tvos&#34;&gt;Here is one such fork.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Modify Views&lt;/h3&gt; &#xA;&lt;p&gt;Once a view is selected, you can tap on the info bar below the toolbar to present more details about the view. From there, you can modify properties and call methods.&lt;/p&gt; &#xA;&lt;img alt=&#34;Modify Views&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271816-c5c2b480-176c-11ea-8bf4-2c5a755bc392.gif&#34;&gt; &#xA;&lt;h3&gt;Network History&lt;/h3&gt; &#xA;&lt;p&gt;When enabled, network debugging allows you to view all requests made using NSURLConnection or NSURLSession. Settings allow you to adjust what kind of response bodies get cached and the maximum size limit of the response cache. You can choose to have network debugging enabled automatically on app launch. This setting is persisted across launches.&lt;/p&gt; &#xA;&lt;img alt=&#34;Network History&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271876-e5f27380-176c-11ea-98ef-24170205b706.gif&#34;&gt; &#xA;&lt;h3&gt;All Objects on the Heap&lt;/h3&gt; &#xA;&lt;p&gt;FLEX queries malloc for all the live allocated memory blocks and searches for ones that look like objects. You can see everything from here.&lt;/p&gt; &#xA;&lt;img alt=&#34;Heap/Live Objects Explorer&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271850-d83cee00-176c-11ea-9750-ee3a479c6769.gif&#34;&gt; &#xA;&lt;h3&gt;Explore-at-address&lt;/h3&gt; &#xA;&lt;p&gt;If you get your hands on an arbitrary address, you can try explore the object at that address, and FLEX will open it if it can verify the address points to a valid object. If FLEX isn&#39;t sure, it&#39;ll warn you and refuse to dereference the pointer. If you know better, however, you can choose to explore it anyway by choosing &#34;Unsafe Explore&#34;&lt;/p&gt; &#xA;&lt;img alt=&#34;Address Explorer&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271798-bb081f80-176c-11ea-806d-9d74ac293641.gif&#34;&gt; &#xA;&lt;h3&gt;Simulator Keyboard Shortcuts&lt;/h3&gt; &#xA;&lt;p&gt;Default keyboard shortcuts allow you to activate the FLEX tools, scroll with the arrow keys, and close modals using the escape key. You can also add custom keyboard shortcuts via &lt;code&gt;-[FLEXManager registerSimulatorShortcutWithKey:modifiers:action:description]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;img alt=&#34;Simulator Keyboard Shortcuts&#34; width=&#34;40%&#34; height=&#34;40%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70272984-d3793980-176e-11ea-89a2-66d187d71b4c.png&#34;&gt; &#xA;&lt;h3&gt;File Browser&lt;/h3&gt; &#xA;&lt;p&gt;View the file system within your app&#39;s bundle or sandbox container. FLEX shows file sizes, image previews, and pretty prints &lt;code&gt;.json&lt;/code&gt; and &lt;code&gt;.plist&lt;/code&gt; files. You can rename and delete files and folders. You can &#34;share&#34; any file if you want to inspect them outside of your app.&lt;/p&gt; &#xA;&lt;img alt=&#34;File Browser&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271831-d115e000-176c-11ea-8078-ada291f980f3.gif&#34;&gt; &#xA;&lt;h3&gt;SQLite Browser&lt;/h3&gt; &#xA;&lt;p&gt;SQLite database files (with either &lt;code&gt;.db&lt;/code&gt; or &lt;code&gt;.sqlite&lt;/code&gt; extensions), or &lt;a href=&#34;https://realm.io&#34;&gt;Realm&lt;/a&gt; database files can be explored using FLEX. The database browser lets you view all tables, and individual tables can be sorted by tapping column headers.&lt;/p&gt; &#xA;&lt;img alt=&#34;SQLite Browser&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271881-ea1e9100-176c-11ea-9a42-01618311c869.gif&#34;&gt; &#xA;&lt;h3&gt;3D Touch in the Simulator&lt;/h3&gt; &#xA;&lt;p&gt;Using a combination of the command, control, and shift keys, you can simulate different levels of 3D touch pressure in the simulator. Each key contributes 1/3 of maximum possible force. Note that you need to move the touch slightly to get pressure updates.&lt;/p&gt; &#xA;&lt;img alt=&#34;Simulator 3D Touch&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://cloud.githubusercontent.com/assets/1422245/11786615/5d4ef96c-a23c-11e5-975e-67275341e439.gif&#34;&gt; &#xA;&lt;h3&gt;Explore Loaded Libraries&lt;/h3&gt; &#xA;&lt;p&gt;Go digging for all things public and private. To learn more about a class, you can create an instance of it and explore its default state. You can also type in a class name to jump to that class directly if you know which class you&#39;re looking for.&lt;/p&gt; &#xA;&lt;img alt=&#34;Loaded Libraries Exploration&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271868-dffc9280-176c-11ea-8704-a0c05b75cc5f.gif&#34;&gt; &#xA;&lt;h3&gt;NSUserDefaults Editing&lt;/h3&gt; &#xA;&lt;p&gt;FLEX allows you to edit defaults that are any combination of strings, numbers, arrays, and dictionaries. The input is parsed as &lt;code&gt;JSON&lt;/code&gt;. If other kinds of objects are set for a defaults key (i.e. &lt;code&gt;NSDate&lt;/code&gt;), you can view them but not edit them.&lt;/p&gt; &#xA;&lt;img alt=&#34;NSUserDefaults Editing&#34; width=&#34;36%&#34; height=&#34;36%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70271889-edb21800-176c-11ea-92b4-71e07d2b6ce7.gif&#34;&gt; &#xA;&lt;h3&gt;Learning from Other Apps&lt;/h3&gt; &#xA;&lt;p&gt;The code injection is left as an exercise for the reader. &lt;span&gt;😇&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img alt=&#34;Springboard Lock Screen&#34; width=&#34;25%&#34; height=&#34;25%&#34; src=&#34;https://engineering.flipboard.com/assets/flex/flex-readme-reverse-1.png&#34;&gt; &lt;img alt=&#34;Springboard Home Screen&#34; width=&#34;25%&#34; height=&#34;25%&#34; src=&#34;https://engineering.flipboard.com/assets/flex/flex-readme-reverse-2.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;FLEX requires an app that targets iOS 9 or higher. To run the Example project, open a Terminal window in the Example/ folder and run &lt;code&gt;pod install&lt;/code&gt;, then open the generated workspace.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;FLEX is available on &lt;a href=&#34;https://cocoapods.org/pods/FLEX&#34;&gt;CocoaPods&lt;/a&gt;. Simply add the following line to your podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FLEX&#39;, :configurations =&amp;gt; [&#39;Debug&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;Add the following to your Cartfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;flipboard/FLEX&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Buck&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using Buck, you may want to silence some of the warnings emitted by FLEX. You will need to build FLEX as an &lt;code&gt;apple_library&lt;/code&gt; and pass the &lt;code&gt;-Wno-unsupported-availability-guard&lt;/code&gt; flag, as well as the other warning flags below to disable any other warnings FLEX may have.&lt;/p&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;Manually add the files in &lt;code&gt;Classes/&lt;/code&gt; to your Xcode project, or just drag in the entire &lt;code&gt;FLEX/&lt;/code&gt; folder. Be sure to exclude FLEX from &lt;code&gt;Release&lt;/code&gt; builds or your app will be rejected.&lt;/p&gt; &#xA;&lt;h5&gt;Silencing warnings&lt;/h5&gt; &#xA;&lt;p&gt;Add the following flags to to &lt;strong&gt;Other Warnings Flags&lt;/strong&gt; in &lt;strong&gt;Build Settings:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-Wno-deprecated-declarations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-Wno-strict-prototypes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-Wno-unsupported-availability-guard&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Include the dependency in the &lt;code&gt;depdendencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/FLEXTool/FLEX.git&#34;, .upToNextMajor(from: &#34;4.3.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, include the library in your target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;.target(&#xA;    name: &#34;YourDependency&#34;,&#xA;    dependencies: [&#xA;        &#34;FLEX&#34;&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Excluding FLEX from Release (App Store) Builds&lt;/h2&gt; &#xA;&lt;p&gt;FLEX makes it easy to explore the internals of your app, so it is not something you should expose to your users. Fortunately, it is easy to exclude FLEX files from Release builds. The strategies differ depending on how you integrated FLEX in your project, and are described below.&lt;/p&gt; &#xA;&lt;p&gt;Wrap the places in your code where you integrate FLEX with an &lt;code&gt;#if DEBUG&lt;/code&gt; statement to ensure the tool is only accessible in your &lt;code&gt;Debug&lt;/code&gt; builds and to avoid errors in your &lt;code&gt;Release&lt;/code&gt; builds. For more help with integrating FLEX, see the example project.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;CocoaPods automatically excludes FLEX from release builds if you only specify the Debug configuration for FLEX in your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FLEX&#39;, :configurations =&amp;gt; [&#39;Debug&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Do NOT add &lt;code&gt;FLEX.framework&lt;/code&gt; to the embedded binaries of your target, as it would otherwise be included in all builds (therefore also in release ones).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Instead, add &lt;code&gt;$(PROJECT_DIR)/Carthage/Build/iOS&lt;/code&gt; to your target &lt;em&gt;Framework Search Paths&lt;/em&gt; (this setting might already be present if you already included other frameworks with Carthage). This makes it possible to import the FLEX framework from your source files. It does not harm if this setting is added for all configurations, but it should at least be added for the debug one.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a &lt;em&gt;Run Script Phase&lt;/em&gt; to your target (inserting it after the existing &lt;code&gt;Link Binary with Libraries&lt;/code&gt; phase, for example), and which will embed &lt;code&gt;FLEX.framework&lt;/code&gt; in debug builds only:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;if [ &#34;$CONFIGURATION&#34; == &#34;Debug&#34; ]; then&#xA;  /usr/local/bin/carthage copy-frameworks&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, add &lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/FLEX.framework&lt;/code&gt; as input file of this script phase.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;75%&#34; height=&#34;75%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70274062-0d4b3f80-1771-11ea-94ea-ca7e7b5ca244.jpg&#34;&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;In Xcode, navigate to &lt;code&gt;Build Settings &amp;gt; Build Options &amp;gt; Excluded Source File Names&lt;/code&gt;. For your &lt;code&gt;Release&lt;/code&gt; configuration, set it to &lt;code&gt;FLEX.o&lt;/code&gt; like this to exclude all files with the &lt;code&gt;FLEX&lt;/code&gt; prefix:&lt;/p&gt; &#xA;&lt;img width=&#34;75%&#34; height=&#34;75%&#34; src=&#34;https://user-images.githubusercontent.com/1234765/98673373-8545c080-2357-11eb-9587-0743998e23ba.png&#34;&gt; &#xA;&lt;h3&gt;FLEX files added manually to a project&lt;/h3&gt; &#xA;&lt;p&gt;In Xcode, navigate to &lt;code&gt;Build Settings &amp;gt; Build Options &amp;gt; Excluded Source File Names&lt;/code&gt;. For your &lt;code&gt;Release&lt;/code&gt; configuration, set it to &lt;code&gt;FLEX*&lt;/code&gt; like this to exclude all files with the &lt;code&gt;FLEX&lt;/code&gt; prefix:&lt;/p&gt; &#xA;&lt;img width=&#34;75%&#34; height=&#34;75%&#34; src=&#34;https://user-images.githubusercontent.com/8371943/70281926-e21d1c00-1781-11ea-92eb-aee340791da8.png&#34;&gt; &#xA;&lt;h2&gt;Additional Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When setting fields of type &lt;code&gt;id&lt;/code&gt; or values in &lt;code&gt;NSUserDefaults&lt;/code&gt;, FLEX attempts to parse the input string as &lt;code&gt;JSON&lt;/code&gt;. This allows you to use a combination of strings, numbers, arrays, and dictionaries. If you want to set a string value, it must be wrapped in quotes. For ivars or properties that are explicitly typed as &lt;code&gt;NSStrings&lt;/code&gt;, quotes are not required.&lt;/li&gt; &#xA; &lt;li&gt;You may want to disable the exception breakpoint while using FLEX. Certain functions that FLEX uses throw exceptions when they get input they can&#39;t handle (i.e. &lt;code&gt;NSGetSizeAndAlignment()&lt;/code&gt;). FLEX catches these to avoid crashing, but your breakpoint will get hit if it is active.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks &amp;amp; Credits&lt;/h2&gt; &#xA;&lt;p&gt;FLEX builds on ideas and inspiration from open source tools that came before it. The following resources have been particularly helpful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NSExceptional/MirrorKit&#34;&gt;MirrorKit&lt;/a&gt;: an Objective-C wrapper around the Objective-C runtime.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/domesticcatsoftware/DCIntrospect&#34;&gt;DCIntrospect&lt;/a&gt;: view hierarchy debugging for the iOS simulator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/PonyDebugger&#34;&gt;PonyDebugger&lt;/a&gt;: network, core data, and view hierarchy debugging using the Chrome Developer Tools interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mikeash.com/pyblog/&#34;&gt;Mike Ash&lt;/a&gt;: well written, informative blog posts on all things obj-c and more. The links below were very useful for this project:&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mikeash/MAObjCRuntime&#34;&gt;MAObjCRuntime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mikeash.com/pyblog/friday-qa-2013-02-08-lets-build-key-value-coding.html&#34;&gt;Let&#39;s Build Key Value Coding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mikeash.com/pyblog/friday-qa-2013-09-27-arm64-and-you.html&#34;&gt;ARM64 and You&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heardrwt/RHObjectiveBeagle&#34;&gt;RHObjectiveBeagle&lt;/a&gt;: a tool for scanning the heap for live objects. It should be noted that the source code of RHObjectiveBeagle was not consulted due to licensing concerns.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opensource.apple.com/source/lldb/lldb-179.1/examples/darwin/heap_find/heap/heap_find.cpp&#34;&gt;heap_find.cpp&lt;/a&gt;: an example of enumerating malloc blocks for finding objects on the heap.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/samdmarshall/17f4e66b5e2e579fd396&#34;&gt;Gist&lt;/a&gt; from &lt;a href=&#34;https://github.com/samdmarshall&#34;&gt;@samdmarshall&lt;/a&gt;: another example of enumerating malloc blocks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sealiesoftware.com/blog/archive/2013/09/24/objc_explain_Non-pointer_isa.html&#34;&gt;Non-pointer isa&lt;/a&gt;: an explanation of changes to the isa field on iOS for ARM64 and mention of the useful &lt;code&gt;objc_debug_isa_class_mask&lt;/code&gt; variable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nicklockwood/GZIP&#34;&gt;GZIP&lt;/a&gt;: A library for compressing/decompressing data on iOS using libz.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ccgus/fmdb&#34;&gt;FMDB&lt;/a&gt;: This is an Objective-C wrapper around SQLite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/indragiek/InAppViewDebugger&#34;&gt;InAppViewDebugger&lt;/a&gt;: The inspiration and reference implementation for FLEX 4&#39;s 3D view explorer, by @indragiek.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://github.com/Flipboard/FLEX/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift runtime introspection (swift classes, swift objects on the heap, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Add new NSUserDefault key/value pairs on the fly&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>firebase/firebase-ios-sdk</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/firebase/firebase-ios-sdk</id>
    <link href="https://github.com/firebase/firebase-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firebase iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Firebase.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/Firebase.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/Firebase.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Firebase Apple Open Source Development&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains all Apple platform Firebase SDK source except FirebaseAnalytics.&lt;/p&gt; &#xA;&lt;p&gt;Firebase is an app development platform with tools to help you build, grow and monetize your app. More information about Firebase can be found on the &lt;a href=&#34;https://firebase.google.com&#34;&gt;official Firebase website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See the subsections below for details about the different installation methods. Where available, it&#39;s recommended to install any libraries with a &lt;code&gt;Swift&lt;/code&gt; suffix to get the best experience when writing your app in Swift.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#standard-pod-install&#34;&gt;Standard pod install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#installing-from-github&#34;&gt;Installing from the GitHub repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#carthage-ios-only&#34;&gt;Experimental Carthage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Standard pod install&lt;/h3&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://firebase.google.com/docs/ios/setup&#34;&gt;https://firebase.google.com/docs/ios/setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; support can be found at &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/SwiftPackageManager.md&#34;&gt;SwiftPackageManager&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Installing from GitHub&lt;/h3&gt; &#xA;&lt;p&gt;These instructions can be used to access the Firebase repo at other branches, tags, or commits.&lt;/p&gt; &#xA;&lt;h4&gt;Background&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://guides.cocoapods.org/syntax/podfile.html#pod&#34;&gt;the Podfile Syntax Reference&lt;/a&gt; for instructions and options about overriding pod source locations.&lt;/p&gt; &#xA;&lt;h4&gt;Accessing Firebase Source Snapshots&lt;/h4&gt; &#xA;&lt;p&gt;All of the official releases are tagged in this repo and available via CocoaPods. To access a local source snapshot or unreleased branch, use Podfile directives like the following:&lt;/p&gt; &#xA;&lt;p&gt;To access FirebaseFirestore via a branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;pod &#39;FirebaseFirestore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access FirebaseMessaging via a checked out version of the firebase-ios-sdk repo do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;pod &#39;FirebaseMessaging&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage (iOS only)&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for the experimental Carthage distribution are at &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Carthage.md&#34;&gt;Carthage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Firebase from a Framework or a library&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/docs/firebase_in_libraries.md&#34;&gt;Using Firebase from a Framework or a library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To develop Firebase software in this repository, ensure that you have at least the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 13.3.1 (or later)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CocoaPods is still the canonical way to develop, but much of the repo now supports development with Swift Package Manager.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Install&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CocoaPods 1.10.0 (or later)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/cocoapods-generate&#34;&gt;CocoaPods generate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the pod that you want to develop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod gen Firebase{name here}.podspec --local-sources=./ --auto-open --platforms=ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If the CocoaPods cache is out of date, you may need to run &lt;code&gt;pod repo update&lt;/code&gt; before the &lt;code&gt;pod gen&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Note: Set the &lt;code&gt;--platforms&lt;/code&gt; option to &lt;code&gt;macos&lt;/code&gt; or &lt;code&gt;tvos&lt;/code&gt; to develop/test for those platforms. Since 10.2, Xcode does not properly handle multi-platform CocoaPods workspaces.&lt;/p&gt; &#xA;&lt;p&gt;Firestore has a self contained Xcode project. See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Firestore/README.md&#34;&gt;Firestore/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h4&gt;Development for Catalyst&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pod gen {name here}.podspec --local-sources=./ --auto-open --platforms=ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the Mac box in the App-iOS Build Settings&lt;/li&gt; &#xA; &lt;li&gt;Sign the App in the Settings Signing &amp;amp; Capabilities tab&lt;/li&gt; &#xA; &lt;li&gt;Click Pods in the Project Manager&lt;/li&gt; &#xA; &lt;li&gt;Add Signing to the iOS host app and unit test targets&lt;/li&gt; &#xA; &lt;li&gt;Select the Unit-unit scheme&lt;/li&gt; &#xA; &lt;li&gt;Run it to build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively disable signing in each target:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to Build Settings tab&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Add User-Defined Setting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;CODE_SIGNING_REQUIRED&lt;/code&gt; setting with a value of &lt;code&gt;NO&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable test schemes: &lt;code&gt;./scripts/setup_spm_tests.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;open Package.swift&lt;/code&gt; or double click &lt;code&gt;Package.swift&lt;/code&gt; in Finder.&lt;/li&gt; &#xA; &lt;li&gt;Xcode will open the project &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Choose a scheme for a library to build or test suite to run&lt;/li&gt; &#xA;   &lt;li&gt;Choose a target platform by selecting the run destination along with the scheme&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding a New Firebase Pod&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/AddNewPod.md&#34;&gt;AddNewPod&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Managing Headers and Imports&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/HeadersImports.md&#34;&gt;HeadersImports&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that the code is formatted consistently, run the script &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/raw/master/scripts/check.sh&#34;&gt;./scripts/check.sh&lt;/a&gt; before creating a PR.&lt;/p&gt; &#xA;&lt;p&gt;GitHub Actions will verify that any code changes are done in a style compliant way. Install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;mint&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install clang-format@14&#xA;brew install mint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Select a scheme and press Command-u to build a component and run its unit tests.&lt;/p&gt; &#xA;&lt;h3&gt;Running Sample Apps&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the sample apps and integration tests, you&#39;ll need a valid &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; file. The Firebase Xcode project contains dummy plist files without real values, but can be replaced with real plist files. To get your own &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;Firebase Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a new Firebase project, if you don&#39;t already have one&lt;/li&gt; &#xA; &lt;li&gt;For each sample app you want to test, create a new Firebase app with the sample app&#39;s bundle identifier (e.g. &lt;code&gt;com.google.Database-Example&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Download the resulting &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; and add it to the Xcode project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Coverage Report Generation&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/scripts/code_coverage_report/README.md&#34;&gt;scripts/code_coverage_report/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h2&gt;Specific Component Instructions&lt;/h2&gt; &#xA;&lt;p&gt;See the sections below for any special instructions for those components.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Auth&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re doing specific Firebase Auth development, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseAuth/Tests/Sample/README.md&#34;&gt;the Auth Sample README&lt;/a&gt; for instructions about building and running the FirebaseAuth pod along with various samples and tests.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Database&lt;/h3&gt; &#xA;&lt;p&gt;The Firebase Database Integration tests can be run against a locally running Database Emulator or against a production instance.&lt;/p&gt; &#xA;&lt;p&gt;To run against a local emulator instance, invoke &lt;code&gt;./scripts/run_database_emulator.sh start&lt;/code&gt; before running the integration test.&lt;/p&gt; &#xA;&lt;p&gt;To run against a production instance, provide a valid GoogleServices-Info.plist and copy it to &lt;code&gt;FirebaseDatabase/Tests/Resources/GoogleService-Info.plist&lt;/code&gt;. Your Security Rule must be set to &lt;a href=&#34;https://firebase.google.com/docs/database/security/quickstart&#34;&gt;public&lt;/a&gt; while your tests are running.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Performance Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re doing specific Firebase Performance Monitoring development, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebasePerformance/README.md&#34;&gt;the Performance README&lt;/a&gt; for instructions about building the SDK and &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebasePerformance/Tests/TestApp/README.md&#34;&gt;the Performance TestApp README&lt;/a&gt; for instructions about integrating Performance with the dev test App.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Storage&lt;/h3&gt; &#xA;&lt;p&gt;To run the Storage Integration tests, follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseStorageInternal/Tests/Integration/FIRStorageIntegrationTests.m&#34;&gt;FIRStorageIntegrationTests.m&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Push Notifications&lt;/h4&gt; &#xA;&lt;p&gt;Push notifications can only be delivered to specially provisioned App IDs in the developer portal. In order to actually test receiving push notifications, you will need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the bundle identifier of the sample app to something you own in your Apple Developer account, and enable that App ID for push notifications.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll also need to &lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging/ios/certs&#34;&gt;upload your APNs Provider Authentication Key or certificate to the Firebase Console&lt;/a&gt; at &lt;strong&gt;Project Settings &amp;gt; Cloud Messaging &amp;gt; [Your Firebase App]&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure your iOS device is added to your Apple Developer portal as a test device.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;iOS Simulator&lt;/h4&gt; &#xA;&lt;p&gt;The iOS Simulator cannot register for remote notifications, and will not receive push notifications. In order to receive push notifications, you&#39;ll have to follow the steps above and run the app on a physical device.&lt;/p&gt; &#xA;&lt;h2&gt;Building with Firebase on Apple platforms&lt;/h2&gt; &#xA;&lt;p&gt;Firebase 8.9.0 introduced official beta support for macOS, Catalyst, and tvOS. watchOS continues to be community supported. Thanks to community contributions for many of the multi-platform PRs.&lt;/p&gt; &#xA;&lt;p&gt;At this time, most of Firebase&#39;s products are available across Apple platforms. There are still a few gaps, especially on watchOS. For details about the current support matrix, see &lt;a href=&#34;https://firebase.google.com/docs/ios/learn-more#firebase_library_support_by_platform&#34;&gt;this chart&lt;/a&gt; in Firebase&#39;s documentation.&lt;/p&gt; &#xA;&lt;h3&gt;watchOS&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, many of Firebase SDKs now compile, run unit tests, and work on watchOS. See the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Example/watchOSSample&#34;&gt;Independent Watch App Sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that watchOS is not officially supported by Firebase. While we can catch basic unit test issues with GitHub Actions, there may be some changes where the SDK no longer works as expected on watchOS. If you encounter this, please &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;During app setup in the console, you may get to a step that mentions something like &#34;Checking if the app has communicated with our servers&#34;. This relies on Analytics and will not work on watchOS. &lt;strong&gt;It&#39;s safe to ignore the message and continue&lt;/strong&gt;, the rest of the SDKs will work as expected.&lt;/p&gt; &#xA;&lt;h4&gt;Additional Crashlytics Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;watchOS has limited support. Due to watchOS restrictions, mach exceptions and signal crashes are not recorded. (Crashes in SwiftUI are generated as mach exceptions, so will not be recorded)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Combine&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, &lt;em&gt;FirebaseCombineSwift&lt;/em&gt; contains support for Apple&#39;s Combine framework. This module is currently under development, and not yet supported for use in production environments. Fore more details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseCombineSwift/README.md&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; for more about the Firebase Apple SDK Open Source plans and directions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more information on contributing to the Firebase Apple SDK.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repository are licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your use of Firebase is governed by the &lt;a href=&#34;https://firebase.google.com/terms/&#34;&gt;Terms of Service for Firebase Services&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>react-native-maps/react-native-maps</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/react-native-maps/react-native-maps</id>
    <link href="https://github.com/react-native-maps/react-native-maps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native Mapview component for iOS + Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-maps &lt;a href=&#34;https://www.npmjs.com/package/react-native-maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-maps.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;React Native Map components for iOS + Android&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project is being maintained by a small group of people, and any help with issues and pull requests are always appreciated. If you are able and willing to contribute, please read the &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/examples-setup.md&#34;&gt;Setup Instructions for the Included Example Project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Due to the rapid changes being made in the React Native ecosystem, we are not officially going to support this module on anything but the latest version of React Native. With that said, we will do our best to stay compatible with older versions as much that is practical, and the peer dependency of this requirement is set to &lt;code&gt;&#34;react-native&#34;: &#34;*&#34;&lt;/code&gt; explicitly for this reason. If you are using an older version of React Native with this module though, some features may be buggy.&lt;/p&gt; &#xA;&lt;h2&gt;Component API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/mapview.md&#34;&gt;&lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/marker.md&#34;&gt;&lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/callout.md&#34;&gt;&lt;code&gt;&amp;lt;Callout /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polygon.md&#34;&gt;&lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polyline.md&#34;&gt;&lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/circle.md&#34;&gt;&lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/overlay.md&#34;&gt;&lt;code&gt;&amp;lt;Overlay /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/heatmap.md&#34;&gt;&lt;code&gt;&amp;lt;Heatmap /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/geojson.md&#34;&gt;&lt;code&gt;&amp;lt;Geojson /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;General Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import MapView from &#39;react-native-maps&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var MapView = require(&#39;react-native-maps&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This MapView component is built so that features on the map (such as Markers, Polygons, etc.) are specified as children of the MapView itself. This provides an intuitive and react-like API for declaratively controlling features on the map.&lt;/p&gt; &#xA;&lt;h3&gt;Rendering a Map with an initial region&lt;/h3&gt; &#xA;&lt;h2&gt;MapView&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;MapView&#xA;    initialRegion={{&#xA;      latitude: 37.78825,&#xA;      longitude: -122.4324,&#xA;      latitudeDelta: 0.0922,&#xA;      longitudeDelta: 0.0421,&#xA;    }}&#xA;  /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a MapView while controlling the region as state&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;getInitialState() {&#xA;  return {&#xA;    region: {&#xA;      latitude: 37.78825,&#xA;      longitude: -122.4324,&#xA;      latitudeDelta: 0.0922,&#xA;      longitudeDelta: 0.0421,&#xA;    },&#xA;  };&#xA;}&#xA;&#xA;onRegionChange(region) {&#xA;  this.setState({ region });&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a list of markers on a map&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Marker } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  {this.state.markers.map((marker, index) =&amp;gt; (&#xA;    &amp;lt;Marker&#xA;      key={index}&#xA;      coordinate={marker.latlng}&#xA;      title={marker.title}&#xA;      description={marker.description}&#xA;    /&amp;gt;&#xA;  ))}&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a Marker with a custom image&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You need to generate an &lt;code&gt;png&lt;/code&gt; image with various resolution (lets call them &lt;code&gt;custom_pin&lt;/code&gt;) - for more information go to &lt;a href=&#34;https://developer.android.com/studio/write/image-asset-studio#access&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/ToolsLanguages/Conceptual/Xcode_Overview/AddingImages.html&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;put all images in Android drawables and iOS assets dir&lt;/li&gt; &#xA; &lt;li&gt;Now you can use the following code:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Marker&#xA;  coordinate={{ latitude : latitude , longitude : longitude }}&#xA;  image={{uri: &#39;custom_pin&#39;}}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You can also pass the image binary data like &lt;code&gt;image={require(&#39;custom_pin.png&#39;)}&lt;/code&gt;, but this will not scale good with the different screen sizes.&lt;/p&gt; &#xA;&lt;h3&gt;Rendering a Marker with a custom view&lt;/h3&gt; &#xA;&lt;p&gt;Note: This has performance implications, if you wish for a simpler solution go with a custom image (save your self the head ache)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Marker coordinate={{ latitude : latitude , longitude : longitude }}&amp;gt;&#xA;  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;&#xA;&amp;lt;/Marker&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a custom Marker with a custom Callout&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Callout } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;Marker coordinate={marker.latlng}&amp;gt;&#xA;  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;&#xA;  &amp;lt;Callout&amp;gt;&#xA;    &amp;lt;MyCustomCalloutView {...marker} /&amp;gt;&#xA;  &amp;lt;/Callout&amp;gt;&#xA;&amp;lt;/Marker&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Draggable Markers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;MapView initialRegion={...}&amp;gt;&#xA;  &amp;lt;Marker draggable&#xA;    coordinate={this.state.x}&#xA;    onDragEnd={(e) =&amp;gt; this.setState({ x: e.nativeEvent.coordinate })}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a custom Tile Overlay&lt;/h3&gt; &#xA;&lt;h4&gt;Tile Overlay using tile server&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { UrlTile } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  &amp;lt;UrlTile&#xA;    /**&#xA;     * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime&#xA;     * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png&#xA;     */&#xA;    urlTemplate={this.state.urlTemplate}&#xA;    /**&#xA;     * The maximum zoom level for this tile overlay. Corresponds to the maximumZ setting in&#xA;     * MKTileOverlay. iOS only.&#xA;     */&#xA;    maximumZ={19}&#xA;    /**&#xA;     * flipY allows tiles with inverted y coordinates (origin at bottom left of map)&#xA;     * to be used. Its default value is false.&#xA;     */&#xA;    flipY={false}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Android: add the following line in your AndroidManifest.xml&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For IOS: configure &lt;a href=&#34;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW33&#34;&gt;App Transport Security&lt;/a&gt; in your app&lt;/p&gt; &#xA;&lt;h4&gt;Tile Overlay using local tiles&lt;/h4&gt; &#xA;&lt;p&gt;Tiles can be stored locally within device using xyz tiling scheme and displayed as tile overlay as well. This is usefull especially for offline map usage when tiles are available for selected map region within device storage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { LocalTile } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  &amp;lt;LocalTile&#xA;   /**&#xA;    * The path template of the locally stored tiles. The patterns {x} {y} {z} will be replaced at runtime&#xA;    * For example, /storage/emulated/0/mytiles/{z}/{x}/{y}.png&#xA;    */&#xA;   pathTemplate={this.state.pathTemplate}&#xA;   /**&#xA;    * The size of provided local tiles (usually 256 or 512).&#xA;    */&#xA;   tileSize={256}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Android: LocalTile is still just overlay over original map tiles. It means that if device is online, underlying tiles will be still downloaded. If original tiles download/display is not desirable set mapType to &#39;none&#39;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;MapView&#xA;  mapType={Platform.OS == &#34;android&#34; ? &#34;none&#34; : &#34;standard&#34;}&#xA;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Category:Tile_downloading&#34;&gt;OSM Wiki&lt;/a&gt; for how to download tiles for offline usage.&lt;/p&gt; &#xA;&lt;h3&gt;Overlaying other components on the map&lt;/h3&gt; &#xA;&lt;p&gt;Place components that you wish to overlay &lt;code&gt;MapView&lt;/code&gt; underneath the &lt;code&gt;MapView&lt;/code&gt; closing tag. Absolutely position these elements.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;    /&amp;gt;&#xA;    &amp;lt;OverlayComponent&#xA;      style={{position: &#34;absolute&#34;, bottom: 50}}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing the map style&lt;/h3&gt; &#xA;&lt;p&gt;Create the json object, or download a generated one from the &lt;a href=&#34;https://mapstyle.withgoogle.com/&#34;&gt;google style generator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// The generated json object&#xA;mapStyle = [ ... ]&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;      customMapStyle={mapStyle}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For iOS, in addition to providing the &lt;code&gt;mapStyle&lt;/code&gt; you will need to do the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { PROVIDER_GOOGLE } from &#39;react-native-maps&#39;&#xA;&#xA;// ...&#xA;&#xA;&amp;lt;MapView&#xA;  provider={PROVIDER_GOOGLE}&#xA;  customMapStyle={MapStyle}&#xA;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add the AirGoogleMaps directory:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/raw/1e71a21f39e7b88554852951f773c731c94680c9/docs/installation.md#ios&#34;&gt;https://github.com/react-native-maps/react-native-maps/blob/1e71a21f39e7b88554852951f773c731c94680c9/docs/installation.md#ios&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An unofficial step-by-step guide is also available at &lt;a href=&#34;https://gist.github.com/heron2014/e60fa003e9b117ce80d56bb1d5bfe9e0&#34;&gt;https://gist.github.com/heron2014/e60fa003e9b117ce80d56bb1d5bfe9e0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MapView Events&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component and its child components have several events that you can subscribe to. This example displays some of them in a log as a demonstration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBpncYQASu2WTW8.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77YdviLqtjaecRYA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tracking Region / Location&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBoPSLlIKQ2dv7q.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XWjqECvdgjx9oA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Programmatically Changing Region&lt;/h3&gt; &#xA;&lt;p&gt;One can change the mapview&#39;s position using refs and component methods, or by passing in an updated &lt;code&gt;region&lt;/code&gt; prop. The component methods will allow one to animate to a given position like the native API could.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UB7poyB6YJ0KPWU.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77Yc4wK3pzZusEbm.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Changing the style of the map&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/a9WqCL6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Arbitrary React Views as Markers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBcsCLoLQtksJxe.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UB1qGEM9jYni3KM.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using the MapView with the Animated API&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component can be made to work with the Animated API, having the entire &lt;code&gt;region&lt;/code&gt; prop be declared as an animated value. This allows one to animate the zoom and position of the MapView along with other gestures, giving a nice feel.&lt;/p&gt; &#xA;&lt;p&gt;Further, Marker views can use the animated API to enhance the effect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XMw9IwS6QAv0nC.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UBdGQdM1GmVoIdq.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Issue: Since android needs to render its marker views as a bitmap, the animations APIs may not be compatible with the Marker views. Not sure if this can be worked around yet or not.&lt;/p&gt; &#xA;&lt;p&gt;Markers&#39; coordinates can also be animated, as shown in this example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xTcnTelp1OwGPu1Wh2.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xTcnT6WVpwlCiQnFW8.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Polygon Creator&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UAZWqQBkOzs8HE4.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XVBRErNZl3zyWQ.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Overlays&lt;/h3&gt; &#xA;&lt;p&gt;So far, &lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; are available to pass in as children to the &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XZCH8JpEhzVcNG.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XZyA0aYeOX5jsA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradient Polylines (iOS MapKit only)&lt;/h3&gt; &#xA;&lt;p&gt;Gradient polylines can be created using the &lt;code&gt;strokeColors&lt;/code&gt; prop of the &lt;code&gt;&amp;lt;Polyline&amp;gt;&lt;/code&gt; component.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/P7UeqAm.png?1&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Default Markers&lt;/h3&gt; &#xA;&lt;p&gt;Default markers will be rendered unless a custom marker is specified. One can optionally adjust the color of the default marker by using the &lt;code&gt;pinColor&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77Y0pWKmUUnguHK0.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UBfk3I58VIwZjVe.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Callouts&lt;/h3&gt; &#xA;&lt;p&gt;Callouts to markers can be completely arbitrary react views, similar to markers. As a result, they can be interacted with like any other view.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can fall back to the standard behavior of just having a title/description through the &lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt;&#39;s &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; props.&lt;/p&gt; &#xA;&lt;p&gt;Custom callout views can be the entire tooltip bubble, or just the content inside of the system default bubble.&lt;/p&gt; &#xA;&lt;p&gt;To handle press on specific subview of callout use &lt;code&gt;&amp;lt;CalloutSubview /&amp;gt;&lt;/code&gt; with &lt;code&gt;onPress&lt;/code&gt;. See &lt;code&gt;Callouts.js&lt;/code&gt; example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XNePGnMIIDpbnq.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77YdU0HXryvoRqaQ.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image-based Markers&lt;/h3&gt; &#xA;&lt;p&gt;Markers can be customized by just using images, and specified using the &lt;code&gt;image&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/mzrOjTR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Draggable Markers&lt;/h3&gt; &#xA;&lt;p&gt;Markers are draggable, and emit continuous drag events to update other UI during drags.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/l2JImnZxdv1WbpQfC.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/l2JIhv4Jx6Ugx1EGI.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lite Mode ( Android )&lt;/h3&gt; &#xA;&lt;p&gt;Enable lite mode on Android with &lt;code&gt;liteMode&lt;/code&gt; prop. Ideal when having multiple maps in a View or ScrollView.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/qZ2lAf18s89na.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;On Poi Click (Google Maps Only)&lt;/h3&gt; &#xA;&lt;p&gt;Poi are clickable, you can catch the event to get its information (usually to get the full detail from Google Place using the placeId).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3480VsCKnHr31uCLU3/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Animated Region&lt;/h3&gt; &#xA;&lt;p&gt;The MapView can accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as its &lt;code&gt;region&lt;/code&gt; prop. This allows you to utilize the Animated API to control the map&#39;s center and zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { AnimatedRegion, Animated } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    region: new AnimatedRegion({&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;      latitudeDelta: LATITUDE_DELTA,&#xA;      longitudeDelta: LONGITUDE_DELTA,&#xA;    }),&#xA;  };&#xA;}&#xA;&#xA;onRegionChange(region) {&#xA;  this.state.region.setValue(region);&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;Animated&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Animated Marker Position&lt;/h3&gt; &#xA;&lt;p&gt;Markers can also accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as a coordinate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import Mapview, { AnimatedRegion, MarkerAnimated } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    coordinate: new AnimatedRegion({&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;    }),&#xA;  };&#xA;}&#xA;&#xA;componentWillReceiveProps(nextProps) {&#xA;  const duration = 500&#xA;&#xA;  if (this.props.coordinate !== nextProps.coordinate) {&#xA;    if (Platform.OS === &#39;android&#39;) {&#xA;      if (this.marker) {&#xA;        this.marker.animateMarkerToCoordinate(&#xA;          nextProps.coordinate,&#xA;          duration&#xA;        );&#xA;      }&#xA;    } else {&#xA;      this.state.coordinate.timing({&#xA;        ...nextProps.coordinate,&#xA;        useNativeDriver: true, // defaults to false if not passed explicitly&#xA;        duration&#xA;      }).start();&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView initialRegion={...}&amp;gt;&#xA;      &amp;lt;MarkerAnimated&#xA;        ref={marker =&amp;gt; { this.marker = marker }}&#xA;        coordinate={this.state.coordinate}&#xA;      /&amp;gt;&#xA;    &amp;lt;/MapView&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Take Snapshot of map&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { Marker } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    coordinate: {&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;    },&#xA;  };&#xA;}&#xA;&#xA;takeSnapshot () {&#xA;  // &#39;takeSnapshot&#39; takes a config object with the&#xA;  // following options&#xA;  const snapshot = this.map.takeSnapshot({&#xA;    width: 300,      // optional, when omitted the view-width is used&#xA;    height: 300,     // optional, when omitted the view-height is used&#xA;    region: {..},    // iOS only, optional region to render&#xA;    format: &#39;png&#39;,   // image formats: &#39;png&#39;, &#39;jpg&#39; (default: &#39;png&#39;)&#xA;    quality: 0.8,    // image quality: 0..1 (only relevant for jpg, default: 1)&#xA;    result: &#39;file&#39;   // result types: &#39;file&#39;, &#39;base64&#39; (default: &#39;file&#39;)&#xA;  });&#xA;  snapshot.then((uri) =&amp;gt; {&#xA;    this.setState({ mapSnapshot: uri });&#xA;  });&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;View&amp;gt;&#xA;      &amp;lt;MapView initialRegion={...} ref={map =&amp;gt; { this.map = map }}&amp;gt;&#xA;        &amp;lt;Marker coordinate={this.state.coordinate} /&amp;gt;&#xA;      &amp;lt;/MapView&amp;gt;&#xA;      &amp;lt;Image source={{ uri: this.state.mapSnapshot.uri }} /&amp;gt;&#xA;      &amp;lt;TouchableOpacity onPress={this.takeSnapshot}&amp;gt;&#xA;        Take Snapshot&#xA;      &amp;lt;/TouchableOpacity&amp;gt;&#xA;    &amp;lt;/View&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Zoom to Specified Markers&lt;/h3&gt; &#xA;&lt;p&gt;Pass an array of marker identifiers to have the map re-focus.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o7qEbOQnO0yoXqKJ2.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/l41YdrQZ7m6Dz4h0c.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zoom to Specified Coordinates&lt;/h3&gt; &#xA;&lt;p&gt;Pass an array of coordinates to focus a map region on said coordinates.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1627824/18609960/da5d9e06-7cdc-11e6-811e-34e255093df9.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;h4&gt;My map is blank&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that you have &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md&#34;&gt;properly installed&lt;/a&gt; react-native-maps.&lt;/li&gt; &#xA; &lt;li&gt;Check in the logs if there is more informations about the issue.&lt;/li&gt; &#xA; &lt;li&gt;Try setting the style of the MapView to an absolute position with top, left, right and bottom values set.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have enabled Google Maps API in &lt;a href=&#34;https://console.developers.google.com/apis/library&#34;&gt;Google developer console&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const styles = StyleSheet.create({&#xA;  map: {&#xA;    ...StyleSheet.absoluteFillObject,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;MapView&#xA;  style={styles.map}&#xA;  // other props&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Inputs don&#39;t focus&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When inputs don&#39;t focus or elements don&#39;t respond to tap, look at the order of the view hierarchy, sometimes the issue could be due to ordering of rendered components, prefer putting MapView as the first component.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Bad:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;View&amp;gt;&#xA;  &amp;lt;TextInput/&amp;gt;&#xA;  &amp;lt;MapView/&amp;gt;&#xA;&amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Good:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;View&amp;gt;&#xA;  &amp;lt;MapView/&amp;gt;&#xA;  &amp;lt;TextInput/&amp;gt;&#xA;&amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Children Components Not Re-Rendering&lt;/h4&gt; &#xA;&lt;p&gt;Components that aren&#39;t declared by this library (Ex: Markers, Polyline) must not be children of the MapView component due to MapView&#39;s unique rendering methodology. Have your custom components / views outside the MapView component and position absolute to ensure they only re-render as needed. Example: Bad:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;    &amp;lt;MapView style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;      &amp;lt;View style={{ position: &#39;absolute&#39;, top: 100, left: 50 }}/&amp;gt;&#xA;    &amp;lt;/MapView&amp;gt;&#xA;  &amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Good:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;    &amp;lt;MapView style={StyleSheet.absoluteFillObject} /&amp;gt;&#xA;    &amp;lt;View style={{ position: &#39;absolute&#39;, top: 100, left: 50 }}/&amp;gt;&#xA;  &amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/issues/1901&#34;&gt;https://github.com/react-native-maps/react-native-maps/issues/1901&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Crashing with EXC_BAD_ACCESS on iOS when switching apps&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;MapView&amp;gt;&lt;/code&gt; using Apple Maps in &lt;code&gt;mapType: &#34;standard&#34;&lt;/code&gt; will sometimes crash when you background the app or switch into another app. This is only an issue in XCode using Metal API Validation, and won&#39;t happen in production. To eliminate this problem even while debugging in XCode, go to &lt;code&gt;Edit Scheme... -&amp;gt; Run (Debug) -&amp;gt; Diagnostics&lt;/code&gt; and uncheck &lt;code&gt;Metal -&amp;gt; API Validation&lt;/code&gt;. (h/t &lt;a href=&#34;https://github.com/Simon-TechForm&#34;&gt;@Simon-TechForm&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121&#34;&gt;https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; Copyright (c) 2017 Airbnb&#xA;&#xA; Licensed under the The MIT License (MIT) (the &#34;License&#34;);&#xA; you may not use this file except in compliance with the License.&#xA; You may obtain a copy of the License at&#xA;&#xA;    https://raw.githubusercontent.com/airbnb/react-native-maps/master/LICENSE&#xA;&#xA; Unless required by applicable law or agreed to in writing, software&#xA; distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; See the License for the specific language governing permissions and&#xA; limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Sunnyyoung/WeChatTweak-macOS</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/Sunnyyoung/WeChatTweak-macOS</id>
    <link href="https://github.com/Sunnyyoung/WeChatTweak-macOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A dynamic library tweak for WeChat macOS - 首款微信 macOS 客户端撤回拦截与多开 🔨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeChatTweak-macOS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/README-English.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README-English-blue.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/wechattweak&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-WeChatTweak-brightgreen.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;微信 macOS 客户端增强 Tweak 动态库。&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;阻止消息撤回 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;消息列表通知&lt;/li&gt; &#xA;   &lt;li&gt;系统通知&lt;/li&gt; &#xA;   &lt;li&gt;正常撤回自己发出的消息&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;客户端无限多开 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;右键 Dock icon 登录新的微信账号&lt;/li&gt; &#xA;   &lt;li&gt;命令行执行：&lt;code&gt;open -n /Applications/WeChat.app&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;消息处理增强 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持任意表情导出&lt;/li&gt; &#xA;   &lt;li&gt;支持二维码识别&lt;/li&gt; &#xA;   &lt;li&gt;支持右键直接复制链接&lt;/li&gt; &#xA;   &lt;li&gt;支持由系统默认浏览器直接打开&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;重新打开应用无需手机认证&lt;/del&gt;（官方已经支持）&lt;/li&gt; &#xA; &lt;li&gt;UI界面设置面板&lt;/li&gt; &#xA; &lt;li&gt;支持 Alfred workflow&lt;/li&gt; &#xA; &lt;li&gt;支持 Launchbar action&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;首次使用&lt;/strong&gt;安装 &lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-CLI&#34;&gt;WeChatTweak-CLI&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install sunnyyoung/repo/wechattweak-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装/更新/卸载 Tweak:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo wechattweak-cli install   # 安装/更新&#xA;$ sudo wechattweak-cli uninstall # 卸载&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;截图&lt;/h2&gt; &#xA;&lt;h3&gt;整体预览&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x01.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alfred workflow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x02.png&#34; alt=&#34;Alfred&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LaunchBar action&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x03.png&#34; alt=&#34;LaunchBar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;功能失效？&lt;br&gt; 请提交 &lt;strong&gt;issue&lt;/strong&gt; 然后等待，或提交 &lt;strong&gt;pull request&lt;/strong&gt; 一起发电。&lt;/li&gt; &#xA; &lt;li&gt;Issue 没有响应 or 回复？&lt;br&gt; 开源项目，用爱发电，耐心等。&lt;/li&gt; &#xA; &lt;li&gt;兼容旧版本客户端吗？&lt;br&gt; 不，为了降低维护成本和保证更新速度，默认只支持&lt;strong&gt;最新&lt;/strong&gt;版本客户端。&lt;/li&gt; &#xA; &lt;li&gt;会封号吗？&lt;br&gt; 在&lt;strong&gt;只使用该工具&lt;/strong&gt;的情况下&lt;strong&gt;没有&lt;/strong&gt;出现过封号/风险提示，若有&lt;strong&gt;使用过其他同类工具&lt;/strong&gt;则有可能会出现封号/风险提示，因此风险自负。&lt;/li&gt; &#xA; &lt;li&gt;安装出现 &lt;code&gt;codesign_allocate helper tool cannot be found or used&lt;/code&gt; 错误？&lt;br&gt; 该错误为系统问题，暂未清楚原因，一般情况下重新执行安装操作即可。&lt;/li&gt; &#xA; &lt;li&gt;安装完打开微信客户端提示 &lt;code&gt;没有权限打开应用程序&lt;/code&gt;？&lt;br&gt; 先卸载，再重新安装一次即可，如仍无法解决请重启电脑。实在搞不定的，到 &lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-macOS/issues?q=&#34;&gt;issues&lt;/a&gt; 里找找类似问题并尝试解决。&lt;/li&gt; &#xA; &lt;li&gt;理性讨论。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/wei-xin-macos-ke-hu-duan-wu-xian-duo-kai-gong-neng-shi-jian/&#34;&gt;微信 macOS 客户端无限多开功能实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/wei-xin-macos-ke-hu-duan-lan-jie-che-hui-gong-neng-shi-jian/&#34;&gt;微信 macOS 客户端拦截撤回功能实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/rang-wei-xin-macos-ke-hu-duan-zhi-chi-alfred/&#34;&gt;让微信 macOS 客户端支持 Alfred&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;贡献者&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-macOS/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/WeChatTweak-macOS/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/Sunnyyoung/WeChatTweak-macOS/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ccgus/fmdb</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/ccgus/fmdb</id>
    <link href="https://github.com/ccgus/fmdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Cocoa / Objective-C wrapper around SQLite&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FMDB v2.7&lt;/h1&gt; &#xA;&lt;!--[![Platform](https://img.shields.io/cocoapods/p/FMDB.svg?style=flat)](http://cocoadocs.org/docsets/Alamofire)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://img.shields.io/cocoapods/v/FMDB.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/FMDB.svg?sanitize=true&#34; alt=&#34;CocoaPods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is an Objective-C wrapper around &lt;a href=&#34;https://sqlite.org/&#34;&gt;SQLite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The FMDB Mailing List:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/group/fmdb&#34;&gt;https://groups.google.com/group/fmdb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Read the SQLite FAQ:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sqlite.org/faq.html&#34;&gt;https://www.sqlite.org/faq.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since FMDB is built on top of SQLite, you&#39;re going to want to read this page top to bottom at least once. And while you&#39;re there, make sure to bookmark the SQLite Documentation page: &lt;a href=&#34;https://www.sqlite.org/docs.html&#34;&gt;https://www.sqlite.org/docs.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Do you have an awesome idea that deserves to be in FMDB? You might consider pinging ccgus first to make sure he hasn&#39;t already ruled it out for some reason. Otherwise pull requests are great, and make sure you stick to the local coding conventions. However, please be patient and if you haven&#39;t heard anything from ccgus for a week or more, you might want to send a note asking what&#39;s up.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;FMDB can be installed using &lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you haven&#39;t done so already, you might want to initialize the project, to have it produce a &lt;code&gt;Podfile&lt;/code&gt; template for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, edit the &lt;code&gt;Podfile&lt;/code&gt;, adding &lt;code&gt;FMDB&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Uncomment the next line to define a global platform for your project&#xA;# platform :ios, &#39;9.0&#39;&#xA;&#xA;target &#39;MyApp&#39; do&#xA;    # Comment the next line if you&#39;re not using Swift and don&#39;t want to use dynamic frameworks&#xA;    use_frameworks!&#xA;&#xA;    # Pods for MyApp2&#xA;&#xA;    pod &#39;FMDB&#39;&#xA;    # pod &#39;FMDB/FTS&#39;   # FMDB with FTS&#xA;    # pod &#39;FMDB/standalone&#39;   # FMDB with latest SQLite amalgamation source&#xA;    # pod &#39;FMDB/standalone/FTS&#39;   # FMDB with latest SQLite amalgamation source and FTS&#xA;    # pod &#39;FMDB/SQLCipher&#39;   # FMDB with SQLCipher&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then install the pods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open the &lt;code&gt;.xcworkspace&lt;/code&gt; rather than the &lt;code&gt;.xcodeproj&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information on Cocoapods visit &lt;a href=&#34;https://cocoapods.org&#34;&gt;https://cocoapods.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If using FMDB with &lt;a href=&#34;https://www.zetetic.net/sqlcipher/&#34;&gt;SQLCipher&lt;/a&gt; you must use the FMDB/SQLCipher subspec. The FMDB/SQLCipher subspec declares SQLCipher as a dependency, allowing FMDB to be compiled with the &lt;code&gt;-DSQLITE_HAS_CODEC&lt;/code&gt; flag.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;Once you make sure you have &lt;a href=&#34;https://github.com/Carthage/Carthage/releases&#34;&gt;the latest version of Carthage&lt;/a&gt;, you can open up a command line terminal, navigate to your project&#39;s main directory, and then do the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo &#39; github &#34;ccgus/fmdb&#34; &#39; &amp;gt; ./Cartfile&#xA;$ carthage update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then configure your project as outlined in Carthage&#39;s &lt;a href=&#34;https://github.com/Carthage/Carthage#getting-started&#34;&gt;Getting Started&lt;/a&gt; (i.e. for iOS, adding the framework to the &#34;Link Binary with Libraries&#34; in your target and adding the &lt;code&gt;copy-frameworks&lt;/code&gt; script; in macOS, adding the framework to the list of &#34;Embedded Binaries&#34;).&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Declare FMDB as a package dependency.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.package(&#xA;    name: &#34;FMDB&#34;, &#xA;    url: &#34;https://github.com/ccgus/fmdb&#34;, &#xA;    .upToNextMinor(from: &#34;2.7.8&#34;)),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use FMDB in target dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.product(name: &#34;FMDB&#34;, package: &#34;FMDB&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FMDB Class Reference:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ccgus.github.io/fmdb/html/index.html&#34;&gt;https://ccgus.github.io/fmdb/html/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Automatic Reference Counting (ARC) or Manual Memory Management?&lt;/h2&gt; &#xA;&lt;p&gt;You can use either style in your Cocoa project. FMDB will figure out which you are using at compile time and do the right thing.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New in FMDB 2.7&lt;/h2&gt; &#xA;&lt;p&gt;FMDB 2.7 attempts to support a more natural interface. This represents a fairly significant change for Swift developers (audited for nullability; shifted to properties in external interfaces where possible rather than methods; etc.). For Objective-C developers, this should be a fairly seamless transition (unless you were using the ivars that were previously exposed in the public interface, which you shouldn&#39;t have been doing, anyway!).&lt;/p&gt; &#xA;&lt;h3&gt;Nullability and Swift Optionals&lt;/h3&gt; &#xA;&lt;p&gt;FMDB 2.7 is largely the same as prior versions, but has been audited for nullability. For Objective-C users, this simply means that if you perform a static analysis of your FMDB-based project, you may receive more meaningful warnings as you review your project, but there are likely to be few, if any, changes necessary in your code.&lt;/p&gt; &#xA;&lt;p&gt;For Swift users, this nullability audit results in changes that are not entirely backward compatible with FMDB 2.6, but is a little more Swifty. Before FMDB was audited for nullability, Swift was forced to defensively assume that variables were optional, but the library now more accurately knows which properties and method parameters are optional, and which are not.&lt;/p&gt; &#xA;&lt;p&gt;This means, though, that Swift code written for FMDB 2.7 may require changes. For example, consider the following Swift 3/Swift 4 code for FMDB 2.6:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;queue.inTransaction { db, rollback in&#xA;    do {&#xA;        guard let db == db else {&#xA;            // handle error here&#xA;            return&#xA;        }&#xA;&#xA;        try db.executeUpdate(&#34;INSERT INTO foo (bar) VALUES (?)&#34;, values: [1])&#xA;        try db.executeUpdate(&#34;INSERT INTO foo (bar) VALUES (?)&#34;, values: [2])&#xA;    } catch {&#xA;        rollback?.pointee = true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because FMDB 2.6 was not audited for nullability, Swift inferred that &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;rollback&lt;/code&gt; were optionals. But, now, in FMDB 2.7, Swift now knows that, for example, neither &lt;code&gt;db&lt;/code&gt; nor &lt;code&gt;rollback&lt;/code&gt; above can be &lt;code&gt;nil&lt;/code&gt;, so they are no longer optionals. Thus it becomes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;queue.inTransaction { db, rollback in&#xA;    do {&#xA;        try db.executeUpdate(&#34;INSERT INTO foo (bar) VALUES (?)&#34;, values: [1])&#xA;        try db.executeUpdate(&#34;INSERT INTO foo (bar) VALUES (?)&#34;, values: [2])&#xA;    } catch {&#xA;        rollback.pointee = true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Functions&lt;/h3&gt; &#xA;&lt;p&gt;In the past, when writing custom functions, you would have to generally include your own &lt;code&gt;@autoreleasepool&lt;/code&gt; block to avoid problems when writing functions that scanned through a large table. Now, FMDB will automatically wrap it in an autorelease pool, so you don&#39;t have to.&lt;/p&gt; &#xA;&lt;p&gt;Also, in the past, when retrieving the values passed to the function, you had to drop down to the SQLite C API and include your own &lt;code&gt;sqlite3_value_XXX&lt;/code&gt; calls. There are now &lt;code&gt;FMDatabase&lt;/code&gt; methods, &lt;code&gt;valueInt&lt;/code&gt;, &lt;code&gt;valueString&lt;/code&gt;, etc., so you can stay within Swift and/or Objective-C, without needing to call the C functions yourself. Likewise, when specifying the return values, you no longer need to call &lt;code&gt;sqlite3_result_XXX&lt;/code&gt; C API, but rather you can use &lt;code&gt;FMDatabase&lt;/code&gt; methods, &lt;code&gt;resultInt&lt;/code&gt;, &lt;code&gt;resultString&lt;/code&gt;, etc. There is a new &lt;code&gt;enum&lt;/code&gt; for &lt;code&gt;valueType&lt;/code&gt; called &lt;code&gt;SqliteValueType&lt;/code&gt;, which can be used for checking the type of parameter passed to the custom function.&lt;/p&gt; &#xA;&lt;p&gt;Thus, you can do something like (as of Swift 3):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;db.makeFunctionNamed(&#34;RemoveDiacritics&#34;, arguments: 1) { context, argc, argv in&#xA;    guard db.valueType(argv[0]) == .text || db.valueType(argv[0]) == .null else {&#xA;        db.resultError(&#34;Expected string parameter&#34;, context: context)&#xA;        return&#xA;    }&#xA;&#xA;    if let string = db.valueString(argv[0])?.folding(options: .diacriticInsensitive, locale: nil) {&#xA;        db.resultString(string, context: context)&#xA;    } else {&#xA;        db.resultNull(context: context)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you can then use that function in your SQL (in this case, matching both &#34;Jose&#34; and &#34;José&#34;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM employees WHERE RemoveDiacritics(first_name) LIKE &#39;jose&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note, the method &lt;code&gt;makeFunctionNamed:maximumArguments:withBlock:&lt;/code&gt; has been renamed to &lt;code&gt;makeFunctionNamed:arguments:block:&lt;/code&gt;, to more accurately reflect the functional intent of the second parameter.&lt;/p&gt; &#xA;&lt;h3&gt;API Changes&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the &lt;code&gt;makeFunctionNamed&lt;/code&gt; noted above, there are a few other API changes. Specifically,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To become consistent with the rest of the API, the methods &lt;code&gt;objectForColumnName&lt;/code&gt; and &lt;code&gt;UTF8StringForColumnName&lt;/code&gt; have been renamed to &lt;code&gt;objectForColumn&lt;/code&gt; and &lt;code&gt;UTF8StringForColumn&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note, the &lt;code&gt;objectForColumn&lt;/code&gt; (and the associted subscript operator) now returns &lt;code&gt;nil&lt;/code&gt; if an invalid column name/index is passed to it. It used to return &lt;code&gt;NSNull&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To avoid confusion with &lt;code&gt;FMDatabaseQueue&lt;/code&gt; method &lt;code&gt;inTransaction&lt;/code&gt;, which performs transactions, the &lt;code&gt;FMDatabase&lt;/code&gt; method to determine whether you are in a transaction or not, &lt;code&gt;inTransaction&lt;/code&gt;, has been replaced with a read-only property, &lt;code&gt;isInTransaction&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Several functions have been converted to properties, namely, &lt;code&gt;databasePath&lt;/code&gt;, &lt;code&gt;maxBusyRetryTimeInterval&lt;/code&gt;, &lt;code&gt;shouldCacheStatements&lt;/code&gt;, &lt;code&gt;sqliteHandle&lt;/code&gt;, &lt;code&gt;hasOpenResultSets&lt;/code&gt;, &lt;code&gt;lastInsertRowId&lt;/code&gt;, &lt;code&gt;changes&lt;/code&gt;, &lt;code&gt;goodConnection&lt;/code&gt;, &lt;code&gt;columnCount&lt;/code&gt;, &lt;code&gt;resultDictionary&lt;/code&gt;, &lt;code&gt;applicationID&lt;/code&gt;, &lt;code&gt;applicationIDString&lt;/code&gt;, &lt;code&gt;userVersion&lt;/code&gt;, &lt;code&gt;countOfCheckedInDatabases&lt;/code&gt;, &lt;code&gt;countOfCheckedOutDatabases&lt;/code&gt;, and &lt;code&gt;countOfOpenDatabases&lt;/code&gt;. For Objective-C users, this has little material impact, but for Swift users, it results in a slightly more natural interface. Note: For Objective-C developers, previously versions of FMDB exposed many ivars (but we hope you weren&#39;t using them directly, anyway!), but the implmentation details for these are no longer exposed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;URL Methods&lt;/h3&gt; &#xA;&lt;p&gt;In keeping with Apple&#39;s shift from paths to URLs, there are now &lt;code&gt;NSURL&lt;/code&gt; renditions of the various &lt;code&gt;init&lt;/code&gt; methods, previously only accepting paths.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;There are three main classes in FMDB:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;FMDatabase&lt;/code&gt; - Represents a single SQLite database. Used for executing SQL statements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FMResultSet&lt;/code&gt; - Represents the results of executing a query on an &lt;code&gt;FMDatabase&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FMDatabaseQueue&lt;/code&gt; - If you&#39;re wanting to perform queries and updates on multiple threads, you&#39;ll want to use this class. It&#39;s described in the &#34;Thread Safety&#34; section below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Database Creation&lt;/h3&gt; &#xA;&lt;p&gt;An &lt;code&gt;FMDatabase&lt;/code&gt; is created with a path to a SQLite database file. This path can be one of these three:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A file system path. The file does not have to exist on disk. If it does not exist, it is created for you.&lt;/li&gt; &#xA; &lt;li&gt;An empty string (&lt;code&gt;@&#34;&#34;&lt;/code&gt;). An empty database is created at a temporary location. This database is deleted when the &lt;code&gt;FMDatabase&lt;/code&gt; connection is closed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NULL&lt;/code&gt;. An in-memory database is created. This database will be destroyed when the &lt;code&gt;FMDatabase&lt;/code&gt; connection is closed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;(For more information on temporary and in-memory databases, read the sqlite documentation on the subject: &lt;a href=&#34;https://www.sqlite.org/inmemorydb.html&#34;&gt;https://www.sqlite.org/inmemorydb.html&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *path = [NSTemporaryDirectory() stringByAppendingPathComponent:@&#34;tmp.db&#34;];&#xA;FMDatabase *db = [FMDatabase databaseWithPath:path];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Opening&lt;/h3&gt; &#xA;&lt;p&gt;Before you can interact with the database, it must be opened. Opening fails if there are insufficient resources or permissions to open and/or create the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;if (![db open]) {&#xA;    // [db release];   // uncomment this line in manual referencing code; in ARC, this is not necessary/permitted&#xA;    db = nil;&#xA;    return;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Executing Updates&lt;/h3&gt; &#xA;&lt;p&gt;Any sort of SQL statement which is not a &lt;code&gt;SELECT&lt;/code&gt; statement qualifies as an update. This includes &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;ALTER&lt;/code&gt;, &lt;code&gt;COMMIT&lt;/code&gt;, &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;DETACH&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;DROP&lt;/code&gt;, &lt;code&gt;END&lt;/code&gt;, &lt;code&gt;EXPLAIN&lt;/code&gt;, &lt;code&gt;VACUUM&lt;/code&gt;, and &lt;code&gt;REPLACE&lt;/code&gt; statements (plus many more). Basically, if your SQL statement does not begin with &lt;code&gt;SELECT&lt;/code&gt;, it is an update statement.&lt;/p&gt; &#xA;&lt;p&gt;Executing updates returns a single value, a &lt;code&gt;BOOL&lt;/code&gt;. A return value of &lt;code&gt;YES&lt;/code&gt; means the update was successfully executed, and a return value of &lt;code&gt;NO&lt;/code&gt; means that some error was encountered. You may invoke the &lt;code&gt;-lastErrorMessage&lt;/code&gt; and &lt;code&gt;-lastErrorCode&lt;/code&gt; methods to retrieve more information.&lt;/p&gt; &#xA;&lt;h3&gt;Executing Queries&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;SELECT&lt;/code&gt; statement is a query and is executed via one of the &lt;code&gt;-executeQuery...&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;p&gt;Executing queries returns an &lt;code&gt;FMResultSet&lt;/code&gt; object if successful, and &lt;code&gt;nil&lt;/code&gt; upon failure. You should use the &lt;code&gt;-lastErrorMessage&lt;/code&gt; and &lt;code&gt;-lastErrorCode&lt;/code&gt; methods to determine why a query failed.&lt;/p&gt; &#xA;&lt;p&gt;In order to iterate through the results of your query, you use a &lt;code&gt;while()&lt;/code&gt; loop. You also need to &#34;step&#34; from one record to the other. With FMDB, the easiest way to do that is like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;FMResultSet *s = [db executeQuery:@&#34;SELECT * FROM myTable&#34;];&#xA;while ([s next]) {&#xA;    //retrieve values for each record&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You must always invoke &lt;code&gt;-[FMResultSet next]&lt;/code&gt; before attempting to access the values returned in a query, even if you&#39;re only expecting one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;FMResultSet *s = [db executeQuery:@&#34;SELECT COUNT(*) FROM myTable&#34;];&#xA;if ([s next]) {&#xA;    int totalCount = [s intForColumnIndex:0];&#xA;}&#xA;[s close];  // Call the -close method on the FMResultSet if you cannot confirm whether the result set is exhausted.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;FMResultSet&lt;/code&gt; has many methods to retrieve data in an appropriate format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;intForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;longForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;longLongIntForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;boolForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;doubleForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stringForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dateForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dataForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dataNoCopyForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UTF8StringForColumn:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;objectForColumn:&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each of these methods also has a &lt;code&gt;{type}ForColumnIndex:&lt;/code&gt; variant that is used to retrieve the data based on the position of the column in the results, as opposed to the column&#39;s name.&lt;/p&gt; &#xA;&lt;p&gt;Typically, there&#39;s no need to &lt;code&gt;-close&lt;/code&gt; an &lt;code&gt;FMResultSet&lt;/code&gt; yourself, since that happens when either the result set is exhausted. However, if you only pull out a single request or any other number of requests which don&#39;t exhaust the result set, you will need to call the &lt;code&gt;-close&lt;/code&gt; method on the &lt;code&gt;FMResultSet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Closing&lt;/h3&gt; &#xA;&lt;p&gt;When you have finished executing queries and updates on the database, you should &lt;code&gt;-close&lt;/code&gt; the &lt;code&gt;FMDatabase&lt;/code&gt; connection so that SQLite will relinquish any resources it has acquired during the course of its operation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[db close];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Transactions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;FMDatabase&lt;/code&gt; can begin and commit a transaction by invoking one of the appropriate methods or executing a begin/end transaction statement.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Statements and Batch Stuff&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;FMDatabase&lt;/code&gt;&#39;s executeStatements:withResultBlock: to do multiple statements in a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSString *sql = @&#34;create table bulktest1 (id integer primary key autoincrement, x text);&#34;&#xA;                 &#34;create table bulktest2 (id integer primary key autoincrement, y text);&#34;&#xA;                 &#34;create table bulktest3 (id integer primary key autoincrement, z text);&#34;&#xA;                 &#34;insert into bulktest1 (x) values (&#39;XXX&#39;);&#34;&#xA;                 &#34;insert into bulktest2 (y) values (&#39;YYY&#39;);&#34;&#xA;                 &#34;insert into bulktest3 (z) values (&#39;ZZZ&#39;);&#34;;&#xA;&#xA;success = [db executeStatements:sql];&#xA;&#xA;sql = @&#34;select count(*) as count from bulktest1;&#34;&#xA;       &#34;select count(*) as count from bulktest2;&#34;&#xA;       &#34;select count(*) as count from bulktest3;&#34;;&#xA;&#xA;success = [self.db executeStatements:sql withResultBlock:^int(NSDictionary *dictionary) {&#xA;    NSInteger count = [dictionary[@&#34;count&#34;] integerValue];&#xA;    XCTAssertEqual(count, 1, @&#34;expected one record for dictionary %@&#34;, dictionary);&#xA;    return 0;&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data Sanitization&lt;/h3&gt; &#xA;&lt;p&gt;When providing a SQL statement to FMDB, you should not attempt to &#34;sanitize&#34; any values before insertion. Instead, you should use the standard SQLite binding syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO myTable VALUES (?, ?, ?, ?)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; character is recognized by SQLite as a placeholder for a value to be inserted. The execution methods all accept a variable number of arguments (or a representation of those arguments, such as an &lt;code&gt;NSArray&lt;/code&gt;, &lt;code&gt;NSDictionary&lt;/code&gt;, or a &lt;code&gt;va_list&lt;/code&gt;), which are properly escaped for you.&lt;/p&gt; &#xA;&lt;p&gt;And, to use that SQL with the &lt;code&gt;?&lt;/code&gt; placeholders from Objective-C:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSInteger identifier = 42;&#xA;NSString *name = @&#34;Liam O&#39;Flaherty (\&#34;the famous Irish author\&#34;)&#34;;&#xA;NSDate *date = [NSDate date];&#xA;NSString *comment = nil;&#xA;&#xA;BOOL success = [db executeUpdate:@&#34;INSERT INTO authors (identifier, name, date, comment) VALUES (?, ?, ?, ?)&#34;, @(identifier), name, date, comment ?: [NSNull null]];&#xA;if (!success) {&#xA;    NSLog(@&#34;error = %@&#34;, [db lastErrorMessage]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Fundamental data types, like the &lt;code&gt;NSInteger&lt;/code&gt; variable &lt;code&gt;identifier&lt;/code&gt;, should be as a &lt;code&gt;NSNumber&lt;/code&gt; objects, achieved by using the &lt;code&gt;@&lt;/code&gt; syntax, shown above. Or you can use the &lt;code&gt;[NSNumber numberWithInt:identifier]&lt;/code&gt; syntax, too.&lt;/p&gt; &#xA; &lt;p&gt;Likewise, SQL &lt;code&gt;NULL&lt;/code&gt; values should be inserted as &lt;code&gt;[NSNull null]&lt;/code&gt;. For example, in the case of &lt;code&gt;comment&lt;/code&gt; which might be &lt;code&gt;nil&lt;/code&gt; (and is in this example), you can use the &lt;code&gt;comment ?: [NSNull null]&lt;/code&gt; syntax, which will insert the string if &lt;code&gt;comment&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, but will insert &lt;code&gt;[NSNull null]&lt;/code&gt; if it is &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In Swift, you would use &lt;code&gt;executeUpdate(values:)&lt;/code&gt;, which not only is a concise Swift syntax, but also &lt;code&gt;throws&lt;/code&gt; errors for proper error handling:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;do {&#xA;    let identifier = 42&#xA;    let name = &#34;Liam O&#39;Flaherty (\&#34;the famous Irish author\&#34;)&#34;&#xA;    let date = Date()&#xA;    let comment: String? = nil&#xA;&#xA;    try db.executeUpdate(&#34;INSERT INTO authors (identifier, name, date, comment) VALUES (?, ?, ?, ?)&#34;, values: [identifier, name, date, comment ?? NSNull()])&#xA;} catch {&#xA;    print(&#34;error = \(error)&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Swift, you don&#39;t have to wrap fundamental numeric types like you do in Objective-C. But if you are going to insert an optional string, you would probably use the &lt;code&gt;comment ?? NSNull()&lt;/code&gt; syntax (i.e., if it is &lt;code&gt;nil&lt;/code&gt;, use &lt;code&gt;NSNull&lt;/code&gt;, otherwise use the string).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Alternatively, you may use named parameters syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO authors (identifier, name, date, comment) VALUES (:identifier, :name, :date, :comment)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parameters &lt;em&gt;must&lt;/em&gt; start with a colon. SQLite itself supports other characters, but internally the dictionary keys are prefixed with a colon, do &lt;strong&gt;not&lt;/strong&gt; include the colon in your dictionary keys.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSDictionary *arguments = @{@&#34;identifier&#34;: @(identifier), @&#34;name&#34;: name, @&#34;date&#34;: date, @&#34;comment&#34;: comment ?: [NSNull null]};&#xA;BOOL success = [db executeUpdate:@&#34;INSERT INTO authors (identifier, name, date, comment) VALUES (:identifier, :name, :date, :comment)&#34; withParameterDictionary:arguments];&#xA;if (!success) {&#xA;    NSLog(@&#34;error = %@&#34;, [db lastErrorMessage]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The key point is that one should not use &lt;code&gt;NSString&lt;/code&gt; method &lt;code&gt;stringWithFormat&lt;/code&gt; to manually insert values into the SQL statement, itself. Nor should one Swift string interpolation to insert values into the SQL. Use &lt;code&gt;?&lt;/code&gt; placeholders for values to be inserted into the database (or used in &lt;code&gt;WHERE&lt;/code&gt; clauses in &lt;code&gt;SELECT&lt;/code&gt; statements).&lt;/p&gt; &#xA;&lt;h2 id=&#34;threads&#34;&gt;Using FMDatabaseQueue and Thread Safety.&lt;/h2&gt; &#xA;&lt;p&gt;Using a single instance of &lt;code&gt;FMDatabase&lt;/code&gt; from multiple threads at once is a bad idea. It has always been OK to make a &lt;code&gt;FMDatabase&lt;/code&gt; object &lt;em&gt;per thread&lt;/em&gt;. Just don&#39;t share a single instance across threads, and definitely not across multiple threads at the same time. Bad things will eventually happen and you&#39;ll eventually get something to crash, or maybe get an exception, or maybe meteorites will fall out of the sky and hit your Mac Pro. &lt;em&gt;This would suck&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;So don&#39;t instantiate a single &lt;code&gt;FMDatabase&lt;/code&gt; object and use it across multiple threads.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instead, use &lt;code&gt;FMDatabaseQueue&lt;/code&gt;. Instantiate a single &lt;code&gt;FMDatabaseQueue&lt;/code&gt; and use it across multiple threads. The &lt;code&gt;FMDatabaseQueue&lt;/code&gt; object will synchronize and coordinate access across the multiple threads. Here&#39;s how to use it:&lt;/p&gt; &#xA;&lt;p&gt;First, make your queue.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;FMDatabaseQueue *queue = [FMDatabaseQueue databaseQueueWithPath:aPath];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[queue inDatabase:^(FMDatabase *db) {&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @1];&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @2];&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @3];&#xA;&#xA;    FMResultSet *rs = [db executeQuery:@&#34;select * from foo&#34;];&#xA;    while ([rs next]) {&#xA;        …&#xA;    }&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An easy way to wrap things up in a transaction can be done like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[queue inTransaction:^(FMDatabase *db, BOOL *rollback) {&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @1];&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @2];&#xA;    [db executeUpdate:@&#34;INSERT INTO myTable VALUES (?)&#34;, @3];&#xA;&#xA;    if (whoopsSomethingWrongHappened) {&#xA;        *rollback = YES;&#xA;        return;&#xA;    }&#xA;&#xA;    // etc ...&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Swift equivalent would be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;queue.inTransaction { db, rollback in&#xA;    do {&#xA;        try db.executeUpdate(&#34;INSERT INTO myTable VALUES (?)&#34;, values: [1])&#xA;        try db.executeUpdate(&#34;INSERT INTO myTable VALUES (?)&#34;, values: [2])&#xA;        try db.executeUpdate(&#34;INSERT INTO myTable VALUES (?)&#34;, values: [3])&#xA;&#xA;        if whoopsSomethingWrongHappened {&#xA;            rollback.pointee = true&#xA;            return&#xA;        }&#xA;&#xA;        // etc ...&#xA;    } catch {&#xA;        rollback.pointee = true&#xA;        print(error)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Note, as of Swift 3, use &lt;code&gt;pointee&lt;/code&gt;. But in Swift 2.3, use &lt;code&gt;memory&lt;/code&gt; rather than &lt;code&gt;pointee&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FMDatabaseQueue&lt;/code&gt; will run the blocks on a serialized queue (hence the name of the class). So if you call &lt;code&gt;FMDatabaseQueue&lt;/code&gt;&#39;s methods from multiple threads at the same time, they will be executed in the order they are received. This way queries and updates won&#39;t step on each other&#39;s toes, and every one is happy.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The calls to &lt;code&gt;FMDatabaseQueue&lt;/code&gt;&#39;s methods are blocking. So even though you are passing along blocks, they will &lt;strong&gt;not&lt;/strong&gt; be run on another thread.&lt;/p&gt; &#xA;&lt;h2&gt;Making custom sqlite functions, based on blocks.&lt;/h2&gt; &#xA;&lt;p&gt;You can do this! For an example, look for &lt;code&gt;-makeFunctionNamed:&lt;/code&gt; in main.m&lt;/p&gt; &#xA;&lt;h2&gt;Swift&lt;/h2&gt; &#xA;&lt;p&gt;You can use FMDB in Swift projects too.&lt;/p&gt; &#xA;&lt;p&gt;To do this, you must:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy the relevant &lt;code&gt;.m&lt;/code&gt; and &lt;code&gt;.h&lt;/code&gt; files from the FMDB &lt;code&gt;src&lt;/code&gt; folder into your project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can copy all of them (which is easiest), or only the ones you need. Likely you will need &lt;a href=&#34;https://ccgus.github.io/fmdb/html/Classes/FMDatabase.html&#34;&gt;&lt;code&gt;FMDatabase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://ccgus.github.io/fmdb/html/Classes/FMResultSet.html&#34;&gt;&lt;code&gt;FMResultSet&lt;/code&gt;&lt;/a&gt; at a minimum. &lt;a href=&#34;https://ccgus.github.io/fmdb/html/Categories/FMDatabase+FMDatabaseAdditions.html&#34;&gt;&lt;code&gt;FMDatabaseAdditions&lt;/code&gt;&lt;/a&gt; provides some very useful convenience methods, so you will likely want that, too. If you are doing multithreaded access to a database, &lt;a href=&#34;https://ccgus.github.io/fmdb/html/Classes/FMDatabaseQueue.html&#34;&gt;&lt;code&gt;FMDatabaseQueue&lt;/code&gt;&lt;/a&gt; is quite useful, too. If you choose to not copy all of the files from the &lt;code&gt;src&lt;/code&gt; directory, though, you may want to update &lt;code&gt;FMDB.h&lt;/code&gt; to only reference the files that you included in your project.&lt;/p&gt; &#xA;&lt;p&gt;Note, if you&#39;re copying all of the files from the &lt;code&gt;src&lt;/code&gt; folder into to your project (which is recommended), you may want to drag the individual files into your project, not the folder, itself, because if you drag the folder, you won&#39;t be prompted to add the bridging header (see next point).&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;If prompted to create a &#34;bridging header&#34;, you should do so. If not prompted and if you don&#39;t already have a bridging header, add one.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information on bridging headers, see &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html#//apple_ref/doc/uid/TP40014216-CH10-XID_76&#34;&gt;Swift and Objective-C in the Same Project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;In your bridging header, add a line that says:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &#34;FMDB.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the variations of &lt;code&gt;executeQuery&lt;/code&gt; and &lt;code&gt;executeUpdate&lt;/code&gt; with the &lt;code&gt;sql&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; parameters with &lt;code&gt;try&lt;/code&gt; pattern, as shown below. These renditions of &lt;code&gt;executeQuery&lt;/code&gt; and &lt;code&gt;executeUpdate&lt;/code&gt; both &lt;code&gt;throw&lt;/code&gt; errors in true Swift fashion.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you do the above, you can then write Swift code that uses &lt;code&gt;FMDatabase&lt;/code&gt;. For example, as of Swift 3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let fileURL = try! FileManager.default&#xA;    .url(for: .applicationSupportDirectory, in: .userDomainMask, appropriateFor: nil, create: true)&#xA;    .appendingPathComponent(&#34;test.sqlite&#34;)&#xA;&#xA;let database = FMDatabase(url: fileURL)&#xA;&#xA;guard database.open() else {&#xA;    print(&#34;Unable to open database&#34;)&#xA;    return&#xA;}&#xA;&#xA;do {&#xA;    try database.executeUpdate(&#34;create table test(x text, y text, z text)&#34;, values: nil)&#xA;    try database.executeUpdate(&#34;insert into test (x, y, z) values (?, ?, ?)&#34;, values: [&#34;a&#34;, &#34;b&#34;, &#34;c&#34;])&#xA;    try database.executeUpdate(&#34;insert into test (x, y, z) values (?, ?, ?)&#34;, values: [&#34;e&#34;, &#34;f&#34;, &#34;g&#34;])&#xA;&#xA;    let rs = try database.executeQuery(&#34;select x, y, z from test&#34;, values: nil)&#xA;    while rs.next() {&#xA;        if let x = rs.string(forColumn: &#34;x&#34;), let y = rs.string(forColumn: &#34;y&#34;), let z = rs.string(forColumn: &#34;z&#34;) {&#xA;            print(&#34;x = \(x); y = \(y); z = \(z)&#34;)&#xA;        }&#xA;    }&#xA;} catch {&#xA;    print(&#34;failed: \(error.localizedDescription)&#34;)&#xA;}&#xA;&#xA;database.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;The history and changes are availbe on its &lt;a href=&#34;https://github.com/ccgus/fmdb&#34;&gt;GitHub page&lt;/a&gt; and are summarized in the &#34;CHANGES_AND_TODO_LIST.txt&#34; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;The contributors to FMDB are contained in the &#34;Contributors.txt&#34; file.&lt;/p&gt; &#xA;&lt;h2&gt;Additional projects using FMDB, which might be interesting to the discerning developer.&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FMDBMigrationManager, A SQLite schema migration management system for FMDB: &lt;a href=&#34;https://github.com/layerhq/FMDBMigrationManager&#34;&gt;https://github.com/layerhq/FMDBMigrationManager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FCModel, An alternative to Core Data for people who like having direct SQL access: &lt;a href=&#34;https://github.com/marcoarment/FCModel&#34;&gt;https://github.com/marcoarment/FCModel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick notes on FMDB&#39;s coding style&lt;/h2&gt; &#xA;&lt;p&gt;Spaces, not tabs. Square brackets, not dot notation. Look at what FMDB already does with curly brackets and such, and stick to that style.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;Reduce your bug down to the smallest amount of code possible. You want to make it super easy for the developers to see and reproduce your bug. If it helps, pretend that the person who can fix your bug is active on shipping 3 major products, works on a handful of open source projects, has a newborn baby, and is generally very very busy.&lt;/p&gt; &#xA;&lt;p&gt;And we&#39;ve even added a template function to main.m (FMDBReportABugFunction) in the FMDB distribution to help you out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open up fmdb project in Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Open up main.m and modify the FMDBReportABugFunction to reproduce your bug. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Setup your table(s) in the code.&lt;/li&gt; &#xA;   &lt;li&gt;Make your query or update(s).&lt;/li&gt; &#xA;   &lt;li&gt;Add some assertions which demonstrate the bug.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then you can bring it up on the FMDB mailing list by showing your nice and compact FMDBReportABugFunction, or you can report the bug via the github FMDB bug reporter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Optional:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Figure out where the bug is, fix it, and send a patch in or bring that up on the mailing list. Make sure all the other tests run after your modifications.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The support channels for FMDB are the mailing list (see above), filing a bug here, or maybe on Stack Overflow. So that is to say, support is provided by the community and on a voluntary basis.&lt;/p&gt; &#xA;&lt;p&gt;FMDB development is overseen by Gus Mueller of Flying Meat. If FMDB been helpful to you, consider purchasing an app from FM or telling all your friends about it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The license for FMDB is contained in the &#34;License.txt&#34; file.&lt;/p&gt; &#xA;&lt;p&gt;If you happen to come across either Gus Mueller or Rob Ryan in a bar, you might consider purchasing a drink of their choosing if FMDB has been useful to you.&lt;/p&gt; &#xA;&lt;p&gt;(The drink is for them of course, shame on you for trying to keep it.)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Instagram/IGListKit</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/Instagram/IGListKit</id>
    <link href="https://github.com/Instagram/IGListKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A data-driven UICollectionView framework for building fast and flexible lists.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Instagram/IGListKit/master/Resources/logo-animation.gif&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://travis-ci.org/Instagram/IGListKit&#34;&gt; &lt;img src=&#34;https://travis-ci.org/Instagram/IGListKit.svg?branch=master&amp;amp;style=flat&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/Instagram/IGListKit?branch=master&#34;&gt; &lt;img src=&#34;https://coveralls.io/repos/github/Instagram/IGListKit/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/IGListKit&#34;&gt; &lt;img src=&#34;https://img.shields.io/cocoapods/v/IGListKit.svg?style=flat&#34; alt=&#34;Pods Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://instagram.github.io/IGListKit/&#34;&gt; &lt;img src=&#34;https://img.shields.io/cocoapods/p/IGListKit.svg?style=flat&#34; alt=&#34;Platforms&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A data-driven &lt;code&gt;UICollectionView&lt;/code&gt; framework for building fast and flexible lists.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Main Features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🙅&lt;/td&gt; &#xA;   &lt;td&gt;Never call &lt;code&gt;performBatchUpdates(_:, completion:)&lt;/code&gt; or &lt;code&gt;reloadData()&lt;/code&gt; again&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🏠&lt;/td&gt; &#xA;   &lt;td&gt;Better architecture with reusable cells and components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔠&lt;/td&gt; &#xA;   &lt;td&gt;Create collections with multiple data types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔑&lt;/td&gt; &#xA;   &lt;td&gt;Decoupled diffing algorithm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Fully unit tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔍&lt;/td&gt; &#xA;   &lt;td&gt;Customize your diffing behavior for your models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📱&lt;/td&gt; &#xA;   &lt;td&gt;Simply &lt;code&gt;UICollectionView&lt;/code&gt; at its core&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚀&lt;/td&gt; &#xA;   &lt;td&gt;Extendable API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🐦&lt;/td&gt; &#xA;   &lt;td&gt;Written in Objective-C with full Swift interop support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;IGListKit&lt;/code&gt; is built and maintained with ❤️ by &lt;a href=&#34;https://engineering.instagram.com/&#34;&gt;Instagram engineering&lt;/a&gt;. We use the open source version &lt;code&gt;master&lt;/code&gt; branch in the Instagram app.&lt;/p&gt; &#xA;&lt;h2&gt;Multilingual translation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Instagram/IGListKit/main/README.zh.md&#34;&gt;Chinese README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 9.0+&lt;/li&gt; &#xA; &lt;li&gt;iOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;tvOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.11+ &lt;em&gt;(diffing algorithm components only)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interoperability with Swift 3.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;The preferred installation method is with &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. Add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;IGListKit&#39;, &#39;~&amp;gt; 4.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;Instagram/IGListKit&#34; ~&amp;gt; 4.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;To integrate using Xcode:&#xA;&#xA;File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency&#xA;&#xA;Enter package URL: https://github.com/Instagram/IGListKit, and select the latest release.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For advanced usage, see our &lt;a href=&#34;https://instagram.github.io/IGListKit/installation.html&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/Instagram/IGListKit.git&#xA;$ cd IGListKit/&#xA;$ ./scripts/setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://instagram.github.io/IGListKit/getting-started.html&#34;&gt;Getting Started guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ray Wenderlich&#39;s &lt;a href=&#34;https://www.raywenderlich.com/147162/iglistkit-tutorial-better-uicollectionviews&#34;&gt;IGListKit Tutorial: Better UICollectionViews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://github.com/Instagram/IGListKit/tree/master/Examples&#34;&gt;example projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ryan Nystrom&#39;s &lt;a href=&#34;https://academy.realm.io/posts/tryswift-ryan-nystrom-refactoring-at-scale-lessons-learned-rewriting-instagram-feed/&#34;&gt;talk at try! Swift NYC&lt;/a&gt;(Note: this talk was for an earlier version. Some APIs have changed.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/cocoaacademymag/iglistkit-migrating-an-uitableview-to-iglistkitcollectionview-65a30cf9bac9&#34;&gt;Migrating an UITableView to IGListCollectionView&lt;/a&gt;, by Rodrigo Cavalcante&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://overflow.buffer.com/2017/04/10/keeping-data-fresh-buffer-ios-asyncdisplaykit-iglistkit-pusher/&#34;&gt;Keeping data fresh in Buffer for iOS with AsyncDisplayKit, IGListKit &amp;amp; Pusher&lt;/a&gt;, Andy Yates, Buffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find &lt;a href=&#34;https://instagram.github.io/IGListKit&#34;&gt;the docs here&lt;/a&gt;. Documentation is generated with &lt;a href=&#34;https://github.com/realm/jazzy&#34;&gt;jazzy&lt;/a&gt; and hosted on &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub-Pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To regenerate docs, run &lt;code&gt;./scripts/build_docs.sh&lt;/code&gt; from the root directory in the repo.&lt;/p&gt; &#xA;&lt;h2&gt;Vision&lt;/h2&gt; &#xA;&lt;p&gt;For the long-term goals and &#34;vision&#34; of &lt;code&gt;IGListKit&lt;/code&gt;, please read our &lt;a href=&#34;https://github.com/Instagram/IGListKit/raw/master/Guides/VISION.md&#34;&gt;Vision&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/Instagram/IGListKit/raw/master/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for how to help. At Instagram, we sync the open source version of &lt;code&gt;IGListKit&lt;/code&gt; daily, so we&#39;re always testing the latest changes. But that requires all changes be thoroughly tested and follow our style guide.&lt;/p&gt; &#xA;&lt;p&gt;We have a set of &lt;a href=&#34;https://github.com/Instagram/IGListKit/issues?q=is%3Aissue+is%3Aopen+label%3Astarter-task&#34;&gt;starter tasks&lt;/a&gt; that are great for beginners to jump in on and start contributing.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;IGListKit&lt;/code&gt; is &lt;a href=&#34;https://raw.githubusercontent.com/Instagram/IGListKit/main/LICENSE.md&#34;&gt;MIT-licensed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The files in the &lt;code&gt;/Examples/&lt;/code&gt; directory are licensed under a separate license as specified in each file. Documentation is licensed &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC-BY-4.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OneSignal/OneSignal-iOS-SDK</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/OneSignal/OneSignal-iOS-SDK</id>
    <link href="https://github.com/OneSignal/OneSignal-iOS-SDK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneSignal is a free push notification service for mobile apps. This plugin makes it easy to integrate your native iOS app with OneSignal. https://onesignal.com&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://media.onesignal.com/cms/Website%20Layout/logo-red.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;OneSignal iOS SDK&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/OneSignal&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/OneSignal.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?sanitize=true&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goo.gl/E01ufX&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-Compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;SwiftPM Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/OneSignal/OneSignal-iOS-SDK&#34;&gt;&lt;img src=&#34;https://travis-ci.org/OneSignal/OneSignal-iOS-SDK.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.onesignal.com&#34;&gt;OneSignal&lt;/a&gt; is a free email, sms, push notification, and in-app message service for mobile apps. This plugin makes it easy to integrate your native iOS app with OneSignal.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://app.onesignal.com/images/ios_10_notification_image.gif&#34; width=&#34;400&#34; alt=&#34;iOS Notification&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;See OneSignal&#39;s &lt;a href=&#34;https://documentation.onesignal.com/docs/ios-sdk-setup&#34;&gt;iOS Native SDK Setup Guide&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;p&gt;See OneSignal&#39;s &lt;a href=&#34;https://documentation.onesignal.com/docs/ios-native-sdk&#34;&gt;iOS Native SDK API&lt;/a&gt; page for a list of all available methods.&lt;/p&gt; &#xA;&lt;h4&gt;Change Log&lt;/h4&gt; &#xA;&lt;p&gt;See this repository&#39;s &lt;a href=&#34;https://github.com/OneSignal/OneSignal-iOS-SDK/releases&#34;&gt;release tags&lt;/a&gt; for a complete change log of every released version.&lt;/p&gt; &#xA;&lt;h4&gt;Support&lt;/h4&gt; &#xA;&lt;p&gt;Please visit this repository&#39;s &lt;a href=&#34;https://github.com/OneSignal/OneSignal-iOS-SDK/issues&#34;&gt;Github issue tracker&lt;/a&gt; for feature requests and bug reports related specifically to the SDK. For account issues and support please contact OneSignal support from the &lt;a href=&#34;https://onesignal.com&#34;&gt;OneSignal.com&lt;/a&gt; dashboard.&lt;/p&gt; &#xA;&lt;h4&gt;Supports:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift and Objective-C Projects&lt;/li&gt; &#xA; &lt;li&gt;Supports iOS 9 to iOS 15&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>amplitude/Amplitude-iOS</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/amplitude/Amplitude-iOS</id>
    <link href="https://github.com/amplitude/Amplitude-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Native iOS/tvOS/macOS SDK&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://amplitude.com&#34; target=&#34;_blank&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://static.amplitude.com/lightning/46c85bfd91905de8047f1ee65c7c93d6fa9ee6ea/static/media/amplitude-logo-with-text.4fb9e463.svg?sanitize=true&#34; width=&#34;280&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/Amplitude&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Amplitude&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/amplitude/Amplitude-iOS/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-8-orange.svg?style=flat&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Official Amplitude iOS SDK&lt;/h1&gt; &#xA;&lt;p&gt;iOS/tvOS/macOS SDK for tracking events and revenue to &lt;a href=&#34;https://www.amplitude.com&#34;&gt;Amplitude&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Amplitude and Ampli SDK&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.data.amplitude.com/ampli-sdk-overview/&#34;&gt;Ampli SDK&lt;/a&gt; is autogenerated library based on your pre-defined &lt;a href=&#34;https://developers.data.amplitude.com/what-is-a-tracking-plan&#34;&gt;tracking plan&lt;/a&gt;. The Ampli SDK, is a lightweight wrapper over the Amplitude SDK that provides type-safety, supports linting, and enables features like input validation. The code replicates the spec in the Tracking Plan and enforces its rules and requirements. This repository is about &lt;strong&gt;Amplitude SDK&lt;/strong&gt;. To learn more about Ampli SDK, please refer to the &lt;a href=&#34;https://developers.data.amplitude.com/ios-ampli&#34;&gt;Ampli iOS&lt;/a&gt; and &lt;a href=&#34;https://github.com/amplitude/ampli-examples&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Quick Start&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For using the SDK, please visit our &lt;span&gt;💯&lt;/span&gt;&lt;a href=&#34;https://developers.amplitude.com/docs/ios&#34;&gt;Developer Center&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For developing the SDK, please visit our &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo Applications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/amplitude/iOS-Demo&#34;&gt;demo application&lt;/a&gt; showing the integration of our SDK using Cocoapods.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/amplitude/iOS-Demo-Carthage&#34;&gt;demo application&lt;/a&gt; showing the integration of our SDK using Carthage.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/amplitude/Segment-iOS-Demo&#34;&gt;demo application&lt;/a&gt; showing the integration of our SDK via &lt;a href=&#34;https://segment.com/&#34;&gt;Segment&#39;s&lt;/a&gt; iOS SDK.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/amplitude/iOS-Extension-Demo&#34;&gt;demo application&lt;/a&gt; showing an integration in an iOS extension.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/amplitude/GTM-iOS-Demo&#34;&gt;demo application&lt;/a&gt; demonstrating a potential integration with Google Tag Manager.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;Cocoapods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Dependencies via Carthage &lt;pre&gt;&lt;code&gt;carthage update --use-xcframeworks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Test Dependencies via CocoaPods &lt;pre&gt;&lt;code&gt;pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/haoliu-amp&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/57638692?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hao Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=haoliu-amp&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=haoliu-amp&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.danieljih.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/4776584?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Jih&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=djih&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=djih&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/curtisliu&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/3248421?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Curtis Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=curtisliu&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=curtisliu&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/amplitude/Amplitude-iOS/main/#ideas-curtisliu&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.spenserskates.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/605873?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Spenser Skates&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=sskates&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=sskates&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/amplitude/Amplitude-iOS/main/#ideas-sskates&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://emptybox.org&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/238374?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krishna Rajendran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=blazzy&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sputh&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/7856822?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;samantha puth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=sputh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mayur1407&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/3079325?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mayur&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=mayur1407&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.robphillips.me&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/30269720?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rob Phillips&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/commits?author=rob-keepsafe&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://github.com/amplitude/Amplitude-iOS/raw/main/CHANGELOG.md&#34;&gt;here&lt;/a&gt; to view the iOS SDK Changelog.&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problems or issues over our SDK, feel free to create a github issue or submit a request on &lt;a href=&#34;https://help.amplitude.com/hc/en-us/requests/new&#34;&gt;Amplitude Help&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>utmapp/UTM</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/utmapp/UTM</id>
    <link href="https://github.com/utmapp/UTM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Virtual machines for iOS and macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UTM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/utmapp/UTM/actions?query=event%3Arelease+workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/utmapp/UTM/workflows/Build/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is possible to invent a single machine which can be used to compute any computable sequence.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;-- &lt;cite&gt;Alan Turing, 1936&lt;/cite&gt;&lt;/p&gt; &#xA;&lt;p&gt;UTM is a full featured system emulator and virtual machine host for iOS and macOS. It is based off of QEMU. In short, it allows you to run Windows, Linux, and more on your Mac, iPhone, and iPad. More information at &lt;a href=&#34;https://getutm.app/&#34;&gt;https://getutm.app/&lt;/a&gt; and &lt;a href=&#34;https://mac.getutm.app/&#34;&gt;https://mac.getutm.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/utmapp/UTM/master/screen.png&#34; alt=&#34;Screenshot of UTM running on iPhone&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full system emulation (MMU, devices, etc) using QEMU&lt;/li&gt; &#xA; &lt;li&gt;30+ processors supported including x86_64, ARM64, and RISC-V&lt;/li&gt; &#xA; &lt;li&gt;VGA graphics mode using SPICE and QXL&lt;/li&gt; &#xA; &lt;li&gt;Text terminal mode&lt;/li&gt; &#xA; &lt;li&gt;USB devices&lt;/li&gt; &#xA; &lt;li&gt;JIT based acceleration using QEMU TCG&lt;/li&gt; &#xA; &lt;li&gt;Frontend designed from scratch for macOS 11 and iOS 11+ using the latest and greatest APIs&lt;/li&gt; &#xA; &lt;li&gt;Create, manage, run VMs directly from your device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional macOS Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hardware accelerated virtualization using Hypervisor.framework and QEMU&lt;/li&gt; &#xA; &lt;li&gt;Boot macOS guests with Virtualization.framework on macOS 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UTM SE&lt;/h2&gt; &#xA;&lt;p&gt;UTM/QEMU requires dynamic code generation (JIT) for maximum performance. JIT on iOS devices require either a jailbroken device, or one of the various workarounds found for specific versions of iOS (see &#34;Install&#34; for more details).&lt;/p&gt; &#xA;&lt;p&gt;UTM SE (&#34;slow edition&#34;) uses a &lt;a href=&#34;https://github.com/ktemkin/qemu/raw/with_tcti/tcg/aarch64-tcti/README.md&#34;&gt;threaded interpreter&lt;/a&gt; which performs better than a traditional interpreter but still slower than JIT. This technique is similar to what &lt;a href=&#34;https://github.com/ish-app/ish&#34;&gt;iSH&lt;/a&gt; does for dynamic execution. As a result, UTM SE does not require jailbreaking or any JIT workarounds and can be sideloaded as a regular app.&lt;/p&gt; &#xA;&lt;p&gt;To optimize for size and build times, only the following architectures are included in UTM SE: ARM, PPC, RISC-V, and x86 (all with both 32-bit and 64-bit variants).&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;UTM (SE) for iOS: &lt;a href=&#34;https://getutm.app/install/&#34;&gt;https://getutm.app/install/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;UTM is also available for macOS: &lt;a href=&#34;https://mac.getutm.app/&#34;&gt;https://mac.getutm.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/utmapp/UTM/master/Documentation/MacDevelopment.md&#34;&gt;macOS Development&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/utmapp/UTM/master/Documentation/iOSDevelopment.md&#34;&gt;iOS Development&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ish-app/ish&#34;&gt;iSH&lt;/a&gt;: emulates a usermode Linux terminal interface for running x86 Linux applications on iOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/holzschu/a-shell&#34;&gt;a-shell&lt;/a&gt;: packages common Unix commands and utilities built natively for iOS and accessible through a terminal interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;UTM is distributed under the permissive Apache 2.0 license. However, it uses several (L)GPL components. Most are dynamically linked but the gstreamer plugins are statically linked and parts of the code are taken from qemu. Please be aware of this if you intend on redistributing this application.&lt;/p&gt; &#xA;&lt;p&gt;Some icons made by &lt;a href=&#34;https://www.freepik.com&#34;&gt;Freepik&lt;/a&gt; from &lt;a href=&#34;https://www.flaticon.com/&#34;&gt;www.flaticon.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, UTM frontend depends on the following MIT License components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager&#34;&gt;IQKeyboardManager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/migueldeicaza/SwiftTerm&#34;&gt;SwiftTerm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/weichsel/ZIPFoundation&#34;&gt;ZIP Foundation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MustangYM/WeChatExtension-ForMac</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/MustangYM/WeChatExtension-ForMac</id>
    <link href="https://github.com/MustangYM/WeChatExtension-ForMac" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mac微信功能拓展/微信插件/微信小助手(A plugin for Mac WeChat)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/face1.png&#34; width=&#34;1000px&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-macos-lightgrey.svg?sanitize=true&#34; alt=&#34;platform&#34;&gt; &lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-v2.9.2-brightgreen.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/support-wechat%203.1.2-blue.svg?sanitize=true&#34; alt=&#34;support&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持&lt;a href=&#34;https://github.com/MustangYM/WeChatICU-ForMac&#34;&gt;企业微信&lt;/a&gt;，由此进。&lt;/li&gt; &#xA; &lt;li&gt;如果你希望更简约，这里提供了&lt;a href=&#34;https://github.com/MustangYM/WeChatSeptet-ForMac&#34;&gt;简版小助手&lt;/a&gt;，安装方式与WeChatExtension的手动安装方式一样。&lt;/li&gt; &#xA; &lt;li&gt;Most users of this project are Chinese, so there is &lt;code&gt;NO ENGLISH WIKI&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;声明以及常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2021-02-08后安装插件后&lt;strong&gt;无法启动&lt;/strong&gt;, &lt;strong&gt;解决方案&lt;/strong&gt;&lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/issues/816&#34;&gt;看这里&lt;/a&gt;, &lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/issues/816&#34;&gt;看这里&lt;/a&gt;, &lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/issues/816&#34;&gt;看这里&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;作者只有macOS11设备, 只适配macOS11，不处理macOS11以下相关bug。&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;到目前为止，并未发现因使用本插件会导致封号。&lt;/del&gt; 2.9.2及以下版本小助手已不再安全, 可能会导致封号, 不建议使用!&lt;/li&gt; &#xA; &lt;li&gt;Issues注意事项&lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/wiki/Issues%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9&#34;&gt;Wiki&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚠️警告⚠️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.ifeng.com/c/85A5xn6wYpo&#34;&gt;全国最大制售微信外挂软件案宣判！主犯获刑10年&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;有不少三方盗版网站在&lt;strong&gt;售卖&lt;/strong&gt;甚至通过&lt;strong&gt;改编&lt;/strong&gt;此项目开源代码进行&lt;strong&gt;非法获利&lt;/strong&gt;，这已经超出我本人所能控制范围，这并非我的初衷，此项目是&lt;strong&gt;免费开源&lt;/strong&gt;，严厉&lt;strong&gt;谴责&lt;/strong&gt;及&lt;strong&gt;警告&lt;/strong&gt;以下售卖此项目的网站或个人立即停止&lt;strong&gt;非法盈利&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;小助手将不再开源！以表抗议！！！直至你们停止盈利！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;警告网站&lt;/th&gt; &#xA;   &lt;th&gt;非法获利形式&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mac69.com/mac/5587.html&#34;&gt;Mac69&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖300积分VIP免费/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.macjb.com/mac/3628.html&#34;&gt;Mac金币&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖300积分/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://download.csdn.net/download/weixin_42142062/15043017&#34;&gt;CSDN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖28积分/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.mipuo.com/37672.html&#34;&gt;米铺网&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;会员形式下载盈利/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.imacapp.net/4055.html&#34;&gt;imacapp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖50积分&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mac.xuanziyuan.com/421401.html&#34;&gt;xuanziyuan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖3.5积分/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.7195193.1997079397.11.10941121totpfD&amp;amp;id=618366544551&amp;amp;abbucket=13&#34;&gt;淘宝店铺MacRuoRuo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖15元/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.macv.com/mac/2356.html&#34;&gt;macv.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;非法售卖300积分/次&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;欢迎大家踊跃举报，抵制！&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;小助手相关介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Xi4y1b72c?from=search&amp;amp;seid=863944292302073615&#34;&gt;Toptips视频介绍(゜-゜)つロ 干杯~&lt;/a&gt;(基于2.5版本的小助手介绍，现在的小助手更完善)。&lt;/li&gt; &#xA; &lt;li&gt;经过两年的不间断的维护已成长为最受欢迎的&lt;code&gt;Objective-C&lt;/code&gt;项目之一，请放心使用。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/GrowingGit/GitHub-Chinese-Top-Charts/raw/master/content/charts/overall/software/Objective-C.md&#34;&gt;中文榜&lt;/a&gt;。（娱乐数据，仅供参考）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github-trending.com/repo/Objective-C&#34;&gt;OC总榜&lt;/a&gt;。（娱乐数据，仅供参考）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://starchart.cc/MustangYM/WeChatExtension-ForMac.svg?sanitize=true&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;迷离/黑夜/上帝/少女 皮肤模式&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;少量细节没有做适配，&lt;code&gt;主题模式-关闭皮肤&lt;/code&gt;可以&lt;code&gt;关掉&lt;/code&gt;这个功能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;群聊中每个发言人的&lt;code&gt;昵称颜色&lt;/code&gt;都会有所区别。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在皮肤模式下，未读消息头像会轻微可爱&lt;code&gt;摇动&lt;/code&gt;，未读数超过&lt;code&gt;99条&lt;/code&gt;的会话有&lt;code&gt;彩蛋&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你的迷离模式&lt;code&gt;未生效&lt;/code&gt;，打开&lt;code&gt;系统偏好设置&lt;/code&gt; -&amp;gt; &lt;code&gt;辅助功能&lt;/code&gt; -&amp;gt; &lt;code&gt;显示&lt;/code&gt;，不要勾选&lt;code&gt;减少透明度&lt;/code&gt;或&lt;code&gt;提供对比度&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;上帝模式可选一张图片做背景。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://z3.ax1x.com/2021/07/06/RIGEef.gif&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://z3.ax1x.com/2021/07/06/RIGlyq.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;模式切换&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/change_theme.png&#34; width=&#34;300px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;僵尸粉检测&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;无感检测！（发布的第三天就有XX公众号公布了检测漏洞，已被封，切勿再使用。）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;手机端也能收到被撤回的消息&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果Mac拦截到A发送来的消息，手机也会同步收到的这条已经拦截的消息(自己发送给自己)。目前只支持同步文字消息与图片消息。&lt;/li&gt; &#xA; &lt;li&gt;可以对同步的消息进行勾选，以免群消息打扰。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://z3.ax1x.com/2021/07/06/RIGGwT.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;消息转发&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac可实现多开，出门在外手机却不能，怎样在同一台手机上实现多个微信号消息的监听？&lt;/li&gt; &#xA; &lt;li&gt;iPhone上可安装自签的微信包，实现多开，但是Bundle Id的改变导致APNS消息推送异常，无法收到消息推送？&lt;/li&gt; &#xA; &lt;li&gt;目前只能转发文字消息。选择&lt;code&gt;转发所有好友消息&lt;/code&gt;时，只转发单聊消息，不转发群聊消息。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://z3.ax1x.com/2021/07/06/RIGdp9.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;免认证登录与多开&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以&lt;code&gt;同时&lt;/code&gt;登录&lt;code&gt;多个&lt;/code&gt;微信号。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/launch.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;同时支持自定义回复和AI自动撩妹&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;腾讯AI人工智能自动回复，能理解上下文语义。&lt;strong&gt;大量临床试验和大家反馈，腾讯这个AI接口回复不够完善，慎用。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;自定义自动回复。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/Snipaste_2019-12-23_11-41-20.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;显示小程序详情&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;即便Mac微信现在可以&lt;code&gt;打开&lt;/code&gt;小程序，暂时还&lt;code&gt;不支持&lt;/code&gt;游戏小程序，所以&lt;code&gt;保留&lt;/code&gt;了此功能。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/WX20191220-2004071%402x.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Alfred&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;确保你电脑中有安装Alfred，双击此文件进行安装。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/WX20191217-1036331%402x.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;依次点击 &lt;code&gt;小助手&lt;/code&gt; -&amp;gt; &lt;code&gt;开启Alfred功能&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;打开你的Alfred搜索框，输入 &lt;code&gt;wx &lt;/code&gt;(wx后面接一个空格)，即可开启Alfred控制微信之旅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;退群监控&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;退群提醒，同一人在同一群里的退出提醒7天内不再重复提示。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/WX20191227-200134%402x.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;群员监控&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;微信版本&lt;code&gt;&amp;gt;=2.4.2（15650）&lt;/code&gt;才支持此功能。&lt;/li&gt; &#xA; &lt;li&gt;群员监控Window中，鼠标右键单击左侧&lt;code&gt;Session&lt;/code&gt;列表某行出现&lt;code&gt;拒收消息&lt;/code&gt;，可以在Mac上完全拒收此群消息，避免打扰。&lt;/li&gt; &#xA; &lt;li&gt;右侧列表是依次是&lt;code&gt;昵称&lt;/code&gt;、相关&lt;code&gt;发言时间与条数&lt;/code&gt;、&lt;code&gt;违规言论&lt;/code&gt;、&lt;code&gt;拼多多砍一刀&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;此功能暂时属于&lt;code&gt;实验性质&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/ZGMP.png&#34; width=&#34;800px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;怎么安装?&lt;/h2&gt; &#xA;&lt;h3&gt;安装方式一：普通安装(clone最新版本并安装)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo rm -r -f WeChatExtension-ForMac &amp;amp;&amp;amp; git clone --depth=1 https://github.com/MustangYM/WeChatExtension-ForMac &amp;amp;&amp;amp; cd WeChatExtension-ForMac/WeChatExtension/Rely &amp;amp;&amp;amp; ./Install.sh &amp;amp;&amp;amp; cd ~&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;安装方式二：懒癌版安装&lt;/h3&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://avatars1.githubusercontent.com/u/5035625?s=400&amp;amp;v=4&#34; width=&#34;100px&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/lmk123&#34;&gt;lmk123&lt;/a&gt;为此项目开发的懒癌安装 &lt;a href=&#34;https://github.com/lmk123/oh-my-wechat&#34;&gt;Oh My WeChat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;打开&lt;code&gt;应用程序-实用工具-Terminal(终端)&lt;/code&gt;，执行下面的命令安装 &lt;a href=&#34;https://github.com/lmk123/oh-my-wechat&#34;&gt;Oh My WeChat&lt;/a&gt;：（Oh My WeChat只需安一次，以后就只需执行 &lt;code&gt;omw&lt;/code&gt;或&lt;code&gt;omw -n&lt;/code&gt;即可）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o- -L https://omw.limingkai.cn/install.sh | bash -s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Oh My WeChat一键命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;omw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;跳过检查更新的步骤，优先使用下载过的安装包安装小助手。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;omw -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;omw 会从 &lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac&#34;&gt;GitHub 仓库&lt;/a&gt;检查更新及下载安装包，但由于网络不稳定，下载可能会失败，但你还可以使用 &lt;code&gt;omw load&lt;/code&gt; 命令安装小助手。&lt;/p&gt; &#xA;&lt;p&gt;安装完成后会自动安装微信插件，可以访问 &lt;a href=&#34;https://github.com/lmk123/oh-my-wechat#oh-my-wechat&#34;&gt;Oh My WeChat 的项目主页&lt;/a&gt;查看更多用法。&lt;/p&gt; &#xA;&lt;h3&gt;安装方式三：手动安装&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;3.1.确保你的Mac上已经安装了微信App。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;3.2.下载本项目到你的电脑里， 并双击打开。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/install1.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;3.3.依次打开文件夹&lt;code&gt;WeChatExtension/Rely/Install.sh&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;3.4.将&lt;code&gt;Install.sh&lt;/code&gt;拖入终端工具中按&lt;code&gt;回车&lt;/code&gt;执行安装。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://z3.ax1x.com/2021/07/06/RIGrm6.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3.5.&lt;code&gt;重启&lt;/code&gt;微信，安装完成。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;怎么卸载?&lt;/h2&gt; &#xA;&lt;h3&gt;卸载方式一：自动卸载（推荐）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://git.io/JUO6r)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;卸载方式二：手动卸载&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;将Uninstall.sh拖到终端工具中，回车执行即可。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MustangYM/WeChatExtensionSources/raw/master/Pictures/uninstall.png&#34; width=&#34;1500px&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;卸载方式三：使用 Oh My Wechat 卸载&lt;/h3&gt; &#xA;&lt;p&gt;如果你安装了 &lt;a href=&#34;https://github.com/lmk123/oh-my-wechat#oh-my-wechat&#34;&gt;Oh My WeChat&lt;/a&gt;，那么运行下面的命令即可：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;omw un&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;2021-07-06 修复崩溃&#xA;2021-07-05 修复2.9.0中点击聊天记录闪退BUG。&#xA;2021-07-03 适配Version. 3.1.2 (18766)，低于macOS11不再适配。全新上帝模式。&#xA;2021-05-13 消除主窗口在上帝模式下部分黑色, 实现全透明，优化Tab切换后聊天窗口在上帝模式下的渲染逻辑, 减缓卡顿。&#xA;2021-05-12 2.8.4为Beta版本，适配3.0.3 (18062)，做了大量适配工作，发布上帝模式Beta版本，与非法售卖小助手网站抗争到底，小助手不再开源，纪念汶川512大地震。&#xA;2021-01-15 适配微信v2.6.1(16837)，群员监控可查看具体违规言论，修复2.6以上多选BUG。&#xA;2020-12-24 适配微信2.6.0（16787），新增pkg安装包安装模式。&#xA;2020-10-31 修复清除空会话失效，优化置底、公众号浏览，新增一键卸载小助手，新增关闭皮肤选项，新增群员监控、拒收群消息。&#xA;2020-09-20 系统低于macOS10.14不再支持皮肤，修复2.4.2 (15650)选取联系人Crash，优化UI细节。&#xA;2020-09-16 适配微信2.4.2(15650)Beta 148，修复微信会话列表为空，新增通讯录管理皮肤适配，小程序成为独立模块，多开与小程序终于完美兼容，喜极而泣！&#xA;2020-08-28 重构退群监控，会话列表选中高亮，修复部分低版本微信Crash。&#xA;2020-08-13 聊天输入框/表情选择/收藏界面图标优化，修复联系人列表/详情页面若干BUG。&#xA;2020-07-27 修复免认证登录后, 主页面一片空白。修复部分机器会话标题显示不全。适配10.13低版本系统聊天框底部图标不显示。&#xA;2020-07-21 新增“迷离模式”主题。&#xA;2020-07-13 消息自动转发，移除退群监控，界面优化。&#xA;2020-06-30 修复内存泄露导致的越用越卡顿，修复打字卡顿。&#xA;2020-06-11 下架僵尸粉检测功能，修复聊天记录不完整BUG。&#xA;2020-06-03 检测僵尸粉。&#xA;2020-05-07 新增深邃模式，退群监控性能优化，修复搜索界面BUG，修复消息引用BUG。&#xA;2020-04-26 崩溃拦截，修复收藏中笔记显示BUG，适配2.4.0.149群语音或视频显示，修复公众列表右键点击BUG，茱萸粉皮肤。&#xA;2020-04-16 修复小程序、Word、Excel不显示。&#xA;2020-04-13 2.5.4版本在2.3.26微信上启动会闪退，已经修复。&#xA;2020-04-10 修复免认证登录后左下角&#34;小手机&#34;不显示，远程控制/自动回复/关于界面适配黑暗模式。&#xA;2020-03-31 会话列表抖动，联系人列表优化，群成员列表优化。&#xA;2020-03-25 视频播放界面遮罩修复，聊天界面按钮优化，屏蔽消息提示优化，文件选择界面优化，消息记录界面优化。粉色模式下TouchBar问题修复，置底和多选修复。&#xA;2020-03-19 表情，聊天记录，群聊创建输入框，登录页，弹窗等等页面适配黑暗模式。&#xA;2020-03-17 黑夜模式。&#xA;2020-02-25 兼容微信2.4.0，修复小程序不能打开BUG，并兼容微信多开。&#xA;2019-12-27 退群提醒。&#xA;2019-12-23 发布2.3.0版本，新增显示小程序信息，转账金额。&#xA;2019-12-22 还原老版自动回复，优化AI自动回复界面。&#xA;2019-12-20 显示小程序消息详情。&#xA;2019-12-17 修复Alfred聊天记录为空问题。&#xA;2019-12-10 适配2.3.29微信客户端，消息撤回逻辑问题得以修复。&#xA;2019-12-04 适配OSX10.14.6，修复翻译问题，增加AI自动聊天。&#xA;2019-11-16 将安装包从17.7MB瘦身到2.6MB，没有&#34;科学上网&#34;的同学大大加快安装更新速度，提升人民幸福感。&#xA;2019-11-14 修复多选会话后批量删除闪退。&#xA;2019-11-01 修复Alfred头像不显示问题。&#xA;2019-10-28 优化英文系统下的文案。&#xA;2019-08-07 修复联系人信息获取接口改变导致自动回复和Alfred的大面积闪退，sorry。新增自动下载聊天高清图功能。&#xA;2019-07-26 适配2.3.26版本，修复闪退，屏蔽更新。&#xA;2019-07-10 修复清除空会话闪退。&#xA;2019-06-28 修复消息筛选Bug，群聊撤回同步到手机显示真实联系人昵称。&#xA;2019-06-25 适配OSX 10.9。&#xA;2019-06-25 消息防撤回同步到手机，增加筛选功能，可以只同步群聊或单聊。&#xA;2019-06-19 详细安装方法。&#xA;2019-06-05 修复会话多选闪退，点击公众号类型消息闪退。&#xA;2019-05-28 支持系统浏览器打开网页。&#xA;2019-05-14 如果Mac拦截到A发送来的消息，手机也会同步收到的这条已经拦截的消息，小助手一键更新。&#xA;2019-05-10 目前更新还很不方便，稍后会加入更加方便的一键更新。&#xA;2019-05-10 现在在最新版的微信中的多开和消息撤回是可以用的，如果不能用，请检查小助手的版本。&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TO DO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BigSur引用消息或许会Crash（未复现）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute。 &lt;a href=&#34;https://github.com/MustangYM/WeChatExtension-ForMac/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/mustangym666/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢捐赠者 Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/mustangym666#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/h2&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/EGOISTK21&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/17921692?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;EGOISTK21&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;EGOISTK21&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/CoderLineChan&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/21659158?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;CoderLineChan&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;CoderLineChan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/RyanLiGod&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10303946?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;RyanLiGod&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RyanLiGod&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/JpacheGitHub&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/15686977?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;JpacheGitHub&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JpacheGitHub&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/y451687300&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/35559412?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;y451687300&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;y451687300&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/imjonat&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/42567368?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;imjonat&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;imjonat&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/reinstallsys&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/5747138?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;reinstallsys&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;reinstallsys&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/snowdreams1006&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/23238267?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;snowdreams1006&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;snowdreams1006&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lvsijian8&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/19362089?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;lvsijian8&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lvsijian8&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/TheColdVoid&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10008227?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;TheColdVoid&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TheColdVoid&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Yaidea&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/61902523?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;Yaidea&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yaidea&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/zybook&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/5904979?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;zybook&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zybook&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/hydrahailnuaa&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/8326343?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;hydrahailnuaa&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;hydrahailnuaa&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/DaBo0219&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/62327176?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;DaBo0219&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DaBo0219&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/wujunze&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/12997869?s=400&amp;amp;u=455e0f09c1e11fc0df7594d7dfbba88be92c4244&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;wujunze&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;wujunze&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/greatpie&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/8511143?s=400&amp;amp;u=813b0bbae8b04034e37b8d45298c5e004de515bf&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;greatpie&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;greatpie&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/snakejordan&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/3376284?s=400&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;snakejordan&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;snakejordan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lzf971107&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/37407114?s=400&amp;amp;u=6c9f6eeb4a8b90814ff6ef1a28cdaa20b47d80ec&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;lzf971107&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lzf971107&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/augusl&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/25142251?s=400&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;augusl&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;augusl&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/watership&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2470422?s=400&amp;amp;u=b682f8bbbe6931a9e109bbe3f63c6f87fbed7d60&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;watership&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;watership&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Artemis-13&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/61645537?s=400&amp;amp;u=cbbb168e60b1d1ace572cd4bcf9712f054a1497c&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;Artemis-13&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artemis-13&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/yuanaichi&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/7549002?s=400&amp;amp;u=6771f9fbd349486f6aaff4a34da057fb426034d8&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;yuanaichi&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yuanaichi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/JJ7539&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/11268054?s=400&amp;amp;u=c0c2c99164982cefb00b9677dd17848420bec734&amp;amp;v=4&#34; width=&#34;100px&#34; alt=&#34;JJ7539&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JJ7539&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/coolmilkTea&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/48348904?s=400&amp;amp;u=4fd777edf333f39a6a3fe7917a159aad6c98b200&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;coolmilkTea&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;coolmilkTea&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/AhQi7&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/46393078?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;AhQi7&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AhQi7&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/caoxinjava001&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/4892867?s=400&amp;amp;u=0ad501d30873d872971e8c4cd941f6e40c5f02ea&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;caoxinjava001&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;caoxinjava001&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Whatsmine&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/39985040?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;Whatsmine&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Whatsmine&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/orangeclassmate&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/34773757?s=400&amp;amp;u=9c4b3457256daded0326ba87b3ef129b0f69ee17&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;orangeclassmate&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;orangeclassmate&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/yorfir&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/7101507?s=400&amp;amp;u=11080c0830a870dcab91948149445565bc187da9&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;yorfir&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yorfir&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/isyntop&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/20900723?s=400&amp;amp;u=a1e6d392f55a5d5b180535277b1020bf17f7e217&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;isyntop&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;isyntop&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/baymax-c&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/62831888?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;baymax-c&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;baymax-c&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cnlinjie&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3601638?s=400&amp;amp;u=fa07b0ab31f248e87687ad587ba7af0f23f8ffc7&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;cnlinjie&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cnlinjie&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/befuture&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/2246922?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;befuture&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;befuture&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/crbee&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/18109072?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;crbee&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;crbee&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/elrond-g&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/6926269?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;elrond-g&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;elrond-g&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/feicun2&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/18099292?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;feicun2&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;feicun2&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/linvaux&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/33976489?s=400&amp;amp;u=27f32d8834a2f087c045115a30a9a7561e06fbac&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;linvaux&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;linvaux&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/blackux&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/29528771?s=400&amp;amp;u=c84394df6e33d6238d4222425ff32da093e4b44b&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;blackux&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;blackux&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Qwenjin&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/15087970?s=400&amp;amp;u=2007a686733e6620b5dc93c8bb9153060be1cb9e&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;Qwenjin&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Qwenjin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mritd&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/13043245?s=400&amp;amp;u=d8a792673e23bb2fad29cdde25a45a60dda2db96&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;mritd&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mritd&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/hsing0527&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/57891696?s=400&amp;amp;u=994b194f51551cfa5f4cd4282462ec8d6c258455&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;hsing0527&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;hsing0527&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rodren-lion&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/60810175?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;rodren-lion&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;rodren-lion&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/aleecy&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/15871392?s=400&amp;amp;u=14ae820927d89cc2158501f8e37ec8b6c11abbd6&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;aleecy&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;aleecy&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/eyaeya&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/5821137?s=400&amp;amp;u=800fceb32aa9e06c3c5a9ab4ae03c8134fe17ce9&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;eyaeya&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eyaeya&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/qierkang&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/17940151?s=400&amp;amp;u=ccdfdd11ec900348811f8eefed8f16d80a801daa&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;qierkang&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;qierkang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/MrPlusZhao&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/12454104?s=400&amp;amp;u=5ee35a4f3fdc25ada91a0921220171cb40fe458a&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;MrPlusZhao&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MrPlusZhao&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/onekb&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/16450084?s=400&amp;amp;u=0c1b4e4a48e29316be699adb10c2a5c294dccd76&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;onekb&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;onekb&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pictureye&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/13998802?s=400&amp;amp;u=436fbdc6406b51ab87f4f6738b68b877755b0e7c&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;pictureye&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pictureye&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/uncleYiba&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/26616828?s=400&amp;amp;u=344142a2a1b519c4d52545f3e733d04fd88df069&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;uncleYiba&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;uncleYiba&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/xvalerian&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/43782518?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;xvalerian&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xvalerian&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/SatanZS&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/8230677?s=400&amp;amp;u=0a628322a190b1c1c87f033290ea32568ea33342&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;SatanZS&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SatanZS&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/huiyi0521&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/25707915?s=400&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;huiyi0521&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;huiyi0521&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/findyou&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6084594?s=400&amp;amp;u=859774b13ae172e04894150094211ed2239cfec9&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;findyou&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;findyou&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/the-eric-kwok&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16463312?v=4&#34; width=&#34;100px;&#34; alt=&#34;EricKwok&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;EricKwok&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cqz0955&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/80302661?v=4&#34; width=&#34;100px;&#34; alt=&#34;Jarod816&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jarod816&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/newdimitri&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11519247?v=4&#34; width=&#34;100px;&#34; alt=&#34;newdimitri&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;newdimitri&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/liosen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/33013300?v=4&#34; width=&#34;100px;&#34; alt=&#34;liosen&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;liosen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/max-yeah&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26541990?v=4&#34; width=&#34;100px;&#34; alt=&#34;max-yeah&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;max-yeah&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/xiaohuoni&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11746742?v=4&#34; width=&#34;100px;&#34; alt=&#34;xiaohuoni&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xiaohuoni&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/bluelove56&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/68936214?v=4&#34; width=&#34;100px;&#34; alt=&#34;bluelove56&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bluelove56&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/HenryLuoCN&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/72094520?v=4&#34; width=&#34;100px;&#34; alt=&#34;HenryLuoCN&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HenryLuoCN&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;  &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/mustangym666#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/mustangym666/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;交流&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;皮肤的颜色搭配采纳了大量朋友的反馈和建议，感谢。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;少女模式&lt;/strong&gt;的颜色搭配感谢&lt;a href=&#34;https://github.com/Artemis-13&#34;&gt;Artemis-13&lt;/a&gt;提供建议，称之&lt;strong&gt;茱萸粉&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;封面图的&lt;strong&gt;骷髅&lt;/strong&gt;与&lt;strong&gt;乌鸦&lt;/strong&gt;元素来自于&lt;strong&gt;史泰龙&lt;/strong&gt;的电影&lt;code&gt;《The Expendables》&lt;/code&gt;（敢死队）海报。&lt;/li&gt; &#xA; &lt;li&gt;插件中的&lt;code&gt;图标&lt;/code&gt;、本页所有&lt;code&gt;Logo&lt;/code&gt;、预览图均出自本人&lt;code&gt;蹩脚&lt;/code&gt;的&lt;a href=&#34;https://www.adobe.com/products/photoshop.html&#34;&gt;Photoshop&lt;/a&gt;设计。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TKkk-iOSer/WeChatPlugin-MacOS&#34;&gt;WeChatPlugin-MacOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tyilo/insert_dylib&#34;&gt;insert_dylib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/fishhook&#34;&gt;fishhook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.alfredapp.com/&#34;&gt;Alfred&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swisspol/GCDWebServer&#34;&gt;GCDWebServer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thibaultcha/TCBlobDownload&#34;&gt;TCBlobDownload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qhd/ANYMethodLog&#34;&gt;ANYMethodLog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MustangYM/WeChatExtension-ForMac/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fstudio/clangbuilder.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://996.icu&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/link-996.icu-red.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目遵循&lt;code&gt;MIT license&lt;/code&gt;，方便交流与学习，包括但不限于本项目的衍生品都禁止在损害WeChat官方利益情况下进行盈利。如果您发现本项目有侵犯您的知识产权，请与我取得联系，我会及时修改或删除。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-amplify/aws-sdk-ios</title>
    <updated>2022-05-31T02:16:49Z</updated>
    <id>tag:github.com,2022-05-31:/aws-amplify/aws-sdk-ios</id>
    <link href="https://github.com/aws-amplify/aws-sdk-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AWS SDK for iOS. For more information, see our web site:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS SDK for iOS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/aws/aws-sdk-ios.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/AWSCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AWSCore.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/aws-amplify/aws-sdk-ios&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/aws-amplify/aws-sdk-ios.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/jWVbPfC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/308323056592486420?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The AWS SDK for iOS provides a library and documentation for developers to build connected mobile applications using AWS.&lt;/p&gt; &#xA;&lt;h3&gt;Features / APIs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/authentication&#34;&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/a&gt;: APIs and building blocks for developers who want to create user authentication experiences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/analytics&#34;&gt;&lt;strong&gt;Analytics&lt;/strong&gt;&lt;/a&gt;: Easily collect analytics data for your app. Analytics data includes user sessions and other custom events that you want to track in your app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/api&#34;&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/a&gt;: Provides a simple solution when making HTTP requests. It provides an automatic, lightweight signing process which complies with AWS Signature Version 4.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/storage&#34;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt;: Provides a simple mechanism for managing user content for your app in public, protected or private storage buckets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/push-notifications&#34;&gt;&lt;strong&gt;Push Notifications&lt;/strong&gt;&lt;/a&gt;: Allows you to integrate push notifications in your app with Amazon Pinpoint targeting and campaign management support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/pubsub&#34;&gt;&lt;strong&gt;PubSub&lt;/strong&gt;&lt;/a&gt;: Provides connectivity with cloud-based message-oriented middleware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs/ios/manualsetup&#34;&gt;&lt;strong&gt;Generated AWS Service Interfaces&lt;/strong&gt;&lt;/a&gt;: Provides direct interaction with any AWS service.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Visit our &lt;a href=&#34;https://aws-amplify.github.io&#34;&gt;Web Site&lt;/a&gt; to learn more about Amplify Framework.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws-amplify.github.io/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/aws-sdk-ios-samples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To get started with the AWS SDK for iOS, check out the &lt;a href=&#34;https://aws-amplify.github.io/docs/ios/start&#34;&gt;Developer Guide for iOS&lt;/a&gt;. You can set up the SDK and start building a new project, or you integrate the SDK in an existing project. You can also run the samples to get a sense of how the SDK works.&lt;/p&gt; &#xA;&lt;p&gt;To use the AWS SDK for iOS, you will need the following installed on your development machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 11.0 or later&lt;/li&gt; &#xA; &lt;li&gt;iOS 9 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Include the SDK for iOS in an Existing Application&lt;/h2&gt; &#xA;&lt;p&gt;We have a couple &lt;a href=&#34;https://github.com/awslabs/aws-sdk-ios-samples&#34;&gt;samples&lt;/a&gt; applications which showcase how to use the AWS SDK for iOS. Please note that the code in these sample applications is not of production quality, and should be considered as exactly what we called them: samples.&lt;/p&gt; &#xA;&lt;p&gt;There are several ways to integrate the AWS Mobile SDK for iOS into your own project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/mobile/sdk/&#34;&gt;Dynamic Frameworks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should use ONE and only one of these ways to import the AWS Mobile SDK. Importing the SDK in multiple ways loads duplicate copies of the SDK into the project and causes compiler/linker errors.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you are using XCFrameworks (i.e., either Swift Package Manager, Carthage, or Dynamic Frameworks), some modules are named with the &lt;code&gt;XCF&lt;/code&gt; suffix to work around a &lt;a href=&#34;https://bugs.swift.org/browse/SR-11704&#34;&gt;Swift issue&lt;/a&gt;. &lt;code&gt;AWSMobileClient&lt;/code&gt; is named as &lt;code&gt;AWSMobileClientXCF&lt;/code&gt; and &lt;code&gt;AWSLocation&lt;/code&gt; is named as &lt;code&gt;AWSLocationXCF&lt;/code&gt;. To use the &lt;code&gt;AWSMobileClient&lt;/code&gt; or &lt;code&gt;AWSLocation&lt;/code&gt; SDKs, import them as:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AWSMobileClientXCF&#xA;import AWSLocationXCF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and use it your app code without the &lt;code&gt;XCF&lt;/code&gt; suffix.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AWSMobileClient.default().initialize() &#xA;let locationClient = AWSLocation.default()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Swift Package Manager is distributed with Xcode. To start adding the AWS SDK to your iOS project, open your project in Xcode and select &lt;strong&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/readme-images/spm-setup-01-add-package-dependency.png&#34; alt=&#34;Add package dependency&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the URL for the AWS SDK for iOS Swift Package Manager GitHub repo (&lt;code&gt;https://github.com/aws-amplify/aws-sdk-ios-spm&lt;/code&gt;) into the search bar and click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/readme-images/spm-setup-02-search-amplify-repo.png&#34; alt=&#34;Search for repo&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This URL is &lt;em&gt;not&lt;/em&gt; the main URL of the SDK. We maintain the Swift Package Manager manifest (&lt;code&gt;Package.swift&lt;/code&gt;) file for this library in a separate repo so that apps that use the SDK do not have to download the entire source repository in order to consume the binary targets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You&#39;ll see the repository rules for which version of the SDK you want Swift Package Manager to install. Choose the first rule, &lt;strong&gt;Version&lt;/strong&gt;, and select &lt;strong&gt;Up to Next Minor&lt;/strong&gt; as it will use the latest compatible version of the dependency that can be detected from the &lt;code&gt;main&lt;/code&gt; branch, then click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/readme-images/spm-setup-03-dependency-version-options.png&#34; alt=&#34;Dependency version options&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The AWS Mobile SDK for iOS does &lt;a href=&#34;https://docs.amplify.aws/sdk/configuration/setup-options/q/platform/ios#aws-sdk-version-vs-semantic-versioning&#34;&gt;not use Semantic Versioning&lt;/a&gt;, and may introduce breaking API changes on minor version releases. We recommend setting your &lt;strong&gt;Version&lt;/strong&gt; rule to &lt;strong&gt;Up to Next Minor&lt;/strong&gt; and evaluating minor version releases to ensure they are compatible with your app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose which of the libraries you want added to your project. Always select the &lt;strong&gt;AWSCore&lt;/strong&gt; SDK. The remaining SDKs to install will vary based on which SDK you&#39;re trying to install. Most SDKs rely only on &lt;strong&gt;AWSCore&lt;/strong&gt;, but for a full dependency list, see the &lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/README-spm-support.md&#34;&gt;README-spm-support file&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note: AWSLex is not currently supported for the &lt;code&gt;arm64&lt;/code&gt; architecture through Swift Package Manager due to conflicts with a packaged binary dependency.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/readme-images/spm-setup-04-select-dependencies.png&#34; alt=&#34;Select dependencies&#34;&gt;&lt;/p&gt; &lt;p&gt;Select all that are appropriate, then click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;You can always go back and modify which SPM packages are included in your project by opening the Swift Packages tab for your project: Click on the Project file in the Xcode navigator, then click on your project&#39;s icon, then select the &lt;strong&gt;Swift Packages&lt;/strong&gt; tab.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The AWS Mobile SDK for iOS is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. If you have not installed CocoaPods, install CocoaPods by running the command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ gem install cocoapods&#xA; $ pod setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Depending on your system settings, you may have to use &lt;code&gt;sudo&lt;/code&gt; for installing &lt;code&gt;cocoapods&lt;/code&gt; as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ sudo gem install cocoapods&#xA; $ pod setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your project directory (the directory where your &lt;code&gt;*.xcodeproj&lt;/code&gt; file is), run the following to create a &lt;code&gt;Podfile&lt;/code&gt; in your project.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ pod init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the podfile to include the pods you want to integrate into your project. For example, if you need auth, you can use AWSMobileClient, and if you need analytics, you add AWSPinpoint. As a result, your podfile might look something like this:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;target &#39;YourTarget&#39; do&#xA;    pod &#39;AWSMobileClient&#39;&#xA;    pod &#39;AWSPinpoint&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a complete list of our pods, check out the .podspec files in the root directory of this project.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Then run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ pod install --repo-update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To open your project, open the newly generated &lt;code&gt;*.xcworkspace&lt;/code&gt; file in your project&#39;s directory with XCode. You can do this by issuing the following command in your project folder:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ xed .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Do &lt;strong&gt;NOT&lt;/strong&gt; use &lt;code&gt;*.xcodeproj&lt;/code&gt;. If you open up a project file instead of a workspace, you may receive the following error:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; ld: library not found for -lPods-AWSCore&#xA; clang: error: linker command failed with exit code 1 (use -v to see invocation)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;h4&gt;XCFrameworks (recommended)&lt;/h4&gt; &#xA;&lt;p&gt;Carthage supports XCFrameworks in Xcode 12 or above. Follow the steps below to consume the AWS SDK for iOS using XCFrameworks:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Carthage 0.37.0 or greater.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; github &#34;aws-amplify/aws-sdk-ios&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ carthage update --use-xcframeworks --no-use-binaries&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As of Carthage 0.37.0, prebuilt binaries using XCFrameworks are not supported, as mentioned in the Carthage release notes - &lt;a href=&#34;https://github.com/Carthage/Carthage/releases/tag/0.37.0&#34;&gt;https://github.com/Carthage/Carthage/releases/tag/0.37.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;On your application targets’ General settings tab, in the Embedded Binaries section, drag and drop each xcframework you want to use from the Carthage/Build folder on disk.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Frameworks with &#34;fat libraries&#34; (not recommended)&lt;/h4&gt; &#xA;&lt;p&gt;To build platform-specific framework bundles with multiple architectures in the binary, (Xcode 11 and below)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the latest version of &lt;a href=&#34;https://github.com/Carthage/Carthage#installing-carthage&#34;&gt;Carthage&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; github &#34;aws-amplify/aws-sdk-ios&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ carthage update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With your project open in Xcode, select your &lt;strong&gt;Target&lt;/strong&gt;. Under &lt;strong&gt;General&lt;/strong&gt; tab, find &lt;strong&gt;Frameworks, Libraries, and Embedded Content&lt;/strong&gt; and then click the &lt;strong&gt;+&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Add Other...&lt;/strong&gt; button, then &#34;Add Files...&#34; in the popup menu, then navigate to the &lt;code&gt;AWS&amp;lt;#ServiceName#&amp;gt;.framework&lt;/code&gt; files under &lt;code&gt;Carthage&lt;/code&gt; &amp;gt; &lt;code&gt;Build&lt;/code&gt; &amp;gt; &lt;code&gt;iOS&lt;/code&gt; and select them. Do not check the &lt;strong&gt;Destination: Copy items if needed&lt;/strong&gt; checkbox if prompted. Add the frameworks that you need for you specific use case. For example, if you are using AWSMobileClient and AWSPinpoint, you will want to add the following frameworks:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSAuthCore.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCognitoIdentityProvider.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCognitoIdentityProviderASF.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCore.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSMobileClient.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSPinpoint.framework&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Under the &lt;strong&gt;Build Phases&lt;/strong&gt; tab in your &lt;strong&gt;Target&lt;/strong&gt;, click the &lt;strong&gt;+&lt;/strong&gt; button on the top left and then select &lt;strong&gt;New Run Script Phase&lt;/strong&gt;. Then setup the build phase as follows. Make sure this phase is below the &lt;code&gt;Embed Frameworks&lt;/code&gt; phase.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Shell /bin/sh&#xA; &#xA; bash &#34;${BUILT_PRODUCTS_DIR}/${FRAMEWORKS_FOLDER_PATH}/AWSCore.framework/strip-frameworks.sh&#34;&#xA; &#xA; Show environment variables in build log: Checked&#xA; Run script only when installing: Not checked&#xA; &#xA; Input Files: Empty&#xA; Output Files: Empty&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Currently, the AWS SDK for iOS builds the Carthage binaries using the latest released version of Xcode. To consume the pre-built binaries your Xcode version needs to be the same, else you have to build the frameworks on your machine by passing &lt;code&gt;--no-use-binaries&lt;/code&gt; flag to &lt;code&gt;carthage update&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;h4&gt;XCFramework setup&lt;/h4&gt; &#xA;&lt;p&gt;Starting AWS SDK iOS version 2.22.1, SDK binaries are released as XCFrameworks. Follow the steps below to install XCFramework.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://releases.amplify.aws/aws-sdk-ios/latest/aws-ios-sdk.zip&#34;&gt;latest SDK&lt;/a&gt;. Older SDK versions can be downloaded from &lt;code&gt;https://releases.amplify.aws/aws-sdk-ios/aws-ios-sdk-#.#.#.zip&lt;/code&gt;, where &lt;code&gt;#.#.#&lt;/code&gt; represents the version number. So for version 2.23.3, the download link is &lt;a href=&#34;https://releases.amplify.aws/aws-sdk-ios/aws-ios-sdk-2.23.3.zip&#34;&gt;https://releases.amplify.aws/aws-sdk-ios/aws-ios-sdk-2.23.3.zip&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note1: If you are using version &amp;lt; 2.22.1 please refer to the &#34;Legacy framework setup&#34; section below. Note2: To download version &amp;lt; 2.23.3 use this link &lt;code&gt;https://sdk-for-ios.amazonwebservices.com/aws-ios-sdk-#.#.#.zip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Uncompress the ZIP file&lt;/li&gt; &#xA; &lt;li&gt;On your application targets’ General settings tab, in the Embedded Binaries section, drag and drop each xcframework you want to use from the downloaded folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Legacy framework setup&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the required SDK using &lt;code&gt;https://sdk-for-ios.amazonwebservices.com/aws-ios-sdk-#.#.#.zip&lt;/code&gt;, where &lt;code&gt;#.#.#&lt;/code&gt; represents the version number. So for version 2.10.2, the download link is &lt;a href=&#34;https://sdk-for-ios.amazonwebservices.com/aws-ios-sdk-2.10.2.zip&#34;&gt;https://sdk-for-ios.amazonwebservices.com/aws-ios-sdk-2.10.2.zip&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you are using version &amp;gt; 2.22.0 please refer to the &#34;XCFramework setup&#34; section above.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;With your project open in Xcode, select your &lt;strong&gt;Target&lt;/strong&gt;. Under &lt;strong&gt;General&lt;/strong&gt; tab, find &lt;strong&gt;Embedded Binaries&lt;/strong&gt; and then click the &lt;strong&gt;+&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Add Other...&lt;/strong&gt; button, navigate to the &lt;code&gt;AWS&amp;lt;#ServiceName#&amp;gt;.framework&lt;/code&gt; files and select them. Check the &lt;strong&gt;Destination: Copy items if needed&lt;/strong&gt; checkbox when prompted. Add the frameworks that you need for you specific use case. For example, if you are using AWSMobileClient and AWSPinpoint, you will want to add the following frameworks:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSAuthCore.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCognitoIdentityProvider.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCognitoIdentityProviderASF.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSCore.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSMobileClient.framework&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AWSPinpoint.framework&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Under the &lt;strong&gt;Build Phases&lt;/strong&gt; tab in your &lt;strong&gt;Target&lt;/strong&gt;, click the &lt;strong&gt;+&lt;/strong&gt; button on the top left and then select &lt;strong&gt;New Run Script Phase&lt;/strong&gt;. Then setup the build phase as follows. Make sure this phase is below the &lt;code&gt;Embed Frameworks&lt;/code&gt; phase.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Shell /bin/sh&#xA; &#xA; bash &#34;${BUILT_PRODUCTS_DIR}/${FRAMEWORKS_FOLDER_PATH}/AWSCore.framework/strip-frameworks.sh&#34;&#xA; &#xA; Show environment variables in build log: Checked&#xA; Run script only when installing: Not checked&#xA; &#xA; Input Files: Empty&#xA; Output Files: Empty&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Update the SDK to a Newer Version&lt;/h2&gt; &#xA;&lt;p&gt;When we release a new version of the SDK, you can pick up the changes as described below.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command in your project directory. CocoaPods automatically picks up the new changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ pod update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If your pod is having an issue, you can delete &lt;code&gt;Podfile.lock&lt;/code&gt; and &lt;code&gt;Pods/&lt;/code&gt; then run &lt;code&gt;pod install&lt;/code&gt; to cleanly install the SDK.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/readme-images/cocoapods-setup-03.png?raw=true&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command in your project directory. Carthage automatically picks up the new changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ carthage update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In Xcode&#39;s &lt;strong&gt;Project Navigator&lt;/strong&gt;, type &#34;AWS&#34; to find the AWS Frameworks or XCFrameworks that you manually added to your project. Select all of the AWS Frameworks and hit &lt;strong&gt;Delete&lt;/strong&gt; on your keyboard. Then select &lt;strong&gt;Move to Trash&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the installation process above to include the new version of the SDK.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started with Swift&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Import the AWSCore header in the application delegate.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AWSCore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a default service configuration by adding the following code snippet in the &lt;code&gt;application:didFinishLaunchingWithOptions:&lt;/code&gt; application delegate method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let credentialsProvider = AWSCognitoCredentialsProvider(&#xA;    regionType: CognitoRegionType,&#xA;    identityPoolId: CognitoIdentityPoolId)&#xA;let configuration = AWSServiceConfiguration(&#xA;    region: DefaultServiceRegionType,&#xA;    credentialsProvider: credentialsProvider)&#xA;AWSServiceManager.default().defaultServiceConfiguration = configuration&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In Swift file you want to use the SDK, import the appropriate headers for the services you are using. The header file import convention is &lt;code&gt;import AWSServiceName&lt;/code&gt;, as in the following examples:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AWSS3&#xA;import AWSDynamoDB&#xA;import AWSSQS&#xA;import AWSSNS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make a call to the AWS services.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let dynamoDB = AWSDynamoDB.default()&#xA;let listTableInput = AWSDynamoDBListTablesInput()&#xA;dynamoDB.listTables(listTableInput!).continueWith { (task:AWSTask&amp;lt;AWSDynamoDBListTablesOutput&amp;gt;) -&amp;gt; Any? in&#xA;    if let error = task.error as? NSError {&#xA;    print(&#34;Error occurred: \(error)&#34;)&#xA;        return nil&#xA;    }&#xA;&#xA;    let listTablesOutput = task.result&#xA;&#xA;    for tableName in listTablesOutput!.tableNames! {&#xA;        print(&#34;\(tableName)&#34;)&#xA;    }&#xA;&#xA;    return nil&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Most of the service client classes have a singleton method to get a default client. The naming convention is &lt;code&gt;+ defaultSERVICENAME&lt;/code&gt; (e.g. &lt;code&gt;+ defaultDynamoDB&lt;/code&gt; in the above code snippet). This singleton method creates a service client with &lt;code&gt;defaultServiceConfiguration&lt;/code&gt;, which you set up in step 5, and maintains a strong reference to the client.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started with Objective-C&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Import the AWSCore header in the application delegate.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;@import AWSCore;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a default service configuration by adding the following code snippet in the &lt;code&gt;application:didFinishLaunchingWithOptions:&lt;/code&gt; application delegate method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;AWSCognitoCredentialsProvider *credentialsProvider = [[AWSCognitoCredentialsProvider alloc] initWithRegionType:CognitoRegionType&#xA;                                                                                                identityPoolId:CognitoIdentityPoolId];&#xA;AWSServiceConfiguration *configuration = [[AWSServiceConfiguration alloc] initWithRegion:DefaultServiceRegionType&#xA;                                                                     credentialsProvider:credentialsProvider];&#xA;AWSServiceManager.defaultServiceManager.defaultServiceConfiguration = configuration;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Import the appropriate headers for the services you are using. The header file import convention is &lt;code&gt;@import AWSServiceName;&lt;/code&gt;, as in the following examples:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;@import AWSS3;&#xA;@import AWSDynamoDB;&#xA;@import AWSSQS;&#xA;@import AWSSNS;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make a call to the AWS services.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;AWSSNS *sns = [AWSSNS defaultSNS];&#xA;AWSSNSListTopicsInput *listTopicsInput = [AWSSNSListTopicsInput new];&#xA;[[sns listTopics:listTopicsInput] continueWithBlock:^id(AWSTask *task) {&#xA;    // Do something with the response&#xA;    return nil;&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Most of the service client classes have a singleton method to get a default client. The naming convention is &lt;code&gt;+ defaultSERVICENAME&lt;/code&gt; (e.g. &lt;code&gt;+ defaultS3SNS&lt;/code&gt; in the above code snippet). This singleton method creates a service client with &lt;code&gt;defaultServiceConfiguration&lt;/code&gt;, which you set up in step 5, and maintains a strong reference to the client.&lt;/p&gt; &#xA;&lt;h2&gt;Working with AWSTask&lt;/h2&gt; &#xA;&lt;p&gt;The SDK returns &lt;code&gt;AWSTask&lt;/code&gt; objects when operating on asynchronous operations to avoid blocking the UI thread.&lt;/p&gt; &#xA;&lt;p&gt;The AWSTask class is a renamed version of BFTask from the Bolts framework. For complete documentation on Bolts, see the &lt;a href=&#34;https://github.com/BoltsFramework/Bolts-ObjC&#34;&gt;Bolts-iOS repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;As of version 2.5.4 of this SDK, logging utilizes &lt;a href=&#34;https://github.com/CocoaLumberjack/CocoaLumberjack&#34;&gt;CocoaLumberjack&lt;/a&gt;, a flexible, fast, open source logging framework. It supports many capabilities including the ability to set logging level per output target, for instance, concise messages logged to the console and verbose messages to a log file.&lt;/p&gt; &#xA;&lt;p&gt;CocoaLumberjack logging levels are additive such that when the level is set to verbose, all messages from the levels below verbose are logged. It is also possible to set custom logging to meet your needs. For more information, see &lt;a href=&#34;https://github.com/CocoaLumberjack/CocoaLumberjack/raw/master/Documentation/CustomLogLevels.md&#34;&gt;CocoaLumberjack&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Changing Log Levels&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AWSDDLog.sharedInstance.logLevel = .verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following logging level options are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.off&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.error&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.warning&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.debug&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.verbose&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Objective-C&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[AWSDDLog sharedInstance].logLevel = AWSDDLogLevelVerbose;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following logging level options are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelOff&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelError&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelWarning&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelInfo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelDebug&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AWSDDLogLevelVerbose&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We recommend setting the log level to &lt;code&gt;Off&lt;/code&gt; before publishing to the Apple App Store.&lt;/p&gt; &#xA;&lt;h3&gt;Targeting Log Output&lt;/h3&gt; &#xA;&lt;p&gt;CocoaLumberjack can direct logs to file or used as a framework that integrates with the Xcode console.&lt;/p&gt; &#xA;&lt;p&gt;To initialize logging to files, use the following code:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let fileLogger: AWSDDFileLogger = AWSDDFileLogger() // File Logger&#xA;fileLogger.rollingFrequency = TimeInterval(60*60*24)  // 24 hours&#xA;fileLogger.logFileManager.maximumNumberOfLogFiles = 7&#xA;AWSDDLog.add(fileLogger)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Objective-C&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;AWSDDFileLogger *fileLogger = [[AWSDDFileLogger alloc] init]; // File Logger&#xA;fileLogger.rollingFrequency = 60 * 60 * 24; // 24 hour rolling&#xA;fileLogger.logFileManager.maximumNumberOfLogFiles = 7;&#xA;[AWSDDLog addLogger:fileLogger];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To initialize logging to your Xcode console, use the following code:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AWSDDLog.add(AWSDDTTYLogger.sharedInstance) // TTY = Xcode console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Objective-C&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[AWSDDLog addLogger:[AWSDDTTYLogger sharedInstance]]; // TTY = Xcode console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Open Source Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We welcome any and all contributions from the community! Make sure you read through our contribution guide &lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/aws-sdk-ios/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt; before submitting any PR&#39;s. Thanks! &amp;lt;3&lt;/p&gt; &#xA;&lt;h2&gt;Talk to Us&lt;/h2&gt; &#xA;&lt;p&gt;Visit our GitHub &lt;a href=&#34;https://github.com/aws-amplify/aws-sdk-ios/issues&#34;&gt;Issues&lt;/a&gt; to leave feedback and to connect with other users of the SDK.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Amazon Web Services&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;strong&gt;LICENSE&lt;/strong&gt; file for more info.&lt;/p&gt;</summary>
  </entry>
</feed>