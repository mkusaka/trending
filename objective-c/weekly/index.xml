<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T02:01:23Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TTTAttributedLabel/TTTAttributedLabel</title>
    <updated>2023-07-02T02:01:23Z</updated>
    <id>tag:github.com,2023-07-02:/TTTAttributedLabel/TTTAttributedLabel</id>
    <link href="https://github.com/TTTAttributedLabel/TTTAttributedLabel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A drop-in replacement for UILabel that supports attributes, data detectors, links, and more&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TTTAttributedLabel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/TTTAttributedLabel/TTTAttributedLabel&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/TTTAttributedLabel/TTTAttributedLabel.svg?style=svg&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/TTTAttributedLabel&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/TTTAttributedLabel.svg?sanitize=true&#34; alt=&#34;Version Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/TTTAttributedLabel/TTTAttributedLabel&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/TTTAttributedLabel/TTTAttributedLabel/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/TTTAttributedLabel.svg?sanitize=true&#34; alt=&#34;license MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/TTTAttributedLabel/&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/TTTAttributedLabel.svg?sanitize=true&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A drop-in replacement for &lt;code&gt;UILabel&lt;/code&gt; that supports attributes, data detectors, links, and more&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;TTTAttributedLabel&lt;/code&gt; is a drop-in replacement for &lt;code&gt;UILabel&lt;/code&gt; providing a simple way to performantly render &lt;a href=&#34;https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/NSAttributedString_Class/Reference/Reference.html&#34;&gt;attributed strings&lt;/a&gt;. As a bonus, it also supports link embedding, both automatically with &lt;code&gt;NSTextCheckingTypes&lt;/code&gt; and manually by specifying a range for a URL, address, phone number, event, or transit information.&lt;/p&gt; &#xA;&lt;p&gt;Even though &lt;code&gt;UILabel&lt;/code&gt; received support for &lt;code&gt;NSAttributedString&lt;/code&gt; in iOS 6, &lt;code&gt;TTTAttributedLabel&lt;/code&gt; has several unique features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic data detection&lt;/li&gt; &#xA; &lt;li&gt;Manual link embedding&lt;/li&gt; &#xA; &lt;li&gt;Label style inheritance for attributed strings&lt;/li&gt; &#xA; &lt;li&gt;Custom styling for links within the label&lt;/li&gt; &#xA; &lt;li&gt;Long-press gestures in addition to tap gestures for links&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It also includes advanced paragraph style properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;attributedTruncationToken&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firstLineIndent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;highlightedShadowRadius&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;highlightedShadowOffset&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;highlightedShadowColor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lineHeightMultiple&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lineSpacing&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;minimumLineHeight&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;maximumLineHeight&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;shadowRadius&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;textInsets&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;verticalAlignment&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 8+ / tvOS 9+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 7+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessibility&lt;/h3&gt; &#xA;&lt;p&gt;As of version 1.10.0, &lt;code&gt;TTTAttributedLabel&lt;/code&gt; supports VoiceOver through the &lt;code&gt;UIAccessibilityElement&lt;/code&gt; protocol. Each link can be individually selected, with an &lt;code&gt;accessibilityLabel&lt;/code&gt; equal to its string value, and a corresponding &lt;code&gt;accessibilityValue&lt;/code&gt; for URL, phone number, and date links. Developers who wish to change this behavior or provide custom values should create a subclass and override &lt;code&gt;accessibilityElements&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need help&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/tttattributedlabel&#34;&gt;Stack Overflow&lt;/a&gt;. (Tag &lt;code&gt;tttattributedlabel&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;ask a general question&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/tttattributedlabel&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt; is the recommended method of installing &lt;code&gt;TTTAttributedLabel&lt;/code&gt;. Simply add the following line to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Podfile&#xA;&#xA;pod &#39;TTTAttributedLabel&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TTTAttributedLabel&lt;/code&gt; can display both plain and attributed text: just pass an &lt;code&gt;NSString&lt;/code&gt; or &lt;code&gt;NSAttributedString&lt;/code&gt; to the &lt;code&gt;setText:&lt;/code&gt; setter. Never assign to the &lt;code&gt;attributedText&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// NSAttributedString&#xA;&#xA;TTTAttributedLabel *attributedLabel = [[TTTAttributedLabel alloc] initWithFrame:CGRectZero];&#xA;&#xA;NSAttributedString *attString = [[NSAttributedString alloc] initWithString:@&#34;Tom Bombadil&#34;&#xA;                                                                attributes:@{&#xA;        (id)kCTForegroundColorAttributeName : (id)[UIColor redColor].CGColor,&#xA;        NSFontAttributeName : [UIFont boldSystemFontOfSize:16],&#xA;        NSKernAttributeName : [NSNull null],&#xA;        (id)kTTTBackgroundFillColorAttributeName : (id)[UIColor greenColor].CGColor&#xA;}];&#xA;&#xA;// The attributed string is directly set, without inheriting any other text&#xA;// properties of the label.&#xA;attributedLabel.text = attString;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// NSString&#xA;&#xA;TTTAttributedLabel *label = [[TTTAttributedLabel alloc] initWithFrame:CGRectZero];&#xA;label.font = [UIFont systemFontOfSize:14];&#xA;label.textColor = [UIColor darkGrayColor];&#xA;label.lineBreakMode = NSLineBreakByWordWrapping;&#xA;label.numberOfLines = 0;&#xA;&#xA;// If you&#39;re using a simple `NSString` for your text,&#xA;// assign to the `text` property last so it can inherit other label properties.&#xA;NSString *text = @&#34;Lorem ipsum dolor sit amet&#34;;&#xA;[label setText:text afterInheritingLabelAttributesAndConfiguringWithBlock:^ NSMutableAttributedString *(NSMutableAttributedString *mutableAttributedString) {&#xA;  NSRange boldRange = [[mutableAttributedString string] rangeOfString:@&#34;ipsum dolor&#34; options:NSCaseInsensitiveSearch];&#xA;  NSRange strikeRange = [[mutableAttributedString string] rangeOfString:@&#34;sit amet&#34; options:NSCaseInsensitiveSearch];&#xA;&#xA;  // Core Text APIs use C functions without a direct bridge to UIFont. See Apple&#39;s &#34;Core Text Programming Guide&#34; to learn how to configure string attributes.&#xA;  UIFont *boldSystemFont = [UIFont boldSystemFontOfSize:14];&#xA;  CTFontRef font = CTFontCreateWithName((__bridge CFStringRef)boldSystemFont.fontName, boldSystemFont.pointSize, NULL);&#xA;  if (font) {&#xA;    [mutableAttributedString addAttribute:(NSString *)kCTFontAttributeName value:(__bridge id)font range:boldRange];&#xA;    [mutableAttributedString addAttribute:kTTTStrikeOutAttributeName value:@YES range:strikeRange];&#xA;    CFRelease(font);&#xA;  }&#xA;&#xA;  return mutableAttributedString;&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;First, we create and configure the label, the same way you would instantiate &lt;code&gt;UILabel&lt;/code&gt;. Any text properties that are set on the label are inherited as the base attributes when using the &lt;code&gt;-setText:afterInheritingLabelAttributesAndConfiguringWithBlock:&lt;/code&gt; method. In this example, the substring &#34;ipsum dolar&#34;, would appear in bold, such that the label would read &#34;Lorem &lt;strong&gt;ipsum dolar&lt;/strong&gt; sit amet&#34;, in size 14 Helvetica, with a dark gray color.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;IBDesignable&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TTTAttributedLabel&lt;/code&gt; includes &lt;code&gt;IBInspectable&lt;/code&gt; and &lt;code&gt;IB_DESIGNABLE&lt;/code&gt; annotations to enable configuring the label inside Interface Builder. However, if you see these warnings when building...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IB Designables: Failed to update auto layout status: Failed to load designables from path (null)&#xA;IB Designables: Failed to render instance of TTTAttributedLabel: Failed to load designables from path (null)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...then you are likely using &lt;code&gt;TTTAttributedLabel&lt;/code&gt; as a static library, which does not support IB annotations. Some workarounds include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;TTTAttributedLabel&lt;/code&gt; as a dynamic framework using CocoaPods with &lt;code&gt;use_frameworks!&lt;/code&gt; in your &lt;code&gt;Podfile&lt;/code&gt;, or with Carthage&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;TTTAttributedLabel&lt;/code&gt; by dragging its source files to your project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Links and Data Detection&lt;/h3&gt; &#xA;&lt;p&gt;In addition to supporting rich text, &lt;code&gt;TTTAttributedLabel&lt;/code&gt; can automatically detect links for dates, addresses, URLs, phone numbers, transit information, and allows you to embed your own links.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;label.enabledTextCheckingTypes = NSTextCheckingTypeLink; // Automatically detect links when the label text is subsequently changed&#xA;label.delegate = self; // Delegate methods are called when the user taps on a link (see `TTTAttributedLabelDelegate` protocol)&#xA;&#xA;label.text = @&#34;Fork me on GitHub! (https://github.com/mattt/TTTAttributedLabel/)&#34;; // Repository URL will be automatically detected and linked&#xA;&#xA;NSRange range = [label.text rangeOfString:@&#34;me&#34;];&#xA;[label addLinkToURL:[NSURL URLWithString:@&#34;http://github.com/mattt/&#34;] withRange:range]; // Embedding a custom link in a substring&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pod try TTTAttributedLabel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or clone this repo and build and run/test the &lt;code&gt;Espressos&lt;/code&gt; project in Xcode to see &lt;code&gt;TTTAttributedLabel&lt;/code&gt; in action. If you don&#39;t have &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; installed, grab it with &lt;code&gt;[sudo] gem install cocoapods&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Example&#xA;pod install&#xA;open Espressos.xcworkspace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TTTAttributedLabel&lt;/code&gt; is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>joaquinanguera/TrainCat</title>
    <updated>2023-07-02T02:01:23Z</updated>
    <id>tag:github.com,2023-07-02:/joaquinanguera/TrainCat</id>
    <link href="https://github.com/joaquinanguera/TrainCat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LTM training&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TrainCat&lt;/h1&gt; &#xA;&lt;p&gt;A long-term memory (LTM) training app for iOS developed at UCSF.&lt;/p&gt;</summary>
  </entry>
</feed>