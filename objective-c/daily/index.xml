<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-11T01:36:44Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>calimarkus/JDStatusBarNotification</title>
    <updated>2022-10-11T01:36:44Z</updated>
    <id>tag:github.com,2022-10-11:/calimarkus/JDStatusBarNotification</id>
    <link href="https://github.com/calimarkus/JDStatusBarNotification" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly customizable &amp; feature rich notifications displayed below the status bar. iOS 13+. Swift ready!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JDStatusBarNotification&lt;/h1&gt; &#xA;&lt;p&gt;Highly customizable &amp;amp; feature rich notifications displayed below the status bar. Customizable colors, fonts &amp;amp; animations. Supports notch and no-notch devices, landscape &amp;amp; portrait layouts and Drag-to-Dismiss. Can display a subtitle, an activity indicator, a progress bar &amp;amp; custom views out of the box. iOS 13+. Swift ready!&lt;/p&gt; &#xA;&lt;p&gt;Please open a &lt;a href=&#34;https://github.com/calimarkus/JDStatusBarNotification/issues&#34;&gt;Github issue&lt;/a&gt;, if you think anything is missing or wrong.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s some examples of the possibilities (the pill style is the default):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/173831886-d7c8cca9-9274-429d-b924-78f21a4f6092.jpg&#34; alt=&#34;examples&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full-Width styles in action (the pill styles support the same features / animations):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Drag to dismiss&lt;/th&gt; &#xA;   &lt;th&gt;Activity &amp;amp; Progress Bars&lt;/th&gt; &#xA;   &lt;th&gt;Custom styles&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/172001713-74d8c212-cd58-4687-8d6b-472e1bdb944d.gif&#34; alt=&#34;1&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/172001734-be3c4e36-46b6-4f9f-a3d5-59a51e5db675.gif&#34; alt=&#34;3&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/172001727-65aa6374-beeb-4a5c-adac-7e1967236b63.gif&#34; alt=&#34;2&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Landscape apps (device rotation also supported)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/172003389-7752a183-f960-4bef-87c7-fcf583e4a13f.gif&#34; alt=&#34;landscape&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;&lt;strong&gt;SwiftPM:&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Xcode -&amp;gt; File -&amp;gt; Add packages: &lt;code&gt;git@github.com:calimarkus/JDStatusBarNotification.git&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.cocoapods.org&#34;&gt;&lt;strong&gt;CocoaPods:&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;pod &#39;JDStatusBarNotification&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;strong&gt;Carthage:&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;github &#34;calimarkus/JDStatusBarNotification&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manually:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy the &lt;code&gt;JDStatusBarNotification/JDStatusBarNotification&lt;/code&gt; folder into your project.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Find the &lt;a href=&#34;http://calimarkus.github.io/JDStatusBarNotification/documentation/jdstatusbarnotification&#34;&gt;class documentation&lt;/a&gt; hosted on Github.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/calimarkus/JDStatusBarNotification/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;NotificationPresenter&lt;/code&gt; is a singleton. You don&#39;t need to initialize it anywhere. All examples are Swift code, but the class can be used in Objective-C as well. Also checkout the example project, which has many examples and includes a convenient style editor.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s some usage examples:&lt;/p&gt; &#xA;&lt;h3&gt;Showing a text notification&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s as simple as this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().present(text: &#34;Hello World&#34;)&#xA;&#xA;// with completion&#xA;NotificationPresenter.shared().present(text: &#34;Hello World&#34;) { presenter in&#xA;   // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dismissing a notification&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().dismiss(animated: true)&#xA;&#xA;// with completion&#xA;NotificationPresenter.shared().dismiss(afterDelay: 0.5) { presenter in&#xA;   // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Showing activity&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/175884729-c6255d41-4728-4bcb-bf72-fb12db01b5d5.gif&#34; alt=&#34;activity&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().present(text: &#34;&#34;)&#xA;NotificationPresenter.shared().displayActivityIndicator(true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Showing a custom left view&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/175884751-c93ffd31-a436-43d2-9eed-82d7cb23d8f6.gif&#34; alt=&#34;leftview&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let image = UIImageView(image: UIImage(systemName: &#34;gamecontroller.fill&#34;))&#xA;NotificationPresenter.shared().present(title: &#34;Player II&#34;, subtitle: &#34;Connected&#34;)&#xA;NotificationPresenter.shared().displayLeftView(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Showing progress&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/175886588-e1aba466-85fa-4e32-951a-cd368c7d553d.gif&#34; alt=&#34;progress&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().present(text: &#34;Animating Progress…&#34;) { presenter in&#xA;  presenter.animateProgressBar(toPercentage: 1.0, animationDuration: 0.75) { presenter in&#xA;    presenter.dismiss()&#xA;  }&#xA;}&#xA;&#xA;// or set an explicit percentage manually (without animation)&#xA;NotificationPresenter.shared().displayProgressBar(percentage: 0.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using other included styles&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s a few included styles you can easily use with the following API:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/175888059-3beeb659-b561-4e7c-9c66-6fbc683ae152.jpg&#34; alt=&#34;itworks&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().present(text: &#34;Yay, it works!&#34;, includedStyle: .success)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a custom UIView&lt;/h3&gt; &#xA;&lt;p&gt;If you want full control over the notification content and styling, you can use your own custom UIView.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/173234544-7a75edbe-00b1-437b-8651-2e63a1ba63c8.gif&#34; alt=&#34;customView&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/807039/173234636-b3745101-0723-4342-9a3a-32a868ea820e.gif&#34; alt=&#34;customView2&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// present a custom view&#xA;let button = UIButton(type: .system, primaryAction: UIAction { _ in&#xA;  NotificationPresenter.shared().dismiss()&#xA;})&#xA;button.setTitle(&#34;Dismiss!&#34;, for: .normal)&#xA;NotificationPresenter.shared().present(customView: button)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;You have the option to easily create &amp;amp; use fully customized styles.&lt;/p&gt; &#xA;&lt;p&gt;The closures of &lt;a href=&#34;http://calimarkus.github.io/JDStatusBarNotification/documentation/jdstatusbarnotification/notificationpresenter/updatedefaultstyle(_:)&#34;&gt;&lt;code&gt;updateDefaultStyle()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;http://calimarkus.github.io/JDStatusBarNotification/documentation/jdstatusbarnotification/notificationpresenter/addstyle(stylename:prepare:)&#34;&gt;&lt;code&gt;addStyle(styleName: String)&lt;/code&gt;&lt;/a&gt; provide a copy of the default style, which can then be modified. See the &lt;a href=&#34;http://calimarkus.github.io/JDStatusBarNotification/documentation/jdstatusbarnotification/statusbarnotificationstyle&#34;&gt;&lt;code&gt;JDStatusBarStyle&lt;/code&gt; class documentation&lt;/a&gt; for all options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// update default style&#xA;NotificationPresenter.shared().updateDefaultStyle { style in&#xA;   style.backgroundStyle.backgroundColor = .red&#xA;   style.textStyle.textColor = .white&#xA;   style.textStyle.font = UIFont.preferredFont(forTextStyle: .title3)&#xA;   // and many more options&#xA;   return style&#xA;}&#xA;&#xA;// set a named custom style&#xA;NotificationPresenter.shared().addStyle(styleName: &#34;xxx&#34;) { style in&#xA;   // ...&#xA;   return style&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Style Editor&lt;/h3&gt; &#xA;&lt;p&gt;Or checkout the example project, which contains a full style editor. You can tweak all customization options within the app, see the changes live and even export the configuration code for the newly created style to easily use it in your app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/174438815-4e3de17f-eb15-4281-b786-c1bfce7415da.jpg&#34; alt=&#34;style-editor&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Background Styles&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s two supported background styles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;/// The background is a floating pill around the text. The pill size and appearance can be customized. This is the default.&#xA;StatusBarNotificationBackgroundType.pill&#xA;/// The background covers the full display width and the full status bar + navbar height.&#xA;StatusBarNotificationBackgroundType.fullWidth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Animation Types&lt;/h3&gt; &#xA;&lt;p&gt;The supported animation types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;/// Slide in from the top of the screen and slide back out to the top. This is the default.&#xA;StatusBarNotificationAnimationType.move,&#xA;/// Fade-in and fade-out in place. No movement animation.&#xA;StatusBarNotificationAnimationType.fade,&#xA;/// Fall down from the top and bounce a little bit, before coming to a rest. Slides back out to the top.&#xA;StatusBarNotificationAnimationType.bounce,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;No notifications are showing up&lt;/h3&gt; &#xA;&lt;p&gt;If your app uses a &lt;code&gt;UIWindowScene&lt;/code&gt; the &lt;code&gt;NotificationPresenter&lt;/code&gt; needs to know about it before you present any notifications. The library attempts to find the correct WindowScene automatically, but that might fail. If it fails no notifications will show up at all. You can explicitly set the window scene to resolve this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;NotificationPresenter.shared().setWindowScene(windowScene)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Twitter&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m &lt;a href=&#34;http://twitter.com/calimarkus&#34;&gt;@calimarkus&lt;/a&gt; on Twitter. Feel free to &lt;a href=&#34;https://twitter.com/intent/tweet?button_hashtag=JDStatusBarNotification&amp;amp;text=Simple%20and%20customizable%20statusbar%20notifications%20for%20iOS!%20Check%20it%20out.%20https://github.com/calimarkus/JDStatusBarNotification&amp;amp;via=calimarkus&#34;&gt;post a tweet&lt;/a&gt;, if you like JDStatusBarNotification.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/intent/tweet?button_hashtag=JDStatusBarNotification&amp;amp;text=Simple%20and%20customizable%20statusbar%20notifications%20for%20iOS!%20Check%20it%20out.%20https://github.com/calimarkus/JDStatusBarNotification&amp;amp;via=calimarkus&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/807039/170856086-2c283e68-a44f-4a9f-b327-bd5a7c654455.png&#34; alt=&#34;tweetbutton&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Originally based on &lt;code&gt;KGStatusBar&lt;/code&gt; by Kevin Gibbon&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>junlovenet/GitTest</title>
    <updated>2022-10-11T01:36:44Z</updated>
    <id>tag:github.com,2022-10-11:/junlovenet/GitTest</id>
    <link href="https://github.com/junlovenet/GitTest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;sd&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hetima/currentwebpage</title>
    <updated>2022-10-11T01:36:44Z</updated>
    <id>tag:github.com,2022-10-11:/hetima/currentwebpage</id>
    <link href="https://github.com/hetima/currentwebpage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;take URL and title from current web browser (Safari and Chrome)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#currentwebpage&lt;/p&gt; &#xA;&lt;p&gt;Safari と Chrome で現在表示している URL とタイトルを取得するライブラリ、コマンドラインツールです。Firefox には対応していません。異なるデスクトップスペースにあるウインドウとフルスクリーンモードで開いているページに対しては希望する結果が返ってこないかもしれません。&lt;/p&gt; &#xA;&lt;p&gt;##コマンドラインツール 引数なしで実行すると Safari か Chrome いずれか前面にある方の URL とタイトルを改行で区切って stdout に出力します。ブラウザが見つからなかった場合やエラーが発生したら何も出力せずに終了します。github の Downloads ページにバイナリを置いておきます。&lt;/p&gt; &#xA;&lt;p&gt;###引数 -h ヘルプを表示&lt;br&gt; -u URL のみを取得&lt;br&gt; -t タイトルのみを取得&lt;br&gt; -s Safari のみを対象&lt;br&gt; -c Chrome のみを対象&lt;/p&gt; &#xA;&lt;p&gt;###ツールのファイル名 コマンドラインツールを複製してファイル名を変更すればデフォルトの挙動を変えることができます。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ファイル名に「URL」が含まれている: URL のみを取得&lt;/li&gt; &#xA; &lt;li&gt;ファイル名に「Title」が含まれている: タイトルのみを取得&lt;/li&gt; &#xA; &lt;li&gt;ファイル名に「Safari」が含まれている: Safari のみを対象&lt;/li&gt; &#xA; &lt;li&gt;ファイル名に「Chrome」が含まれている: Chrome のみを対象&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ファイル名を変更していても引数が優先されます。&lt;/p&gt; &#xA;&lt;p&gt;##ライブラリ&lt;/p&gt; &#xA;&lt;p&gt;CurrentWebPage.h と CurrentWebPage.m をプロジェクトに追加すれば使えます。&lt;/p&gt; &#xA;&lt;p&gt;###NSDictionary* CurrentWebPageCurrentInfo(NSString* prefer); Safari または Chrome で表示しているURL とタイトルを取得する。prefer に @&#34;safari&#34; もしくは @&#34;chrome&#34; を渡すと片方のブラウザだけを対象にします。&lt;/p&gt; &#xA;&lt;p&gt;###NSDictionary* CurrentWebPageSafariInfo(); Safari で表示しているURL とタイトルを取得します。&lt;/p&gt; &#xA;&lt;p&gt;###NSDictionary* CurrentWebPageChromeInfo(); Chrome で表示しているURL とタイトルを取得します。&lt;/p&gt; &#xA;&lt;p&gt;返り値はいずれも @&#34;url&#34; と @&#34;title&#34; をキーとする NSDictionary。見つからなかった場合は nil。&lt;/p&gt; &#xA;&lt;p&gt;##License (The IHNDIYL) I HAVE NOT DECIDED IT YET LICENSE Version 1, August 2012&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2012 hetima&#xA;&#xA;Everyone must wait for my decision about the license.&#xA;But probably you can do almost anything you want to do.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>