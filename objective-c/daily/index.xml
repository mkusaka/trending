<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-02T01:35:31Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dangdangfeng/Algorithm</title>
    <updated>2023-10-02T01:35:31Z</updated>
    <id>tag:github.com,2023-10-02:/dangdangfeng/Algorithm</id>
    <link href="https://github.com/dangdangfeng/Algorithm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;常用算法示例&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Algorithm&lt;/h1&gt; &#xA;&lt;p&gt;####常用算法示例&lt;/p&gt; &#xA;&lt;p&gt;#####当前包括：&lt;/p&gt; &#xA;&lt;p&gt;二叉树；链表；冒泡；快排；希尔排序；堆排序；插入排序；汉诺塔；归并排序；二分查找；BFPRT算法；深度优先；广度优先；迪杰斯特拉算法；动态规划。&lt;/p&gt; &#xA;&lt;p&gt;图文介绍：&lt;a href=&#34;http://www.jianshu.com/p/4f8e4071f85b&#34;&gt;iOS算法合集目录&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xjunior/XRSA</title>
    <updated>2023-10-02T01:35:31Z</updated>
    <id>tag:github.com,2023-10-02:/xjunior/XRSA</id>
    <link href="https://github.com/xjunior/XRSA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RSA encryption for objective-c&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;XRSA&lt;/h1&gt; &#xA;&lt;p&gt;Let&#39;s make it clear: the main part of this code wasn&#39;t written by me. Everything was found on the following URL:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://blog.iamzsx.me/show.html?id=155002&#34;&gt;http://blog.iamzsx.me/show.html?id=155002&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately I&#39;ve seen this code being distributed through StackOverflow and Blog posts. That&#39;s POS. I&#39;m just taking the job of making it into a proper repository and distribute it as a pod. Feel free to log bugs and send pull requests, I&#39;ll make sure to tackle them.&lt;/p&gt; &#xA;&lt;p&gt;If you want a good tutorial of how to use it, you can find it here in english:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jslim.net/blog/2013/01/05/rsa-encryption-in-ios-and-decrypt-it-using-php/&#34;&gt;http://jslim.net/blog/2013/01/05/rsa-encryption-in-ios-and-decrypt-it-using-php/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follows a copy and paste of that:&lt;/p&gt; &#xA;&lt;p&gt;RSA Encryption in iOS:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;generate a key-pair using SSL.&lt;/p&gt; &lt;p&gt;openssl req -x509 -out public_key.der -outform der -new -newkey rsa:1024 -keyout private_key.pem -days 3650&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;There are few points have to mention:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;public_key.der is an output based on x509 certificate. Note that in iOS must be .der format but not .pem&lt;/li&gt; &#xA; &lt;li&gt;private_key.pem is the private key that you can use it to decrypt&lt;/li&gt; &#xA; &lt;li&gt;rsa:1024 is the key length. The longer the length, the safer it is&lt;/li&gt; &#xA; &lt;li&gt;-days is the days for effective period for this cert. In this case, is 10-Years&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, drag public_key.der to your iOS&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a XRSA instance from your public key:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;3.1) Using a public key file bundled to your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NSString *keyPath = [[NSBundle mainBundle] pathForResource:@&#34;public_key&#34; ofType:@&#34;der&#34;];&#xA;XRSA *rsa = [[XRSA alloc] initWithPublicKey:keyPath];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.2) Using a in memory key (safer, since resource are easily recovered from .ipa files):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NSString *publicKey = @&#34;MIICs ... kT0=\n&#34;; // Base64 encoded key&#xA;NSData *data = [[NSData alloc] initWithBase64EncodedString:publicKey options:NSDataBase64DecodingIgnoreUnknownCharacters];&#xA;XRSA *rsa = [[XRSA alloc] initWithData:data];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Encrypting data:&lt;/p&gt; &lt;p&gt;if (rsa != nil) { NSLog(@&#34;%@&#34;, [rsa encryptToString:@&#34;This is plaintext&#34;]); } else { NSLog(@&#34;Error&#34;); }&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Aster0id/YCXMenuDemo_ObjC</title>
    <updated>2023-10-02T01:35:31Z</updated>
    <id>tag:github.com,2023-10-02:/Aster0id/YCXMenuDemo_ObjC</id>
    <link href="https://github.com/Aster0id/YCXMenuDemo_ObjC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;`TCXMenu` is an easy-to-use menu.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YCXMenuDemo_ObjC&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/YCXMenu.svg?style=flat&#34; alt=&#34;CocoaPods Version&#34;&gt; &lt;a href=&#34;https://github.com/Aster0id/YCXMenuDemo_ObjC/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/aster0id/YCXMenuDemo_ObjC.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;TCXMenu&lt;/code&gt; is an easy-to-use menu.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Aster0id/YCXMultilevelMenuView/raw/master/Assets/IMG_1877.PNG&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/Aster0id/YCXMenuDemo_ObjC/raw/master/Assets/YCXMenuDemo_ObjC_img1.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/Aster0id/YCXMenuDemo_ObjC/raw/master/Assets/YCXMenuDemo_ObjC_img2.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Your Podfile&#xA;platform :ios, &#39;7.0&#39;&#xA;pod &#39;YCXMenu&#39;, &#39;~&amp;gt; 0.0.11&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;YCXMenu&lt;/code&gt; folder into your project.&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;strong&gt;QuartzCore&lt;/strong&gt; framework to your project.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;&#xA;&#x9;//set title&#xA;&#x9;YCXMenuItem *menuTitle = [YCXMenuItem menuTitle:@&#34;Menu&#34; WithIcon:nil];&#xA;&#x9;menuTitle.foreColor = [UIColor whiteColor];&#xA;&#x9;menuTitle.titleFont = [UIFont boldSystemFontOfSize:20.0f];&#xA;&#xA;&#x9;//set logout button&#xA;&#x9;YCXMenuItem *logoutItem = [YCXMenuItem menuItem:@&#34;Logout&#34; image:nil target:self action:@selector(logout:)];&#xA;&#x9;logoutItem.foreColor = [UIColor redColor];&#xA;&#x9;logoutItem.alignment = NSTextAlignmentCenter;&#xA;&#xA;&#x9;NSArray *items = @[menuTitle,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; [YCXMenuItem menuItem:@&#34;UserCenter&#34;&#xA;                                    image:nil&#xA;                                      tag:100&#xA;                                 userInfo:@{@&#34;title&#34;:@&#34;Menu&#34;}],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; [YCXMenuItem menuItem:@&#34;CheckOut&#34;&#xA;                                    image:nil&#xA;                                      tag:102&#xA;                                 userInfo:@{@&#34;title&#34;:@&#34;Menu&#34;}],&#xA;                    logoutItem&#xA;                    ];&#xA;&#xA;&#x9;[YCXMenu showMenuInView:self.view fromRect:btn.frame menuItems:items selected:^(NSInteger index, YCXMenuItem *item) {&#xA;            NSLog(@&#34;%@&#34;,item);&#xA;&#x9;}];&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;##Change&lt;/p&gt; &#xA;&lt;p&gt;###0.0.11&lt;/p&gt; &#xA;&lt;p&gt;Menu显示/消失的通知不足以满足需要，现改为4个通知。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;删除2个通知&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;YCXMenuAppearNotification. Menu显示时的通知。&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;YCXMenuDisappearNotification. Menu消失时的通知。&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;新增4个通知&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;YCXMenuWillAppearNotification. Menu将要显示时的通知。&lt;/li&gt; &#xA;   &lt;li&gt;YCXMenuDidAppearNotification. Menu已经显示时的通知。&lt;/li&gt; &#xA;   &lt;li&gt;YCXMenuWillDisappearNotification. Menu将要消失时的通知。&lt;/li&gt; &#xA;   &lt;li&gt;YCXMenuDidDisappearNotification. Menu已经消失时的通知。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.10&lt;/p&gt; &#xA;&lt;p&gt;因为Menu控件整体使用类方法控制属性及显示/隐藏的操作。因此使用通知的方式获取Menu显示/消失等状态更为方便合理。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加2个通知 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;YCXMenuAppearNotification. Menu显示时的通知。&lt;/li&gt; &#xA;   &lt;li&gt;YCXMenuDisappearNotification. Menu消失时的通知。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.9&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加&lt;code&gt;+(void)setMenuItemMarginY:&lt;/code&gt;方法，可以根据此方法控制菜单中每个元素在垂直方向上的内边距值,默认 12.0f;&lt;/li&gt; &#xA; &lt;li&gt;Add function &lt;code&gt;+(void)setMenuItemMarginY:&lt;/code&gt;, you can use this function to set item&#39;s margin, default 12.0f;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.7&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加&lt;code&gt;+(void)setSeparatorColor:&lt;/code&gt;方法，可以根据此方法控制分割线的颜色,默认 [UIColor colorWithRed:0.44 green:0.44 blue:0.44 alpha:1];&lt;/li&gt; &#xA; &lt;li&gt;Add function &lt;code&gt;+(void)setSeparatorColor:&lt;/code&gt;, you can use this function to set menu&#39;s separator color, default [UIColor colorWithRed:0.44 green:0.44 blue:0.44 alpha:1];&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.5&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;添加&lt;code&gt;+(void)setCornerRadius:(CGFloat)cornerRadius;&lt;/code&gt;方法，可以根据此方法控制选择的&lt;code&gt;Item&lt;/code&gt;圆角,默认 6.0f;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add function &lt;code&gt;+(void)setCornerRadius:(CGFloat)cornerRadius;&lt;/code&gt;, you can use this function to set item&#39;s corner radius, default 6.0f;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;添加&lt;code&gt;+(void)setArrowSize:(CGFloat)arrowSize;&lt;/code&gt;方法，可以根据此方法控制选择的&lt;code&gt;Item&lt;/code&gt;箭头尺寸,默认 10.0f;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add function &lt;code&gt;+(void)setArrowSize:(CGFloat)arrowSize;&lt;/code&gt;, you can use this function to set item&#39;s arrow size, default 10.0f;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.4&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加&lt;code&gt;+(UIColor*)setSelectedColor&lt;/code&gt;方法，可以根据此方法控制选择的&lt;code&gt;Item&lt;/code&gt;颜色,默认蓝色;&lt;/li&gt; &#xA; &lt;li&gt;Add function &lt;code&gt;+(UIColor*)setSelectedColor;&lt;/code&gt;,you can use this function to set item&#39;s selected Color,default blue;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;###0.0.3&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;+(BOOL)isShow&lt;/code&gt; 方法, 可以根据此方法手动控制YCXMenu的显示和隐藏;&lt;/li&gt; &#xA; &lt;li&gt;Add function &lt;code&gt;+(BOOL)isShow&lt;/code&gt;, you can set show or hide YCXMenu expediently;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XFerris&#34;&gt;XFerris&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;MIT License.&lt;/p&gt;</summary>
  </entry>
</feed>