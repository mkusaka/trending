<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-09T01:43:35Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uber/ios-snapshot-test-case</title>
    <updated>2023-05-09T01:43:35Z</updated>
    <id>tag:github.com,2023-05-09:/uber/ios-snapshot-test-case</id>
    <link href="https://github.com/uber/ios-snapshot-test-case" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Snapshot view unit tests for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iOSSnapshotTestCase (previously &lt;a href=&#34;https://github.com/facebookarchive/ios-snapshot-test-case&#34;&gt;FBSnapshotTestCase&lt;/a&gt;)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/uber/ios-snapshot-test-case/actions&#34;&gt;&lt;img src=&#34;https://github.com/uber/ios-snapshot-test-case/actions/workflows/main.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/cocoapods/v/iOSSnapshotTestCase.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/iOSSnapshotTestCase.svg?sanitize=true&#34; alt=&#34;CocoaPods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&#34; alt=&#34;Swift Package Manager&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;p&gt;A &#34;snapshot test case&#34; takes a configured &lt;code&gt;UIView&lt;/code&gt; or &lt;code&gt;CALayer&lt;/code&gt; and uses the necessary UIKit or Core Animation methods to generate an image snapshot of its contents. It compares this snapshot to a &#34;reference image&#34; stored in your source code repository and fails the test if the two images don&#39;t match.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;We write a lot of UI code. There are a lot of edge cases that we want to handle correctly when you are creating &lt;code&gt;UIView&lt;/code&gt; instances:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What if there is more text than can fit in the space available?&lt;/li&gt; &#xA; &lt;li&gt;What if an image doesn&#39;t match the size of an image view?&lt;/li&gt; &#xA; &lt;li&gt;What should the highlighted state look like?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s straightforward to test logic code, but less obvious how you should test views. You can do a lot of rectangle asserts, but these are hard to understand or visualize. Looking at an image diff shows you exactly what changed and how it will look to users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;iOSSnapshotTestCase&lt;/code&gt; was developed to make snapshot tests easy.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1: Add iOSSnapshotTestCase to your project&lt;/h3&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;Add the following lines to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;target &#34;Tests&#34; do&#xA;  use_frameworks!&#xA;  pod &#39;iOSSnapshotTestCase&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your test target is Objective-C only use &lt;code&gt;iOSSnapshotTestCase/Core&lt;/code&gt; instead, which doesn&#39;t contain Swift support.&lt;/p&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;Add the following line to your Cartfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-carthage&#34;&gt;github &#34;uber/ios-snapshot-test-case&#34; ~&amp;gt; 8.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;p&gt;Add the following line to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-spm&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/uber/ios-snapshot-test-case.git&#34;, from: &#34;8.0.0&#34;),&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or integrate with Xcode via &lt;code&gt;File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency...&lt;/code&gt; using the URL of the repository. We recommend using &#34;Up to Next Major&#34; with the Version field, as we use Semantic Versioning and only put breaking changes in major versions.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Setup Test Scheme&lt;/h3&gt; &#xA;&lt;p&gt;Replace &#34;Tests&#34; with the name of your test project.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;There are &lt;a href=&#34;https://github.com/uber/ios-snapshot-test-case/raw/main/src/iOSSnapshotTestCaseCore/Public/FBSnapshotTestCase.h#L17-L31&#34;&gt;three ways&lt;/a&gt; of setting reference image directories, the recommended one is to define &lt;code&gt;FB_REFERENCE_IMAGE_DIR&lt;/code&gt; in your scheme. This should point to the directory where you want reference images to be stored. We normally use this:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;FB_REFERENCE_IMAGE_DIR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$(SOURCE_ROOT)/$(PROJECT_NAME)Tests/ReferenceImages&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;IMAGE_DIFF_DIR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$(SOURCE_ROOT)/$(PROJECT_NAME)Tests/FailureDiffs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Define the &lt;code&gt;IMAGE_DIFF_DIR&lt;/code&gt; to the directory where you want to store diffs of failed snapshots. There are also &lt;a href=&#34;https://github.com/uber/ios-snapshot-test-case/raw/main/src/iOSSnapshotTestCaseCore/Public/FBSnapshotTestCase.h#L33-L45&#34;&gt;three ways&lt;/a&gt; to set failed image diff directories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/uber/ios-snapshot-test-case/main/FBSnapshotTestCaseDemo/Scheme_FB_REFERENCE_IMAGE_DIR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Creating a snapshot test&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Subclass &lt;code&gt;FBSnapshotTestCase&lt;/code&gt; instead of &lt;code&gt;XCTestCase&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;From within your test, use &lt;code&gt;FBSnapshotVerifyView&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the test once with &lt;code&gt;self.recordMode = YES;&lt;/code&gt; in the test&#39;s &lt;code&gt;-setUp&lt;/code&gt; method. (This creates the reference images on disk.)&lt;/li&gt; &#xA; &lt;li&gt;Remove the line enabling record mode and run the test.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically names reference images on disk according to test class and selector.&lt;/li&gt; &#xA; &lt;li&gt;Prints a descriptive error message to the console on failure. (Bonus: failure message includes a one-line command to see an image diff if you have &lt;a href=&#34;http://www.kaleidoscopeapp.com&#34;&gt;Kaleidoscope&lt;/a&gt; installed.)&lt;/li&gt; &#xA; &lt;li&gt;Supply an optional &#34;identifier&#34; if you want to perform multiple snapshots in a single test method.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;code&gt;CALayer&lt;/code&gt; via &lt;code&gt;FBSnapshotVerifyLayer&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;usesDrawViewHierarchyInRect&lt;/code&gt; to handle cases like &lt;code&gt;UIVisualEffect&lt;/code&gt;, &lt;code&gt;UIAppearance&lt;/code&gt; and Size Classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fileNameOptions&lt;/code&gt; to control appending the device model (&lt;code&gt;iPhone&lt;/code&gt;, &lt;code&gt;iPad&lt;/code&gt;, &lt;code&gt;iPod Touch&lt;/code&gt;, etc), OS version, screen size and screen scale to the images (allowing to have multiple tests for the same «snapshot» for different &lt;code&gt;OS&lt;/code&gt;s and devices).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;Your unit tests &lt;em&gt;should&lt;/em&gt; be inside an &#34;application&#34; bundle, not a &#34;logic/library&#34; test bundle. (That is, it should be run within the Simulator so that it has access to UIKit.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, if you are writing snapshot tests inside a library/framework, you might want to keep your test bundle as a library test bundle without a Test Host.&lt;/p&gt; &#xA;&lt;p&gt;Read more on this &lt;a href=&#34;https://raw.githubusercontent.com/uber/ios-snapshot-test-case/main/docs/LibraryVsApplicationTestBundles.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;iOSSnapshotTestCase&lt;/code&gt; was written at Facebook by Jonathan Dann with significant contributions by Todd Krabach.&lt;/p&gt; &#xA;&lt;p&gt;Today it is maintained by &lt;a href=&#34;https://github.com/uber&#34;&gt;Uber&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;iOSSnapshotTestCase&lt;/code&gt; is MIT–licensed. See &lt;a href=&#34;https://github.com/uber/ios-snapshot-test-case/raw/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ginsudev/YTMusicUltimate</title>
    <updated>2023-05-09T01:43:35Z</updated>
    <id>tag:github.com,2023-05-09:/ginsudev/YTMusicUltimate</id>
    <link href="https://github.com/ginsudev/YTMusicUltimate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The best tweak for YouTube Music iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YTMusicUltimate&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/38832025/235781424-06d81647-b3db-4d9b-94dc-cd65cdf09145.png?raw=true)&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/38832025/235781207-6d1ad44e-0c32-4aec-9c75-cb928ca8a0d3.png?raw=true)&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; The best tweak for the YouTube Music on iOS. &lt;/p&gt; &#xA;&lt;h2&gt;Download Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jailbreak:&lt;/strong&gt; Add &lt;strong&gt;&lt;a href=&#34;https://ginsu.dev/repo&#34;&gt;https://ginsu.dev/repo&lt;/a&gt;&lt;/strong&gt; to your favorite installer and download latest version from there, or from &lt;strong&gt;&lt;a href=&#34;https://github.com/ginsudev/YTMusicUltimate/releases&#34;&gt;Releases&lt;/a&gt;&lt;/strong&gt; page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(arm.deb version for Rootless and arm64.deb version for Rootless devices)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sideloading (Without jailbreak):&lt;/strong&gt; Download IPA file &lt;strong&gt;&lt;a href=&#34;https://github.com/ginsudev/YTMusicUltimate/releases&#34;&gt;Releases&lt;/a&gt;&lt;/strong&gt; page and install the using signer such as &lt;strong&gt;&lt;a href=&#34;https://www.idownloadblog.com/2022/03/28/sideload-apps-iphone-ipad-apple-silicon-macs-sideloady/&#34;&gt;Sideloadly&lt;/a&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;a href=&#34;https://faq.altstore.io/&#34;&gt;AltStore&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Or sign the app with a paid certificate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build the package by yourself on your device&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;strong&gt;&lt;a href=&#34;https://theos.dev/docs/installation&#34;&gt;Theos&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repo &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository&#34;&gt;using git&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cd your YTMusicUltimate folder and run:&lt;/p&gt; &lt;p&gt;• &#39;&lt;strong&gt;make clean package&lt;/strong&gt;&#39; to build deb for rootful device&lt;/p&gt; &lt;p&gt;• &#39;&lt;strong&gt;make clean package ROOTLESS=1&lt;/strong&gt;&#39; to build deb for rootless device&lt;/p&gt; &lt;p&gt;• &#39;&lt;strong&gt;make clean package SIDELOADING=1&lt;/strong&gt;&#39; to build deb for injecting in to ipa&lt;/p&gt; &lt;p&gt;• To learn how to inject tweaks in to ipa visit &lt;strong&gt;&lt;a href=&#34;https://github.com/Al4ise/Azule&#34;&gt;here (Azule)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Made with ❤ by Ginsu and Dayanch96&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zendesk/core_sdk_ios</title>
    <updated>2023-05-09T01:43:35Z</updated>
    <id>tag:github.com,2023-05-09:/zendesk/core_sdk_ios</id>
    <link href="https://github.com/zendesk/core_sdk_ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zendesk Core SDK for iOS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;em&gt;Use of this software is subject to important terms and conditions as set forth in the License file&lt;/em&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Zendesk Core SDK for iOS&lt;/h1&gt; &#xA;&lt;p&gt;Zendesk Core SDK for mobile. The Core SDK is a shared library among the Zendesk product SDKs. It is used to shared core functionality between our products like identity and storage.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find our documentation on &lt;a href=&#34;https://developer.zendesk.com/embeddables&#34;&gt;https://developer.zendesk.com/embeddables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature requests and issues&lt;/h2&gt; &#xA;&lt;p&gt;All feature requests and issues are welcomed. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/zendesk/core_sdk_ios/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to find out how to contact us.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and license&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2020 Zendesk&lt;/p&gt; &#xA;&lt;p&gt;By downloading or using the Zendesk Core SDK, You agree to the Zendesk Master Subscription Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&lt;/a&gt; and Application Developer and API License Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&lt;/a&gt; and acknowledge that such terms govern Your use of and access to the Core SDK.&lt;/p&gt; &#xA;&lt;p&gt;If You make any Contributions (defined below) to the Zendesk Core SDK, You hereby grant Zendesk a royalty-free, worldwide, transferable, sub-licensable, irrevocable and perpetual license to incorporate into the Service or the Zendesk API or otherwise use and commercially exploit any Contributions. “Contribution” shall mean any work of authorship, including any modifications or additions to the Mobile SDK or derivative works thereof, that is submitted to Zendesk by You.&lt;/p&gt;</summary>
  </entry>
</feed>