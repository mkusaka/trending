<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-18T01:37:29Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dunada/4bugz</title>
    <updated>2023-12-18T01:37:29Z</updated>
    <id>tag:github.com,2023-12-18:/dunada/4bugz</id>
    <link href="https://github.com/dunada/4bugz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A iPhone app that allows you to perform common tasks in your FogBugz account&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>lmirosevic/GBDeviceInfo</title>
    <updated>2023-12-18T01:37:29Z</updated>
    <id>tag:github.com,2023-12-18:/lmirosevic/GBDeviceInfo</id>
    <link href="https://github.com/lmirosevic/GBDeviceInfo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Detects the hardware, software and display of the current iOS or Mac OS X device at runtime.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lmirosevic/GBDeviceInfo/master/logo.png&#34; alt=&#34;GBDeviceInfo logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detects the hardware, software and display of the current iOS or Mac OS X device at runtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/GBDeviceInfo.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/badge/license-Apache_2-green.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;iOS&lt;/h2&gt; &#xA;&lt;p&gt;Simple usage (examples on iPhone 6 running iOS 8.1.3):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[GBDeviceInfo deviceInfo] isOperatingSystemAtLeastVersion:@&#34;8.0&#34;]; // #&amp;gt; YES&#xA;&#xA;[GBDeviceInfo deviceInfo].isJailbroken;                             // #&amp;gt; NO&#xA;&#xA;[GBDeviceInfo deviceInfo].model;                                    // #&amp;gt; GBDeviceModeliPhone6&#xA;[GBDeviceInfo deviceInfo].family;                                   // #&amp;gt; GBDeviceFamilyiPad&#xA;&#xA;[GBDeviceInfo deviceInfo].modelString;                              // #&amp;gt; @&#34;iPhone 6&#34;&#xA;[GBDeviceInfo deviceInfo].osVersion.major;                          // #&amp;gt; 8&#xA;[GBDeviceInfo deviceInfo].osVersion.minor;                          // #&amp;gt; 1&#xA;&#xA;[GBDeviceInfo deviceInfo].displayInfo.pixelsPerInch;                // #&amp;gt; 326&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also reuse the returned object to save some typing. First assign the object to some variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;GBDeviceInfo *deviceInfo = [GBDeviceInfo deviceInfo];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then get whatever you like from the object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;//Model numbers&#xA;NSLog(@&#34;Major device ver: %d&#34;, deviceInfo.deviceVersion.major);     // Major device ver: 7&#xA;NSLog(@&#34;Major device ver: %d&#34;, deviceInfo.deviceVersion.minor);     // Minor device ver: 2&#xA;&#xA;&#xA;//Specific model&#xA;if (deviceInfo.model == GBDeviceModeliPhone6) {&#xA;    NSLog(@&#34;It&#39;s a 6&#34;);                                             // It&#39;s a 6&#xA;}&#xA;&#xA;//Family of device&#xA;if (deviceInfo.family != GBDeviceFamilyiPad) {&#xA;    NSLog(@&#34;It&#39;s not an iPad&#34;);                                     // It&#39;s not an iPad&#xA;}&#xA;&#xA;//Screen type&#xA;if (deviceInfo.display == GBDeviceDisplayiPhone4p7Inch) {&#xA;    NSLog(@&#34;4.7 Inch display&#34;);                                     // 4.7 Inch display&#xA;}&#xA;&#xA;//iOS Version&#xA;if (deviceInfo.majoriOSVersion &amp;gt;= 6) {&#xA;    NSLog(@&#34;We&#39;ve got iOS 6+&#34;);                                     // We&#39;ve got iOS 6+&#xA;}&#xA;&#xA;//Raw systemInfo string&#xA;NSLog(@&#34;systemInfo: %@&#34;, deviceInfo.rawSystemInfoString);           // systemInfo: iPhone7,2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to import header.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;GBDeviceInfo/GBDeviceInfo.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;isJailbroken&lt;/code&gt; property, make sure you first add the Jailbreak subspec to your project&#39;s Podfile, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;GBDeviceInfo&#39;, &#39;~&amp;gt; 6.0&#39;&#xA;pod &#39;GBDeviceInfo/Jailbreak&#39;, &#39;~&amp;gt; 6.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Missing a property you need? Submit a Pull Request or contact &lt;a href=&#34;mailto:sales@goonbee.com?subject=GBDeviceInfo%20Enterprise&#34;&gt;sales@goonbee.com&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;OS X&lt;/h2&gt; &#xA;&lt;p&gt;Simple usage (examples on a Mac Pro with an Ivy Bridge 3770K processor running 10.8.2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[GBDeviceInfo deviceInfo] isOperatingSystemAtLeastVersion:@&#34;10.8&#34;]; // #&amp;gt; YES&#xA;&#xA;[GBDeviceInfo deviceInfo].osVersion.major;                           // #&amp;gt; 10&#xA;[GBDeviceInfo deviceInfo].osVersion.minor;                           // #&amp;gt; 8&#xA;[GBDeviceInfo deviceInfo].family == GBDeviceFamilyMacPro;            // #&amp;gt; YES&#xA;[GBDeviceInfo deviceInfo].isMacAppStoreAvailable;                    // #&amp;gt; YES&#xA;[GBDeviceInfo deviceInfo].isIAPAvailable;                            // #&amp;gt; YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also reuse the returned object to save some typing. First assign the object to some variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;GBDeviceInfo *deviceInfo = [GBDeviceInfo deviceInfo];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then get whatever you like from the object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;GBDeviceInfo *deviceInfo = [GBDeviceInfo deviceInfo];&#xA;&#xA;//OS X Version&#xA;if (deviceInfo.osVersion.minor &amp;gt;= 8) {&#xA;    NSLog(@&#34;It&#39;s OS X 10.8+ (Mountain Lion)&#34;);                     // It&#39;s OS X 10.8+ (Mountain Lion)&#xA;}&#xA;if (deviceInfo.osVersion.patch == 2) {&#xA;    NSLog(@&#34;Must be running x.x.2&#34;);                               // Must be running x.x.2&#xA;}&#xA;&#xA;//App Store stuff&#xA;if (deviceInfo.isMacAppStoreAvailable) {&#xA;    NSLog(@&#34;App store is available.&#34;);                             // App store is available&#xA;}&#xA;if (deviceInfo.isIAPAvailable) {&#xA;    NSLog(@&#34;...and so are IAPs&#34;);                                  // ...and so are IAPs&#xA;}&#xA;&#xA;//Hardware stuff&#xA;NSLog(@&#34;SystemInfo: %@&#34;, deviceInfo.rawSystemInfoString);          // SystemInfo: MacPro3,1&#xA;NSLog(@&#34;Major device ver: %d&#34;, deviceInfo.deviceVersion.major);    // Major device ver: 3&#xA;NSLog(@&#34;Minor device ver: %d&#34;, deviceInfo.deviceVersion.minor);    // Minor device ver: 1&#xA;NSLog(@&#34;Node name: %@&#34;, deviceInfo.nodeName);                      // Node name: MyMac.local&#xA;NSLog(@&#34;RAM: %.3f GB&#34;, deviceInfo.physicalMemory);                 // RAM: 16.000 GB&#xA;NSLog(@&#34;CPU freq: %.3f GHz&#34;, deviceInfo.cpu.frequency);            // CPU freq: 3.500 GHz&#xA;NSLog(@&#34;Number of cores: %d&#34;, deviceInfo.cpu.numberOfCores);       // Number of cores: 8&#xA;NSLog(@&#34;L2 Cache size: %.0f KB&#34;, deviceInfo.cpu.l2CacheSize);      // L2 Cache size: 256 KB&#xA;&#xA;//Endianness&#xA;if (deviceInfo.byteOrder == GBByteOrderLittleEndian) {&#xA;    NSLog(@&#34;Little Endian&#34;);                                       // Little Endian&#xA;}&#xA;&#xA;//Family of device&#xA;if (deviceInfo.family != GBDeviceFamilyMacBookAir) {&#xA;    NSLog(@&#34;It&#39;s not a Macbook Air&#34;);                              // It&#39;s not a Macbook Air&#xA;}&#xA;&#xA;//Screen resolution&#xA;if (deviceInfo.screenResolution.width == 1920 &amp;amp;&amp;amp; deviceInfo.screenResolution.height == 1200) {&#xA;    NSLog(@&#34;Resolution: 1920x1200&#34;);                              // Resolution: 1920x1200&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to import framework:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;GBDeviceInfo/GBDeviceInfo.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Missing a property you need? Submit a Pull Request or contact &lt;a href=&#34;mailto:sales@goonbee.com?subject=GBDeviceInfo%20Enterprise&#34;&gt;sales@goonbee.com&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;iOS Device support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iPhone1&lt;/li&gt; &#xA; &lt;li&gt;iPhone3G&lt;/li&gt; &#xA; &lt;li&gt;iPhone3GS&lt;/li&gt; &#xA; &lt;li&gt;iPhone4&lt;/li&gt; &#xA; &lt;li&gt;iPhone4S&lt;/li&gt; &#xA; &lt;li&gt;iPhone5&lt;/li&gt; &#xA; &lt;li&gt;iPhone5C&lt;/li&gt; &#xA; &lt;li&gt;iPhone5S&lt;/li&gt; &#xA; &lt;li&gt;iPhone6&lt;/li&gt; &#xA; &lt;li&gt;iPhone6Plus&lt;/li&gt; &#xA; &lt;li&gt;iPhone6S&lt;/li&gt; &#xA; &lt;li&gt;iPhone6SPlus&lt;/li&gt; &#xA; &lt;li&gt;iPhone7&lt;/li&gt; &#xA; &lt;li&gt;iPhone7Plus&lt;/li&gt; &#xA; &lt;li&gt;iPhone8&lt;/li&gt; &#xA; &lt;li&gt;iPhone8Plus&lt;/li&gt; &#xA; &lt;li&gt;iPhoneSE&lt;/li&gt; &#xA; &lt;li&gt;iPhoneSE2&lt;/li&gt; &#xA; &lt;li&gt;iPhoneSE3&lt;/li&gt; &#xA; &lt;li&gt;iPhoneX&lt;/li&gt; &#xA; &lt;li&gt;iPhoneXR&lt;/li&gt; &#xA; &lt;li&gt;iPhoneXS&lt;/li&gt; &#xA; &lt;li&gt;iPhoneXSMax&lt;/li&gt; &#xA; &lt;li&gt;iPhone11&lt;/li&gt; &#xA; &lt;li&gt;iPhone11Pro&lt;/li&gt; &#xA; &lt;li&gt;iPhone11ProMax&lt;/li&gt; &#xA; &lt;li&gt;iPhone12Mini&lt;/li&gt; &#xA; &lt;li&gt;iPhone12&lt;/li&gt; &#xA; &lt;li&gt;iPhone12Pro&lt;/li&gt; &#xA; &lt;li&gt;iPhone12ProMax&lt;/li&gt; &#xA; &lt;li&gt;iPhone13Mini&lt;/li&gt; &#xA; &lt;li&gt;iPhone13&lt;/li&gt; &#xA; &lt;li&gt;iPhone13Pro&lt;/li&gt; &#xA; &lt;li&gt;iPhone13ProMax&lt;/li&gt; &#xA; &lt;li&gt;iPhone14&lt;/li&gt; &#xA; &lt;li&gt;iPhone14Plus&lt;/li&gt; &#xA; &lt;li&gt;iPhone14Pro&lt;/li&gt; &#xA; &lt;li&gt;iPhone14ProMax&lt;/li&gt; &#xA; &lt;li&gt;iPhone15&lt;/li&gt; &#xA; &lt;li&gt;iPhone15Plus&lt;/li&gt; &#xA; &lt;li&gt;iPhone15Pro&lt;/li&gt; &#xA; &lt;li&gt;iPhone15ProMax&lt;/li&gt; &#xA; &lt;li&gt;iPad1&lt;/li&gt; &#xA; &lt;li&gt;iPad2&lt;/li&gt; &#xA; &lt;li&gt;iPad3&lt;/li&gt; &#xA; &lt;li&gt;iPad4&lt;/li&gt; &#xA; &lt;li&gt;iPad5&lt;/li&gt; &#xA; &lt;li&gt;iPad6&lt;/li&gt; &#xA; &lt;li&gt;iPad7&lt;/li&gt; &#xA; &lt;li&gt;iPad8&lt;/li&gt; &#xA; &lt;li&gt;iPad9&lt;/li&gt; &#xA; &lt;li&gt;iPad10&lt;/li&gt; &#xA; &lt;li&gt;iPadMini1&lt;/li&gt; &#xA; &lt;li&gt;iPadMini2&lt;/li&gt; &#xA; &lt;li&gt;iPadMini3&lt;/li&gt; &#xA; &lt;li&gt;iPadMini4&lt;/li&gt; &#xA; &lt;li&gt;iPadMini5&lt;/li&gt; &#xA; &lt;li&gt;iPadMini6&lt;/li&gt; &#xA; &lt;li&gt;iPadAir1&lt;/li&gt; &#xA; &lt;li&gt;iPadAir2&lt;/li&gt; &#xA; &lt;li&gt;iPadAir3&lt;/li&gt; &#xA; &lt;li&gt;iPadAir4&lt;/li&gt; &#xA; &lt;li&gt;iPadAir5&lt;/li&gt; &#xA; &lt;li&gt;iPadPro9p7Inch&lt;/li&gt; &#xA; &lt;li&gt;iPadPro10p5Inch&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch2&lt;/li&gt; &#xA; &lt;li&gt;iPadPro11Inch&lt;/li&gt; &#xA; &lt;li&gt;iPadPro11Inch2&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch3&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch4&lt;/li&gt; &#xA; &lt;li&gt;iPadPro11Inch3&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch5&lt;/li&gt; &#xA; &lt;li&gt;iPadPro11Inch4&lt;/li&gt; &#xA; &lt;li&gt;iPadPro12p9Inch6&lt;/li&gt; &#xA; &lt;li&gt;iPod1&lt;/li&gt; &#xA; &lt;li&gt;iPod2&lt;/li&gt; &#xA; &lt;li&gt;iPod3&lt;/li&gt; &#xA; &lt;li&gt;iPod4&lt;/li&gt; &#xA; &lt;li&gt;iPod5&lt;/li&gt; &#xA; &lt;li&gt;iPod6&lt;/li&gt; &#xA; &lt;li&gt;iPod7&lt;/li&gt; &#xA; &lt;li&gt;iPhone Simulator&lt;/li&gt; &#xA; &lt;li&gt;iPad Simulator&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OS X Device family support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iMac&lt;/li&gt; &#xA; &lt;li&gt;iMacPro&lt;/li&gt; &#xA; &lt;li&gt;MacMini&lt;/li&gt; &#xA; &lt;li&gt;MacStudio&lt;/li&gt; &#xA; &lt;li&gt;MacPro&lt;/li&gt; &#xA; &lt;li&gt;MacBook&lt;/li&gt; &#xA; &lt;li&gt;MacBookAir&lt;/li&gt; &#xA; &lt;li&gt;MacBookPro&lt;/li&gt; &#xA; &lt;li&gt;Xserve&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:luka@goonbee.com&#34;&gt;Luka Mirosevic&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/lmirosevic&#34;&gt;@lmirosevic&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Premium support, integration, use-case adaptations and consulting available. Contact &lt;a href=&#34;mailto:sales@goonbee.com?subject=GBDeviceInfo%20Enterprise&#34;&gt;sales@goonbee.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2015 Goonbee&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this work except in compliance with the License. You may obtain a copy of the License in the LICENSE file, or at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jessesquires/JSQSystemSoundPlayer</title>
    <updated>2023-12-18T01:37:29Z</updated>
    <id>tag:github.com,2023-12-18:/jessesquires/JSQSystemSoundPlayer</id>
    <link href="https://github.com/jessesquires/JSQSystemSoundPlayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fancy Obj-C wrapper for Cocoa System Sound Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSQSystemSoundPlayer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/jessesquires/JSQSystemSoundPlayer&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/jessesquires/JSQSystemSoundPlayer.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/JSQSystemSoundPlayer&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/JSQSystemSoundPlayer.svg?sanitize=true&#34; alt=&#34;Version Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/JSQSystemSoundPlayer.svg?sanitize=true&#34; alt=&#34;license MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/jessesquires/JSQSystemSoundPlayer&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/jessesquires/JSQSystemSoundPlayer/branch/develop/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jessesquires.github.io/JSQSystemSoundPlayer&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/JSQSystemSoundPlayer.svg?sanitize=true&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A fancy Obj-C wrapper for Cocoa &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/AudioToolbox/Reference/SystemSoundServicesReference/Reference/reference.html&#34;&gt;System Sound Services&lt;/a&gt;, for iOS and OS X.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This library is a light-weight component to play sound effects in your app. To determine your audio needs, see &lt;a href=&#34;https://developer.apple.com/library/ios/DOCUMENTATION/AudioVideo/Conceptual/MultimediaPG/UsingAudio/UsingAudio.html#//apple_ref/doc/uid/TP40009767-CH2-SW10&#34;&gt;Best Practices for iOS Audio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;When your sole audio need is to play alerts and user-interface sound effects, use Core Audio’s System Sound Services.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;Your sound files must be:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No longer than 30 seconds in duration&lt;/li&gt; &#xA;  &lt;li&gt;In linear PCM or IMA4 (IMA/ADPCM) format&lt;/li&gt; &#xA;  &lt;li&gt;Packaged in a &lt;code&gt;.caf&lt;/code&gt;, &lt;code&gt;.aif&lt;/code&gt;, or &lt;code&gt;.wav&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If this does not fit your needs, then this library is not for you! See &lt;a href=&#34;https://developer.apple.com/library/ios/DOCUMENTATION/AVFoundation/Reference/AVAudioPlayerClassReference/Reference/Reference.html&#34;&gt;AVAudioPlayer&lt;/a&gt;, instead.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jessesquires/JSQSystemSoundPlayer/develop/Screenshots/ios.png&#34; alt=&#34;screenshot ios&#34;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/jessesquires/JSQSystemSoundPlayer/develop/Screenshots/osx.png&#34; alt=&#34;screenshot osx&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;JSQSystemSoundPlayer *sharedPlayer = [JSQSystemSoundPlayer sharedPlayer];&#xA;&#xA;// Play a built-in sound&#xA;[sharedPlayer playSoundWithSoundID:1000 // new mail sound&#xA;                           asAlert:YES&#xA;                        completion:^{&#xA;                            NSLog(@&#34;Sound finished playing. Executing completion block...&#34;);&#xA;                        }];&#xA;&#xA;// Play a sound from a file&#xA;[sharedPlayer playSoundWithFilename:@&#34;Basso&#34;&#xA;                      fileExtension:kJSQSystemSoundTypeAIF&#xA;                         completion:^{&#xA;                             NSLog(@&#34;Sound finished playing. Executing completion block...&#34;);&#xA;                         }];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play sound effects and alert sounds with a single line of code&lt;/li&gt; &#xA; &lt;li&gt;&#34;Play&#34; vibration (if available on device)&lt;/li&gt; &#xA; &lt;li&gt;Block-based completion handlers&lt;/li&gt; &#xA; &lt;li&gt;Integration with &lt;code&gt;NSUserDefaults&lt;/code&gt; to globally toggle sound effects in your app&lt;/li&gt; &#xA; &lt;li&gt;Efficient memory management&lt;/li&gt; &#xA; &lt;li&gt;Caches sounds (&lt;code&gt;SystemSoundID&lt;/code&gt; instances) and purges on memory warning&lt;/li&gt; &#xA; &lt;li&gt;Works with Swift!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 9+&lt;/li&gt; &#xA; &lt;li&gt;iOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;tvOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.10+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; (recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;JSQSystemSoundPlayer&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;github &#34;jessesquires/JSQSystemSoundPlayer&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://jessesquires.github.io/JSQSystemSoundPlayer&#34;&gt;docs&lt;/a&gt;. Generated with &lt;a href=&#34;https://github.com/realm/jazzy&#34;&gt;jazzy&lt;/a&gt;. Hosted by &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Generate&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./build_docs.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Preview&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ open index.html -a Safari&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in making contributions to this project? Please review the guides below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jessesquires/.github/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jessesquires/.github/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jessesquires/.github/raw/master/SUPPORT.md&#34;&gt;Support and Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jessesquires/.github/raw/master/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, consider &lt;a href=&#34;https://www.jessesquires.com/sponsor/&#34;&gt;sponsoring this project&lt;/a&gt; or &lt;a href=&#34;https://www.hexedbits.com&#34;&gt;buying my apps&lt;/a&gt;! &lt;span&gt;✌&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created and maintained by &lt;a href=&#34;https://twitter.com/jesse_squires&#34;&gt;&lt;strong&gt;@jesse_squires&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;JSQSystemSoundPlayer&lt;/code&gt; is released under an &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Copyright © 2013-present Jesse Squires.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Please provide attribution, it is greatly appreciated.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>