<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-07T01:42:25Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>keighl/KTCenterFlowLayout</title>
    <updated>2023-03-07T01:42:25Z</updated>
    <id>tag:github.com,2023-03-07:/keighl/KTCenterFlowLayout</id>
    <link href="https://github.com/keighl/KTCenterFlowLayout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aligns collection view cells to the center of the screen.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KTCenterFlowLayout&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/KTCenterFlowLayout.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KTCenterFlowLayout is a subclass of UICollectionViewFlowLayout which Aligns cells to the center of a collection view. It effectively enforces the &lt;code&gt;minimumInteritemSpacing&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# In your Podfile&#xA;&#xA;pod &#39;KTCenterFlowLayout&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Objective-C:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;KTCenterFlowLayout *layout = [KTCenterFlowLayout new];&#xA;layout.minimumInteritemSpacing = 10.f;&#xA;layout.minimumLineSpacing = 10.f;&#xA;&#xA;[[UICollectionViewController alloc] initWithCollectionViewLayout:layout];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let layout = KTCenterFlowLayout()&#xA;layout.minimumInteritemSpacing = 10.0&#xA;layout.minimumLineSpacing = 10.0&#xA;&#xA;UICollectionViewController(collectionViewLayout: layout)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;See the layout in use in the &lt;code&gt;./Example&lt;/code&gt; app:&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/keighl/KTCenterFlowLayout/raw/master/example.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;h3&gt;Horizontal Scrolling&lt;/h3&gt; &#xA;&lt;p&gt;This layout &lt;strong&gt;doesn&#39;t&lt;/strong&gt; work with &lt;code&gt;UICollectionViewScrollDirection.horizontal&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Self-sizing cells&lt;/h3&gt; &#xA;&lt;p&gt;This layout &lt;strong&gt;doesn&#39;t&lt;/strong&gt; work with self-sizing collection view cells (&lt;code&gt;estimatedItemSize&lt;/code&gt;). Of course, neither does the vanilla &lt;code&gt;UICollectionViewFlowLayout&lt;/code&gt;. Pull requests appreciated from anybody interested in solving self-sizing layouts!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>helpscout/beacon-ios-sdk</title>
    <updated>2023-03-07T01:42:25Z</updated>
    <id>tag:github.com,2023-03-07:/helpscout/beacon-ios-sdk</id>
    <link href="https://github.com/helpscout/beacon-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Beacon iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beacon SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://img.shields.io/cocoapods/v/Beacon.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Beacon.svg?sanitize=true&#34; alt=&#34;CocoaPods Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Help Scout&#39;s Beacon SDK allows you to embed the same Beacon functionality we have for the web inside your iOS app. Beacons provide a quick and straightforward way for customers to flip through your knowledge base or reach out to your team.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The Beacon SDK 2.0 requires iOS 11.0+.&lt;/p&gt; &#xA;&lt;p&gt;As of Beacon 2.1.0 Xcode 12 is required to build with the Beacon SDK. Beacon 2.0.x requires Xcode 11.4&lt;/p&gt; &#xA;&lt;h3&gt;Supported platform and language versions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 11 to 16&lt;/li&gt; &#xA; &lt;li&gt;Swift 5&lt;/li&gt; &#xA; &lt;li&gt;Xcode 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Beacon is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, add the following line to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Beacon&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Beacon is currently distributed as a dynamic framework so the &lt;code&gt;use_frameworks!&lt;/code&gt; flag will also need to be present in your Podfile.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Beacon is available through &lt;a href=&#34;https://swiftpackageregistry.com/helpscout/beacon-ios-sdk&#34;&gt;Swift Package Manager&lt;/a&gt;. To install it, simply follow &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;Appleâ€™s guidance&lt;/a&gt; for adding the Beacon-iOS package dependency in Xcode.&lt;/p&gt; &#xA;&lt;h3&gt;Carthage ðŸ›‘&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;As of Beacon 2.1.0, Beacon is (temporarily ðŸ¤ž) no longer available to be distributed via Carthage. This is because Beacon is now distributed as an XCFramework which is (as of October 29th, 2020) not supported by Carthage. More info about the progress the Carthage team is making can be found on this &lt;a href=&#34;https://github.com/Carthage/Carthage/issues/3019&#34;&gt;issue&lt;/a&gt; or the following Pull Requests &lt;a href=&#34;https://github.com/Carthage/Carthage/pull/3071&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://github.com/Carthage/Carthage/pull/2881&#34;&gt;2&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Beacons up to version 2.0.2 can be installed using Carthage by adding the following line to your &lt;code&gt;Cartfile&lt;/code&gt; and then following the &lt;a href=&#34;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&#34;&gt;Carthage installation instructions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;helpscout/beacon-ios-sdk&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Because of the way Beacon is distributed, attempting to use the &lt;code&gt;--no-use-binaries&lt;/code&gt; flag when building will fail.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;Beacon can be installed manually by linking the &lt;code&gt;Beacon.xcframework&lt;/code&gt;. To do so, download the &lt;code&gt;Beacon.xcframework.zip&lt;/code&gt; from &lt;a href=&#34;https://github.com/helpscout/beacon-ios-sdk/releases&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/library/archive/technotes/tn2435/_index.html&#34;&gt;add Beacon.xcframework to your Xcode project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Setup&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://developer.helpscout.com/beacon-2/ios/#additional-setup&#34;&gt;developer site&lt;/a&gt; has information on configuring up your application to work with Beacon&#39;s email attachments and push notifications.&lt;/p&gt; &#xA;&lt;h2&gt;Sample Applications&lt;/h2&gt; &#xA;&lt;p&gt;This repository includes two sample applications, one written in Objective-C and one written with SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;To run the Objective-C example you can cd into the Examples/Obj-C Example directory &lt;code&gt;cd Examples/Obj-C\ Example&lt;/code&gt;, open &lt;code&gt;Beacon Example.xcodeproj&lt;/code&gt; and run the &lt;code&gt;BeaconExample&lt;/code&gt; scheme.&lt;/p&gt; &#xA;&lt;p&gt;To run the SwiftUI example you can cd into the Examples/SwiftUI Example directory &lt;code&gt;cd Examples/SwiftUI\ Example&lt;/code&gt;, open &lt;code&gt;Beacon SwiftUI Example.xcodeproj&lt;/code&gt; and run the &lt;code&gt;Beacon SwiftUI Example&lt;/code&gt; scheme. For it to run properly you&#39;ll need to provide a valid Beacon identifer on Line 10 of &lt;code&gt;SettingsView.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://developer.helpscout.com/beacon-2/ios/&#34;&gt;developer site&lt;/a&gt; for more customization options available through the SDK.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For issues or questions, contact Help Scout support at For issues or questions, contact Help Scout support at &lt;a href=&#34;mailto:help@helpscout.com?subject=%5BiOS%20Beacon%20SDK%5D%20Issue%20report&amp;amp;body=Technical%20details%0A%0A-%20Beacon%20version%3A%0A-%20iOS%20OS%20version%3A%0A-%20Device%20make%2Fmodel%3A%0A-%20Impacted%20user%20count%3A%0A%0AActual%20outcome%0A%0A%20%20%20%20Beacon%20did%20or%20did%20not...%0A%0AExpected%20outcome%0A%0A%20%20%20%20Beacon%20should...%0A%0ASteps%20to%20reproduce%0A%0A%20%20%20%201.%20%E2%80%A6%0A%20%20%20%202.%20%E2%80%A6%0A%20%20%20%203.%20%E2%80%A6%0A%0AScreenshots%2FScreen%20Recording%0A%0A%20%20%20%20Please%20add%20any%20images%20or%20videos%20to%20support%20your%20report.%0A%0AAdditional%20Information%0A%0A%20%20%20%20Please%20attach%20any%20crash%20logs&#34;&gt;help@helpscout.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leminlimez/SecondHand</title>
    <updated>2023-03-07T01:42:25Z</updated>
    <id>tag:github.com,2023-03-07:/leminlimez/SecondHand</id>
    <link href="https://github.com/leminlimez/SecondHand" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Add seconds to status bar clock on TrollStore devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SecondHand&lt;/h1&gt; &#xA;&lt;p&gt;Add seconds and date to status bar clock on &lt;a href=&#34;https://github.com/opa334/TrollStore&#34;&gt;TrollStore&lt;/a&gt; devices Compatible with iOS 14.0-15.4.1&lt;/p&gt; &#xA;&lt;p&gt;In order for it to run in the background, you must set location services to &lt;strong&gt;Always&lt;/strong&gt;, and you can enable notifications so that you can be notified when the app stops running. No information will leave your device. It is only to keep the app open.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Info:&lt;/strong&gt; Your battery life may be impacted when using seconds. Battery drain is negligible with Date though, because it only updates every hour.&lt;/p&gt; &#xA;&lt;p&gt;I am not responsible for damage to your device.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leminlimez/SecondHand/main/Images/MainPage.PNG&#34; width=&#34;300&#34; height=&#34;650&#34;&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Avangelista and &lt;a href=&#34;https://github.com/Avangelista/StatusMagic&#34;&gt;StatusMagic&lt;/a&gt; for status bar method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sourcelocation/Evyrest&#34;&gt;Evyrest&lt;/a&gt; for background updating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/zhuowei/bc7a90bdc520556fda84d33e0583eb3e&#34;&gt;grant_full_disk_access&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/i41nbeer&#34;&gt;Ian Beer&lt;/a&gt; for MacDirtyCow exploit code.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>