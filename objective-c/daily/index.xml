<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-29T01:31:57Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Theile/sonomablocker</title>
    <updated>2023-09-29T01:31:57Z</updated>
    <id>tag:github.com,2023-09-29:/Theile/sonomablocker</id>
    <link href="https://github.com/Theile/sonomablocker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blocking macOS 14 Sonoma installer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sonoma Blocker&lt;/h1&gt; &#xA;&lt;p&gt;Blocking macOS 14 Sonoma installer&lt;/p&gt; &#xA;&lt;p&gt;Detect when &lt;code&gt;Install macOS Sonoma.app&lt;/code&gt; installer application has launched, terminate the process and display an alert.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This project is totally copied from the original &lt;code&gt;bigsurblocker&lt;/code&gt; from which I made &lt;code&gt;montereyblocker&lt;/code&gt;, then &lt;code&gt;venturablocker&lt;/code&gt;, and now also &lt;code&gt;sonomablocker&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://github.com/hjuutilainen/bigsurblocker&#34;&gt;hjuutilainen/bigsurblocker&lt;/a&gt; for the original software for blocking Big Sur and README there.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;Apple wants end users to upgrade to the latest macOS as soon as it becomes available. Depending on the software and policies your organization uses, this might be unacceptable. As an administrator, you currently have some options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use an MDM to push a profile to delay updates for maximum of 90 days. This will however postpone &lt;em&gt;all&lt;/em&gt; updates, not just the macOS upgrade.&lt;/li&gt; &#xA; &lt;li&gt;Push&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;sonomablocker&lt;/code&gt; binary is installed in &lt;code&gt;/usr/local/bin&lt;/code&gt; and is launched for each user through a launch agent. This means that the binary is running in the user session and therefore has the privileges of the current user. It runs silently in the background and listens for app launch notifications. As soon as the user launches the macOS installer application, the binary (forcefully) terminates it and displays a warning message.&lt;/p&gt; &#xA;&lt;p&gt;By design, it will &lt;em&gt;not&lt;/em&gt; block the &lt;code&gt;startosinstall&lt;/code&gt; command line tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This app only block the app installer, so in order to prevent the users from upgrading through the Software Update mechanisms, a management profile to delay major upgrades has to be deployed to the machines. Remember that is limited to 90 days&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The binary requires at least macOS 11.&lt;/p&gt; &#xA;&lt;h2&gt;Management profiles&lt;/h2&gt; &#xA;&lt;p&gt;All configuration is optional.&lt;/p&gt; &#xA;&lt;p&gt;Management profile for making sure &lt;a href=&#34;https://raw.githubusercontent.com/Theile/sonomablocker/main/Management%20profiles/sonomablocker%20profile.mobileconfig&#34;&gt;Blocker is not disabled by the user&lt;/a&gt; (for MDM systems.)&lt;/p&gt; &#xA;&lt;p&gt;Profile for &lt;a href=&#34;https://raw.githubusercontent.com/Theile/sonomablocker/main/Management%20profiles/dk.envo-it.sonomablocker.plist&#34;&gt;custom Blocker alert settings&lt;/a&gt; (deployed as custom settings in a MDM system.)&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;On macOS 11 and later, download a prebuilt package from the &lt;a href=&#34;https://raw.githubusercontent.com/Theile/sonomablocker/main/releases&#34;&gt;Releases page&lt;/a&gt; and deploy with your favorite method. The package is signed and notarized.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstall&lt;/h2&gt; &#xA;&lt;p&gt;To fully uninstall &lt;code&gt;sonomablocker&lt;/code&gt;, run the script &lt;code&gt;[sonomablocker-remove.sh](sonomablocker-remove.sh)&lt;/code&gt; (as root or with &lt;code&gt;sudo&lt;/code&gt;) or deploy through MDM.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Sonoma Blocker is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/Theile/sonomablocker/main/LICENSE&#34;&gt;the MIT License&lt;/a&gt;, just as the original software.&lt;/p&gt; &#xA;&lt;p&gt;The rest of this README is from that original project:&lt;/p&gt; &#xA;&lt;h1&gt;Original README&lt;/h1&gt; &#xA;&lt;p&gt;This project is heavily inspired by Erik Berglund&#39;s &lt;a href=&#34;https://github.com/erikberglund/AppBlocker&#34;&gt;AppBlocker&lt;/a&gt;. It uses the same underlying idea of registering and listening for NSWorkspace notifications when app has started up and then checking the CFBundleIdentifier of the launched app to identify a Big Sur installer launch.&lt;/p&gt; &#xA;&lt;h1&gt;Why&lt;/h1&gt; &#xA;&lt;p&gt;Apple wants end users to upgrade to the latest macOS as soon as it becomes available. Depending on the software and policies your organization uses, this might be unacceptable. As an administrator, you currently have some options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use an MDM to push a profile to delay updates for maximum of 90 days. This will however postpone &lt;em&gt;all&lt;/em&gt; updates, not just the macOS upgrade.&lt;/li&gt; &#xA; &lt;li&gt;If your fleet is enrolled in an MDM, you can use &lt;code&gt;softwareupdate --ignore&lt;/code&gt; to hide certain updates. This will result in a highly broken user experience where the system thinks it has an update pending but it is unable to download and install it. Apple has also decided that only MDM enrolled systems can use the &lt;code&gt;--ignore&lt;/code&gt; flag.&lt;/li&gt; &#xA; &lt;li&gt;If you are already using a binary authorization system such as Googles &lt;a href=&#34;https://github.com/google/santa&#34;&gt;Santa&lt;/a&gt;, you should use it but deploying a system like Santa only for blocking Big Sur might be unfeasible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;bigsurblocker&lt;/code&gt; binary is installed in &lt;code&gt;/usr/local/bin&lt;/code&gt; and is launched for each user through a launch agent. This means that the binary is running in the user session and therefore has the privileges of the current user. It runs silently in the background and listens for app launch notifications. As soon as the user launches the macOS installer application, the binary (forcefully) terminates it and displays a warning message.&lt;/p&gt; &#xA;&lt;p&gt;By design, it will &lt;em&gt;not&lt;/em&gt; block the &lt;code&gt;startosinstall&lt;/code&gt; command line tool.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;The binary requires at least macOS 10.9, however it has been tested only on macOS 10.10, 10.11, 10.12, 10.13, 10.14 and 10.15.&lt;/p&gt; &#xA;&lt;p&gt;Note. It seems that macOS 10.10 and 10.11 have trouble installing a signed and notarized package. Use the unsigned package available from the releases page if deploying on those. The signed and notarized package can be used on macOS 10.12 and later.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;All configuration is optional. If needed, the alert title and text can be set through a configuration profile. Use &lt;code&gt;com.hjuutilainen.bigsurblocker&lt;/code&gt; as the domain and &lt;code&gt;AlertTitle&lt;/code&gt; and &lt;code&gt;AlertText&lt;/code&gt; as the keys.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;On macOS 10.12 and later, download a prebuilt package from the &lt;a href=&#34;https://github.com/hjuutilainen/bigsurblocker/releases&#34;&gt;Releases page&lt;/a&gt; and deploy with your favorite method. The package is signed and notarized.&lt;/p&gt; &#xA;&lt;p&gt;On OS X 10.11 and earlier, download and deploy an unsigned package from the &lt;a href=&#34;https://github.com/hjuutilainen/bigsurblocker/releases&#34;&gt;Releases page&lt;/a&gt; and deploy with your favorite method&lt;/p&gt; &#xA;&lt;h1&gt;Uninstall&lt;/h1&gt; &#xA;&lt;p&gt;To fully uninstall &lt;code&gt;bigsurblocker&lt;/code&gt;, run the following (as root or with sudo):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;current_user_uid=$( echo &#34;show State:/Users/ConsoleUser&#34; | scutil | awk &#39;/UID :/ &amp;amp;&amp;amp; ! /loginwindow/ { print $3 }&#39; )&#xA;&#xA;launchd_item_path=&#34;/Library/LaunchAgents/com.hjuutilainen.bigsurblocker.plist&#34;&#xA;launchctl bootout gui/${current_user_uid} &#34;${launchd_item_path}&#34;&#xA;&#xA;rm -f /Library/LaunchAgents/com.hjuutilainen.bigsurblocker.plist&#xA;rm -f /usr/local/bin/bigsurblocker&#xA;&#xA;pkgutil --forget com.hjuutilainen.bigsurblocker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Big Sur Blocker is licensed under &lt;a href=&#34;https://github.com/hjuutilainen/bigsurblocker/raw/main/LICENSE&#34;&gt;the MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>