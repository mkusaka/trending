<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:47:24Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebook/idb</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/facebook/idb</id>
    <link href="https://github.com/facebook/idb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;idb is a flexible command line interface for automating iOS simulators and devices&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/idb/main/website/static/img/idb_logo.jpg&#34; alt=&#34;idb logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/SF26Yqw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/770978552698896394?style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &#34;iOS Development Bridge&#34; or &lt;code&gt;idb&lt;/code&gt;, is a command line interface for automating iOS Simulators and Devices. It has three main priniciples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Remote Automation&lt;/em&gt;: &lt;code&gt;idb&lt;/code&gt; is composed of a &#34;companion&#34; that runs on macOS and a python client that can run anywhere. This enables scenarios such as a &#34;Device Lab&#34; within a Data Center or fanning out shards of test executions to a large pool of iOS Simulators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Simple Primitives&lt;/em&gt;: &lt;code&gt;idb&lt;/code&gt; exposes granular commands so that sophisticated workflows can be sequenced on top of them. This means you can use &lt;code&gt;idb&lt;/code&gt; from an IDE or build an automated testing scenario that isn&#39;t feasible with default tooling. All of these primitives aim to be consistent across iOS versions and between iOS Simulators and iOS Devices. All the primitives are exposed over a cli, so that it easy to use for both humans and automation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Exposing missing functionality&lt;/em&gt;: Xcode has a number of features that aren&#39;t available outside it&#39;s user interface. &lt;code&gt;idb&lt;/code&gt; leverages many of Private Frameworks that are used by Xcode, so that these features can be in GUI-less automated scenarios.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;idb&lt;/code&gt; is built on top the &lt;code&gt;FBSimulatorControl&lt;/code&gt; and &lt;code&gt;FBDeviceControl&lt;/code&gt; macOS Frameworks, contained within this repository. These Frameworks can be used independently of &lt;code&gt;idb&lt;/code&gt;, however &lt;code&gt;idb&lt;/code&gt; is likely to provide the simplest install and the most sensible defaults for most users.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve given a talk about &lt;code&gt;idb&lt;/code&gt; at F8, so that you can learn more about what &lt;code&gt;idb&lt;/code&gt; is and why we built it. A &lt;a href=&#34;https://developers.facebook.com/videos/2019/reliable-code-at-scale/&#34;&gt;recording of the talk is available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;idb&lt;/code&gt; is made up of 2 major components, each of which needs to be installed separately.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;idb&lt;/code&gt; companion&lt;/h3&gt; &#xA;&lt;p&gt;Each target (simulator/device) will have a companion process attached allowing &lt;code&gt;idb&lt;/code&gt; to communicate remotely.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;idb&lt;/code&gt; companion can be installed via brew or built from &lt;a href=&#34;https://github.com/facebook/idb&#34;&gt;source&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap facebook/fb&#xA;brew install idb-companion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Instructions on how to install brew can be found &lt;a href=&#34;https://brew.sh&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;idb&lt;/code&gt; client&lt;/h3&gt; &#xA;&lt;p&gt;A cli tool and python client is provided to interact with &lt;code&gt;idb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It can be installed via pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3.6 install fb-idb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The idb client requires python 3.6 or greater to be installed.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://www.fbidb.io/&#34;&gt;fbidb.io&lt;/a&gt; for detailed installation instructions and a guided tour of idb.&lt;/p&gt; &#xA;&lt;p&gt;Once installed, just run the list-targets command which will show you all the simulators installed on your system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ idb list-targets&#xA;...&#xA;iPhone X | 569C0F94-5D53-40D2-AF8F-F4AA5BAA7D5E | Shutdown | simulator | iOS 12.2 | x86_64 | No Companion Connected&#xA;iPhone Xs | 2A1C6A5A-0C67-46FD-B3F5-3CB42FFB38B5 | Shutdown | simulator | iOS 12.2 | x86_64 | No Companion Connected&#xA;iPhone Xs Max | D3CF178F-EF61-4CD3-BB3B-F5ECAD246310 | Shutdown | simulator | iOS 12.2 | x86_64 | No Companion Connected&#xA;iPhone Xʀ | 74064851-4B98-473A-8110-225202BB86F6 | Shutdown | simulator | iOS 12.2 | x86_64 | No Companion Connected&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;list-apps&lt;/code&gt; will show you all the apps installed in a simulator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ idb list-apps --udid 74064851-4B98-473A-8110-225202BB86F6&#xA;com.apple.Maps | Maps | system | x86_64 | Not running | Not Debuggable&#xA;com.apple.MobileSMS | MobileSMS | system | x86_64 | Not running | Not Debuggable&#xA;com.apple.mobileslideshow | MobileSlideShow | system | x86_64 | Not running | Not Debuggable&#xA;com.apple.mobilesafari | MobileSafari | system | x86_64 | Not running | Not Debuggable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;launch&lt;/code&gt; will launch an application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ idb launch com.apple.mobilesafari&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Head over &lt;a href=&#34;https://www.fbidb.io&#34;&gt;to the main documentation&lt;/a&gt; for more details on what you can do with idb and the full list of commands. There are also instructions on how to &lt;a href=&#34;https://www.fbidb.io/docs/development&#34;&gt;make changes to &lt;code&gt;idb&lt;/code&gt; including building it from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Find the full documentation for this project at &lt;a href=&#34;https://www.fbidb.io/&#34;&gt;fbidb.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://discord.gg/SF26Yqw&#34;&gt;public Discord Server that you can join&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve released &lt;code&gt;idb&lt;/code&gt; because it&#39;s a big part of how we scale iOS automation at Facebook. We hope that others will be able to benefit from the project where they may have needs that aren&#39;t currently serviced by the standard Xcode toolchain.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please &lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;read the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Guide&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/facebook/idb/main/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/idb/main/LICENSE&#34;&gt;&lt;code&gt;idb&lt;/code&gt; is MIT-licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>noah-nuebling/mac-mouse-fix</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/noah-nuebling/mac-mouse-fix</id>
    <link href="https://github.com/noah-nuebling/mac-mouse-fix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mac Mouse Fix - A simple way to make your mouse better.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/40808343/112161606-9814af80-8beb-11eb-9d2e-3105b4486bab.png&#34; alt=&#34;gh-header-v2&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- # Mac Mouse Fix --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/noah-nuebling/mac-mouse-fix/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mac Mouse Fix is a simple way to make your mouse better.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases&#34;&gt;Releases&lt;/a&gt; | &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/issues/new/choose&#34;&gt;Help &amp;amp; Feedback&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.0.0&#34;&gt;&lt;strong&gt;Mac Mouse Fix 2&lt;/strong&gt;&lt;/a&gt; now available!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SVGKit/SVGKit</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/SVGKit/SVGKit</id>
    <link href="https://github.com/SVGKit/SVGKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Display and interact with SVG Images on iOS / OS X, using native rendering (CoreAnimation)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SVGKit&lt;/h1&gt; &#xA;&lt;p&gt;SVGKit is a Cocoa framework for rendering SVG files natively: it&#39;s fast and powerful. Some additional info and links &lt;a href=&#34;https://github.com/SVGKit/SVGKit/wiki&#34;&gt;are on the wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Versions:&lt;/h2&gt; &#xA;&lt;p&gt;Latest info at: &lt;a href=&#34;https://github.com/SVGKit/SVGKit/wiki/Versions&#34;&gt;https://github.com/SVGKit/SVGKit/wiki/Versions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;v3.x = current &#34;in development&#34; branch with latest changes, fixes, features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NB: this is now automatically selected in GitHub as the &#34;default&#34; branch when you visit SVGKit&#39;s project page&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Run the Demo - iOS&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open up &#34;Demo-iOS.xcodeproj&#34;, and run it (on simulator or device). Try different SVG&#39;s. Zoom, pan, and (with the Monkey only:) hit the &#34;Animate&#34; button. Tap the images to see bounding-boxes / hit dectection (might need you to hit the Debug button first)&lt;/li&gt; &#xA; &lt;li&gt;If you have ANY problems building the library and embedding it in your app, compare your build settings to the Demo-iOS build settings - if something&#39;s different, it&#39;s probably the problem.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Installation (add SVGKit to your app)&lt;/h1&gt; &#xA;&lt;p&gt;You have 3 main options for installing SVGKit:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Drag/drop the .framework file into your project &amp;lt;-- PREFERRED / RECOMMENDED&lt;/li&gt; &#xA; &lt;li&gt;Use CocoaPods&lt;/li&gt; &#xA; &lt;li&gt;Use Carthage&lt;/li&gt; &#xA; &lt;li&gt;Drag/drop the static library into your project, and configure the build settings in your project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NB: the &#34;static library&#34; is our backwards-compatible, manual install that always works if you have problems with CocoaPods/Carthage/Framework.&lt;/p&gt; &#xA;&lt;h2&gt;OPTION 1: Use the Framework - drag, drop, done!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &#34;SVGKit-iOS.xcodeproj&#34;&lt;/li&gt; &#xA; &lt;li&gt;Build the project once&lt;/li&gt; &#xA; &lt;li&gt;In Project Navigator, expand the Products folder&lt;/li&gt; &#xA; &lt;li&gt;Drag/drop SVGKit.framework into your app-project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NB: Frameworks are the preferred way to use libraries in Xcode. But this is a new feature, it might have bugs. If you have ANY problems, please create an Issue, but also try the Static Library method below&lt;/p&gt; &#xA;&lt;p&gt;You MAY also need to manually add the following Apple Frameworks to your app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CoreText&lt;/li&gt; &#xA; &lt;li&gt;CoreImage&lt;/li&gt; &#xA; &lt;li&gt;libxml2.dylib&lt;/li&gt; &#xA; &lt;li&gt;QuartzCore&lt;/li&gt; &#xA; &lt;li&gt;CoreGraphics&lt;/li&gt; &#xA; &lt;li&gt;UIKit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You MAY also need to add the following 3rd party Frameworks to your app (included with SVGKit):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CocoaLumberjack (in the SVGKit-iOS project, select the &#34;3rd-party-frameworks&#34; folder, and drag/drop whichever versions you need: iOS, tvOS, etc) Remember to embed the library too (should show under Target -&amp;gt; General -&amp;gt; Embedded Binaries)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OPTION 2: Using CocoaPods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CocoaPods/CocoaPods&#34;&gt;CocoaPods&lt;/a&gt; is a dependency manager for CocoaTouch. To do CocoaPods, adding the following in your podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;SVGKit&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also recommended that you setup your podfile to get SVGKit from the latest branch (October 2018: currently 3.x).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;SVGKit&#39;, :git =&amp;gt; &#39;https://github.com/SVGKit/SVGKit.git&#39;, :branch =&amp;gt; &#39;3.x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OPTION 3: Using Carthage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager for Cocoa. To use Carthage, adding the following in your Cartfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;SVGKit/SVGKit&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also recommended that you setup your Cartfile to get SVGKit from the current version (October 2018: 3.x branch).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;SVGKit/SVGKit&#34; &#34;3.x&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OPTION 4: Build the static library&lt;/h2&gt; &#xA;&lt;p&gt;We have a build script that automatically builds ALL versions of the library at once, and ships them as a single file: &lt;a href=&#34;http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4/3647187#3647187&#34;&gt;http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4/3647187#3647187&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s all setup already, all you need to do is:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &#34;SVGKit-iOS.xcodeproj&#34;, switch to &#34;SVGKit-iOS&#34; target and Build it (cmd-B)&lt;/li&gt; &#xA; &lt;li&gt;in left navbar, scroll to bottom, and open the &#34;Products&#34; section&lt;/li&gt; &#xA; &lt;li&gt;right click the library (&#34;libSVGKitBLAHBLAH.a&#34;) and select &#34;show in finder&#34;&lt;/li&gt; &#xA; &lt;li&gt;GO UP ONE FOLDER&lt;/li&gt; &#xA; &lt;li&gt;select the &#34;Debug-universal&#34; (or Release-universal if you were building in Release mode) folder&lt;/li&gt; &#xA; &lt;li&gt;Drag/drop the .a file and the &#34;usr&#34; folder into your project (select the &#34;Copy files&#34; checkbox)&lt;/li&gt; &#xA; &lt;li&gt;In Build Settings, select &#34;Other Linker Flags&#34; and add &#34;-ObjC&#34;&lt;/li&gt; &#xA; &lt;li&gt;Edit your build settings and set &#34;C/C++ Compiler Version&#34; = &#34;LLVM Compiler 2.0&#34;&lt;/li&gt; &#xA; &lt;li&gt;Add ALL the frameworks and 3rd party libraries listed below (go to &#34;Build Phases&#34;, and &#34;Link Binary with Libraries&#34;):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CoreText&lt;/li&gt; &#xA; &lt;li&gt;CoreImage&lt;/li&gt; &#xA; &lt;li&gt;libxml2.dylib&lt;/li&gt; &#xA; &lt;li&gt;QuartzCore&lt;/li&gt; &#xA; &lt;li&gt;CoreGraphics&lt;/li&gt; &#xA; &lt;li&gt;UIKit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Everything else is automatic.&lt;/p&gt; &#xA;&lt;h2&gt;Usage - OS X&lt;/h2&gt; &#xA;&lt;p&gt;Added in version 2.1.0 / Autumn 2018: support for macOS.&lt;/p&gt; &#xA;&lt;p&gt;You can use nearly the same API like iOS. Including &lt;code&gt;SVGKFastImageView&lt;/code&gt;, &lt;code&gt;SVGKLayeredImageView&lt;/code&gt;, and you can use &lt;code&gt;SVGKImage.NSImage&lt;/code&gt; to export SVG layer to bitmap image.&lt;/p&gt; &#xA;&lt;p&gt;We also provide a macOS demo for SVGKit. To run the Demo, open &lt;code&gt;Demo-OSX.xcodeproj&lt;/code&gt; and built to run. You can browser the different SVG files using those two different type of view to check the compatibility.&lt;/p&gt; &#xA;&lt;h2&gt;Recipes for using the library&lt;/h2&gt; &#xA;&lt;p&gt;Here are some old posts (some of these APIs have changed slightly since they were written) on using SVGKit, with advice on which methods to use and why:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GETTING STARTED, plus NEW FEATURES: &lt;a href=&#34;http://t-machine.org/index.php/2012/12/31/svgkit-2013-usage/&#34;&gt;http://t-machine.org/index.php/2012/12/31/svgkit-2013-usage/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QUICK RECIPES for common uses: &amp;nbsp;&lt;a href=&#34;http://t-machine.org/index.php/2013/01/02/svgkit-2013-recipes/&#34;&gt;http://t-machine.org/index.php/2013/01/02/svgkit-2013-recipes/&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;additiona: How to scale an SVG image on screen: &lt;a href=&#34;http://t-machine.org/index.php/2013/04/14/svgkit-scaling-svg-images/&#34;&gt;http://t-machine.org/index.php/2013/04/14/svgkit-scaling-svg-images/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CONTRIBUTING to the project, CORE ARCHITECTURE: &lt;a href=&#34;http://t-machine.org/index.php/2012/12/31/svgkit-2013-development/&#34;&gt;http://t-machine.org/index.php/2012/12/31/svgkit-2013-development/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(November 2013): New (experimental) feature - writing SVG&#39;s out to disk, preserving any changes you made programmatically: &lt;a href=&#34;http://t-machine.org/index.php/2013/11/17/svgkit-programmatic-editing-of-svg-files-on-ios/&#34;&gt;http://t-machine.org/index.php/2013/11/17/svgkit-programmatic-editing-of-svg-files-on-ios/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using SVGFastImageView in SwiftUI: &lt;a href=&#34;https://gist.github.com/ozgurshn/c816a035ff4722dc26650f4a4ed40105&#34;&gt;https://gist.github.com/ozgurshn/c816a035ff4722dc26650f4a4ed40105&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>objective-see/LuLu</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/objective-see/LuLu</id>
    <link href="https://github.com/objective-see/LuLu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LuLu is the free macOS firewall&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LuLu&lt;/h1&gt; &#xA;&lt;p&gt;LuLu is the free macOS firewall:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://objective-see.com/images/LL/lulu.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;br&gt; Full details and usage instructions can be found &lt;a href=&#34;https://objective-see.com/products/lulu.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To Build:&lt;/strong&gt; &lt;br&gt; LuLu should build cleanly in Xcode (though you will have to remove code signing constraints, or replace with your own Apple developer/kernel code signing certificate).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To Install:&lt;/strong&gt; &lt;br&gt; Simply run the installer application: &lt;code&gt;LuLu Installer.app&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install lulu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To Support:&lt;/strong&gt; &lt;br&gt; ❤&amp;nbsp; Love this product and want to support it? Please check out my &lt;a href=&#34;https://www.patreon.com/objective_see&#34;&gt;patreon page&lt;/a&gt; :)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a class=&#34;inlineLink&#34; href=&#34;https://www.patreon.com/objective_see&#34;&gt; &lt;img src=&#34;https://objective-see.com/patreon/images/patreon.jpg&#34; width=&#34;700&#34; style=&#34;display:block; margin:auto;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mahalo!&lt;/strong&gt; &lt;br&gt; LuLu is supported by the &#34;Friends of Objective-See&#34; such as: &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.jamf.com/?utm_source=objective-see&amp;amp;utm_medium=sponsored-link&amp;amp;utm_campaign=next-gen-security&amp;amp;utm_content=2021-02-05_protect&#34;&gt; &lt;img src=&#34;https://objective-see.com/images/friends/jamf.png&#34; height=&#34;50px&#34;&gt; &lt;/a&gt; &lt;br&gt; ...the standard in apple enterprise management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;a href=&#34;http://mosyle.com/&#34;&gt; &lt;img src=&#34;https://objective-see.com/images/friends/mosyle.png&#34; height=&#34;50px&#34;&gt; &lt;/a&gt; &lt;br&gt; ...modern apple mdm &amp;amp; security for enterprise &amp;amp; education.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;a href=&#34;http://kandji.io/&#34;&gt; &lt;img src=&#34;https://objective-see.com/images/friends/kandji.png&#34; height=&#34;50px&#34;&gt; &lt;/a&gt; &lt;br&gt; ...next-generation apple enterprise management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;a href=&#34;https://1password.com/?utm_medium=parnter&amp;amp;utm_source=Objective-See&amp;amp;utm_campaign=gp&amp;amp;utm_content=sponsorship&#34;&gt; &lt;img src=&#34;https://objective-see.com/images/friends/1Password.png&#34; height=&#34;50px&#34;&gt; &lt;/a&gt; &lt;br&gt; ...the world’s most-loved password manager.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;a href=&#34;https://macpaw.com/cleanmymac&#34;&gt; &lt;img src=&#34;https://objective-see.com/images/friends/cleanmymac.png&#34; height=&#34;50px&#34;&gt; &lt;/a&gt; &lt;br&gt; ...an all-in-one package to awesomize your Mac.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AppsFlyerSDK/AppsFlyerFramework</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/AppsFlyerSDK/AppsFlyerFramework</id>
    <link href="https://github.com/AppsFlyerSDK/AppsFlyerFramework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AppsFlyer Apple SDK&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppsFlyerSDK/appsflyer-capacitor-plugin/main/assets/AFLogo_primary.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;h1&gt;AppsFlyerFramework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cocoapods.org/pods/AppsFlyerFramework&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AppsFlyerFramework.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to download and/or get instruction on how to integrate AppsFlyer iOS SDK please visit the following page - &lt;a href=&#34;https://support.appsflyer.com/hc/en-us/sections/201691546-iOS-SDK&#34;&gt;iOS SDK&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;In order for us to provide optimal support, we would kindly ask you to submit any issues to &lt;a href=&#34;mailto:support@appsflyer.com&#34;&gt;support@appsflyer.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When submitting an issue please specify your AppsFlyer sign-up (account) email , your app ID , reproduction steps, logs, code snippets and any additional relevant information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Swift Package Manager&lt;/h2&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;AppsFlyer SDK version 6.1.x+ supports installation via &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;In Xcode go to: &lt;code&gt;File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/1.png&#34; alt=&#34;Step 1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter the AppsFlyer SDK GitHub repository - &lt;code&gt;https://github.com/AppsFlyerSDK/AppsFlyerFramework&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/2.png&#34; alt=&#34;Step 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Select the SDK version&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/3.png&#34; alt=&#34;Step 3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Select the AppsFlyerLib library&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/4.png&#34; alt=&#34;Step 4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In your &lt;code&gt;AppDelegate&lt;/code&gt; file: import AppsFlyerLib module&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/5.png&#34; alt=&#34;Step 5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start to use AppsFlyer SDK&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amit-kremer93/resources/raw/main/6.png&#34; alt=&#34;Step 6&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Swrve/swrve-ios-sdk</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/Swrve/swrve-ios-sdk</id>
    <link href="https://github.com/Swrve/swrve-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swrve iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/Swrve/swrve-ios-sdk/tree/release-7_5_2&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/Swrve/swrve-ios-sdk/tree/release-7_5_2.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Swrve&lt;/h2&gt; &#xA;&lt;p&gt;Swrve is a single integrated platform delivering everything you need to drive mobile engagement and create valuable consumer relationships on mobile.&lt;br&gt; This native iOS SDK will enable your app to use all of these features.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Have a look at the quick integration guide at &lt;a href=&#34;http://docs.swrve.com/developer-documentation/integration/ios/&#34;&gt;http://docs.swrve.com/developer-documentation/integration/ios/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing using CocoaPods&lt;/h2&gt; &#xA;&lt;p&gt;Add the following line to your Podfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod ‘SwrveSDK’&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing using Carthage (iOS 8+)&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; to install &lt;code&gt;Swrve&lt;/code&gt; by adding it to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;Swrve/swrve-ios-sdk&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing using Swift Package Manager (Xcode 12+)&lt;/h2&gt; &#xA;&lt;p&gt;For installing Swift packages, please see the [Apple Developer Docs](&lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&lt;/a&gt; Requirements)&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Xcode (latest)&lt;/h3&gt; &#xA;&lt;p&gt;The SDK supports iOS 10+ and the latest version of Xcode (Xcode 10.1, as the time of writing). The SDK will handle older versions of the OS with a dummy SDK.&lt;/p&gt; &#xA;&lt;h2&gt;Sample Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/Swrve/swrve-ios-sdk/release-7_5_2/samples&#34;&gt;samples&lt;/a&gt; folder contains several sample projects that include integration instructions and demonstrate best practices.&lt;/li&gt; &#xA; &lt;li&gt;Replace the &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;&amp;lt;API_key&amp;gt;&lt;/code&gt; arguments found in the project&#39;s &lt;code&gt;AppDelegate&lt;/code&gt; file with the AppID with the API Key provided by Swrve.&lt;/li&gt; &#xA; &lt;li&gt;Run on your device or on the emulator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We would love to see your contributions! Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repository.&lt;/li&gt; &#xA; &lt;li&gt;Create a branch (&lt;code&gt;git checkout -b my_awesome_feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#34;Awesome feature&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my_awesome_feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;© Copyright Swrve Mobile Inc or its licensors. Distributed under the &lt;a href=&#34;https://raw.githubusercontent.com/Swrve/swrve-ios-sdk/release-7_5_2/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tokopedia/HMSegmentedControl</title>
    <updated>2022-06-03T01:47:24Z</updated>
    <id>tag:github.com,2022-06-03:/tokopedia/HMSegmentedControl</id>
    <link href="https://github.com/tokopedia/HMSegmentedControl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HMSegmentedControl&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cocoadocs.org/docsets/HMSegmentedControl&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/HMSegmentedControl.svg?style=flat&#34; alt=&#34;Pod Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/HMSegmentedControl&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/HMSegmentedControl.svg?style=flat&#34; alt=&#34;Pod Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/l/HMSegmentedControl.svg?style=flat&#34; alt=&#34;Pod License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports both text and images&lt;/li&gt; &#xA; &lt;li&gt;Support horizontal scrolling&lt;/li&gt; &#xA; &lt;li&gt;Supports advanced title styling with text attributes for font, color, kerning, shadow, etc.&lt;/li&gt; &#xA; &lt;li&gt;Supports selection indicator both on top and bottom&lt;/li&gt; &#xA; &lt;li&gt;Supports blocks&lt;/li&gt; &#xA; &lt;li&gt;Works with ARC and iOS &amp;gt;= 7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way of installing HMSegmentedControl is via &lt;a href=&#34;http://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;HMSegmentedControl&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Old-fashioned way&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;HMSegmentedControl.h&lt;/code&gt; and &lt;code&gt;HMSegmentedControl.m&lt;/code&gt; to your project.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;QuartzCore.framework&lt;/code&gt; to your linked frameworks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#import &#34;HMSegmentedControl.h&#34;&lt;/code&gt; where you want to add the control.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The code below will create a segmented control with the default looks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;HMSegmentedControl *segmentedControl = [[HMSegmentedControl alloc] initWithSectionTitles:@[@&#34;One&#34;, @&#34;Two&#34;, @&#34;Three&#34;]];&#xA;segmentedControl.frame = CGRectMake(10, 10, 300, 60);&#xA;[segmentedControl addTarget:self action:@selector(segmentedControlChangedValue:) forControlEvents:UIControlEventValueChanged];&#xA;[self.view addSubview:segmentedControl];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Included is a demo project showing how to fully customise the control.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HeshamMegid/HMSegmentedControl/master/Screenshot.png&#34; alt=&#34;HMSegmentedControl&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Apps using HMSegmentedControl&lt;/h1&gt; &#xA;&lt;p&gt;If you are using HMSegmentedControl in your app or know of an app that uses it, please add it to &lt;a href=&#34;https://github.com/HeshamMegid/HMSegmentedControl/wiki/Apps-using-HMSegmentedControl&#34;&gt;this list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;HMSegmentedControl is licensed under the terms of the MIT License. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/tokopedia/HMSegmentedControl/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file for full details.&lt;/p&gt; &#xA;&lt;p&gt;If this code was helpful, I would love to hear from you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://twitter.com/HeshamMegid&#34;&gt;@HeshamMegid&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://hesh.am&#34;&gt;http://hesh.am&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>