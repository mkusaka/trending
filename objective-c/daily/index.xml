<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-01T01:36:59Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>datatheorem/TrustKit</title>
    <updated>2024-12-01T01:36:59Z</updated>
    <id>tag:github.com,2024-12-01:/datatheorem/TrustKit</id>
    <link href="https://github.com/datatheorem/TrustKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy SSL pinning validation and reporting for iOS, macOS, tvOS and watchOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TrustKit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.bitrise.io/app/fe29405fb90f94ea&#34;&gt;&lt;img src=&#34;https://app.bitrise.io/app/fe29405fb90f94ea/status.svg?token=TJ3o4dhSWa--0ZlJT7FV1A&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/TrustKit&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/TrustKit.svg?style=flat&#34; alt=&#34;Version Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/TrustKit&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/TrustKit.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/MIT_License&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/TrustKit.svg?style=flat&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/TrustKit/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/datatheorem/gitter.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TrustKit&lt;/strong&gt; is an open source framework that makes it easy to deploy SSL public key pinning and reporting in any iOS 12+, macOS 10.13+, tvOS 12+ or watchOS 4+ App; it supports both Swift and Objective-C Apps.&lt;/p&gt; &#xA;&lt;p&gt;If you need SSL pinning/reporting in your Android App. we have also released &lt;strong&gt;TrustKit for Android&lt;/strong&gt; at &lt;a href=&#34;https://github.com/datatheorem/TrustKit-Android&#34;&gt;https://github.com/datatheorem/TrustKit-Android&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TrustKit&lt;/strong&gt; provides the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple API to configure an SSL pinning policy and enforce it within an App. The policy settings are heavily based on the &lt;a href=&#34;https://tools.ietf.org/html/rfc7469&#34;&gt;HTTP Public Key Pinning specification&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Sane implementation by pinning the certificate&#39;s Subject Public Key Info, &lt;a href=&#34;https://www.imperialviolet.org/2011/05/04/pinning.html&#34;&gt;as opposed to the certificate itself or the public key bits&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Reporting mechanism to notify a server about pinning validation failures happening within the App, when an unexpected certificate chain is detected. This is similar to the &lt;em&gt;report-uri&lt;/em&gt; directive described in the HPKP specification. The reporting mechanism can also be customized within the App by leveraging pin validation notifications sent by TrustKit.&lt;/li&gt; &#xA; &lt;li&gt;Auto-pinning functionality by swizzling the App&#39;s &lt;em&gt;NSURLConnection&lt;/em&gt; and &lt;em&gt;NSURLSession&lt;/em&gt; delegates in order to automatically add pinning validation to the App&#39;s HTTPS connections; this allows deploying &lt;strong&gt;TrustKit&lt;/strong&gt; without even modifying the App&#39;s source code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/datatheorem/TrustKit/raw/master/docs/getting-started.md&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://datatheorem.github.io/TrustKit/documentation&#34;&gt;API documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;TrustKit was initially released at &lt;a href=&#34;https://github.com/datatheorem/TrustKit/raw/master/docs/TrustKit-BH2015.pdf&#34;&gt;Black Hat USA 2015&lt;/a&gt; and was also featured on &lt;a href=&#34;https://www.paypal-engineering.com/2015/10/14/key-pinning-in-mobile-applications/&#34;&gt;PayPal&#39;s engineering blog&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample Usage&lt;/h2&gt; &#xA;&lt;p&gt;Deploying SSL pinning in the App requires initializing &lt;strong&gt;TrustKit&lt;/strong&gt; with a pinning policy (domains, Subject Public Key Info hashes, and additional settings).&lt;/p&gt; &#xA;&lt;p&gt;The policy can be configured within the App&#39;s &lt;code&gt;Info.plist&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datatheorem.github.io/TrustKit/images/linking3_dynamic.png&#34; alt=&#34;Info.plist policy&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, the pinning policy can be set programmatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;    NSDictionary *trustKitConfig =&#xA;  @{&#xA;    kTSKSwizzleNetworkDelegates: @NO,&#xA;    kTSKPinnedDomains : @{&#xA;            @&#34;www.datatheorem.com&#34; : @{&#xA;                    kTSKExpirationDate: @&#34;2017-12-01&#34;,&#xA;                    kTSKPublicKeyHashes : @[&#xA;                            @&#34;HXXQgxueCIU5TTLHob/bPbwcKOKw6DkfsTWYHbxbqTY=&#34;,&#xA;                            @&#34;0SDf3cRToyZJaMsoS17oF72VMavLxj/N7WBNasNuiR8=&#34;&#xA;                            ],&#xA;                    kTSKEnforcePinning : @NO,&#xA;                    },&#xA;            @&#34;yahoo.com&#34; : @{&#xA;                    kTSKPublicKeyHashes : @[&#xA;                            @&#34;TQEtdMbmwFgYUifM4LDF+xgEtd0z69mPGmkp014d6ZY=&#34;,&#xA;                            @&#34;rFjc3wG7lTZe43zeYTvPq8k4xdDEutCmIhI5dn4oCeE=&#34;,&#xA;                            ],&#xA;                    kTSKIncludeSubdomains : @YES&#xA;                    }&#xA;            }};&#xA;    &#xA;    [TrustKit initSharedInstanceWithConfiguration:trustKitConfig];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The policy can also be set programmatically in Swift Apps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;        let trustKitConfig = [&#xA;            kTSKSwizzleNetworkDelegates: false,&#xA;            kTSKPinnedDomains: [&#xA;                &#34;yahoo.com&#34;: [&#xA;                    kTSKExpirationDate: &#34;2017-12-01&#34;,&#xA;                    kTSKPublicKeyHashes: [&#xA;                        &#34;JbQbUG5JMJUoI6brnx0x3vZF6jilxsapbXGVfjhN8Fg=&#34;,&#xA;                        &#34;WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=&#34;&#xA;                    ],]]] as [String : Any]&#xA;        &#xA;        TrustKit.initSharedInstance(withConfiguration:trustKitConfig)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After TrustKit has been initialized, a &lt;a href=&#34;https://datatheorem.github.io/TrustKit/documentation/Classes/TSKPinningValidator.html&#34;&gt;&lt;code&gt;TSKPinningValidator&lt;/code&gt; instance&lt;/a&gt; can be retrieved from the TrustKit singleton, and can be used to perform SSL pinning validation in the App&#39;s network delegates. For example in an NSURLSessionDelegate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)URLSession:(NSURLSession *)session &#xA;              task:(NSURLSessionTask *)task &#xA;didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge &#xA; completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential *credential))completionHandler {&#xA;{&#xA;    TSKPinningValidator *pinningValidator = [[TrustKit sharedInstance] pinningValidator];&#xA;    // Pass the authentication challenge to the validator; if the validation fails, the connection will be blocked&#xA;    if (![pinningValidator handleChallenge:challenge completionHandler:completionHandler])&#xA;    {&#xA;        // TrustKit did not handle this challenge: perhaps it was not for server trust&#xA;        // or the domain was not pinned. Fall back to the default behavior&#xA;        completionHandler(NSURLSessionAuthChallengePerformDefaultHandling, nil);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://github.com/datatheorem/TrustKit/raw/master/docs/getting-started.md&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TrustKit&lt;/strong&gt; is a joint-effort between the mobile teams at Data Theorem and Yahoo. See &lt;code&gt;AUTHORS&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TrustKit&lt;/strong&gt; is released under the MIT license. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>