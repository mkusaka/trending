<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-21T01:38:34Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>diegoveloper/flutter_pizza_selection</title>
    <updated>2022-11-21T01:38:34Z</updated>
    <id>tag:github.com,2022-11-21:/diegoveloper/flutter_pizza_selection</id>
    <link href="https://github.com/diegoveloper/flutter_pizza_selection" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Pizza Selection Challenge&lt;/h1&gt; &#xA;&lt;p&gt;Result&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UTNcVPOGINY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/diegoveloper/flutter_pizza_selection/main/assets/challenge.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;If you like the code, don&#39;t forget to star it :)&lt;/h2&gt; &#xA;&lt;h1&gt;Full Video Tutorial (Spanish)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UTNcVPOGINY&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/UTNcVPOGINY/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Join to unlock all the past live videos and join to our discord group!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCFKZxStYsOVrzdN_FCZ0NGg/join&#34;&gt;https://www.youtube.com/channel/UCFKZxStYsOVrzdN_FCZ0NGg/join&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>soffes/SAMKeychain</title>
    <updated>2022-11-21T01:38:34Z</updated>
    <id>tag:github.com,2022-11-21:/soffes/SAMKeychain</id>
    <link href="https://github.com/soffes/SAMKeychain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Objective-C wrapper for the keychain that works on Mac and iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SAMKeychain&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/soffes/SAMKeychain/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/soffes/SAMKeychain.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/SAMKeychain&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SAMKeychain.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SAMKeychain is a simple wrapper for accessing accounts, getting passwords, setting passwords, and deleting passwords using the system Keychain on Mac OS X and iOS.&lt;/p&gt; &#xA;&lt;h2&gt;Adding to Your Project&lt;/h2&gt; &#xA;&lt;p&gt;Simply add the following to your Podfile if you&#39;re using CocoaPods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;SAMKeychain&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or Cartfile if you&#39;re using Carthage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;soffes/SAMKeychain&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To manually add to your project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;Security.framework&lt;/code&gt; to your target&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;SAMKeychain.h&lt;/code&gt;, &lt;code&gt;SAMKeychain.m&lt;/code&gt;, &lt;code&gt;SAMKeychainQuery.h&lt;/code&gt;, and &lt;code&gt;SAMKeychainQuery.m&lt;/code&gt; to your project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;SAMKeychain requires ARC.&lt;/p&gt; &#xA;&lt;p&gt;Note: Currently SAMKeychain does not support Mac OS 10.6.&lt;/p&gt; &#xA;&lt;h2&gt;Working with the Keychain&lt;/h2&gt; &#xA;&lt;p&gt;SAMKeychain has the following class methods for working with the system keychain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;+ (NSArray *)allAccounts;&#xA;+ (NSArray *)accountsForService:(NSString *)serviceName;&#xA;+ (NSString *)passwordForService:(NSString *)serviceName account:(NSString *)account;&#xA;+ (BOOL)deletePasswordForService:(NSString *)serviceName account:(NSString *)account;&#xA;+ (void)setAccessibilityType:(CFTypeRef)accessibilityType;&#xA;+ (BOOL)setPassword:(NSString *)password forService:(NSString *)serviceName account:(NSString *)account;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Easy as that. (See &lt;a href=&#34;https://github.com/soffes/samkeychain/raw/master/Sources/SAMKeychain.h&#34;&gt;SAMKeychain.h&lt;/a&gt; and &lt;a href=&#34;https://github.com/soffes/samkeychain/raw/master/Sources/SAMKeychainQuery.h&#34;&gt;SAMKeychainQuery.h&lt;/a&gt; for all of the methods.)&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Use prepared documentation&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;http://cocoadocs.org/docsets/SAMKeychain&#34;&gt;online documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;If your saving to the keychain fails, use the NSError object to handle it. You can invoke &lt;code&gt;[error code]&lt;/code&gt; to get the numeric error code. A few values are defined in SAMKeychain.h, and the rest in SecBase.h.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSError *error = nil;&#xA;SAMKeychainQuery *query = [[SAMKeychainQuery alloc] init];&#xA;query.service = @&#34;MyService&#34;;&#xA;query.account = @&#34;soffes&#34;;&#xA;[query fetch:&amp;amp;error];&#xA;&#xA;if ([error code] == errSecItemNotFound) {&#xA;    NSLog(@&#34;Password not found&#34;);&#xA;} else if (error != nil) {&#xA;&#x9;NSLog(@&#34;Some other error occurred: %@&#34;, [error localizedDescription]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obviously, you should do something more sophisticated. You can just call &lt;code&gt;[error localizedDescription]&lt;/code&gt; if all you need is the error message.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Working with the keychain is pretty sucky. You should really check for errors and failures. This library doesn&#39;t make it any more stable, it just wraps up all of the annoying C APIs.&lt;/p&gt; &#xA;&lt;p&gt;You also really should not use the default but set the &lt;code&gt;accessibilityType&lt;/code&gt;. &lt;code&gt;kSecAttrAccessibleWhenUnlocked&lt;/code&gt; should work for most applications. See &lt;a href=&#34;https://developer.apple.com/library/ios/DOCUMENTATION/Security/Reference/keychainservices/Reference/reference.html#//apple_ref/doc/constant_group/Keychain_Item_Accessibility_Constants&#34;&gt;Apple Documentation&lt;/a&gt; for other options.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This was originally inspired by EMKeychain and SDKeychain (both of which are now gone). Thanks to the authors. SAMKeychain has since switched to a simpler implementation that was abstracted from &lt;a href=&#34;https://github.com/soffes/sstoolkit&#34;&gt;SSToolkit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A huge thanks to &lt;a href=&#34;https://github.com/calebd&#34;&gt;Caleb Davenport&lt;/a&gt; for leading the way on version 1.0 of SAMKeychain.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mparticle-integrations/mparticle-apple-integration-appsflyer</title>
    <updated>2022-11-21T01:38:34Z</updated>
    <id>tag:github.com,2022-11-21:/mparticle-integrations/mparticle-apple-integration-appsflyer</id>
    <link href="https://github.com/mparticle-integrations/mparticle-apple-integration-appsflyer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;AppsFlyer Kit Integration&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the &lt;a href=&#34;https://www.appsflyer.com&#34;&gt;AppsFlyer&lt;/a&gt; integration for the &lt;a href=&#34;https://github.com/mParticle/mparticle-apple-sdk&#34;&gt;mParticle Apple SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding the integration&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the kit dependency to your app&#39;s Podfile or Cartfile:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pod &#39;mParticle-AppsFlyer&#39;, &#39;~&amp;gt; 7.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;github &#34;mparticle-integrations/mparticle-apple-integration-appsflyer&#34; ~&amp;gt; 7.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the mParticle iOS SDK &lt;a href=&#34;https://github.com/mParticle/mparticle-apple-sdk&#34;&gt;quick-start&lt;/a&gt;, then rebuild and launch your app, and verify that you see &lt;code&gt;&#34;Included kits: { AppsFlyer }&#34;&lt;/code&gt; in your Xcode console&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;(This requires your mParticle log level to be at least Debug)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Reference mParticle&#39;s integration docs below to enable the integration.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.mparticle.com/integrations/appsflyer/event/&#34;&gt;AppsFlyer integration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>