<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-06T01:38:28Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tomaz/appledoc</title>
    <updated>2023-11-06T01:38:28Z</updated>
    <id>tag:github.com,2023-11-06:/tomaz/appledoc</id>
    <link href="https://github.com/tomaz/appledoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Objective-c code Apple style documentation set generator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About appledoc&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTICE:&lt;/strong&gt; &lt;a href=&#34;http://gentlebytes.com/blog/2015/11/02/appledoc-contributors-needed/&#34;&gt;collaborators needed&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;appledoc is command line tool that helps Objective-C developers generate Apple-like source code documentation from specially formatted source code comments. It&#39;s designed to take as readable source code comments as possible for the input and use comments as well as surrounding source code to generate visually appealing documentation in the form of HTML as well as fully indexed and browsable Xcode documentation set. Although there are several tools that can create HTML documentation for Objective-C, all of those known to me fall short in meeting the minimum of goals described below.&lt;/p&gt; &#xA;&lt;p&gt;Main goals of appledoc:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Human-readable source code comments.&lt;/li&gt; &#xA; &lt;li&gt;Simple cross references to objects and members.&lt;/li&gt; &#xA; &lt;li&gt;Generate Apple-like source code HTML documentation.&lt;/li&gt; &#xA; &lt;li&gt;Generate and install fully indexed and browsable Xcode documentation set.&lt;/li&gt; &#xA; &lt;li&gt;Single tool to drive generation from source code parsing to documentation set installation.&lt;/li&gt; &#xA; &lt;li&gt;Easily customizable output.&lt;/li&gt; &#xA; &lt;li&gt;100% Objective-C implementation for easy debugging.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To make your experience with appledoc as smooth as possible, we warmly suggest reading this whole document as well as all online documentation mentioned in &#34;using appledoc&#34; section below!&lt;/p&gt; &#xA;&lt;p&gt;Usage of appledoc is allowed under the terms listed in LICENSE section at the bottom of this file!&lt;/p&gt; &#xA;&lt;p&gt;Want to keep updated? Follow us on Twitter - &lt;a href=&#34;http://twitter.com/gentlebytes&#34;&gt;@gentlebytes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Quick install&lt;/h1&gt; &#xA;&lt;p&gt;The recommended way is to clone GitHub project and compile the tool from Xcode. As cloning GitHub project will create the link to the main repository, it greatly simplifies future upgrading too. To install, type the following in the Terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/tomaz/appledoc.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates appledoc directory. Within you can find appledoc.xcworkspace Xcode workspace; open it and compile appledoc target - this should work out of the box, however your system must meet minimum system requirements, see below. I recommend you copy resulting appledoc executable from build directory to one of the directories in your path (&lt;code&gt;echo $PATH&lt;/code&gt;) to make it easily accessible.&lt;/p&gt; &#xA;&lt;p&gt;Optional: Appledoc is selfcontained and contains the necessary template files. IF you want to modify these default from Templates subdirectory to one of the expected locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;~/Library/Application Support/appledoc&lt;/li&gt; &#xA; &lt;li&gt;~/.appledoc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use install-appledoc.sh script to perform quick installation. Open Terminal and switch to appledoc directory. Type following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo sh install-appledoc.sh (if you need templates add &#39;-t default&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It compiles appledoc and installs its binary to /usr/local/bin and templates (if wanted) to ~/.appledoc by default. You can override this directories with -b and -t options respectively. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo sh install-appledoc.sh -b /usr/bin -t ~/Library/Application\ Support/appledoc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Alternatively with Homebrew:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install appledoc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Homebrew does not install templates by default.&lt;/p&gt; &#xA;&lt;h1&gt;Using appledoc&lt;/h1&gt; &#xA;&lt;p&gt;Use &lt;code&gt;appledoc --help&lt;/code&gt; to see the list of all command line switches. Read more about appledoc on &lt;a href=&#34;http://gentlebytes.com/appledoc&#34;&gt;appledoc site&lt;/a&gt;. Also read &lt;a href=&#34;https://github.com/tomaz/appledoc/wiki/index&#34;&gt;wiki pages&lt;/a&gt; for some more in-depth articles.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://groups.google.com/forum/#!forum/appledoc&#34;&gt;appledoc Google group&lt;/a&gt; as a forum for questions on usage or other general questions.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/tomaz/appledoc/issues&#34;&gt;appledoc issues page&lt;/a&gt; to submit bug and feature requests. Before submitting new issues, check the forums to see if your question is answered there - unless you can confirm your issue as a new feature request or a bug, you should start at the forum to keep GitHub issues clean. Also read through issues to see if the issue is already there and vote on it or add a comment (don&#39;t forget about closed issues).&lt;/p&gt; &#xA;&lt;h2&gt;Installation tips&lt;/h2&gt; &#xA;&lt;p&gt;To keep up to date, just go to Terminal and cd into appledoc directory, issue &lt;code&gt;git pull&lt;/code&gt; and recompile appledoc.xcodeproj. Don&#39;t forget to overwrite appledoc executable you&#39;ve copied to $PATH :)&lt;/p&gt; &#xA;&lt;p&gt;If you also want to compile and run AppledocTests (unit tests) target, you need to copy all the frameworks indicated within Libraries &amp;amp; Frameworks group to shared frameworks directory before building unit tests target! This is not required for building the appledoc tool itself.&lt;/p&gt; &#xA;&lt;h2&gt;Integrating with Xcode&lt;/h2&gt; &#xA;&lt;p&gt;You can setup Xcode to automate appledoc document creation. &lt;a href=&#34;https://github.com/tomaz/appledoc/raw/master/XcodeIntegrationScript.markdown&#34;&gt;Find out how&lt;/a&gt; using a Run Script and your project&#39;s Build Phases.&lt;/p&gt; &#xA;&lt;h2&gt;Docset usage tips&lt;/h2&gt; &#xA;&lt;p&gt;Pre-generated documentation and docsets for most Cocoa frameworks are available at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cocoadocs.org&#34;&gt;CocoaDocs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have a docset, you might want to use it with a documentation browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kapeli.com/dash&#34;&gt;Dash&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Have problems? This is what you can do to troubleshoot:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have the latest appledoc version. Try &lt;code&gt;git pull&lt;/code&gt; and run with latest version again.&lt;/li&gt; &#xA; &lt;li&gt;IF you have template files installed, make sure you&#39;re using the latest - delete the predefined folders and have appledoc copy the files from its embedded archive again (see Quick Install section above).&lt;/li&gt; &#xA; &lt;li&gt;Increase verbosity level with &lt;code&gt;--verbose&lt;/code&gt; command line switch. Default level is 2, but you can progressively increment verbosity up to 6 with each level giving you more detailed information. As this will give you a lot more information, you may want to concentrate only on specific set of source files you have problem with. Note that increasing verbosity will result in slower performance so using levels above 4 for every day use is not recommended.&lt;/li&gt; &#xA; &lt;li&gt;Appledoc is open source project! You have all the source code available, so run it from Xcode. You can setup Xcode to pass the desired command line arguments and add breakpoints to help you isolate your issue. If you feel you&#39;d like to contribute more to community, you are welcome to fork the project on GitHub and add features to it. Keep us posted so we can add these features to main repository as well - include unit tests if possible.&lt;/li&gt; &#xA; &lt;li&gt;If you think you found a bug or want to request new feature, go to &lt;a href=&#34;https://github.com/tomaz/appledoc/issues&#34;&gt;appledoc issues page&lt;/a&gt;. First read existing issues to see if there is already a request there (if you&#39;re using master branch, also read closed issues as your request may have already been covered but isn&#39;t yet merged on master branch). You can vote on existing requests to help us decide which features to concentrate on or you can add a comment to aid in solving it. If you don&#39;t find the request there, create a new issue; include parts of source files that give you problems if possible and/or description or steps that lead to it.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re having problems with some of your source files and don&#39;t want to publish them online, you can contact us through email below. We&#39;ll do our best to help you out, but bear in mind appledoc is not commercial product; it&#39;s created and maintained in our spare time, so resources are limited.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Developer notes&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute, see the &lt;a href=&#34;https://github.com/tomaz/appledoc/raw/master/Developer%20Notes.markdown&#34;&gt;Developer Notes file&lt;/a&gt; for short overview of how appledoc works internally.&lt;/p&gt; &#xA;&lt;h2&gt;Minimum system requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 4.5 or greater for compiling&lt;/li&gt; &#xA; &lt;li&gt;OS X 10.7 for compiling and running&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;appledoc is licensed with modified BSD license. In plain language: you&#39;re allowed to do whatever you wish with the code, modify, redistribute, embed in your products (free or commercial), but you must include copyright, terms of usage and disclaimer as stated in the license, the same way as any other BSD licensed code. You can of course use documentation generated by appledoc for your products (free or commercial), but you must attribute appledoc either in documentation itself or other appropriate place such as your website.&lt;/p&gt; &#xA;&lt;p&gt;If for whatever reason you cannot agree to these terms, contact us through contact form on &lt;a href=&#34;http://gentlebytes.com/about&#34;&gt;our about page&lt;/a&gt;, we&#39;ll do our best to help you out you out and find a workable solution!&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2009-2011, Gentle Bytes All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Redistribution and use in source, binary forms and generated documentation, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions of documentation generated by appledoc must include attribution to appledoc, either in documentation itself or other appropriate media.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neither the name of the appledoc, Gentle Bytes nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt; &#xA;&lt;p&gt;Gentle Bytes &lt;a href=&#34;mailto:appledoc@gentlebytes.com&#34;&gt;appledoc@gentlebytes.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookarchive/three20</title>
    <updated>2023-11-06T01:38:28Z</updated>
    <id>tag:github.com,2023-11-06:/facebookarchive/three20</id>
    <link href="https://github.com/facebookarchive/three20" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Three20 is an Objective-C library for iPhone developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Archived Repo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is an archived project and is no longer supported or updated by Facebook. Please do not file issues or pull-requests against this repo. If you wish to continue to develop this code yourself, we recommend you fork it.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Proceed and be bold!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Three20&lt;/h1&gt; &#xA;&lt;h2&gt;What now?&lt;/h2&gt; &#xA;&lt;p&gt;If you updated to this revision by accident (e.g. a git pull), you might want to switch back to the version you had before (&lt;code&gt;git checkout cc672132ab&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Three20 still compiles and seems to work on iOS6, so there&#39;s no immediate need to remove everything now. Still, as the library is not maintained anymore, it might be a good time to replace it.&lt;/p&gt; &#xA;&lt;p&gt;Lots of Three20&#39;s helpers are not needed anymore, as they are now present right in iOS. For other parts there are some really good replacement available. If you&#39;re searching for a full replacement, &lt;a href=&#34;http://nimbuskit.info&#34;&gt;NimbusKit&lt;/a&gt; might help, they even provide a &lt;a href=&#34;http://wiki.nimbuskit.info/Three20-Migration-Guide&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://groups.google.com/group/three20/&#34;&gt;Three20 Mailing List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/three20&#34;&gt;Three20 Tagged Questions on StackOverflow&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>katzer/cordova-plugin-printer</title>
    <updated>2023-11-06T01:38:28Z</updated>
    <id>tag:github.com,2023-11-06:/katzer/cordova-plugin-printer</id>
    <link href="https://github.com/katzer/cordova-plugin-printer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Print HTML documents&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;left&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://github.com/katzer/cordova-plugin-printer/raw/example/README.md&#34;&gt;SAMPLE APP&lt;/a&gt; &lt;span&gt;👉&lt;/span&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Cordova Print Plugin &lt;br&gt; &lt;a href=&#34;http://badge.fury.io/js/cordova-plugin-printer&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/cordova-plugin-printer.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=L3HKQCD9UA35A&#34; title=&#34;Donate once-off to this project using Paypal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/paypal-donate-yellow.svg?sanitize=true&#34; alt=&#34;PayPayl donate button&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Plugin for &lt;a href=&#34;https://cordova.apache.org&#34;&gt;Cordova&lt;/a&gt; to print documents, photos, HTML and plain text from iOS, Android and Windows Universal apps.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cordova.plugins.printer.print(&#39;&amp;lt;b&amp;gt;Hello Cordova!&amp;lt;/b&amp;gt;&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;280px&#34; align=&#34;right&#34; src=&#34;https://github.com/katzer/cordova-plugin-printer/raw/example/images/print.png&#34;&gt; &#xA;&lt;h3&gt;Supported Printer Interfaces&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple AirPrint&lt;/li&gt; &#xA; &lt;li&gt;Android Print&lt;/li&gt; &#xA; &lt;li&gt;Windows Print&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Content&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTML&lt;/li&gt; &#xA; &lt;li&gt;Text&lt;/li&gt; &#xA; &lt;li&gt;Base64&lt;/li&gt; &#xA; &lt;li&gt;Images&lt;/li&gt; &#xA; &lt;li&gt;PDF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 4.4+&lt;/li&gt; &#xA; &lt;li&gt;iOS 10+&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 UWP&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basics&lt;/h2&gt; &#xA;&lt;p&gt;The plugin creates the object &lt;code&gt;cordova.plugins.printer&lt;/code&gt; and is accessible after the &lt;em&gt;deviceready&lt;/em&gt; event has been fired.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;document.addEventListener(&#39;deviceready&#39;, function () {&#xA;    // cordova.plugins.printer is now available&#xA;}, false);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prints the contents of the web view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Plain text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(&#34;Hello\nWorld!&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTML &amp;amp; CSS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(&#39;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Images, PDF and other documents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(&#39;file://img/logo.png&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Base64 encoded content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(&#39;base64://...&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On the browser platform the plugin only supports to print the contents of the web view.&lt;/p&gt; &#xA;&lt;h2&gt;Formatting&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to pass format options to the print method that overrides the defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(content, options, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The defaults are defined as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.setDefaults({ monochrome: true });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The list of possible options depend on the platform, the content type and the capabilities of the printer.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The name of the print job and of the document.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;copies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The number of copies for the print task.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Number&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;br&gt;Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pageCount&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Limits the pages to print even the document contains more.&lt;br&gt;To skip the last n pages you can assign a negative value on iOS.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Number&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;br&gt;Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;duplex&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Either double-sided on short site (duplex:&#39;short&#39;), double-sided on long site (duplex:&#39;long&#39;) or single-sided (duplex:&#39;none&#39;).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;orientation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The orientation of the printed content, &lt;code&gt;portrait&lt;/code&gt; or &lt;code&gt;landscape&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;monochrome&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If your application only prints black text, setting this property to &lt;em&gt;true&lt;/em&gt; can result in better performance in many cases.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;photo&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;true&lt;/em&gt; to change the media type to photography for higher quality.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;br&gt;Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;autoFit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;false&lt;/em&gt; to disable downscaling the image to fit into the content aread.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;printer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The network URL to the printer.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;maxHeight&lt;br&gt;maxWidth&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Defines the maximum size of the content area.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;margin&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;false&lt;/em&gt; to avoid margins.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;margin.top&lt;br&gt;margin.left&lt;br&gt;margin.right&lt;br&gt;margin.bottom&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The margins for each printed page. Each printer might have its own minimum margins depends on media type and paper format.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ui.hideNumberOfCopies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;true&lt;/em&gt; to hide the control for the number of copies.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ui.hidePaperFormat&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;true&lt;/em&gt; to hide the control for the paper format.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ui.top&lt;br&gt;ui.left&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The position of the printer picker.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Number&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iPad&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ui.height&lt;br&gt;ui.width&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The size of the printer picker.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Number&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iPad&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;paper.width&lt;br&gt;paper.height&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The dimensions of the paper – iOS will will try to choose a format which fits bests.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;paper.name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The name of the format like &lt;code&gt;IsoA4&lt;/code&gt; or &lt;code&gt;Roll22Inch&lt;/code&gt;.&lt;br&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/uwp/api/windows.graphics.printing.printmediasize&#34;&gt;https://docs.microsoft.com/en-us/uwp/api/windows.graphics.printing.printmediasize&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;paper.length&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;On roll-fed printers you can decide when the printer cuts the paper.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font.name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The name of the font family&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font.size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The size of the font&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Number&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;br&gt;Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font.italic&lt;br&gt;font.bold&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;true&lt;/em&gt; to enable these font traits.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font.align&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Possible alignments are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt; and &lt;code&gt;justified&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font.color&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The color of the font in hexa-decimal RGB format - &lt;code&gt;&#34;FF0000&#34;&lt;/code&gt; means red.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.height&lt;br&gt;footer.height&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The height of the header or footer on each page.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.labels&lt;br&gt;footer.labels&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An array of labels to display. Only use if there are more then one.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Array&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.label.text&lt;br&gt;footer.label.text&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The plain text to display. Use &lt;code&gt;%ld&lt;/code&gt; to indicate where to insert the page index.&lt;br&gt;For example &lt;code&gt;&#34;Page %ld&#34;&lt;/code&gt; would result into &lt;code&gt;&#34;Page 1&#34;&lt;/code&gt;, &lt;code&gt;&#34;Page 2&#34;&lt;/code&gt;, ...&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.label.top&lt;br&gt;header.label.right&lt;br&gt;header.label.left&lt;br&gt;header.label.bottom&lt;br&gt;footer.label.*&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The relative position where to place the label within the footer or header area.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unit&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.label.font&lt;br&gt;footer.label.font&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The font attributes for the label.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Object&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;header.label.showPageIndex&lt;br&gt;footer.label.showPageIndex&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set to &lt;em&gt;true&lt;/em&gt; if you want to display the page index.&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;code&gt;Unit&lt;/code&gt; type can be either a (float) number or a string with a special suffix.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported unit suffixes are &lt;code&gt;in&lt;/code&gt; for inches, &lt;code&gt;mm&lt;/code&gt; for millimeters, &lt;code&gt;cm&lt;/code&gt; for centimeters and &lt;code&gt;pt&lt;/code&gt; for points&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;2in&#34;&lt;/code&gt; are two inches whereas &lt;code&gt;2.0&lt;/code&gt; or &lt;code&gt;&#34;2.0pt&#34;&lt;/code&gt; are identical for two points&lt;/li&gt; &#xA; &lt;li&gt;One inch are 72.0 points&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Direct Print&lt;/h2&gt; &#xA;&lt;p&gt;For iOS its possible to send the content directly to the printer without any dialog. Todo so pass the network URL as an option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.print(content, { printer: &#39;ipp://...&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To let the user pick an available printer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.pick(function (url) {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s possible to specify the position of the picker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.pick({ top: 40, left: 30 }, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By passing an invalid URL, the application will throw an &lt;code&gt;Unable to connect to (null)&lt;/code&gt; exception and possibly crash.&lt;/p&gt; &#xA;&lt;h2&gt;Printable Document Types&lt;/h2&gt; &#xA;&lt;p&gt;The list of supported document types differ between mobile platforms. As of writing, Windows UWP only supports HTML and plain text.&lt;/p&gt; &#xA;&lt;p&gt;To get a list of all printable document types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.getPrintableTypes(callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check if printing is supported in general:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.canPrintItem(callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in particular:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cordova.plugins.printer.canPrintItem(&#39;file://css/index.css&#39;, callback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var options = {&#xA;    font: {&#xA;        size: 22,&#xA;        italic: true,&#xA;        align: &#39;center&#39;&#xA;    },&#xA;    header: {&#xA;        height: &#39;6cm&#39;,&#xA;        label: {&#xA;            text: &#34;\n\nDie Freuden&#34;,&#xA;            font: {&#xA;                bold: true,&#xA;                size: 37,&#xA;                align: &#39;center&#39;&#xA;            }&#xA;        }&#xA;    },&#xA;    footer: {&#xA;        height: &#39;4cm&#39;,&#xA;        label: {&#xA;            text: &#39;Johann Wolfgang von Goethe, 1749-1832, deutscher Dichter, Naturforscher&#39;,&#xA;            font: { align: &#39;center&#39; }&#xA;        }&#xA;    }&#xA;};&#xA;&#xA;cordova.plugins.printer.print(&#34;Es flattert um die Quelle\nDie wechselnde Libelle,...&#34;, options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result will look like this for iOS:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/katzer/cordova-plugin-printer/raw/example/images/sample.png&#34; alt=&#34;ttt&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Execute from the projects root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cordova plugin add cordova-plugin-printer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install a specific version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cordova plugin add cordova-plugin-printer@VERSION&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the latest head version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cordova plugin add https://github.com/katzer/cordova-plugin-printer.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install from local source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cordova plugin add &amp;lt;path&amp;gt; --nofetch --nosave&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cordova build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is released under the &lt;a href=&#34;http://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;span&gt;😋&lt;/span&gt; from Leipzig&lt;/p&gt; &#xA;&lt;p&gt;© 2013 &lt;a href=&#34;https://raw.githubusercontent.com/katzer/cordova-plugin-printer/master/www.appplant.de&#34;&gt;appPlant GmbH&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>