<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-26T01:39:57Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>avohq/ios-analytics-debugger</title>
    <updated>2023-11-26T01:39:57Z</updated>
    <id>tag:github.com,2023-11-26:/avohq/ios-analytics-debugger</id>
    <link href="https://github.com/avohq/ios-analytics-debugger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Avo iOS analytics debugger&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IosAnalyticsDebugger&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/IosAnalyticsDebugger&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/IosAnalyticsDebugger.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/IosAnalyticsDebugger&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/IosAnalyticsDebugger.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/IosAnalyticsDebugger&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/IosAnalyticsDebugger.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;To run the example project, clone the repo, and run &lt;code&gt;pod install&lt;/code&gt; from the Example directory first.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;You can include this debugger with SPM &lt;a href=&#34;https://github.com/avohq/ios-analytics-debugger-spm&#34;&gt;from this repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cocoapods&lt;/h3&gt; &#xA;&lt;p&gt;IosAnalyticsDebugger is available through &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;IosAnalyticsDebugger&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Create the debugger instance&lt;/h1&gt; &#xA;&lt;p&gt;Obj-C&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AnalyticsDebugger * debugger = [AnalyticsDebugger new];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;let debugger = AnalyticsDebugger()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Debugger instance management&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The debugger object maintains the history of your analytics events, so to share the history between different screens you should use the same debugger instance. We recommend to have a singleton that you provide or inject to your screens. A simple example can be found &lt;a href=&#34;https://github.com/avohq/ios-analytics-debugger/raw/master/Example/IosAnalyticsDebugger/AVOAppDelegate.m#L12&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Even if your app only has one screen (common case in PoC apps), remember to keep a reference to the &lt;code&gt;AnalyticsDebugger&lt;/code&gt; instance somewhere. Otherwise it will become unresponsive to touches.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Show the debugger&lt;/h1&gt; &#xA;&lt;p&gt;Obj-C&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[debugger showBubbleDebugger];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[debugger showBarDebugger];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;debugger.showBubble()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;debugger.showBarDebugger()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Hide the debugger&lt;/h1&gt; &#xA;&lt;p&gt;Obj-C&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[debugger hideDebugger];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;debugger.hide()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Post an event&lt;/h1&gt; &#xA;&lt;p&gt;Obj-C&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NSMutableArray * props = [NSMutableArray new];&#xA;&#xA;[props addObject:[[DebuggerProp alloc] initWithId:@&#34;id0&#34; withName:@&#34;id0 event&#34; withValue:@&#34;value 0&#34;]];&#xA;[props addObject:[[DebuggerProp alloc] initWithId:@&#34;id1&#34; withName:@&#34;id1 event&#34; withValue:@&#34;value 1&#34;]];&#xA;&#xA;NSMutableArray * errors = [NSMutableArray new];&#xA;&#xA;[errors addObject:[[DebuggerPropError alloc] initWithPropertyId:@&#34;id0&#34; withMessage:@&#34;error in event id0&#34;]];&#xA;&#xA;[debugger publishEvent:@&#34;Test Event&#34; withTimestamp:[NSNumber numberWithDouble:[[NSDate date] timeIntervalSince1970]]&#xA;    withProperties:props withErrors:errors];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;debugger.publishEvent(&#34;Test Event&#34;, withTimestamp: NSNumber(value: NSDate().timeIntervalSince1970),&#xA;    withProperties: [DebuggerProp(id: &#34;id0&#34;, withName: &#34;prop 0&#34;, withValue: &#34;value 0&#34;), &#xA;                     DebuggerProp(id: &#34;id1&#34;, withName: &#34;prop 1&#34;, withValue: &#34;value 1&#34;)], &#xA;    withErrors: [DebuggerPropError(propertyId: &#34;id0&#34;, withMessage: &#34;error in event with id0&#34;)]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Using with Avo&lt;/h1&gt; &#xA;&lt;p&gt;When using Avo generated code you&#39;ll be calling the &lt;code&gt;init&lt;/code&gt; methods. Actual interface of the methods depends on your schema setup, but there will be init methods with &lt;code&gt;debugger&lt;/code&gt; parameter, where you can pass an instance of &lt;code&gt;AnalyticsDebugger&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Obj-C&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Avo initAvoWithEnv:AVOEnvDev ... debugger:debugger];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Swift&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Avo.initAvo(env: AvoEnv.dev, ..., debugger: debugger)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that all events from Avo function calls will be automatically accessable in the debugger UI.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Avo (&lt;a href=&#34;https://www.avo.app&#34;&gt;https://www.avo.app&lt;/a&gt;), &lt;a href=&#34;mailto:friends@avo.app&#34;&gt;friends@avo.app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;IosAnalyticsDebugger is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
</feed>