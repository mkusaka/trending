<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:33:45Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AlexanderZaytsev/react-native-i18n</title>
    <updated>2024-07-01T01:33:45Z</updated>
    <id>tag:github.com,2024-07-01:/AlexanderZaytsev/react-native-i18n</id>
    <link href="https://github.com/AlexanderZaytsev/react-native-i18n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native + i18n.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚠️ This package is deprecated&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;This library is deprecated in favor of &lt;a href=&#34;https://github.com/react-native-community/react-native-localize&#34;&gt;react-native-localize&lt;/a&gt;. You can use react-native-localize with &lt;a href=&#34;https://github.com/fnando/i18n-js&#34;&gt;I18n-js&lt;/a&gt; (but also with &lt;a href=&#34;https://github.com/yahoo/react-intl&#34;&gt;react-intl&lt;/a&gt;, &lt;a href=&#34;https://github.com/i18next/react-i18next&#34;&gt;react-i18next&lt;/a&gt;, etc. The choice is yours!)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://cdn0.iconfinder.com/data/icons/material-design-ii-glyph/614/3010_-_Translate-512.png&#34; width=&#34;100&#34; align=&#34;left&#34;&gt; &#xA;&lt;h1&gt;react-native-i18n&lt;/h1&gt; &#xA;&lt;p&gt;Integrates &lt;a href=&#34;https://github.com/fnando/i18n-js&#34;&gt;I18n.js&lt;/a&gt; with React Native. Uses the user preferred locale as default. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using yarn (recommended)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ yarn add react-native-i18n&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using npm&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ npm install react-native-i18n --save&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Automatic setup&lt;/h2&gt; &#xA;&lt;p&gt;After installing the npm package you need to link the native modules.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using React-Native &amp;gt;= 0.29 just link the library with the command &lt;code&gt;react-native link react-native-i18n&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using React-Native &amp;lt; 0.29, install &lt;a href=&#34;https://github.com/rnpm/rnpm&#34;&gt;rnpm&lt;/a&gt; with the command &lt;code&gt;npm install -g rnpm&lt;/code&gt; and then link the library with the command &lt;code&gt;rnpm link&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having any issue you can also try to install the library manually as follows.&lt;/p&gt; &#xA;&lt;h2&gt;Automatic setup with Cocoapods&lt;/h2&gt; &#xA;&lt;p&gt;After installing the npm package, add the following line to your Podfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;RNI18n&#39;, :path =&amp;gt; &#39;../node_modules/react-native-i18n&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual setup&lt;/h2&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;RNI18n.xcodeproj&lt;/code&gt; to &lt;strong&gt;Libraries&lt;/strong&gt; and add &lt;code&gt;libRNI18n.a&lt;/code&gt; to &lt;strong&gt;Link Binary With Libraries&lt;/strong&gt; under &lt;strong&gt;Build Phases&lt;/strong&gt;.&lt;br&gt; &lt;a href=&#34;http://facebook.github.io/react-native/docs/linking-libraries-ios.html#content&#34;&gt;More info and screenshots about how to do this is available in the React Native documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You also need to add the &lt;strong&gt;localizations&lt;/strong&gt; you intend to support to your iOS project. To do that open your Xcode project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ open &amp;lt;your-project&amp;gt;.xcodeproj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And add the localizations you will support as shown here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AlexanderZaytsev/react-native-i18n/raw/master/docs/adding-locales.png?raw=true&#34; alt=&#34;adding locales&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;react-native-i18n&lt;/code&gt; to your &lt;code&gt;./android/settings.gradle&lt;/code&gt; file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;include &#39;:app&#39;, &#39;:react-native-i18n&#39;&#xA;project(&#39;:react-native-i18n&#39;).projectDir = new File(rootProject.projectDir, &#39;../node_modules/react-native-i18n/android&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include it as dependency in &lt;code&gt;./android/app/build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    // ...&#xA;    compile project(&#39;:react-native-i18n&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you need to add the package to your MainApplication (&lt;code&gt;./android/app/src/main/java/your/bundle/MainApplication.java&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.AlexanderZaytsev.RNI18n.RNI18nPackage; // &amp;lt;-- Add to ReactNativeI18n to the imports&#xA;&#xA;// ...&#xA;&#xA;@Override&#xA;protected List&amp;lt;ReactPackage&amp;gt; getPackages() {&#xA;    return Arrays.&amp;lt;ReactPackage&amp;gt;asList(&#xA;        new MainReactPackage(),&#xA;        // ...&#xA;        new RNI18nPackage(), // &amp;lt;-- Add it to the packages list&#xA;    );&#xA;}&#xA;&#xA;// ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, you will need to recompile your project with &lt;code&gt;react-native run-android&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️ Important: You&#39;ll need to install Android build tools 27.0.3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import I18n from &#39;react-native-i18n&#39;;&#xA;// OR const I18n = require(&#39;react-native-i18n&#39;).default&#xA;&#xA;class Demo extends React.Component {&#xA;  render() {&#xA;    return &amp;lt;Text&amp;gt;{I18n.t(&#39;greeting&#39;)}&amp;lt;/Text&amp;gt;;&#xA;  }&#xA;}&#xA;&#xA;// Enable fallbacks if you want `en-US` and `en-GB` to fallback to `en`&#xA;I18n.fallbacks = true;&#xA;&#xA;I18n.translations = {&#xA;  en: {&#xA;    greeting: &#39;Hi!&#39;,&#xA;  },&#xA;  fr: {&#xA;    greeting: &#39;Bonjour!&#39;,&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will render &lt;code&gt;Hi!&lt;/code&gt; for devices with the English locale, and &lt;code&gt;Bonjour!&lt;/code&gt; for devices with the French locale.&lt;/p&gt; &#xA;&lt;h2&gt;Usage with multiple location files&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// app/i18n/locales/en.js&#xA;&#xA;export default {  &#xA;  greeting: &#39;Hi!&#39;&#xA;};&#xA;&#xA;// app/i18n/locales/fr.js&#xA;&#xA;export default {  &#xA;  greeting: &#39;Bonjour!&#39;&#xA;};&#xA;&#xA;// app/i18n/i18n.js&#xA;&#xA;import I18n from &#39;react-native-i18n&#39;;&#xA;import en from &#39;./locales/en&#39;;&#xA;import fr from &#39;./locales/fr&#39;;&#xA;&#xA;I18n.fallbacks = true;&#xA;&#xA;I18n.translations = {&#xA;  en,&#xA;  fr&#xA;};&#xA;&#xA;export default I18n;&#xA;&#xA;// usage in component&#xA;&#xA;import I18n from &#39;app/i18n/i18n&#39;;&#xA;&#xA;class Demo extends React.Component {&#xA;  render () {&#xA;    return (&#xA;      &amp;lt;Text&amp;gt;{I18n.t(&#39;greeting&#39;)}&amp;lt;/Text&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fallbacks&lt;/h3&gt; &#xA;&lt;p&gt;When fallbacks are enabled (which is generally recommended), &lt;code&gt;i18n.js&lt;/code&gt; will try to look up translations in the following order (for a device with &lt;code&gt;en_US&lt;/code&gt; locale):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;en-US&lt;/li&gt; &#xA; &lt;li&gt;en&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: iOS 8 locales use underscored (&lt;code&gt;en_US&lt;/code&gt;) but &lt;code&gt;i18n.js&lt;/code&gt; locales are dasherized (&lt;code&gt;en-US&lt;/code&gt;). This conversion is done automatically for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;I18n.fallbacks = true;&#xA;&#xA;I18n.translations = {&#xA;  en: {&#xA;    greeting: &#39;Hi!&#39;,&#xA;  },&#xA;  &#39;en-GB&#39;: {&#xA;    greeting: &#39;Hi from the UK!&#39;,&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a device with a &lt;code&gt;en_GB&lt;/code&gt; locale this will return &lt;code&gt;Hi from the UK!&#39;&lt;/code&gt;, for a device with a &lt;code&gt;en_US&lt;/code&gt; locale it will return &lt;code&gt;Hi!&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Device&#39;s locales&lt;/h3&gt; &#xA;&lt;p&gt;You can get the user preferred locales with the &lt;code&gt;getLanguages&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { getLanguages } from &#39;react-native-i18n&#39;;&#xA;&#xA;getLanguages().then(languages =&amp;gt; {&#xA;  console.log(languages); // [&#39;en-US&#39;, &#39;en&#39;]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;I18n.js documentation&lt;/h3&gt; &#xA;&lt;p&gt;For more info about I18n.js methods (&lt;code&gt;localize&lt;/code&gt;, &lt;code&gt;pluralize&lt;/code&gt;, etc) and settings see &lt;a href=&#34;https://github.com/fnando/i18n-js#setting-up&#34;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>