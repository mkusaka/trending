<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-26T01:36:14Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HuolalaTech/HLLOfflineWebVC-iOS</title>
    <updated>2022-09-26T01:36:14Z</updated>
    <id>tag:github.com,2022-09-26:/HuolalaTech/HLLOfflineWebVC-iOS</id>
    <link href="https://github.com/HuolalaTech/HLLOfflineWebVC-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS offline package solution for H5&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/title.png&#34; width=&#34;100%&#34; height=&#34;100%&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/hexpm/l/plug.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/pod-v1.0.0-green.svg?sanitize=true&#34; alt=&#34;Pod Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-iOS-blue.svg?sanitize=true&#34; alt=&#34;Platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/language-ObjectC-green.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt; &lt;a href=&#34;https://juejin.cn/post/7103348563479887885&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wiki-open-brightgreen.svg?sanitize=true&#34; alt=&#34;wiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;HLLOfflineWebVC is a lightweight and high-performance hybrid framework developed by HUOLALA mobile team, which is intended to improve the load speed of websites on mobile phone. It base on &lt;a href=&#34;https://developer.apple.com/documentation/webkit/wkwebview/&#34;&gt;WKWebView&lt;/a&gt; at iOS system.&lt;br&gt; HLLOfflineWebVC can cache html, css, js, png and other static resource on the disk. When the app load the web page, it directly load the resource from disk and reduce network request. You can get more details from the &lt;a href=&#34;https://juejin.cn/post/7103348563479887885&#34;&gt;article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Before VS After Using HLLOfflineWebVC&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Before Using HLLOfflineWebVC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;After Using HLLOfflineWebVC&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Time Cost&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2s&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Movie&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/1.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/2.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Safe and reliable: no hook and no private API, &amp;nbsp;three degrade strategy.&lt;/li&gt; &#xA; &lt;li&gt;Easy to maintain: three layer structure and modular design.&lt;/li&gt; &#xA; &lt;li&gt;Fully functional: it contains H5 offline resource managing, url and offline resource mapping config, data reporting, debug tool.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 9.0 or later&lt;/li&gt; &#xA; &lt;li&gt;Xcode 11.0 or later&lt;/li&gt; &#xA; &lt;li&gt;CocoaPods 1.11.2 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the code.&lt;/li&gt; &#xA; &lt;li&gt;Enter the &#39;Example&#39; folder, enter command &#39;pod install&#39; to install 3rd-party libraries.&lt;/li&gt; &#xA; &lt;li&gt;Open the project &#39;HLLOfflineWebVC.xcworkspace&#39; and built it by Xcode. If you complile and run the demo successfully, you will see the UI below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/1.jpg&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/2.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/Image/3.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you find a bug, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you have a feature request, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you want to contribute, submit a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;OfflineWebPackage&lt;/p&gt; &lt;p&gt;The core module of HLLOfflineWebVC.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OfflineWebDevTool&lt;/p&gt; &lt;p&gt;An useful tool to Debug the offline web.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OfflineWebBisNameMatch&lt;/p&gt; &lt;p&gt;Connect the web page with offline resource by config.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OfflineWebUtils&lt;/p&gt; &lt;p&gt;An inner API used by other module.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;p&gt;If you want to bring the code into your project, you need to do the following:&lt;/p&gt; &#xA;&lt;h3&gt;Develop A HTTP Service&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;HTTP Request&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://huolala.cn/queryOffline?clientType=iOS&amp;amp;clientVer=1.0.0&amp;amp;offlineZipVer=1.0.0&amp;amp;bisName=xx&#34;&gt;https://huolala.cn/queryOffline?clientType=iOS&amp;amp;clientVer=1.0.0&amp;amp;offlineZipVer=1.0.0&amp;amp;bisName=xx&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt; requet data parameters description:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;parameter name&lt;/th&gt; &#xA;   &lt;th&gt;parameter meaning&lt;/th&gt; &#xA;   &lt;th&gt;note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientType&lt;/td&gt; &#xA;   &lt;td&gt;operating system type&lt;/td&gt; &#xA;   &lt;td&gt;iOS，Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientVersion&lt;/td&gt; &#xA;   &lt;td&gt;app version&lt;/td&gt; &#xA;   &lt;td&gt;eg: 1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bisName&lt;/td&gt; &#xA;   &lt;td&gt;unique identifier of your offline web page&lt;/td&gt; &#xA;   &lt;td&gt;eg: act3-offline-package-test&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;offlineZipVer&lt;/td&gt; &#xA;   &lt;td&gt;the local offline web file version&lt;/td&gt; &#xA;   &lt;td&gt;0 means no offline web cache&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt; respond data format is a json，parameters description:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;parameter name&lt;/th&gt; &#xA;   &lt;th&gt;parameter meaning&lt;/th&gt; &#xA;   &lt;th&gt;note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bisName&lt;/td&gt; &#xA;   &lt;td&gt;unique identifier of your offline web page&lt;/td&gt; &#xA;   &lt;td&gt;eg: act3-offline-package-test&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;result&lt;/td&gt; &#xA;   &lt;td&gt;query result&lt;/td&gt; &#xA;   &lt;td&gt;-1: disable offline web, 0: no update, 1: has new version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;zip file download url&lt;/td&gt; &#xA;   &lt;td&gt;if no update, the url is null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;refreshMode&lt;/td&gt; &#xA;   &lt;td&gt;notify client how to update&lt;/td&gt; &#xA;   &lt;td&gt;0:update next(default) 1:update immediately&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version&lt;/td&gt; &#xA;   &lt;td&gt;offline web pages version&lt;/td&gt; &#xA;   &lt;td&gt;eg: 25609-j56gfa&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Cross Origin&lt;/p&gt; &lt;p&gt;When an offline web page make a network request, the origin is null，should modify your gateway or server to support.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Modify HTML And JS File&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use relative path, no absolute path.&lt;/li&gt; &#xA; &lt;li&gt;cookie、local storage should support the situation that host is null.&lt;/li&gt; &#xA; &lt;li&gt;add a file to describe the offline web version .the file name is &#34;.offweb.json&#34; and the content is: { &#34;bisName&#34;: &#34;xxx&#34;, &#34;ver&#34;: &#34;xxx&#34; }&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bring The Code Into Your Client&lt;/h2&gt; &#xA;&lt;h3&gt;Install Completely&lt;/h3&gt; &#xA;&lt;p&gt;Install all the modules in your project.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the string &#34; pod &#39;HLLOfflineWebVC&#39; &#34; in your pod file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Call the initial function.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (void)initOfflineWeb {&#xA;    NSDictionary *offwebConfigDict = DefaultWebPackageConfig;&#xA;    [HLLOfflineWebConfig setInitalParam:offwebConfigDict&#xA;        logBlock:^(HLLOfflineWebLogLevel level, NSString *keyword, NSString *message) {&#xA;            NSLog (@&#34;use your log SDK :%d:%@:%@&#34;, (int) level, keyword, message);     &#xA;        }&#xA;        reportBlock:^(NSString *event, NSDictionary *dict) {&#xA;            NSLog(@&#34;data report:%@,%@&#34;, event, dict);&#xA;        }&#xA;        monitorBlock:^(HLLOfflineWebMonitorType type, NSString *key, CGFloat value, NSDictionary *lables) {&#xA;            NSLog(@&#34;use your monitor sdk &#34;);&#xA;            &#xA;        }&#xA;        env:@&#34;prd&#34;&#xA;        appversion:[[[NSBundle mainBundle] infoDictionary] objectForKey:@&#34;CFBundleShortVersionString&#34;]];&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Config the dictionary.&lt;/p&gt; &lt;p&gt;&#34;OffwebConfigDict&#34; is a dictionary from json, configure the degrade strategy, auto add offweb parameters to url:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;&#x9;&#34;switch&#34;: 1,&#xA;&#x9;&#34;predownloadlist&#34;: [&#34;uappweb-offline&#34;],&#xA;&#x9;&#34;disablelist&#34;: [],&#xA;&#x9;&#34;rules&#34;: [{&#xA;&#x9;&#x9;  &#34;host&#34;: [&#34;test1.xxx.com&#34;, &#34;test2.xxx.com&#34;],&#xA;&#x9;&#x9;  &#34;path&#34;: [&#34;/uapp&#34;],&#xA;&#x9;&#x9;  &#34;offweb&#34;: &#34;uappweb&#34;&#xA;&#x9;&#x9;}&#xA;&#x9;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;parameter name&lt;/th&gt; &#xA;   &lt;th&gt;parameter meaning&lt;/th&gt; &#xA;   &lt;th&gt;required or optional&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;switch&lt;/td&gt; &#xA;   &lt;td&gt;1 open，0 close&lt;/td&gt; &#xA;   &lt;td&gt;required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;predownloadlist&lt;/td&gt; &#xA;   &lt;td&gt;If you need download an offline web page, add the business name&lt;/td&gt; &#xA;   &lt;td&gt;optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;disablelist&lt;/td&gt; &#xA;   &lt;td&gt;disable some offline web page&lt;/td&gt; &#xA;   &lt;td&gt;optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rules&lt;/td&gt; &#xA;   &lt;td&gt;when the host and path match the rules, webview will add &#39;offweb=uappweb&#39; to you url&lt;/td&gt; &#xA;   &lt;td&gt;optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Modify webview container.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Implement the function bellow in your basic webview container. Then edit the parent class of HLLOfflineWebVC.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; - (BOOL)webview:(WKWebView *)webview shouldStartLoadWithRequest:(NSURLRequest *)request {&#xA;        return YES;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Declare WKWebview delegate &lt;code&gt;&amp;lt;WKUIDelegate,WKNavigationDelegate&amp;gt;&lt;/code&gt; in the head file.&lt;/p&gt; &#xA;&lt;h3&gt;Install Core Module&lt;/h3&gt; &#xA;&lt;p&gt;Just install the core module that not contains &#39;HLLOfflineWebVC&#39;, the CocoaPods command is: pod &#39;HLLOfflineWebVC/OfflineWebPackage&#39; . The main API :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check Update API&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt; //@param bisName： unique identifier of your offline web page &#xA; //@param resultBlock：the result block&#xA;&#xA; - (void)checkUpdate:(NSString *)bisName result:(HLLOfflineWebResultBlock)resultBlock;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Get the Local File Path of Offline Web&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt; //@param webUrl: online web page url &#xA; //@return: the local file path of &#34;index.html&#34;. If not exist, return nil&#xA; &#xA;- (NSURL *_Nullable)getFileURL:(NSURL *)webUrl;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://juejin.cn/user/1768489241815070&#34;&gt;HUOLALA mobile technology team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;HLLOfflineWebVC is released under the Apache 2.0 license. See &lt;a href=&#34;https://raw.githubusercontent.com/HuolalaTech/HLLOfflineWebVC-iOS/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>520coding/confuse</title>
    <updated>2022-09-26T01:36:14Z</updated>
    <id>tag:github.com,2022-09-26:/520coding/confuse</id>
    <link href="https://github.com/520coding/confuse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS混淆加固差异化翻新加密工具，模拟人工手动混淆，识别上下文 ，支持继承链、类型识别、方法多参等复杂高级混淆。source-to-source obfuscation of iOS projects，Xcode&#39;s refactor-&gt;rename. 告别插入毫无关联的垃圾代码、弃用无脑单词随机拼接替换，模拟正常开发，一款最好的混淆最彻底的Mac App Tools。支持OC(Objc、Objective-C)、C、C++(Cocos2d-x、Cocos2dx和Lua游戏开发)、Swift、C#(Unity)混淆，可用于ios马甲包游戏SDK混淆，减少账号调查过机审上架过包过审4.3、2.3.1、2.1&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;tMJSz&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2020/png/213807/1606304234500-46a10b02-f83d-4996-99fc-ce092241ea7c.png#crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=200&amp;amp;id=v0ghq&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=200&amp;amp;originWidth=200&amp;amp;originalType=url&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;title=&amp;amp;width=200&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a name=&#34;beqYw&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/520coding/confuse/master/README_ZH.md&#34;&gt;中文&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;wNymF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Preface&lt;/h1&gt; &#xA;&lt;p&gt;By chance, I ran into the iOS &lt;a href=&#34;https://www.yuque.com/docs/share/7e70244c-5dea-4035-b634-65cc082097da?translate=en&#34;&gt;vest bag business&lt;/a&gt; . I also used other tools on the market in the early stage, but the actual effect was not ideal. After a lot of practice, a full-featured &lt;a href=&#34;https://github.com/520coding/confuse&#34;&gt;obfuscation tool has been developed&lt;/a&gt; . The tool have been packaged into a Mac application which support multiple programming languages, such as OC, C++, Swift. More functions are still being packaged, so stay tuned. &lt;a name=&#34;ixxhF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Prompt&lt;/h1&gt; &#xA;&lt;p&gt;In order to let everyone get started quickly and compare the effects of confusion, a new test project &lt;a href=&#34;https://github.com/520coding/confuse/tree/master/confuse_test&#34;&gt;&lt;strong&gt;confuse_test&lt;/strong&gt;&lt;/a&gt; was created. If you encounter problems during actual use, welcome to extend the test project. Please indicate the bug details in the project, and there will be rewards.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Instructions for the old version before 1.2.0: &amp;nbsp; Introduction: No grammar and compilation requirements are involved, but partial omissions or corrections may occur after confusion, please add to the blacklist filter by yourself. &amp;nbsp; Applicable projects: RN and other mixed projects that have not yet been adapted. &amp;nbsp; Conditions of use: temporarily unavailable, reopen later&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Yng3v&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Readme&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a name=&#34;6e674183b5d2f1af15baaa27bb7c93b2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The essence of vest bag:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The first stage reduces the repetition rate. The initial version of my development is basically similar to other tools currently on the market, mainly the basic function of global substitution of class name, method name, and variable name.&lt;/li&gt; &#xA; &lt;li&gt;The second stage reduces the similarity (normal distribution of the same elements). At present, the tool has been greatly improved after optimization and continuous reconstruction, and it basically meets the requirements in this respect. For details, see the following function introduction. There are two sides to everything. The more powerful the function, the longer it will take to confuse. If your project is large, it is possible to confuse for a few hours. Please do not take offense, and continue to optimize. &lt;a name=&#34;fc8a03eacc987f4c5e94e6dc0086ea50&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Distinguish the pros and cons of tools&lt;/h3&gt; &#xA;&lt;p&gt;In fact, to identify the pros and cons of a tool, just look at the following points:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Can modify all attributes, methods, and all parameter names of methods&lt;/li&gt; &#xA; &lt;li&gt;Modify the name of the member (attribute, method), can it be distinguished by class, or a simple global replacement&lt;/li&gt; &#xA; &lt;li&gt;Can modify the method with block parameters, a typical network request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For example：+ (BOOL)post:(NSString *)url parameters:(NSDictionary *)parameters success:(HttpRequestResponse)success error:(HttpRequestResponse)error;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;The length of the changed name of the method name and attribute name (this tool can guarantee that 60~80% of the changed name is a common word, such as name, title, etc., and ensure that it does not conflict with the system.&lt;del&gt;Completely abandon the simple practice of relying on a large number of word libraries to ensure the uniqueness of naming&lt;/del&gt;, The real simulation of manual development)&lt;/li&gt; &#xA; &lt;li&gt;Modify the layout (Frame, Masonry, SDAutoLayout)&lt;/li&gt; &#xA; &lt;li&gt;Is the code inserted or &#34;garbage&#34; (this tool creates custom controls, encapsulates network requests, and uses MVC pattern association between files to completely bid farewell to &#34;garbage&#34; and mix the spurious with the genuine).&lt;/li&gt; &#xA; &lt;li&gt;Not to mention &#34;Who else...&#34; can identify macros, distinguish contextual content such as inheritance chains, and intelligently identify unmodifiable parts&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For example: + (void)init ;-(void)reloadData; basically can be changed, who else can do it? &#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Normal projects (or third-party libraries) basically do not report errors after obfuscation (except for some individual &lt;a href=&#34;https://www.yuque.com/docs/share/4a87ec96-80fe-4d25-873d-93cb428b3e15#iz0Zi&#34;&gt;improper grammars&lt;/a&gt; that cause confusion and report errors) &lt;a name=&#34;KDqM3&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Test engineering description:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/520coding/confuse/tree/master/confuse_test&#34;&gt;confuse_test&lt;/a&gt;: Contains oc, c++, swift and some third-party use cases to quickly verify the overall effect &lt;a href=&#34;https://github.com/520coding/confuse/tree/master/confuse_test_oc&#34;&gt;confuse_test_oc&lt;/a&gt;: only contains oc, which is convenient to verify the effect of each function &lt;a href=&#34;https://github.com/520coding/confuse/tree/master/confuse_test_swift&#34;&gt;confuse_test_swift&lt;/a&gt;: only contains swift, the code comes from&lt;a href=&#34;https://docs.swift.org/swift-book/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0&#34;&gt; Apple&#39;s official example code&lt;/a&gt;, which is convenient to verify the effect of each function&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The source code can be modified arbitrarily to verify the actual effect. It is recommended to use different tools to confuse the above test projects or third-party open source library projects to compare the effects. &lt;a name=&#34;426215c094f184f34acdb12593ddb1fc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;confuse is a &lt;a href=&#34;https://github.com/520coding/confuse&#34;&gt;confusion tool&lt;/a&gt; that simulates manual development as much as possible, imitates some functions of Xcode, and avoids machine core 4.3, 2.1, 2.3.1, account surveys, etc.&lt;br&gt;Goal: &lt;strong&gt;Simulate manually modify everything that can be changed&lt;/strong&gt; , which is why this tool only has a blacklist and no whitelist&lt;br&gt;The detailed functions are as follows (the basic functions are not described, see other tools for details): &lt;a name=&#34;82f2e3582d1466241460f1564b36b2a6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Completed&lt;/h2&gt; &#xA;&lt;p&gt;The following functions are supported:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Blacklist (secondary) filtering, freely control the obfuscated content of each function, and adapt to almost all projects.&lt;/li&gt; &#xA; &lt;li&gt;Confusion percentage control, you can freely adjust according to the actual needs of your own project&lt;/li&gt; &#xA; &lt;li&gt;Smart noun substitution: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;When renaming, use the combination of related type existing information + similar semantics + type + some old vocabulary, and filter sensitive words. At the same time, users can also customize sensitive words.&lt;del&gt;Deprecate&#39;random word brainless combination&#39;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Different types of members with the same name -&amp;gt; different types of members with different names, and different types of different name members -&amp;gt; different types of members with the same name, simulating normal development. Members refer to methods, attributes, and functions&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Intelligent identification of unmodifiable parts: Identifying systems, third parties, and Pod methods through types and inheritance chains is not a&#39;simple&#39; equality judgment, for example: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Class method: + (void)init; in principle, it can be changed anywhere&lt;/li&gt; &#xA;   &lt;li&gt;Object method:-(void)reloadData; can be changed if it is not a subclass of UITableView&lt;/li&gt; &#xA;   &lt;li&gt;Property: @property (readonly) NSUInteger length; it can be changed if it is not a subclass of NSString &lt;a name=&#34;7e02145ffab0f7184b0a6b92e79d9acd&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;General part&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;[Project Configuration], as long as you select the project path, other default configurations will be automatically completed &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Global setting &#34;Ignore path&#34;, support regular, better use with blacklist&lt;/li&gt; &#xA;   &lt;li&gt;&#39; xcodeproj&#39; setting, for multiple xcodeproj projects and xx.xcodeproj is not in the project root directory&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Scheme&#39; is confused and consistent with Xcode&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Debug mode&#39;, It is convenient to view the comparison before and after the modification in the source file, and insert some special annotations to facilitate the location of the bug.&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Hybrid mode&#39;, this mode is used to process the swift call oc part of the mixed project, to ensure that the call relationship is maintained after confusion&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Reference project root path&#39; setting, read the word and UUID of the reference project&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Sensitive words&#39; filtering&lt;/li&gt; &#xA;   &lt;li&gt;&#39; &lt;strong&gt;Version iteration confusion&lt;/strong&gt; &#39;, iteratively update after review, continue to use the last time (you can also choose the version arbitrarily) to obfuscate the record incremental confusion, maintain version continuity, and simulate normal development. Advantages: Development and obfuscation are synchronized and independent . The main functions currently support update confusion&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Antivirus], &lt;a href=&#34;https://juejin.cn/post/6936535178118430733&#34;&gt;Xcode poisoning, XCSSET Malware&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&#39;UUID suffix&#39;, the virus will randomly insert UUID with a fixed suffix, regular scanning&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Script path feature&#39;, a suspicious script will be executed before virus compilation, support regular scanning&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Run script code flag&#39;, a suspicious script code will be executed before virus compilation, support regular scanning&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Resource replacement], specify the resource folder that needs to be replaced before obfuscation , and automatically replace the file with the same name, which is convenient and quick&lt;/li&gt; &#xA; &lt;li&gt;[Remove comment], identify single-line, multi-line comments&lt;/li&gt; &#xA; &lt;li&gt;[Edit picture], quality modification, size shift, local pixel fine-tuning，RGBA offset，mode modification (support hot update)&lt;/li&gt; &#xA; &lt;li&gt;[Modify file attributes], such as creation time, access time, modification time&lt;/li&gt; &#xA; &lt;li&gt;[Modify item], no need to delete Cocoapods &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Can be set to&#39;modify uuid&#39;, completely refurbished&lt;/li&gt; &#xA;   &lt;li&gt;Customize the name of the&#39;modify target&#39;, and the associated information will be updated synchronously&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automatic source code backup &lt;a name=&#34;279a46203c9fe475b30ffab43dad6dba&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Objective-C&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;[Rename picture], intelligent noun replacement , automatically correct the situation that the picture name and the xcassets folder name do not correspond &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&#39;Run splicing name&#39; can be set, which is used for the image name generated by string splicing at runtime&lt;/li&gt; &#xA;   &lt;li&gt;You can set the&#39;rename associated string&#39; to modify the situation where the string is equal to the picture name&lt;/li&gt; &#xA;   &lt;li&gt;‘Specify Ignore Length’ can be set. If the length of the picture name is less than the specified length, it is a dangerous name and will be ignored&lt;/li&gt; &#xA;   &lt;li&gt;The switch of&#39;ignore dangerous&#39; can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert picture], automatically insert pictures, and simulate manual calls according to context and type, and the number of inserts can be specified&lt;/li&gt; &#xA; &lt;li&gt;[Rename property], support all types of @property , advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Identify grammar, identify type, inheritance relationship, &lt;strong&gt;attribute name confusion and class name (including inheritance chain) association&lt;/strong&gt; , automatically identify system attributes&lt;/li&gt; &#xA;   &lt;li&gt;File name Model suffix filtering can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert property], creation, assignment, and modification are all associated with existing types, smart noun replacement &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&#39;Percentage control&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Model suffix&#39; switch, purpose: to avoid model archiving or data transfer failure&lt;/li&gt; &#xA;   &lt;li&gt;Can be executed multiple times, the index x2 increases&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename method], similar to Xcode&#39;s Rename function , advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Syntax-related, identification of types, inheritance relationships, support for &lt;strong&gt;multi-parameter modification, confusion of method names, class names (including inheritance chains) and type associations&lt;/strong&gt; , automatic identification of system methods&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert method], insert and call context-related methods, bid farewell to &#34;garbage code&#34;, advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;According to the return value type of the method, create the corresponding method in the category. At the same time , the return value of the original method is encapsulated and use (local variables, attributes, formal parameters) called.&lt;/li&gt; &#xA;   &lt;li&gt;Can be executed multiple times, the index x2 increases&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Modification method], simulating manual package call, advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Split the call&lt;/strong&gt; to the original method &lt;strong&gt;and adjust&lt;/strong&gt; it &lt;strong&gt;locally according to the parameter type (support inheritance)&lt;/strong&gt; . For details, see the &lt;a href=&#34;https://www.yuque.com/docs/share/315b72d9-28f9-4fa6-bf20-c40d94f2253a?translate=en&#34;&gt;summary table of supported parameter types.&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Can be executed multiple times, the index x2 increases&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename global variables], smart noun substitution&lt;/li&gt; &#xA; &lt;li&gt;[Modify global variables], replace global variable names, &lt;strong&gt;convert global variables into global functions&lt;/strong&gt; , and confuse string variable values&lt;/li&gt; &#xA; &lt;li&gt;[Insert local variable], single-line compound call becomes simple multi-line call, change the execution order&lt;/li&gt; &#xA; &lt;li&gt;[Modify local variable], simulate manual encapsulation call, variable name association type, advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Local variable values remain unchanged during operation, see the &lt;a href=&#34;https://www.yuque.com/docs/share/90444065-4f4e-49c8-9e1a-5bd3d3b4f84d?translate=en&#34;&gt;summary table of supported types for&lt;/a&gt; details&lt;/li&gt; &#xA;   &lt;li&gt;Can be executed multiple times, the index x2 increases&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename multilingual], using a system of direct or indirect methods &lt;strong&gt;NSLocalizedString&lt;/strong&gt; , &lt;strong&gt;NSLocalizedStringFromTable&lt;/strong&gt; multilingual modified，&lt;a href=&#34;https://520coding.yuque.com/docs/share/de45751a-c629-4737-84ad-251fb2502123?translate=en&#34;&gt;The custom packaging methods require manual processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Modify string], support arbitrary string, encryption processing (hard code -&amp;gt; memory), the original string is kept in the comment for easy inspection &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Set the&#39;minimum length&#39; filter&lt;/li&gt; &#xA;   &lt;li&gt;You can also set the &#34; effective number&#34; to use together&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Modify xib, storyboard], automatically insert the view, and modify the internal structure properties&lt;/li&gt; &#xA; &lt;li&gt;[Modify font] , randomly fine-tune the font used in the project, and identify macros&lt;/li&gt; &#xA; &lt;li&gt;[Modify color], randomly shift the color of the UI controls in the project, and identify the macro&lt;/li&gt; &#xA; &lt;li&gt;[UI layout offset], support frame, Mansonry, SDAutoLayout common layout fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;[Insert file], generate other files (Combined with network, storage, and MVC to ensure that the code has high relevance and practical significance), automatic high-related calls in the project ; &lt;strong&gt;Note:&lt;/strong&gt; (Under the project root path, a folder of &#34; &lt;strong&gt;other_xxx_file&lt;/strong&gt; &#34; will be generated , and the sub-option &lt;strong&gt;Target&lt;/strong&gt; controls Import method, if it is empty, you need to manually import, just drag the generated folder into the project; otherwise, automatically import)&lt;/li&gt; &#xA; &lt;li&gt;[Insert text], Generate json, txt, plist and other common text files, automatic high-related calls in the project ; &lt;strong&gt;note:&lt;/strong&gt; (under the project root path, a folder of &#34; &lt;strong&gt;other_xxx_text&lt;/strong&gt; &#34; will be generated , and the generated files will be &lt;strong&gt;automatically imported&lt;/strong&gt; )&lt;/li&gt; &#xA; &lt;li&gt;[Rename class], the class name is not limited (for example: my, My), you can specify to add a prefix, support class|struct|protocol，advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Smart noun substitution&lt;/li&gt; &#xA;   &lt;li&gt;Can be set to&#39;rename files with the same name&#39;&lt;/li&gt; &#xA;   &lt;li&gt;You can set&#39;rename similar strings&#39;, (ignore | equal | include) three modes&lt;/li&gt; &#xA;   &lt;li&gt;Added &#39;correct non-standard dot grammar&#39;, calling for non-standard dot grammar (methods are called as attributes) &lt;a name=&#34;015937695b202fc108bd5bc9b3283082&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;C++&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;[Rename attribute], support all type attributes, recognize syntax, recognize type, inherit&lt;/li&gt; &#xA; &lt;li&gt;[Insert attributes], insert attributes (member variables) and call each other to modify, automatic initialization, destruction, and assignment modification in other methods and other similar manual operations, support&#39;percentage control&#39;&lt;/li&gt; &#xA; &lt;li&gt;[Rename method], similar to Xcode&#39;s Rename function, identifying types, templates, overloading, rewriting, inheritance, etc.&lt;/li&gt; &#xA; &lt;li&gt;[Modification method], use overloading technology to modify the function prototype and call the modified parameter&lt;/li&gt; &#xA; &lt;li&gt;[Modify string], support arbitrary string, encryption processing (hard code -&amp;gt; memory), the original string is kept in the comment for easy inspection &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Set the&#39;minimum length&#39; filter&lt;/li&gt; &#xA;   &lt;li&gt;You can also set the &#34; effective number&#34; to use together&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename class], support template and other types &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Can switch the old mode&lt;/li&gt; &#xA;   &lt;li&gt;Prefix setting&lt;/li&gt; &#xA;   &lt;li&gt;Can be set to&#39;rename files with the same name&#39; &lt;a name=&#34;ea78561d0c1d5c21d3e2c93d960472e5&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Cocos2d-x&lt;/h3&gt; &#xA;&lt;p&gt;This part of the function is integrated into C++ and supports cocos2dx automatic filtering &lt;a name=&#34;47038e8338f9e18ef9eaba0ea5effb80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Swift&lt;/h3&gt; &#xA;&lt;p&gt;Adapt to Swift5.3, the SPM package management project has not yet been tested&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;[Rename global method] to automatically identify system methods &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Can set &#39;parameter label&#39;, support hidden parameter label and trailing closure usage&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename Picture], smart noun replacement, and automatically correct the situation where the picture name and the xcassets folder name do not correspond to each other &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;You can set a ‘run splicing name’ for the image name generated by string splicing at runtime&lt;/li&gt; &#xA;   &lt;li&gt;‘Ignore dangerous names’ switch can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert Picture], which automatically inserts pictures, and simulates manual calls according to the context and type, and the number of insertions can be specified&lt;/li&gt; &#xA; &lt;li&gt;[Rename enum], support associated values and primitive values&lt;/li&gt; &#xA; &lt;li&gt;[Rename attribute], basic function, without too much description, advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Similar to OC [Rename attribute], identify inheritance chain and nested type, support storage and calculation of attributes, observers, wrappers, class attributes&lt;/li&gt; &#xA;   &lt;li&gt;File name Model suffix filtering can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert property], use calculated properties to wrap and call and replace the original properties &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Support storage and calculation of attributes, observers, wrappers, class attributes&lt;/li&gt; &#xA;   &lt;li&gt;File name Model suffix filtering can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Rename method], the basic functions are renamed similar to other tools, without too much description, advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Can set &#39;parameter label&#39;, support hidden parameter label and trailing closure usage&lt;/li&gt; &#xA;   &lt;li&gt;Identification of inheritance chain nested types, support for (class, struct, enum) static methods and instance methods, and optional chains, etc.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Insert method], encapsulate the return value of the original method and use the context to call additional associated methods, saying goodbye to &#34;garbage code&#34;&lt;/li&gt; &#xA; &lt;li&gt;[Modification method], use overloading technology to modify the function prototype and call the modified parameter&lt;/li&gt; &#xA; &lt;li&gt;[Rename global variables], smart noun substitution&lt;/li&gt; &#xA; &lt;li&gt;[Modify font] , randomly fine-tune the font used in the project, and identify macros&lt;/li&gt; &#xA; &lt;li&gt;[Modify color], randomly shift the color of UI controls in the project&lt;/li&gt; &#xA; &lt;li&gt;[UI layout offset], temporarily only supports Frame layout fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;[Insert local variable], split single-line compound calls, change the execution order&lt;/li&gt; &#xA; &lt;li&gt;[Modify local variable], simulate manual encapsulation call, variable name association type (support nesting), advantages: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The value of the local variable remains unchanged during operation. For details, see the summary table of supported types.&lt;/li&gt; &#xA;   &lt;li&gt;Can be executed multiple times, the index x2 increases&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Modify string], recognize single-line, multi-line, string interpolation, and extended string. After the modification, it can be freely combined by a variety of methods such as encryption and split character groups, and the comments of the original characters are reserved for easy inspection &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Set the&#39;minimum length&#39; filter&lt;/li&gt; &#xA;   &lt;li&gt;You can also set the &#34;effective number&#34; to use together&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Modify xib, storyboard], automatically insert the view, and modify the internal structure properties&lt;/li&gt; &#xA; &lt;li&gt;[Insert file], close to actual development (combined with network, storage, MVC, xib, etc., to ensure that the code has high relevance and practical significance), and strengthen contextual relevance. Can set &#39;file name prefix&#39;, set &#39;Target import&#39; in the same way as OC&lt;/li&gt; &#xA; &lt;li&gt;[Insert text], generate common text files such as json, txt, plist, etc., and automatically high-related calls in the project (introduction of attributes, initialization, automatic destruction, etc.). Note: (under the project root path, the folder &#34;other_xxx_text&#34; will be generated, and the generated files will be automatically imported)&lt;/li&gt; &#xA; &lt;li&gt;[Rename class], the class name is not limited (for example: my, My), identify nested types and typealias, support class|struct|enum|protocol &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Can be set to&#39;rename files with the same name&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&#39;Prefix&#39; can be set&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: At present, the Swift and OC mixed project, the OC calling Swift part will not be processed for the time being, and will be optimized in the future.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a name=&#34;6554a51551d5572e2cd7d848844e9660&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Planning&lt;/h2&gt; &#xA;&lt;p&gt;Update iterations will be carried out in the following order&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Objective-C (95%), mainly to improve the versatility and stability of the tool, and strengthen the function &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Audio and video files are used less and will be added later&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Swift (90%), under development... &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Optimize performance&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;C++ (60%), under development... &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Method: Insert&lt;/li&gt; &#xA;   &lt;li&gt;Property: modify&lt;/li&gt; &#xA;   &lt;li&gt;Global variables: modify&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Lua (0%) is too specific, and it is temporarily closed. If users have this demand, we will refactor this part&lt;/li&gt; &#xA; &lt;li&gt;C# (0%), I don’t use much in actual projects, so I ranked last, depending on user needs before deciding&lt;/li&gt; &#xA; &lt;li&gt;Other functions: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Fast obfuscation mode &lt;a name=&#34;af444a353c9380bc9aa8aec067937316&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Graphic introduction&lt;/h1&gt; &#xA;&lt;p&gt;Run the APP rendering, please read the &lt;a href=&#34;https://www.yuque.com/docs/share/cd0968ac-9c7e-415f-9e7c-1460b85e80e8&#34;&gt;tool usage tutorial&lt;/a&gt; in detail before use&lt;br&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2021/png/213807/1623167266244-4978d5ed-0b2c-42b5-80c4-1b44e4ff7f96.png#clientId=u4ef53c93-4376-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;errorMessage=unknown%20error&amp;amp;from=paste&amp;amp;height=877&amp;amp;id=ufbdd65fd&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;name=image.png&amp;amp;originHeight=1754&amp;amp;originWidth=2532&amp;amp;originalType=binary&amp;amp;ratio=2&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=443560&amp;amp;status=error&amp;amp;style=none&amp;amp;taskId=ue83d9a90-392f-4558-9b46-f06320d2c45&amp;amp;title=&amp;amp;width=1266&#34; alt=&#34;image.png&#34;&gt; &lt;a name=&#34;c318fa67bf88d5d842cee03115743b4b&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Update log&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a name=&#34;ckOtE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;v6.4.2 (2022.09.22)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Added Swift [rename global variable], smart noun replacement&lt;/li&gt; &#xA; &lt;li&gt;Strengthen OC [rename class], support protocols and structures&lt;/li&gt; &#xA; &lt;li&gt;Fix OC[insert attribute], .m may conflict with readonly and .h&lt;/li&gt; &#xA; &lt;li&gt;Optimized test cases, split into confuse_test, confuse_test_oc, confuse_test_swift for quick testing&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/39f2f60e-b6a8-443b-b005-b9364fb79b95?translate=en&#34;&gt;View more historical update records&lt;/a&gt; &lt;a name=&#34;41b9f638a3e62c9449ec872644258c8d&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Thanks for the feedback&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shizu2014&#34;&gt;shizu2014&lt;/a&gt;、&lt;a href=&#34;https://github.com/myhonior&#34;&gt;myhonior&lt;/a&gt;、&lt;a href=&#34;https://github.com/imbahong&#34;&gt;imbahong&lt;/a&gt;、&lt;a href=&#34;https://github.com/tabier008&#34;&gt;tabier008&lt;/a&gt; &lt;a name=&#34;0ae29cb26e944f357b114cccc4c1211b&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Link navigation&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/cd0968ac-9c7e-415f-9e7c-1460b85e80e8&#34;&gt;Tool usage tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/4a87ec96-80fe-4d25-873d-93cb428b3e15?translate=en&#34;&gt;Software Questions and Answers (Q&amp;amp;A)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/315b72d9-28f9-4fa6-bf20-c40d94f2253a?translate=en&#34;&gt;OC[Modification method] Parameter type summary table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/90444065-4f4e-49c8-9e1a-5bd3d3b4f84d?translate=en&#34;&gt;OC[Modify local variables] Modify local variables-summary table of supported types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://520coding.yuque.com/docs/share/de45751a-c629-4737-84ad-251fb2502123?translate=en&#34;&gt;OC[Rename multilingual] processing custom packaging method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://520coding.yuque.com/docs/share/cd70e83b-4ab4-40e5-b719-70f214e869c8&#34;&gt;Swift[Modification method] Parameter type summary table&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Affirm/affirm-merchant-sdk-ios</title>
    <updated>2022-09-26T01:36:14Z</updated>
    <id>tag:github.com,2022-09-26:/Affirm/affirm-merchant-sdk-ios</id>
    <link href="https://github.com/Affirm/affirm-merchant-sdk-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrate Affirm into your iOS app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Affirm iOS SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cocoadocs.org/docsets/AffirmSDK&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AffirmSDK.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/AffirmSDK.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Affirm iOS SDK allows you to offer Affirm in your own app.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt; and &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; are the recommended methods for installing the Affirm SDK.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt; CocoaPods &lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following to your Podfile and run &lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;AffirmSDK&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt; Carthage &lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following to your Cartfile and follow the setup instructions &lt;a href=&#34;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;Affirm/affirm-merchant-sdk-ios&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift Package Manager&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;strong&gt;&lt;strong&gt; &lt;p&gt;From Xcode 11+ :&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Select File &amp;gt; Swift Packages &amp;gt; Add Package Dependency. Enter &lt;code&gt;https://github.com/Affirm/affirm-merchant-sdk-ios&lt;/code&gt; in the &#34;Choose Package Repository&#34; dialog.&lt;/li&gt; &#xA;   &lt;li&gt;In the next page, specify the version resolving rule as &#34;Up to Next Major&#34; with &#34;5.0.23&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;After Xcode checked out the source and resolving the version, you can choose the &#34;AffirmSDK&#34; library and add it to your app target.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;For more info, read &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;Adding Package Dependencies to Your App&lt;/a&gt; from Apple.&lt;/p&gt; &lt;p&gt;Alternatively, you can also add AffirmSDK to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/Affirm/affirm-merchant-sdk-ios&#34;, .upToNextMajor(from: &#34;5.0.23&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt; Manual &lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Alternatively, if you do not want to use CocoaPods or Carthage, you may clone our &lt;a href=&#34;https://github.com/Affirm/affirm-merchant-sdk-ios&#34;&gt;GitHub repository&lt;/a&gt; and simply drag and drop the &lt;code&gt;AffirmSDK&lt;/code&gt; folder into your XCode project.&lt;/p&gt; &lt;h1&gt;Usage Overview&lt;/h1&gt; &lt;p&gt;An Affirm integration consists of two components: checkout and promotional messaging.&lt;/p&gt; &lt;p&gt;Before you can use these components, you must first set the AffirmSDK with your public API key from your sandbox &lt;a href=&#34;https://sandbox.affirm.com/dashboard&#34;&gt;Merchant Dashboard&lt;/a&gt;. You must set this key to the shared AffirmConfiguration once (preferably in your AppDelegate) as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[[AffirmConfiguration sharedInstance] configureWithPublicKey:@&#34;PUBLIC_API_KEY&#34; locale:AffirmLocaleUS environment:AffirmEnvironmentSandbox merchantName:@&#34;Affirm Example&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Checkout&lt;/h2&gt; &lt;h3&gt;Checkout creation&lt;/h3&gt; &lt;p&gt;Checkout creation is the process in which a customer uses Affirm to pay for a purchase in your app. This process is governed by the &lt;code&gt;AffirmCheckoutViewController&lt;/code&gt; object, which requires three parameters:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;The &lt;code&gt;AffirmCheckout&lt;/code&gt; object which contains details about the order&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The &lt;code&gt;useVCN&lt;/code&gt; object which determines whether the checkout flow should use virtual card network to handle the checkout.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;if set YES, it will return the debit card information from this delegate&lt;/p&gt; &lt;pre&gt;&lt;code&gt;- (void)vcnCheckout:(AffirmCheckoutViewController *)checkoutViewController completedWithCreditCard:(AffirmCreditCard *)creditCard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;if set NO, it will return checkout token from this delegate&lt;/p&gt; &lt;pre&gt;&lt;code&gt;- (void)checkout:(AffirmCheckoutViewController *)checkoutViewController completedWithToken:(NSString *)checkoutToken&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The &lt;code&gt;AffirmCheckoutDelegate&lt;/code&gt; object which receives messages at various stages in the checkout process&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Once the AffirmCheckoutViewController has been constructed from the parameters above, you may present it with any other view controller. This initiates the flow which guides the user through the Affirm checkout process. An example of how this is implemented is provided as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;// initialize an AffirmItem with item details&#xA;AffirmItem *item = [AffirmItem itemWithName:@&#34;Affirm Test Item&#34; SKU:@&#34;test_item&#34; unitPrice:price quantity:1 URL:[NSURL URLWithString:@&#34;http://sandbox.affirm.com/item&#34;]];&#xA;&#xA;// initialize an AffirmShippingDetail with the user&#39;s shipping address&#xA;AffirmShippingDetail *shipping = [AffirmShippingDetail shippingDetailWithName:@&#34;Chester Cheetah&#34; addressWithLine1:@&#34;633 Folsom Street&#34; line2:@&#34;&#34; city:@&#34;San Francisco&#34; state:@&#34;CA&#34; zipCode:@&#34;94107&#34; countryCode:@&#34;USA&#34;];&#xA;&#xA;// initialize an AffirmCheckout object with the item(s), shipping details, tax amount, shipping amount, discounts, financing program, and order ID&#xA;AffirmCheckout *checkout = [[AffirmCheckout alloc] initWithItems:@[item] shipping:shipping taxAmount:[NSDecimalNumber zero] shippingAmount:[NSDecimalNumber zero] discounts:nil metadata:nil financingProgram:nil orderId:@&#34;JKLMO4321&#34;];&#xA;&#xA;// The minimum requirements are to initialize the AffirmCheckout object with the item(s), shipping details, and payout Amount&#xA;AffirmCheckout *checkout = [AffirmCheckout checkoutWithItems:@[item] shipping:shipping payoutAmount:price];&#xA;&#xA;// initialize an UINavigationController with the checkout object and present it&#xA;AffirmCheckoutViewController *checkoutViewController = [[AffirmCheckoutViewController alloc] initWithDelegate:self checkout:checkout useVCN:NO getReasonCodes:NO cardAuthWindow:10];&#xA;UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:checkoutViewController];&#xA;[self presentViewController:nav animated:YES completion:nil];&#xA;&#xA;// It is recommended that you round the total in the checkout request to two decimal places. Affirm SDK converts the float total to integer cents before initiating the checkout, so may round up or down depending on the decimal places. Ensure that the rounding in your app uses the same calculation across your other backend systems, otherwise, it may cause an error of 1 cent or more in the total validation on your end. &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The flow ends once the user has successfully confirmed the checkout or vcn checkout, canceled the checkout, or encountered an error in the process. In each of these cases, Affirm will send a message to the AffirmCheckoutDelegate along with additional information about the result.&lt;/p&gt; &lt;h3&gt;Charge authorization&lt;/h3&gt; &lt;p&gt;Once the checkout has been successfully confirmed by the user, the AffirmCheckoutDelegate object will receive a checkout token. This token should be forwarded to your server, which should then use the token to authorize a charge on the user&#39;s account. For more details about the server integration, see our &lt;a href=&#34;https://docs.affirm.com/Integrate_Affirm/Direct_API#3._Authorize_the_charge&#34;&gt;API documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Note - For VCN Checkout, all actions should be done using your existing payment gateway and debit card processor using the virtual card number returned after a successful checkout.&lt;/p&gt; &lt;h2&gt;Promotional Messaging&lt;/h2&gt; &lt;p&gt;Affirm promotional messaging components—monthly payment messaging and educational modals—show customers how they can use Affirm to finance their purchases. Promos consist of promotional messaging, which appears directly in your app, and a modal, which offers users an ability to prequalify.&lt;/p&gt; &lt;p&gt;To create promotional messaging view, the SDK provides the &lt;code&gt;AffirmPromotionalButton&lt;/code&gt; class, only requires the developer to add to their view and configure to implement. The AffirmPromotionalButton is implemented as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;self.promotionalButton = [[AffirmPromotionalButton alloc] initWithPromoID:nil&#xA;                                                                  showCTA:YES&#xA;                                                                 pageType:AffirmPageTypeProduct&#xA;                                                 presentingViewController:self&#xA;                                                                    frame:CGRectMake(0, 0, 315, 34)];&#xA;[self.stackView insertArrangedSubview:self.promotionalButton atIndex:0];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To show / refresh promotional messaging, use&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[self.promotionalButton configureByHtmlStylingWithAmount:[NSDecimalNumber decimalNumberWithString:amountText]&#xA;                                          affirmLogoType:AffirmLogoTypeName&#xA;                                             affirmColor:AffirmColorTypeBlue&#xA;                                           remoteFontURL:fontURL&#xA;                                            remoteCssURL:cssURL];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;self.promotionalButton.configure(amount: NSDecimalNumber(string: amountText),&#xA;                         affirmLogoType: .name,&#xA;                            affirmColor: .blue,&#xA;                                   font: UIFont.italicSystemFont(ofSize: 15),&#xA;                              textColor: .gray)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you have got the html raw string, you could show the promotional messaging using&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[self.promotionalButton configureWithHtmlString:html&#xA;                                         amount:amount&#xA;                                  remoteFontURL:fontURL&#xA;                                   remoteCssURL:cssURL];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;[Note: the amount fields passed to the promotional messaging configuration methods should be in dollars (no cents), so it is best practice to round up to the nearest dollar before passing.]&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you want to use local fonts, you need do following steps:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;ol&gt; &#xA;    &lt;li&gt;Add the font files to your project (make sure that the files are targeted properly to your application)&lt;/li&gt; &#xA;    &lt;li&gt;Add the font files to yourApp-Info.plist&lt;/li&gt; &#xA;    &lt;li&gt;Use the font in your CSS file, for example&lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt;@font-face&#xA;{&#xA;font-family: &#39;OpenSansCondensed-Bold&#39;;&#xA;src: local(&#39;OpenSansCondensed-Bold&#39;),url(&#39;OpenSansCondensed-Bold.ttf&#39;) format(&#39;truetype&#39;);&#xA;}&#xA;&#xA;body {&#xA;font-family: &#39;OpenSansCondensed-Light&#39;;&#xA;font-weight: normal;&#xA;!important;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;[Note: if no promotional message returned, the button will be hidden automatically]&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Tapping on the Promotional button automatically opens a modal in an &lt;code&gt;AffirmPrequalModalViewController&lt;/code&gt; with more information, including (if you have it configured) a button that prompts the user to prequalify for Affirm financing.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;[Note: The AffirmPrequalModalViewController is deprecated as of SDK version 4.0.13.]&lt;/strong&gt; To display the AffirmPromoModal outside of tapping on the AffirmPromotionalButton, you may initialize and display an instance of the promo modal viewController as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;AffirmPromoModalViewController *viewController = [[AffirmPromoModalViewController alloc] initWithPromoId:@&#34;promo_id&#34; amount:amount delegate:delegate];&#xA;UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:viewController];&#xA;[self.presentingViewController presentViewController:nav animated:YES completion:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Retrieve raw string from As low as message&lt;/h2&gt; &lt;p&gt;You can retrieve raw string using &lt;code&gt;AffirmDataHandler&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NSDecimalNumber *dollarPrice = [NSDecimalNumber decimalNumberWithString:self.amountTextField.text];&#xA;[AffirmDataHandler getPromoMessageWithPromoID:nil&#xA;                                       amount:dollarPrice&#xA;                                      showCTA:YES&#xA;                                     pageType:AffirmPageTypeBanner&#xA;                                     logoType:AffirmLogoTypeName&#xA;                                    colorType:AffirmColorTypeBlue&#xA;                                         font:[UIFont boldSystemFontOfSize:15]&#xA;                                    textColor:[UIColor grayColor]&#xA;                     presentingViewController:self&#xA;                            completionHandler:^(NSAttributedString *attributedString, UIViewController *viewController, NSError *error) {&#xA;                                [self.promoButton setAttributedTitle:attributedString forState:UIControlStateNormal];&#xA;                                self.promoViewController = viewController;&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that, you could present promo modal using&lt;/p&gt; &lt;pre&gt;&lt;code&gt;UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:self.promoViewController];&#xA;[self presentViewController:nav animated:YES completion:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Track Order Confirmed&lt;/h2&gt; &lt;p&gt;The trackOrderConfirmed event triggers when a customer completes their purchase. The SDK provides the &lt;code&gt;AffirmOrderTrackerViewController&lt;/code&gt; class to track it, it requires &lt;code&gt;AffirmOrder&lt;/code&gt; and an array with &lt;code&gt;AffirmProduct&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[AffirmOrderTrackerViewController trackOrder:order products:@[product0, product1]];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;[Note: this feature will be improved after the endpoint is ready for app and it will be disappeared after 5 seconds]&lt;/strong&gt;&lt;/p&gt; &lt;h1&gt;Example&lt;/h1&gt; &lt;p&gt;A demo app that integrates Affirm is included in the repo. You may clone our &lt;a href=&#34;https://github.com/Affirm/affirm-merchant-sdk-ios&#34;&gt;GitHub repository&lt;/a&gt; into a new XCode project folder and run the Examples project.&lt;/p&gt; &lt;h1&gt;Upgrade&lt;/h1&gt; &lt;p&gt;If you are using an older version of the SDK, you can refer to this &lt;a href=&#34;https://github.com/Affirm/affirm-merchant-sdk-ios/raw/master/UPGRADE.md&#34;&gt;upgrade document&lt;/a&gt;. We recommend that you install the lastest version of this SDK to access the most up-to-date features and experience.&lt;/p&gt; &lt;h1&gt;Changelog&lt;/h1&gt; &lt;p&gt;All notable changes to this project will be documented in &lt;a href=&#34;https://github.com/Affirm/affirm-merchant-sdk-ios/raw/master/CHANGELOG.md&#34;&gt;changelog document&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Package Size&lt;/h1&gt; &lt;p&gt;Final Binary Size: 0.67 MB&lt;/p&gt; &lt;/strong&gt;&lt;/strong&gt;</summary>
  </entry>
</feed>