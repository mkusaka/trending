<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-11T01:53:51Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chirag04/react-native-mail</title>
    <updated>2023-12-11T01:53:51Z</updated>
    <id>tag:github.com,2023-12-11:/chirag04/react-native-mail</id>
    <link href="https://github.com/chirag04/react-native-mail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A wrapper on top of MFMailComposeViewController from iOS and Mail Intent on android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-mail&lt;/h1&gt; &#xA;&lt;p&gt;A React Native wrapper for Apple&#39;s &lt;code&gt;MFMailComposeViewController&lt;/code&gt; from iOS and Mail Intent on android Supports emails with attachments.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There was a breaking change in RN &amp;gt;=40. So for React Native &amp;gt;= 0.40: use v3.x and higher of this lib. otherwise use v2.x&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i --save react-native-mail # npm syntax&#xA;yarn add react-native-mail # yarn syntax&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Automatic Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can automatically link the native components or follow the manual instructions below if you prefer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;react-native link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation: Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In &lt;code&gt;android/setting.gradle&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;...&#xA;include &#39;:RNMail&#39;, &#39;:app&#39;&#xA;project(&#39;:RNMail&#39;).projectDir = new File(rootProject.projectDir, &#39;../node_modules/react-native-mail/android&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In &lt;code&gt;android/app/build.gradle&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;...&#xA;dependencies {&#xA;    ...&#xA;    compile project(&#39;:RNMail&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if MainActivity extends Activity: register module in MainActivity.java&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.chirag.RNMail.*;  // &amp;lt;--- import&#xA;&#xA;public class MainActivity extends Activity implements DefaultHardwareBackBtnHandler {&#xA;  ......&#xA;&#xA;  @Override&#xA;  protected void onCreate(Bundle savedInstanceState) {&#xA;    super.onCreate(savedInstanceState);&#xA;    mReactRootView = new ReactRootView(this);&#xA;&#xA;    mReactInstanceManager = ReactInstanceManager.builder()&#xA;      .setApplication(getApplication())&#xA;      .setBundleAssetName(&#34;index.android.bundle&#34;)&#xA;      .setJSMainModuleName(&#34;index.android&#34;)&#xA;      .addPackage(new MainReactPackage())&#xA;      .addPackage(new RNMail())              // &amp;lt;------ add here&#xA;      .setUseDeveloperSupport(BuildConfig.DEBUG)&#xA;      .setInitialLifecycleState(LifecycleState.RESUMED)&#xA;      .build();&#xA;&#xA;    mReactRootView.startReactApplication(mReactInstanceManager, &#34;ExampleRN&#34;, null);&#xA;&#xA;    setContentView(mReactRootView);&#xA;  }&#xA;&#xA;  ......&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;else if MainActivity extends ReactActivity: register module in &lt;code&gt;MainApplication.java&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.chirag.RNMail.*; // &amp;lt;--- import&#xA;&#xA;public class MainApplication extends Application implements ReactApplication {&#xA;    ....&#xA;&#xA;    @Override&#xA;    protected List&amp;lt;ReactPackage&amp;gt; getPackages() {&#xA;      return Arrays.&amp;lt;ReactPackage&amp;gt;asList(&#xA;          new MainReactPackage(),&#xA;          new RNMail()      // &amp;lt;------ add here&#xA;      );&#xA;    }&#xA;  };&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation: iOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install react-native-mail --save&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open your project in XCode, right click on &lt;code&gt;Libraries&lt;/code&gt; and click &lt;code&gt;Add Files to &#34;Your Project Name&#34;&lt;/code&gt; &lt;a href=&#34;http://url.brentvatne.ca/jQp8&#34;&gt;(Screenshot)&lt;/a&gt; then navigate to node_modules/react-native-mail and select RNMail.xcodeproj &lt;a href=&#34;https://github.com/pedramsaleh/react-native-mail/raw/master/add-xcodeproj.png?raw=true&#34;&gt;(Screenshot)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;libRNMail.a&lt;/code&gt; to &lt;code&gt;Build Phases -&amp;gt; Link Binary With Libraries&lt;/code&gt; &lt;a href=&#34;http://url.brentvatne.ca/17Xfe&#34;&gt;(Screenshot)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Whenever you want to use it within React code now you can: &lt;code&gt;var Mailer = require(&#39;NativeModules&#39;).RNMail;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;/**&#xA; * Sample React Native App&#xA; * https://github.com/facebook/react-native&#xA; * @flow&#xA; */&#xA;&#xA;import React, { Component } from &#39;react&#39;;&#xA;import { View, Alert, Button } from &#39;react-native&#39;;&#xA;import Mailer from &#39;react-native-mail&#39;;&#xA;&#xA;export default class App extends Component {&#xA;&#xA;  handleEmail = () =&amp;gt; {&#xA;    Mailer.mail({&#xA;      subject: &#39;need help&#39;,&#xA;      recipients: [&#39;support@example.com&#39;],&#xA;      ccRecipients: [&#39;supportCC@example.com&#39;],&#xA;      bccRecipients: [&#39;supportBCC@example.com&#39;],&#xA;      body: &#39;&amp;lt;b&amp;gt;A Bold Body&amp;lt;/b&amp;gt;&#39;,&#xA;      customChooserTitle: &#39;This is my new title&#39;, // Android only (defaults to &#34;Send Mail&#34;)&#xA;      isHTML: true,&#xA;      attachments: [{&#xA;        // Specify either `path` or `uri` to indicate where to find the file data.&#xA;        // The API used to create or locate the file will usually indicate which it returns.&#xA;        // An absolute path will look like: /cacheDir/photos/some image.jpg&#xA;        // A URI starts with a protocol and looks like: content://appname/cacheDir/photos/some%20image.jpg&#xA;        path: &#39;&#39;, // The absolute path of the file from which to read data.&#xA;        uri: &#39;&#39;, // The uri of the file from which to read the data.&#xA;        // Specify either `type` or `mimeType` to indicate the type of data.&#xA;        type: &#39;&#39;, // Mime Type: jpg, png, doc, ppt, html, pdf, csv&#xA;        mimeType: &#39;&#39;, // - use only if you want to use custom type&#xA;        name: &#39;&#39;, // Optional: Custom filename for attachment&#xA;      }]&#xA;    }, (error, event) =&amp;gt; {&#xA;      Alert.alert(&#xA;        error,&#xA;        event,&#xA;        [&#xA;          {text: &#39;Ok&#39;, onPress: () =&amp;gt; console.log(&#39;OK: Email Error Response&#39;)},&#xA;          {text: &#39;Cancel&#39;, onPress: () =&amp;gt; console.log(&#39;CANCEL: Email Error Response&#39;)}&#xA;        ],&#xA;        { cancelable: true }&#xA;      )&#xA;    });&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;View style={styles.container}&amp;gt;&#xA;        &amp;lt;Button&#xA;          onPress={this.handleEmail}&#xA;          title=&#34;Email Me&#34;&#xA;          color=&#34;#841584&#34;&#xA;          accessabilityLabel=&#34;Purple Email Me Button&#34;&#xA;        /&amp;gt;&#xA;      &amp;lt;/View&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Note&lt;/h3&gt; &#xA;&lt;p&gt;On Android, the &lt;code&gt;callback&lt;/code&gt; will only be called if an &lt;code&gt;error&lt;/code&gt; occurs. The &lt;code&gt;event&lt;/code&gt; argument is unused!&lt;/p&gt; &#xA;&lt;h2&gt;Here is how it looks:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/chirag04/react-native-mail/raw/master/screenshot.png&#34; alt=&#34;Demo gif&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>