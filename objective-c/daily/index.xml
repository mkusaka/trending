<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-17T01:33:20Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ibireme/YYCache</title>
    <updated>2024-10-17T01:33:20Z</updated>
    <id>tag:github.com,2024-10-17:/ibireme/YYCache</id>
    <link href="https://github.com/ibireme/YYCache" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High performance cache framework for iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YYCache&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ibireme/YYCache/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;http://cocoapods.org/pods/YYCache&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/YYCache.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;http://cocoadocs.org/docsets/YYCache&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/YYCache.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://www.apple.com/nl/ios/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-iOS%206%2B%20-blue.svg?style=flat&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://travis-ci.org/ibireme/YYCache&#34;&gt;&lt;img src=&#34;https://travis-ci.org/ibireme/YYCache.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;High performance cache framework for iOS.&lt;br&gt; (It&#39;s a component of &lt;a href=&#34;https://github.com/ibireme/YYKit&#34;&gt;YYKit&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Performance&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYCache/master/Benchmark/Result_memory.png&#34; alt=&#34;Memory cache benchmark result&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYCache/master/Benchmark/Result_disk.png&#34; alt=&#34;Disk benchmark result&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may &lt;a href=&#34;http://www.sqlite.org/download.html&#34;&gt;download&lt;/a&gt; and compile the latest version of sqlite and ignore the libsqlite3.dylib in iOS system to get higher performance.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;Benchmark/CacheBenchmark.xcodeproj&lt;/code&gt; for more benchmark case.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LRU&lt;/strong&gt;: Objects can be evicted with least-recently-used algorithm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Limitation&lt;/strong&gt;: Cache limitation can be controlled with count, cost, age and free space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;: The API is similar to &lt;code&gt;NSCache&lt;/code&gt;, all methods are thread-safe.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Memory Cache&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Release Control&lt;/strong&gt;: Objects can be released synchronously/asynchronously on main thread or background thread.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Automatically Clear&lt;/strong&gt;: It can be configured to automatically evict objects when receive memory warning or app enter background.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk Cache&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt;: It supports custom archive and unarchive method to store object which does not adopt NSCoding.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Storage Type Control&lt;/strong&gt;: It can automatically decide the storage type (sqlite / file) for each object to get better performance.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;pod &#39;YYCache&#39;&lt;/code&gt; to your Podfile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pod install&lt;/code&gt; or &lt;code&gt;pod update&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Import &amp;lt;YYCache/YYCache.h&amp;gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;github &#34;ibireme/YYCache&#34;&lt;/code&gt; to your Cartfile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;carthage update --platform ios&lt;/code&gt; and add the framework to your project.&lt;/li&gt; &#xA; &lt;li&gt;Import &amp;lt;YYCache/YYCache.h&amp;gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download all the files in the YYCache subdirectory.&lt;/li&gt; &#xA; &lt;li&gt;Add the source files to your Xcode project.&lt;/li&gt; &#xA; &lt;li&gt;Link with required frameworks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIKit&lt;/li&gt; &#xA;   &lt;li&gt;CoreFoundation&lt;/li&gt; &#xA;   &lt;li&gt;QuartzCore&lt;/li&gt; &#xA;   &lt;li&gt;sqlite3&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Import &lt;code&gt;YYCache.h&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Full API documentation is available on &lt;a href=&#34;http://cocoadocs.org/docsets/YYCache/&#34;&gt;CocoaDocs&lt;/a&gt;.&lt;br&gt; You can also install documentation locally using &lt;a href=&#34;https://github.com/tomaz/appledoc&#34;&gt;appledoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;This library requires &lt;code&gt;iOS 6.0+&lt;/code&gt; and &lt;code&gt;Xcode 8.0+&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;YYCache is provided under the MIT license. See LICENSE file for details.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;br&gt;&lt;br&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;中文介绍&lt;/h1&gt; &#xA;&lt;p&gt;高性能 iOS 缓存框架。&lt;br&gt; (该项目是 &lt;a href=&#34;https://github.com/ibireme/YYKit&#34;&gt;YYKit&lt;/a&gt; 组件之一)&lt;/p&gt; &#xA;&lt;h1&gt;性能&lt;/h1&gt; &#xA;&lt;p&gt;iPhone 6 上，内存缓存每秒响应次数 (越高越好): &lt;img src=&#34;https://raw.github.com/ibireme/YYCache/master/Benchmark/Result_memory.png&#34; alt=&#34;Memory cache benchmark result&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;iPhone 6 上，磁盘缓存每秒响应次数 (越高越好): &lt;img src=&#34;https://raw.github.com/ibireme/YYCache/master/Benchmark/Result_disk.png&#34; alt=&#34;Disk benchmark result&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;推荐到 SQLite 官网&lt;a href=&#34;http://www.sqlite.org/download.html&#34;&gt;下载&lt;/a&gt;和编译最新的 SQLite，替换 iOS 自带的 libsqlite3.dylib，以获得更好的性能。&lt;/p&gt; &#xA;&lt;p&gt;更多测试代码和用例见 &lt;code&gt;Benchmark/CacheBenchmark.xcodeproj&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LRU&lt;/strong&gt;: 缓存支持 LRU (least-recently-used) 淘汰算法。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;缓存控制&lt;/strong&gt;: 支持多种缓存控制方法：总数量、总大小、存活时间、空闲空间。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;兼容性&lt;/strong&gt;: API 基本和 &lt;code&gt;NSCache&lt;/code&gt; 保持一致, 所有方法都是线程安全的。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;内存缓存&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;对象释放控制&lt;/strong&gt;: 对象的释放(release) 可以配置为同步或异步进行，可以配置在主线程或后台线程进行。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;自动清空&lt;/strong&gt;: 当收到内存警告或 App 进入后台时，缓存可以配置为自动清空。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;磁盘缓存&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;可定制性&lt;/strong&gt;: 磁盘缓存支持自定义的归档解档方法，以支持那些没有实现 NSCoding 协议的对象。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;存储类型控制&lt;/strong&gt;: 磁盘缓存支持对每个对象的存储类型 (SQLite/文件) 进行自动或手动控制，以获得更高的存取性能。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;安装&lt;/h1&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 Podfile 中添加 &lt;code&gt;pod &#39;YYCache&#39;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;执行 &lt;code&gt;pod install&lt;/code&gt; 或 &lt;code&gt;pod update&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;导入 &amp;lt;YYCache/YYCache.h&amp;gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 Cartfile 中添加 &lt;code&gt;github &#34;ibireme/YYCache&#34;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;执行 &lt;code&gt;carthage update --platform ios&lt;/code&gt; 并将生成的 framework 添加到你的工程。&lt;/li&gt; &#xA; &lt;li&gt;导入 &amp;lt;YYCache/YYCache.h&amp;gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;手动安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载 YYCache 文件夹内的所有内容。&lt;/li&gt; &#xA; &lt;li&gt;将 YYCache 内的源文件添加(拖放)到你的工程。&lt;/li&gt; &#xA; &lt;li&gt;链接以下的 frameworks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIKit&lt;/li&gt; &#xA;   &lt;li&gt;CoreFoundation&lt;/li&gt; &#xA;   &lt;li&gt;QuartzCore&lt;/li&gt; &#xA;   &lt;li&gt;sqlite3&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;导入 &lt;code&gt;YYCache.h&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;文档&lt;/h1&gt; &#xA;&lt;p&gt;你可以在 &lt;a href=&#34;http://cocoadocs.org/docsets/YYCache/&#34;&gt;CocoaDocs&lt;/a&gt; 查看在线 API 文档，也可以用 &lt;a href=&#34;https://github.com/tomaz/appledoc&#34;&gt;appledoc&lt;/a&gt; 本地生成文档。&lt;/p&gt; &#xA;&lt;h1&gt;系统要求&lt;/h1&gt; &#xA;&lt;p&gt;该项目最低支持 &lt;code&gt;iOS 6.0&lt;/code&gt; 和 &lt;code&gt;Xcode 8.0&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;许可证&lt;/h1&gt; &#xA;&lt;p&gt;YYCache 使用 MIT 许可证，详情见 LICENSE 文件。&lt;/p&gt; &#xA;&lt;h1&gt;相关链接&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.ibireme.com/2015/10/26/yycache/&#34;&gt;YYCache 设计思路与技术细节&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>