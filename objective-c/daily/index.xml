<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-17T01:41:05Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fanyuecheng/Pica</title>
    <updated>2023-04-17T01:41:05Z</updated>
    <id>tag:github.com,2023-04-17:/fanyuecheng/Pica</id>
    <link href="https://github.com/fanyuecheng/Pica" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个简约的哔咔漫画iOS App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pica 仅供学习&amp;amp;个人使用&lt;/h1&gt; &#xA;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/fanyuecheng/Pica/main/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;一个&lt;strong&gt;PicAcg&lt;/strong&gt;客户端&lt;br&gt; API来自 &lt;a href=&#34;https://github.com/czp3009/picacomic-api&#34;&gt;picacomic-api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;相关推荐&lt;/h4&gt; &#xA;&lt;p&gt;一个简约的 &lt;a href=&#34;https://github.com/fanyuecheng/CliCli&#34;&gt;clicli&lt;/a&gt; iOS APP&lt;/p&gt; &#xA;&lt;h4&gt;软件截图&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://postimg.cc/V0zHMjm9&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/8cv82HYY/Screen-Shot.png&#34; alt=&#34;Screen-Shot.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;软件功能&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 登录注册&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 排行榜&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 随机本子&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 分类&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 搜索&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 上传头像&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 修改slogan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 修改密码&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 我收藏的本子&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 我的评论&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论本子&amp;amp;回复评论&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 浏览历史&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 留言板&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 聊天室接收发送图片，文字，声音&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 游戏区&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 下载本子&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;安装&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开发人员直接下载，xcode选择开发账号，修改bundleid，选择真机运行&lt;/li&gt; &#xA; &lt;li&gt;非开发人员，下载release里面的ipa包后 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;trollstore &lt;a href=&#34;https://trollstore.app/&#34;&gt;官网&lt;/a&gt; &lt;a href=&#34;https://github.com/opa334/TrollStore&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;altstore &lt;a href=&#34;https://altstore.io/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;更新日志&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.3.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天室增加消息语音播放&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;tag/translate/creator/author 搜索漫画列表页数bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;简单适配iPad&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用动态uuid，避免垃圾官方封禁&lt;/li&gt; &#xA; &lt;li&gt;增加新版本检查&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加“看了这个本子的人也在看”&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加iOS庇护所分类&lt;/li&gt; &#xA; &lt;li&gt;图片详情页支持导出本子单话html&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.2.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加Waifu2x模块，入口在长按大图菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.1.6&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天室增加快捷指令输入&lt;/li&gt; &#xA; &lt;li&gt;增加NSFW模块，默认关闭，设置中开启&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.1.5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加本子魔/神/妹/母等推荐&lt;/li&gt; &#xA; &lt;li&gt;增加用户头像预览/下载&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.1.4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加解锁功能&lt;/li&gt; &#xA; &lt;li&gt;本子列表增加page等数据&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.1.3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加继续看功能&lt;/li&gt; &#xA; &lt;li&gt;优化图片加载&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.1.0 - 1.1.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.9&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天室设置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.8&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天增加悄悄话&lt;/li&gt; &#xA; &lt;li&gt;聊天点头像/称号快速@&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.7&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.6&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自动打卡&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本子详情可点击tag/作者/翻译组跳转列表&lt;/li&gt; &#xA; &lt;li&gt;骑士榜单可点击跳转列表&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可修改登录id(email)&amp;amp;name，仅限1次&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;分流设置&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天消息本地化&lt;/li&gt; &#xA; &lt;li&gt;聊天文字消息设置颜色&lt;/li&gt; &#xA; &lt;li&gt;聊天设置头像装饰&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;语音消息转文字&lt;/li&gt; &#xA; &lt;li&gt;服务器返回文字可转简体&lt;/li&gt; &#xA; &lt;li&gt;游戏区可隐藏&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.0.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;评论&lt;/li&gt; &#xA; &lt;li&gt;bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v0.0.9&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我的评论可跳转被评论的本子&lt;/li&gt; &#xA; &lt;li&gt;聊天点击头像查看信息&lt;/li&gt; &#xA; &lt;li&gt;评论点击头像查看信息&lt;/li&gt; &#xA; &lt;li&gt;新增一键注册功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v0.0.8&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天室发送文字、语音、图片&lt;/li&gt; &#xA; &lt;li&gt;聊天室接收通知、语音&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v0.0.7&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;留言板&lt;/li&gt; &#xA; &lt;li&gt;聊天室接收文字&amp;amp;图片信息&lt;/li&gt; &#xA; &lt;li&gt;设置页面&lt;/li&gt; &#xA; &lt;li&gt;评论本子&amp;amp;回复评论&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v0.06&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;排行榜&lt;/li&gt; &#xA; &lt;li&gt;我的模块&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;免责声明&lt;/h4&gt; &#xA;&lt;p&gt;本项目仅供学习&amp;amp;个人使用，版权归原漫画作者及发行商所有。&lt;br&gt; 本项目不承担任何由于内容的合法性及健康性所引起的争议和法律责任。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>landonf/libevil_patch</title>
    <updated>2023-04-17T01:41:05Z</updated>
    <id>tag:github.com,2023-04-17:/landonf/libevil_patch</id>
    <link href="https://github.com/landonf/libevil_patch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of function patching for iOS, without the use of W|X pages.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;libevil&lt;/h2&gt; &#xA;&lt;p&gt;You should not use this code. Seriously.&lt;/p&gt; &#xA;&lt;p&gt;libevil uses VM memory protection and remapping tricks to allow for patching arbitrary functions on iOS/ARM. This is similar in function to mach_override, except that libevil has to work without the ability to write to executable pages.&lt;/p&gt; &#xA;&lt;p&gt;This is achieved as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All mapped segments of the executable to be patched are remapped to a new address for preservation.&lt;/li&gt; &#xA; &lt;li&gt;The target page containing the function to be patched is set to PROT_NONE, triggering a crash if one attempts to execute anything in that page.&lt;/li&gt; &#xA; &lt;li&gt;A custom signal handler interprets the crash: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If the IP of the crashed thread points at a patched function, thread state is rewritten to point at the new user-supplied function.&lt;/li&gt; &#xA;   &lt;li&gt;If the IP of the crash thread points at some other address in the patched page, it is rewritten to execute from the mirrored copy of the binary.&lt;/li&gt; &#xA;   &lt;li&gt;If the si_addr of the crash is within the patched page, all registers containing that address are rewritten to point at the mirrored copy of the binary.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The entire binary is remapped as to &#39;correctly&#39; handle PC-relative addressing that would otherwise fail. There are still innumerable ways that this code can explode in your face. Remember how I said not to use it?&lt;/p&gt; &#xA;&lt;p&gt;A fancier implementation would involve performing instruction interpretation from the crashed page, rather than letting the CPU execute from remapped pages. This would involve actually implementing an ARM emulator, which seems like drastic overkill for a massive hack.&lt;/p&gt; &#xA;&lt;p&gt;The implementation only supports ARM, so you can only test it out on your iOS device.&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an example of how you might patch the NSLog() function. This patch will affect both your own usage, and any system or library code that calls NSLog().&lt;/p&gt; &#xA;&lt;p&gt;First, define your replacement function, as well as a function pointer to hold a reference that may be used to call the original NSLog() implementation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;void (*orig_NSLog)(NSString *fmt, ...) = NULL;&#xA; &#xA;void my_NSLog (NSString *fmt, ...) {&#xA;    orig_NSLog(@&#34;I&#39;m in your computers, patching your strings ...&#34;);&#xA;&#xA;    NSString *newFmt = [NSString stringWithFormat: @&#34;[PATCHED]: %@&#34;, fmt];&#xA;    &#xA;    va_list ap;&#xA;    va_start(ap, fmt);&#xA;    NSLogv(newFmt, ap);&#xA;    va_end(ap);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To actually apply the patch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {&#xA;    evil_init();&#xA;    evil_override_ptr(NSLog, my_NSLog, (void **) &amp;amp;orig_NSLog);&#xA;    NSLog(@&#34;Print a string&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run this code, you should see something like the following. Note that the OS usage of NSLog() has been patched, too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Jan 20 10:09:02 Spyglass testEvil[309] &amp;lt;Warning&amp;gt;: I&#39;m in your computers, patching your strings ...&#xA;Jan 20 10:09:02 Spyglass testEvil[309] &amp;lt;Warning&amp;gt;: [PATCHED]: Print a string&#xA;Jan 20 10:09:02 Spyglass testEvil[309] &amp;lt;Warning&amp;gt;: I&#39;m in your computers, patching your strings ...&#xA;Jan 20 10:09:02 Spyglass testEvil[309] &amp;lt;Warning&amp;gt;: [PATCHED]: Application windows are expected to have a root view controller at the end of application launch &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This works by catching and &#39;correcting&#39; the crash, so don&#39;t try to run the code under the debugger using Xcode. It will just helpfully note that you crashed trying to execute NSLog().&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>react-native-google-cast/google-cast-sdk-dynamic-xcframework-no-bluetooth</title>
    <updated>2023-04-17T01:41:05Z</updated>
    <id>tag:github.com,2023-04-17:/react-native-google-cast/google-cast-sdk-dynamic-xcframework-no-bluetooth</id>
    <link href="https://github.com/react-native-google-cast/google-cast-sdk-dynamic-xcframework-no-bluetooth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google Cast SDK Dynamic XCFramework without Guest Mode&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;google-cast-sdk-dynamic-xcframework-no-bluetooth&lt;/h1&gt; &#xA;&lt;p&gt;Currently Google only provides the framework as a &lt;a href=&#34;https://developers.google.com/cast/docs/ios_sender#xcframework_beta&#34;&gt;manual download&lt;/a&gt;. This is an unofficial pod that can be used in a CocoaPods environment, such as the react-native-google-cast package.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;google-cast-sdk-dynamic-xcframework-no-bluetooth&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
</feed>