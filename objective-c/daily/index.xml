<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-24T01:40:06Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JPBrutscher14/CS345_sp13_jbrutscher</title>
    <updated>2023-04-24T01:40:06Z</updated>
    <id>tag:github.com,2023-04-24:/JPBrutscher14/CS345_sp13_jbrutscher</id>
    <link href="https://github.com/JPBrutscher14/CS345_sp13_jbrutscher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spring 2013 CS345 GUI programming class&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>zotero/zotero-word-for-mac-integration</title>
    <updated>2023-04-24T01:40:06Z</updated>
    <id>tag:github.com,2023-04-24:/zotero/zotero-word-for-mac-integration</id>
    <link href="https://github.com/zotero/zotero-word-for-mac-integration" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zotero Word for Mac integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zotero Word for Mac Integration&lt;/h1&gt; &#xA;&lt;p&gt;This is a Firefox add-on that consists of a library written in ObjC that communicates with Microsoft Word out of process using AppleScript, a js-ctypes wrapper for said library, and a template that is installed into Microsoft Word to communicate with Zotero.&lt;/p&gt; &#xA;&lt;h2&gt;ObjC Library Build Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phracker/MacOSX-SDKs/tree/master/MacOSX10.7.sdk&#34;&gt;MacOSX10.7.sdk&lt;/a&gt; symlinked to &lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;XCode 8.2+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;To Build the ObjC Library&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch the project in &lt;code&gt;build/src/libZoteroMacWordIntegration.xcodeproj&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Product -&amp;gt; Build For -&amp;gt; Profiling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Template Build Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Templates should be built with the oldest version of Word to be supported. Otherwise older versions of Word may fail to function properly. This is currently: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Word 2016 (for the ribbonized dotm template)&lt;/li&gt; &#xA;   &lt;li&gt;Word 2011 (for the old dot template)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;To Modify/Build the Templates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the template from inside Microsoft Word&lt;/li&gt; &#xA; &lt;li&gt;Go to View-&amp;gt;Macros-&amp;gt;View Macros (Ribbonized Word) or Tools-&amp;gt;Macros-&amp;gt;View Macros (Word 2016) and click &#34;Edit&#34; for one of the Zotero macros&lt;/li&gt; &#xA; &lt;li&gt;Edit/replace code as desired&lt;/li&gt; &#xA; &lt;li&gt;Go to Debug-&amp;gt;Compile Project to ensure there are no code errors&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;build/template/unpack_templates.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Starter&#39;s Guide&lt;/h2&gt; &#xA;&lt;p&gt;Start by opening the dotm/dot template in Word. Word templates have support for custom macros and adding UI elements to call the macros, which is how the extension is implemented on Word. RibbonUI can be edited by extracting the dotm file. To edit the .dot template UI Word for Windows 2003 is needed. In VBA Macros code you will see that calls to Zotero are executed by writing commands to a file named &lt;code&gt;.zoteroIntegrationPipe&lt;/code&gt;. The command format is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-.bash&#34;&gt;echo &#34;MacWord2016 &amp;lt;commandName&amp;gt;&#34; &amp;gt; $PIPE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The pipe is created in &lt;a href=&#34;https://github.com/zotero/zotero-word-for-mac-integration/raw/823fd6daed429b43070eab2ea2195384944d58d6/components/zoteroMacWordIntegration2016Pipe.js#L34-L34&#34;&gt;zoteroMacWordIntegration2016Pipe.js&lt;/a&gt; for Word 2016 or &lt;a href=&#34;https://github.com/zotero/zotero/raw/aa783878dee10ebb9f0649593ac52354d51947c7/chrome/content/zotero/xpcom/integration.js#L68-L68&#34;&gt;integration.js&lt;/a&gt; for Word 2011 and older, and requests are handled in &lt;a href=&#34;https://github.com/zotero/zotero/raw/aa783878dee10ebb9f0649593ac52354d51947c7/chrome/content/zotero/xpcom/integration.js#L2273-L2273&#34;&gt;integration.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Zotero talks to Word via &lt;a href=&#34;https://github.com/zotero/zotero-word-for-mac-integration/raw/00d9743f40649178b0eaa39d7d0ae2427e714bb1/components/zoteroMacWordIntegration.js#L74-L74&#34;&gt;js-ctypes bindings&lt;/a&gt; to an &lt;a href=&#34;https://github.com/zotero/zotero-word-for-mac-integration/raw/f6d9042e35892050a717f7837e05b63f6bcb3135/build/src/zoteroMacWordIntegration.h&#34;&gt;ObjC library&lt;/a&gt;. The ObjC library itself utilises ScriptBridge to call &lt;a href=&#34;https://github.com/zotero/zotero-word-for-mac-integration/raw/952ac04bf2748a79c8cc54eadc1a8f8cabacbc2d/build/src/Word.h&#34;&gt;AppleScript commands&lt;/a&gt; and interact with a running Word process. Header files, such as &lt;code&gt;Word.h&lt;/code&gt;, are generated by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-.bash&#34;&gt;sdef /Applications/Microsoft\ Word.app | sdp -fh --basename Word&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;as explained in &lt;a href=&#34;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ScriptingBridgeConcepts/UsingScriptingBridge/UsingScriptingBridge.html&#34;&gt;Scripting Bridge Programming Guide&lt;/a&gt;. AppleScript command definitions can be found within ScriptEditor &amp;gt; File &amp;gt; Open Dictionary...&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tempAccountA/MSParallaxDemo</title>
    <updated>2023-04-24T01:40:06Z</updated>
    <id>tag:github.com,2023-04-24:/tempAccountA/MSParallaxDemo</id>
    <link href="https://github.com/tempAccountA/MSParallaxDemo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MSParallaxDemo&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#MSParallaxDemo&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempAccountA/MSParallaxDemo/master/MSParallaxDemo.gif&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>