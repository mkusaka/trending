<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-26T01:32:11Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Flipboard/FLAnimatedImage</title>
    <updated>2024-03-26T01:32:11Z</updated>
    <id>tag:github.com,2024-03-26:/Flipboard/FLAnimatedImage</id>
    <link href="https://github.com/Flipboard/FLAnimatedImage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Performant animated GIF engine for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/Flipboard/FLAnimatedImage&#34;&gt;FLAnimatedImage&lt;/a&gt; Â· &lt;a href=&#34;https://github.com/Flipboard/FLAnimatedImage/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Flipboard/FLAnimatedImage/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;FLAnimatedImage is a performant animated GIF engine for iOS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plays multiple GIFs simultaneously with a playback speed comparable to desktop browsers&lt;/li&gt; &#xA; &lt;li&gt;Honors variable frame delays&lt;/li&gt; &#xA; &lt;li&gt;Behaves gracefully under memory pressure&lt;/li&gt; &#xA; &lt;li&gt;Eliminates delays or blocking during the first playback loop&lt;/li&gt; &#xA; &lt;li&gt;Interprets the frame delays of fast GIFs the same way modern browsers do&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s a well-tested &lt;a href=&#34;http://engineering.flipboard.com/2014/05/animated-gif&#34;&gt;component that powers all GIFs in Flipboard&lt;/a&gt;. To understand its behavior it comes with an interactive demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Flipboard/FLAnimatedImage/raw/master/images/flanimatedimage-demo-player.gif&#34; alt=&#34;Flipboard playing multiple GIFs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Who is this for?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apps that don&#39;t support animated GIFs yet&lt;/li&gt; &#xA; &lt;li&gt;Apps that already support animated GIFs but want a higher performance solution&lt;/li&gt; &#xA; &lt;li&gt;People who want to tinker with the code (&lt;a href=&#34;http://engineering.flipboard.com/2014/05/animated-gif/&#34;&gt;the corresponding blog post&lt;/a&gt; is a great place to start; also see the &lt;em&gt;To Do&lt;/em&gt; section below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Usage&lt;/h2&gt; &#xA;&lt;p&gt;FLAnimatedImage is a well-encapsulated drop-in component. Simply replace your &lt;code&gt;UIImageView&lt;/code&gt; instances with instances of &lt;code&gt;FLAnimatedImageView&lt;/code&gt; to get animated GIF support. There is no central cache or state to manage.&lt;/p&gt; &#xA;&lt;p&gt;If using CocoaPods, the quickest way to try it out is to type this on the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pod try FLAnimatedImage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To add it to your app, copy the two classes &lt;code&gt;FLAnimatedImage.h/.m&lt;/code&gt; and &lt;code&gt;FLAnimatedImageView.h/.m&lt;/code&gt; into your Xcode project or add via &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; by adding this to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FLAnimatedImage&#39;, &#39;~&amp;gt; 1.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, add the following line into your &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;Flipboard/FLAnimatedImage&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using &lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;, add the following to your &lt;code&gt;Package.swift&lt;/code&gt; or add via XCode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/Flipboard/FLAnimatedImage.git&#34;, .upToNextMajor(from: &#34;1.0.16&#34;))&#xA;],&#xA;targets: [&#xA;    .target(name: &#34;TestProject&#34;, dependencies: [&#34;FLAnimatedImage&#34;&#34;])&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your code, &lt;code&gt;#import &#34;FLAnimatedImage.h&#34;&lt;/code&gt;, create an image from an animated GIF, and setup the image view to display it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;FLAnimatedImage *image = [FLAnimatedImage animatedImageWithGIFData:[NSData dataWithContentsOfURL:[NSURL URLWithString:@&#34;https://upload.wikimedia.org/wikipedia/commons/2/2c/Rotating_earth_%28large%29.gif&#34;]]];&#xA;FLAnimatedImageView *imageView = [[FLAnimatedImageView alloc] init];&#xA;imageView.animatedImage = image;&#xA;imageView.frame = CGRectMake(0.0, 0.0, 100.0, 100.0);&#xA;[self.view addSubview:imageView];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s flexible to integrate in your custom image loading stack and backwards compatible to iOS 9.&lt;/p&gt; &#xA;&lt;p&gt;It uses ARC and the Apple frameworks &lt;code&gt;QuartzCore&lt;/code&gt;, &lt;code&gt;ImageIO&lt;/code&gt;, &lt;code&gt;MobileCoreServices&lt;/code&gt;, and &lt;code&gt;CoreGraphics&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is capable of fine-grained logging. A block can be set on &lt;code&gt;FLAnimatedImage&lt;/code&gt; that&#39;s invoked when logging occurs with various log levels via the &lt;code&gt;+setLogBlock:logLevel:&lt;/code&gt; method. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// Set up FLAnimatedImage logging.&#xA;[FLAnimatedImage setLogBlock:^(NSString *logString, FLLogLevel logLevel) {&#xA;    // Using NSLog&#xA;    NSLog(@&#34;%@&#34;, logString);&#xA;&#xA;    // ...or CocoaLumberjackLogger only logging warnings and errors&#xA;    if (logLevel == FLLogLevelError) {&#xA;        DDLogError(@&#34;%@&#34;, logString);&#xA;    } else if (logLevel == FLLogLevelWarn) {&#xA;        DDLogWarn(@&#34;%@&#34;, logString);&#xA;    }&#xA;} logLevel:FLLogLevelWarn];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since FLAnimatedImage is licensed under MIT, it&#39;s compatible with the terms of using it for any app on the App Store.&lt;/p&gt; &#xA;&lt;h2&gt;Release process&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Bump version in &lt;code&gt;FLAnimatedImage.podspec&lt;/code&gt;, update CHANGES, and commit.&lt;/li&gt; &#xA; &lt;li&gt;Tag commit with &lt;code&gt;&amp;gt; git tag -a &amp;lt;VERSION&amp;gt; -m &#34;&amp;lt;VERSION&amp;gt;&#34;&lt;/code&gt; and &lt;code&gt;&amp;gt; git push --tags&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.cocoapods.org/making/specs-and-specs-repo.html#how-do-i-update-an-existing-pod&#34;&gt;Submit Podspec to Trunk with&lt;/a&gt; &lt;code&gt;&amp;gt; pod trunk push FLAnimatedImage.podspec&lt;/code&gt; (&lt;a href=&#34;https://guides.cocoapods.org/making/getting-setup-with-trunk.html#getting-started&#34;&gt;ensure you&#39;re auth&#39;ed&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;To Do&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support other animated image formats such as APNG or WebP (WebP support implemented &lt;a href=&#34;https://github.com/Flipboard/FLAnimatedImage/pull/86&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Integration into network libraries and image caches&lt;/li&gt; &#xA; &lt;li&gt;Investigate whether &lt;code&gt;FLAnimatedImage&lt;/code&gt; should become a &lt;code&gt;UIImage&lt;/code&gt; subclass&lt;/li&gt; &#xA; &lt;li&gt;Smarter buffering&lt;/li&gt; &#xA; &lt;li&gt;Bring demo app to iPhone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This code has successfully shipped to many people as is, but please do come with your questions, issues and pull requests!&lt;/p&gt; &#xA;&lt;h2&gt;Select apps using FLAnimatedImage&lt;/h2&gt; &#xA;&lt;p&gt;(alphabetically)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://closeu.pe&#34;&gt;Close-up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/app/id792517951&#34;&gt;Design Shots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dropbox.com&#34;&gt;Dropbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dumpert.nl&#34;&gt;Dumpert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ello.co/&#34;&gt;Ello&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebook.com&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flipboard.com&#34;&gt;Flipboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/app/id964784701&#34;&gt;getGIF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/gifalicious-see-your-gifs/id965346708?mt=8&#34;&gt;Gifalicious&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/app/id685784609&#34;&gt;HashPhotos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.instagram.com/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.liveboothapp.com&#34;&gt;LiveBooth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lwlvl.com&#34;&gt;lWlVl Festival&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pinterest.com&#34;&gt;Pinterest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.com/&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegram.org/&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/app/id893031254&#34;&gt;Zip Code Finder&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re using FLAnimatedImage in your app, please open a PR to add it to this list!&lt;/p&gt;</summary>
  </entry>
</feed>