<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-09T01:40:29Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>forcedotcom/SalesforceMobileSDK-ReactNative</title>
    <updated>2023-01-09T01:40:29Z</updated>
    <id>tag:github.com,2023-01-09:/forcedotcom/SalesforceMobileSDK-ReactNative</id>
    <link href="https://github.com/forcedotcom/SalesforceMobileSDK-ReactNative" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://forcedotcom.github.io/SalesforceMobileSDK-TestResults/ReactNative-results/dev/latest/buildstatus.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SalesforceMobileSDK-ReactNative&lt;/h1&gt; &#xA;&lt;p&gt;JavaScript libraries for SalesforceMobileSDK React Native&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>danpashin/VKPlus</title>
    <updated>2023-01-09T01:40:29Z</updated>
    <id>tag:github.com,2023-01-09:/danpashin/VKPlus</id>
    <link href="https://github.com/danpashin/VKPlus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Preferences for VK App 3.0 - 5.x&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VKPlus&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;VKPlus or VK++ is a simple iOS tweak for VK App.&lt;/strong&gt; It has many useful features which improve usability of VK App. Though it has huge problems with architecture and performance, VKPlus still work. It now supports VK App 3.0 - 5.6.1 and iOS 9.0 - 12.1&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;As already said, VKPlus has many useful features. Among them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Completely disabling advertisments and unuseful features for newsfeed&lt;/li&gt; &#xA; &lt;li&gt;Disabling messages reading and typing&lt;/li&gt; &#xA; &lt;li&gt;Tabbar customisation. You can reorder, hide or add some buttons in tabbar&lt;/li&gt; &#xA; &lt;li&gt;Bypassing music 30-minute limite and music block in 3-party clients&lt;/li&gt; &#xA; &lt;li&gt;Built-in proxy to use VK App when your Internet provider blocks it&lt;/li&gt; &#xA; &lt;li&gt;Bypassing blacklist and containing erotic content pages (Apple restriction)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I&#39;d like to implement more features like media downloader, multi-account support and other, but I don&#39;t have enough time and aspiration to do that.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/danpashin/VKPlus/master/screenshots/main_menu.png&#34; alt=&#34;Tweak main menu&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/danpashin/VKPlus/master/screenshots/messages_prefs.png&#34; alt=&#34;Messages preferences&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/danpashin/VKPlus/master/screenshots/tabbar_prefs.png&#34; alt=&#34;Tabbar preferences&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/danpashin/VKPlus/master/screenshots/network_prefs.png&#34; alt=&#34;Network preferences&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;This public version has limited number of functions. It does&#39;t have music bypass because of VK user agreement. And it does&#39;t have icons because of designer has copyright on it.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;This tweak is available under MIT Licence. You can read &lt;a href=&#34;https://raw.githubusercontent.com/danpashin/VKPlus/master/LICENCE&#34;&gt;&lt;strong&gt;LICENCE&lt;/strong&gt;&lt;/a&gt; for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nicklockwood/GZIP</title>
    <updated>2023-01-09T01:40:29Z</updated>
    <id>tag:github.com,2023-01-09:/nicklockwood/GZIP</id>
    <link href="https://github.com/nicklockwood/GZIP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple NSData category for gzipping/unzipping data in iOS and Mac OS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/nicklockwood/GZIP&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/nicklockwood/GZIP.svg?sanitize=true&#34; alt=&#34;Travis Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/nicklockwood/GZIP&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/nicklockwood/GZIP/badge.svg?sanitize=true&#34; alt=&#34;Coveralls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-lightgrey.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://twitter.com/nicklockwood&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@nicklockwood-blue.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;GZIP is category on NSData that provides simple gzip compression and decompression functionality.&lt;/p&gt; &#xA;&lt;h2&gt;Supported OS &amp;amp; SDK Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported build target - iOS 12.0 / Mac OS 10.14 (Xcode 10.1)&lt;/li&gt; &#xA; &lt;li&gt;Earliest supported deployment target - iOS 9.0 / Mac OS 10.12&lt;/li&gt; &#xA; &lt;li&gt;Earliest compatible deployment target - iOS 8.0 / Mac OS 10.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: &#39;Supported&#39; means that the library has been tested with this version. &#39;Compatible&#39; means that the library should work on this iOS version (i.e. it doesn&#39;t rely on any unavailable SDK features) but is no longer being tested for compatibility and may require tweaking or bug fixes to run correctly.&lt;/p&gt; &#xA;&lt;h2&gt;ARC Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The GZIP category will work correctly in either ARC or non-ARC projects without modification.&lt;/p&gt; &#xA;&lt;h2&gt;Thread Safety&lt;/h2&gt; &#xA;&lt;p&gt;All the GZIP methods should be safe to call from multiple threads concurrently.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to install GZIP is to use CocoaPods, by adding the following to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;GZIP&#39;, &#39;~&amp;gt; 1.3.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can use Carthage, or if you prefer to install manually, drag the GZIP.xcodeproj into your project or workspace and include GZIP.framework under the linked libraries in your target.&lt;/p&gt; &#xA;&lt;h2&gt;NSData Extensions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (NSData *)gzippedDataWithCompressionLevel:(float)level;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method will apply the gzip deflate algorithm and return the compressed data. The compression level is a floating point value between 0.0 and 1.0, with 0.0 meaning no compression and 1.0 meaning maximum compression. A value of 0.1 will provide the fastest possible compression. If you supply a negative value, this will apply the default compression level, which is equivalent to a value of around 0.7.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (NSData *)gzippedData;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method is equivalent to calling &lt;code&gt;gzippedDataWithCompressionLevel:&lt;/code&gt; with the default compression level.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (NSData *)gunzippedData;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method will unzip data that was compressed using the deflate algorithm and return the result.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (BOOL)isGzippedData;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method will return YES if the data is gzip-encoded.&lt;/p&gt;</summary>
  </entry>
</feed>