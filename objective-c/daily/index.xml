<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-02T01:36:37Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yamill/react-native-orientation</title>
    <updated>2022-10-02T01:36:37Z</updated>
    <id>tag:github.com,2022-10-02:/yamill/react-native-orientation</id>
    <link href="https://github.com/yamill/react-native-orientation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Listen to device orientation changes in react-native and set preferred orientation on screen to screen basis.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;React Native Orientation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/react-native-orientation&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/react-native-orientation.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Listen to device orientation changes in React Native applications and programmatically set preferred orientation on a per screen basis. Works on both Android and iOS.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install react-native-orientation --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Linking Native Dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Automatic Linking&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;react-native link react-native-orientation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that you &lt;strong&gt;still need to manually configure&lt;/strong&gt; a couple files even when using automatic linking. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/yamill/react-native-orientation/master/#configuration&#34;&gt;&#39;Configuration&#39;&lt;/a&gt; section below. You will also &lt;strong&gt;need to restart your simulator&lt;/strong&gt; before the package will work properly.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Linking&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;node_modules/react-native-orientation/iOS/RCTOrientation.xcodeproj&lt;/code&gt; to your xcode project, usually under the &lt;code&gt;Libraries&lt;/code&gt; group&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;libRCTOrientation.a&lt;/code&gt; (from &lt;code&gt;Products&lt;/code&gt; under &lt;code&gt;RCTOrientation.xcodeproj&lt;/code&gt;) to build target&#39;s &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; list&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;$(SRCROOT)/node_modules/react-native-orientation/iOS/RCTOrientation/&lt;/code&gt; to &lt;code&gt;Project Name&lt;/code&gt; -&amp;gt; &lt;code&gt;Build Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Header Search Paths&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;android/setting.gradle&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;...&#xA;include &#39;:react-native-orientation&#39;, &#39;:app&#39;&#xA;project(&#39;:react-native-orientation&#39;).projectDir = new File(rootProject.projectDir, &#39;../node_modules/react-native-orientation/android&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;android/app/build.gradle&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;...&#xA;dependencies {&#xA;    ...&#xA;    compile project(&#39;:react-native-orientation&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Register module in &lt;code&gt;MainApplication.java&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.github.yamill.orientation.OrientationPackage;  // &amp;lt;--- import&#xA;&#xA;public class MainApplication extends Application implements ReactApplication {&#xA;  ......&#xA;&#xA;  @Override&#xA;  protected List&amp;lt;ReactPackage&amp;gt; getPackages() {&#xA;      return Arrays.&amp;lt;ReactPackage&amp;gt;asList(&#xA;          new MainReactPackage(),&#xA;          new OrientationPackage()      &amp;lt;------- Add this&#xA;      );&#xA;  }&#xA;&#xA;  ......&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following to your project&#39;s &lt;code&gt;AppDelegate.m&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &#34;Orientation.h&#34; // &amp;lt;--- import&#xA;&#xA;@implementation AppDelegate&#xA;&#xA;  // ...&#xA;&#xA;- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {&#xA;  return [Orientation getOrientation];&#xA;}&#xA;  &#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Implement &lt;code&gt;onConfigurationChanged&lt;/code&gt; method in &lt;code&gt;MainActivity.java&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    import android.content.Intent; // &amp;lt;--- import&#xA;    import android.content.res.Configuration; // &amp;lt;--- import&#xA;&#xA;    public class MainActivity extends ReactActivity {&#xA;      ......&#xA;      @Override&#xA;      public void onConfigurationChanged(Configuration newConfig) {&#xA;        super.onConfigurationChanged(newConfig);&#xA;        Intent intent = new Intent(&#34;onConfigurationChanged&#34;);&#xA;        intent.putExtra(&#34;newConfig&#34;, newConfig);&#xA;        this.sendBroadcast(intent);&#xA;    }&#xA;&#xA;      ......&#xA;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use the &lt;code&gt;react-native-orientation&lt;/code&gt; package in your codebase, you should use the Orientation module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import Orientation from &#39;react-native-orientation&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default class AppScreen extends Component {&#xA;  // ...&#xA;&#xA;  componentWillMount() {&#xA;    // The getOrientation method is async. It happens sometimes that&#xA;    // you need the orientation at the moment the JS runtime starts running on device.&#xA;    // `getInitialOrientation` returns directly because its a constant set at the&#xA;    // beginning of the JS runtime.&#xA;&#xA;    const initial = Orientation.getInitialOrientation();&#xA;    if (initial === &#39;PORTRAIT&#39;) {&#xA;      // do something&#xA;    } else {&#xA;      // do something else&#xA;    }&#xA;  },&#xA;&#xA;  componentDidMount() {&#xA;    // this locks the view to Portrait Mode&#xA;    Orientation.lockToPortrait();&#xA;&#xA;    // this locks the view to Landscape Mode&#xA;    // Orientation.lockToLandscape();&#xA;&#xA;    // this unlocks any previous locks to all Orientations&#xA;    // Orientation.unlockAllOrientations();&#xA;&#xA;    Orientation.addOrientationListener(this._orientationDidChange);&#xA;  },&#xA;&#xA;  _orientationDidChange = (orientation) =&amp;gt; {&#xA;    if (orientation === &#39;LANDSCAPE&#39;) {&#xA;      // do something with landscape layout&#xA;    } else {&#xA;      // do something with portrait layout&#xA;    }&#xA;  },&#xA;&#xA;  componentWillUnmount() {&#xA;    Orientation.getOrientation((err, orientation) =&amp;gt; {&#xA;      console.log(`Current Device Orientation: ${orientation}`);&#xA;    });&#xA;&#xA;&#xA;    // Remember to remove listener&#xA;    Orientation.removeOrientationListener(this._orientationDidChange);&#xA;  }&#xA;&#xA;  render() {&#xA;    // ...&#xA;&#xA;    return (&#xA;      // ...&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Orientation Events&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;addOrientationListener((orientation) =&amp;gt; {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;orientation&lt;/code&gt; will return one of the following values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LANDSCAPE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORTRAIT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORTRAITUPSIDEDOWN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;removeOrientationListener((orientation) =&amp;gt; {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;addSpecificOrientationListener((specificOrientation) =&amp;gt; {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;specificOrientation&lt;/code&gt; will return one of the following values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LANDSCAPE-LEFT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LANDSCAPE-RIGHT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORTRAIT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORTRAITUPSIDEDOWN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;removeSpecificOrientationListener((specificOrientation) =&amp;gt; {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;lockToPortrait()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lockToLandscape()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lockToLandscapeLeft()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lockToLandscapeRight()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unlockAllOrientations()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getOrientation((err, orientation) =&amp;gt; {})&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getSpecificOrientation((err, specificOrientation) =&amp;gt; {})&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>