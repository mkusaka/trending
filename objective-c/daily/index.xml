<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:33:00Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NianJi/AppLord</title>
    <updated>2024-05-29T01:33:00Z</updated>
    <id>tag:github.com,2024-05-29:/NianJi/AppLord</id>
    <link href="https://github.com/NianJi/AppLord" rel="alternate"></link>
    <summary type="html">&lt;p&gt;module and service management of ios app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AppLord&lt;/h1&gt; &#xA;&lt;p&gt;module and service management of ios app&lt;/p&gt; &#xA;&lt;h2&gt;add to your project&lt;/h2&gt; &#xA;&lt;p&gt;management by &lt;code&gt;cocoapods&lt;/code&gt;, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod    &#39;AppLord&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;module&lt;/h2&gt; &#xA;&lt;p&gt;what is module? every business or task could be module.&lt;/p&gt; &#xA;&lt;p&gt;when the module init? when app launch or after app launch&lt;/p&gt; &#xA;&lt;p&gt;how to impl?&lt;/p&gt; &#xA;&lt;p&gt;first, create class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#import &amp;lt;AppLord/AppLord.h&amp;gt;&#xA;@interface MyModule : NSObject &amp;lt;ALModule&amp;gt;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then, impl like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@AppLordModule(MyModule) // Annotation for regist the module, required&#xA;@implementation MyModule&#xA;&#xA;// module object init&#xA;- (void)moduleDidInit:(ALContext *)context&#xA;{&#xA;    // do some init thing&#xA;}&#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;service&lt;/h2&gt; &#xA;&lt;p&gt;we can receive events from other modules in a module, but it does not always meet the demand. we can&#39;t notify back to the sender. so we provide another way to transfer event between modules: &lt;code&gt;service&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;How to use?&lt;/p&gt; &#xA;&lt;p&gt;Define your custom service&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@protocol MyService &amp;lt;ALService&amp;gt;&#xA;&#xA;- (void)doSomething;&#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Impl it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@interface MyServiceImpl : NSObject &amp;lt;MyService&amp;gt;&#xA;&#xA;@end&#xA;&#xA;@AppLordService(MyService, MyServiceImpl) // regist MyService&#39;s Impl class: MyServiceImpl&#xA;@implementation MyServiceImpl&#xA;&#xA;- (void)doSomething&#xA;{&#xA;&#xA;}&#xA;&#xA;// optional&#xA;+ (BOOL)globalVisible&#xA;{&#xA;    // if return YES, service will be always in the memory&#xA;}&#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;How to get the instance of service?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;id&amp;lt;MyService&amp;gt; service = [[ALContext sharedContext] findServiceByName:@&#34;MyService&#34;];&#xA;// or&#xA;id&amp;lt;MyService&amp;gt; service = [[ALContext sharedContext] findService:@protocol(MyService)];&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>