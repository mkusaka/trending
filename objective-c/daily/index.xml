<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-22T01:49:26Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>banchichen/TZImagePickerController</title>
    <updated>2022-07-22T01:49:26Z</updated>
    <id>tag:github.com,2022-07-22:/banchichen/TZImagePickerController</id>
    <link href="https://github.com/banchichen/TZImagePickerController" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个支持多选、选原图和视频的图片选择器，同时有预览、裁剪功能，支持iOS6+。 A clone of UIImagePickerController, support picking multiple photos、original photo、video, also allow preview photo and video, support iOS6+&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TZImagePickerController&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/TZImagePickerController.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A clone of UIImagePickerController, support picking multiple photos、original photo、video, also allow preview photo and video, support iOS6+.&lt;br&gt; 一个支持多选、选原图和视频的图片选择器，同时有预览功能，支持iOS6+。&lt;/p&gt; &#xA;&lt;h2&gt;重要提示1：提issue前，请先对照Demo、常见问题自查！Demo正常说明你可以升级下新版试试。&lt;/h2&gt; &#xA;&lt;h2&gt;重要提示2：3.7.5版本修复了iOS15.2下初次授权相册权限时的长时间卡顿&amp;amp;白屏问题，强烈建议尽快更新&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; 关于iOS14模拟器的问题&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PHAuthorizationStatusLimited授权模式下，iOS14模拟器有bug，未授权照片无法显示，真机正常，暂可忽略：&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/1347&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/1347&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; 关于升级iOS10和Xcdoe8的提示:    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在Xcode8环境下将项目运行在iOS10的设备/模拟器中，访问相册和相机需要额外配置info.plist文件。分别是Privacy - Photo Library Usage Description和Privacy - Camera Usage Description字段，详见Demo中info.plist中的设置。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; 项目截图 1.Demo首页 2.照片列表页 3.照片预览页 4.视频预览页&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/banchichen/TZImagePickerController/raw/master/TZImagePickerController/ScreenShots/DemoPage.png&#34; width=&#34;40%&#34; height=&#34;40%&#34;&gt;&lt;img src=&#34;https://github.com/banchichen/TZImagePickerController/raw/master/TZImagePickerController/ScreenShots/photoPickerVc.PNG&#34; width=&#34;40%&#34; height=&#34;40%&#34;&gt; &lt;img src=&#34;https://github.com/banchichen/TZImagePickerController/raw/master/TZImagePickerController/ScreenShots/photoPreviewVc.PNG&#34; width=&#34;40%&#34; height=&#34;40%&#34;&gt;&lt;img src=&#34;https://github.com/banchichen/TZImagePickerController/raw/master/TZImagePickerController/ScreenShots/videoPlayerVc.PNG&#34; width=&#34;40%&#34; height=&#34;40%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一. Installation 安装&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;pod &#39;TZImagePickerController&#39; # Full version with all features&lt;br&gt; pod &#39;TZImagePickerController/Basic&#39; # No location code&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;github &#34;banchichen/TZImagePickerController&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;手动安装&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;将TZImagePickerController文件夹拽入项目中，导入头文件：#import &#34;TZImagePickerController.h&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;二. Example 例子&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;TZImagePickerController *imagePickerVc = [[TZImagePickerController alloc] initWithMaxImagesCount:9 delegate:self];&#xA;&#xA;// You can get the photos by block, the same as by delegate.&#xA;// 你可以通过block或者代理，来得到用户选择的照片.&#xA;[imagePickerVc setDidFinishPickingPhotosHandle:^(NSArray&amp;lt;UIImage *&amp;gt; *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {&#xA;&#xA;}];&#xA;[self presentViewController:imagePickerVc animated:YES completion:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;三. Requirements 要求&lt;/h2&gt; &#xA;&lt;p&gt;iOS 6 or later. Requires ARC&lt;br&gt; iOS6及以上系统可使用. ARC环境.&lt;/p&gt; &#xA;&lt;p&gt;When system version is iOS6 or iOS7, Using AssetsLibrary.&lt;br&gt; When system version is iOS8 or later, Using PhotoKit.&lt;br&gt; 如果运行在iOS6或7系统上，用的是AssetsLibrary库获取照片资源。&lt;br&gt; 如果运行在iOS8及以上系统上，用的是PhotoKit库获取照片资源。&lt;/p&gt; &#xA;&lt;p&gt;TZImagePickerController uses Camera、Location、Microphone、Photo Library，you need add these properties to info.plist like Demo：&lt;br&gt; TZImagePickerController使用了相机、定位、麦克风、相册，请参考Demo添加下列属性到info.plist文件：&lt;br&gt; &lt;code&gt;Privacy - Camera Usage Description&lt;/code&gt;&lt;br&gt; &lt;code&gt;Privacy - Location Usage Description&lt;/code&gt;&lt;br&gt; &lt;code&gt;Privacy - Location When In Use Usage Description&lt;/code&gt;&lt;br&gt; &lt;code&gt;Privacy - Microphone Usage Description&lt;/code&gt;&lt;br&gt; &lt;code&gt;Privacy - Photo Library Usage Description&lt;/code&gt;&lt;br&gt; &lt;code&gt;Prevent limited photos access alert&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;四. More 更多&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug, please create a issue.&lt;br&gt; More information please view code.&lt;br&gt; 如果你发现了bug，请提一个issue。 更多信息详见代码，也可查看我的博客: &lt;a href=&#34;http://www.jianshu.com/p/1975411a31bb&#34; title=&#34;半尺尘 - 简书&#34;&gt;我的博客&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  关于issue: &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请尽可能详细地描述&lt;strong&gt;系统版本&lt;/strong&gt;、&lt;strong&gt;手机型号&lt;/strong&gt;、&lt;strong&gt;库的版本&lt;/strong&gt;、&lt;strong&gt;崩溃日志&lt;/strong&gt;和&lt;strong&gt;复现步骤&lt;/strong&gt;，&lt;strong&gt;请先更新到最新版再测试一下&lt;/strong&gt;，如果新版还存在再提~如果已有开启的类似issue，请直接在该issue下评论说出你的问题&lt;/p&gt; &#xA;&lt;h2&gt;五. FAQ 常见问题&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：pod search TZImagePickerController 搜索出来的不是最新版本&lt;/strong&gt;&lt;br&gt; A：需要在终端执行cd转换文件路径命令退回到Desktop，然后执行pod setup命令更新本地spec缓存（可能需要几分钟）,然后再搜索就可以了&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：拍照后照片保存失败&lt;/strong&gt;&lt;br&gt; A：请参考issue481：&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/481&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/481&lt;/a&gt; 的信息排查，若还有问题请直接在issue内评论&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：photos数组图片不是原图，如何获取原图？&lt;/strong&gt;&lt;br&gt; A：请参考issue457的解释：&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/457&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/457&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：系统语言是中文/英文，界面上却有部分相册名字、返回按钮显示成了英文/中文？&lt;/strong&gt;&lt;br&gt; A：请参考 &lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/443&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/443&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/929&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/929&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：预览界面能否支持传入NSURL、UIImage对象？&lt;/strong&gt;&lt;br&gt; A：3.0.1版本已支持，需新接一个库：&lt;a href=&#34;https://github.com/banchichen/TZImagePreviewController&#34;&gt;TZImagePreviewController&lt;/a&gt;，请参考里面的Demo使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：设置可选视频的最大/最小时长？照片的最小/最大尺寸？不符合要求的不显示&lt;/strong&gt;&lt;br&gt; A：可以的，参照Demo的isAssetCanBeDisplayed方法实现。我会返回asset出来，显示与否你来决定，注意这个是一个同步方法，对于需要根据asset去异步获取的信息如视频的大小、视频是否存在iCloud里来过滤的，无法做到。如果真要这样做，相册打开速度会变慢，你需要改我源码。&lt;br&gt; 如果需要显示，选择时才提醒用户不可选，则实现isAssetCanBeSelected，用户选择时会调用它&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：预览页面出现了导航栏？&lt;/strong&gt;&lt;br&gt; A：&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/652&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/652&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：可否增加微信编辑图片的功能？&lt;/strong&gt;&lt;br&gt; A：考虑下，优先级低&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：是否有QQ/微信群/钉钉群？&lt;/strong&gt;&lt;br&gt; A：有「钉钉群：33192786」和「QQ群：859033147」，推荐加钉钉群，答疑响应更快&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：想提交一个Pull Request？&lt;/strong&gt;&lt;br&gt; A：请先加钉钉群(33192786)说下方案，和我确认下，避免同时改动同一处内容。&lt;strong&gt;一个PR请只修复1个问题，变动内容越少越好&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：demo在真机上跑不起来？&lt;/strong&gt;&lt;br&gt; A：1、team选你自己的；2、bundleId也改成你自己的或改成一个不会和别人重复的。可参考&lt;a href=&#34;https://www.jianshu.com/p/cbe59138fca6&#34;&gt;简书的这篇博客&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：3.6.4以上版本设置导航栏颜色无效？&lt;/strong&gt;&lt;br&gt; A：参考Demo里的代码，加上imagePickerVc.navigationBar.standardAppearance的相关设置&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：设置导航栏颜色无效？导航栏颜色总是白色？&lt;/strong&gt;&lt;br&gt; A：是否有集成WRNavigationBar？如有，参考其readme调一下它的wr_setBlackList，把TZImagePickerController相关的控制器放到黑名单里，使得不受WRNavigationBar的影响。如果没有集成，可在issues列表里搜一下看看类似的issue参考下，如实在没头绪，可加群提供个能复现该问题的demo，0~2天给你解决。最近发现WRNavigationBar的黑名单会有不生效的情况，临时解决方案大家可参考：&lt;a href=&#34;https://github.com/wangrui460/WRNavigationBar/issues/145&#34;&gt;https://github.com/wangrui460/WRNavigationBar/issues/145&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：导航栏没了？&lt;/strong&gt;&lt;br&gt; A：是否有集成GKNavigationBarViewController？需要升级到2.0.4及以上版本，详见issue：&lt;a href=&#34;https://github.com/QuintGao/GKNavigationBarViewController/issues/7&#34;&gt;https://github.com/QuintGao/GKNavigationBarViewController/issues/7&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：有的视频导出失败？&lt;/strong&gt;&lt;br&gt; A：升级到2.2.6及以上版本试试，发现是修正视频转向导致的，2.2.6开始默认不再主动修正。如需打开，可设置needFixComposition为YES，但有几率导致安卓拍的视频导出失败。此外也可参考这个issue：&lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/1073&#34;&gt;https://github.com/banchichen/TZImagePickerController/issues/1073&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：视频导出慢？&lt;/strong&gt;&lt;br&gt; A：视频导出分两步，第一步是通过PHAsset获取AVURLAsset，如是iCloud视频则涉及到网络请求，耗时容易不可控，第二步是通过AVURLAsset把视频保存到沙盒，耗时不算多。但第一步耗时不可控，你可以拷贝我源码出来拿到第一步的进度给用户一个进度提示...&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q：有的图片info里没有PHImageFileURLKey？&lt;/strong&gt;&lt;br&gt; A：不要去拿PHImageFileURLKey，没用的，只有通过Photos框架才能访问相册照片，光拿一个路径没用。&lt;br&gt; 如果需要通过路径上传照片，请先把UIImage保存到沙盒，&lt;strong&gt;用沙盒路径&lt;/strong&gt;。&lt;br&gt; 如果你上传照片需要一个名字参数，请参考Demo&lt;strong&gt;直接用照片名字&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;六. Release Notes 最近更新&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.8.3 支持使用不带定位代码的版本&lt;/strong&gt; &lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/pull/1606&#34;&gt;#1606&lt;/a&gt;&lt;br&gt; &lt;strong&gt;3.8.1 iOS14下可添加访问更多照片，详见PR内的评论&lt;/strong&gt; &lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/pull/1526&#34;&gt;#1526&lt;/a&gt;&lt;br&gt; &lt;strong&gt;3.7.6 修复iOS15.2下初次授权相册权限时的长时间卡顿&amp;amp;白屏问题&lt;/strong&gt; &lt;a href=&#34;https://github.com/banchichen/TZImagePickerController/issues/1547&#34;&gt;#1547&lt;/a&gt;&lt;br&gt; &lt;strong&gt;3.6.7 修复Xcode13&amp;amp;iOS15下导航栏颜色异常问题&lt;/strong&gt;&lt;br&gt; 3.6.2 新增allowEditVideo，单选视频时支持裁剪&lt;br&gt; 3.6.0 修复iOS14下iCloud视频导出失败问题&lt;br&gt; &lt;strong&gt;3.5.2 适配iPhone12系列设备&lt;/strong&gt;&lt;br&gt; 3.4.4 支持Dark Mode&lt;br&gt; 3.4.2 适配iOS14，若干问题修复&lt;br&gt; 3.3.2 适配iOS13，若干问题修复&lt;br&gt; 3.2.1 新增裁剪用scaleAspectFillCrop属性，设置为YES后，照片尺寸小于裁剪框时会自动放大撑满&lt;br&gt; 3.2.0 加入用NSOperationQueue控制获取原图并发数降低内存的示例&lt;br&gt; 3.1.8 批量获取图片时加入队列控制，尝试优化大批量选择图片时CPU和内存占用过高的问题（仍然危险，maxImagesCount谨慎设置过大...）&lt;br&gt; 3.1.5 相册内无照片时给出提示，修复快速滑动时内存一直增加的问题&lt;br&gt; 3.1.3 适配阿拉伯等语言下从右往左布局的特性&lt;br&gt; 3.0.8 新增gifImagePlayBlock允许使用FLAnimatedImage等替换内部的GIF播放方案&lt;br&gt; 3.0.7 适配iPhoneXR、XS、XS Max&lt;br&gt; 3.0.6 优化保存照片、视频的方法&lt;br&gt; 3.0.1 新增对&lt;a href=&#34;https://github.com/banchichen/TZImagePreviewController&#34;&gt;TZImagePreviewController&lt;/a&gt;库的支持，允许预览UIImage、NSURL、PHAsset对象&lt;br&gt; &lt;strong&gt;3.0.0 去除iOS6和7的适配代码，更轻量，最低支持iOS8&lt;/strong&gt;&lt;br&gt; 2.2.6 新增needFixComposition属性，默认为NO，不再主动修正视频转向，防止部分安卓拍的视频导出失败（&lt;strong&gt;最后一个支持iOS6和7的版本&lt;/strong&gt;）&lt;br&gt; 2.1.5 修复开启showSelectedIndex后照片列表页iCloud图片进度条紊乱的bug&lt;br&gt; 2.1.4 新增多个页面和组件的样式自定义block，允许自定义绝大多数UI样式&lt;br&gt; 2.1.2 新增showPhotoCannotSelectLayer属性，当已选照片张数达到最大可选张数时，可像微信一样让其它照片显示一个提示不可选的浮层&lt;br&gt; 2.1.1 新增是否显示图片选中序号的属性，优化一些细节&lt;br&gt; 2.1.0.3 新增拍摄视频功能，优化一些细节&lt;br&gt; 2.0.0.6 优化自定义languageBundle的支持，加入使用示例&lt;br&gt; 2.0.0.5 优化性能，提高选择器打开速度，新增越南语支持&lt;br&gt; 2.0.0.2 新增繁体语言，可设置首选语言，国际化支持更强大；优化一些细节&lt;br&gt; 1.9.8 支持Carthage，优化一些细节&lt;br&gt; 1.9.6 优化视频预览和gif预览页toolbar在iPhoneX上的样式&lt;br&gt; ...&lt;br&gt; 1.8.4 加入横竖屏适配；支持视频/gif多选；支持视频和照片一起选&lt;br&gt; 1.8.1 新增2个代理方法，支持由上层来决定相册/照片的显示与否&lt;br&gt; ...&lt;br&gt; 1.7.7 支持GIF图片的播放和选择&lt;br&gt; 1.7.6 支持对共享相册和同步相册的显示&lt;br&gt; 1.7.5 允许不进入预览页面直接选择照片&lt;br&gt; 1.7.4 支持单选模式下裁剪照片，支持任意矩形和圆形裁剪框&lt;br&gt; 1.7.3 优化iCloud照片的显示与选择&lt;br&gt; ...&lt;br&gt; 1.5.0 可把拍照按钮放在外面；可自定义照片排序方式；Demo页的UI大改版，新增若干开关；&lt;br&gt; ...&lt;br&gt; 1.4.5 性能大幅提升（性能测试截图请去博客查看）；可在照片列表页拍照；Demo大幅优化；&lt;br&gt; ...&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wix/react-native-notifications</title>
    <updated>2022-07-22T01:49:26Z</updated>
    <id>tag:github.com,2022-07-22:/wix/react-native-notifications</id>
    <link href="https://github.com/wix/react-native-notifications" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native Notifications&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wix/react-native-notifications/master/.logo.png&#34;&gt;&lt;br&gt; React Native Notifications &lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/react-native-notifications.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt; &lt;a href=&#34;https://jenkins-oss.wixpress.com/job/multi-react-native-notifications-master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-react-native-notifications-master.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wix/react-native-notifications/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-notifications/latest.svg?sanitize=true&#34; alt=&#34;npm (tag)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wix/react-native-notifications/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-notifications/snapshot.svg?sanitize=true&#34; alt=&#34;npm (tag)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Handle all the aspects of push notifications for your app, including remote and local notifications, interactive notifications, silent notifications, and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All the native iOS notifications features are supported!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For information regarding proper integration with &lt;a href=&#34;https://github.com/wix/react-native-navigation&#34;&gt;react-native-navigation&lt;/a&gt;, follow &lt;a href=&#34;https://github.com/wix/react-native-notifications/wiki/Android:-working-with-RNN&#34;&gt;this wiki&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;Apps using React Native Notifications may target iOS 10 and Android 5.0 (API 21). You may use Windows, macOS or Linux as your development operating system.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;!-- &lt;img src=&#34;https://s3.amazonaws.com/nrjio/interactive.gif&#34; alt=&#34;Interactive notifications example&#34; width=350/&gt; --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remote (push) notifications&lt;/li&gt; &#xA; &lt;li&gt;Local notifications&lt;/li&gt; &#xA; &lt;li&gt;Background/Managed notifications (notifications that can be cleared from the server, like Facebook messenger and Whatsapp web)&lt;/li&gt; &#xA; &lt;li&gt;PushKit API (for VoIP and other background messages)&lt;/li&gt; &#xA; &lt;li&gt;Interactive notifications (allows you to provide additional functionality to your users outside of your application such as action buttons)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Receiving notifications in any App state (foreground, background, &#34;dead&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Built-in notification drawer management&lt;/li&gt; &#xA; &lt;li&gt;High degree of code extensibility to allow for advanced custom layouts and any specific notifications behavior as available by &lt;a href=&#34;https://developer.android.com/training/notify-user/build-notification.html&#34;&gt;Android&#39;s API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android equivalent of React-Native&#39;s implementation of &lt;a href=&#34;https://facebook.github.io/react-native/docs/pushnotificationios.html#getinitialnotification&#34;&gt;&lt;code&gt;PushNotificationsIOS.getInitialNotification()&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Upcoming: local notifications, background-state Rx queue (iOS equivalent)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Quick Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wix.github.io/react-native-notifications/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wix.github.io/react-native-notifications/api/general-api&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wix.github.io/react-native-notifications/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The MIT License.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/wix/react-native-notifications/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/cordova-plugin-camera</title>
    <updated>2022-07-22T01:49:26Z</updated>
    <id>tag:github.com,2022-07-22:/apache/cordova-plugin-camera</id>
    <link href="https://github.com/apache/cordova-plugin-camera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Cordova Plugin camera&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;title: Camera description: Take pictures with the device camera.&lt;/h2&gt; &#xA;&lt;!--&#xA;# license: Licensed to the Apache Software Foundation (ASF) under one&#xA;#         or more contributor license agreements.  See the NOTICE file&#xA;#         distributed with this work for additional information&#xA;#         regarding copyright ownership.  The ASF licenses this file&#xA;#         to you under the Apache License, Version 2.0 (the&#xA;#         &#34;License&#34;); you may not use this file except in compliance&#xA;#         with the License.  You may obtain a copy of the License at&#xA;#&#xA;#           http://www.apache.org/licenses/LICENSE-2.0&#xA;#&#xA;#         Unless required by applicable law or agreed to in writing,&#xA;#         software distributed under the License is distributed on an&#xA;#         &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY&#xA;#         KIND, either express or implied.  See the License for the&#xA;#         specific language governing permissions and limitations&#xA;#         under the License.&#xA;--&gt; &#xA;&lt;h1&gt;cordova-plugin-camera&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/chrome.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/chrome.yml/badge.svg?sanitize=true&#34; alt=&#34;Chrome Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/ios.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/ios.yml/badge.svg?sanitize=true&#34; alt=&#34;iOS Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/cordova-plugin-camera/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin defines a global &lt;code&gt;navigator.camera&lt;/code&gt; object, which provides an API for taking pictures and for choosing images from the system&#39;s image library.&lt;/p&gt; &#xA;&lt;p&gt;Although the object is attached to the global scoped &lt;code&gt;navigator&lt;/code&gt;, it is not available until after the &lt;code&gt;deviceready&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;document.addEventListener(&#34;deviceready&#34;, onDeviceReady, false);&#xA;function onDeviceReady() {&#xA;    console.log(navigator.camera);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This requires cordova 5.0+&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cordova plugin add cordova-plugin-camera&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older versions of cordova can still install via the &lt;strong&gt;deprecated&lt;/strong&gt; id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cordova plugin add org.apache.cordova.camera&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also possible to install via repo url directly ( unstable )&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cordova plugin add https://github.com/apache/cordova-plugin-camera.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributors are welcome! And we need your contributions to keep the project moving forward. You can[report bugs, improve the documentation, or &lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/pulls&#34;&gt;contribute code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is a specific &lt;a href=&#34;http://wiki.apache.org/cordova/ContributorWorkflow&#34;&gt;contributor workflow&lt;/a&gt; we recommend. Start reading there. More information is available on &lt;a href=&#34;http://wiki.apache.org/cordova&#34;&gt;our wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Have a solution?&lt;/strong&gt; Send a &lt;a href=&#34;https://github.com/apache/cordova-plugin-camera/pulls&#34;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order for your changes to be accepted, you need to sign and submit an Apache &lt;a href=&#34;http://www.apache.org/licenses/#clas&#34;&gt;ICLA&lt;/a&gt; (Individual Contributor License Agreement). Then your name will appear on the list of CLAs signed by &lt;a href=&#34;https://people.apache.org/committer-index.html#unlistedclas&#34;&gt;non-committers&lt;/a&gt; or &lt;a href=&#34;http://people.apache.org/committers-by-project.html#cordova&#34;&gt;Cordova committers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;And don&#39;t forget to test and document your code.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iOS Quirks&lt;/h3&gt; &#xA;&lt;p&gt;Since iOS 10 it&#39;s mandatory to provide an usage description in the &lt;code&gt;info.plist&lt;/code&gt; if trying to access privacy-sensitive data. When the system prompts the user to allow access, this usage description string will displayed as part of the permission dialog box, but if you didn&#39;t provide the usage description, the app will crash before showing the dialog. Also, Apple will reject apps that access private data but don&#39;t provide an usage description.&lt;/p&gt; &#xA;&lt;p&gt;This plugins requires the following usage descriptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NSCameraUsageDescription&lt;/code&gt; specifies the reason for your app to access the device&#39;s camera.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSPhotoLibraryUsageDescription&lt;/code&gt; specifies the reason for your app to access the user&#39;s photo library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSLocationWhenInUseUsageDescription&lt;/code&gt; specifies the reason for your app to access the user&#39;s location information while your app is in use. (Set it if you have &lt;code&gt;CameraUsesGeolocation&lt;/code&gt; preference set to &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NSPhotoLibraryAddUsageDescription&lt;/code&gt; specifies the reason for your app to get write-only access to the user&#39;s photo library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add these entries into the &lt;code&gt;info.plist&lt;/code&gt;, you can use the &lt;code&gt;edit-config&lt;/code&gt; tag in the &lt;code&gt;config.xml&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;edit-config target=&#34;NSCameraUsageDescription&#34; file=&#34;*-Info.plist&#34; mode=&#34;merge&#34;&amp;gt;&#xA;    &amp;lt;string&amp;gt;need camera access to take pictures&amp;lt;/string&amp;gt;&#xA;&amp;lt;/edit-config&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;edit-config target=&#34;NSPhotoLibraryUsageDescription&#34; file=&#34;*-Info.plist&#34; mode=&#34;merge&#34;&amp;gt;&#xA;    &amp;lt;string&amp;gt;need photo library access to get pictures from there&amp;lt;/string&amp;gt;&#xA;&amp;lt;/edit-config&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;edit-config target=&#34;NSLocationWhenInUseUsageDescription&#34; file=&#34;*-Info.plist&#34; mode=&#34;merge&#34;&amp;gt;&#xA;    &amp;lt;string&amp;gt;need location access to find things nearby&amp;lt;/string&amp;gt;&#xA;&amp;lt;/edit-config&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;edit-config target=&#34;NSPhotoLibraryAddUsageDescription&#34; file=&#34;*-Info.plist&#34; mode=&#34;merge&#34;&amp;gt;&#xA;    &amp;lt;string&amp;gt;need photo library access to save pictures there&amp;lt;/string&amp;gt;&#xA;&amp;lt;/edit-config&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;API Reference &lt;a name=&#34;reference&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.getPicture&#34;&gt;.getPicture(successCallback, errorCallback, options)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.cleanup&#34;&gt;.cleanup()&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.onError&#34;&gt;.onError&lt;/a&gt; : &lt;code&gt;function&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.onSuccess&#34;&gt;.onSuccess&lt;/a&gt; : &lt;code&gt;function&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.CameraOptions&#34;&gt;.CameraOptions&lt;/a&gt; : &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.DestinationType&#34;&gt;.DestinationType&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.EncodingType&#34;&gt;.EncodingType&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.MediaType&#34;&gt;.MediaType&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.PictureSourceType&#34;&gt;.PictureSourceType&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.PopoverArrowDirection&#34;&gt;.PopoverArrowDirection&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.Direction&#34;&gt;.Direction&lt;/a&gt; : &lt;code&gt;enum&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_CameraPopoverHandle&#34;&gt;CameraPopoverHandle&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_CameraPopoverOptions&#34;&gt;CameraPopoverOptions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;camera&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera.getPicture&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;camera.getPicture(successCallback, errorCallback, options)&lt;/h3&gt; &#xA;&lt;p&gt;Takes a photo using the camera, or retrieves a photo from the device&#39;s image gallery. The image is passed to the success callback as a Base64-encoded &lt;code&gt;String&lt;/code&gt;, or as the URI for the image file.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;camera.getPicture&lt;/code&gt; function opens the device&#39;s default camera application that allows users to snap pictures by default - this behavior occurs, when &lt;code&gt;Camera.sourceType&lt;/code&gt; equals &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.PictureSourceType&#34;&gt;&lt;code&gt;Camera.PictureSourceType.CAMERA&lt;/code&gt;&lt;/a&gt;. Once the user snaps the photo, the camera application closes and the application is restored.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;Camera.sourceType&lt;/code&gt; is &lt;code&gt;Camera.PictureSourceType.PHOTOLIBRARY&lt;/code&gt; or &lt;code&gt;Camera.PictureSourceType.SAVEDPHOTOALBUM&lt;/code&gt;, then a dialog displays that allows users to select an existing image.&lt;/p&gt; &#xA;&lt;p&gt;The return value is sent to the &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.onSuccess&#34;&gt;&lt;code&gt;cameraSuccess&lt;/code&gt;&lt;/a&gt; callback function, in one of the following formats, depending on the specified &lt;code&gt;cameraOptions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;code&gt;String&lt;/code&gt; containing the Base64-encoded photo image.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;String&lt;/code&gt; representing the image file location on local storage (default).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can do whatever you want with the encoded image or URI, for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Render the image in an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag, as in the example below&lt;/li&gt; &#xA; &lt;li&gt;Save the data locally (&lt;code&gt;LocalStorage&lt;/code&gt;, &lt;a href=&#34;http://brianleroux.github.com/lawnchair/&#34;&gt;Lawnchair&lt;/a&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Post the data to a remote server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Photo resolution on newer devices is quite good. Photos selected from the device&#39;s gallery are not downscaled to a lower quality, even if a &lt;code&gt;quality&lt;/code&gt; parameter is specified. To avoid common memory problems, set &lt;code&gt;Camera.destinationType&lt;/code&gt; to &lt;code&gt;FILE_URI&lt;/code&gt; rather than &lt;code&gt;DATA_URL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported Platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;Browser&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;OSX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More examples &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#camera-getPicture-examples&#34;&gt;here&lt;/a&gt;. Quirks &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#camera-getPicture-quirks&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static method of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;successCallback&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.onSuccess&#34;&gt;onSuccess&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;errorCallback&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.onError&#34;&gt;onError&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;options&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.CameraOptions&#34;&gt;CameraOptions&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CameraOptions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;navigator.camera.getPicture(cameraSuccess, cameraError, cameraOptions);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera.cleanup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;camera.cleanup()&lt;/h3&gt; &#xA;&lt;p&gt;Removes intermediate image files that are kept in temporary storage after calling &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.getPicture&#34;&gt;&lt;code&gt;camera.getPicture&lt;/code&gt;&lt;/a&gt;. Applies only when the value of &lt;code&gt;Camera.sourceType&lt;/code&gt; equals &lt;code&gt;Camera.PictureSourceType.CAMERA&lt;/code&gt; and the &lt;code&gt;Camera.destinationType&lt;/code&gt; equals &lt;code&gt;Camera.DestinationType.FILE_URI&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported Platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static method of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;navigator.camera.cleanup(onSuccess, onFail);&#xA;&#xA;function onSuccess() {&#xA;    console.log(&#34;Camera cleanup success.&#34;)&#xA;}&#xA;&#xA;function onFail(message) {&#xA;    alert(&#39;Failed because: &#39; + message);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera.onError&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;camera.onError : &lt;code&gt;function&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Callback function that provides an error message.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static typedef of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;message&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The message is provided by the device&#39;s native code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera.onSuccess&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;camera.onSuccess : &lt;code&gt;function&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Callback function that provides the image data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static typedef of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;imageData&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Base64 encoding of the image data, &lt;em&gt;or&lt;/em&gt; the image file URI, depending on &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera.CameraOptions&#34;&gt;&lt;code&gt;cameraOptions&lt;/code&gt;&lt;/a&gt; in effect.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Show image&#xA;//&#xA;function cameraCallback(imageData) {&#xA;   var image = document.getElementById(&#39;myImage&#39;);&#xA;   image.src = &#34;data:image/jpeg;base64,&#34; + imageData;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_camera.CameraOptions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;camera.CameraOptions : &lt;code&gt;Object&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Optional parameters to customize the camera settings.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#CameraOptions-quirks&#34;&gt;Quirks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static typedef of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_camera&#34;&gt;camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;quality&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quality of the saved image, expressed as a range of 0-100, where 100 is typically full resolution with no loss from file compression. (Note that information about the camera&#39;s resolution is unavailable.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;destinationType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.DestinationType&#34;&gt;DestinationType&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FILE_URI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose the format of the return value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sourceType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.PictureSourceType&#34;&gt;PictureSourceType&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CAMERA&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the source of the picture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;allowEdit&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow simple editing of image before selection.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;encodingType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.EncodingType&#34;&gt;EncodingType&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;JPEG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose the returned image file&#39;s encoding.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;targetWidth&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Width in pixels to scale image. Must be used with &lt;code&gt;targetHeight&lt;/code&gt;. Aspect ratio remains constant.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;targetHeight&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Height in pixels to scale image. Must be used with &lt;code&gt;targetWidth&lt;/code&gt;. Aspect ratio remains constant.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mediaType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.MediaType&#34;&gt;MediaType&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PICTURE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the type of media to select from. Only works when &lt;code&gt;PictureSourceType&lt;/code&gt; is &lt;code&gt;PHOTOLIBRARY&lt;/code&gt; or &lt;code&gt;SAVEDPHOTOALBUM&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;correctOrientation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rotate the image to correct for the orientation of the device during capture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;saveToPhotoAlbum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Save the image to the photo album on the device after capture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;popoverOptions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_CameraPopoverOptions&#34;&gt;CameraPopoverOptions&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS-only options that specify popover location in iPad.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cameraDirection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.Direction&#34;&gt;Direction&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACK&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose the camera to use (front- or back-facing).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Camera&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.DestinationType&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.DestinationType : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Defines the output format of &lt;code&gt;Camera.getPicture&lt;/code&gt; call.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATA_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI if possible&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FILE_URI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return file uri (content://media/external/images/media/2 for Android)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.EncodingType&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.EncodingType : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JPEG&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return JPEG encoded image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PNG&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return PNG encoded image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.MediaType&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.MediaType : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PICTURE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VIDEO&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow selection of video only, ONLY RETURNS URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ALLMEDIA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow selection from all media types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.PictureSourceType&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.PictureSourceType : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Defines the output format of &lt;code&gt;Camera.getPicture&lt;/code&gt; call.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHOTOLIBRARY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose image from the device&#39;s photo library (same as SAVEDPHOTOALBUM for Android)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CAMERA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take picture from camera&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SAVEDPHOTOALBUM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose image only from the device&#39;s Camera Roll album (same as PHOTOLIBRARY for Android)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.PopoverArrowDirection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.PopoverArrowDirection : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Matches iOS UIPopoverArrowDirection constants to specify arrow location on popover.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARROW_UP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARROW_DOWN&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARROW_LEFT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARROW_RIGHT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARROW_ANY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;15&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_Camera.Direction&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Camera.Direction : &lt;code&gt;enum&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kind&lt;/strong&gt;: static enum property of &lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera&#34;&gt;Camera&lt;/a&gt;&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BACK&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use the back-facing camera&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FRONT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use the front-facing camera&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_CameraPopoverOptions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CameraPopoverOptions&lt;/h2&gt; &#xA;&lt;p&gt;iOS-only parameters that specify the anchor element location and arrow direction of the popover when selecting images from an iPad&#39;s library or album. Note that the size of the popover may change to adjust to the direction of the arrow and orientation of the screen. Make sure to account for orientation changes when specifying the anchor element location.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x pixel coordinate of screen element onto which to anchor the popover.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[y]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;32&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y pixel coordinate of screen element onto which to anchor the popover.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[width]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;320&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;width, in pixels, of the screen element onto which to anchor the popover.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[height]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;480&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;height, in pixels, of the screen element onto which to anchor the popover.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[arrowDir]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#module_Camera.PopoverArrowDirection&#34;&gt;PopoverArrowDirection&lt;/a&gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ARROW_ANY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Direction the arrow on the popover should point.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[popoverWidth]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;width of the popover (0 or not specified will use apple&#39;s default width).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[popoverHeight]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;height of the popover (0 or not specified will use apple&#39;s default height).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;module_CameraPopoverHandle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CameraPopoverHandle&lt;/h2&gt; &#xA;&lt;p&gt;A handle to an image picker popover.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported Platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;navigator.camera.getPicture(onSuccess, onFail,&#xA;{&#xA;    destinationType: Camera.DestinationType.FILE_URI,&#xA;    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,&#xA;    popoverOptions: new CameraPopoverOptions(300, 300, 100, 100, Camera.PopoverArrowDirection.ARROW_ANY, 300, 600)&#xA;});&#xA;&#xA;// Reposition the popover if the orientation changes.&#xA;window.onorientationchange = function() {&#xA;    var cameraPopoverHandle = new CameraPopoverHandle();&#xA;    var cameraPopoverOptions = new CameraPopoverOptions(0, 0, 100, 100, Camera.PopoverArrowDirection.ARROW_ANY, 400, 500);&#xA;    cameraPopoverHandle.setPosition(cameraPopoverOptions);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;code&gt;camera.getPicture&lt;/code&gt; Errata&lt;/h2&gt; &#xA;&lt;h4&gt;Example &lt;a name=&#34;camera-getPicture-examples&#34;&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take a photo and retrieve the image&#39;s file location:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;navigator.camera.getPicture(onSuccess, onFail, { quality: 50,&#xA;    destinationType: Camera.DestinationType.FILE_URI });&#xA;&#xA;function onSuccess(imageURI) {&#xA;    var image = document.getElementById(&#39;myImage&#39;);&#xA;    image.src = imageURI;&#xA;}&#xA;&#xA;function onFail(message) {&#xA;    alert(&#39;Failed because: &#39; + message);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a photo and retrieve it as a Base64-encoded image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/**&#xA; * Warning: Using DATA_URL is not recommended! The DATA_URL destination&#xA; * type is very memory intensive, even with a low quality setting. Using it&#xA; * can result in out of memory errors and application crashes. Use FILE_URI&#xA; * instead.&#xA; */&#xA;navigator.camera.getPicture(onSuccess, onFail, { quality: 25,&#xA;    destinationType: Camera.DestinationType.DATA_URL&#xA;});&#xA;&#xA;function onSuccess(imageData) {&#xA;    var image = document.getElementById(&#39;myImage&#39;);&#xA;    image.src = &#34;data:image/jpeg;base64,&#34; + imageData;&#xA;}&#xA;&#xA;function onFail(message) {&#xA;    alert(&#39;Failed because: &#39; + message);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Preferences (iOS)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CameraUsesGeolocation&lt;/strong&gt; (boolean, defaults to false). For capturing JPEGs, set to true to get geolocation data in the EXIF header. This will trigger a request for geolocation permissions if set to true.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;preference name=&#34;CameraUsesGeolocation&#34; value=&#34;false&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Android Quirks&lt;/h4&gt; &#xA;&lt;p&gt;Android uses intents to launch the camera activity on the device to capture images, and on phones with low memory, the Cordova activity may be killed. In this scenario, the result from the plugin call will be delivered via the resume event. See &lt;a href=&#34;http://cordova.apache.org/docs/en/dev/guide/platforms/android/lifecycle.html&#34;&gt;the Android Lifecycle guide&lt;/a&gt; for more information. The &lt;code&gt;pendingResult.result&lt;/code&gt; value will contain the value that would be passed to the callbacks (either the URI/URL or an error message). Check the &lt;code&gt;pendingResult.pluginStatus&lt;/code&gt; to determine whether or not the call was successful.&lt;/p&gt; &#xA;&lt;h4&gt;Browser Quirks&lt;/h4&gt; &#xA;&lt;p&gt;Can only return photos as Base64-encoded image.&lt;/p&gt; &#xA;&lt;h4&gt;iOS Quirks&lt;/h4&gt; &#xA;&lt;p&gt;Including a JavaScript &lt;code&gt;alert()&lt;/code&gt; in either of the callback functions can cause problems. Wrap the alert within a &lt;code&gt;setTimeout()&lt;/code&gt; to allow the iOS image picker or popover to fully close before the alert displays:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;setTimeout(function() {&#xA;    // do your thing here!&#xA;}, 0);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows quirks&lt;/h4&gt; &#xA;&lt;p&gt;On Windows Phone 8.1 using &lt;code&gt;SAVEDPHOTOALBUM&lt;/code&gt; or &lt;code&gt;PHOTOLIBRARY&lt;/code&gt; as a source type causes application to suspend until file picker returns the selected image and then restore with start page as defined in app&#39;s &lt;code&gt;config.xml&lt;/code&gt;. In case when &lt;code&gt;camera.getPicture&lt;/code&gt; was called from different page, this will lead to reloading start page from scratch and success and error callbacks will never be called.&lt;/p&gt; &#xA;&lt;p&gt;To avoid this we suggest using SPA pattern or call &lt;code&gt;camera.getPicture&lt;/code&gt; only from your app&#39;s start page.&lt;/p&gt; &#xA;&lt;p&gt;More information about Windows Phone 8.1 picker APIs is here: &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/apps/dn720490.aspx&#34;&gt;How to continue your Windows Phone app after calling a file picker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;CameraOptions&lt;/code&gt; Errata &lt;a name=&#34;CameraOptions-quirks&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;Android Quirks&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Any &lt;code&gt;cameraDirection&lt;/code&gt; value results in a back-facing photo. (= You can only use the back camera)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;allowEdit&lt;/code&gt; is unpredictable on Android and it should not be used!&lt;/strong&gt; The Android implementation of this plugin tries to find and use an application on the user&#39;s device to do image cropping. The plugin has no control over what application the user selects to perform the image cropping and it is very possible that the user could choose an incompatible option and cause the plugin to fail. This sometimes works because most devices come with an application that handles cropping in a way that is compatible with this plugin (Google Photos), but it is unwise to rely on that being the case. If image editing is essential to your application, consider seeking a third party library or plugin that provides its own image editing utility for a more robust solution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Camera.PictureSourceType.PHOTOLIBRARY&lt;/code&gt; and &lt;code&gt;Camera.PictureSourceType.SAVEDPHOTOALBUM&lt;/code&gt; both display the same photo album.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ignores the &lt;code&gt;encodingType&lt;/code&gt; parameter if the image is unedited (i.e. &lt;code&gt;quality&lt;/code&gt; is 100, &lt;code&gt;correctOrientation&lt;/code&gt; is false, and no &lt;code&gt;targetHeight&lt;/code&gt; or &lt;code&gt;targetWidth&lt;/code&gt; are specified). The &lt;code&gt;CAMERA&lt;/code&gt; source will always return the JPEG file given by the native camera and the &lt;code&gt;PHOTOLIBRARY&lt;/code&gt; and &lt;code&gt;SAVEDPHOTOALBUM&lt;/code&gt; sources will return the selected file in its existing encoding.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;iOS Quirks&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using &lt;code&gt;destinationType.FILE_URI&lt;/code&gt;, photos are saved in the application&#39;s temporary directory. The contents of the application&#39;s temporary directory is deleted when the application ends.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample: Take Pictures, Select Pictures from the Picture Library, and Get Thumbnails &lt;a name=&#34;sample&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The Camera plugin allows you to do things like open the device&#39;s Camera app and take a picture, or open the file picker and select one. The code snippets in this section demonstrate different tasks including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the Camera app and &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#takePicture&#34;&gt;take a Picture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a picture and &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#getThumbnails&#34;&gt;return thumbnails&lt;/a&gt; (resized picture)&lt;/li&gt; &#xA; &lt;li&gt;Take a picture and &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#convert&#34;&gt;generate a FileEntry object&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#selectFile&#34;&gt;Select a file&lt;/a&gt; from the picture library&lt;/li&gt; &#xA; &lt;li&gt;Select a JPEG image and &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#getFileThumbnails&#34;&gt;return thumbnails&lt;/a&gt; (resized image)&lt;/li&gt; &#xA; &lt;li&gt;Select an image and &lt;a href=&#34;https://raw.githubusercontent.com/apache/cordova-plugin-camera/master/#convert&#34;&gt;generate a FileEntry object&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Take a Picture &lt;a name=&#34;takePicture&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Before you can take a picture, you need to set some Camera plugin options to pass into the Camera plugin&#39;s &lt;code&gt;getPicture&lt;/code&gt; function. Here is a common set of recommendations. In this example, you create the object that you will use for the Camera options, and set the &lt;code&gt;sourceType&lt;/code&gt; dynamically to support both the Camera app and the file picker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function setOptions(srcType) {&#xA;    var options = {&#xA;        // Some common settings are 20, 50, and 100&#xA;        quality: 50,&#xA;        destinationType: Camera.DestinationType.FILE_URI,&#xA;        // In this app, dynamically set the picture source, Camera or photo gallery&#xA;        sourceType: srcType,&#xA;        encodingType: Camera.EncodingType.JPEG,&#xA;        mediaType: Camera.MediaType.PICTURE,&#xA;        allowEdit: true,&#xA;        correctOrientation: true&#xA;    }&#xA;    return options;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Typically, you want to use a FILE_URI instead of a DATA_URL to avoid most memory issues. JPEG is the recommended encoding type for Android.&lt;/p&gt; &#xA;&lt;p&gt;You take a picture by passing in the options object to &lt;code&gt;getPicture&lt;/code&gt;, which takes a CameraOptions object as the third argument. When you call &lt;code&gt;setOptions&lt;/code&gt;, pass &lt;code&gt;Camera.PictureSourceType.CAMERA&lt;/code&gt; as the picture source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function openCamera(selection) {&#xA;&#xA;    var srcType = Camera.PictureSourceType.CAMERA;&#xA;    var options = setOptions(srcType);&#xA;    var func = createNewFileEntry;&#xA;&#xA;    navigator.camera.getPicture(function cameraSuccess(imageUri) {&#xA;&#xA;        displayImage(imageUri);&#xA;        // You may choose to copy the picture, save it somewhere, or upload.&#xA;        func(imageUri);&#xA;&#xA;    }, function cameraError(error) {&#xA;        console.debug(&#34;Unable to obtain picture: &#34; + error, &#34;app&#34;);&#xA;&#xA;    }, options);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you take the picture, you can display it or do something else. In this example, call the app&#39;s &lt;code&gt;displayImage&lt;/code&gt; function from the preceding code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function displayImage(imgUri) {&#xA;&#xA;    var elem = document.getElementById(&#39;imageFile&#39;);&#xA;    elem.src = imgUri;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To display the image on some platforms, you might need to include the main part of the URI in the Content-Security-Policy &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element in index.html. For example, on Windows 10, you can include &lt;code&gt;ms-appdata:&lt;/code&gt; in your &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element. Here is an example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;meta http-equiv=&#34;Content-Security-Policy&#34; content=&#34;default-src &#39;self&#39; data: gap: ms-appdata: https://ssl.gstatic.com &#39;unsafe-eval&#39;; style-src &#39;self&#39; &#39;unsafe-inline&#39;; media-src *&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Take a Picture and Return Thumbnails (Resize the Picture) &lt;a name=&#34;getThumbnails&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To get smaller images, you can return a resized image by passing both &lt;code&gt;targetHeight&lt;/code&gt; and &lt;code&gt;targetWidth&lt;/code&gt; values with your CameraOptions object. In this example, you resize the returned image to fit in a 100px by 100px box (the aspect ratio is maintained, so 100px is either the height or width, whichever is greater in the source).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function openCamera(selection) {&#xA;&#xA;    var srcType = Camera.PictureSourceType.CAMERA;&#xA;    var options = setOptions(srcType);&#xA;    var func = createNewFileEntry;&#xA;&#xA;    if (selection == &#34;camera-thmb&#34;) {&#xA;        options.targetHeight = 100;&#xA;        options.targetWidth = 100;&#xA;    }&#xA;&#xA;    navigator.camera.getPicture(function cameraSuccess(imageUri) {&#xA;&#xA;        // Do something&#xA;&#xA;    }, function cameraError(error) {&#xA;        console.debug(&#34;Unable to obtain picture: &#34; + error, &#34;app&#34;);&#xA;&#xA;    }, options);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Select a File from the Picture Library &lt;a name=&#34;selectFile&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;When selecting a file using the file picker, you also need to set the CameraOptions object. In this example, set the &lt;code&gt;sourceType&lt;/code&gt; to &lt;code&gt;Camera.PictureSourceType.SAVEDPHOTOALBUM&lt;/code&gt;. To open the file picker, call &lt;code&gt;getPicture&lt;/code&gt; just as you did in the previous example, passing in the success and error callbacks along with CameraOptions object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function openFilePicker(selection) {&#xA;&#xA;    var srcType = Camera.PictureSourceType.SAVEDPHOTOALBUM;&#xA;    var options = setOptions(srcType);&#xA;    var func = createNewFileEntry;&#xA;&#xA;    navigator.camera.getPicture(function cameraSuccess(imageUri) {&#xA;&#xA;        // Do something&#xA;&#xA;    }, function cameraError(error) {&#xA;        console.debug(&#34;Unable to obtain picture: &#34; + error, &#34;app&#34;);&#xA;&#xA;    }, options);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Select an Image and Return Thumbnails (resized images) &lt;a name=&#34;getFileThumbnails&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Resizing a file selected with the file picker works just like resizing using the Camera app; set the &lt;code&gt;targetHeight&lt;/code&gt; and &lt;code&gt;targetWidth&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function openFilePicker(selection) {&#xA;&#xA;    var srcType = Camera.PictureSourceType.SAVEDPHOTOALBUM;&#xA;    var options = setOptions(srcType);&#xA;    var func = createNewFileEntry;&#xA;&#xA;    if (selection == &#34;picker-thmb&#34;) {&#xA;        // To downscale a selected image,&#xA;        // Camera.EncodingType (e.g., JPEG) must match the selected image type.&#xA;        options.targetHeight = 100;&#xA;        options.targetWidth = 100;&#xA;    }&#xA;&#xA;    navigator.camera.getPicture(function cameraSuccess(imageUri) {&#xA;&#xA;        // Do something with image&#xA;&#xA;    }, function cameraError(error) {&#xA;        console.debug(&#34;Unable to obtain picture: &#34; + error, &#34;app&#34;);&#xA;&#xA;    }, options);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Take a picture and get a FileEntry Object &lt;a name=&#34;convert&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you want to do something like copy the image to another location, or upload it somewhere using the FileTransfer plugin, you need to get a FileEntry object for the returned picture. To do that, call &lt;code&gt;window.resolveLocalFileSystemURL&lt;/code&gt; on the file URI returned by the Camera app. If you need to use a FileEntry object, set the &lt;code&gt;destinationType&lt;/code&gt; to &lt;code&gt;Camera.DestinationType.FILE_URI&lt;/code&gt; in your CameraOptions object (this is also the default value).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt; You need the &lt;a href=&#34;https://www.npmjs.com/package/cordova-plugin-file&#34;&gt;File plugin&lt;/a&gt; to call &lt;code&gt;window.resolveLocalFileSystemURL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here is the call to &lt;code&gt;window.resolveLocalFileSystemURL&lt;/code&gt;. The image URI is passed to this function from the success callback of &lt;code&gt;getPicture&lt;/code&gt;. The success handler of &lt;code&gt;resolveLocalFileSystemURL&lt;/code&gt; receives the FileEntry object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function getFileEntry(imgUri) {&#xA;    window.resolveLocalFileSystemURL(imgUri, function success(fileEntry) {&#xA;&#xA;        // Do something with the FileEntry object, like write to it, upload it, etc.&#xA;        // writeFile(fileEntry, imgUri);&#xA;        console.log(&#34;got file: &#34; + fileEntry.fullPath);&#xA;        // displayFileData(fileEntry.nativeURL, &#34;Native URL&#34;);&#xA;&#xA;    }, function () {&#xA;      // If don&#39;t get the FileEntry (which may happen when testing&#xA;      // on some emulators), copy to a new FileEntry.&#xA;        createNewFileEntry(imgUri);&#xA;    });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example shown in the preceding code, you call the app&#39;s &lt;code&gt;createNewFileEntry&lt;/code&gt; function if you don&#39;t get a valid FileEntry object. The image URI returned from the Camera app should result in a valid FileEntry, but platform behavior on some emulators may be different for files returned from the file picker.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt; To see an example of writing to a FileEntry, see the &lt;a href=&#34;https://www.npmjs.com/package/cordova-plugin-file&#34;&gt;File plugin README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The code shown here creates a file in your app&#39;s cache (in sandboxed storage) named &lt;code&gt;tempFile.jpeg&lt;/code&gt;. With the new FileEntry object, you can copy the image to the file or do something else like upload it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function createNewFileEntry(imgUri) {&#xA;    window.resolveLocalFileSystemURL(cordova.file.cacheDirectory, function success(dirEntry) {&#xA;&#xA;        // JPEG file&#xA;        dirEntry.getFile(&#34;tempFile.jpeg&#34;, { create: true, exclusive: false }, function (fileEntry) {&#xA;&#xA;            // Do something with it, like write to it, upload it, etc.&#xA;            // writeFile(fileEntry, imgUri);&#xA;            console.log(&#34;got file: &#34; + fileEntry.fullPath);&#xA;            // displayFileData(fileEntry.fullPath, &#34;File copied to&#34;);&#xA;&#xA;        }, onErrorCreateFile);&#xA;&#xA;    }, onErrorResolveUrl);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>