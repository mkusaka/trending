<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-20T01:35:54Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pilotmoon/Scroll-Reverser</title>
    <updated>2022-12-20T01:35:54Z</updated>
    <id>tag:github.com,2022-12-20:/pilotmoon/Scroll-Reverser</id>
    <link href="https://github.com/pilotmoon/Scroll-Reverser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Per-device scrolling prefs on macOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scroll Reverser&lt;/h1&gt; &#xA;&lt;p&gt;Reverses the direction of macOS scrolling, with independent settings for trackpads and mice.&lt;/p&gt; &#xA;&lt;p&gt;Web home page: &lt;a href=&#34;https://pilotmoon.com/scrollreverser/&#34;&gt;https://pilotmoon.com/scrollreverser/&lt;/a&gt; (Please note the home page contains additional content about the app, FAQ, changelog etc.)&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The latest build of Scroll Reverser requires macOS 10.12.6 and above, and is a univeral binary for both Intel and Apple Silicon (M1) Macs. Older versions are available for older OS versions down to OS X 10.4. See the web home page for the downloads, or the respective labelled branches for the code.&lt;/p&gt; &#xA;&lt;h2&gt;Install and run&lt;/h2&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/pilotmoon/Scroll-Reverser/releases/latest&#34;&gt;latest release&lt;/a&gt;, unzip, and place &lt;code&gt;Scroll Reverser.app&lt;/code&gt; in your &lt;code&gt;/Applications&lt;/code&gt; folder. Double-click to run.&lt;/p&gt; &#xA;&lt;p&gt;To uninstall, simply quit the app and drag &lt;code&gt;Scroll Reverser.app&lt;/code&gt; to trash.&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Translation contributions in your language are welcome. Please submit transmations using the &lt;a href=&#34;https://crowdin.com/project/pilotmoon-apps&#34;&gt;CrowdIn&lt;/a&gt; platform. ** When improving an existing translation, please add a comment and mark it as &#34;Issue&#34; so that it flags it up to me to approve. Otherwise I might not see it.** If you would like to open a new language, just send me an email.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Published under &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note, the name &#34;Scroll Reverser&#34; and the application icon are trademarks and may not be used by derivatve works (except as required to describe the origin of the work).&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repo, you&#39;ll need to &lt;code&gt;git submodule update --init&lt;/code&gt; to check out the BuildScripts submodule.&lt;/p&gt; &#xA;&lt;p&gt;You will get errors in the build script phase. That is because you need to replace out the part of the script which specifies my code signing key with the name of your own key. (If you don&#39;t have a code signing key, you&#39;ll need to Google that...)&lt;/p&gt; &#xA;&lt;h2&gt;Viewing debug log&lt;/h2&gt; &#xA;&lt;p&gt;To display the debug window, Option(‚å•)-click the Scroll Reverser menu bar icon. (Scroll Reverser does not output debug info with NSLog. This is because doing so slows down the event lap. Instead, it has some custom debug code which is more efficient to write to.)&lt;/p&gt; &#xA;&lt;h2&gt;Notes on the code&lt;/h2&gt; &#xA;&lt;p&gt;The master branch targets 10.12 and higher.&lt;/p&gt; &#xA;&lt;p&gt;Older code targeting 10.4+ is in the &#39;tiger&#39; branch and 10.7+ is in the &#39;lion&#39; branch.&lt;/p&gt; &#xA;&lt;p&gt;The real guts of the code is in MouseTap.m. Everything else is just user interface rigging.&lt;/p&gt; &#xA;&lt;p&gt;Scroll Reverser installs an event tap, which gives access to event stream, including scrolling events and gesture events. The main documentation is &lt;a href=&#34;https://developer.apple.com/library/mac/documentation/Carbon/Reference/QuartzEventServicesRef/&#34;&gt;Quartz Event Services Reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To distinguish between trackpad and mouse, Scroll Reverser essentially looks at the gesture events to determine whether there are 2 or more fingers on the trackpad. If so, it assumes it is the trackpad. If not, mouse. It&#39;s a little more complicated than that as you will see, but that is the general idea.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jmascia/KLCPopup</title>
    <updated>2022-12-20T01:35:54Z</updated>
    <id>tag:github.com,2022-12-20:/jmascia/KLCPopup</id>
    <link href="https://github.com/jmascia/KLCPopup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple and flexible class for presenting custom views as a popup in iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KLCPopup&lt;/h1&gt; &#xA;&lt;p&gt;KLCPopup is a simple and flexible iOS class for presenting any custom view as a popup. It includes a variety of options for controlling how your popup appears and behaves.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;http://i.imgur.com/BEmRGb5.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;##Installation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;KLCPopup/KLCPopup&lt;/code&gt; folder into your project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#import &#34;KLCPopup.h&#34;&lt;/code&gt; where appropriate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;##Usage&lt;/p&gt; &#xA;&lt;p&gt;(see sample Xcode project in &lt;code&gt;/KLCPopupExample&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Creating a Popup&lt;/h3&gt; &#xA;&lt;p&gt;Create a popup for displaying a UIView using default animations and behaviors (similar to a UIAlertView):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+ (KLCPopup*)popupWithContentView:(UIView*)contentView;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or create a popup with custom animations and behaviors. Customizations can also be accessed via properties on the popup instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+ (KLCPopup*)popupWithContentView:(UIView*)contentView&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; showType:(KLCPopupShowType)showType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  dismissType:(KLCPopupDismissType)dismissType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; maskType:(KLCPopupMaskType)maskType&#xA;&#x9;&#x9; dismissOnBackgroundTouch:(BOOL)shouldDismissOnBackgroundTouch&#xA;&#x9;&#x9;&#x9;dismissOnContentTouch:(BOOL)shouldDismissOnContentTouch;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You may pass &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;contentView&lt;/code&gt; when creating the popup, but &lt;strong&gt;you must assign a &lt;code&gt;contentView&lt;/code&gt; to the popup before showing it!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also &lt;strong&gt;you must give your &lt;code&gt;contentView&lt;/code&gt; a size&lt;/strong&gt; before showing it (by setting its frame), or &lt;strong&gt;it must size itself with AutoLayout&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Showing a Popup&lt;/h3&gt; &#xA;&lt;p&gt;Show popup in middle of screen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (void)show;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two ways to control where your popup is displayed:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Relative layout presets (see &lt;code&gt;KLCPopup.h&lt;/code&gt; for options).&lt;/p&gt; &lt;pre&gt;&lt;code&gt; - (void)showWithLayout:(KLCPopupLayout)layout;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Explicit center point relative to a view&#39;s coordinate system.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; - (void)showAtCenter:(CGPoint)center inView:(UIView*)view;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want your popup to dismiss automatically (like a toast in Android) you can set an explicit &lt;code&gt;duration&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (void)showWithDuration:(NSTimeInterval)duration;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dismissing a Popup&lt;/h3&gt; &#xA;&lt;p&gt;There are a few ways to dismiss a popup:&lt;/p&gt; &#xA;&lt;p&gt;If you have a reference to the popup instance, you can send this message to it. If &lt;code&gt;animated&lt;/code&gt;, then it will use the animation specified in &lt;code&gt;dismissType&lt;/code&gt;. Otherwise it will just disappear:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (void)dismiss:(BOOL)animated;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you lost your reference to a popup or you want to make sure no popups are showing, this class method dismisses any and all popups in your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+ (void)dismissAllPopups;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also you can call this category method from &lt;code&gt;UIView(KLCPopup)&lt;/code&gt; on your contentView, or any of its subviews, to dismiss its parent popup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (void)dismissPresentingPopup; // UIView category&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;Animation used to show your popup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) KLCPopupShowType showType;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Animation used to dismiss your popup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) KLCPopupDismissType dismissType;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mask prevents touches to the background from passing through to views below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) KLCPopupMaskType maskType;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Popup will automatically dismiss if the background is touched:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) BOOL shouldDismissOnBackgroundTouch;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Popup will automatically dismiss if the contentView is touched:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) BOOL shouldDismissOnContentTouch;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Override alpha value for dimmed background mask:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, assign) CGFloat dimmedMaskAlpha;&#x9;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Blocks&lt;/h3&gt; &#xA;&lt;p&gt;Use these blocks to synchronize other actions with popup events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@property (nonatomic, copy) void (^didFinishShowingCompletion)();&#xA;&#xA;@property (nonatomic, copy) void (^willStartDismissingCompletion)();&#xA;&#xA;@property (nonatomic, copy) void (^didFinishDismissingCompletion)();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;UIView* contentView = [[UIView alloc] init];&#xA;contentView.backgroundColor = [UIColor orangeColor];&#xA;contentView.frame = CGRectMake(0.0, 0.0, 100.0, 100.0);&#xA;&#x9;&#xA;KLCPopup* popup = [KLCPopup popupWithContentView:contentView];&#xA;[popup show];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Interface Orientation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;KLCPopup&lt;/code&gt; supports &lt;strong&gt;Portrait&lt;/strong&gt; and &lt;strong&gt;Landscape&lt;/strong&gt; by default.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;KLCPopup&lt;/code&gt; requires &lt;strong&gt;iOS 7&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Devices&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;KLCPopup&lt;/code&gt; supports &lt;strong&gt;iPhone&lt;/strong&gt; and &lt;strong&gt;iPad&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ARC&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;KLCPopup&lt;/code&gt; requires ARC.&lt;/p&gt; &#xA;&lt;h3&gt;TODO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add support for keyboard show/hide.&lt;/li&gt; &#xA; &lt;li&gt;Add support for drag-to-dismiss.&lt;/li&gt; &#xA; &lt;li&gt;Add &#39;blur&#39; option for background mask&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;##Credits KLCPopup was created by Jeff Mascia and the team at Kullect, where it&#39;s used in the &lt;a href=&#34;http://tryshout.com&#34;&gt;Shout Photo Messenger&lt;/a&gt; app. Aspects of KLCPopup were inspired by Sam Vermette&#39;s &lt;a href=&#34;https://github.com/samvermette/SVProgressHUD&#34;&gt;SVProgressHUD&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>