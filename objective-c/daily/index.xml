<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-23T01:31:13Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>robbiehanson/KissXML</title>
    <updated>2024-05-23T01:31:13Z</updated>
    <id>tag:github.com,2024-05-23:/robbiehanson/KissXML</id>
    <link href="https://github.com/robbiehanson/KissXML" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A replacement for Cocoa&#39;s NSXML cluster of classes. Based on libxml. Works on iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/robbiehanson/KissXML&#34;&gt;KissXML&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/robbiehanson/KissXML&#34;&gt;&lt;img src=&#34;http://img.shields.io/travis/robbiehanson/KissXML.svg?style=flat&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/KissXML&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/KissXML.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/KissXML&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/KissXML.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/KissXML&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/KissXML.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KissXML provides a drop-in replacement for Apple&#39;s NSXML class culster in environments without NSXML (e.g. iOS).&lt;/p&gt; &#xA;&lt;p&gt;It is implemented atop the defacto libxml2 C library, which comes pre-installed on Mac &amp;amp; iOS. But it shields you from all the nasty low-level C pointers and malloc&#39;s, and provides an easy-to-use Objective-C library.&lt;/p&gt; &#xA;&lt;p&gt;It is designed for speed and reliability, so it&#39;s read-access thread-safe and will &#34;just-work&#34;. That is, KissXML provides an API that follows &#34;what-you-would-expect&#34; rules from an Objective-C library. So feel free to do things like parallel processing of an xml document using blocks. It will &#34;just work&#34; so you can get back to designing the rest of your app.&lt;/p&gt; &#xA;&lt;p&gt;KissXML is a mature library used in thousands of products. It&#39;s also used in other libraries, such as &lt;a href=&#34;https://github.com/robbiehanson/XMPPFramework&#34;&gt;XMPPFramework&lt;/a&gt; (an objective-c library for real-time xml streaming). It&#39;s even used in hospital applications.&lt;/p&gt; &#xA;&lt;p&gt;KissXML was inspired by the TouchXML project, but was created to add full support for generating XML as well as supporting the entire NSXML API.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;The minimum deployment target is iOS 8.0 / macOS 10.9 / tvOS 9.0 / watchOS 2.0.&lt;/p&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;p&gt;The easiest way to install &lt;code&gt;KissXML&lt;/code&gt; is using Swift Package Manager, simply add the following to your &lt;strong&gt;&lt;code&gt;Package.swift&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/robbiehanson/KissXML.git&#34;, .upToNextMajor(from: &#34;x.x.x&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to replace &lt;code&gt;x.x.x&lt;/code&gt; with the appropriate version number.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;To install &lt;code&gt;KissXML&lt;/code&gt; using CocoaPods, add the following to your &lt;strong&gt;&lt;code&gt;Podfile&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;use_frameworks!&#xA;pod &#39;KissXML&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After &lt;code&gt;pod install&lt;/code&gt; open your &lt;code&gt;.xcworkspace&lt;/code&gt; and import:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Swift&#xA;import KissXML     &#xA;// Objective-C on iOS 8+ with `use_frameworks!`&#xA;@import KissXML;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;KissXML.xcodeproj&lt;/code&gt; project contains framework targets for iOS, macOS, tvOS, and watchOS.&lt;/p&gt; &#xA;&lt;h3&gt;Learn More&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/robbiehanson/KissXML/wiki/GettingStarted&#34;&gt;Get started using KissXML&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/robbiehanson/KissXML/wiki&#34;&gt;Learn more about KissXML&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;br&gt; Can&#39;t find the answer to your question in any of the [wiki](https://github.com/robbiehanson/KissXML/wiki) articles? Try the **[mailing list](http://groups.google.com/group/kissxml)**. &#xA;&lt;br&gt; &#xA;&lt;br&gt; Love the project? Wanna buy me a ‚òïÔ∏è&amp;nbsp;&amp;nbsp;? (or a üç∫&amp;nbsp;&amp;nbsp;üòÄ&amp;nbsp;): &#xA;&lt;p&gt;&lt;a href=&#34;https://onename.com/robbiehanson&#34;&gt;&lt;img src=&#34;https://bitpay.com/img/donate-sm.png&#34; alt=&#34;donation-bitcoin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=69SPF7R4ZF69J&#34;&gt;&lt;img src=&#34;http://www.paypal.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;donation-paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;5.2.0 - Feb 2 2017 - Swift 3 and Carthage support. Requires iOS 8 or higher, removes static library support.&lt;/li&gt; &#xA; &lt;li&gt;5.1.2 - Jul 8 2016 - Better Swift generated interface cross-compatibility with NSXML by matching NSXML headers more closely, specifically by changing many set/get methods to properties.&lt;/li&gt; &#xA; &lt;li&gt;5.1.1 - Jul 7 2016 - Fixes issue when integrated as a static library. Min iOS version is back to 6.0. Moved DDXML-&amp;gt;NSXML Swift mappings to &lt;code&gt;SwiftNSXML&lt;/code&gt; subspec. Added test for static library integration.&lt;/li&gt; &#xA; &lt;li&gt;5.1.0 - Jul 6 2016 - Removed need for &lt;code&gt;libxml_module&lt;/code&gt; subspec by removing references to libxml in public headers. Added Obj-C generics and nullability support to match NSXML API. Added watchOS support. Minimum iOS version is now 8.0.&lt;/li&gt; &#xA; &lt;li&gt;5.0.3 - Feb 1 2016 - Removed &lt;code&gt;DDXML_NS_DECLARATIONS_ENABLED&lt;/code&gt; to allow for better Swift compatibility. Added &lt;code&gt;DDXML.swift&lt;/code&gt; with mappings between NSXML classes and constants and DDXML.&lt;/li&gt; &#xA; &lt;li&gt;5.0.2 - Jan 26 2016 - Enable Swift support via &lt;code&gt;libxml/module.modulemap&lt;/code&gt; and &lt;code&gt;DDXML_LIBXML_MODULE_ENABLED&lt;/code&gt; macro. You can use the &lt;code&gt;KissXML/libxml_module&lt;/code&gt; CocoaPods subspec to enable this feature.&lt;/li&gt; &#xA; &lt;li&gt;5.0.1 - Jan 21 2016 - Run tests on iOS and Mac targets.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>