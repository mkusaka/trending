<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-02T01:40:16Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>monaca-samples/blink-to-text</title>
    <updated>2023-03-02T01:40:16Z</updated>
    <id>tag:github.com,2023-03-02:/monaca-samples/blink-to-text</id>
    <link href="https://github.com/monaca-samples/blink-to-text" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hybrid app that transfers eye blinking captured with Tensorflow.js to text with the usage of Morse Code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blink-To-Text&lt;/h1&gt; &#xA;&lt;p&gt;This project focuses on building hybrid application which converts the blinking of eyes to text. It implements &lt;a href=&#34;https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection&#34;&gt;Face Landmark Detection&lt;/a&gt; from Tensorflow.js to capture movement of the eyes, and uses Morse Code to translate short and long blinks to alphabet characters.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;There is a tutorial available in Medium: &lt;a href=&#34;https://medium.com/the-web-tub/recognising-eye-blinking-with-tensorflow-js-3c02b738850d&#34;&gt;Recognising Eye Blinking With Tensorflow.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; in the directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt; to start the project.&lt;/li&gt; &#xA; &lt;li&gt;If the browser opens url &lt;em&gt;0.0.0.0:8080&lt;/em&gt;, change it to &lt;em&gt;localhost:8080&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Wait until the model loads.&lt;/li&gt; &#xA; &lt;li&gt;When you see yourself, click &lt;em&gt;Start Capturing&lt;/em&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;You have 7 seconds to blink the sequence you want.&lt;/li&gt; &#xA; &lt;li&gt;If the converted letter is wrong, delete it with &lt;em&gt;Remove Letter&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Important files&lt;/h2&gt; &#xA;&lt;h4&gt;JS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;blinkPrediction.js&lt;/code&gt; - Tensorflow.js model and prediction logic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hybridFunctions.js&lt;/code&gt; - functions for loading camera on browser/mobile&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;morseCodeTable.js&lt;/code&gt; - Morse Code dictionary&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;blinkStore.js&lt;/code&gt; - Pinia store containing state of the app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Vue&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LoadingPage.vue&lt;/code&gt; - first screen that user sees while loading the model&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MorseCodePage.vue&lt;/code&gt; - helper screen to see Morse Code table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PredictingPage.vue&lt;/code&gt; - main screen where predicting is happening&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;WebPack&lt;/h2&gt; &#xA;&lt;p&gt;There is a webpack bundler setup. It compiles and bundles all &#34;front-end&#34; resources. You should work only with files located in &lt;code&gt;/src&lt;/code&gt; folder. Webpack config located in &lt;code&gt;script/webpack.config.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Webpack has specific way of handling static assets (CSS files, images, audios). You can learn more about correct way of doing things on &lt;a href=&#34;https://webpack.js.org/guides/asset-management/&#34;&gt;official webpack documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation &amp;amp; Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://framework7.io/docs/&#34;&gt;Framework7 Core Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://framework7.io/vue/&#34;&gt;Framework7 Vue Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v3.vuejs.org/guide/introduction.html&#34;&gt;Vue3 Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>