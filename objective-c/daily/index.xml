<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-13T01:39:22Z</updated>
  <subtitle>Daily Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Sophiestication/Articles</title>
    <updated>2023-03-13T01:39:22Z</updated>
    <id>tag:github.com,2023-03-13:/Sophiestication/Articles</id>
    <link href="https://github.com/Sophiestication/Articles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>medallia/digital-ios-sdk</title>
    <updated>2023-03-13T01:39:22Z</updated>
    <id>tag:github.com,2023-03-13:/medallia/digital-ios-sdk</id>
    <link href="https://github.com/medallia/digital-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Medallia Digital SDK Swift Package Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.medallia.com/digital/docs-v2/mobile-sdk-docs/index.html#pages/developers-portal/ios-sdk/integration-guide/setup/ios-setup.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SDK-Online_Documentation-brightgreen.svg?sanitize=true&#34; alt=&#34;SwiftPackageManager&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.medallia.com/digital/docs-v2/mobile-sdk-docs/index.html#xcframework-integration&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/iOS-XCFramework-informational.svg?sanitize=true&#34; alt=&#34;XCFramework&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.medallia.com/digital/docs-v2/mobile-sdk-docs/index.html#pages/developers-portal/ios-sdk/release-notes/ios-release-notes.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SDK_Version-4.0.0_and_above-yellow.svg?sanitize=true&#34; alt=&#34;SDK Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To add Medallia Digital&#39;s package dependency to your Xcode project, select File &amp;gt; Add Packages... Enter Package URL: &lt;a href=&#34;https://github.com/medallia/Digital-iOS-SDK&#34;&gt;https://github.com/medallia/Digital-iOS-SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also navigate to your target’s General pane, and in the “Frameworks, Libraries, and Embedded Content” section, click the + button, select Add Other, and choose Add Package Dependency.&lt;/p&gt; &#xA;&lt;p&gt;Choose &#34;Exact Version&#34; in Dependency Rule and enter the Medallia Digital SDK version that you want to use (For example 4.0.2) then click &#39;Add Package&#39;. &lt;img src=&#34;https://raw.githubusercontent.com/medallia/digital-ios-sdk/main/Images/choose_package_options.png&#34; alt=&#34;choose-package-options&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the package by clicking on &#39;Add Package&#39;. &lt;img src=&#34;https://raw.githubusercontent.com/medallia/digital-ios-sdk/main/Images/add_package.png&#34; alt=&#34;add-package&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cocoabits/MASShortcut</title>
    <updated>2023-03-13T01:39:22Z</updated>
    <id>tag:github.com,2023-03-13:/cocoabits/MASShortcut</id>
    <link href="https://github.com/cocoabits/MASShortcut" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern framework for managing global keyboard shortcuts compatible with Mac App Store. More details:&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/shpakovski/MASShortcut&#34;&gt;&lt;img src=&#34;https://travis-ci.org/shpakovski/MASShortcut.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Intro&lt;/h1&gt; &#xA;&lt;p&gt;Some time ago Cocoa developers used a brilliant framework &lt;a href=&#34;http://wafflesoftware.net/shortcut/&#34;&gt;ShortcutRecorder&lt;/a&gt; for managing keyboard shortcuts in application preferences. However, it became incompatible with the new plugin architecture of Xcode&amp;nbsp;4.&lt;/p&gt; &#xA;&lt;p&gt;The MASShortcut project introduces a modern API and user interface for recording, storing and using system-wide keyboard shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shpakovski/MASShortcut/master/Demo/screenshot.png&#34; alt=&#34;Screenshot of the demo project&#34; title=&#34;This is how the demo looks like&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Record and display keyboard shortcuts&lt;/li&gt; &#xA; &lt;li&gt;Watch for shortcuts and execute actions, system-wide&lt;/li&gt; &#xA; &lt;li&gt;A nice, &lt;a href=&#34;http://cocoadocs.org/docsets/MASShortcut/&#34;&gt;documented API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can be configured to be compatible with Shortcut Recorder&lt;/li&gt; &#xA; &lt;li&gt;Can be installed both through CocoaPods and as a Git submodule&lt;/li&gt; &#xA; &lt;li&gt;Mac App Store friendly&lt;/li&gt; &#xA; &lt;li&gt;Works on OS X 10.10 and up&lt;/li&gt; &#xA; &lt;li&gt;Hacking-friendly codebase covered with tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Partially done:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accessibility support. There’s some basic accessibility code, testers and feedback welcome.&lt;/li&gt; &#xA; &lt;li&gt;Localisation. The English and Czech localization should be complete, there’s basic support for German, French, Spanish, Italian, and Japanese. If you’re a native speaker in one of the mentioned languages, please test the localization and report issues or add missing strings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pull requests welcome :)&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; is the simplest way to install for Xcode projects. Simply add the following Package Dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/shpakovski/MASShortcut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;http://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;, by adding the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;MASShortcut&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to stick to the 1.x branch, you can use the version smart match operator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;MASShortcut&#39;, &#39;~&amp;gt; 1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;You can also install via &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, or you can use Git submodules and link against the MASShortcut framework manually.&lt;/p&gt; &#xA;&lt;p&gt;To build from the command line, type &#39;make release&#39;. The framework will be created in a temporary directory and revealed in Finder when the build is complete.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;I hope, it is really easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;Shortcut.h&amp;gt;&#xA;&#xA;// Drop a custom view into XIB, set its class to MASShortcutView&#xA;// and its height to 19. If you select another appearance style,&#xA;// look up the correct height values in MASShortcutView.h.&#xA;@property (nonatomic, weak) IBOutlet MASShortcutView *shortcutView;&#xA;&#xA;// Pick a preference key to store the shortcut between launches&#xA;static NSString *const kPreferenceGlobalShortcut = @&#34;GlobalShortcut&#34;;&#xA;&#xA;// Associate the shortcut view with user defaults&#xA;self.shortcutView.associatedUserDefaultsKey = kPreferenceGlobalShortcut;&#xA;&#xA;// Associate the preference key with an action&#xA;[[MASShortcutBinder sharedBinder]&#xA;    bindShortcutWithDefaultsKey:kPreferenceGlobalShortcut&#xA;    toAction:^{&#xA;    // Let me know if you find a better or a more convenient API.&#xA;}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you have installed via a method other than Swift Package Manager, then the import is slightly different:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;MASShortcut/Shortcut.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see a real usage example in the Demo target. Enjoy!&lt;/p&gt; &#xA;&lt;h1&gt;Shortcut Recorder Compatibility&lt;/h1&gt; &#xA;&lt;p&gt;By default, MASShortcut uses a different User Defaults storage format incompatible with Shortcut Recorder. But it’s easily possible to change that, so that you can replace Shortcut Recorder with MASShortcut without having to migrate the shortcuts previously stored by your apps. There are two parts of the story:&lt;/p&gt; &#xA;&lt;p&gt;If you bind the recorder control (&lt;code&gt;MASShortcutView&lt;/code&gt;) to User defaults, set the Value Transformer field in the Interface Builder to &lt;code&gt;MASDictionaryTransformer&lt;/code&gt;. This makes sure the shortcuts are written in the Shortcut Recorder format.&lt;/p&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;MASShortcutBinder&lt;/code&gt; to automatically load shortcuts from User Defaults, set the &lt;code&gt;bindingOptions&lt;/code&gt; accordingly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[MASShortcutBinder sharedBinder] setBindingOptions:@{NSValueTransformerNameBindingOption:MASDictionaryTransformerName}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This makes sure that the shortcuts in the Shortcut Recorder format are loaded correctly.&lt;/p&gt; &#xA;&lt;h1&gt;Notifications&lt;/h1&gt; &#xA;&lt;p&gt;By registering for KVO notifications from &lt;code&gt;NSUserDefaultsController&lt;/code&gt;, you can get a callback whenever a user changes the shortcut, allowing you to perform any UI updates, or other code handling tasks.&lt;/p&gt; &#xA;&lt;p&gt;This is just as easy to implement:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// Declare an ivar for key path in the user defaults controller&#xA;NSString *_observableKeyPath;&#xA;    &#xA;// Make a global context reference&#xA;void *kGlobalShortcutContext = &amp;amp;kGlobalShortcutContext;&#xA;    &#xA;// Implement when loading view&#xA;_observableKeyPath = [@&#34;values.&#34; stringByAppendingString:kPreferenceGlobalShortcut];&#xA;[[NSUserDefaultsController sharedUserDefaultsController] addObserver:self forKeyPath:_observableKeyPath&#xA;                                                             options:NSKeyValueObservingOptionInitial&#xA;                                                             context:kGlobalShortcutContext];&#xA;&#xA;// Capture the KVO change and do something&#xA;- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)obj&#xA;                        change:(NSDictionary *)change context:(void *)ctx&#xA;{&#xA;    if (ctx == kGlobalShortcutContext) {&#xA;        NSLog(@&#34;Shortcut has changed&#34;);&#xA;    }&#xA;    else {&#xA;        [super observeValueForKeyPath:keyPath ofObject:obj change:change context:ctx];&#xA;    }&#xA;}&#xA;&#xA;// Do not forget to remove the observer&#xA;[[NSUserDefaultsController sharedUserDefaultsController] removeObserver:self&#xA;                                                             forKeyPath:_observableKeyPath&#xA;                                                                context:kGlobalShortcutContext];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Using in Swift projects&lt;/h1&gt; &#xA;&lt;p&gt;Swift Package Manager is the simplest way to import MASShortcut, just import the Module like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import MASShortcut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can also:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install as a Pod using the latest CocoaPods with Swift support.&lt;/li&gt; &#xA; &lt;li&gt;Create a bridging header file &lt;a href=&#34;http://swiftalicio.us/2014/11/using-cocoapods-from-swift/&#34;&gt;using the instructions here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Your bridging header file should contain the following &lt;a href=&#34;https://github.com/shpakovski/MASShortcut/issues/36&#34;&gt;two&lt;/a&gt; imports:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;Cocoa/Cocoa.h&amp;gt;&#xA;#import &amp;lt;MASShortcut/Shortcut.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Copyright&lt;/h1&gt; &#xA;&lt;p&gt;MASShortcut is licensed under the 2-clause BSD license.&lt;/p&gt;</summary>
  </entry>
</feed>