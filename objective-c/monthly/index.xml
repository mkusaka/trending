<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-01T02:14:27Z</updated>
  <subtitle>Monthly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AFNetworking/AFNetworking</title>
    <updated>2024-01-01T02:14:27Z</updated>
    <id>tag:github.com,2024-01-01:/AFNetworking/AFNetworking</id>
    <link href="https://github.com/AFNetworking/AFNetworking" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A delightful networking framework for iOS, macOS, watchOS, and tvOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AFNetworking is Deprecated&lt;/h1&gt; &#xA;&lt;p&gt;As of Jan. 17, 2023, AFNetworking is deprecated and there will be no further releases. This repo will remain online in perpetuity as an archive. There are a couple options for continued AFNetworking use:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy AFNetworking into your project and compile it directly. This gives you full control over the code.&lt;/li&gt; &#xA; &lt;li&gt;Fork AFNetworking and use the fork in your dependency manager. There will be no official forks but anyone can fork at any time and can even publish those forks under a different name, in accordance with AFNetworking&#39;s license.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Moving forward, Alamofire is the suggested migration path for networking in modern Swift. Anyone who needs help making that migration is welcome to ask on &lt;a href=&#34;https://stackoverflow.com&#34;&gt;StackOverflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt; and &lt;code&gt;afnetworking&lt;/code&gt;, or open a discussion on Alamofire&#39;s &lt;a href=&#34;https://github.com/Alamofire/Alamofire/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; regarding any migration issues or missing features.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.github.com/AFNetworking/AFNetworking/assets/afnetworking-logo.png&#34; alt=&#34;AFNetworking&#34; title=&#34;AFNetworking&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/actions&#34;&gt;&lt;img src=&#34;https://github.com/AFNetworking/AFNetworking/workflows/AFNetworking%20CI/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/cocoapods/v/AFNetworking.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AFNetworking.svg?sanitize=true&#34; alt=&#34;CocoaPods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/AFNetworking&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/AFNetworking.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://twitter.com/AFNetworking&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@AFNetworking-blue.svg?style=flat&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AFNetworking is a delightful networking library for iOS, macOS, watchOS, and tvOS. It&#39;s built on top of the &lt;a href=&#34;https://developer.apple.com/documentation/foundation/url_loading_system&#34;&gt;Foundation URL Loading System&lt;/a&gt;, extending the powerful high-level networking abstractions built into Cocoa. It has a modular architecture with well-designed, feature-rich APIs that are a joy to use.&lt;/p&gt; &#xA;&lt;p&gt;Perhaps the most important feature of all, however, is the amazing community of developers who use and contribute to AFNetworking every day. AFNetworking powers some of the most popular and critically-acclaimed apps on the iPhone, iPad, and Mac.&lt;/p&gt; &#xA;&lt;h2&gt;How To Get Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/archive/master.zip&#34;&gt;Download AFNetworking&lt;/a&gt; and try out the included Mac and iPhone example apps&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/wiki/Getting-Started-with-AFNetworking&#34;&gt;&#34;Getting Started&#34; guide&lt;/a&gt;, &lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/wiki/AFNetworking-FAQ&#34;&gt;FAQ&lt;/a&gt;, or &lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/wiki&#34;&gt;other articles on the Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need help&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/afnetworking&#34;&gt;Stack Overflow&lt;/a&gt;. (Tag &#39;afnetworking&#39;)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;ask a general question&lt;/strong&gt;, use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/afnetworking&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, &lt;em&gt;and can provide steps to reliably reproduce it&lt;/em&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;AFNetworking supports multiple methods for installing the library in a project.&lt;/p&gt; &#xA;&lt;h2&gt;Installation with CocoaPods&lt;/h2&gt; &#xA;&lt;p&gt;To integrate AFNetworking into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;AFNetworking&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installation with Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Once you have your Swift package set up, adding AFNetworking as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/AFNetworking/AFNetworking.git&#34;, .upToNextMajor(from: &#34;4.0.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: AFNetworking&#39;s Swift package does not include it&#39;s UIKit extensions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation with Carthage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate AFNetworking, add the following to your &lt;code&gt;Cartfile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;AFNetworking/AFNetworking&#34; ~&amp;gt; 4.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AFNetworking Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimum iOS Target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimum macOS Target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimum watchOS Target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimum tvOS Target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;macOS 10.10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;watchOS 2.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;tvOS 9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 11+ is required.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OS X 10.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;watchOS 2.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;tvOS 9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 7+ is required. &lt;code&gt;NSURLConnectionOperation&lt;/code&gt; support has been removed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.6 -&amp;gt; 2.6.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OS X 10.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;watchOS 2.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 7+ is required.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.0 -&amp;gt; 2.5.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OS X 10.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 5+ is required. &lt;code&gt;NSURLSession&lt;/code&gt; subspec requires iOS 7 or OS X 10.9.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mac OS X 10.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.10.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mac OS X 10.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;(macOS projects must support &lt;a href=&#34;https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtVersionsPlatforms.html&#34;&gt;64-bit with modern Cocoa runtime&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Programming in Swift? Try &lt;a href=&#34;https://github.com/Alamofire/Alamofire&#34;&gt;Alamofire&lt;/a&gt; for a more conventional set of APIs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;NSURLSession&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AFURLSessionManager&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AFHTTPSessionManager&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Serialization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;AFURLRequestSerialization&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFHTTPRequestSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFJSONRequestSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFPropertyListRequestSerializer&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;AFURLResponseSerialization&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFHTTPResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFJSONResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFXMLParserResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFXMLDocumentResponseSerializer&lt;/code&gt; &lt;em&gt;(macOS)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFPropertyListResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFImageResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AFCompoundResponseSerializer&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Functionality&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AFSecurityPolicy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AFNetworkReachabilityManager&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;AFURLSessionManager&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AFURLSessionManager&lt;/code&gt; creates and manages an &lt;code&gt;NSURLSession&lt;/code&gt; object based on a specified &lt;code&gt;NSURLSessionConfiguration&lt;/code&gt; object, which conforms to &lt;code&gt;&amp;lt;NSURLSessionTaskDelegate&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;NSURLSessionDataDelegate&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;NSURLSessionDownloadDelegate&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;NSURLSessionDelegate&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Creating a Download Task&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];&#xA;AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];&#xA;&#xA;NSURL *URL = [NSURL URLWithString:@&#34;http://example.com/download.zip&#34;];&#xA;NSURLRequest *request = [NSURLRequest requestWithURL:URL];&#xA;&#xA;NSURLSessionDownloadTask *downloadTask = [manager downloadTaskWithRequest:request progress:nil destination:^NSURL *(NSURL *targetPath, NSURLResponse *response) {&#xA;    NSURL *documentsDirectoryURL = [[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:NO error:nil];&#xA;    return [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];&#xA;} completionHandler:^(NSURLResponse *response, NSURL *filePath, NSError *error) {&#xA;    NSLog(@&#34;File downloaded to: %@&#34;, filePath);&#xA;}];&#xA;[downloadTask resume];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating an Upload Task&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];&#xA;AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];&#xA;&#xA;NSURL *URL = [NSURL URLWithString:@&#34;http://example.com/upload&#34;];&#xA;NSURLRequest *request = [NSURLRequest requestWithURL:URL];&#xA;&#xA;NSURL *filePath = [NSURL fileURLWithPath:@&#34;file://path/to/image.png&#34;];&#xA;NSURLSessionUploadTask *uploadTask = [manager uploadTaskWithRequest:request fromFile:filePath progress:nil completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {&#xA;    if (error) {&#xA;        NSLog(@&#34;Error: %@&#34;, error);&#xA;    } else {&#xA;        NSLog(@&#34;Success: %@ %@&#34;, response, responseObject);&#xA;    }&#xA;}];&#xA;[uploadTask resume];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating an Upload Task for a Multi-Part Request, with Progress&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSMutableURLRequest *request = [[AFHTTPRequestSerializer serializer] multipartFormRequestWithMethod:@&#34;POST&#34; URLString:@&#34;http://example.com/upload&#34; parameters:nil constructingBodyWithBlock:^(id&amp;lt;AFMultipartFormData&amp;gt; formData) {&#xA;        [formData appendPartWithFileURL:[NSURL fileURLWithPath:@&#34;file://path/to/image.jpg&#34;] name:@&#34;file&#34; fileName:@&#34;filename.jpg&#34; mimeType:@&#34;image/jpeg&#34; error:nil];&#xA;    } error:nil];&#xA;&#xA;AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];&#xA;&#xA;NSURLSessionUploadTask *uploadTask;&#xA;uploadTask = [manager&#xA;              uploadTaskWithStreamedRequest:request&#xA;              progress:^(NSProgress * _Nonnull uploadProgress) {&#xA;                  // This is not called back on the main queue.&#xA;                  // You are responsible for dispatching to the main queue for UI updates&#xA;                  dispatch_async(dispatch_get_main_queue(), ^{&#xA;                      //Update the progress view&#xA;                      [progressView setProgress:uploadProgress.fractionCompleted];&#xA;                  });&#xA;              }&#xA;              completionHandler:^(NSURLResponse * _Nonnull response, id  _Nullable responseObject, NSError * _Nullable error) {&#xA;                  if (error) {&#xA;                      NSLog(@&#34;Error: %@&#34;, error);&#xA;                  } else {&#xA;                      NSLog(@&#34;%@ %@&#34;, response, responseObject);&#xA;                  }&#xA;              }];&#xA;&#xA;[uploadTask resume];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating a Data Task&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];&#xA;AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];&#xA;&#xA;NSURL *URL = [NSURL URLWithString:@&#34;http://httpbin.org/get&#34;];&#xA;NSURLRequest *request = [NSURLRequest requestWithURL:URL];&#xA;&#xA;NSURLSessionDataTask *dataTask = [manager dataTaskWithRequest:request completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {&#xA;    if (error) {&#xA;        NSLog(@&#34;Error: %@&#34;, error);&#xA;    } else {&#xA;        NSLog(@&#34;%@ %@&#34;, response, responseObject);&#xA;    }&#xA;}];&#xA;[dataTask resume];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Request Serialization&lt;/h3&gt; &#xA;&lt;p&gt;Request serializers create requests from URL strings, encoding parameters as either a query string or HTTP body.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;NSString *URLString = @&#34;http://example.com&#34;;&#xA;NSDictionary *parameters = @{@&#34;foo&#34;: @&#34;bar&#34;, @&#34;baz&#34;: @[@1, @2, @3]};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Query String Parameter Encoding&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[AFHTTPRequestSerializer serializer] requestWithMethod:@&#34;GET&#34; URLString:URLString parameters:parameters error:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET http://example.com?foo=bar&amp;amp;baz[]=1&amp;amp;baz[]=2&amp;amp;baz[]=3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;URL Form Parameter Encoding&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[AFHTTPRequestSerializer serializer] requestWithMethod:@&#34;POST&#34; URLString:URLString parameters:parameters error:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;POST http://example.com/&#xA;Content-Type: application/x-www-form-urlencoded&#xA;&#xA;foo=bar&amp;amp;baz[]=1&amp;amp;baz[]=2&amp;amp;baz[]=3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;JSON Parameter Encoding&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[AFJSONRequestSerializer serializer] requestWithMethod:@&#34;POST&#34; URLString:URLString parameters:parameters error:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;POST http://example.com/&#xA;Content-Type: application/json&#xA;&#xA;{&#34;foo&#34;: &#34;bar&#34;, &#34;baz&#34;: [1,2,3]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Network Reachability Manager&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AFNetworkReachabilityManager&lt;/code&gt; monitors the reachability of domains, and addresses for both WWAN and WiFi network interfaces.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not use Reachability to determine if the original request should be sent. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You should try to send it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can use Reachability to determine when a request should be automatically retried. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Although it may still fail, a Reachability notification that the connectivity is available is a good time to retry something.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Network reachability is a useful tool for determining why a request might have failed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After a network request has failed, telling the user they&#39;re offline is better than giving them a more technical but accurate error, such as &#34;request timed out.&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://developer.apple.com/videos/play/wwdc2012-706/&#34;&gt;WWDC 2012 session 706, &#34;Networking Best Practices.&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Shared Network Reachability&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[AFNetworkReachabilityManager sharedManager] setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {&#xA;    NSLog(@&#34;Reachability: %@&#34;, AFStringFromNetworkReachabilityStatus(status));&#xA;}];&#xA;&#xA;[[AFNetworkReachabilityManager sharedManager] startMonitoring];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Security Policy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AFSecurityPolicy&lt;/code&gt; evaluates server trust against pinned X.509 certificates and public keys over secure connections.&lt;/p&gt; &#xA;&lt;p&gt;Adding pinned SSL certificates to your app helps prevent man-in-the-middle attacks and other vulnerabilities. Applications dealing with sensitive customer data or financial information are strongly encouraged to route all communication over an HTTPS connection with SSL pinning configured and enabled.&lt;/p&gt; &#xA;&lt;h4&gt;Allowing Invalid SSL Certificates&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];&#xA;manager.securityPolicy.allowInvalidCertificates = YES; // not recommended for production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Unit Tests&lt;/h2&gt; &#xA;&lt;p&gt;AFNetworking includes a suite of unit tests within the Tests subdirectory. These tests can be run simply be executed the test action on the platform framework you would like to test.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;AFNetworking is owned and maintained by the &lt;a href=&#34;http://alamofire.org&#34;&gt;Alamofire Software Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;AFNetworking was originally created by &lt;a href=&#34;https://github.com/sco/&#34;&gt;Scott Raymond&lt;/a&gt; and &lt;a href=&#34;https://github.com/mattt/&#34;&gt;Mattt Thompson&lt;/a&gt; in the development of &lt;a href=&#34;http://en.wikipedia.org/wiki/Gowalla&#34;&gt;Gowalla for iPhone&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;AFNetworking&#39;s logo was designed by &lt;a href=&#34;http://www.alandefibaugh.com/&#34;&gt;Alan Defibaugh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And most of all, thanks to AFNetworking&#39;s &lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/contributors&#34;&gt;growing list of contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Security Disclosure&lt;/h3&gt; &#xA;&lt;p&gt;If you believe you have identified a security vulnerability with AFNetworking, you should report it as soon as possible via email to &lt;a href=&#34;mailto:security@alamofire.org&#34;&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;AFNetworking is released under the MIT license. See &lt;a href=&#34;https://github.com/AFNetworking/AFNetworking/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jfreyre/iOS-Starter-Kit</title>
    <updated>2024-01-01T02:14:27Z</updated>
    <id>tag:github.com,2024-01-01:/jfreyre/iOS-Starter-Kit</id>
    <link href="https://github.com/jfreyre/iOS-Starter-Kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is iOS Starter Kit&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s a boilerplate that spare you time when you start a new iOS project. ;)&lt;/p&gt; &#xA;&lt;p&gt;iOS Starter Kit already include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://github.com/RestKit/RestKit&#34;&gt;RestKit&lt;/a&gt; library&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://github.com/samvermette/SVProgressHUD&#34;&gt;SVProgressHUD&lt;/a&gt; library&lt;/li&gt; &#xA; &lt;li&gt;Categories for NSString&lt;/li&gt; &#xA; &lt;li&gt;Categories for UIColor&lt;/li&gt; &#xA; &lt;li&gt;Built-in webcontroller&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to use iosStarterKit ?&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the project&lt;/li&gt; &#xA; &lt;li&gt;Open the project with Xcode&lt;/li&gt; &#xA; &lt;li&gt;Click on the project then in the right sidebar: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Update the project name and accept corrections&lt;/li&gt; &#xA;   &lt;li&gt;Update the &lt;code&gt;Organization Name&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Update the &lt;code&gt;Class Prefix Name&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click on the target and update the &lt;code&gt;Bundle Identifier&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add new modules in the Podfile&lt;/li&gt; &#xA; &lt;li&gt;Start your project ;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>noah-nuebling/mac-mouse-fix</title>
    <updated>2024-01-01T02:14:27Z</updated>
    <id>tag:github.com,2024-01-01:/noah-nuebling/mac-mouse-fix</id>
    <link href="https://github.com/noah-nuebling/mac-mouse-fix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mac Mouse Fix - Make Your $10 Mouse Better Than an Apple Trackpad!&lt;/p&gt;&lt;hr&gt;&lt;details&gt; &#xA; &lt;summary&gt;󠁧󠁿🇬🇧 English&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;🇬🇧 English&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Markdown/LocalizedDocuments/de-DE/Readme.md&#34;&gt;🇩🇪 Deutsch&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/discussions/731&#34;&gt;Help translate Mac Mouse Fix to different languages!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- ||| Head Section ||| --&gt; &#xA;&lt;!--&#xA;&lt;table align=&#34;center&#34;&gt;&lt;td&gt;&#xA;You can now test the &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases/&#34;&gt;Mac Mouse Fix 3 Beta!&lt;/a&gt;&#xA;&lt;/td&gt;&lt;/table&gt;&#xA;--&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Markdown/Media/AppIconRound3.png&#34; width=&#34;200&#34; height=&#34;auto&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;Mac Mouse Fix&lt;/h1&gt; &#xA; &lt;p&gt;Make Your $10 Mouse Better Than an Apple Trackpad!&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt;&#xA;    &lt;th&gt;&lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website&#34;&gt;Website&amp;nbsp;↗&lt;/a&gt;&lt;/th&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/issues/new/choose&#34;&gt;Help&amp;nbsp;&amp;amp;&amp;nbsp;Feedback&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases&#34;&gt;Version&amp;nbsp;History&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Acknowledgements.md&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;!-- If you translate this, remember to link to the right language version --&gt; &#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA; &lt;!-- vvv Hint for translators: You can change the label by editing the text inside the URL after `label=`. Use url encoding for special chars. E.g. `%20` to insert spaces. --&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/downloads/noah-nuebling/mac-mouse-fix/total?label=Downloads&amp;amp;color=25c65f&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;!--Use this extra br when theres text above the first header (Edit: I think by &#34;first header&#34; I meant the h1 saying &#34;Mac Mouse Fix&#34;, but not sure) --&gt; &#xA;&lt;!-- &lt;br&gt; --&gt; &#xA;&lt;!-- ||| Intro Text ||| --&gt; &#xA;&lt;p&gt;Mac Mouse Fix is an app that makes your mouse better.&lt;/p&gt; &#xA;&lt;p&gt;I want to turn Mac Mouse Fix into the best mouse driver &lt;em&gt;of all time&lt;/em&gt;! Some features are still missing at the moment, but I think in some ways it already turns regular mice into the best input devices for Macs! At the same level or even better than an Apple Trackpad or a Logitech MX Master mouse.&lt;/p&gt; &#xA;&lt;p&gt;For more information on how exactly Mac Mouse Fix enhances your mouse, visit the &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;easy, efficient, natural and pleasant&#xA;Better than an Apple Trackpad or a Logitech MX Master. (These are often considered some of the best input devices for Macs)&#xA;&#xA;It offers amazingly natural and polished gestures and smooth scrolling that let you breeze through macOS just like an Apple Trackpad.&#xA;&#xA;It lets you do almost anything right from your mouse with its powerful customization options that are so simple and intuitive that anyone can use them.&#xA;--&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;This is what I wrote on the Mac Mouse Fix website when I released the very first version during the semester break in 2019:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;My name is Noah and I made Mac Mouse Fix. When I started this project I was completely new to software development, but with the power of Google, Stack Overflow, and Apple&#39;s Developer Documentation at my fingertips I managed to learn what is necessary to deliver a solid little app that I hope will be useful for you guys. Working on Mac Mouse Fix made me discover a passion for programming, and led me to enroll in a Computer Science Degree at college, which has been awesome so far. I probably won&#39;t have a lot of time to work on Mac Mouse Fix during the semester, but please feel free to make your own contributions to Mac Mouse Fix on GitHub!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Since then, I have unfortunately struggled a lot with my mental health. And after starting out with really good grades and a nice social life, I unfortunately became too depressed and anxious to finish my degree. However, I still have a lot of passion and fun working on Mac Mouse Fix, and I hope to be able to sustain myself financially through the project and to slowly but deliberately turn it into the best mouse driver ever and an app that any Mac user with a mouse can appreciate and benefit from. Thanks so much to everyone for their support, be it through financial support, by requesting and discussing features and bugs, or by simply sharing their excitement about the app! &amp;lt;3 :) Thank you.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website#trackpad&#34;&gt;website&lt;/a&gt; for an overview of the features of Mac Mouse Fix, including video demos!&lt;/p&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases&#34;&gt;version history&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;Major features were introduced in these versions:&#xA;&#xA;[0.9](https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/0.9.0)&#xA;| [1.0.0](https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/1.0.0)&#xA;| [2.0.0](https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.0.0)&#xA;| [2.1.0](https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.1.0)&#xA;| 3.0.0&#xA;--&gt; &#xA;&lt;h2&gt;What people say&lt;/h2&gt; &#xA;&lt;p&gt;Thanks so much to everyone sharing their excitement about Mac Mouse Fix!&lt;br&gt; On the &lt;a href=&#34;http://noah-nuebling.github.io/mac-mouse-fix-website/&#34;&gt;website&lt;/a&gt; you can find a collection of nice things people have said about the app.&lt;/p&gt; &#xA;&lt;!-- &#xA;These cool articles were written about MMF&#xA;&#xA;- That YouTube video (so sick)&#xA;- Lifehacker&#xA;- Blib blob (Japanese)&#xA;- Not CNET review&#xA;- (?If you know about other coverage of MMF let me know?) &#xA;--&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest version of Mac Mouse Fix on the &lt;a href=&#34;http://noah-nuebling.github.io/mac-mouse-fix-website/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also install Mac Mouse Fix through &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;! Just type the following command into the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install mac-mouse-fix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can download older versions of Mac Mouse Fix from the &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases&#34;&gt;version history&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;macOS compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The latest version of Mac Mouse Fix is made for &lt;strong&gt;macOS 11 Big Sur&lt;/strong&gt; or later.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on macOS &lt;strong&gt;10.15 Catalina&lt;/strong&gt;, macOS &lt;strong&gt;10.14 Mojave&lt;/strong&gt;, or macOS &lt;strong&gt;10.13 High Sierra&lt;/strong&gt;, you can use Mac Mouse Fix &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.2.3&#34;&gt;2.2.3&lt;/a&gt; or below. Later versions of Mac Mouse Fix might still work on your machine, but they will have visual issues and some features might not work properly.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on macOS &lt;strong&gt;10.12 Sierra&lt;/strong&gt;, or &lt;strong&gt;10.11 El Capitan&lt;/strong&gt;, you can use Mac Mouse Fix &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.2.0&#34;&gt;2.2.0&lt;/a&gt; or below.&lt;/p&gt; &#xA;&lt;h2&gt;Pricing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website#price&#34;&gt;website&lt;/a&gt; for an overview of the pricing for Mac Mouse Fix 3.&lt;br&gt; Mac Mouse Fix 2 and below will remain free forever.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;Uninstall Mac Mouse Fix by simply moving it to the bin.&lt;/p&gt; &#xA;&lt;p&gt;However, there will be files left on your system. To get rid of these files I recommend the awesome &lt;a href=&#34;https://freemacsoft.net/appcleaner/&#34;&gt;AppCleaner by FreeMacSoft&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Under macOS, it is not feasible for apps to delete these leftover files by themselves when you delete the app. That&#39;s why I highly recommend using an app like AppCleaner.&lt;/p&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manage windows with a simple Click and Drag&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://highlyopinionated.co/swish/&#34;&gt;Swish&lt;/a&gt; is my favorite way to manage windows on macOS. With a simple swipe on your trackpad, it lets you position any window so it takes up half, a quarter, or the whole screen.&lt;/p&gt; &lt;p&gt;Swish is designed for trackpad gestures, but with Mac Mouse Fix you can use it from any third-party mouse! Just go to Mac Mouse Fix and set any buttons &#34;Click and Drag&#34; action to &#34;Scroll &amp;amp; Navigate&#34; and then you can snap windows with a simple Click and Drag.&lt;/p&gt; &lt;p&gt;Anything you can do with a two-finger swipe on an Apple trackpad works just as well with the &#34;Scroll &amp;amp; Navigate&#34; feature in Mac Mouse Fix.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Control Screen Brightness, Audio Volume, or Media Playback right from your mouse&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Mac Mouse Fix lets you use &lt;strong&gt;any key on your keyboard&lt;/strong&gt; directly from your mouse - even special keys only found on Apple keyboards that let you control Screen Brightness, Audio Volume, Media Playback, and more.&lt;/p&gt; &lt;p&gt;If you don&#39;t have an Apple keyboard at hand, &lt;strong&gt;hold Option (⌥)&lt;/strong&gt; to choose the special Apple keys.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Markdown/Media/Apple-Keys-Demo.gif&#34; width=&#34;700&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is Mac Mouse Fix native on Apple Silicon?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yes, Mac Mouse Fix runs 100% native on Apple Silicon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Does Mac Mouse Fix collect my data?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No. Mac Mouse Fix does not have ads and it doesn&#39;t collect any personal information about you.&lt;/p&gt; &lt;p&gt;The only data I collect is the number of downloads and sales of the app.&lt;br&gt; If you have updates turned on, Mac Mouse Fix will ping GitHub&#39;s servers every time you launch the app to ask for an update. But I don&#39;t collect any information about this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why is there a delay when I click?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;When you click, Mac Mouse Fix might wait to see if you&#39;re going to double click.&lt;br&gt; To remove the delay for a button, delete any &#34;Double Click&#34; actions for that button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can I orbit around objects in 3D apps like Blender?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In 3D apps like Blender, you normally Click and Drag the Middle Mouse Button to orbit around objects.&lt;br&gt; But if you assign actions to the Middle Mouse Button in Mac Mouse Fix, then this won&#39;t work anymore.&lt;/p&gt; &lt;p&gt;To solve this, I know of 2 options:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Assign clicking and dragging one of the buttons of your mouse to the &#34;Scroll &amp;amp; Navigate&#34; feature. This feature simulates swiping with 2 fingers on an Apple Trackpad. This will, among other things, let you orbit in 3D apps!&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Uncapture&lt;/em&gt; the Middle Mouse Button by deleting all actions assigned to it in Mac Mouse Fix. See &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/discussions/112&#34;&gt;this guide&lt;/a&gt; for more info.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is my mouse supported?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Short answer: Probably. If you want to know for sure, it&#39;s best to download Mac Mouse Fix and try it out.&lt;/p&gt; &lt;p&gt;Mac Mouse Fix works very well with most mice. However, on certain mice designed to be used with proprietary driver software like Logitech Options, Mac Mouse Fix can&#39;t recognize all the buttons at the moment.&lt;/p&gt; &lt;p&gt;That&#39;s because these mice communicate with your computer using a special, proprietary protocol, instead of the standard USB protocol. I would love to add full compatibility for these mice at some point, but it&#39;s a ton of work and it won&#39;t be coming soon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is the Magic Mouse supported?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;I might add features in the future which enhance the Apple Magic Mouse, but currently, Mac Mouse Fix has no effect on it.&lt;/p&gt; &#xA;  &lt;!-- You can use SteerMouse or proprietary driver like Logitech Options instead. --&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--&#xA;- **How many buttons should my mouse have?**&#xA;&#xA;  To get the best experience I recommend using Mac Mouse Fix with a mouse that has at least 5 buttons. If your mouse has fewer than 5 buttons, Mac Mouse Fix still provides rich functionality and a great experience, but some features will be less easy to access compared to a 5-button mouse. With a 5-button mouse, you can really breeze through macOS in a way that&#39;s just as nice as an Apple Trackpad!&#xA;  &#xA;  To learn more, see the [trackpad section](https://noah-nuebling.github.io/mac-mouse-fix-website#trackpad) on the website.&#xA;&#xA;&#xA;- **Mouse brands**&#xA;&#xA;  I&#39;m not the biggest expert on mouse hardware, but I do have quite a collection now, thanks to my work on Mac Mouse Fix! If I had to make a recommendation for what mouse to buy for the best experience with Mac Mouse fix, I&#39;d say get a smaller, chinese brand on Amazon. In my experience, these mice often have better build quality at a fraction of the price of a big brand mouse like Logitech or Roccat. Also, some models of bigger manufacturers like Logitech are made to be used with their proprietary driver software, and they won&#39;t be fully compatible with Mac Mouse Fix. If you buy a smaller brand, you can usually be sure, that they will work flawlessly with non-proprietary drivers like Mac Mouse Fix.&#xA;--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Are tiltable scroll wheels supported?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Some mice let you tilt the scroll wheel left or right to scroll horizontally. Mac Mouse Fix will make this feel more natural and easy to control. However, it&#39;s not currently possible to trigger other actions, such as switching between desktops, by tilting the scroll wheel. I&#39;d love to implement this feature at some point, but it&#39;s a ton of work and it won&#39;t be coming soon.&lt;/p&gt; &#xA;  &lt;!-- This is so hard, because it would require reprogramming the mouse so that it sends button-signals instead of sending scroll-signals, when you tilt the scroll wheel. And to reprogram the mouse, would require communicating with the it through the custom vendor-specific protocol. And that&#39;s not easy. For many mice it&#39;s not even possible. --&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Turning off pointer acceleration&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Mac Mouse Fix doesn&#39;t let you turn off the pointer acceleration, but if you&#39;re on &lt;strong&gt;macOS 14 Sonoma&lt;/strong&gt; or later, you can turn off the pointer acceleration under &lt;code&gt;System Settings &amp;gt; Mouse &amp;gt; Advanced... &amp;gt; Pointer acceleration&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I plan to add really nice ways to improve pointer acceleration in the future, but I&#39;m not sure when that&#39;s coming.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Will Mac Mouse Fix still be Open Source now that it&#39;s monetized?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yes, Mac Mouse Fix will still be open source.&lt;/p&gt; &lt;p&gt;I encourage anyone to use the source code of Mac Mouse Fix in their own projects, as long as they don&#39;t release a simple copy of Mac Mouse Fix.&lt;/p&gt; &lt;p&gt;Learn about the details in the &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/raw/master/License&#34;&gt;MMF License&lt;/a&gt; which Mac Mouse Fix 3 and later are licensed under.&lt;/p&gt; &#xA;  &lt;!--&#xA;  , and I don&#39;t plan to change that at any point.&#xA;&#xA;  This also means you can use Mac Mouse Fix for free by building it from source and disabling the licensing checks. That&#39;s perfectly fine, I just discourage sharing these cracked versions online.\&#xA;  And of course, on the next update, you&#39;ll get a non-cracked version which means you&#39;ll have to do this again for every update. (Or just pay $1.99 for the greatest mouse driver ever! :)&#xA;--&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can I get Mac Mouse Fix for free if I already donated?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yes! See the &lt;a href=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Acknowledgements.md#-paypal-donations&#34;&gt;Acknowledgements&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How you can contribute&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to help the project.&lt;br&gt; Check out the &lt;a href=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Acknowledgements.md&#34;&gt;Acknowledgements&lt;/a&gt; for more info on who has already contributed!&lt;/p&gt; &#xA;&lt;!--&#xA;- **Spreading the word**&#xA;&#xA;  If you simply talk about Mac Mouse Fix on the internet or elsewhere, that is very helpful for the project.&#xA;&#xA;--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Giving feedback&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can help by sharing your &lt;strong&gt;ideas&lt;/strong&gt;, &lt;strong&gt;issues&lt;/strong&gt; and &lt;strong&gt;feedback&lt;/strong&gt; via the &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-feedback-assistant/?type=bug-report&#34;&gt;Feedback Assistant&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Contributing money&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;I hope to be able to sustain myself financially through Mac Mouse Fix. That way, I can keep improving and working on the app. If you would like to help, you can:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Buy Mac Mouse Fix by clicking the button in the app, or clicking &lt;a href=&#34;https://noahnuebling.gumroad.com/l/mmfinappusd&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ARSTVR6KFB524&amp;amp;source=url&amp;amp;lc=en_US&#34;&gt;Tip me&lt;/a&gt; on PayPal. I don&#39;t get a lot of money from this, but it&#39;s always cute and motivating to get a donation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/noah-nuebling&#34;&gt;Sponsor me&lt;/a&gt; on GitHub. A monthly sponsorship is a great way to support the project and help me have a more stable income.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adding translations&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Mac Mouse Fix is available in English, German as well as the languages listed in the &lt;a href=&#34;https://raw.githubusercontent.com/noah-nuebling/mac-mouse-fix/master/Acknowledgements.md&#34;&gt;Acknowledgements&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you would like to help translate the project, see &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/discussions/731&#34;&gt;this guide&lt;/a&gt;.&lt;br&gt; If you want to report missing or outdated translations through the &lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-feedback-assistant/?type=other&#34;&gt;Feedback Assistant&lt;/a&gt;, that&#39;s also very helpful!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Contributing code&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you would like to contribute code, that&#39;s awesome! I&#39;ll be happy about any &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/pulls&#34;&gt;pull requests&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;However, I might not accept all pull requests. If you want to make sure that your work is not wasted, you can submit an initial pull request that only &lt;em&gt;describes&lt;/em&gt; the changes you want to make, but contains little or no code. Then I can give you feedback and tell you if I would adopt the changes you want to make in that way.&lt;/p&gt; &#xA;  &lt;!-- NOTE: I should mention people who contributed code on the acknowledgements page. They are already in the update notes. --&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; to everyone who has already contributed and supported me in trying to make the best mouse driver &lt;em&gt;of all time&lt;/em&gt;! :)🚀&lt;/p&gt;</summary>
  </entry>
</feed>