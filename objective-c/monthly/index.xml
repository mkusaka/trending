<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T02:18:11Z</updated>
  <subtitle>Monthly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sunnyyoung/WeChatTweak-macOS</title>
    <updated>2023-07-01T02:18:11Z</updated>
    <id>tag:github.com,2023-07-01:/sunnyyoung/WeChatTweak-macOS</id>
    <link href="https://github.com/sunnyyoung/WeChatTweak-macOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A dynamic library tweak for WeChat macOS - 首款微信 macOS 客户端撤回拦截与多开 🔨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeChatTweak-macOS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/README-English.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README-English-blue.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/wechattweak&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-WeChatTweak-brightgreen.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;微信 macOS 客户端增强 Tweak 动态库。&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;阻止消息撤回 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;消息列表通知&lt;/li&gt; &#xA;   &lt;li&gt;系统通知&lt;/li&gt; &#xA;   &lt;li&gt;正常撤回自己发出的消息&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;客户端无限多开 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;右键 Dock icon 登录新的微信账号&lt;/li&gt; &#xA;   &lt;li&gt;命令行执行：&lt;code&gt;open -n /Applications/WeChat.app&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;消息处理增强 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持任意表情导出&lt;/li&gt; &#xA;   &lt;li&gt;支持二维码识别&lt;/li&gt; &#xA;   &lt;li&gt;支持右键直接复制链接&lt;/li&gt; &#xA;   &lt;li&gt;支持由系统默认浏览器直接打开&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;重新打开应用无需手机认证&lt;/del&gt;（官方已经支持）&lt;/li&gt; &#xA; &lt;li&gt;UI界面设置面板&lt;/li&gt; &#xA; &lt;li&gt;支持 Alfred workflow&lt;/li&gt; &#xA; &lt;li&gt;支持 Launchbar action&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;首次使用&lt;/strong&gt;安装 &lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-CLI&#34;&gt;WeChatTweak-CLI&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install sunnyyoung/repo/wechattweak-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装/更新/卸载 Tweak:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo wechattweak-cli install   # 安装/更新&#xA;$ sudo wechattweak-cli uninstall # 卸载&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;截图&lt;/h2&gt; &#xA;&lt;h3&gt;整体预览&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x01.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alfred workflow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x02.png&#34; alt=&#34;Alfred&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LaunchBar action&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/Screenshot/0x03.png&#34; alt=&#34;LaunchBar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;功能失效？&lt;br&gt; 请提交 &lt;strong&gt;issue&lt;/strong&gt; 然后等待，或提交 &lt;strong&gt;pull request&lt;/strong&gt; 一起发电。&lt;/li&gt; &#xA; &lt;li&gt;Issue 没有响应 or 回复？&lt;br&gt; 开源项目，用爱发电，耐心等。&lt;/li&gt; &#xA; &lt;li&gt;兼容旧版本客户端吗？&lt;br&gt; 不，为了降低维护成本和保证更新速度，默认只支持&lt;strong&gt;最新&lt;/strong&gt;版本客户端。&lt;/li&gt; &#xA; &lt;li&gt;会封号吗？&lt;br&gt; 在&lt;strong&gt;只使用该工具&lt;/strong&gt;的情况下&lt;strong&gt;没有&lt;/strong&gt;出现过封号/风险提示，若有&lt;strong&gt;使用过其他同类工具&lt;/strong&gt;则有可能会出现封号/风险提示，因此风险自负。&lt;/li&gt; &#xA; &lt;li&gt;安装出现 &lt;code&gt;codesign_allocate helper tool cannot be found or used&lt;/code&gt; 错误？&lt;br&gt; 该错误为系统问题，暂未清楚原因，一般情况下重新执行安装操作即可。&lt;/li&gt; &#xA; &lt;li&gt;安装完打开微信客户端提示 &lt;code&gt;没有权限打开应用程序&lt;/code&gt;？&lt;br&gt; 先卸载，再重新安装一次即可，如仍无法解决请重启电脑。实在搞不定的，到 &lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-macOS/issues?q=&#34;&gt;issues&lt;/a&gt; 里找找类似问题并尝试解决。&lt;/li&gt; &#xA; &lt;li&gt;截图失效？&lt;br&gt; 系统偏好设置 -&amp;gt; 隐私 -&amp;gt; 删除微信并重新添加 -&amp;gt; 重启微信客户端。&lt;/li&gt; &#xA; &lt;li&gt;理性讨论。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/wei-xin-macos-ke-hu-duan-wu-xian-duo-kai-gong-neng-shi-jian/&#34;&gt;微信 macOS 客户端无限多开功能实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/wei-xin-macos-ke-hu-duan-lan-jie-che-hui-gong-neng-shi-jian/&#34;&gt;微信 macOS 客户端拦截撤回功能实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sunnyyoung.net/rang-wei-xin-macos-ke-hu-duan-zhi-chi-alfred/&#34;&gt;让微信 macOS 客户端支持 Alfred&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;贡献者&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sunnyyoung/WeChatTweak-macOS/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/WeChatTweak-macOS/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/sunnyyoung/WeChatTweak-macOS/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>samuelclay/NewsBlur</title>
    <updated>2023-07-01T02:18:11Z</updated>
    <id>tag:github.com,2023-07-01:/samuelclay/NewsBlur</id>
    <link href="https://github.com/samuelclay/NewsBlur" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NewsBlur&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NewsBlur is a personal news reader bringing people together to talk about the world. A new sound of an old instrument.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.newsblur.com&#34;&gt;www.newsblur.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Created by &lt;a href=&#34;http://www.samuelclay.com&#34;&gt;Samuel Clay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;http://twitter.com/samuelclay&#34;&gt;@samuelclay&lt;/a&gt; and &lt;a href=&#34;http://twitter.com/newsblur&#34;&gt;@newsblur&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.newsblur&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://f-droid.org/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.newsblur&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://apps.apple.com/us/app/newsblur/id463981119&#34;&gt;&lt;img src=&#34;https://tools.applemediaservices.com/api/badges/download-on-the-app-store/black/en-us?size=250x83&#34; alt=&#34;Download on the Apple App Store&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Shows the original site (you have to see it to believe it).&lt;/li&gt; &#xA; &lt;li&gt;Hides stories you don&#39;t want to read based on tags, keywords, authors, etc.&lt;/li&gt; &#xA; &lt;li&gt;Highlights stories you want to read, based on the same criteria.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;h3&gt;Server-side&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.python.org&#34;&gt;Python 3.7+&lt;/a&gt;: The language of choice.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.djangoproject.com&#34;&gt;Django&lt;/a&gt;: Web framework written in Python, used to serve all pages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ask.github.com/celery&#34;&gt;Celery&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://www.rabbitmq.com&#34;&gt;RabbitMQ&lt;/a&gt;: Asynchronous queueing server, used to fetch and parse RSS feeds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mongodb.com&#34;&gt;MongoDB&lt;/a&gt;, &lt;a href=&#34;https://pypi.python.org/pypi/pymongo&#34;&gt;Pymongo&lt;/a&gt;, &amp;amp; &lt;a href=&#34;http://www.github.com/hmarr/mongoengine&#34;&gt;Mongoengine&lt;/a&gt;: Non-relational database, used to store stories, read stories, feed/page fetch histories, and proxied sites.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.postgresql.com&#34;&gt;PostgreSQL&lt;/a&gt;: Relational database, used to store feeds, subscriptions, and user accounts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://redis.io&#34;&gt;Redis&lt;/a&gt;: Programmer&#39;s database, used to assemble stories for the river, store story ids, manage feed fetching schedules, and the minuscule bit of caching that NewsBlur uses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://elasticsearch.org&#34;&gt;Elasticsearch&lt;/a&gt;: Search database, use for searching stories. Optional.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Client-side and design&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.jquery.com&#34;&gt;jQuery&lt;/a&gt;: Cross-browser compliant JavaScript code. IE works without effort.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://underscorejs.org/&#34;&gt;Underscore.js&lt;/a&gt;: Functional programming for JavaScript. Indispensable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://backbonejs.org/&#34;&gt;Backbone.js&lt;/a&gt;: Framework for the web app. Also indispensable.&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous jQuery Plugins: Everything from resizable layouts, to progress bars, sortables, date handling, colors, corners, JSON, animations. &lt;a href=&#34;https://github.com/samuelclay/NewsBlur/tree/master/media/js&#34;&gt;See the complete list&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;* Docker&#xA;* Docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make nb&lt;/code&gt; to build all of the NewsBlur containers. This will set up all necessary databases, front-end django apps, celery tasks, node apps, flask database monitor and metrics, nginx, and a haproxy load balancer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; https://localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You will be warned that you are using a self signed certificate. In order to get around this warning you must type &#34;thisisunsafe&#34; as per &lt;a href=&#34;https://dblazeski.medium.com/chrome-bypass-net-err-cert-invalid-for-development-daefae43eb12&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Using a custom domain&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the custom domain script&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash ./utils/custom_domain.sh &amp;lt;domain name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This script will do the following:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;NEWSBLUR_URL&lt;/code&gt; and &lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt; in &lt;code&gt;newsblur_web/docker_local_settings.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Change the domain in &lt;code&gt;config/fixtures/bootstrap.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also change domains: &lt;code&gt;bash ./utils/custom_domain.sh &amp;lt;old domain&amp;gt; &amp;lt;new domain&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;re using a custom subdomain, you&#39;ll also want to add it to &lt;code&gt;ALLOWED_SUBDOMAINS&lt;/code&gt; in &lt;code&gt;apps/reader/views.py&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A way to make sure you updated all the correct places:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to the website address in your browser&lt;/li&gt; &#xA;   &lt;li&gt;Open developer tools and look at the network tab&lt;/li&gt; &#xA;   &lt;li&gt;Try to login&lt;/li&gt; &#xA;   &lt;li&gt;Look again at the developer tools, there should be a POST call to /login&lt;/li&gt; &#xA;   &lt;li&gt;Observe the Response headers for that call&lt;/li&gt; &#xA;   &lt;li&gt;The value of the &#34;set-cookie&#34; header should contain a &#34;Domain=&#34; string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;If the string after &lt;code&gt;Domain=&lt;/code&gt; is not the domain you are using to access the website, then your configuration still needs your custom domain.&lt;/p&gt; &lt;p&gt;You can also confirm that there is a domain name mismatch in the database by running &lt;code&gt;make shell&lt;/code&gt; &amp;amp; typing &lt;code&gt;Site.objects.all()[0]&lt;/code&gt; to show the domain that NewsBlur is expecting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Making docker-compose work with your existing database&lt;/h2&gt; &#xA;&lt;p&gt;To make docker-compose work with your database, upgrade your local database to the docker-compose version and then volumize the database data path by changing the &lt;code&gt;./docker/volumes/&lt;/code&gt; part of the volume directive in the service to point to your local database&#39;s data directory.&lt;/p&gt; &#xA;&lt;p&gt;To make docker-compose work with an older database version, change the image version for the database service in the docker-compose file.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Making Changes:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To apply changes to the Python or JavaScript code, use the &lt;code&gt;make&lt;/code&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;To apply changes to the docker-compose.yml file, use the &lt;code&gt;make rebuild&lt;/code&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;To apply changes to the docker/haproxy/haproxy.conf file, node packages, or any new database migrations you will need to use the &lt;code&gt;make nb&lt;/code&gt; command.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adding Python packages: Currently, the docker-compose.yml file uses the newsblur/newsblur_python3 image. It is built using the Dockerfile found in &lt;code&gt;docker/newsblur_base_image.Dockerfile&lt;/code&gt;. Because of how the docker image is set up, you will need to create your own image and direct your docker-compose.yml file to use it. Please follow the following steps to do so.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Add your new site-packages to config/requirements.txt.&lt;/li&gt; &#xA;   &lt;li&gt;Add the following lines of code to your docker-compose.yml file to replace anywhere where it says &lt;code&gt;image: newsblur/newsblur_python3&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;code&gt; build: context: . dockerfile: docker/newsblur_base_image.Dockerfile &lt;/code&gt; &#xA;  &lt;ol start=&#34;3&#34;&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;make nb&lt;/code&gt; command to rebuild your docker-compose containers&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debugging Python&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To debug your code, drop &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt; into the Python code where you would like to start debugging and run &lt;code&gt;make&lt;/code&gt; and then &lt;code&gt;make debug&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using Django shell within Docker&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure your docker containers are up and run &lt;code&gt;make shell&lt;/code&gt; to open the Django shell within the newsblur_web container.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running unit and integration tests&lt;/h3&gt; &#xA;&lt;p&gt;NewsBlur comes complete with a test suite that tests the functionality of the rss_feeds, reader, and feed importer. To run the test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`make test`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running a performance test&lt;/h3&gt; &#xA;&lt;p&gt;Performance tests use the locust performance testing tool. To run performance tests via CLI, use &lt;code&gt;make perf-cli users=1 rate=1 host=https://localhost&lt;/code&gt;. Feel free to change the users, rate, and host variables in the command to meet you needs.&lt;/p&gt; &#xA;&lt;p&gt;You can also run locust performance tests using a UI by running &lt;code&gt;make perf-ui&lt;/code&gt; and then navigating to &lt;a href=&#34;http://127.0.0.1:8089&#34;&gt;http://127.0.0.1:8089&lt;/a&gt;. This allows you to chart and export your performance data.&lt;/p&gt; &#xA;&lt;p&gt;To run locust using docker, just run &lt;code&gt;make perf-docker&lt;/code&gt; and navigate to &lt;a href=&#34;http://127.0.0.1:8089&#34;&gt;http://127.0.0.1:8089&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Created by &lt;a href=&#34;http://www.samuelclay.com&#34;&gt;Samuel Clay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Email address: &lt;a href=&#34;mailto:samuel@newsblur.com&#34;&gt;samuel@newsblur.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.com/samuelclay&#34;&gt;@samuelclay&lt;/a&gt; on Twitter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;NewsBlur is licensed under the MIT License. (See LICENSE)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/GoogleDataTransport</title>
    <updated>2023-07-01T02:18:11Z</updated>
    <id>tag:github.com,2023-07-01:/google/GoogleDataTransport</id>
    <link href="https://github.com/google/GoogleDataTransport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/GoogleDataTransport&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/GoogleDataTransport.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/GoogleDataTransport&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/GoogleDataTransport.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/GoogleDataTransport&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/GoogleDataTransport.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/actions&#34;&gt;&lt;img src=&#34;https://github.com/firebase/firebase-ios-sdk/workflows/datatransport/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GoogleDataTransport&lt;/h1&gt; &#xA;&lt;p&gt;This library is for internal Google use only. It allows the logging of data and telemetry from Google SDKs.&lt;/p&gt; &#xA;&lt;h2&gt;Integration Testing&lt;/h2&gt; &#xA;&lt;p&gt;These instructions apply to minor and patch version updates. Major versions need a customized adaptation.&lt;/p&gt; &#xA;&lt;p&gt;After the CI is green:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Determine the next version for release by checking the &lt;a href=&#34;https://github.com/google/GoogleDataTransport/tags&#34;&gt;tagged releases&lt;/a&gt;. Ensure that the next release version keeps the Swift PM and CocoaPods versions in sync.&lt;/li&gt; &#xA; &lt;li&gt;Verify that the releasing version is the latest entry in the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;, updating it if necessary.&lt;/li&gt; &#xA; &lt;li&gt;Update the version in the podspec to match the latest entry in the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Checkout the &lt;code&gt;main&lt;/code&gt; branch and ensure it is up to date. &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git checkout main&#xA;git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the CocoaPods tag (&lt;code&gt;{version}&lt;/code&gt; will be the latest version in the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/GoogleDataTransport.podspec#L3&#34;&gt;podspec&lt;/a&gt;) &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git tag CocoaPods-{version}&#xA;git push origin CocoaPods-{version}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Push the podspec to the designated repo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;If this version of GDT is intended to launch &lt;strong&gt;before or with&lt;/strong&gt; the next Firebase release:&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Push to &lt;b&gt;SpecsStaging&lt;/b&gt;&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pod repo push --skip-tests staging GoogleDataTransport.podspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;     &lt;p&gt;If the command fails with &lt;code&gt;Unable to find the &#39;staging&#39; repo.&lt;/code&gt;, add the staging repo with:&lt;/p&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pod repo add staging git@github.com:firebase/SpecsStaging.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Otherwise:&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Push to &lt;b&gt;SpecsDev&lt;/b&gt;&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pod repo push --skip-tests dev GoogleDataTransport.podspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;     &lt;p&gt;If the command fails with &lt;code&gt;Unable to find the &#39;dev&#39; repo.&lt;/code&gt;, add the dev repo with:&lt;/p&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pod repo add dev git@github.com:firebase/SpecsDev.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run Firebase CI by waiting until next nightly or adding a PR that touches &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On google3, create a workspace and new CL. Then copybara and run a global TAP. &lt;pre&gt;&#xA;/google/data/ro/teams/copybara/copybara third_party/firebase/ios/Releases/GoogleDataTransport/copy.bara.sky \&#xA;--piper-description-behavior=OVERWRITE \&#xA;--destination-cl=&lt;b&gt;YOUR_CL&lt;/b&gt; gdt&#xA;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Publishing&lt;/h2&gt; &#xA;&lt;p&gt;The release process is as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/#swift-package-manager&#34;&gt;Tag and release for Swift PM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/#cocoapods&#34;&gt;Publish to CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/#create-github-release&#34;&gt;Create GitHub Release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/#post-release-cleanup&#34;&gt;Perform post release cleanup&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;By creating and &lt;a href=&#34;https://github.com/google/GoogleDataTransport/tags&#34;&gt;pushing a tag&lt;/a&gt; for Swift PM, the newly tagged version will be immediately released for public use. Given this, please verify the intended time of release for Swift PM.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a version tag for Swift PM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git tag {version}&#xA;git push origin {version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Ensure that any inflight PRs that depend on the new &lt;code&gt;GoogleDataTransport&lt;/code&gt; version are updated to point to the newly tagged version rather than a checksum.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Publish the newly versioned pod to CocoaPods&lt;/p&gt; &lt;p&gt;It&#39;s recommended to point to the &lt;code&gt;GoogleDataTransport.podspec&lt;/code&gt; in &lt;code&gt;staging&lt;/code&gt; to make sure the correct spec is being published.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pod trunk push ~/.cocoapods/repos/staging/GoogleDataTransport/{version}/GoogleDataTransport.podspec --skip-tests&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The pod push was successful if the above command logs: &lt;code&gt;🚀 GoogleDataTransport ({version}) successfully published&lt;/code&gt;. In addition, a new commit that publishes the new version (co-authored by &lt;a href=&#34;https://github.com/CocoaPodsAtGoogle&#34;&gt;CocoaPodsAtGoogle&lt;/a&gt;) should appear in the &lt;a href=&#34;https://github.com/CocoaPods/Specs&#34;&gt;CocoaPods specs repo&lt;/a&gt;. Last, the latest version should be displayed on &lt;a href=&#34;https://cocoapods.org/pods/GoogleDataTransport&#34;&gt;GoogleDataTransport&#39;s CocoaPods page&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/google/GoogleDataTransport/releases/new/&#34;&gt;Create GitHub Release&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Update the &lt;a href=&#34;https://github.com/google/GoogleDataTransport/releases/new/&#34;&gt;release template&lt;/a&gt;&#39;s &lt;strong&gt;Tag version&lt;/strong&gt; and &lt;strong&gt;Release title&lt;/strong&gt; fields with the latest version. In addition, reference the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/CHANGELOG.md&#34;&gt;Release Notes&lt;/a&gt; in the release&#39;s description.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/google/GoogleDataTransport/releases/edit/9.0.1&#34;&gt;this release&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Don&#39;t forget to perform the &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/#post-release-cleanup&#34;&gt;post release cleanup&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Post Release Cleanup&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Clean up &lt;b&gt;SpecsStaging&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pwd=$(pwd)&#xA;mkdir -p /tmp/release-cleanup &amp;amp;&amp;amp; cd $_&#xA;git clone git@github.com:firebase/SpecsStaging.git&#xA;cd SpecsStaging/&#xA;git rm -rf GoogleDataTransport/&#xA;git commit -m &#34;Post publish cleanup&#34;&#xA;git push origin master&#xA;rm -rf /tmp/release-cleanup&#xA;cd $pwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Set logging level&lt;/h2&gt; &#xA;&lt;h3&gt;Swift&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import &lt;code&gt;GoogleDataTransport&lt;/code&gt; module: &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import GoogleDataTransport&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set logging level global variable to the desired value before calling &lt;code&gt;FirebaseApp.configure()&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;GDTCORConsoleLoggerLoggingLevel = GDTCORLoggingLevel.debug.rawValue&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Objective-C&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import &lt;code&gt;GoogleDataTransport&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &amp;lt;GoogleDataTransport/GoogleDataTransport.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set logging level global variable to the desired value before calling &lt;code&gt;-[FIRApp configure]&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;GDTCORConsoleLoggerLoggingLevel = GDTCORLoggingLevelDebug;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prereqs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gem install --user cocoapods cocoapods-generate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;brew install protobuf nanopb-generator&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;easy_install --user protobuf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;To develop&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./GoogleDataTransport/generate_project.sh&lt;/code&gt; after installing the prereqs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;When adding new logging endpoint&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use commands similar to: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;python -c &#34;line=&#39;https://www.firebase.com&#39;; print line[0::2]&#34; &lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;python -c &#34;line=&#39;https://www.firebase.com&#39;; print line[1::2]&#34; &lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;When adding internal code that shouldn&#39;t be easily usable on github&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consider using go/copybara-library/scrubbing#cc_scrub&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Ensure that you have at least the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 12.0 (or later)&lt;/li&gt; &#xA; &lt;li&gt;CocoaPods 1.10.0 (or later)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/cocoapods-generate&#34;&gt;CocoaPods generate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the pod that you want to develop:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pod gen GoogleDataTransport.podspec --local-sources=./ --auto-open --platforms=ios&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: If the CocoaPods cache is out of date, you may need to run &lt;code&gt;pod repo update&lt;/code&gt; before the &lt;code&gt;pod gen&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Note: Set the &lt;code&gt;--platforms&lt;/code&gt; option to &lt;code&gt;macos&lt;/code&gt; or &lt;code&gt;tvos&lt;/code&gt; to develop/test for those platforms. Since 10.2, Xcode does not properly handle multi-platform CocoaPods workspaces.&lt;/p&gt; &#xA;&lt;h3&gt;Development for Catalyst&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pod gen GoogleDataTransport.podspec --local-sources=./ --auto-open --platforms=ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the Mac box in the App-iOS Build Settings&lt;/li&gt; &#xA; &lt;li&gt;Sign the App in the Settings Signing &amp;amp; Capabilities tab&lt;/li&gt; &#xA; &lt;li&gt;Click Pods in the Project Manager&lt;/li&gt; &#xA; &lt;li&gt;Add Signing to the iOS host app and unit test targets&lt;/li&gt; &#xA; &lt;li&gt;Select the Unit-unit scheme&lt;/li&gt; &#xA; &lt;li&gt;Run it to build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively disable signing in each target:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to Build Settings tab&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Add User-Defined Setting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;CODE_SIGNING_REQUIRED&lt;/code&gt; setting with a value of &lt;code&gt;NO&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that the code is formatted consistently, run the script &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/raw/master/scripts/check.sh&#34;&gt;./scripts/check.sh&lt;/a&gt; before creating a PR.&lt;/p&gt; &#xA;&lt;p&gt;GitHub Actions will verify that any code changes are done in a style compliant way. Install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;mint&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install clang-format@16&#xA;brew install mint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Select a scheme and press Command-u to build a component and run its unit tests.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/GoogleDataTransport/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more information on contributing to the Firebase iOS SDK.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repository is licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>