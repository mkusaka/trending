<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-01T02:06:02Z</updated>
  <subtitle>Monthly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ibireme/YYText</title>
    <updated>2023-11-01T02:06:02Z</updated>
    <id>tag:github.com,2023-11-01:/ibireme/YYText</id>
    <link href="https://github.com/ibireme/YYText" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powerful text framework for iOS to display and edit rich text.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YYText&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ibireme/YYText/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;http://cocoapods.org/pods/YYText&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/YYText.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;http://cocoadocs.org/docsets/YYText&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/YYText.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://www.apple.com/nl/ios/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-iOS%206%2B%20-blue.svg?style=flat&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://travis-ci.org/ibireme/YYText&#34;&gt;&lt;img src=&#34;https://travis-ci.org/ibireme/YYText.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Powerful text framework for iOS to display and edit rich text.&lt;br&gt; (It&#39;s a component of &lt;a href=&#34;https://github.com/ibireme/YYKit&#34;&gt;YYKit&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UILabel and UITextView API compatible&lt;/li&gt; &#xA; &lt;li&gt;High performance asynchronous text layout and rendering&lt;/li&gt; &#xA; &lt;li&gt;Extended CoreText attributes with more text effects&lt;/li&gt; &#xA; &lt;li&gt;Text attachments with UIImage, UIView and CALayer&lt;/li&gt; &#xA; &lt;li&gt;Custom highlight text range to allow user interact with&lt;/li&gt; &#xA; &lt;li&gt;Text parser support (built in markdown/emoticon parser)&lt;/li&gt; &#xA; &lt;li&gt;Text container path and exclusion paths support&lt;/li&gt; &#xA; &lt;li&gt;Vertical form layout support (for CJK text)&lt;/li&gt; &#xA; &lt;li&gt;Image and attributed text copy/paste support&lt;/li&gt; &#xA; &lt;li&gt;Attributed text placeholder support&lt;/li&gt; &#xA; &lt;li&gt;Custom keyboard view support&lt;/li&gt; &#xA; &lt;li&gt;Undo and redo control&lt;/li&gt; &#xA; &lt;li&gt;Attributed text archiver and unarchiver support&lt;/li&gt; &#xA; &lt;li&gt;Multi-language and VoiceOver support&lt;/li&gt; &#xA; &lt;li&gt;Interface Builder support&lt;/li&gt; &#xA; &lt;li&gt;Fully documented&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;YYText vs TextKit&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/architecture.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h1&gt;Text Attributes&lt;/h1&gt; &#xA;&lt;h3&gt;YYText supported attributes&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Attribute Name&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextAttachment.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextAttachment&lt;/td&gt; &#xA;   &lt;td&gt;YYTextAttachment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextHighlight.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextHighlight&lt;/td&gt; &#xA;   &lt;td&gt;YYTextHighlight&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBinding.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBinding&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBinding&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextShadow.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextShadow&lt;br&gt;TextInnerShadow&lt;/td&gt; &#xA;   &lt;td&gt;YYTextShadow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBackgroundBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBackgroundBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBlockBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBlockBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Obliqueness.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextGlyphTransform&lt;/td&gt; &#xA;   &lt;td&gt; NSValue(CGAffineTransform)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Underline.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextUnderline&lt;/td&gt; &#xA;   &lt;td&gt;YYTextDecoration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Strikethrough.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextStrickthrough&lt;/td&gt; &#xA;   &lt;td&gt;YYTextDecoration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBackedString.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBackedString&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBackedString&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CoreText attributes which is supported by YYText&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Attribute Name&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Font.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Font &lt;/td&gt; &#xA;   &lt;td&gt;UIFont(CTFontRef)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Kern.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Kern &lt;/td&gt; &#xA;   &lt;td&gt;NSNumber&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Stroke.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; StrokeWidth &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/StrokeColor.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; StrokeColor &lt;/td&gt; &#xA;   &lt;td&gt; CGColorRef &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Shadow.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Shadow &lt;/td&gt; &#xA;   &lt;td&gt; NSShadow &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Ligature.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Ligature &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/VerticalForms.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; VerticalGlyphForm &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber(BOOL) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/WriteDirection.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; WritingDirection &lt;/td&gt; &#xA;   &lt;td&gt; NSArray(NSNumber) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/RunDelegate.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; RunDelegate &lt;/td&gt; &#xA;   &lt;td&gt; CTRunDelegateRef &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/Alignment.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; TextAlignment &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSTextAlignment) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineBreakMode.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineBreakMode &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSLineBreakMode) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineSpacing.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineSpacing &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/ParagraphSpacing.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; ParagraphSpacing &lt;br&gt; ParagraphSpacingBefore &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/FirstLineHeadIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; FirstLineHeadIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/HeadIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; HeadIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/TailIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; TailIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/MinimumLineHeight.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; MinimumLineHeight &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/MaximumLineHeight.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; MaximumLineHeight &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineHeightMultiple.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineHeightMultiple &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/BaseWritingDirection.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; BaseWritingDirection &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSWritingDirection) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/Tab.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; DefaultTabInterval &lt;br&gt; TabStops &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;CGFloat/NSArray(NSTextTab)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h3&gt;Basic&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// YYLabel (similar to UILabel)&#xA;YYLabel *label = [YYLabel new];&#xA;label.frame = ...&#xA;label.font = ...&#xA;label.textColor = ...&#xA;label.textAlignment = ...&#xA;label.lineBreakMode = ...&#xA;label.numberOfLines = ...&#xA;label.text = ...&#xA;    &#xA;// YYTextView (similar to UITextView)&#xA;YYTextView *textView = [YYTextView new];&#xA;textView.frame = ...&#xA;textView.font = ...&#xA;textView.textColor = ...&#xA;textView.dataDetectorTypes = ...&#xA;textView.placeHolderText = ...&#xA;textView.placeHolderTextColor = ...&#xA;textView.delegate = ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attributed text&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. Create an attributed string.&#xA;NSMutableAttributedString *text = [[NSMutableAttributedString alloc] initWithString:@&#34;Some Text, blabla...&#34;];&#xA;    &#xA;// 2. Set attributes to text, you can use almost all CoreText attributes.&#xA;text.yy_font = [UIFont boldSystemFontOfSize:30];&#xA;text.yy_color = [UIColor blueColor];&#xA;[text yy_setColor:[UIColor redColor] range:NSMakeRange(0, 4)];&#xA;text.yy_lineSpacing = 10;&#xA;    &#xA;// 3. Set to YYLabel or YYTextView.&#xA;YYLabel *label = [YYLabel new];&#xA;label.frame = ...&#xA;label.attributedString = text;&#xA;    &#xA;YYTextView *textView = [YYTextView new];&#xA;textView.frame = ...&#xA;textView.attributedString = text;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text highlight&lt;/h3&gt; &#xA;&lt;p&gt;You can use some convenience methods to set text highlight:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[text yy_setTextHighlightRange:range&#xA;                       color:[UIColor blueColor]&#xA;             backgroundColor:[UIColor grayColor]&#xA;                   tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){ &#xA;                       NSLog(@&#34;tap text range:...&#34;); &#xA;                   }];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or set the text highlight with your custom config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. Create a &#39;highlight&#39; attribute for text.&#xA;YYTextBorder *border = [YYTextBorder borderWithFillColor:[UIColor grayColor] cornerRadius:3];&#xA;   &#xA;YYTextHighlight *highlight = [YYTextHighlight new];&#xA;[highlight setColor:[UIColor whiteColor]];&#xA;[highlight setBackgroundBorder:highlightBorder];&#xA;highlight.tapAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA; NSLog(@&#34;tap text range:...&#34;); &#xA; // you can also set the action handler to YYLabel or YYTextView.&#xA;};&#xA;    &#xA;// 2. Add &#39;highlight&#39; attribute to a range of text.&#xA;[attributedText yy_setTextHighlight:highlight range:highlightRange];&#xA;    &#xA;// 3. Set text to label or text view.&#xA;YYLabel *label = ...&#xA;label.attributedText = attributedText&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.attributedText = ...&#xA;    &#xA;// 4. Receive user interactive action.&#xA;label.highlightTapAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA;   NSLog(@&#34;tap text range:...&#34;);&#xA;};&#xA;label.highlightLongPressAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA;   NSLog(@&#34;long press text range:...&#34;);&#xA;};&#xA;    &#xA;@UITextViewDelegate&#xA;- (void)textView:(YYTextView *)textView didTapHighlight:(YYTextHighlight *)highlight inRange:(NSRange)characterRange rect:(CGRect)rect {&#xA;   NSLog(@&#34;tap text range:...&#34;);&#xA;}&#xA;- (void)textView:(YYTextView *)textView didLongPressHighlight:(YYTextHighlight *)highlight inRange:(NSRange)characterRange rect:(CGRect)rect {&#xA;   NSLog(@&#34;long press text range:...&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text attachments&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSMutableAttributedString *text = [NSMutableAttributedString new];&#xA;UIFont *font = [UIFont systemFontOfSize:16];&#xA;NSMutableAttributedString *attachment = nil;&#xA;&#x9;&#xA;// UIImage attachment&#xA;UIImage *image = [UIImage imageNamed:@&#34;dribbble64_imageio&#34;];&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:image contentMode:UIViewContentModeCenter attachmentSize:image.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&#x9;&#xA;// UIView attachment&#xA;UISwitch *switcher = [UISwitch new];&#xA;[switcher sizeToFit];&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:switcher contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&#x9;&#xA;// CALayer attachment&#xA;CASharpLayer *layer = [CASharpLayer layer];&#xA;layer.path = ...&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:layer contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text layout calculation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSAttributedString *text = ...&#xA;CGSize size = CGSizeMake(100, CGFLOAT_MAX);&#xA;YYTextLayout *layout = [YYTextLayout layoutWithContainerSize:size text:text];&#xA;&#x9;&#xA;// get text bounding&#xA;layout.textBoundingRect; // get bounding rect&#xA;layout.textBoundingSize; // get bounding size&#xA;&#x9;&#xA; // query text layout&#xA;[layout lineIndexForPoint:CGPointMake(10,10)];&#xA;[layout closestLineIndexForPoint:CGPointMake(10,10)];&#xA;[layout closestPositionToPoint:CGPointMake(10,10)];&#xA;[layout textRangeAtPoint:CGPointMake(10,10)];&#xA;[layout rectForRange:[YYTextRange rangeWithRange:NSMakeRange(10,2)]];&#xA;[layout selectionRectsForRange:[YYTextRange rangeWithRange:NSMakeRange(10,2)]];&#xA;&#x9;&#xA;// text layout display&#xA;YYLabel *label = [YYLabel new];&#xA;label.size = layout.textBoundingSize;&#xA;label.textLayout = layout;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adjust text line position&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Convenience methods:&#xA;// 1. Create a text line position modifier, implements `YYTextLinePositionModifier` protocol.&#xA;// 2. Set it to label or text view.&#xA;&#x9;&#xA;YYTextLinePositionSimpleModifier *modifier = [YYTextLinePositionSimpleModifier new];&#xA;modifier.fixedLineHeight = 24;&#xA;&#x9;&#xA;YYLabel *label = [YYLabel new];&#xA;label.linePositionModifier = modifier;&#xA;&#x9;&#xA;// Fully control&#xA;YYTextLinePositionSimpleModifier *modifier = [YYTextLinePositionSimpleModifier new];&#xA;modifier.fixedLineHeight = 24;&#xA;&#x9;&#xA;YYTextContainer *container = [YYTextContainer new];&#xA;container.size = CGSizeMake(100, CGFLOAT_MAX);&#xA;container.linePositionModifier = modifier;&#xA;&#x9;&#xA;YYTextLayout *layout = [YYTextLayout layoutWithContainer:container text:text];&#xA;YYLabel *label = [YYLabel new];&#xA;label.size = layout.textBoundingSize;&#xA;label.textLayout = layout;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Asynchronous layout and rendering&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// If you have performance issues,&#xA;// you may enable the asynchronous display mode.&#xA;YYLabel *label = ...&#xA;label.displaysAsynchronously = YES;&#xA;    &#xA;// If you want to get the highest performance, you should do &#xA;// text layout with `YYTextLayout` class in background thread.&#xA;YYLabel *label = [YYLabel new];&#xA;label.displaysAsynchronously = YES;&#xA;label.ignoreCommonProperties = YES;&#xA;    &#xA;dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{&#xA;   // Create attributed string.&#xA;   NSMutableAttributedString *text = [[NSMutableAttributedString alloc] initWithString:@&#34;Some Text&#34;];&#xA;   text.yy_font = [UIFont systemFontOfSize:16];&#xA;   text.yy_color = [UIColor grayColor];&#xA;   [text yy_setColor:[UIColor redColor] range:NSMakeRange(0, 4)];&#xA; &#x9;&#xA;   // Create text container&#xA;   YYTextContainer *container = [YYTextContainer new];&#xA;   container.size = CGSizeMake(100, CGFLOAT_MAX);&#xA;   container.maximumNumberOfRows = 0;&#xA;   &#xA;   // Generate a text layout.&#xA;   YYTextLayout *layout = [YYTextLayout layoutWithContainer:container text:text];&#xA;   &#xA;   dispatch_async(dispatch_get_main_queue(), ^{&#xA;       label.size = layout.textBoundingSize;&#xA;       label.textLayout = layout;&#xA;   });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text container control&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;YYLabel *label = ...&#xA;label.textContainerPath = [UIBezierPath bezierPathWith...];&#xA;label.exclusionPaths = &#x9;@[[UIBezierPath bezierPathWith...];,...];&#xA;label.textContainerInset = UIEdgeInsetsMake(...);&#xA;label.verticalForm = YES/NO;&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.exclusionPaths = &#x9;@[[UIBezierPath bezierPathWith...];,...];&#xA;textView.textContainerInset = UIEdgeInsetsMake(...);&#xA;textView.verticalForm = YES/NO;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text parser&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. Create a text parser&#xA;&#x9;&#xA;YYTextSimpleEmoticonParser *parser = [YYTextSimpleEmoticonParser new];&#xA;NSMutableDictionary *mapper = [NSMutableDictionary new];&#xA;mapper[@&#34;&lt;span&gt;😄&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;smile.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;🆒&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;cool.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;😢&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;cry.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;😉&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;wink.png&#34;];&#xA;parser.emoticonMapper = mapper;&#xA;&#x9;&#xA;YYTextSimpleMarkdownParser *parser = [YYTextSimpleMarkdownParser new];&#xA;[parser setColorWithDarkTheme];&#xA;    &#xA;MyCustomParser *parser = ... // custom parser&#xA;    &#xA;// 2. Attach parser to label or text view&#xA;YYLabel *label = ...&#xA;label.textParser = parser;&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.textParser = parser;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Set a shared debug option to show text layout result.&#xA;YYTextDebugOption *debugOptions = [YYTextDebugOption new];&#xA;debugOptions.baselineColor = [UIColor redColor];&#xA;debugOptions.CTFrameBorderColor = [UIColor redColor];&#xA;debugOptions.CTLineFillColor = [UIColor colorWithRed:0.000 green:0.463 blue:1.000 alpha:0.180];&#xA;debugOptions.CGGlyphBorderColor = [UIColor colorWithRed:1.000 green:0.524 blue:0.000 alpha:0.200];&#xA;[YYTextDebugOption setSharedDebugOption:debugOptions];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More examples&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;Demo/YYTextDemo.xcodeproj&lt;/code&gt; for more examples:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_path.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_markdown.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_vertical.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_paste.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;pod &#39;YYText&#39;&lt;/code&gt; to your Podfile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pod install&lt;/code&gt; or &lt;code&gt;pod update&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Import &amp;lt;YYText/YYText.h&amp;gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;github &#34;ibireme/YYText&#34;&lt;/code&gt; to your Cartfile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;carthage update --platform ios&lt;/code&gt; and add the framework to your project.&lt;/li&gt; &#xA; &lt;li&gt;Import &amp;lt;YYText/YYText.h&amp;gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download all the files in the &lt;code&gt;YYText&lt;/code&gt; subdirectory.&lt;/li&gt; &#xA; &lt;li&gt;Add the source files to your Xcode project.&lt;/li&gt; &#xA; &lt;li&gt;Link with required frameworks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIKit&lt;/li&gt; &#xA;   &lt;li&gt;CoreFoundation&lt;/li&gt; &#xA;   &lt;li&gt;CoreText&lt;/li&gt; &#xA;   &lt;li&gt;QuartzCore&lt;/li&gt; &#xA;   &lt;li&gt;Accelerate&lt;/li&gt; &#xA;   &lt;li&gt;MobileCoreServices&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Import &lt;code&gt;YYText.h&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Notice&lt;/h3&gt; &#xA;&lt;p&gt;You may add &lt;a href=&#34;https://github.com/ibireme/YYImage&#34;&gt;YYImage&lt;/a&gt; or &lt;a href=&#34;https://github.com/ibireme/YYWebImage&#34;&gt;YYWebImage&lt;/a&gt; to your project if you want to support animated image (GIF/APNG/WebP).&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Full API documentation is available on &lt;a href=&#34;http://cocoadocs.org/docsets/YYText/&#34;&gt;CocoaDocs&lt;/a&gt;.&lt;br&gt; You can also install documentation locally using &lt;a href=&#34;https://github.com/tomaz/appledoc&#34;&gt;appledoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;This library requires &lt;code&gt;iOS 6.0+&lt;/code&gt; and &lt;code&gt;Xcode 8.0+&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;YYText is released under the MIT license. See LICENSE file for details.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;br&gt;&lt;br&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;中文介绍&lt;/h1&gt; &#xA;&lt;p&gt;功能强大的 iOS 富文本编辑与显示框架。&lt;br&gt; (该项目是 &lt;a href=&#34;https://github.com/ibireme/YYKit&#34;&gt;YYKit&lt;/a&gt; 组件之一)&lt;/p&gt; &#xA;&lt;h1&gt;特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API 兼容 UILabel 和 UITextView&lt;/li&gt; &#xA; &lt;li&gt;支持高性能的异步排版和渲染&lt;/li&gt; &#xA; &lt;li&gt;扩展了 CoreText 的属性以支持更多文字效果&lt;/li&gt; &#xA; &lt;li&gt;支持 UIImage、UIView、CALayer 作为图文混排元素&lt;/li&gt; &#xA; &lt;li&gt;支持添加自定义样式的、可点击的文本高亮范围&lt;/li&gt; &#xA; &lt;li&gt;支持自定义文本解析 (内置简单的 Markdown/表情解析)&lt;/li&gt; &#xA; &lt;li&gt;支持文本容器路径、内部留空路径的控制&lt;/li&gt; &#xA; &lt;li&gt;支持文字竖排版，可用于编辑和显示中日韩文本&lt;/li&gt; &#xA; &lt;li&gt;支持图片和富文本的复制粘贴&lt;/li&gt; &#xA; &lt;li&gt;文本编辑时，支持富文本占位符&lt;/li&gt; &#xA; &lt;li&gt;支持自定义键盘视图&lt;/li&gt; &#xA; &lt;li&gt;撤销和重做次数的控制&lt;/li&gt; &#xA; &lt;li&gt;富文本的序列化与反序列化支持&lt;/li&gt; &#xA; &lt;li&gt;支持多语言，支持 VoiceOver&lt;/li&gt; &#xA; &lt;li&gt;支持 Interface Builder&lt;/li&gt; &#xA; &lt;li&gt;全部代码都有文档注释&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;架构&lt;/h1&gt; &#xA;&lt;p&gt;YYText 和 TextKit 架构对比&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/architecture.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h1&gt;文本属性&lt;/h1&gt; &#xA;&lt;h3&gt;YYText 原生支持的属性&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Attribute Name&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextAttachment.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextAttachment&lt;/td&gt; &#xA;   &lt;td&gt;YYTextAttachment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextHighlight.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextHighlight&lt;/td&gt; &#xA;   &lt;td&gt;YYTextHighlight&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBinding.gif&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBinding&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBinding&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextShadow.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextShadow&lt;br&gt;TextInnerShadow&lt;/td&gt; &#xA;   &lt;td&gt;YYTextShadow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBackgroundBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBackgroundBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBlockBorder.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBlockBorder&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBorder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Obliqueness.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextGlyphTransform&lt;/td&gt; &#xA;   &lt;td&gt; NSValue(CGAffineTransform)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Underline.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextUnderline&lt;/td&gt; &#xA;   &lt;td&gt;YYTextDecoration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Strikethrough.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextStrickthrough&lt;/td&gt; &#xA;   &lt;td&gt;YYTextDecoration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/YYText Extended/YYTextBackedString.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextBackedString&lt;/td&gt; &#xA;   &lt;td&gt;YYTextBackedString&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;YYText 支持的 CoreText 属性&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Attribute Name&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Font.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Font &lt;/td&gt; &#xA;   &lt;td&gt;UIFont(CTFontRef)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Kern.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Kern &lt;/td&gt; &#xA;   &lt;td&gt;NSNumber&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Stroke.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; StrokeWidth &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/StrokeColor.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; StrokeColor &lt;/td&gt; &#xA;   &lt;td&gt; CGColorRef &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Shadow.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Shadow &lt;/td&gt; &#xA;   &lt;td&gt; NSShadow &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Ligature.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Ligature &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/VerticalForms.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; VerticalGlyphForm &lt;/td&gt; &#xA;   &lt;td&gt; NSNumber(BOOL) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/WriteDirection.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; WritingDirection &lt;/td&gt; &#xA;   &lt;td&gt; NSArray(NSNumber) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/RunDelegate.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; RunDelegate &lt;/td&gt; &#xA;   &lt;td&gt; CTRunDelegateRef &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/Alignment.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; TextAlignment &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSTextAlignment) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineBreakMode.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineBreakMode &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSLineBreakMode) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineSpacing.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineSpacing &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/ParagraphSpacing.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; ParagraphSpacing &lt;br&gt; ParagraphSpacingBefore &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/FirstLineHeadIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; FirstLineHeadIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/HeadIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; HeadIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/TailIndent.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; TailIndent &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/MinimumLineHeight.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; MinimumLineHeight &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/MaximumLineHeight.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; MaximumLineHeight &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/LineHeightMultiple.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; LineHeightMultiple &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(CGFloat) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/BaseWritingDirection.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; BaseWritingDirection &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;(NSWritingDirection) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Attributes/CoreText and TextKit/Paragraph/Tab.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; DefaultTabInterval &lt;br&gt; TabStops &lt;/td&gt; &#xA;   &lt;td&gt; NSParagraphStyle &lt;br&gt;CGFloat/NSArray(NSTextTab)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;用法&lt;/h1&gt; &#xA;&lt;h3&gt;基本用法&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// YYLabel (和 UILabel 用法一致)&#xA;YYLabel *label = [YYLabel new];&#xA;label.frame = ...&#xA;label.font = ...&#xA;label.textColor = ...&#xA;label.textAlignment = ...&#xA;label.lineBreakMode = ...&#xA;label.numberOfLines = ...&#xA;label.text = ...&#xA;    &#xA;// YYTextView (和 UITextView 用法一致)&#xA;YYTextView *textView = [YYTextView new];&#xA;textView.frame = ...&#xA;textView.font = ...&#xA;textView.textColor = ...&#xA;textView.dataDetectorTypes = ...&#xA;textView.placeHolderText = ...&#xA;textView.placeHolderTextColor = ...&#xA;textView.delegate = ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;属性文本&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. 创建一个属性文本&#xA;NSMutableAttributedString *text = [[NSMutableAttributedString alloc] initWithString:@&#34;Some Text, blabla...&#34;];&#xA;    &#xA;// 2. 为文本设置属性&#xA;text.yy_font = [UIFont boldSystemFontOfSize:30];&#xA;text.yy_color = [UIColor blueColor];&#xA;[text yy_setColor:[UIColor redColor] range:NSMakeRange(0, 4)];&#xA;text.yy_lineSpacing = 10;&#xA;    &#xA;// 3. 赋值到 YYLabel 或 YYTextView&#xA;YYLabel *label = [YYLabel new];&#xA;label.frame = ...&#xA;label.attributedString = text;&#xA;    &#xA;YYTextView *textView = [YYTextView new];&#xA;textView.frame = ...&#xA;textView.attributedString = text;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文本高亮&lt;/h3&gt; &#xA;&lt;p&gt;你可以用一些已经封装好的简便方法来设置文本高亮：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[text yy_setTextHighlightRange:range&#xA;                       color:[UIColor blueColor]&#xA;             backgroundColor:[UIColor grayColor]&#xA;                   tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){ &#xA;                       NSLog(@&#34;tap text range:...&#34;); &#xA;                   }];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或者用更复杂的办法来调节文本高亮的细节：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. 创建一个&#34;高亮&#34;属性，当用户点击了高亮区域的文本时，&#34;高亮&#34;属性会替换掉原本的属性&#xA;YYTextBorder *border = [YYTextBorder borderWithFillColor:[UIColor grayColor] cornerRadius:3];&#xA;   &#xA;YYTextHighlight *highlight = [YYTextHighlight new];&#xA;[highlight setColor:[UIColor whiteColor]];&#xA;[highlight setBackgroundBorder:highlightBorder];&#xA;highlight.tapAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA; NSLog(@&#34;tap text range:...&#34;); &#xA; // 你也可以把事件回调放到 YYLabel 和 YYTextView 来处理。&#xA;};&#xA;    &#xA;// 2. 把&#34;高亮&#34;属性设置到某个文本范围&#xA;[attributedText yy_setTextHighlight:highlight range:highlightRange];&#xA;    &#xA;// 3. 把属性文本设置到 YYLabel 或 YYTextView&#xA;YYLabel *label = ...&#xA;label.attributedText = attributedText&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.attributedText = ...&#xA;    &#xA;// 4. 接受事件回调&#xA;label.highlightTapAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA;   NSLog(@&#34;tap text range:...&#34;);&#xA;};&#xA;label.highlightLongPressAction = ^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect) {&#xA;   NSLog(@&#34;long press text range:...&#34;);&#xA;};&#xA;    &#xA;@UITextViewDelegate&#xA;- (void)textView:(YYTextView *)textView didTapHighlight:(YYTextHighlight *)highlight inRange:(NSRange)characterRange rect:(CGRect)rect {&#xA;   NSLog(@&#34;tap text range:...&#34;);&#xA;}&#xA;- (void)textView:(YYTextView *)textView didLongPressHighlight:(YYTextHighlight *)highlight inRange:(NSRange)characterRange rect:(CGRect)rect {&#xA;   NSLog(@&#34;long press text range:...&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;图文混排&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSMutableAttributedString *text = [NSMutableAttributedString new];&#xA;UIFont *font = [UIFont systemFontOfSize:16];&#xA;NSMutableAttributedString *attachment = nil;&#xA;&#x9;&#xA;// 嵌入 UIImage&#xA;UIImage *image = [UIImage imageNamed:@&#34;dribbble64_imageio&#34;];&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:image contentMode:UIViewContentModeCenter attachmentSize:image.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&#x9;&#xA;// 嵌入 UIView&#xA;UISwitch *switcher = [UISwitch new];&#xA;[switcher sizeToFit];&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:switcher contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&#x9;&#xA;// 嵌入 CALayer&#xA;CASharpLayer *layer = [CASharpLayer layer];&#xA;layer.path = ...&#xA;attachment = [NSMutableAttributedString yy_attachmentStringWithContent:layer contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];&#xA;[text appendAttributedString: attachment];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文本布局计算&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSAttributedString *text = ...&#xA;CGSize size = CGSizeMake(100, CGFLOAT_MAX);&#xA;YYTextLayout *layout = [YYTextLayout layoutWithContainerSize:size text:text];&#xA;&#x9;&#xA;// 获取文本显示位置和大小&#xA;layout.textBoundingRect; // get bounding rect&#xA;layout.textBoundingSize; // get bounding size&#xA;&#x9;&#xA; // 查询文本排版结果&#xA;[layout lineIndexForPoint:CGPointMake(10,10)];&#xA;[layout closestLineIndexForPoint:CGPointMake(10,10)];&#xA;[layout closestPositionToPoint:CGPointMake(10,10)];&#xA;[layout textRangeAtPoint:CGPointMake(10,10)];&#xA;[layout rectForRange:[YYTextRange rangeWithRange:NSMakeRange(10,2)]];&#xA;[layout selectionRectsForRange:[YYTextRange rangeWithRange:NSMakeRange(10,2)]];&#xA;&#x9;&#xA;// 显示文本排版结果&#xA;YYLabel *label = [YYLabel new];&#xA;label.size = layout.textBoundingSize;&#xA;label.textLayout = layout;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文本行位置调整&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 由于中文、英文、Emoji 等字体高度不一致，或者富文本中出现了不同字号的字体，&#xA;// 可能会造成每行文字的高度不一致。这里可以添加一个修改器来实现固定行高，或者自定义文本行位置。&#xA;  &#xA;// 简单的方法:&#xA;// 1. 创建一个文本行位置修改类，实现 `YYTextLinePositionModifier` 协议。&#xA;// 2. 设置到 Label 或 TextView。&#xA;&#x9;&#xA;YYTextLinePositionSimpleModifier *modifier = [YYTextLinePositionSimpleModifier new];&#xA;modifier.fixedLineHeight = 24;&#xA;&#x9;&#xA;YYLabel *label = [YYLabel new];&#xA;label.linePositionModifier = modifier;&#xA;&#x9;&#xA;// 完全控制:&#xA;YYTextLinePositionSimpleModifier *modifier = [YYTextLinePositionSimpleModifier new];&#xA;modifier.fixedLineHeight = 24;&#xA;&#x9;&#xA;YYTextContainer *container = [YYTextContainer new];&#xA;container.size = CGSizeMake(100, CGFLOAT_MAX);&#xA;container.linePositionModifier = modifier;&#xA;&#x9;&#xA;YYTextLayout *layout = [YYTextLayout layoutWithContainer:container text:text];&#xA;YYLabel *label = [YYLabel new];&#xA;label.size = layout.textBoundingSize;&#xA;label.textLayout = layout;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;异步排版和渲染&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 如果你在显示字符串时有性能问题，可以这样开启异步模式：&#xA;YYLabel *label = ...&#xA;label.displaysAsynchronously = YES;&#xA;    &#xA;// 如果需要获得最高的性能，你可以在后台线程用 `YYTextLayout` 进行预排版： &#xA;YYLabel *label = [YYLabel new];&#xA;label.displaysAsynchronously = YES; //开启异步绘制&#xA;label.ignoreCommonProperties = YES; //忽略除了 textLayout 之外的其他属性&#xA;    &#xA;dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{&#xA;   // 创建属性字符串&#xA;   NSMutableAttributedString *text = [[NSMutableAttributedString alloc] initWithString:@&#34;Some Text&#34;];&#xA;   text.yy_font = [UIFont systemFontOfSize:16];&#xA;   text.yy_color = [UIColor grayColor];&#xA;   [text yy_setColor:[UIColor redColor] range:NSMakeRange(0, 4)];&#xA; &#xA;   // 创建文本容器&#xA;   YYTextContainer *container = [YYTextContainer new];&#xA;   container.size = CGSizeMake(100, CGFLOAT_MAX);&#xA;   container.maximumNumberOfRows = 0;&#xA;   &#xA;   // 生成排版结果&#xA;   YYTextLayout *layout = [YYTextLayout layoutWithContainer:container text:text];&#xA;   &#xA;   dispatch_async(dispatch_get_main_queue(), ^{&#xA;       label.size = layout.textBoundingSize;&#xA;       label.textLayout = layout;&#xA;   });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文本容器控制&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;YYLabel *label = ...&#xA;label.textContainerPath = [UIBezierPath bezierPathWith...];&#xA;label.exclusionPaths = &#x9;@[[UIBezierPath bezierPathWith...];,...];&#xA;label.textContainerInset = UIEdgeInsetsMake(...);&#xA;label.verticalForm = YES/NO;&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.exclusionPaths = &#x9;@[[UIBezierPath bezierPathWith...];,...];&#xA;textView.textContainerInset = UIEdgeInsetsMake(...);&#xA;textView.verticalForm = YES/NO;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文本解析&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 1. 创建一个解析器&#xA;&#x9;&#xA;// 内置简单的表情解析&#xA;YYTextSimpleEmoticonParser *parser = [YYTextSimpleEmoticonParser new];&#xA;NSMutableDictionary *mapper = [NSMutableDictionary new];&#xA;mapper[@&#34;&lt;span&gt;😄&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;smile.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;🆒&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;cool.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;😢&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;cry.png&#34;];&#xA;mapper[@&#34;&lt;span&gt;😉&lt;/span&gt;&#34;] = [UIImage imageNamed:@&#34;wink.png&#34;];&#xA;parser.emoticonMapper = mapper;&#xA;&#x9;&#xA;// 内置简单的 markdown 解析&#xA;YYTextSimpleMarkdownParser *parser = [YYTextSimpleMarkdownParser new];&#xA;[parser setColorWithDarkTheme];&#xA;    &#xA;// 实现 `YYTextParser` 协议的自定义解析器&#xA;MyCustomParser *parser = ... &#xA;    &#xA;// 2. 把解析器添加到 YYLabel 或 YYTextView&#xA;YYLabel *label = ...&#xA;label.textParser = parser;&#xA;    &#xA;YYTextView *textView = ...&#xA;textView.textParser = parser;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// 设置一个全局的 debug option 来显示排版结果。&#xA;YYTextDebugOption *debugOptions = [YYTextDebugOption new];&#xA;debugOptions.baselineColor = [UIColor redColor];&#xA;debugOptions.CTFrameBorderColor = [UIColor redColor];&#xA;debugOptions.CTLineFillColor = [UIColor colorWithRed:0.000 green:0.463 blue:1.000 alpha:0.180];&#xA;debugOptions.CGGlyphBorderColor = [UIColor colorWithRed:1.000 green:0.524 blue:0.000 alpha:0.200];&#xA;[YYTextDebugOption setSharedDebugOption:debugOptions];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;更多示例&lt;/h3&gt; &#xA;&lt;p&gt;查看演示工程 &lt;code&gt;Demo/YYTextDemo.xcodeproj&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_path.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_markdown.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_vertical.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.github.com/ibireme/YYText/master/Demo/DemoSnapshot/text_paste.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;h1&gt;安装&lt;/h1&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 Podfile 中添加 &lt;code&gt;pod &#39;YYText&#39;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;执行 &lt;code&gt;pod install&lt;/code&gt; 或 &lt;code&gt;pod update&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;导入 &amp;lt;YYText/YYText.h&amp;gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 Cartfile 中添加 &lt;code&gt;github &#34;ibireme/YYText&#34;&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;执行 &lt;code&gt;carthage update --platform ios&lt;/code&gt; 并将生成的 framework 添加到你的工程。&lt;/li&gt; &#xA; &lt;li&gt;导入 &amp;lt;YYText/YYText.h&amp;gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;手动安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载 YYText 文件夹内的所有内容。&lt;/li&gt; &#xA; &lt;li&gt;将 YYText 内的源文件添加(拖放)到你的工程。&lt;/li&gt; &#xA; &lt;li&gt;链接以下 frameworks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIKit&lt;/li&gt; &#xA;   &lt;li&gt;CoreFoundation&lt;/li&gt; &#xA;   &lt;li&gt;CoreText&lt;/li&gt; &#xA;   &lt;li&gt;QuartzCore&lt;/li&gt; &#xA;   &lt;li&gt;Accelerate&lt;/li&gt; &#xA;   &lt;li&gt;MobileCoreServices&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;导入 &lt;code&gt;YYText.h&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;注意&lt;/h3&gt; &#xA;&lt;p&gt;你可以添加 &lt;a href=&#34;https://github.com/ibireme/YYImage&#34;&gt;YYImage&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/ibireme/YYWebImage&#34;&gt;YYWebImage&lt;/a&gt; 到你的工程，以支持动画格式(GIF/APNG/WebP)的图片。&lt;/p&gt; &#xA;&lt;h1&gt;文档&lt;/h1&gt; &#xA;&lt;p&gt;你可以在 &lt;a href=&#34;http://cocoadocs.org/docsets/YYText/&#34;&gt;CocoaDocs&lt;/a&gt; 查看在线 API 文档，也可以用 &lt;a href=&#34;https://github.com/tomaz/appledoc&#34;&gt;appledoc&lt;/a&gt; 本地生成文档。&lt;/p&gt; &#xA;&lt;h1&gt;系统要求&lt;/h1&gt; &#xA;&lt;p&gt;该项目最低支持 &lt;code&gt;iOS 6.0&lt;/code&gt; 和 &lt;code&gt;Xcode 8.0&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;已知问题&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YYText 并不能支持所有 CoreText/TextKit 的属性，比如 NSBackgroundColor、NSStrikethrough、NSUnderline、NSAttachment、NSLink 等，但 YYText 中基本都有对应属性作为替代。详情见上方表格。&lt;/li&gt; &#xA; &lt;li&gt;YYTextView 未实现局部刷新，所以在输入和编辑大量的文本（比如超过大概五千个汉字、或大概一万个英文字符）时会出现较明显的卡顿现象。&lt;/li&gt; &#xA; &lt;li&gt;竖排版时，添加 exclusionPaths 在少数情况下可能会导致文本显示空白。&lt;/li&gt; &#xA; &lt;li&gt;当添加了非矩形的 textContainerPath，并且有嵌入大于文本排版方向宽度的 RunDelegate 时，RunDelegate 之后的文字会无法显示。这是 CoreText 的 Bug（或者说是 Feature）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;许可证&lt;/h1&gt; &#xA;&lt;p&gt;YYText 使用 MIT 许可证，详情见 LICENSE 文件。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>frijole/gifbook</title>
    <updated>2023-11-01T02:06:02Z</updated>
    <id>tag:github.com,2023-11-01:/frijole/gifbook</id>
    <link href="https://github.com/frijole/gifbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a rough gif viewer&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>gnachman/iTerm2</title>
    <updated>2023-11-01T02:06:02Z</updated>
    <id>tag:github.com,2023-11-01:/gnachman/iTerm2</id>
    <link href="https://github.com/gnachman/iTerm2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iTerm2 is a terminal emulator for Mac OS X that does amazing things.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This site hosts code for &lt;a href=&#34;https://iterm2.com&#34;&gt;iTerm2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/gnachman/iTerm2&#34;&gt;&lt;img src=&#34;https://travis-ci.org/gnachman/iTerm2.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/gnachman/iTerm2?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/gnachman/iTerm2/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iterm2.com/bugs&#34;&gt;File a bug report here!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues are on &lt;a href=&#34;https://gitlab.com/gnachman/iterm2/issues&#34;&gt;Gitlab&lt;/a&gt; because Github barely supports issue attachments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/gnachman/iterm2/wikis/HowToBuild&#34;&gt;How do I build this thing?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/gnachman/iterm2/-/wikis/How-to-Contribute&#34;&gt;How do I contribute changes?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iterm2.com/downloads.html&#34;&gt;Downloads&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>