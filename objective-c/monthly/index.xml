<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:50:08Z</updated>
  <subtitle>Monthly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zhuhaichao518/cloudplayplus_stone</title>
    <updated>2025-06-01T01:50:08Z</updated>
    <id>tag:github.com,2025-06-01:/zhuhaichao518/cloudplayplus_stone</id>
    <link href="https://github.com/zhuhaichao518/cloudplayplus_stone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Play Plus Remote Streaming Project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cloudplayplus&lt;/h1&gt; &#xA;&lt;p&gt;CloudPlayPlus (&lt;a href=&#34;https://www.cloudplayplus.com&#34;&gt;https://www.cloudplayplus.com&lt;/a&gt;, currently only available in mainland China) is a remote desktop software designed to provide users with a seamless and smooth experience for playing remote games. Currently, it achieves 2K resolution at 60 FPS with a latency of just 40ms (from company to home) using a customized version of libWebRTC for online game streaming from my macbook to Windows machine (NVDIA RTX 3070Ti).&lt;/p&gt; &#xA;&lt;p&gt;However, there are still many exciting features under development, including H.265 hardware encoding and support for various hardware decoding solutions(currently only NVDIA graphic card with encoding unit is supported). CloudPlayPlus aims to continuously enhance performance and user experience in remote gaming.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can build and run it as a simple flutter project (such as, flutter build windows). Before build you need to run flutter pub get in sub plugin folders to sync the whole project.&lt;/p&gt; &#xA;&lt;p&gt;Run this project on Windows or MacOS as host, and you will be able to control the host on another client, or from &lt;a href=&#34;https://www.cloudplayplus.com/web/&#34;&gt;https://www.cloudplayplus.com/web/&lt;/a&gt;. You need to register a account first.&lt;/p&gt; &#xA;&lt;h1&gt;Some Additional Develop Material&lt;/h1&gt; &#xA;&lt;h1&gt;WebRTC&lt;/h1&gt; &#xA;&lt;p&gt;We use custom build of WebRTC for cloudplayplus. The main purpose is add hardware_acceleration support in WebRTC windows and some GPU texture support. We have added/modified some interfaces and you can check the difference from flutter-webrtc in this project and official &lt;a href=&#34;https://github.com/flutter-webrtc/flutter-webrtc&#34;&gt;flutter-webrtc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Linux&lt;/h1&gt; &#xA;&lt;p&gt;Personally I use steam deck to develop this project. Here is the list of commands to make flutter runnable on steam deck: steamdeck flutter: sudo pacman-key --init sudo pacman-key --populate archlinux sudo steamos-readonly disable sudo pacman-key --populate holo sudo pacman -S base-devel cmake ninja glibc linux-api-headers gtk3 pango glib2 sysprof harfbuzz freetype2 libpng util-linux fribidi cairo lzo pixman gdk-pixbuf2 libcloudproviders atk at-spi2-atk dbus at-spi2-core libx11 xorgproto&lt;/p&gt; &#xA;&lt;p&gt;To login to github desktop: sudo pacman -S kwalletmanager sudo pacman -S kwallet&lt;/p&gt; &#xA;&lt;p&gt;sudo pacman -S tpm2-tss for secure_storage.&lt;/p&gt; &#xA;&lt;p&gt;chrome debug: set chrome path to var/lib/flatpak/app/com.google.Chrome/current/active/export/bin/com.google.Chrome if using flatpak&lt;/p&gt; &#xA;&lt;h1&gt;MacOS debug WebRTCFramework:&lt;/h1&gt; &#xA;&lt;p&gt;copy the framework and dysm to flutter-webrtc/macos use xcode to build&lt;/p&gt; &#xA;&lt;p&gt;first time: modify pod pod install in cloudplayplus/macos&lt;/p&gt; &#xA;&lt;h1&gt;Web Debug&lt;/h1&gt; &#xA;&lt;h2&gt;use local server:&lt;/h2&gt; &#xA;&lt;p&gt;flutter run -d chrome --web-browser-flag &#34;--disable-web-security&#34;&lt;/p&gt; &#xA;&lt;p&gt;rtc build: python3 run.py build macos_arm64&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Cocoanetics/DTCoreText</title>
    <updated>2025-06-01T01:50:08Z</updated>
    <id>tag:github.com,2025-06-01:/Cocoanetics/DTCoreText</id>
    <link href="https://github.com/Cocoanetics/DTCoreText" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Methods to allow using HTML code with CoreText&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DTCoreText&lt;/h1&gt; &#xA;&lt;p&gt;This project aims to duplicate the methods present on Mac OSX which allow creation of &lt;code&gt;NSAttributedString&lt;/code&gt; from HTML code on iOS.&lt;/p&gt; &#xA;&lt;p&gt;The project covers two broad areas:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Layouting&lt;/strong&gt; - Interfacing with CoreText, generating attributed strings from HTML code&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User Interface&lt;/strong&gt; - UI-related classes render these objects, specifically &lt;code&gt;DTAttributedTextView&lt;/code&gt;, &lt;code&gt;DTAttributedLabel&lt;/code&gt; and &lt;code&gt;DTAttributedTextCell&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This is useful for drawing simple rich text like any HTML document without having to use a web view. For text selection and highlighting (as you might need for an Editor or Reader) there is the commercial &lt;strong&gt;DTRichTextEditor&lt;/strong&gt; component which can be purchased in the &lt;a href=&#34;http://www.cocoanetics.com/parts/dtrichtexteditor/&#34;&gt;Cocoanetics Parts Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be &lt;a href=&#34;https://docs.cocoanetics.com/DTCoreText&#34;&gt;browsed online&lt;/a&gt; or installed in your Xcode Organizer via the &lt;a href=&#34;https://docs.cocoanetics.com/DTCoreText/DTCoreText.atom&#34;&gt;Atom Feed URL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;http://www.cocoanetics.com/2011/08/nsattributedstringhtml-qa/&#34;&gt;Q&amp;amp;A&lt;/a&gt; answers some frequently asked questions.&lt;/p&gt; &#xA;&lt;p&gt;Changelog: &lt;a href=&#34;https://github.com/Cocoanetics/DTCoreText/releases&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;a href=&#34;https://raw.githubusercontent.com/Cocoanetics/DTCoreText/develop/Documentation/Programming%20Guide-template.markdown&#34;&gt;Programming Guide&lt;/a&gt; with a set of solutions to common problems.&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;http://twitter.com/cocoanetics&#34;&gt;@cocoanetics&lt;/a&gt; on Twitter or subscribe to the &lt;a href=&#34;http://www.cocoanetics.com&#34;&gt;Cocoanetics Blog&lt;/a&gt; for news and updates.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;It is open source and covered by a standard 2-clause BSD license. That means you have to mention &lt;em&gt;Cocoanetics&lt;/em&gt; as the original author of this code and reproduce the LICENSE text inside your app.&lt;/p&gt; &#xA;&lt;p&gt;You can purchase a &lt;a href=&#34;https://www.cocoanetics.com/order/?product_id=DTCoreText&#34;&gt;Non-Attribution-License&lt;/a&gt; for 75 Euros for not having to include the LICENSE text.&lt;/p&gt; &#xA;&lt;p&gt;We also accept sponsorship for specific enhancements which you might need. Please &lt;a href=&#34;mailto:oliver@cocoanetics.com?subject=DTCoreText&#34;&gt;contact us via email&lt;/a&gt; for inquiries.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>geode-sdk/ios-launcher</title>
    <updated>2025-06-01T01:50:08Z</updated>
    <id>tag:github.com,2025-06-01:/geode-sdk/ios-launcher</id>
    <link href="https://github.com/geode-sdk/ios-launcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manages installing and launching Geometry Dash for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Geode iOS Launcher&lt;/h1&gt; &#xA;&lt;p&gt;Manages installing and launching &lt;strong&gt;Geometry Dash&lt;/strong&gt; with &lt;strong&gt;Geode&lt;/strong&gt; for iOS.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geode-sdk/ios-launcher/main/screenshots/thumbnail.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS/iPadOS 14.0 or later&lt;/li&gt; &#xA; &lt;li&gt;Full version of Geometry Dash installed&lt;/li&gt; &#xA; &lt;li&gt;An internet connection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;a href=&#34;https://github.com/geode-sdk/ios-launcher/releases&#34;&gt;https://github.com/geode-sdk/ios-launcher/releases&lt;/a&gt;, if you are not &lt;strong&gt;jailbroken&lt;/strong&gt;, download the latest &lt;strong&gt;ipa&lt;/strong&gt; file. If you wish to use the tweak and have &lt;strong&gt;TrollStore&lt;/strong&gt;, download the latest &lt;strong&gt;tipa&lt;/strong&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Install the launcher by following the &lt;a href=&#34;https://raw.githubusercontent.com/geode-sdk/ios-launcher/main/INSTALL.md&#34;&gt;Installation Guide&lt;/a&gt;, or reading the &lt;strong&gt;INSTALL.md&lt;/strong&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy using Geode!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any further questions, or need help, be sure to join &lt;a href=&#34;https://discord.gg/9e43WMKzhp&#34;&gt;our Discord server&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Building / Development&lt;/h2&gt; &#xA;&lt;p&gt;To build this project, you must have the following prerequisites installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://theos.dev/docs/&#34;&gt;Theos&lt;/a&gt; [WSL for Windows and GNU/Linux]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/make&#34;&gt;make&lt;/a&gt; [Mac OS only]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After installing these, you can compile the project by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/geode-sdk/ios-launcher&#xA;cd ios-launcher&#xA;make package FINALPACKAGE=1 STRIP=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer&#34;&gt;LiveContainer&lt;/a&gt; - Made the launcher possible!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sgl0v/MSColorPicker&#34;&gt;MSColorPicker&lt;/a&gt; - Helper for Color Picking&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swisspol/GCDWebServer&#34;&gt;GCDWebServer&lt;/a&gt; - For the web debug panel!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/geode-sdk/ios-launcher/main/LICENSE&#34;&gt;Boost Software License 1.0&lt;/a&gt;. Additionally, this project also uses code from &lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer&#34;&gt;LiveContainer&lt;/a&gt;. View the &lt;a href=&#34;https://raw.githubusercontent.com/geode-sdk/ios-launcher/main/NOTICE.md&#34;&gt;NOTICE.md&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>