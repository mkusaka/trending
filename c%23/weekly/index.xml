<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-15T01:42:35Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>YSGStudyHards/DotNetGuide</title>
    <updated>2023-10-15T01:42:35Z</updated>
    <id>tag:github.com,2023-10-15:/YSGStudyHards/DotNetGuide</id>
    <link href="https://github.com/YSGStudyHards/DotNetGuide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐱‍🚀【C#/.NET/.NET Core学习、工作、面试指南】记录、收集和总结C#/.NET/.NET Core基础知识、学习路线、开发实战、学习视频、文章、书籍、项目框架、社区组织、开发必备工具、常见面试题、面试须知、简历模板、以及自己在学习和工作中的一些微薄见解。希望能和大家一起学习，共同进步👊【让现在的自己不再迷茫✨，如果本知识库能为您提供帮助，别忘了给予支持哦(关注、点赞、分享)💖】。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐱‍🚀C#/.NET/.NET Core学习、工作、面试指南&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;让现在的自己不再迷茫✨✨✨。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2336807/o_230817182324_%E5%AD%A6%E4%B9%A0%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97.png&#34; alt=&#34;C#/.NET/.NET Core学习、工作、面试指南&#34; title=&#34;C#/.NET/.NET Core学习、工作、面试指南&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📚DotNetGuide简介&lt;/h2&gt; &#xA;&lt;p&gt;现如今网上关于Java、前端、Android、Golang...等相关技术的学习资料、工作心得、面试指南一搜都是一大把，但是咱们C#/.NET的相关学习资料、工作心得、面试指南都是寥寥无几。&lt;strong&gt;我在微信群和知乎里面经常会看到这样的提问：有没有好的C#/.NET相关的学习书籍、视频教程、项目框架和常见面试题推荐的？&lt;/strong&gt;。并不是没有人写，而是因为网上的资料和文章太零散了，缺少一个这方面汇总的知识库。作为一名.NET开发者而言当然是不想让这种现象普遍存在的，建立DotNetGuide知识库的初衷就是为了记录、收集和总结优质的.NET相关学习资料（学习路线、视频、文章、书籍、项目、框架...等）、开发实战教程、开发必备工具、常见面试题、面试须知、简历模板、以及自己在学习和工作中的一些微薄见解，希望可以帮助到那些想要入门学习.NET或者正在使用.NET的同学。一个人的力量是十分有限的，由衷的欢迎大家可以在Issues中投稿或者直接提交PR一起完善我们的C#/.NET/.NET Core学习、工作、面试指南知识库🤞。&lt;/p&gt; &#xA;&lt;h2&gt;🎉Issues宝藏存库&lt;/h2&gt; &#xA;&lt;p&gt;🙌知识库中有总结不足的地方，欢迎各位大佬给我提意见(&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/7&#34;&gt;💖留下您宝贵的建议&lt;/a&gt;)。 如果DotNetGuide知识库对大家有帮助的话记得给作者一个星星哟⭐(您的小星星就是对我最大的肯定和鼓励)！&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;点击下面的图片，前往Issues留下您压箱底的大宝藏👇：&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues&#34;&gt;&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2138171/o_d5d655a0.png&#34; alt=&#34;宝藏收集地&#34; title=&#34;宝藏收集地&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝交流学习共同进步&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;欢迎关注我一起沟通、交流学习、共同进步(&lt;a href=&#34;https://mp.weixin.qq.com/s/dCyKG6n6l5ICTl24dKNqbw&#34;&gt;了解作者&amp;amp;获取更多学习资料😎&lt;/a&gt;)。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2145481/o_9076dd69.png&#34; alt=&#34;追逐时光者公众号自动回复内容&#34; title=&#34;交流学习共同进步&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2141413/o_220409130943_%E6%88%91%E7%9A%84%E5%85%AC%E4%BC%97%E5%8F%B7.jpg&#34; alt=&#34;追逐时光者的微信公众号&#34; title=&#34;追逐时光者的微信公众号&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔍目录导航(善用Ctrl+F)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8F%E4%BC%98%E8%B4%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%94%B6%E5%BD%95%E6%A0%88&#34;&gt;🏷️优质学习资料收录栈&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%BC%96%E7%A8%8B%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87%E6%8A%80%E5%B7%A7%E9%9B%86&#34;&gt;🏹编程效率提升技巧集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/11&#34;&gt;⚒️程序员常用的工具软件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#c%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97&#34;&gt;✍C#入门到进阶学习指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#cnetnet-core%E5%85%85%E7%94%B5%E7%AB%99&#34;&gt;🔋C#/.NET/.NET Core充电站&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#cnetnet-core%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8&#34;&gt;🎁C#/.NET/.NET Core面试宝典&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/16&#34;&gt;📰C#/.NET/.NET Core最新资讯&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#cnetnet-core%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8B&#34;&gt;🥇C#/.NET/.NET Core开发实战教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/23&#34;&gt;✋C#/.NET/.NET Core疑难问题答疑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/9&#34;&gt;📚C#/.NET/.NET Core推荐学习书籍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15046838.html&#34;&gt;📺C#/.NET/.NET Core学习视频汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8Fcnetnet-core%E4%BC%98%E7%A7%80%E9%A1%B9%E7%9B%AE%E6%A1%86%E6%9E%B6&#34;&gt;🏗️C#/.NET/.NET Core优秀项目框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&#34;&gt;🧱设计模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;🛠️数据结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E9%80%BB%E8%BE%91%E7%AE%97%E6%B3%95&#34;&gt;🧮逻辑算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93sql&#34;&gt;🍇关系型数据库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93nosql&#34;&gt;🍉非关系型数据库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1&#34;&gt;💡系统设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;&gt;💻操作系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&#34;&gt;🛰️计算机网络&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8F%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF&#34;&gt;☁️容器技术&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#devopscicd%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7&#34;&gt;🧰DevOps&amp;amp;CI&amp;amp;CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91&#34;&gt;🌍Web前端开发&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7&#34;&gt;🧲版本控制工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E9%9D%A2%E8%AF%95%E9%A1%BB%E7%9F%A5&#34;&gt;🙇面试须知&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%AE%80%E5%8E%86%E6%A8%A1%E6%9D%BF&#34;&gt;👩‍💻简历模板&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E5%AE%9D%E8%97%8F%E6%8C%87%E5%8D%97&#34;&gt;🧭宝藏指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%EF%B8%8F%E7%A4%BE%E5%8C%BA%E7%BB%84%E7%BB%87&#34;&gt;✈️社区组织&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏷️优质学习资料收录栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17539010.html&#34;&gt;🐱‍🚀零基础如何自学C#?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/ysgstudyhard/da6e0c/nkoqf7&#34;&gt;🥇高质量付费学习课程推荐&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/12&#34;&gt;🚤适合后端程序员的前端框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/architecture/&#34;&gt;📚.NET应用程序体系结构文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoienTajik/AspNetCore-Developer-Roadmap/raw/master/ReadMe.zh-Hans.md&#34;&gt;📚2023年ASP.NET Core开发者学习指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15911410.html&#34;&gt;🥏值得推荐的.NET/.NET Core ORM框架汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/8&#34;&gt;🐮C#/.NET/.NET Core推荐博客&amp;amp;博主&amp;amp;公众号&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/10&#34;&gt;⛵C#/.NET/.NET Core推荐学习路线&amp;amp;文档&amp;amp;文章&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/csharp/&#34;&gt;📚C#指南（微软提供的最权威，最全面的C#学习资料）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/&#34;&gt;📚.NET文档（微软提供的最权威，最全面的.NET学习资料）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/zh-cn/learn&#34;&gt;💪微软官方.NET免费教程（面向从初学者到高级开发人员）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/&#34;&gt;🔎面向开发人员和技术专业人员的Microsoft文档和学习主页&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏹编程效率提升技巧集&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/zh-hans/downloads/&#34;&gt;Visual Studio 2022下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/zh-hans/vs/mac/&#34;&gt;Visual Studio for Mac下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/6Ekqufb4r2VvQGd9TifpEg&#34;&gt;Visual Studio常用快捷键&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4vo2OvWdj9fMrKCIKi70Dg&#34;&gt;Visual Studio的奇淫技巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2Kq4_BzvrkBIgeqpyR9fDQ&#34;&gt;18款Visual Studio实用插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/7eiN_RAf_DfPXM86pQOuuw&#34;&gt;Visual Studio 2022进行文件差异比较&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bEO2SCbpqxLg7eg1TZKMpA&#34;&gt;Visual Studio C# 多环境配置 Web.config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Cc2kgPBjj-mjVigxceKtRw&#34;&gt;合理使用Visual Studio 2022内置任务列表（TODO）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/-5dL_b5pMLV0LQoVMsFjjQ&#34;&gt;Visual Studio将JSON格式数据自动转化为对应的类&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/?wt.mc_id=vscom_downloads&#34;&gt;VS Code下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/BTja1gAsbWnPQ_b9uFr27g&#34;&gt;VS Code常用快捷键&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Ox_4JUOua1S5nJp0i8-Ogw&#34;&gt;20款VS Code实用插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14413914.html&#34;&gt;VS Code使用Git可视化管理源代码详细教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/YxHpE1WljKWF6aZJkmBquA&#34;&gt;VS Code调试和发布ASP.NET Core Web应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kKVPdxp9p-7QZ45XMosDWw&#34;&gt;VS Code安装C#开发工具包并编写ASP.NET Core Web应用&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AI辅助编程工具&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xGFgBh_OsQ0hwOtUFQzxdg&#34;&gt;.NET开发工作效率提升利器 - CodeGeeX AI编程助手&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GitHub&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trending/c%23?since=daily&#34;&gt;C# GitHub趋势榜&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/zh/issues/tracking-your-work-with-issues/quickstart&#34;&gt;GitHub Issues 快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/YJwW9AFPoEKuU_MXqL_Pcg&#34;&gt;如何给GitHub上的开源项目提交PR?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17581307.html&#34;&gt;五分钟教你使用GitHub寻找优质项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/liXDb4MGXlSrAryRDSkcbw&#34;&gt;我找回了我喜欢的GitHub Old Feed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/x7uZvQvtipr2wbNzxqJ5Ng&#34;&gt;30分钟快速搭建并部署一个免费的个人博客&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Git管理工具&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/zh/desktop&#34;&gt;GitHub Desktop使用教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/13128633.html&#34;&gt;最全面的SourceTree使用教程详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9NoocaR_AHxYu24WIJr2Cw&#34;&gt;TortoiseGit-使用教程（图文详细版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✍C#入门到进阶学习指南&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;作者正在努力编写中，欢迎大家一起加入。。。。。。。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;所有学习示例代码都在&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/tree/main/DotNetGuidePractice&#34;&gt;DotNetGuidePractice👉&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔋C#/.NET/.NET Core充电站&lt;/h2&gt; &#xA;&lt;h3&gt;在线学习站&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/zh-cn/&#34;&gt;.NET官网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/zh-cn/platform/community&#34;&gt;.NET开发者社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/dotnet/&#34;&gt;.NET Blog官方博客&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/dotnet-ch/?c=85&amp;amp;WT.mc_id=dotnet-35129-website&#34;&gt;.NET中文官方博客&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/visualstudio/?cis=vshelp&#34;&gt;Visual Studio Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/cate/108698/&#34;&gt;博客园.NET技术专区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%23&#34;&gt;Stack Overflow C#问题专栏&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/.net&#34;&gt;Stack Overflow .NET问题专栏&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://source.dot.net&#34;&gt;.NET在线源码查询&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apisof.net/catalog&#34;&gt;.NET API在线目录查询&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome Collection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quozd/awesome-dotnet&#34;&gt;Awesome .NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AdrienTorris/awesome-blazor&#34;&gt;Awesome Blazor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AvaloniaCommunity/awesome-avalonia&#34;&gt;Awesome Avalonia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsuarezruiz/awesome-dotnet-maui&#34;&gt;Awesome .NET MAUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thangchung/awesome-dotnet-core&#34;&gt;Awesome .NET Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chutianshu1981/AwesomeUnityTutorial&#34;&gt;Awesome Unity Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mjebrahimi/Awesome-Nuget-Packages&#34;&gt;Awesome Nuget Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mjebrahimi/Awesome-Microservices-DotNet&#34;&gt;Awesome Microservices .NET&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎁C#/.NET/.NET Core面试宝典&lt;/h2&gt; &#xA;&lt;p&gt;面试宝典地址：&lt;a href=&#34;https://www.yuque.com/ysgstudyhard/da6e0c&#34;&gt;https://www.yuque.com/ysgstudyhard/da6e0c👉&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;因为个人的能力和精力有限没法把涉及的所有知识点都总结归纳（现在主要是对一些常见的知识点进行了总结和归纳），希望有更多的小伙伴能加入和我一起完善这方面的相关知识点。对知识库有贡献者可获得更多学习资源。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;🐱‍🚀C#/.NET/.NET Core相关技术常见面试题汇总，不仅仅为了面试而学习，更多的是查漏补缺、扩充知识面和大家共同学习进步。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2145479/o_221031161923_QQ%E5%9B%BE%E7%89%8720221101001736.png&#34; alt=&#34;C#.NET.NET Core面试宝典（基础版）&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🥇C#/.NET/.NET Core开发实战教程&lt;/h2&gt; &#xA;&lt;h3&gt;全面的.NET Core MongoDB入门到实战教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16797608.html&#34;&gt;MongoDB从入门到实战之MongoDB简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16804415.html&#34;&gt;MongoDB从入门到实战之MongoDB快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16838976.html&#34;&gt;MongoDB从入门到实战之Docker快速安装MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16840085.html&#34;&gt;MongoDB从入门到实战之MongoDB工作常用操作命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17020707.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（1）-后端项目框架搭建&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17020885.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（2）-Swagger框架集成&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17033785.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（3）-系统数据集合设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17157135.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（4）-Mongo数据仓储和工作单元模式封装&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17294749.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（5）-Mongo数据仓储和工作单元模式实操&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17157143.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（6）-Blazor介绍和快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17439106.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（7）-Blazor UI框架选型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17453162.html&#34;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（8）-Ant Design Blazor前端框架搭建&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;.NET Core NPOI实操教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/11588531.html&#34;&gt;.NET Core使用NPOI导出复杂Word详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/10513764.html&#34;&gt;.NET之NPOI Excel数据导出和批量导入功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/12501400.html&#34;&gt;.NET Core使用NPOI导出复杂，美观的Excel详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/12593165.html&#34;&gt;.NET Core使用NPOI将Excel中的数据批量导入到MySQL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;.NET高级调试系列-WinDbg调试实战教程&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;文章源于一线码农大佬，更多高级调试系列教程欢迎关注大佬的GitHub仓库&lt;a href=&#34;https://github.com/ctripxchuang/dotnetfly&#34;&gt;dotnetfly👉&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【2023年03月31日 周五】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496819&amp;amp;idx=1&amp;amp;sn=48c91cbbc6ecd7783aac2308cf89110c&amp;amp;chksm=a69b873e91ec0e287b0c4cdd3112956271360e78a5c1f6a7f03207299c1719de03f9effbc77d&amp;amp;token=1657656528&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某手术室行为信息系统 内存泄露分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年03月30日 周四】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496797&amp;amp;idx=1&amp;amp;sn=76c6a17a86b1333555ce278b91b8121b&amp;amp;chksm=a69b871091ec0e06f73e37a692448b605c7cd94a0a14290caff4b255b33d973dafbd3c4198c2&amp;amp;token=1657656528&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某传感器采集系统 线程爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年03月26日 周日】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496710&amp;amp;idx=1&amp;amp;sn=2c2027c3020c0de6c9161920c4f9bb14&amp;amp;chksm=a69b874b91ec0e5d1ec0ed0b7124682944308f1c349851ad37e60f7fbbc156621f23a4f93ac5&amp;amp;token=143112780&amp;amp;lang=zh_CN#rd&#34;&gt;记一次.NET某企业ERP网站系统 崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年03月23日 周四】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496658&amp;amp;idx=1&amp;amp;sn=f7e019eeef2cb478c84223c2c6841940&amp;amp;chksm=a69b809f91ec0989d649d3f9fbc59030713373adbd77874c9147388a5bb83b06a46759b9f5ab&amp;amp;token=143112780&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某医疗住院系统 崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年03月13日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496599&amp;amp;idx=1&amp;amp;sn=b3673090594341e35703de20fadb72f2&amp;amp;chksm=a69b80da91ec09cc509d4665233b9b1340f519070e0a3226a085fe39d24113dd39c9bca3f5db&amp;amp;token=272209279&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET某汽车零件采集系统 卡死分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年02月27日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496557&amp;amp;idx=1&amp;amp;sn=65252d960b0e22a4c19e2b9696671440&amp;amp;chksm=a69b802091ec0936ebd715a4311db47797a8390a4c8ad0f3892bdd6a3f1afd9d6f658c0ff5e0&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET某家装ERP 内存暴涨分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年02月27日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496557&amp;amp;idx=1&amp;amp;sn=65252d960b0e22a4c19e2b9696671440&amp;amp;chksm=a69b802091ec0936ebd715a4311db47797a8390a4c8ad0f3892bdd6a3f1afd9d6f658c0ff5e0&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET某家装ERP 内存暴涨分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年02月21日 周二】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496507&amp;amp;idx=2&amp;amp;sn=2f78f01f01754259b9b059f30429bfd6&amp;amp;chksm=a69b807691ec0960db2f7adecf19e8466ef270ccb91b7f12569a6f978def54b05e65c0da0d4e&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某医保平台 CPU爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2023年02月13日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496418&amp;amp;idx=1&amp;amp;sn=f47f12b9aa479de45c5ea9bfd09f14ca&amp;amp;chksm=a69b81af91ec08b9d86ac97b14d0a5ae130f55d7204117cfe3659037dd417a92dbe5af3169fe&amp;amp;token=246753473&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某游戏网站 CPU爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年12月19日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495965&amp;amp;idx=1&amp;amp;sn=2087fb7e30e536bff7aee6f2928ae86c&amp;amp;chksm=a69b825091ec0b46e8a44099ded5a83b2a8d0ab88b58f6765d262f8eafd49dac5a80e3559f26&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&#34;&gt;记一次.NET 某安全生产系统 CPU爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年12月16日 周五】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495943&amp;amp;idx=2&amp;amp;sn=c2e34e949edd8cb24c1a275f71e98891&amp;amp;chksm=a69b824a91ec0b5c727fdaa67e3f7a11a135d97eef00c19eddce537a06260314f23be10efd6b&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某工控MES程序 崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年12月05日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495897&amp;amp;idx=1&amp;amp;sn=2f81da9c5a6a3efc3433229469a2a908&amp;amp;chksm=a69b839491ec0a8272d3ecabd1ca2dd308beeb4127b40960a51e046a4be35a1ff019c66fb725&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某工控软件 内存泄露分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年12月02日 周五】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495866&amp;amp;idx=1&amp;amp;sn=9cc3c442b43855f0f8129b1c1911b2c2&amp;amp;chksm=a69b83f791ec0ae1b2d495dcbb8b334385b9f89d6c4bbee2e81188bb0e5a0fd792c4be1353ad&amp;amp;token=1751121168&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某电子厂OA系统 非托管内存泄露分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年11月18日 周五】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495763&amp;amp;idx=1&amp;amp;sn=f1ff8b53898edfc14d38e65e6028f977&amp;amp;chksm=a69b831e91ec0a0889913af94ba6ea92025eb64dab4201962ab47d5a2926294bbe25796ddc82&amp;amp;token=1946171397&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某自动化采集软件 崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年11月14日 周一】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495731&amp;amp;idx=1&amp;amp;sn=289d6388bedc172fe6a2438e4304b99a&amp;amp;chksm=a69b837e91ec0a685f15f9dce9d843cc4b186542d1c1a156fc9272bb53775c16438aac04c0a8&amp;amp;token=1946171397&amp;amp;lang=zh_CN#rd&#34;&gt;记一次.NET某工控图片上传CPU爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年11月04日 周五】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495663&amp;amp;idx=1&amp;amp;sn=eacf1e9e70184ce6349e90fa7bb63429&amp;amp;chksm=a69b9ca291ec15b497d0442d7729ca9aeb8638ce79db32ac5c0dcc7c3513a57a0a0c1de3e670&amp;amp;token=1947614004&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某制造业 MES 系统崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年10月25日 周二】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495591&amp;amp;idx=1&amp;amp;sn=ffa939a902fbec5e961afe1fcb4b8347&amp;amp;chksm=a69b9cea91ec15fc82aaaefb5d54dd0f2b24dab1dc1762804000051841f61e8600ba81003068&amp;amp;token=730191575&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某医疗器械 程序崩溃分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年10月23日 周日】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495548&amp;amp;idx=1&amp;amp;sn=9f377a2c229981481a2af6eefd652a10&amp;amp;chksm=a69b9c3191ec1527596da4e18106e26e01ff678e4701c4ac1d2faff0a0b8e7a3dd46d02cfb1c&amp;amp;token=1362409699&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某娱乐聊天流平台 CPU 爆高分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年10月13日 周四】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495503&amp;amp;idx=1&amp;amp;sn=9b3066ad6b3f846ede84cb18a355f294&amp;amp;chksm=a69b9c0291ec15140121b12fddf4d5c9645f4ccc824ea1cbc27f16b2f9694f02d09e22b3b715&amp;amp;token=1362409699&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某企业OA后端服务 卡死分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【2022年10月11日 周二】&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495487&amp;amp;idx=1&amp;amp;sn=727e2a2d7afc15857e42c603b4d28114&amp;amp;chksm=a69b9c7291ec1564dadb868713b16b11587d53a56547c7dd0ccb8b74b5dbaaea1d044f2dd125&amp;amp;token=1007664770&amp;amp;lang=zh_CN#rd&#34;&gt;记一次 .NET 某电子病历 CPU 爆高分析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C#开发PACS、RIS、3D医学影像处理系统系列教程&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;文章源于博客园乔克灬叔叔，更多C#开发PACS、RIS、3D医学影像处理系统系列教程欢迎关注&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker&#34;&gt;乔克灬叔叔博客👉&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13646949.html&#34;&gt;C#开发PACS医学影像处理系统(一)：开发背景和功能预览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13650213.html&#34;&gt;C#开发PACS医学影像处理系统(二)：界面布局之菜单栏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13650330.html&#34;&gt;C#开发PACS医学影像处理系统(三)：界面布局之工具栏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13650514.html&#34;&gt;C#开发PACS医学影像处理系统(四)：界面布局之状态栏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13651660.html&#34;&gt;C#开发PACS医学影像处理系统(五)：查询病人信息列表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13665748.html&#34;&gt;C#开发PACS医学影像处理系统(六)：加载Dicom影像&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13666034.html&#34;&gt;C#开发PACS医学影像处理系统(七)：读取影像Dicom信息&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13666817.html&#34;&gt;C#开发PACS医学影像处理系统(八)：单元格变换&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13672042.htm&#34;&gt;C#开发PACS医学影像处理系统(九)：序列控件与拖拽&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13667467.html&#34;&gt;C#开发PACS医学影像处理系统(十)：Dicom影像下载策略与算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13677272.html&#34;&gt;C#开发PACS医学影像处理系统(十一)：Dicom影像挂片协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13677726.html&#34;&gt;C#开发PACS医学影像处理系统(十二)：绘图处理之图形标记&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13679635.html&#34;&gt;C#开发PACS医学影像处理系统(十三)：绘图处理之病灶测量&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13683841.html&#34;&gt;C#开发PACS医学影像处理系统(十四)：处理Dicom影像窗宽窗位&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13686618.html&#34;&gt;C#开发PACS医学影像处理系统(十五)：Dicom影像交叉定位线算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13690213.html&#34;&gt;C#开发PACS医学影像处理系统(十六)：2D处理之影像平移和缩放&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13690483.html&#34;&gt;C#开发PACS医学影像处理系统(十七)：2D处理之影像旋转和翻转&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13690710.html&#34;&gt;C#开发PACS医学影像处理系统(十八)：Dicom使用LUT色彩增强和反色&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Uncle-Joker/p/13690862.html&#34;&gt;C#开发PACS医学影像处理系统(十九)：Dicom影像放大镜&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ASP.NET Core Blazor入门到实战教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/aspnet/core/mvc/views/razor?view=aspnetcore-6.0&#34;&gt;ASP.NET Core的Razor语法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17439106.html&#34;&gt;值得推荐的Blazor UI组件库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/?view=aspnetcore-7.0&#34;&gt;微软官方教程ASP.NET Core Blazor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17157143.html&#34;&gt;全面的ASP.NET Core Blazor简介和快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/ittranslator/p/a-beginners-guide-to-blazor-server-and-webassembly-applications.html&#34;&gt;Blazor Server和WebAssembly应用程序入门指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/zh-cn/learn/aspnet/blazor-tutorial/run&#34;&gt;Blazor教程 - 生成第一个 Blazor 应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/tutorials/build-a-blazor-app?view=aspnetcore-6.0&amp;amp;pivots=server&#34;&gt;生成Blazor待办事项列表应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/tutorials/build-a-blazor-app?view=aspnetcore-6.0&amp;amp;pivots=server&#34;&gt;使用Blazor的ASP.NET Core SignalR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/paths/build-web-apps-with-blazor/?view=aspnetcore-6.0&#34;&gt;使用 Blazor 构建 Web 应用程序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/blazor-introduction/&#34;&gt;使用 Blazor 进行 Web 开发的简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/build-blazor-webassembly-visual-studio-code/&#34;&gt;使用 Blazor 生成 Web 应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/interact-with-data-blazor-web-apps/&#34;&gt;与 Blazor Web 应用中的数据交互&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/use-pages-routing-layouts-control-blazor-navigation/&#34;&gt;使用页面、路由和布局改进 Blazor 导航&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/blazor-improve-how-forms-work/&#34;&gt;改进表单和验证在 Blazor Web 应用中的工作方式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/blazor-build-rich-interactive-components/&#34;&gt;在 Blazor Web 应用中构建丰富的交互式组件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/blazor-build-reusable-components/&#34;&gt;使用 Blazor 生成可重用组件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/training/modules/dotnet-connect-four/&#34;&gt;使用 Blazor 生成四子棋游戏&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ASP.NET Core从壹开始微服务[DDD]教程&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;文章源于博客园老张的哲学，更多.NET相关优质文章教程欢迎关注&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/&#34;&gt;老张的哲学👉&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9806335.html&#34;&gt;从壹开始微服务 [ DDD ] 之一 ║ D3模式设计初探 与 我的计划书&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9832684.html&#34;&gt;从壹开始微服务 [ DDD ] 之二 ║ DDD入门 &amp;amp; 项目结构粗搭建&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9845573.html&#34;&gt;从壹开始微服务 [ DDD ] 之三 ║ 简单说说：领域、子域、限界上下文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9872450.html&#34;&gt;从壹开始微服务 [ DDD ] 之四 ║让你明白DDD的小故事 &amp;amp; EFCore初探&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9888502.html&#34;&gt;从壹开始微服务 [ DDD ] 之五 ║聚合：实体与值对象 （上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9916785.html&#34;&gt;从壹开始微服务 [ DDD ] 之六 ║聚合 与 聚合根 （下）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9931304.html&#34;&gt;从壹开始微服务 [ DDD ] 之七 ║项目第一次实现 &amp;amp; CQRS初探&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9962759.html&#34;&gt;从壹开始微服务 [ DDD ] 之八 ║剪不断理还乱的 值对象和Dto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/9984740.html&#34;&gt;从壹开始微服务 [ DDD ] 之九 ║从军事故事中，明白领域命令验证（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/10000662.html&#34;&gt;从壹开始微服务 [ DDD ] 之十 ║领域驱动【实战篇】：命令总线Bus分发（一）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/10025913.html&#34;&gt;从壹开始微服务 [ DDD ] 之十一 ║ 基于源码分析，命令分发的过程（二）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/10059878.html&#34;&gt;从壹开始微服务 [ DDD ] 之十二 ║ 核心篇【下】：事件驱动EDA 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/laozhang-is-phi/p/10093444.html&#34;&gt;从壹开始微服务 [ DDD ] 之终篇 ║当事件溯源&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏗️C#/.NET/.NET Core优秀项目框架&lt;/h2&gt; &#xA;&lt;h3&gt;C#/.NET/.NET Core项目宝库&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dotNetTreasury&#34;&gt;🎁C#/.NET/.NET Core项目宝库组织&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;为.NET开发者提供一个寻找优秀C#/.NET/.NET Core项目和框架的入口，通过了解和对比更多的项目和框架来选择最适合我们自己学习、工作开发的一套项目或者框架。优秀的项目不应该被埋没，欢迎大家一起加入这个组织共同完善、发展.NET社区！！这些都是非常优秀的项目和框架，排名不分先后，欢迎前往项目原址Star💖。大家可以在该&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/5&#34;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;中留言，我会定期收录到项目宝库组织中。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;C#/.NET/.NET Core优秀项目和框架Issues&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/5&#34;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;为.NET开源勇士提供一个推荐自己优秀项目和框架的Issues，大家可以把自己写的或者感觉不错的C#/.NET/.NET Core项目or框架链接地址和描述提交到在这里，提供给广大.NET开发者们参考、学习和使用，并且我会定期在&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectMonthly.md&#34;&gt;公众号推广和分享👀&lt;/a&gt;这些优秀项目和框架（注意：排名不分先后，都是十分优秀的开源框架和项目💖）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;C#/.NET/.NET Core优秀项目和框架精选&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectPicks.md&#34;&gt;🔔C#/.NET/.NET Core优秀项目和框架精选&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;帮助开发者发现功能强大、性能优越、创新前沿、简单易用的C#/.NET/.NET Core优秀项目和框架，无论你是寻找灵感、学习新技术、改进代码质量，还是想拓展自己的技术视野，都能为你提供有价值的参考和指导。关注优秀项目和框架精选能让你及时了解C#、.NET和.NET Core领域的最新动态和最佳实践，提高开发效率和质量。坑已挖，欢迎大家踊跃提交PR或者在该&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/5&#34;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;中留言（&lt;strong&gt;让优秀的项目和框架不被埋没&lt;/strong&gt;），我会定期收录、&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectMonthly.md&#34;&gt;公众号推广和分享👀&lt;/a&gt;（注意：排名不分先后，都是十分优秀的开源项目和框架，每周定期更新分享💖）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧱设计模式&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;设计模式（Design Pattern） 是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码更容易被他人理解并且保证代码可靠性。 面向对象结合设计模式，才能真正体会到程序变得可维护、可复用、可扩展、灵活性好。设计模式对于程序员而言并不陌生，每个程序员在编程时都会或多或少地接触到设计模式。无论是在大型程序的架构中，亦或是在源码的学习中，设计模式都扮演着非常重要的角色。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ddooo.com/softdown/109592.htm&#34;&gt;大话设计模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/me115/design_patterns&#34;&gt;图说设计模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kancloud.cn/sstd521/design/193489&#34;&gt;设计模式之禅（第2版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/lovelion/article/details/17517213&#34;&gt;史上最全设计模式导学目录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlfredTheBest/Design-Pattern&#34;&gt;design pattern 包教不包会&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://refactoringguru.cn/&#34;&gt;免费在线学习代码重构和设计模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sheng-jie/Design-Pattern&#34;&gt;C#常见的23种设计模式（含源码）圣杰&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdisonChou/DesignPattern.Samples.CSharp&#34;&gt;23种面向对象设计模式示例代码（C#实现）Edison Zhou&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🛠️数据结构&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;数据结构是一种组织和存储数据的方式，它用于管理和操作数据的集合。数据结构可以定义为不同数据元素之间的关系，以及在存储和访问数据时使用的算法。它涉及到如何存储、组织和管理数据，以便能够高效地进行检索和操作。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;数据结构-维基百科&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/547679051&#34;&gt;八种数据结构分类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/356047870&#34;&gt;数据结构知识点大汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/138523723&#34;&gt;十三张图带你彻底了解所有数据结构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧮逻辑算法&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;逻辑算法是一种基于逻辑推理和结构化思维的算法设计方法。它是指通过逻辑关系和规则来解决问题的算法。逻辑算法通常使用形式化的逻辑语言和符号进行描述和表达，以便于机器或计算机程序的理解和执行。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;逻辑算法提升&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.acwing.com/problem/&#34;&gt;AcWing在线题库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode-cn.com/&#34;&gt;在线算法刷题平台-力扣&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nowcoder.com/exam/intelligent?questionJobId=10&amp;amp;tagId=21000&#34;&gt;牛客网基础算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bookstack.cn/read/hello-algorithm/README.md&#34;&gt;小浩算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hello-algo.com/&#34;&gt;Hello 算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codetop.cc/home&#34;&gt;CodeTop企业题库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labuladong.gitee.io/algo/&#34;&gt;labuladong的算法小抄&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/367994409&#34;&gt;程序员必须掌握的算法有哪些？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C#常见逻辑算法&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C#经典十大排序算法 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/z_LPZ6QUFNJcwaEw_H5qbQ&#34;&gt;C#冒泡排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/B1QdqyP8HQgOv8tlSujtog&#34;&gt;C#选择排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/YEregZ_GOGgEltGUJadycw&#34;&gt;C#插入排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17689566.html&#34;&gt;C#希尔排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17750516.html&#34;&gt;C#归并排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/7vms2Q4s7DBdFs31w4cfVA&#34;&gt;C#快速排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/zS_ESKzlg05ICqFPIaePkg&#34;&gt;C#堆排序算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;C#计数排序算法&lt;/li&gt; &#xA;   &lt;li&gt;C#桶排序算法&lt;/li&gt; &#xA;   &lt;li&gt;C#基数排序算法&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;C#经典查找算法 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;C#二分查找算法&lt;/li&gt; &#xA;   &lt;li&gt;C#线性查找算法&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/%E7%AE%97%E6%B3%95/C%23%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98.md&#34;&gt;C#经典算法面试题汇总&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🍇关系型数据库（SQL）&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;关系型数据库（SQL）库指的是使用关系模型（二维表格模型）来组织数据的数据库，是一种使用结构化查询语言（Structured Query Language，简称SQL）进行数据管理和操作的数据库类型。它采用表格的形式来组织和存储数据，通过定义表之间的关系来建立数据之间的联系。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;SQL和数据库相关&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://xuesql.cn/&#34;&gt;自学SQL网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%20%E8%AF%AD%E6%B3%95.html#%E4%B8%80%E3%80%81%E5%9F%BA%E7%A1%80&#34;&gt;SQL语法基础&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86.html#%E4%B8%80%E3%80%81%E4%BA%8B%E5%8A%A1&#34;&gt;数据库系统原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://c.biancheng.net/view/6490.html&#34;&gt;关系型数据库是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nowcoder.com/exam/oj?tab=SQL%E7%AF%87&amp;amp;topicId=199&#34;&gt;牛客网在线SQL练习&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14353082.html&#34;&gt;关系型数据库概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/h7y0UwFowIOoMh2UzN4iuA&#34;&gt;7种系统设计中的数据库范式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/lIrxpuY340zV2Nj5LxcKzQ&#34;&gt;SQL中的各种连接的区别总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runoob.com/mysql/mysql-tutorial.html&#34;&gt;MySQL教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3cschool.cn/mysql/mysql-tutorial.html&#34;&gt;MySQL入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mysqlzh.com/doc/124.html&#34;&gt;MySQL中文文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/CS-Base#open_book%E5%9B%BE%E8%A7%A3mysql&#34;&gt;图解图解MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Gao-yubo/p/15525872.html&#34;&gt;MySQL知识汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shlomi-noach/awesome-mysql&#34;&gt;Awesome MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/tWGdh045_ayz07fYhDgakw&#34;&gt;MySQL基础快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL.html#%E4%B8%80%E3%80%81%E7%B4%A2%E5%BC%95&#34;&gt;MySQL基础知识汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html&#34;&gt;21分钟MySQL入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ZoCZLG3o3AZBDSO1y3nbmw&#34;&gt;顺丰面试：MySQL十连击&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cAJg_MZP_xI853wLdWAE7A&#34;&gt;MySQL中，21个写SQL的好习惯&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/eJepG60ll0gaEPVb1IAKVA&#34;&gt;MySQL夺命16问，你能回答出几个？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaywcjlove/mysql-tutorial&#34;&gt;MySQL入门教程（MySQL tutorial book）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.codinglabs.org/articles/theory-of-mysql-index.html&#34;&gt;MySQL索引背后的数据结构及算法原理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Microsoft SQL Server&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3cschool.cn/sqlserver/sqlserver-1p6728kn.html&#34;&gt;SQL Server教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/sql/sql-server/?view=sql-server-ver15&#34;&gt;SQL Server 技术文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/sql/?view=sql-server-ver15&#34;&gt;Microsoft SQL 文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/CareySon/archive/2012/05/08/2489748.html&#34;&gt;SQL Server文章目录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/sql/ssms/quickstarts/ssms-connect-query-sql-server?view=sql-server-ver15&#34;&gt;SSMS管理工具快速入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PostgreSQL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runoob.com/postgresql/postgresql-tutorial.html&#34;&gt;PostgreSQL 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.postgres.cn/v2/document&#34;&gt;PostgreSQL中文文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.postgres.cn/docs/11/&#34;&gt;PostgreSQL 11.2 手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.postgres.cn/docs/12/&#34;&gt;PostgreSQL 12.2 手册&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Oracle&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3cschool.cn/oraclejc/&#34;&gt;Oracle入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oraclejsq.com/article/010100110.html&#34;&gt;Oracle基础教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1u54y1G7xq?spm_id_from=333.337.search-card.all.click&#34;&gt;Oracle快速入门视频教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🍉非关系型数据库（NoSQL）&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;非关系型数据库又被称为 NoSQL（Not Only SQL )，意为不仅仅是 SQL。指的是与传统关系型数据库（RDBMS）相对应的一类数据库管理系统。与关系型数据库不同的是非关系型数据库不使用传统的表格和行列结构来存储数据，而是采用更灵活的数据模型，例如键值对、文档、列族、图形等形式。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;NoSQL相关概念&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14353082.html&#34;&gt;非关系型数据库概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GUnXVSszDZ9vpPQG2BS3UA&#34;&gt;常见的 NoSQL 数据库有哪些？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Redis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/CS-Base#open_book-%E5%9B%BE%E8%A7%A3redis&#34;&gt;Redis图解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.redis.com.cn/documentation.html&#34;&gt;Redis中文文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kRpdvtRajvs9DuDt7UHGpQ&#34;&gt;Redis全景解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://redisbook.com/&#34;&gt;Redis设计与实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://redisdoc.com/&#34;&gt;Redis命令参考&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis.html#%E4%B8%80%E3%80%81%E6%A6%82%E8%BF%B0&#34;&gt;Redis基础知识汇总&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CiFSsOx_g9g-0PUGXDuvcQ&#34;&gt;一天吃透Redis面试八股文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huangz1990/annotated_redis_source&#34;&gt;带有详细注释的 Redis 2.6 代码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huangz1990/redis-3.0-annotated&#34;&gt;带有详细注释的 Redis 3.0 代码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3Fmv7h5p2QDtLxc9n1dp5A&#34;&gt;面试前必须要知道的Redis面试题&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MongoDB&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mongoing.com/&#34;&gt;MongoDB中文社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/&#34;&gt;MongoDB官方手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mongoing.com/archives/docs/mongodb%e5%88%9d%e5%ad%a6%e8%80%85%e6%95%99%e7%a8%8b/mongodb%e9%ab%98%e9%a2%91%e9%9d%a2%e8%af%95%e9%a2%98&#34;&gt;MongoDB高频面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/ysgstudyhard/da6e0c/eetrswgetml77m1h&#34;&gt;95道MongoDB面试题详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16797608.html&#34;&gt;MongoDB从入门到实战之MongoDB简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16804415.html&#34;&gt;MongoDB从入门到实战之MongoDB快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16838976.html&#34;&gt;MongoDB从入门到实战之Docker快速安装MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16840085.html&#34;&gt;MongoDB从入门到实战之MongoDB工作常用操作命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16970210.html&#34;&gt;MongoDB安全加固，防止数据库攻击删除勒索威胁&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Memcached&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runoob.com/memcached/memcached-tutorial.html&#34;&gt;Memcached入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.php.cn/course/list/55.html&#34;&gt;Memcached免费学习视频教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡系统设计&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer&#34;&gt;系统设计入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DocsHome/microservices&#34;&gt;微服务：从设计到部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qiurunze123/miaosha&#34;&gt;秒杀系统设计与实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zaiyunduan123/Java-Summarize/raw/master/notes/scene/Scene-Design.md&#34;&gt;系统与架构设计&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻操作系统&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/Linux/Linux.md&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CyC2018/CS-Notes/raw/master/notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E7%9B%AE%E5%BD%95.md&#34;&gt;计算机操作系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/CS-Base#open_book%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F&#34;&gt;图解计算机操作系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1YE411D7nH?from=search&amp;amp;seid=13464543417132613798&amp;amp;spm_id_from=333.337.0.0&#34;&gt;王道计算机考研操作系统视频教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🛰️计算机网络&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/HTTP/HTTP.html#%E4%B8%80-%E3%80%81%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5&#34;&gt;HTTP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Socket/Socket.html#%E4%B8%80%E3%80%81i-o-%E6%A8%A1%E5%9E%8B&#34;&gt;Socket&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24860273&#34;&gt;TCP和UDP的区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/7d6853140e13&#34;&gt;什么是RPC？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E7%9B%AE%E5%BD%95.html#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5&#34;&gt;计算机网络基础&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/CS-Base#open_book%E5%9B%BE%E8%A7%A3%E7%BD%91%E7%BB%9C&#34;&gt;图解计算机网络&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/XY3TPLnr3bNIij_f3e7W1g&#34;&gt;学习网络技术的方法和路径&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;☁️容器技术&lt;/h2&gt; &#xA;&lt;h3&gt;Kubernetes（K8s）&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubernetes是容器集群管理系统，是一个开源的平台，可以实现容器集群的自动化部署、自动扩缩容、维护等功能。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kubernetes.org.cn/&#34;&gt;Kubernetes中文社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/162928436&#34;&gt;一文了解 Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16706198.html&#34;&gt;Kubernetes（K8S）是什么?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/329365548/answer/1545488275&#34;&gt;Kubernetes(K8s) 解决了哪些问题？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Docker是一个开源的应用容器引擎，基于Golang 语言开发，可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 服务器。容器是一个沙箱机制，相互之间不会有影响（类似于我们手机上运行的 app），并且容器开销是很低的。Docker 是一个供开发人员和系统管理员构建、运行和与容器共享应用程序的平台。使用容器部署应用程序称为容器化。容器并不是新事物，但它们用于轻松部署应用程序却是新鲜的。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/187505981&#34;&gt;什么是Docker？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker官方文档教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.org.cn/&#34;&gt;Docker中文社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuepress.mirror.docker-practice.com/&#34;&gt;Docker从入门到实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/RrMkeIWO0PePhXf3pTjsRQ&#34;&gt;Docker容器入门详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15559341.html&#34;&gt;全面的Docker快速入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16456586.html&#34;&gt;Docker日常工作常用命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15585714.html&#34;&gt;十本你不容错过的Docker入门到精通书籍推荐&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15395980.html&#34;&gt;CentOS 8.4安装Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16472375.html&#34;&gt;Ubuntu 20.04安装Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/15468591.html&#34;&gt;Windows10 Docker安装详细教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16653879.html&#34;&gt;Docker安装MySQL并使用Navicat连接 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16653903.html&#34;&gt;Docker安装Redis并使用Another Redis Desktop Manager连接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/16653882.html&#34;&gt;Docker安装MongoDB并使用Navicat连接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17455612.html&#34;&gt;Docker安装MS SQL Server并使用Navicat远程连接&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;服务编排&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/swarm&#34;&gt;Docker Swarm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mesos-cn.gitbooks.io/mesos-cn/content/OverView/Mesos-Architecture.html&#34;&gt;Mesos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧰DevOps、CI&amp;amp;CD自动化工具&lt;/h2&gt; &#xA;&lt;h3&gt;DevOps&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;DevOps（英文Development和Operations的组合）是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运营工作必须紧密合作。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/91371659&#34;&gt;DevOps到底是什么意思？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14274932.html&#34;&gt;DevOps，CI，CD，自动化简单介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kubernetes.org.cn/9538.html&#34;&gt;2021年25佳DevOps工具&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CI&amp;amp;CD构建、部署、自动化工具&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/248508683&#34;&gt;21个自动化部署工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1346876&#34;&gt;7个CI / CD(持续集成和持续部署)工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;常用持续集成与部署工具 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;Github Actions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://azure.microsoft.com/zh-cn/services/devops/pipelines/&#34;&gt;Azure Pipelines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;Circle CI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/teamcity&#34;&gt;TeamCity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;越来越多的工程团队正在采用敏捷开发，推动更短，更快的发布周期。代码库增长和创建新生产构建的频率导致&lt;a href=&#34;https://cloud.tencent.com/product/coding-ci?from=10680&#34;&gt;持续集成&lt;/a&gt;和&lt;a href=&#34;https://cloud.tencent.com/product/coding-cd?from=10680&#34;&gt;持续部署&lt;/a&gt;/交付工具的兴起。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌍Web前端开发&lt;/h2&gt; &#xA;&lt;h3&gt;Web前端自学&amp;amp;面试宝典&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v3.cn.vuejs.org/&#34;&gt;Vue官网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lucifer.ren/fe-interview/#/?id=%E5%A4%A7%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8-%E5%9B%BE%E8%A7%A3%E5%89%8D%E7%AB%AF&#34;&gt;大前端面试宝典&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shengxinjing.cn/&#34;&gt;大圣编程自学网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CurrentVastStars/front-end-roadmap&#34;&gt;前端学习路线图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yuchengkai.cn/&#34;&gt;前端进阶之道&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.qianguyihao.com/#%E5%89%8D%E8%A8%80&#34;&gt;千古前端图文教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haizlin/fe-interview&#34;&gt;前端3+1面试题库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runoob.com/&#34;&gt;HTML/CSS菜鸟教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wangdoc.com/typescript/intro&#34;&gt;TypeScript使用教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web前端常见面试题&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GICbiyJpINrHZ41u_4zT-A&#34;&gt;HTTP1.0、HTTP1.1 和 HTTP2.0 的区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HTTP响应状态码 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1xx：指示信息--表示请求已接收，继续处理。&lt;/li&gt; &#xA;   &lt;li&gt;2xx：成功--表示请求已被成功接收、理解、接受。&lt;/li&gt; &#xA;   &lt;li&gt;3xx：重定向--要完成请求必须进行更进一步的操作。&lt;/li&gt; &#xA;   &lt;li&gt;4xx：客户端错误--请求有语法错误或请求无法实现。&lt;/li&gt; &#xA;   &lt;li&gt;5xx：服务器端错误--服务器未能实现合法的请求。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/33889997&#34;&gt;TCP/IP协议详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/cswiki/p/14429730.html&#34;&gt;经典面试题：在浏览器地址栏输入一个URL后回车，背后发生了什么?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Jet_Lover/article/details/115637795&#34;&gt;最新前端面试中常见的面试题（附答案）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844903776512393224&#34;&gt;中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844903928442667015&#34;&gt;面试分享：两年工作经验成功面试阿里P6总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844904115428917255&#34;&gt;写给女朋友的中级前端面试秘籍（含详细答案，15k级别）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844903809206976520&#34;&gt;中高级前端面试-JavaScript手写代码无敌秘籍&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web前端优质资源和文章汇总&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide/issues/12&#34;&gt;适合后端程序员的前端框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Aky1uQe3FnSlEy3YwjEWTw&#34;&gt;开源实用的大屏数据展示模板&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FrontEndGitHub/FrontEndGitHub&#34;&gt;GitHub最全的前端资源汇总仓库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nealyang/PersonalBlog/issues/48&#34;&gt;一个优秀的前端都应该阅读这些文章&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧲版本控制工具&lt;/h2&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rogerdudler.github.io/git-guide/index.zh.html&#34;&gt;Git简明指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/521xueweihan/git-tips&#34;&gt;Git的奇技淫巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gitref.justjavac.com/&#34;&gt;Git参考手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://backlogtool.com/git-guide/cn/&#34;&gt;猴子都能懂的Git入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;&gt;Git教程-廖雪峰&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/521xueweihan/git-tips#git-%E7%9A%84%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7see_no_evil&#34;&gt;Git的奇技淫巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/IKczx06dinmmGOkVKDaN3g&#34;&gt;工作中必备的12个Git命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/13128633.html&#34;&gt;最全面SourceTree使用教程详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14282848.html&#34;&gt;Git开发、发布、缺陷分离模型概述&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/14413914.html&#34;&gt;VS Code使用Git可视化管理源代码详细教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/JTs66P2gIPr7LnkZ43y8dA&#34;&gt;Git入门图文教程(1.5W字40图)--深入浅出、图文并茂&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/Can-daydayup/p/17416495.html&#34;&gt;在开发过程中使用git rebase还是git merge，优缺点分别是什么？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SVN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://svnbook.red-bean.com/nightly/zh/index.html&#34;&gt;Subversion版本控制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runoob.com/svn/svn-tutorial.html&#34;&gt;SVN教程-菜鸟教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1mW411M7yR?p=5&#34;&gt;SVN版本控制软件视频教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🙇面试须知&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/121555573&#34;&gt;面试工作流程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atian25/blog/issues/3&#34;&gt;写简历的技巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nowcoder.com/interview/center?entranceType=%25E9%259D%25A2%25E8%25AF%2595%25E7%25BB%258F%25E9%25AA%258Ctab&#34;&gt;牛客网面试经验&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nowcoder.com/interview/ai/index?entranceType=AI%25E6%25A8%25A1%25E6%258B%259F%25E9%259D%25A2%25E8%25AF%2595tab&#34;&gt;牛客网AI模拟面试&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/137490246&#34;&gt;程序员面试都需要准备什么?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/65287910&#34;&gt;程序员面试时如何做自我介绍?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yifeikong/reverse-interview-zh&#34;&gt;技术面试最后反问面试官的话&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/aobing/p/12117044.html&#34;&gt;大厂面试,面试官看了直呼想要的简历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lietoumai/Awesome-offer&#34;&gt;关于面试/谈Offer/程序员职场生涯等&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StartInterview/Awesome-Tech-Words&#34;&gt;程序员写简历必须要注意的技术词汇拼写&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CodingDocs/advanced-programmer#%E9%9D%A2%E8%AF%95%E5%BF%85%E7%9F%A5&#34;&gt;程序员应该有的一些好习惯+面试必知事项&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/VxL7Lr_FCr37gJu_vGZNCw&#34;&gt;面试常见的10个问题(成功率高达90%的回答技巧)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HrbIlWDY7oqFOWDonKD89A&#34;&gt;专科学历的程序员想要面试获胜必须要做的两个点&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👩‍💻简历模板&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;项目描述&lt;/th&gt; &#xA;   &lt;th&gt;项目地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;codecv：一款使用 markdown 制作简历的工具，它可以将你编写的markdown 简历转换为 PDF，支持多种模板，完全免费。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmenlei/codecv&#34;&gt;https://github.com/acmenlei/codecv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ResumeSample：程序员简历模板系列，包括PHP程序员简历模板、iOS程序员简历模板、Android程序员简历模板、Web前端程序员简历模板、Java程序员简历模板、C/C++程序员简历模板、NodeJS程序员简历模板、架构师简历模板以及通用程序员简历模板。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/geekcompany/ResumeSample&#34;&gt;https://github.com/geekcompany/ResumeSample&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown-Resume：用 markdown 语法来写的简历模版，非常简洁通用。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/CyC2018/Markdown-Resume&#34;&gt;https://github.com/CyC2018/Markdown-Resume&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;awesome-resume：程序员简历例句，程序员简历范例，简历模版。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/resumejob/awesome-resume&#34;&gt;https://github.com/resumejob/awesome-resume&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DeerResume：好用的MarkDown在线简历工具，可在线预览、编辑、设置访问密码和生成PDF。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/geekcompany/DeerResume&#34;&gt;https://github.com/geekcompany/DeerResume&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;markdown-resume：在线简历排版工具，支持切换 4 种模版、自定义和导出功能（支持Markdown和富文本的在线简历排版工具）。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mdnice/markdown-resume&#34;&gt;https://github.com/mdnice/markdown-resume&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;best-resume-ever：快速轻松制作多份精美简历，打造您有史以来最好的简历！ 用Vue和LESS制作。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/salomonelli/best-resume-ever&#34;&gt;https://github.com/salomonelli/best-resume-ever&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;awesome-resume-for-chinese：适合中文的简历模板收集。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dyweb/awesome-resume-for-chinese&#34;&gt;https://github.com/dyweb/awesome-resume-for-chinese&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;resume：在线简历生成器。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/visiky/resume&#34;&gt;https://github.com/visiky/resume&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown-Resume-Template：BAT程序员自己的简历模板分享出来了 。技术简历追求简单明了，避免没有必要的花哨修饰，大家可以fork到自己仓库中，基于这个模板进行修改。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/youngyangyang04/Markdown-Resume-Template&#34;&gt;https://github.com/youngyangyang04/Markdown-Resume-Template&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resume-template-for-Coder：适合程序员的简历模板。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/byoungd/Resume-template-for-Coder&#34;&gt;https://github.com/byoungd/Resume-template-for-Coder&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;冷熊简历：是一款在线 MarkDown 简历书写工具，支持基本的 markdown 语法。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://cv.ftqq.com/?fr=github&#34;&gt;http://cv.ftqq.com/?fr=github&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧭宝藏指南&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/skill-map&#34;&gt;程序员技能图谱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trending&#34;&gt;Github-Trending&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://markdown.com.cn/basic-syntax/&#34;&gt;Markdown语法教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jobbole/awesome-programming-books&#34;&gt;经典编程书籍大全&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liyupi/free-programming-resources&#34;&gt;免费的编程资源大全&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fangzesheng/free-api&#34;&gt;免费的接口服务收集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MyBigKnowledgeBase/Awesome-Design-Tools&#34;&gt;Awesome-Design-Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/free-programming-books-zh_CN&#34;&gt;免费的计算机编程类中文书籍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shimohq/chinese-programmer-wrong-pronunciation&#34;&gt;中国程序员容易发音错误的单词&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/toutiaoio/awesome-architecture&#34;&gt;架构师技术图谱，助你早日成为架构师&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/chinese-independent-developer&#34;&gt;中国独立开发者项目列表 -- 分享大家都在做什么&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/Docsify-Guide&#34;&gt;使用Typora+Docsify打造最强、最轻量级的个人&amp;amp;团队文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✈️社区组织&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitstar-ranking.com/organizations&#34;&gt;Organizations Ranking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotNetTreasury&#34;&gt;dotNetTreasury&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aspnet&#34;&gt;ASP.NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft&#34;&gt;Microsoft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MicrosoftDocs&#34;&gt;Microsoft Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnetcore&#34;&gt;.NET Core Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NewLifeX&#34;&gt;新生命开发团队&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet&#34;&gt;.NET Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/App-vNext&#34;&gt;App vNext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/dotnetchina&#34;&gt;dotNET China&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet-architecture&#34;&gt;.NET Application Architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&#34;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉𓆈𓃻𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉𓃲𓃟𓃠𓃗𓃵𓆉𓇼𓆡𓆜𓆉𓃹𓃡𓃟𓃵𓆏𓅦𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DapperLib/Dapper</title>
    <updated>2023-10-15T01:42:35Z</updated>
    <id>tag:github.com,2023-10-15:/DapperLib/Dapper</id>
    <link href="https://github.com/DapperLib/Dapper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dapper - a simple object mapper for .Net&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dapper - a simple object mapper for .Net&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/StackExchange/dapper&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/8rbgoxqio76ynj4h?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;Located at &lt;a href=&#34;https://dapperlib.github.io/Dapper/&#34;&gt;dapperlib.github.io/Dapper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;MyGet Pre-release feed: &lt;a href=&#34;https://www.myget.org/gallery/dapper&#34;&gt;https://www.myget.org/gallery/dapper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;NuGet Stable&lt;/th&gt; &#xA;   &lt;th&gt;NuGet Pre-release&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;   &lt;th&gt;MyGet&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;Dapper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;Dapper.EntityFramework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.EntityFramework&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;Dapper.EntityFramework.StrongName&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.EntityFramework.StrongName&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;Dapper.Rainbow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.Rainbow&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;Dapper.SqlBuilder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.SqlBuilder&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;Dapper.StrongName&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.StrongName&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Package Purposes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dapper.EntityFramework &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Extension handlers for EntityFramework&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.EntityFramework.StrongName &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Extension handlers for EntityFramework&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.Rainbow &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Micro-ORM implemented on Dapper, provides CRUD helpers&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.SqlBuilder &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Component for building SQL queries dynamically and composably&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.StrongName &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;High-performance micro-ORM supporting MySQL, Sqlite, SqlICE, and Firebird&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Dapper is a &lt;a href=&#34;https://www.nuget.org/packages/Dapper&#34;&gt;NuGet library&lt;/a&gt; that you can add in to your project that will extend your &lt;code&gt;IDbConnection&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;p&gt;It provides 3 helpers:&lt;/p&gt; &#xA;&lt;h2&gt;Execute a query and map the results to a strongly typed List&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static IEnumerable&amp;lt;T&amp;gt; Query&amp;lt;T&amp;gt;(this IDbConnection cnn, string sql, object param = null, IDbTransaction transaction = null, bool buffered = true, int? commandTimeout = null, CommandType? commandType = null)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Dog&#xA;{&#xA;    public int? Age { get; set; }&#xA;    public Guid Id { get; set; }&#xA;    public string Name { get; set; }&#xA;    public float? Weight { get; set; }&#xA;&#xA;    public int IgnoredProperty { get { return 1; } }&#xA;}&#xA;&#xA;var guid = Guid.NewGuid();&#xA;var dog = connection.Query&amp;lt;Dog&amp;gt;(&#34;select Age = @Age, Id = @Id&#34;, new { Age = (int?)null, Id = guid });&#xA;&#xA;Assert.Equal(1,dog.Count());&#xA;Assert.Null(dog.First().Age);&#xA;Assert.Equal(guid, dog.First().Id);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a query and map it to a list of dynamic objects&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static IEnumerable&amp;lt;dynamic&amp;gt; Query (this IDbConnection cnn, string sql, object param = null, IDbTransaction transaction = null, bool buffered = true, int? commandTimeout = null, CommandType? commandType = null)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method will execute SQL and return a dynamic list.&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var rows = connection.Query(&#34;select 1 A, 2 B union all select 3, 4&#34;).AsList();&#xA;&#xA;Assert.Equal(1, (int)rows[0].A);&#xA;Assert.Equal(2, (int)rows[0].B);&#xA;Assert.Equal(3, (int)rows[1].A);&#xA;Assert.Equal(4, (int)rows[1].B);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a Command that returns no results&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static int Execute(this IDbConnection cnn, string sql, object param = null, IDbTransaction transaction = null, int? commandTimeout = null, CommandType? commandType = null)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var count = connection.Execute(@&#34;&#xA;  set nocount on&#xA;  create table #t(i int)&#xA;  set nocount off&#xA;  insert #t&#xA;  select @a a union all select @b&#xA;  set nocount on&#xA;  drop table #t&#34;, new {a=1, b=2 });&#xA;Assert.Equal(2, count);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a Command multiple times&lt;/h2&gt; &#xA;&lt;p&gt;The same signature also allows you to conveniently and efficiently execute a command multiple times (for example to bulk-load data)&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var count = connection.Execute(@&#34;insert MyTable(colA, colB) values (@a, @b)&#34;,&#xA;    new[] { new { a=1, b=1 }, new { a=2, b=2 }, new { a=3, b=3 } }&#xA;  );&#xA;Assert.Equal(3, count); // 3 rows inserted: &#34;1,1&#34;, &#34;2,2&#34; and &#34;3,3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another example usage when you &lt;em&gt;already&lt;/em&gt; have an existing collection:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var foos = new List&amp;lt;Foo&amp;gt;&#xA;{&#xA;    { new Foo { A = 1, B = 1 } }&#xA;    { new Foo { A = 2, B = 2 } }&#xA;    { new Foo { A = 3, B = 3 } }&#xA;};&#xA;&#xA;var count = connection.Execute(@&#34;insert MyTable(colA, colB) values (@a, @b)&#34;, foos);&#xA;Assert.Equal(foos.Count, count);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This works for any parameter that implements &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for some T.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;A key feature of Dapper is performance. The following metrics show how long it takes to execute a &lt;code&gt;SELECT&lt;/code&gt; statement against a DB (in various config, each labeled) and map the data returned to objects.&lt;/p&gt; &#xA;&lt;p&gt;The benchmarks can be found in &lt;a href=&#34;https://github.com/DapperLib/Dapper/tree/main/benchmarks/Dapper.Tests.Performance&#34;&gt;Dapper.Tests.Performance&lt;/a&gt; (contributions welcome!) and can be run via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet run --project .\benchmarks\Dapper.Tests.Performance\ -c Release -f netcoreapp3.1 -- -f * --join&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output from the latest run is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19041.208 (2004/?/20H1)&#xA;Intel Core i7-7700HQ CPU 2.80GHz (Kaby Lake), 1 CPU, 8 logical and 4 physical cores&#xA;.NET Core SDK=3.1.201&#xA;  [Host]   : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT&#xA;  ShortRun : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ORM&lt;/th&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Return&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Mean&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;StdDev&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Error&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 0&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 1&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 2&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Allocated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Belgrade&lt;/td&gt; &#xA;   &lt;td&gt;ExecuteReader&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;94.46 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.115 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.268 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.42 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hand Coded&lt;/td&gt; &#xA;   &lt;td&gt;DataTable&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;105.43 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.998 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.508 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;9.37 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hand Coded&lt;/td&gt; &#xA;   &lt;td&gt;SqlCommand&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;106.58 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.191 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.801 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.1250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.42 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;QueryFirstOrDefault&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;119.52 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.320 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.219 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.6250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.39 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;dynamic&amp;gt; (buffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;119.93 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.943 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.937 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.3750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.73 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Massive&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query (dynamic)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;120.31 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.340 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.252 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.1250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.07 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;QueryFirstOrDefault&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;121.57 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.564 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.364 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.35 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;T&amp;gt; (buffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;121.67 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.913 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.403 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.8750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.8750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.65 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PetaPoco&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Fetch&amp;lt;T&amp;gt; (Fast)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;124.91 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.015 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.747 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.5 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;125.23 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.932 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.433 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.6 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;125.76 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.038 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.081 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.62 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PetaPoco&lt;/td&gt; &#xA;   &lt;td&gt;Fetch&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;127.48 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.283 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.475 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.18 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (Compiled)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;128.89 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.627 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.971 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.92 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;129.20 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.577 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.896 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.43 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;SingleFromQuery&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;129.41 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.094 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.166 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.6 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;SingleFromQuery&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;130.59 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.432 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.677 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.43 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Contrib Get&amp;lt;T&amp;gt;&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;134.74 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.816 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.746 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.29 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ServiceStack&lt;/td&gt; &#xA;   &lt;td&gt;SingleById&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;135.01 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.213 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.320 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;15.27 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;151.87 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.826 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.784 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.97 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;SqlQuery&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;171.00 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.460 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.791 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;23.67 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;GetObjectByKey&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;172.36 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.758 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.681 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;29.06 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;T&amp;gt; (unbuffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;174.40 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.296 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.983 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.77 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;dynamic&amp;gt; (unbuffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;174.45 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.988 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.340 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.81 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;FindObject&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;181.76 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.554 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;9.333 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;27.15 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;189.81 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.187 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.004 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;31.61 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (Compiled)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;199.72 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.983 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.616 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.8 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;Get&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;248.71 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.604 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.098 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;29.79 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;253.20 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.033 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.097 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.7 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;HQL&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;258.70 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.716 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.712 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;32.1 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;SqlQuery&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;268.89 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.349 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;32.516 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.5 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;278.46 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.094 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.284 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44.18 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (No Tracking)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;280.88 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.192 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.765 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.38 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;Criteria&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;304.90 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.232 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.267 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;60.29 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (No Tracking)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;316.55 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.667 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.592 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;50.95 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;SQL&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;335.41 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.111 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.703 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;78.86 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;LINQ&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;807.79 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;27.207 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;45.719 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;53.65 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Feel free to submit patches that include other ORMs - when running benchmarks, be sure to compile in Release and not attach a debugger (&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F5&lt;/kbd&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you might prefer Frans Bouma&#39;s &lt;a href=&#34;https://github.com/FransBouma/RawDataAccessBencher&#34;&gt;RawDataAccessBencher&lt;/a&gt; test suite or &lt;a href=&#34;https://github.com/InfoTechBridge/OrmBenchmark&#34;&gt;OrmBenchmark&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Parameterized queries&lt;/h2&gt; &#xA;&lt;p&gt;Parameters are usually passed in as anonymous classes. This allows you to name your parameters easily and gives you the ability to simply cut-and-paste SQL snippets and run them in your db platform&#39;s Query analyzer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;new {A = 1, B = &#34;b&#34;} // A will be mapped to the param @A, B to the param @B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters can also be built up dynamically using the DynamicParameters class. This allows for building a dynamic SQL statement while still using parameters for safety and performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    var sqlPredicates = new List&amp;lt;string&amp;gt;();&#xA;    var queryParams = new DynamicParameters();&#xA;    if (boolExpression)&#xA;    {&#xA;        sqlPredicates.Add(&#34;column1 = @param1&#34;);&#xA;        queryParams.Add(&#34;param1&#34;, dynamicValue1, System.Data.DbType.Guid);&#xA;    } else {&#xA;        sqlPredicates.Add(&#34;column2 = @param2&#34;);&#xA;        queryParams.Add(&#34;param2&#34;, dynamicValue2, System.Data.DbType.String);&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DynamicParameters also supports copying multiple parameters from existing objects of different types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    var queryParams = new DynamicParameters(objectOfType1);&#xA;    queryParams.AddDynamicParams(objectOfType2);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When an object that implements the &lt;code&gt;IDynamicParameters&lt;/code&gt; interface passed into &lt;code&gt;Execute&lt;/code&gt; or &lt;code&gt;Query&lt;/code&gt; functions, parameter values will be extracted via this interface. Obviously, the most likely object class to use for this purpose would be the built-in &lt;code&gt;DynamicParameters&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;h2&gt;List Support&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to pass in &lt;code&gt;IEnumerable&amp;lt;int&amp;gt;&lt;/code&gt; and will automatically parameterize your query.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;connection.Query&amp;lt;int&amp;gt;(&#34;select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids&#34;, new { Ids = new int[] { 1, 2, 3 } });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will be translated to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;select * from (select 1 as Id union all select 2 union all select 3) as X where Id in (@Ids1, @Ids2, @Ids3)&#34; // @Ids1 = 1 , @Ids2 = 2 , @Ids2 = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Literal replacements&lt;/h2&gt; &#xA;&lt;p&gt;Dapper supports literal replacements for bool and numeric types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;connection.Query(&#34;select * from User where UserTypeId = {=Admin}&#34;, new { UserTypeId.Admin });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The literal replacement is not sent as a parameter; this allows better plans and filtered index usage but should usually be used sparingly and after testing. This feature is particularly useful when the value being injected is actually a fixed value (for example, a fixed &#34;category id&#34;, &#34;status code&#34; or &#34;region&#34; that is specific to the query). For &lt;em&gt;live&lt;/em&gt; data where you are considering literals, you might &lt;em&gt;also&lt;/em&gt; want to consider and test provider-specific query hints like &lt;a href=&#34;https://blogs.msdn.microsoft.com/sqlprogrammability/2008/11/26/optimize-for-unknown-a-little-known-sql-server-2008-feature/&#34;&gt;&lt;code&gt;OPTIMIZE FOR UNKNOWN&lt;/code&gt;&lt;/a&gt; with regular parameters.&lt;/p&gt; &#xA;&lt;h2&gt;Buffered vs Unbuffered readers&lt;/h2&gt; &#xA;&lt;p&gt;Dapper&#39;s default behavior is to execute your SQL and buffer the entire reader on return. This is ideal in most cases as it minimizes shared locks in the db and cuts down on db network time.&lt;/p&gt; &#xA;&lt;p&gt;However when executing huge queries you may need to minimize memory footprint and only load objects as needed. To do so pass, &lt;code&gt;buffered: false&lt;/code&gt; into the &lt;code&gt;Query&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h2&gt;Multi Mapping&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to map a single row to multiple objects. This is a key feature if you want to avoid extraneous querying and eager load associations.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;Consider 2 classes: &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;class Post&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Title { get; set; }&#xA;    public string Content { get; set; }&#xA;    public User Owner { get; set; }&#xA;}&#xA;&#xA;class User&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Name { get; set; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let us say that we want to map a query that joins both the posts and the users table. Until now if we needed to combine the result of 2 queries, we&#39;d need a new object to express it but it makes more sense in this case to put the &lt;code&gt;User&lt;/code&gt; object inside the &lt;code&gt;Post&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;This is the use case for multi mapping. You tell dapper that the query returns a &lt;code&gt;Post&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object and then give it a function describing what you want to do with each of the rows containing both a &lt;code&gt;Post&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object. In our case, we want to take the user object and put it inside the post object. So we write the function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;(post, user) =&amp;gt; { post.Owner = user; return post; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The 3 type arguments to the &lt;code&gt;Query&lt;/code&gt; method specify what objects dapper should use to deserialize the row and what is going to be returned. We&#39;re going to interpret both rows as a combination of &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt; and we&#39;re returning back a &lt;code&gt;Post&lt;/code&gt; object. Hence the type declaration becomes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;&amp;lt;Post, User, Post&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everything put together, looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var sql =&#xA;@&#34;select * from #Posts p&#xA;left join #Users u on u.Id = p.OwnerId&#xA;Order by p.Id&#34;;&#xA;&#xA;var data = connection.Query&amp;lt;Post, User, Post&amp;gt;(sql, (post, user) =&amp;gt; { post.Owner = user; return post;});&#xA;var post = data.First();&#xA;&#xA;Assert.Equal(&#34;Sams Post1&#34;, post.Content);&#xA;Assert.Equal(1, post.Id);&#xA;Assert.Equal(&#34;Sam&#34;, post.Owner.Name);&#xA;Assert.Equal(99, post.Owner.Id);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dapper is able to split the returned row by making an assumption that your Id columns are named &lt;code&gt;Id&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;. If your primary key is different or you would like to split the row at a point other than &lt;code&gt;Id&lt;/code&gt;, use the optional &lt;code&gt;splitOn&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple Results&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to process multiple result grids in a single query.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var sql =&#xA;@&#34;&#xA;select * from Customers where CustomerId = @id&#xA;select * from Orders where CustomerId = @id&#xA;select * from Returns where CustomerId = @id&#34;;&#xA;&#xA;using (var multi = connection.QueryMultiple(sql, new {id=selectedId}))&#xA;{&#xA;   var customer = multi.Read&amp;lt;Customer&amp;gt;().Single();&#xA;   var orders = multi.Read&amp;lt;Order&amp;gt;().ToList();&#xA;   var returns = multi.Read&amp;lt;Return&amp;gt;().ToList();&#xA;   ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stored Procedures&lt;/h2&gt; &#xA;&lt;p&gt;Dapper fully supports stored procs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var user = cnn.Query&amp;lt;User&amp;gt;(&#34;spGetUser&#34;, new {Id = 1},&#xA;        commandType: CommandType.StoredProcedure).SingleOrDefault();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want something more fancy, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var p = new DynamicParameters();&#xA;p.Add(&#34;@a&#34;, 11);&#xA;p.Add(&#34;@b&#34;, dbType: DbType.Int32, direction: ParameterDirection.Output);&#xA;p.Add(&#34;@c&#34;, dbType: DbType.Int32, direction: ParameterDirection.ReturnValue);&#xA;&#xA;cnn.Execute(&#34;spMagicProc&#34;, p, commandType: CommandType.StoredProcedure);&#xA;&#xA;int b = p.Get&amp;lt;int&amp;gt;(&#34;@b&#34;);&#xA;int c = p.Get&amp;lt;int&amp;gt;(&#34;@c&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ansi Strings and varchar&lt;/h2&gt; &#xA;&lt;p&gt;Dapper supports varchar params, if you are executing a where clause on a varchar column using a param be sure to pass it in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Query&amp;lt;Thing&amp;gt;(&#34;select * from Thing where Name = @Name&#34;, new {Name = new DbString { Value = &#34;abcde&#34;, IsFixedLength = true, Length = 10, IsAnsi = true }});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On SQL Server it is crucial to use the unicode when querying unicode and ANSI when querying non unicode.&lt;/p&gt; &#xA;&lt;h2&gt;Type Switching Per Row&lt;/h2&gt; &#xA;&lt;p&gt;Usually you&#39;ll want to treat all rows from a given table as the same data type. However, there are some circumstances where it&#39;s useful to be able to parse different rows as different data types. This is where &lt;code&gt;IDataReader.GetRowParser&lt;/code&gt; comes in handy.&lt;/p&gt; &#xA;&lt;p&gt;Imagine you have a database table named &#34;Shapes&#34; with the columns: &lt;code&gt;Id&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt;, and you want to parse its rows into &lt;code&gt;Circle&lt;/code&gt;, &lt;code&gt;Square&lt;/code&gt;, or &lt;code&gt;Triangle&lt;/code&gt; objects based on the value of the Type column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var shapes = new List&amp;lt;IShape&amp;gt;();&#xA;using (var reader = connection.ExecuteReader(&#34;select * from Shapes&#34;))&#xA;{&#xA;    // Generate a row parser for each type you expect.&#xA;    // The generic type &amp;lt;IShape&amp;gt; is what the parser will return.&#xA;    // The argument (typeof(*)) is the concrete type to parse.&#xA;    var circleParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Circle));&#xA;    var squareParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Square));&#xA;    var triangleParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Triangle));&#xA;&#xA;    var typeColumnIndex = reader.GetOrdinal(&#34;Type&#34;);&#xA;&#xA;    while (reader.Read())&#xA;    {&#xA;        IShape shape;&#xA;        var type = (ShapeType)reader.GetInt32(typeColumnIndex);&#xA;        switch (type)&#xA;        {&#xA;            case ShapeType.Circle:&#xA;            &#x9;shape = circleParser(reader);&#xA;            &#x9;break;&#xA;            case ShapeType.Square:&#xA;            &#x9;shape = squareParser(reader);&#xA;            &#x9;break;&#xA;            case ShapeType.Triangle:&#xA;            &#x9;shape = triangleParser(reader);&#xA;            &#x9;break;&#xA;            default:&#xA;            &#x9;throw new NotImplementedException();&#xA;        }&#xA;&#xA;      &#x9;shapes.Add(shape);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Defined Variables in MySQL&lt;/h2&gt; &#xA;&lt;p&gt;In order to use Non-parameter SQL variables with MySql Connector, you have to add the following option to your connection string:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Allow User Variables=True&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you don&#39;t provide Dapper with a property to map.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations and caveats&lt;/h2&gt; &#xA;&lt;p&gt;Dapper caches information about every query it runs, this allows it to materialize objects quickly and process parameters quickly. The current implementation caches this information in a &lt;code&gt;ConcurrentDictionary&lt;/code&gt; object. Statements that are only used once are routinely flushed from this cache. Still, if you are generating SQL strings on the fly without using parameters it is possible you may hit memory issues.&lt;/p&gt; &#xA;&lt;p&gt;Dapper&#39;s simplicity means that many feature that ORMs ship with are stripped out. It worries about the 95% scenario, and gives you the tools you need most of the time. It doesn&#39;t attempt to solve every problem.&lt;/p&gt; &#xA;&lt;h2&gt;Will Dapper work with my DB provider?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper has no DB specific implementation details, it works across all .NET ADO providers including &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt;, SQL CE, Firebird, Oracle, MySQL, PostgreSQL and SQL Server.&lt;/p&gt; &#xA;&lt;h2&gt;Do you have a comprehensive list of examples?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper has a comprehensive test suite in the &lt;a href=&#34;https://github.com/DapperLib/Dapper/tree/main/tests/Dapper.Tests&#34;&gt;test project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who is using this?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper is in production use at &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Jackett/Jackett</title>
    <updated>2023-10-15T01:42:35Z</updated>
    <id>tag:github.com,2023-10-15:/Jackett/Jackett</id>
    <link href="https://github.com/Jackett/Jackett" rel="alternate"></link>
    <summary type="html">&lt;p&gt;API Support for your favorite torrent trackers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jackett&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Jackett/Jackett/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/Jackett/Jackett.svg?maxAge=60&amp;amp;style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackett/Jackett/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/Jackett/Jackett.svg?maxAge=60&amp;amp;style=flat-square&#34; alt=&#34;GitHub pull requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/jackett/jackett/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Jackett/Jackett/_apis/build/status/Jackett.Jackett?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackett/Jackett/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Jackett/Jackett/total.svg?maxAge=60&amp;amp;style=flat-square&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/jackett/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/jackett.svg?maxAge=60&amp;amp;style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Our &lt;a href=&#34;https://discord.gg/J865QuA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-chat-7289DA.svg?maxAge=60&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; server is no longer maintained. If you have a problem, request, or question then please open a new issue here.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is a new fork and is recruiting development help. If you are able to help out please &lt;a href=&#34;https://github.com/Jackett/Jackett/issues/8180&#34;&gt;contact us&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/CONTRIBUTING.md&#34;&gt;troubleshooting and contributing guidelines&lt;/a&gt; before submitting any issues or pull requests&lt;/p&gt; &#xA;&lt;p&gt;Jackett works as a proxy server: it translates queries from apps (&lt;a href=&#34;https://github.com/Sonarr/Sonarr&#34;&gt;Sonarr&lt;/a&gt;, &lt;a href=&#34;https://github.com/Radarr/Radarr&#34;&gt;Radarr&lt;/a&gt;, &lt;a href=&#34;https://sickrage.github.io/&#34;&gt;SickRage&lt;/a&gt;, &lt;a href=&#34;https://couchpota.to/&#34;&gt;CouchPotato&lt;/a&gt;, &lt;a href=&#34;https://github.com/mylar3/mylar3&#34;&gt;Mylar3&lt;/a&gt;, &lt;a href=&#34;https://github.com/lidarr/lidarr&#34;&gt;Lidarr&lt;/a&gt;, &lt;a href=&#34;https://github.com/SchizoDuckie/DuckieTV&#34;&gt;DuckieTV&lt;/a&gt;, &lt;a href=&#34;https://www.qbittorrent.org/&#34;&gt;qBittorrent&lt;/a&gt;, &lt;a href=&#34;https://github.com/lardbit/nefarious&#34;&gt;Nefarious&lt;/a&gt; etc.) into tracker-site-specific http queries, parses the html or json response, and then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping &amp;amp; translation logic - removing the burden from other apps.&lt;/p&gt; &#xA;&lt;p&gt;Developer note: The software implements the &lt;a href=&#34;https://torznab.github.io/spec-1.3-draft/index.html&#34;&gt;Torznab&lt;/a&gt; (with hybrid &lt;a href=&#34;https://github.com/nZEDb/nZEDb/raw/b485fa326a0ff1f47ce144164eb1f070e406b555/resources/db/schema/data/10-categories.tsv&#34;&gt;nZEDb&lt;/a&gt;/&lt;a href=&#34;https://newznab.readthedocs.io/en/latest/misc/api/#predefined-categories&#34;&gt;Newznab&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackett/Jackett/wiki/Jackett-Categories&#34;&gt;category numbering&lt;/a&gt;) and &lt;a href=&#34;https://github.com/RuudBurger/CouchPotatoServer/wiki/Couchpotato-torrent-provider&#34;&gt;TorrentPotato&lt;/a&gt; APIs.&lt;/p&gt; &#xA;&lt;p&gt;A third-party Golang SDK for Jackett is available from &lt;a href=&#34;https://github.com/webtor-io/go-jackett&#34;&gt;webtor-io/go-jackett&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Supported Systems&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 7 SP1 or greater&lt;/li&gt; &#xA; &lt;li&gt;Linux &lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;supported operating systems here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.15+ or greater&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt; Supported Public Trackers &lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;ØMagnet&lt;/li&gt; &#xA;  &lt;li&gt;1337x&lt;/li&gt; &#xA;  &lt;li&gt;ACG.RIP&lt;/li&gt; &#xA;  &lt;li&gt;Anidex&lt;/li&gt; &#xA;  &lt;li&gt;AniLibria&lt;/li&gt; &#xA;  &lt;li&gt;Anime Time&lt;/li&gt; &#xA;  &lt;li&gt;Anime Tosho&lt;/li&gt; &#xA;  &lt;li&gt;AniRena&lt;/li&gt; &#xA;  &lt;li&gt;AniSource&lt;/li&gt; &#xA;  &lt;li&gt;AudioBook Bay (ABB)&lt;/li&gt; &#xA;  &lt;li&gt;Badass Torrents&lt;/li&gt; &#xA;  &lt;li&gt;Bangumi Moe&lt;/li&gt; &#xA;  &lt;li&gt;BigFANGroup&lt;/li&gt; &#xA;  &lt;li&gt;BitRu&lt;/li&gt; &#xA;  &lt;li&gt;BitSearch&lt;/li&gt; &#xA;  &lt;li&gt;BT.etree&lt;/li&gt; &#xA;  &lt;li&gt;BTMET&lt;/li&gt; &#xA;  &lt;li&gt;BTSOW&lt;/li&gt; &#xA;  &lt;li&gt;BullTorrent&lt;/li&gt; &#xA;  &lt;li&gt;Byrutor&lt;/li&gt; &#xA;  &lt;li&gt;Cinecalidad&lt;/li&gt; &#xA;  &lt;li&gt;comicat&lt;/li&gt; &#xA;  &lt;li&gt;ConCen&lt;/li&gt; &#xA;  &lt;li&gt;cpasbien&lt;/li&gt; &#xA;  &lt;li&gt;cpasbienClone&lt;/li&gt; &#xA;  &lt;li&gt;CrackingPatching&lt;/li&gt; &#xA;  &lt;li&gt;Demonoid&lt;/li&gt; &#xA;  &lt;li&gt;DivxTotal&lt;/li&gt; &#xA;  &lt;li&gt;dmhy&lt;/li&gt; &#xA;  &lt;li&gt;DonTorrent&lt;/li&gt; &#xA;  &lt;li&gt;E-Hentai&lt;/li&gt; &#xA;  &lt;li&gt;EBook Bay (EBB)&lt;/li&gt; &#xA;  &lt;li&gt;EpubLibre&lt;/li&gt; &#xA;  &lt;li&gt;EXT Torrents&lt;/li&gt; &#xA;  &lt;li&gt;ExtraTorrent.st&lt;/li&gt; &#xA;  &lt;li&gt;EZTV&lt;/li&gt; &#xA;  &lt;li&gt;FileListing&lt;/li&gt; &#xA;  &lt;li&gt;Frozen Layer&lt;/li&gt; &#xA;  &lt;li&gt;GamesTorrents&lt;/li&gt; &#xA;  &lt;li&gt;GkTorrent&lt;/li&gt; &#xA;  &lt;li&gt;GloDLS&lt;/li&gt; &#xA;  &lt;li&gt;GTorrent.pro&lt;/li&gt; &#xA;  &lt;li&gt;Idope&lt;/li&gt; &#xA;  &lt;li&gt;Il Corsaro Nero&lt;/li&gt; &#xA;  &lt;li&gt;Internet Archive (archive.org)&lt;/li&gt; &#xA;  &lt;li&gt;Isohunt2&lt;/li&gt; &#xA;  &lt;li&gt;iTorrent&lt;/li&gt; &#xA;  &lt;li&gt;JAV-Torrent&lt;/li&gt; &#xA;  &lt;li&gt;kickasstorrents.to&lt;/li&gt; &#xA;  &lt;li&gt;kickasstorrents.ws&lt;/li&gt; &#xA;  &lt;li&gt;Knaben&lt;/li&gt; &#xA;  &lt;li&gt;LePorno.info&lt;/li&gt; &#xA;  &lt;li&gt;LimeTorrents&lt;/li&gt; &#xA;  &lt;li&gt;LimeTorrents clone&lt;/li&gt; &#xA;  &lt;li&gt;LinuxTracker&lt;/li&gt; &#xA;  &lt;li&gt;Mac Torrents Download&lt;/li&gt; &#xA;  &lt;li&gt;MegaPeer&lt;/li&gt; &#xA;  &lt;li&gt;MejorTorrent&lt;/li&gt; &#xA;  &lt;li&gt;Mikan&lt;/li&gt; &#xA;  &lt;li&gt;MioBT&lt;/li&gt; &#xA;  &lt;li&gt;MixTapeTorrent&lt;/li&gt; &#xA;  &lt;li&gt;MoviesDVDR&lt;/li&gt; &#xA;  &lt;li&gt;MovieTorrent&lt;/li&gt; &#xA;  &lt;li&gt;MyPornClub&lt;/li&gt; &#xA;  &lt;li&gt;NextJAV&lt;/li&gt; &#xA;  &lt;li&gt;Newstudio&lt;/li&gt; &#xA;  &lt;li&gt;Nipponsei&lt;/li&gt; &#xA;  &lt;li&gt;NNTT&lt;/li&gt; &#xA;  &lt;li&gt;NoNaMe Club (NNM-Club)&lt;/li&gt; &#xA;  &lt;li&gt;Nyaa.si&lt;/li&gt; &#xA;  &lt;li&gt;OKPT&lt;/li&gt; &#xA;  &lt;li&gt;OneJAV&lt;/li&gt; &#xA;  &lt;li&gt;ParnuXi&lt;/li&gt; &#xA;  &lt;li&gt;PC-torrent&lt;/li&gt; &#xA;  &lt;li&gt;PornoTorrent&lt;/li&gt; &#xA;  &lt;li&gt;ProPorn&lt;/li&gt; &#xA;  &lt;li&gt;Rapidzona&lt;/li&gt; &#xA;  &lt;li&gt;RinTorNeT&lt;/li&gt; &#xA;  &lt;li&gt;RuTor&lt;/li&gt; &#xA;  &lt;li&gt;RuTracker.RU&lt;/li&gt; &#xA;  &lt;li&gt;Seedoff&lt;/li&gt; &#xA;  &lt;li&gt;Sexy-Pics&lt;/li&gt; &#xA;  &lt;li&gt;Shana Project&lt;/li&gt; &#xA;  &lt;li&gt;ShizaProject&lt;/li&gt; &#xA;  &lt;li&gt;ShowRSS&lt;/li&gt; &#xA;  &lt;li&gt;SimpleAnime&lt;/li&gt; &#xA;  &lt;li&gt;Solid Torrents&lt;/li&gt; &#xA;  &lt;li&gt;sosulki&lt;/li&gt; &#xA;  &lt;li&gt;SubsPlease&lt;/li&gt; &#xA;  &lt;li&gt;sukebei.Nyaa.si&lt;/li&gt; &#xA;  &lt;li&gt;The Pirate Bay (TPB)&lt;/li&gt; &#xA;  &lt;li&gt;TheRARBG&lt;/li&gt; &#xA;  &lt;li&gt;Tokyo Tosho&lt;/li&gt; &#xA;  &lt;li&gt;Torlock&lt;/li&gt; &#xA;  &lt;li&gt;Torrent[CORE]&lt;/li&gt; &#xA;  &lt;li&gt;Torrent Oyun indir&lt;/li&gt; &#xA;  &lt;li&gt;torrent.by&lt;/li&gt; &#xA;  &lt;li&gt;torrent-pirat&lt;/li&gt; &#xA;  &lt;li&gt;Torrent9&lt;/li&gt; &#xA;  &lt;li&gt;Torrent9 clone&lt;/li&gt; &#xA;  &lt;li&gt;Torrent911&lt;/li&gt; &#xA;  &lt;li&gt;TorrentFunk&lt;/li&gt; &#xA;  &lt;li&gt;TorrentDownloads&lt;/li&gt; &#xA;  &lt;li&gt;TorrentGalaxy (TGx)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentKitty&lt;/li&gt; &#xA;  &lt;li&gt;TorrentProject2&lt;/li&gt; &#xA;  &lt;li&gt;TorrentQQ (토렌트큐큐)&lt;/li&gt; &#xA;  &lt;li&gt;Torrents.csv&lt;/li&gt; &#xA;  &lt;li&gt;TorrentSir (토렌트썰)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentView (토렌트뷰)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentWhiz (토렌트위즈)&lt;/li&gt; &#xA;  &lt;li&gt;Torrentz2eu&lt;/li&gt; &#xA;  &lt;li&gt;Torrentz2nz&lt;/li&gt; &#xA;  &lt;li&gt;TrahT&lt;/li&gt; &#xA;  &lt;li&gt;truPornolabs&lt;/li&gt; &#xA;  &lt;li&gt;UnionDHT&lt;/li&gt; &#xA;  &lt;li&gt;VSTHouse&lt;/li&gt; &#xA;  &lt;li&gt;VST Torrentz&lt;/li&gt; &#xA;  &lt;li&gt;VSTorrent&lt;/li&gt; &#xA;  &lt;li&gt;xxxAdultTorrent&lt;/li&gt; &#xA;  &lt;li&gt;XXXClub&lt;/li&gt; &#xA;  &lt;li&gt;xxxtor&lt;/li&gt; &#xA;  &lt;li&gt;xxxtorrents&lt;/li&gt; &#xA;  &lt;li&gt;YourBittorrent&lt;/li&gt; &#xA;  &lt;li&gt;YTS.ag&lt;/li&gt; &#xA;  &lt;li&gt;zetorrents&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt; Supported Semi-Private Trackers &lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;AniDUB&lt;/li&gt; &#xA;  &lt;li&gt;Anime-Free&lt;/li&gt; &#xA;  &lt;li&gt;AnimeLayer&lt;/li&gt; &#xA;  &lt;li&gt;ArenaBG&lt;/li&gt; &#xA;  &lt;li&gt;BookTracker&lt;/li&gt; &#xA;  &lt;li&gt;BootyTape&lt;/li&gt; &#xA;  &lt;li&gt;Catorrent&lt;/li&gt; &#xA;  &lt;li&gt;Deildu&lt;/li&gt; &#xA;  &lt;li&gt;Demonoid&lt;/li&gt; &#xA;  &lt;li&gt;Devil-Torrents&lt;/li&gt; &#xA;  &lt;li&gt;DXP (Deaf Experts)&lt;/li&gt; &#xA;  &lt;li&gt;Electro-Torrent&lt;/li&gt; &#xA;  &lt;li&gt;EniaHD&lt;/li&gt; &#xA;  &lt;li&gt;Erai-Raws&lt;/li&gt; &#xA;  &lt;li&gt;Ex-torrenty&lt;/li&gt; &#xA;  &lt;li&gt;ExKinoRay&lt;/li&gt; &#xA;  &lt;li&gt;ExtremlymTorrents&lt;/li&gt; &#xA;  &lt;li&gt;File-Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Gay-Torrents.net&lt;/li&gt; &#xA;  &lt;li&gt;Genesis-Movement&lt;/li&gt; &#xA;  &lt;li&gt;HD-CzTorrent&lt;/li&gt; &#xA;  &lt;li&gt;HDGalaKtik&lt;/li&gt; &#xA;  &lt;li&gt;HellTorrents&lt;/li&gt; &#xA;  &lt;li&gt;HunTorrent&lt;/li&gt; &#xA;  &lt;li&gt;Il CorSaRo Blu&lt;/li&gt; &#xA;  &lt;li&gt;ilDraGoNeRo&lt;/li&gt; &#xA;  &lt;li&gt;Kinorun&lt;/li&gt; &#xA;  &lt;li&gt;Kinozal&lt;/li&gt; &#xA;  &lt;li&gt;LostFilm.tv&lt;/li&gt; &#xA;  &lt;li&gt;Magnetico (Local DHT) [&lt;a href=&#34;https://github.com/boramalper/magnetico&#34;&gt;site&lt;/a&gt;]&lt;/li&gt; &#xA;  &lt;li&gt;Marine Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Masters-TB&lt;/li&gt; &#xA;  &lt;li&gt;Mazepa&lt;/li&gt; &#xA;  &lt;li&gt;Metal Tracker&lt;/li&gt; &#xA;  &lt;li&gt;MIRcrew&lt;/li&gt; &#xA;  &lt;li&gt;MovieWorld (Flicker)&lt;/li&gt; &#xA;  &lt;li&gt;MuseBootlegs (MB)&lt;/li&gt; &#xA;  &lt;li&gt;MVGroup Forum&lt;/li&gt; &#xA;  &lt;li&gt;MVGroup Main&lt;/li&gt; &#xA;  &lt;li&gt;NetHD (VietTorrent)&lt;/li&gt; &#xA;  &lt;li&gt;Newstudio (login)&lt;/li&gt; &#xA;  &lt;li&gt;NoNaMe Club (NNM-Club) (login)&lt;/li&gt; &#xA;  &lt;li&gt;PiratBit (login)&lt;/li&gt; &#xA;  &lt;li&gt;PornoLab&lt;/li&gt; &#xA;  &lt;li&gt;PussyTorrents&lt;/li&gt; &#xA;  &lt;li&gt;Rainbow Tracker&lt;/li&gt; &#xA;  &lt;li&gt;RGFootball&lt;/li&gt; &#xA;  &lt;li&gt;RinTor&lt;/li&gt; &#xA;  &lt;li&gt;RiperAM&lt;/li&gt; &#xA;  &lt;li&gt;RockBox&lt;/li&gt; &#xA;  &lt;li&gt;RUDUB (ex-BaibaKoTV)&lt;/li&gt; &#xA;  &lt;li&gt;Rustorka&lt;/li&gt; &#xA;  &lt;li&gt;RuTracker&lt;/li&gt; &#xA;  &lt;li&gt;SATClubbing&lt;/li&gt; &#xA;  &lt;li&gt;seleZen&lt;/li&gt; &#xA;  &lt;li&gt;Sharewood&lt;/li&gt; &#xA;  &lt;li&gt;SkTorrent&lt;/li&gt; &#xA;  &lt;li&gt;SkTorrent-org&lt;/li&gt; &#xA;  &lt;li&gt;themixingbowl (TMB)&lt;/li&gt; &#xA;  &lt;li&gt;Toloka.to&lt;/li&gt; &#xA;  &lt;li&gt;Torrents-Local&lt;/li&gt; &#xA;  &lt;li&gt;TorrentDownload&lt;/li&gt; &#xA;  &lt;li&gt;TribalMixes&lt;/li&gt; &#xA;  &lt;li&gt;Union Fansub&lt;/li&gt; &#xA;  &lt;li&gt;UniOtaku&lt;/li&gt; &#xA;  &lt;li&gt;xTorrenty&lt;/li&gt; &#xA;  &lt;li&gt;YggTorrent (YGG)&lt;/li&gt; &#xA;  &lt;li&gt;ZOMB&lt;/li&gt; &#xA;  &lt;li&gt;Ztracker&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt; Supported Private Trackers &lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;0day.kiev&lt;/li&gt; &#xA;  &lt;li&gt;1ptbar&lt;/li&gt; &#xA;  &lt;li&gt;2 Fast 4 You &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;2xFree&lt;/li&gt; &#xA;  &lt;li&gt;3ChangTrai (3CT)&lt;/li&gt; &#xA;  &lt;li&gt;3D Torrents (3DT)&lt;/li&gt; &#xA;  &lt;li&gt;3Wmg&lt;/li&gt; &#xA;  &lt;li&gt;4thD (4th Dimension)&lt;/li&gt; &#xA;  &lt;li&gt;52PT&lt;/li&gt; &#xA;  &lt;li&gt;720pier&lt;/li&gt; &#xA;  &lt;li&gt;Abnormal&lt;/li&gt; &#xA;  &lt;li&gt;ABtorrents (ABT + RNS)&lt;/li&gt; &#xA;  &lt;li&gt;Acid Lounge (A-L)&lt;/li&gt; &#xA;  &lt;li&gt;AcrossTheTasman &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Aftershock&lt;/li&gt; &#xA;  &lt;li&gt;Aidoru!Online&lt;/li&gt; &#xA;  &lt;li&gt;Aither&lt;/li&gt; &#xA;  &lt;li&gt;AlphaRatio (AR)&lt;/li&gt; &#xA;  &lt;li&gt;AmigosShareClub&lt;/li&gt; &#xA;  &lt;li&gt;AnimeBytes (AB)&lt;/li&gt; &#xA;  &lt;li&gt;AnimeTorrents (AnT)&lt;/li&gt; &#xA;  &lt;li&gt;AnimeTracker&lt;/li&gt; &#xA;  &lt;li&gt;AnimeWorld&lt;/li&gt; &#xA;  &lt;li&gt;Anthelion&lt;/li&gt; &#xA;  &lt;li&gt;Araba Fenice (Phoenix) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;ArabP2P&lt;/li&gt; &#xA;  &lt;li&gt;ArabTorrents &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;AsianCinema&lt;/li&gt; &#xA;  &lt;li&gt;AsianDVDClub&lt;/li&gt; &#xA;  &lt;li&gt;Audiences&lt;/li&gt; &#xA;  &lt;li&gt;AudioNews (AN)&lt;/li&gt; &#xA;  &lt;li&gt;Aussierul.es &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;AvistaZ (AsiaTorrents)&lt;/li&gt; &#xA;  &lt;li&gt;Azusa &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Back-ups&lt;/li&gt; &#xA;  &lt;li&gt;BakaBT&lt;/li&gt; &#xA;  &lt;li&gt;BeiTai&lt;/li&gt; &#xA;  &lt;li&gt;Best-Core&lt;/li&gt; &#xA;  &lt;li&gt;BeyondHD (BHD)&lt;/li&gt; &#xA;  &lt;li&gt;Bibliotik&lt;/li&gt; &#xA;  &lt;li&gt;Bit-Bázis&lt;/li&gt; &#xA;  &lt;li&gt;BIT-HDTV&lt;/li&gt; &#xA;  &lt;li&gt;Bitded&lt;/li&gt; &#xA;  &lt;li&gt;Bithorlo (BHO)&lt;/li&gt; &#xA;  &lt;li&gt;BitHUmen &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Bit Of Valor&lt;/li&gt; &#xA;  &lt;li&gt;BitSexy&lt;/li&gt; &#xA;  &lt;li&gt;Bitspyder&lt;/li&gt; &#xA;  &lt;li&gt;BitTorrentFiles&lt;/li&gt; &#xA;  &lt;li&gt;BiTTuRK&lt;/li&gt; &#xA;  &lt;li&gt;BJ-Share (BJ)&lt;/li&gt; &#xA;  &lt;li&gt;BlueBird &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Blutopia (BLU)&lt;/li&gt; &#xA;  &lt;li&gt;Borgzelle &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Boxing Torrents&lt;/li&gt; &#xA;  &lt;li&gt;Brasil Tracker&lt;/li&gt; &#xA;  &lt;li&gt;BroadcasTheNet (BTN)&lt;/li&gt; &#xA;  &lt;li&gt;BroadCity&lt;/li&gt; &#xA;  &lt;li&gt;BrokenStones &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;BrSociety&lt;/li&gt; &#xA;  &lt;li&gt;BTArg&lt;/li&gt; &#xA;  &lt;li&gt;BTNext (BTNT) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;BTSCHOOL&lt;/li&gt; &#xA;  &lt;li&gt;BWTorrents&lt;/li&gt; &#xA;  &lt;li&gt;BYRBT&lt;/li&gt; &#xA;  &lt;li&gt;Carp-Hunter&lt;/li&gt; &#xA;  &lt;li&gt;Carpathians&lt;/li&gt; &#xA;  &lt;li&gt;CarPT&lt;/li&gt; &#xA;  &lt;li&gt;CartoonChaos (CC)&lt;/li&gt; &#xA;  &lt;li&gt;Cathode-Ray.Tube (CRT)&lt;/li&gt; &#xA;  &lt;li&gt;Central Torrent&lt;/li&gt; &#xA;  &lt;li&gt;CeskeForum&lt;/li&gt; &#xA;  &lt;li&gt;CGPeers &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;CHDBits &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;cheggit&lt;/li&gt; &#xA;  &lt;li&gt;ChileBT&lt;/li&gt; &#xA;  &lt;li&gt;Cinemageddon &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;CinemaMovieS_ZT&lt;/li&gt; &#xA;  &lt;li&gt;Cinematik &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;CinemaZ (EuTorrents)&lt;/li&gt; &#xA;  &lt;li&gt;Classix &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Coastal-Crew&lt;/li&gt; &#xA;  &lt;li&gt;Concertos&lt;/li&gt; &#xA;  &lt;li&gt;CrazyHD&lt;/li&gt; &#xA;  &lt;li&gt;CrnaBerza&lt;/li&gt; &#xA;  &lt;li&gt;Dajiao (打胶) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;DANISH BYTES&lt;/li&gt; &#xA;  &lt;li&gt;Dark-Shadow&lt;/li&gt; &#xA;  &lt;li&gt;DataScene (DS)&lt;/li&gt; &#xA;  &lt;li&gt;DesiTorrents&lt;/li&gt; &#xA;  &lt;li&gt;Diablo Torrent &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;DICMusic&lt;/li&gt; &#xA;  &lt;li&gt;DigitalCore&lt;/li&gt; &#xA;  &lt;li&gt;DimeADozen (EzTorrent)&lt;/li&gt; &#xA;  &lt;li&gt;DiscFan&lt;/li&gt; &#xA;  &lt;li&gt;DivTeam&lt;/li&gt; &#xA;  &lt;li&gt;DocsPedia&lt;/li&gt; &#xA;  &lt;li&gt;Dream Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Drugari&lt;/li&gt; &#xA;  &lt;li&gt;Ebooks-Shares&lt;/li&gt; &#xA;  &lt;li&gt;Emmid Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Empornium (EMP) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;eShareNet&lt;/li&gt; &#xA;  &lt;li&gt;eStone (XiDER, BeLoad, BigTorrent)&lt;/li&gt; &#xA;  &lt;li&gt;Exitorrent.org &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;ExoticaZ (YourExotic)&lt;/li&gt; &#xA;  &lt;li&gt;ExtremeBits&lt;/li&gt; &#xA;  &lt;li&gt;ExtremeTorrents&lt;/li&gt; &#xA;  &lt;li&gt;Falkon Vision Team&lt;/li&gt; &#xA;  &lt;li&gt;FANO.IN &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Fantastiko&lt;/li&gt; &#xA;  &lt;li&gt;Fappaizuri&lt;/li&gt; &#xA;  &lt;li&gt;FastScene&lt;/li&gt; &#xA;  &lt;li&gt;Femdomcult&lt;/li&gt; &#xA;  &lt;li&gt;FileList (FL)&lt;/li&gt; &#xA;  &lt;li&gt;FinElite (FE) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;FinVip&lt;/li&gt; &#xA;  &lt;li&gt;Flux-Zone&lt;/li&gt; &#xA;  &lt;li&gt;Free Farm (自由农场)&lt;/li&gt; &#xA;  &lt;li&gt;FunFile (FF)&lt;/li&gt; &#xA;  &lt;li&gt;FunkyTorrents (FT)&lt;/li&gt; &#xA;  &lt;li&gt;FusionMayhem&lt;/li&gt; &#xA;  &lt;li&gt;FutureTorrent &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Fuzer (FZ)&lt;/li&gt; &#xA;  &lt;li&gt;Gamera (駕瞑羅)&lt;/li&gt; &#xA;  &lt;li&gt;Gay-Torrents.org&lt;/li&gt; &#xA;  &lt;li&gt;GAYtorrent.ru&lt;/li&gt; &#xA;  &lt;li&gt;GazelleGames (GGn)&lt;/li&gt; &#xA;  &lt;li&gt;Generation-Free &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;GigaTorrents&lt;/li&gt; &#xA;  &lt;li&gt;GimmePeers (formerly ILT)&lt;/li&gt; &#xA;  &lt;li&gt;GiroTorrent&lt;/li&gt; &#xA;  &lt;li&gt;GreatPosterWall (GPW)&lt;/li&gt; &#xA;  &lt;li&gt;GreekDiamond&lt;/li&gt; &#xA;  &lt;li&gt;Greek Team&lt;/li&gt; &#xA;  &lt;li&gt;HaiDan&lt;/li&gt; &#xA;  &lt;li&gt;Haitang&lt;/li&gt; &#xA;  &lt;li&gt;HappyFappy&lt;/li&gt; &#xA;  &lt;li&gt;Hawke-uno&lt;/li&gt; &#xA;  &lt;li&gt;HD Dolby&lt;/li&gt; &#xA;  &lt;li&gt;HD-Forever (HDF)&lt;/li&gt; &#xA;  &lt;li&gt;HD-Olimpo&lt;/li&gt; &#xA;  &lt;li&gt;HD-Only (HDO)&lt;/li&gt; &#xA;  &lt;li&gt;HD-Space (HDS)&lt;/li&gt; &#xA;  &lt;li&gt;HD-Torrents (HDT)&lt;/li&gt; &#xA;  &lt;li&gt;HD-UNiT3D&lt;/li&gt; &#xA;  &lt;li&gt;HD4FANS &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDArea (HDA)&lt;/li&gt; &#xA;  &lt;li&gt;HDAtmos&lt;/li&gt; &#xA;  &lt;li&gt;HDBits &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDC (HDCiTY) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDChina (HDWing) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDFans&lt;/li&gt; &#xA;  &lt;li&gt;HDHome (HDBigger) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDMaYi&lt;/li&gt; &#xA;  &lt;li&gt;HDPT &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDRoute &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDSky &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDTime&lt;/li&gt; &#xA;  &lt;li&gt;HDTorrents.it &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HDTurk&lt;/li&gt; &#xA;  &lt;li&gt;HDU&lt;/li&gt; &#xA;  &lt;li&gt;hdvbits&lt;/li&gt; &#xA;  &lt;li&gt;HDVIDEO&lt;/li&gt; &#xA;  &lt;li&gt;HDZone&lt;/li&gt; &#xA;  &lt;li&gt;Hebits&lt;/li&gt; &#xA;  &lt;li&gt;HellasHut&lt;/li&gt; &#xA;  &lt;li&gt;HHanClub&lt;/li&gt; &#xA;  &lt;li&gt;HomePornTorrents (HPT)&lt;/li&gt; &#xA;  &lt;li&gt;House of Devil&lt;/li&gt; &#xA;  &lt;li&gt;HQMusic&lt;/li&gt; &#xA;  &lt;li&gt;iAnon&lt;/li&gt; &#xA;  &lt;li&gt;ICC2022&lt;/li&gt; &#xA;  &lt;li&gt;ImmortalSeed (iS)&lt;/li&gt; &#xA;  &lt;li&gt;Immortuos&lt;/li&gt; &#xA;  &lt;li&gt;Indietorrents &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Infire&lt;/li&gt; &#xA;  &lt;li&gt;Insane Tracker&lt;/li&gt; &#xA;  &lt;li&gt;IPTorrents (IPT)&lt;/li&gt; &#xA;  &lt;li&gt;ItaTorrents&lt;/li&gt; &#xA;  &lt;li&gt;JME-REUNIT3D&lt;/li&gt; &#xA;  &lt;li&gt;JoyHD &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;JPopsuki&lt;/li&gt; &#xA;  &lt;li&gt;JPTV&lt;/li&gt; &#xA;  &lt;li&gt;KamePT &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Karagarga&lt;/li&gt; &#xA;  &lt;li&gt;Keep Friends &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Korsar&lt;/li&gt; &#xA;  &lt;li&gt;KrazyZone&lt;/li&gt; &#xA;  &lt;li&gt;Kufei (库非)&lt;/li&gt; &#xA;  &lt;li&gt;Kufirc&lt;/li&gt; &#xA;  &lt;li&gt;LastFiles&lt;/li&gt; &#xA;  &lt;li&gt;Le Saloon&lt;/li&gt; &#xA;  &lt;li&gt;LaidBackManor&lt;/li&gt; &#xA;  &lt;li&gt;Lat-Team &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Le-Cinephile&lt;/li&gt; &#xA;  &lt;li&gt;LearnBits&lt;/li&gt; &#xA;  &lt;li&gt;LearnFlakes&lt;/li&gt; &#xA;  &lt;li&gt;leech24&lt;/li&gt; &#xA;  &lt;li&gt;Les-Cinephiles&lt;/li&gt; &#xA;  &lt;li&gt;Lesbians4u&lt;/li&gt; &#xA;  &lt;li&gt;Libble&lt;/li&gt; &#xA;  &lt;li&gt;LibraNet (LN)&lt;/li&gt; &#xA;  &lt;li&gt;LinkoManija &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Locadora&lt;/li&gt; &#xA;  &lt;li&gt;LosslessClub &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;LST&lt;/li&gt; &#xA;  &lt;li&gt;M-Team TP (MTTP)&lt;/li&gt; &#xA;  &lt;li&gt;MaDs Revolution&lt;/li&gt; &#xA;  &lt;li&gt;Magico (Trellas) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Majomparádé (TurkDepo)&lt;/li&gt; &#xA;  &lt;li&gt;Mansão dos Animes (MDAN)&lt;/li&gt; &#xA;  &lt;li&gt;MegamixTracker&lt;/li&gt; &#xA;  &lt;li&gt;MeseVilág (Fairytale World)&lt;/li&gt; &#xA;  &lt;li&gt;MetalGuru &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Milkie&lt;/li&gt; &#xA;  &lt;li&gt;MMA-Torrents &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;MNV (Max-New-Vision)&lt;/li&gt; &#xA;  &lt;li&gt;MOJBLiNK&lt;/li&gt; &#xA;  &lt;li&gt;MonikaDesign (MDU)&lt;/li&gt; &#xA;  &lt;li&gt;MoreThanTV (MTV)&lt;/li&gt; &#xA;  &lt;li&gt;MouseBits&lt;/li&gt; &#xA;  &lt;li&gt;Movie-Torrentz&lt;/li&gt; &#xA;  &lt;li&gt;MuziekFabriek&lt;/li&gt; &#xA;  &lt;li&gt;MyAnonamouse (MAM)&lt;/li&gt; &#xA;  &lt;li&gt;MySpleen &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;NCore&lt;/li&gt; &#xA;  &lt;li&gt;Nebulance (NBL) (TransmiTheNet)&lt;/li&gt; &#xA;  &lt;li&gt;NicePT&lt;/li&gt; &#xA;  &lt;li&gt;NorBits&lt;/li&gt; &#xA;  &lt;li&gt;NORDiCHD&lt;/li&gt; &#xA;  &lt;li&gt;Ntelogo&lt;/li&gt; &#xA;  &lt;li&gt;Old Toons World&lt;/li&gt; &#xA;  &lt;li&gt;OpenCD &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Orpheus&lt;/li&gt; &#xA;  &lt;li&gt;OnlyEncodes&lt;/li&gt; &#xA;  &lt;li&gt;OshenPT&lt;/li&gt; &#xA;  &lt;li&gt;Ostwiki&lt;/li&gt; &#xA;  &lt;li&gt;OurBits (HDPter)&lt;/li&gt; &#xA;  &lt;li&gt;P2PBG&lt;/li&gt; &#xA;  &lt;li&gt;Panda&lt;/li&gt; &#xA;  &lt;li&gt;Party-Tracker&lt;/li&gt; &#xA;  &lt;li&gt;PassThePopcorn (PTP)&lt;/li&gt; &#xA;  &lt;li&gt;Peeratiko&lt;/li&gt; &#xA;  &lt;li&gt;Peers.FM&lt;/li&gt; &#xA;  &lt;li&gt;PigNetwork&lt;/li&gt; &#xA;  &lt;li&gt;PirateTheNet (PTN)&lt;/li&gt; &#xA;  &lt;li&gt;PixelCove (Ultimate Gamer)&lt;/li&gt; &#xA;  &lt;li&gt;PiXELHD (PxHD) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;PolishSource (PS)&lt;/li&gt; &#xA;  &lt;li&gt;PolishTracker&lt;/li&gt; &#xA;  &lt;li&gt;Pornbay &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Portugas&lt;/li&gt; &#xA;  &lt;li&gt;PotUK&lt;/li&gt; &#xA;  &lt;li&gt;Pretome&lt;/li&gt; &#xA;  &lt;li&gt;PrivateHD (PHD)&lt;/li&gt; &#xA;  &lt;li&gt;ProAudioTorrents (PAT)&lt;/li&gt; &#xA;  &lt;li&gt;PT分享站 (itzmx)&lt;/li&gt; &#xA;  &lt;li&gt;PTCafe&lt;/li&gt; &#xA;  &lt;li&gt;PTChina (铂金学院)&lt;/li&gt; &#xA;  &lt;li&gt;PTerClub&lt;/li&gt; &#xA;  &lt;li&gt;PTFiles (PTF)&lt;/li&gt; &#xA;  &lt;li&gt;PThome &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;PTLSP&lt;/li&gt; &#xA;  &lt;li&gt;PTSBAO&lt;/li&gt; &#xA;  &lt;li&gt;PTtime&lt;/li&gt; &#xA;  &lt;li&gt;Punk&#39;s Horror Tracker&lt;/li&gt; &#xA;  &lt;li&gt;PuntoTorrent&lt;/li&gt; &#xA;  &lt;li&gt;PuTao&lt;/li&gt; &#xA;  &lt;li&gt;PWTorrents (PWT)&lt;/li&gt; &#xA;  &lt;li&gt;R3V WTF!&lt;/li&gt; &#xA;  &lt;li&gt;Racing4Everyone (R4E)&lt;/li&gt; &#xA;  &lt;li&gt;RacingForMe (RFM)&lt;/li&gt; &#xA;  &lt;li&gt;RareShare2&lt;/li&gt; &#xA;  &lt;li&gt;Red Star Torrent (RST) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Redacted (PassTheHeadphones)&lt;/li&gt; &#xA;  &lt;li&gt;RedBits&lt;/li&gt; &#xA;  &lt;li&gt;Red Leaves &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;ReelFlix&lt;/li&gt; &#xA;  &lt;li&gt;Resurrect The Net&lt;/li&gt; &#xA;  &lt;li&gt;RetroFlix&lt;/li&gt; &#xA;  &lt;li&gt;RevolutionTT&lt;/li&gt; &#xA;  &lt;li&gt;Romanian Metal Torrents (RMT) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Rousi&lt;/li&gt; &#xA;  &lt;li&gt;SceneHD &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;SceneLinks (SL)&lt;/li&gt; &#xA;  &lt;li&gt;SceneRush&lt;/li&gt; &#xA;  &lt;li&gt;SceneTime&lt;/li&gt; &#xA;  &lt;li&gt;Secret Cinema&lt;/li&gt; &#xA;  &lt;li&gt;SeedFile&lt;/li&gt; &#xA;  &lt;li&gt;Shadowflow (影) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Shareisland&lt;/li&gt; &#xA;  &lt;li&gt;Shazbat&lt;/li&gt; &#xA;  &lt;li&gt;SiamBIT&lt;/li&gt; &#xA;  &lt;li&gt;SkipTheCommercials&lt;/li&gt; &#xA;  &lt;li&gt;SkipTheTrailers&lt;/li&gt; &#xA;  &lt;li&gt;slosoul&lt;/li&gt; &#xA;  &lt;li&gt;SnowPT (SSPT)&lt;/li&gt; &#xA;  &lt;li&gt;SoulVoice&lt;/li&gt; &#xA;  &lt;li&gt;SpeedApp (SceneFZ, XtreMeZone / MYXZ, ICE Torrent)&lt;/li&gt; &#xA;  &lt;li&gt;SpeedCD&lt;/li&gt; &#xA;  &lt;li&gt;Speedmaster HD &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;SpeedTorrent Reloaded&lt;/li&gt; &#xA;  &lt;li&gt;Spirit of Revolution &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;SportHD&lt;/li&gt; &#xA;  &lt;li&gt;SportsCult&lt;/li&gt; &#xA;  &lt;li&gt;SpringSunday &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;SugoiMusic&lt;/li&gt; &#xA;  &lt;li&gt;Superbits (SBS)&lt;/li&gt; &#xA;  &lt;li&gt;Swarmazon&lt;/li&gt; &#xA;  &lt;li&gt;Tapochek&lt;/li&gt; &#xA;  &lt;li&gt;Tasmanit&lt;/li&gt; &#xA;  &lt;li&gt;Team CT Game (TCTG)&lt;/li&gt; &#xA;  &lt;li&gt;TeamHD&lt;/li&gt; &#xA;  &lt;li&gt;TeamOS&lt;/li&gt; &#xA;  &lt;li&gt;TEKNO3D &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;teracod (Movie Zone)&lt;/li&gt; &#xA;  &lt;li&gt;The Falling Angels (TFA)&lt;/li&gt; &#xA;  &lt;li&gt;The Geeks&lt;/li&gt; &#xA;  &lt;li&gt;The New Retro&lt;/li&gt; &#xA;  &lt;li&gt;The Occult &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;The Old School&lt;/li&gt; &#xA;  &lt;li&gt;The Place &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;The Shinning (TsH)&lt;/li&gt; &#xA;  &lt;li&gt;The Show&lt;/li&gt; &#xA;  &lt;li&gt;The Vault &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;The-New-Fun&lt;/li&gt; &#xA;  &lt;li&gt;TheEmpire (TE)&lt;/li&gt; &#xA;  &lt;li&gt;TheLeachZone (TLZ)&lt;/li&gt; &#xA;  &lt;li&gt;TheRebels&lt;/li&gt; &#xA;  &lt;li&gt;TheScenePlace (TSP)&lt;/li&gt; &#xA;  &lt;li&gt;Thor&#39;s Land&lt;/li&gt; &#xA;  &lt;li&gt;TJUPT&lt;/li&gt; &#xA;  &lt;li&gt;TLFBits &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;TmGHuB&lt;/li&gt; &#xA;  &lt;li&gt;Tornado&lt;/li&gt; &#xA;  &lt;li&gt;Torrent Network (TN)&lt;/li&gt; &#xA;  &lt;li&gt;Torrent Sector Crew (TSC)&lt;/li&gt; &#xA;  &lt;li&gt;Torrent-Explosiv&lt;/li&gt; &#xA;  &lt;li&gt;Torrent-Syndikat &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;TOrrent-tuRK (TORK)&lt;/li&gt; &#xA;  &lt;li&gt;Torrent.LT&lt;/li&gt; &#xA;  &lt;li&gt;TorrentBD&lt;/li&gt; &#xA;  &lt;li&gt;TorrentBytes (TBy)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentCCF (TCCF)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentDay (TD)&lt;/li&gt; &#xA;  &lt;li&gt;Torrenteros (TTR)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentHeaven &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;TorrentHR &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Torrenting (TT)&lt;/li&gt; &#xA;  &lt;li&gt;Torrentland&lt;/li&gt; &#xA;  &lt;li&gt;TorrentLeech (TL)&lt;/li&gt; &#xA;  &lt;li&gt;TorrentLeech.pl&lt;/li&gt; &#xA;  &lt;li&gt;TorrentMasters&lt;/li&gt; &#xA;  &lt;li&gt;TorrentSeeds (TS)&lt;/li&gt; &#xA;  &lt;li&gt;TotallyKids (TK)&lt;/li&gt; &#xA;  &lt;li&gt;ToTheGlory (TTG) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;TrackerMK&lt;/li&gt; &#xA;  &lt;li&gt;TranceTraffic&lt;/li&gt; &#xA;  &lt;li&gt;TreZzoR &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;TurkSeed&lt;/li&gt; &#xA;  &lt;li&gt;TurkTorrent (TT)&lt;/li&gt; &#xA;  &lt;li&gt;TV Chaos UK (TVCUK)&lt;/li&gt; &#xA;  &lt;li&gt;TVstore&lt;/li&gt; &#xA;  &lt;li&gt;U2 (U2分享園@動漫花園) &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;UBits&lt;/li&gt; &#xA;  &lt;li&gt;UHDBits&lt;/li&gt; &#xA;  &lt;li&gt;UltraHD&lt;/li&gt; &#xA;  &lt;li&gt;UnionGang&lt;/li&gt; &#xA;  &lt;li&gt;UnleashTheCartoons&lt;/li&gt; &#xA;  &lt;li&gt;UnlimitZ&lt;/li&gt; &#xA;  &lt;li&gt;Upload.cx &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;UTOPIA&lt;/li&gt; &#xA;  &lt;li&gt;WDT (Wrestling Desires Torrents / Ultimate Wrestling Torrents)&lt;/li&gt; &#xA;  &lt;li&gt;White Angel&lt;/li&gt; &#xA;  &lt;li&gt;WinterSakura&lt;/li&gt; &#xA;  &lt;li&gt;World-In-HD &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;World-of-Tomorrow&lt;/li&gt; &#xA;  &lt;li&gt;Wukong&lt;/li&gt; &#xA;  &lt;li&gt;x-ite.me (XM)&lt;/li&gt; &#xA;  &lt;li&gt;xBytesV2&lt;/li&gt; &#xA;  &lt;li&gt;XSpeeds (XS)&lt;/li&gt; &#xA;  &lt;li&gt;Xthor&lt;/li&gt; &#xA;  &lt;li&gt;XtremeBytes&lt;/li&gt; &#xA;  &lt;li&gt;XWT-Classics&lt;/li&gt; &#xA;  &lt;li&gt;XWTorrents (XWT)&lt;/li&gt; &#xA;  &lt;li&gt;YDYPT&lt;/li&gt; &#xA;  &lt;li&gt;Zamunda.net&lt;/li&gt; &#xA;  &lt;li&gt;Zelka.org&lt;/li&gt; &#xA;  &lt;li&gt;ZmPT (织梦)&lt;/li&gt; &#xA;  &lt;li&gt;ZonaQ&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Trackers marked with &lt;a href=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/label-inviteneeded.png&#34; alt=&#34;(invite needed)&#34;&gt;&lt;/a&gt; have no active maintainer and may be missing features or be broken. If you have an invite for them please send it to garfieldsixtynine -at- gmail.com or jacketttest -at- gmail.com to get them fixed/improved.&lt;/p&gt; &#xA;&lt;h3&gt;Aggregate indexers&lt;/h3&gt; &#xA;&lt;p&gt;A special &#34;all&#34; indexer is available at &lt;code&gt;/api/v2.0/indexers/all/results/torznab&lt;/code&gt;. It will query all configured indexers and return the combined results.&lt;/p&gt; &#xA;&lt;p&gt;If your client supports multiple feeds it&#39;s recommended to add each indexer directly instead of using the all indexer. Using the all indexer has no advantages (besides reduced management overhead), only disadvantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you lose control over indexer specific settings (categories, search modes, etc.)&lt;/li&gt; &#xA; &lt;li&gt;mixing search modes (IMDB, query, etc.) might cause low-quality results&lt;/li&gt; &#xA; &lt;li&gt;indexer specific categories (&amp;gt;= 100000) can&#39;t be used.&lt;/li&gt; &#xA; &lt;li&gt;slow indexers will slow down the overall result&lt;/li&gt; &#xA; &lt;li&gt;total results are limited to 1000&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get all Jackett indexers including their capabilities you can use &lt;code&gt;t=indexers&lt;/code&gt; on the all indexer. To get only configured/unconfigured indexers you can also add &lt;code&gt;configured=true/false&lt;/code&gt; as a query parameter.&lt;/p&gt; &#xA;&lt;h3&gt;Filter indexers&lt;/h3&gt; &#xA;&lt;p&gt;Another special &#34;filter&#34; indexer is available at &lt;code&gt;/api/v2.0/indexers/&amp;lt;filter&amp;gt;/results/torznab&lt;/code&gt; It will query the configured indexers that match the &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; expression criteria and return the combined results as &#34;all&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Supported filters&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Filter&lt;/th&gt; &#xA;   &lt;th&gt;Condition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;type:&amp;lt;type&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where the indexer type is equal to &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag:&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where the indexer tags contains &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;lang:&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where the indexer language start with &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;test:{passed|failed}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where the last indexer test performed &lt;code&gt;passed&lt;/code&gt; or &lt;code&gt;failed&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;status:{healthy|failing|unknown}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where the indexer state is &lt;code&gt;healthy&lt;/code&gt; (successfully operates in the last minutes), &lt;code&gt;failing&lt;/code&gt; (generates errors in the recent call) or &lt;code&gt;unknown&lt;/code&gt; (unused for a while)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Supported operators&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operator&lt;/th&gt; &#xA;   &lt;th&gt;Condition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!&amp;lt;expr&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where not &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;expr1&amp;gt;+&amp;lt;expr2&amp;gt;[+&amp;lt;expr3&amp;gt;...]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where &lt;code&gt;&amp;lt;expr1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;expr2&amp;gt;&lt;/code&gt; [and &lt;code&gt;&amp;lt;expr3&amp;gt;&lt;/code&gt;...]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;expr1&amp;gt;,&amp;lt;expr2&amp;gt;[,&amp;lt;expr3&amp;gt;...]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;where &lt;code&gt;&amp;lt;expr1&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;expr2&amp;gt;&lt;/code&gt; [or &lt;code&gt;&amp;lt;expr3&amp;gt;&lt;/code&gt;...]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example 1: The &#34;filter&#34; indexer at &lt;code&gt;/api/v2.0/indexers/tag:group1,!type:private+lang:en/results/torznab&lt;/code&gt; will query all the configured indexers tagged with &lt;code&gt;group1&lt;/code&gt; or all the indexers not private and with &lt;code&gt;en&lt;/code&gt; language (&lt;code&gt;en-en&lt;/code&gt;,&lt;code&gt;en-us&lt;/code&gt;,...)&lt;/p&gt; &#xA;&lt;p&gt;Example 2: The &#34;filter&#34; indexer at &lt;code&gt;/api/v2.0/indexers/!status:failing,test:passed&lt;/code&gt; will query all the configured indexers not &lt;code&gt;failing&lt;/code&gt; or which &lt;code&gt;passed&lt;/code&gt; its last test.&lt;/p&gt; &#xA;&lt;h3&gt;Search modes and parameters&lt;/h3&gt; &#xA;&lt;p&gt;A list of supported API search modes and parameters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;t=search:&#xA;   params  : q&#xA;t=tvsearch:&#xA;   params  : q, season, ep, imdbid, tvdbid, rid, tmdbid, tvmazeid, traktid, doubanid, year, genre&#xA;t=movie:&#xA;   params  : q, imdbid, tmdbid, traktid, doubanid, year, genre&#xA;t=music:&#xA;   params  : q, album, artist, label, track, year, genre&#xA;t=book:&#xA;   params  : q, title, author, publisher, year, genre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.../api?apikey=APIKEY&amp;amp;t=search&amp;amp;cat=1,3&amp;amp;q=Show+Title+S01E02&#xA;&#xA;.../api?apikey=APIKEY&amp;amp;t=tvsearch&amp;amp;cat=1,3&amp;amp;q=Show+Title&amp;amp;season=1&amp;amp;ep=2&#xA;.../api?apikey=APIKEY&amp;amp;t=tvsearch&amp;amp;cat=1,3&amp;amp;genre=comedy&amp;amp;season=2023&amp;amp;ep=02/13&#xA;&#xA;.../api?apikey=APIKEY&amp;amp;t=movie&amp;amp;cat=2&amp;amp;q=Movie+Title&amp;amp;year=2023&#xA;.../api?apikey=APIKEY&amp;amp;t=movie&amp;amp;cat=2&amp;amp;imdbid=tt1234567&#xA;&#xA;.../api?apikey=APIKEY&amp;amp;t=music&amp;amp;cat=4&amp;amp;album=Title&amp;amp;artist=Name&#xA;&#xA;.../api?apikey=APIKEY&amp;amp;t=book&amp;amp;cat=5,6&amp;amp;genre=horror&amp;amp;publisher=Stuff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation on Windows&lt;/h2&gt; &#xA;&lt;p&gt;We recommend you install Jackett as a Windows service using the supplied installer. You may also download the zipped version if you would like to configure everything manually.&lt;/p&gt; &#xA;&lt;p&gt;To get started with using the installer for Jackett, follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check if you need any .NET prerequisites installed, see &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/install/windows?tabs=net60#dependencies&#34;&gt;https://docs.microsoft.com/en-us/dotnet/core/install/windows?tabs=net60#dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the latest version of the Windows installer, &#34;Jackett.Installer.Windows.exe&#34; from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases/latest&#34;&gt;releases&lt;/a&gt; page.&lt;/li&gt; &#xA; &lt;li&gt;When prompted if you would like this app to make changes to your computer, select &#34;yes&#34;.&lt;/li&gt; &#xA; &lt;li&gt;If you would like to install Jackett as a Windows Service, make sure the &#34;Install as Windows Service&#34; checkbox is filled.&lt;/li&gt; &#xA; &lt;li&gt;Once the installation has finished, check the &#34;Launch Jackett&#34; box to get started.&lt;/li&gt; &#xA; &lt;li&gt;Navigate your web browser to &lt;a href=&#34;http://127.0.0.1:9117&#34;&gt;http://127.0.0.1:9117&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re now ready to begin adding your trackers and using Jackett.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When installed as a service the tray icon acts as a way to open/start/stop Jackett. If you opted to not install it as a service then Jackett will run its web server from the tray tool.&lt;/p&gt; &#xA;&lt;p&gt;Jackett can also be run from the command line if you would like to see log messages (Ensure the server isn&#39;t already running from the tray/service). This can be done by using &#34;JackettConsole.exe&#34; (for Command Prompt), found in the Jackett data folder: &#34;%ProgramData%\Jackett&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Install on Linux (AMDx64)&lt;/h2&gt; &#xA;&lt;p&gt;On most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page &lt;a href=&#34;https://github.com/dotnet/core/raw/master/Documentation/linux-prereqs.md&#34;&gt;https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install as service&lt;/h3&gt; &#xA;&lt;p&gt;A) Command to download and install latest package and run the Jackett service:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cd /opt &amp;amp;&amp;amp; f=Jackett.Binaries.LinuxAMDx64.tar.gz &amp;amp;&amp;amp; release=$(wget -q https://github.com/Jackett/Jackett/releases/latest -O - | grep &#34;title&amp;gt;Release&#34; | cut -d &#34; &#34; -f 4) &amp;amp;&amp;amp; sudo wget -Nc https://github.com/Jackett/Jackett/releases/download/$release/&#34;$f&#34; &amp;amp;&amp;amp; sudo tar -xzf &#34;$f&#34; &amp;amp;&amp;amp; sudo rm -f &#34;$f&#34; &amp;amp;&amp;amp; cd Jackett* &amp;amp;&amp;amp; sudo ./install_service_systemd.sh &amp;amp;&amp;amp; systemctl status jackett.service &amp;amp;&amp;amp; cd - &amp;amp;&amp;amp; echo -e &#34;\nVisit http://127.0.0.1:9117&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;B) Or manually:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxAMDx64.tar.gz&lt;/code&gt; release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To install Jackett as a service, open a Terminal, cd to the jackett folder and run &lt;code&gt;sudo ./install_service_systemd.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run without installing as a service&lt;/h3&gt; &#xA;&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxAMDx64.tar.gz&lt;/code&gt; release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt;, open a Terminal, cd to the jackett folder and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;home directory&lt;/h3&gt; &#xA;&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt; &#xA;&lt;h2&gt;Install on Linux (ARMv7 or above)&lt;/h2&gt; &#xA;&lt;p&gt;On most operating systems all the required dependencies will already be present. In case they are not, you can refer to this page &lt;a href=&#34;https://github.com/dotnet/core/raw/master/Documentation/linux-prereqs.md&#34;&gt;https://github.com/dotnet/core/blob/master/Documentation/linux-prereqs.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install as service&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxARM32.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.LinuxARM64.tar.gz&lt;/code&gt; (32 bit is the most common on ARM) release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To install Jackett as a service, open a Terminal, cd to the jackett folder and run &lt;code&gt;sudo ./install_service_systemd.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run without installing as a service&lt;/h3&gt; &#xA;&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.LinuxARM32.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.LinuxARM64.tar.gz&lt;/code&gt; (32 bit is the most common on ARM) release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt;, open a Terminal, cd to the jackett folder and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;home directory&lt;/h3&gt; &#xA;&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt; &#xA;&lt;h2&gt;Installation on Linux (ARMv6 or below)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;http://www.mono-project.com/download/#download-lin&#34;&gt;Mono 5.8&lt;/a&gt; or better (using the latest stable release is recommended) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the instructions on the mono website and install the &lt;code&gt;mono-devel&lt;/code&gt; and the &lt;code&gt;ca-certificates-mono&lt;/code&gt; packages.&lt;/li&gt; &#xA;   &lt;li&gt;On Red Hat/CentOS/openSUSE/Fedora the &lt;code&gt;mono-locale-extras&lt;/code&gt; package is also required.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install libcurl: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Debian/Ubuntu: &lt;code&gt;apt-get install libcurl4-openssl-dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Redhat/Fedora: &lt;code&gt;yum install libcurl-devel&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For other distros see the &lt;a href=&#34;http://curl.haxx.se/dlwiz/?type=devel&#34;&gt;Curl docs&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.Mono.tar.gz&lt;/code&gt; release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt; and run Jackett using mono with the command &lt;code&gt;mono --debug JackettConsole.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) To install Jackett as a service, open the Terminal and run &lt;code&gt;sudo ./install_service_systemd_mono.sh&lt;/code&gt; You need root permissions to install the service. The service will start on each logon. You can always stop it by running &lt;code&gt;systemctl stop jackett.service&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;systemctl start jackett.service&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt; and also in &lt;code&gt;journalctl -u jackett.service&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want to run it with a user without a /home directory you need to add &lt;code&gt;Environment=XDG_CONFIG_HOME=/path/to/folder&lt;/code&gt; to your systemd file, this folder will be used to store your config files.&lt;/p&gt; &#xA;&lt;p&gt;Mono must be compiled with the Roslyn compiler (default), using MCS will cause &#34;An error has occurred.&#34; errors (See &lt;a href=&#34;https://github.com/Jackett/Jackett/issues/2704&#34;&gt;https://github.com/Jackett/Jackett/issues/2704&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Installation on Linux via Ansible&lt;/h3&gt; &#xA;&lt;p&gt;On a CentOS/RedHat 7 system: &lt;a href=&#34;https://galaxy.ansible.com/jewflix/jackett&#34;&gt;jewflix.jackett&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;On an Ubuntu 16 system: &lt;a href=&#34;https://galaxy.ansible.com/chrisjohnson00/jackett&#34;&gt;chrisjohnson00.jackett&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation on macOS&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.15+ or greater&lt;/p&gt; &#xA;&lt;h3&gt;Install as service&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.macOS.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.macOSARM64.tar.gz&lt;/code&gt; release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open the extracted folder and double-click on &lt;code&gt;install_service_macos&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If the installation was a success, you can close the Terminal window.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The service will start on each logon. You can always stop it by running &lt;code&gt;launchctl unload ~/Library/LaunchAgents/org.user.Jackett.plist&lt;/code&gt; from Terminal. You can start it again it using &lt;code&gt;launchctl load ~/Library/LaunchAgents/org.user.Jackett.plist&lt;/code&gt;. Logs are stored as usual under &lt;code&gt;~/.config/Jackett/log.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run without installing as a service&lt;/h3&gt; &#xA;&lt;p&gt;Download and extract the latest &lt;code&gt;Jackett.Binaries.macOS.tar.gz&lt;/code&gt; or &lt;code&gt;Jackett.Binaries.macOSARM64.tar.gz&lt;/code&gt; release from the &lt;a href=&#34;https://github.com/Jackett/Jackett/releases&#34;&gt;releases page&lt;/a&gt; and run Jackett with the command &lt;code&gt;./jackett&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation using Docker&lt;/h2&gt; &#xA;&lt;p&gt;Detailed instructions are available at &lt;a href=&#34;https://hub.docker.com/r/linuxserver/jackett/&#34;&gt;LinuxServer.io Jackett Docker&lt;/a&gt;. The Jackett Docker is highly recommended, especially if you are having Mono stability issues or having issues running Mono on your system e.g. QNAP, Synology. Thanks to &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation on Alpine Linux&lt;/h2&gt; &#xA;&lt;p&gt;Detailed instructions are available at &lt;a href=&#34;https://github.com/Jackett/Jackett/wiki/Installation-on-Alpine-Linux&#34;&gt;Jackett&#39;s Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation on Synology&lt;/h2&gt; &#xA;&lt;p&gt;Jackett is available as a &lt;a href=&#34;https://synocommunity.com/package/jackett&#34;&gt;beta package&lt;/a&gt; from &lt;a href=&#34;https://synocommunity.com/&#34;&gt;SynoCommunity&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation on OpenWrt&lt;/h2&gt; &#xA;&lt;p&gt;Detailed instructions are available at &lt;a href=&#34;https://github.com/Jackett/Jackett/wiki/Installation-on-OpenWrt&#34;&gt;Jackett&#39;s Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running Jackett behind a reverse proxy&lt;/h2&gt; &#xA;&lt;p&gt;When running jackett behind a reverse proxy make sure that the original hostname of the request is passed to Jackett. If HTTPS is used also set the X-Forwarded-Proto header to &#34;https&#34;. Don&#39;t forget to adjust the &#34;Base path override&#34; Jackett option accordingly.&lt;/p&gt; &#xA;&lt;p&gt;Example config for apache:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Location /jackett&amp;gt;&#xA;    ProxyPreserveHost On&#xA;    RequestHeader set X-Forwarded-Proto expr=%{REQUEST_SCHEME}&#xA;    ProxyPass http://127.0.0.1:9117&#xA;    ProxyPassReverse http://127.0.0.1:9117&#xA;&amp;lt;/Location&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example config for Nginx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;location /jackett {&#xA;&#x9;proxy_pass http://127.0.0.1:9117;&#xA;&#x9;proxy_set_header X-Real-IP $remote_addr;&#xA;&#x9;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;&#x9;proxy_set_header X-Forwarded-Proto $scheme;&#xA;&#x9;proxy_set_header X-Forwarded-Host $http_host;&#xA;&#x9;proxy_redirect off;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Search Cache&lt;/h2&gt; &#xA;&lt;p&gt;Jackett has an internal cache to increase search speed and to reduce the number of requests to the torrent sites. The default values should be good for most users. If you have problems, you can reduce the TTL value in the configuration or even disable the cache. Keep in mind that you can be banned by the sites if you make a lot of requests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cache TTL (seconds)&lt;/strong&gt;: (default 2100 / 35 minutes) It indicates how long the results can remain in the cache.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cache max results per indexer&lt;/strong&gt;: (default 1000) How many results are kept in cache for each indexer. This limit is used to limit the use of RAM. If you make many requests and you have enough memory, increase this number.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Torznab cache&lt;/h2&gt; &#xA;&lt;p&gt;If you have enabled the Jackett internal cache, but have an indexer for which you would prefer to fetch fresh results (thus ignoring the internal cache) then add the &lt;strong&gt;&amp;amp;cache=false&lt;/strong&gt; parameter to your torznab query.&lt;/p&gt; &#xA;&lt;h2&gt;Configuring FlareSolverr&lt;/h2&gt; &#xA;&lt;p&gt;Some indexers are protected by CloudFlare or similar services and Jackett is not able to solve the challenges. For these cases, &lt;a href=&#34;https://github.com/FlareSolverr/FlareSolverr&#34;&gt;FlareSolverr&lt;/a&gt; has been integrated into Jackett. This service is in charge of solving the challenges and configuring Jackett with the necessary cookies. Setting up this service is optional, most indexers don&#39;t need it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install FlareSolverr service (following their instructions)&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;strong&gt;FlareSolverr API URL&lt;/strong&gt; in Jackett. For example: &lt;a href=&#34;http://172.17.0.2:8191&#34;&gt;http://172.17.0.2:8191&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;It is recommended to keep the default value in &lt;strong&gt;FlareSolverr Max Timeout (ms)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuring OMDb&lt;/h2&gt; &#xA;&lt;p&gt;This feature is used as a fallback (when using the aggregate Indexer) to get the movie/series title if only the IMDB ID is provided in the request. To use it, please just request a free API key on &lt;a href=&#34;http://www.omdbapi.com/apikey.aspx&#34;&gt;OMDb&lt;/a&gt; (1,000 daily requests limit) and paste the key in Jackett&lt;/p&gt; &#xA;&lt;h2&gt;Command line switches&lt;/h2&gt; &#xA;&lt;p&gt;You can pass various options when running via the command line:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Command Line Switches &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-i, --Install&lt;/code&gt; Install Jackett windows service (Must be admin)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-s, --Start&lt;/code&gt; Start the Jacket Windows service (Must be admin)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-k, --Stop&lt;/code&gt; Stop the Jacket Windows service (Must be admin)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-u, --Uninstall&lt;/code&gt; Uninstall Jackett windows service (Must be admin).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-r, --ReserveUrls&lt;/code&gt; (Re)Register windows port reservations (Required for listening on all interfaces).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-l, --Logging&lt;/code&gt; Log all requests/responses to Jackett&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-t, --Tracing&lt;/code&gt; Enable tracing&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-c, --UseClient&lt;/code&gt; Override web client selection. [automatic(Default)/httpclient/httpclient2]&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-x, --ListenPublic&lt;/code&gt; Listen publicly&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-z, --ListenPrivate&lt;/code&gt; Only allow local access&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-p, --Port&lt;/code&gt; Web server port&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-n, --IgnoreSslErrors&lt;/code&gt; [true/false] Ignores invalid SSL certificates&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;-d, --DataFolder&lt;/code&gt; Specify the location of the data folder (Must be an admin on Windows)&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;e.g. --DataFolder=&#34;D:\Your Data\Jackett&#34;.&lt;/li&gt; &#xA;    &lt;li&gt;Don&#39;t use this on Unix (mono) systems. On Unix just adjust the HOME directory of the user to the data folder or set the XDG_CONFIG_HOME environment variable.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;--NoRestart&lt;/code&gt; Don&#39;t restart after update&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;--PIDFile&lt;/code&gt; Specify the location of PID file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;--NoUpdates&lt;/code&gt; Disable automatic updates&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;--help&lt;/code&gt; Display this help screen.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;--version&lt;/code&gt; Display version information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the .NET 6 &lt;a href=&#34;https://www.microsoft.com/net/download/windows&#34;&gt;SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone Jackett&lt;/li&gt; &#xA; &lt;li&gt;Open PowerShell and from the &lt;code&gt;src&lt;/code&gt; directory:&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;run &lt;code&gt;dotnet msbuild /restore&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;then run &lt;code&gt;dotnet restore&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;and run &lt;code&gt;dotnet build&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the Jackett solution in Visual Studio 2019 (version 16.9 or above)&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Jackett.Server&lt;/strong&gt; as the startup project&lt;/li&gt; &#xA; &lt;li&gt;In the drop-down menu of the run button select &lt;strong&gt;Jackett.Server&lt;/strong&gt; instead of &lt;em&gt;IIS Express&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build/Start the project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OSX&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# manually install osx dotnet via:&#xA;https://dotnet.microsoft.com/download?initial-os=macos&#xA;# then:&#xA;git clone https://github.com/Jackett/Jackett.git&#xA;cd Jackett/src&#xA;&#xA;# dotnet core version&#xA;dotnet publish Jackett.Server -f net6.0 --self-contained -r osx-x64 -c Debug # takes care of everything&#xA;./Jackett.Server/bin/Debug/net6.0/osx-x64/jackett # run jackett&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install nuget msbuild dotnet-sdk-6.0 # install build tools (Debian/ubuntu)&#xA;git clone https://github.com/Jackett/Jackett.git&#xA;cd Jackett/src&#xA;&#xA;# dotnet core version&#xA;dotnet publish Jackett.Server -f net6.0 --self-contained -r linux-x64 -c Debug # takes care of everything&#xA;./Jackett.Server/bin/Debug/net6.0/linux-x64/jackett # run jackett&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot1.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot2.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jackett/Jackett/master/.github/jackett-screenshot3.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>