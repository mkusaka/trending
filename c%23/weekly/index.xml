<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:05:37Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ShareX/ShareX</title>
    <updated>2022-07-17T02:05:37Z</updated>
    <id>tag:github.com,2022-07-17:/ShareX/ShareX</id>
    <link href="https://github.com/ShareX/ShareX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to many supported destinations you can choose from.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ShareX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/ShareX/sharex&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/build/ShareX/ShareX?label=Build&amp;amp;cacheSeconds=3600&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/sharex/sharex&#34;&gt;&lt;img src=&#34;https://img.shields.io/codefactor/grade/github/ShareX/ShareX?label=CodeFactor&amp;amp;cacheSeconds=3600&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ShareX/ShareX/develop/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ShareX/ShareX?label=License&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ShareX/ShareX/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ShareX/ShareX?label=Release&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://getsharex.com/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ShareX/ShareX/total?label=Downloads&amp;amp;cacheSeconds=3600&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ShareX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/194170124859736065?label=Discord&amp;amp;cacheSeconds=3600&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ShareX&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ShareX?cacheSeconds=3600&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getsharex.com&#34;&gt;&lt;img src=&#34;https://getsharex.com/img/ShareX_Screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For further information check &lt;a href=&#34;https://getsharex.com&#34;&gt;getsharex.com&lt;/a&gt;&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>ipodtouch0218/NSMB-MarioVsLuigi</title>
    <updated>2022-07-17T02:05:37Z</updated>
    <id>tag:github.com,2022-07-17:/ipodtouch0218/NSMB-MarioVsLuigi</id>
    <link href="https://github.com/ipodtouch0218/NSMB-MarioVsLuigi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Standalone Unity remake of New Super Mario Bros DS&#39; multiplayer gamemode, &#34;Mario vs Luigi&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NSMB-MarioVsLuigi&lt;/h1&gt; &#xA;&lt;p&gt;A unity-standalone 2-10 player remake of the Mario vs Luigi gamemode from the New Super Mario Bros DS download game.&lt;/p&gt; &#xA;&lt;p&gt;Includes the 5 default levels (Grassland, Bricks, Castle, Pipes, and Ice), along with custom levels: Jungle, Sky, and Volcano! All powerups are implemented and fully faithful to their originals, along with the addition of NSMBWii&#39;s Propeller Suit &amp;amp; Ice Flower!&lt;/p&gt; &#xA;&lt;h2&gt;Discord&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/dgKVaUKpj5&#34;&gt;&lt;strong&gt;Join the discord&lt;/strong&gt;&lt;/a&gt; to keep up to date with the development of the game, make feature suggestions, report bugs (if you&#39;re too lazy to use issues...), get technical support, look for people to play with, and just talk about the game!&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ipodtouch0218.itch.io/nsmb-mariovsluigi&#34;&gt;Play now in browser on itch.io!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows, Linux, and Mac Builds: &lt;a href=&#34;https://github.com/ipodtouch0218/NSMB-MarioVsLuigi/releases/latest&#34;&gt;https://github.com/ipodtouch0218/NSMB-MarioVsLuigi/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Default Controls&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Keyboard&lt;/th&gt; &#xA;   &lt;th&gt;Gamepad &lt;em&gt;(unstable)&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Movement&lt;/td&gt; &#xA;   &lt;td&gt;WASD / Arrow Keys&lt;/td&gt; &#xA;   &lt;td&gt;Left Analog / DPad&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jump&lt;/td&gt; &#xA;   &lt;td&gt;Space / Z&lt;/td&gt; &#xA;   &lt;td&gt;A / B Buttons&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sprint&lt;/td&gt; &#xA;   &lt;td&gt;Shift / X (hold)&lt;/td&gt; &#xA;   &lt;td&gt;X / Y Buttons (hold)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Powerup Action&lt;/td&gt; &#xA;   &lt;td&gt;E / C&lt;/td&gt; &#xA;   &lt;td&gt;RB / RT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reserve Item&lt;/td&gt; &#xA;   &lt;td&gt;Q / V&lt;/td&gt; &#xA;   &lt;td&gt;LB / LT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Show Scoreboard&lt;/td&gt; &#xA;   &lt;td&gt;Tab&lt;/td&gt; &#xA;   &lt;td&gt;Select&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pause&lt;/td&gt; &#xA;   &lt;td&gt;Escape&lt;/td&gt; &#xA;   &lt;td&gt;Start Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UI Confirm&lt;/td&gt; &#xA;   &lt;td&gt;Left Mouse / Enter / Z&lt;/td&gt; &#xA;   &lt;td&gt;A Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Building&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Install Unity 2022.1.6f1 via Unity Hub&lt;/p&gt; &#xA; &lt;p&gt;Clone the project using &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;. Do NOT use the .zip download as a substitute for installing Git, as Unity uses Git to resolve dependencies once imported.&lt;/p&gt; &#xA; &lt;p&gt;Open the project&#39;s folder in Unity Hub.&lt;/p&gt; &#xA; &lt;p&gt;You can make a build in the File Section in the top left, and hitting build settings.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Credits&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;Original Content:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;New Super Mario Bros.&lt;/li&gt; &#xA;  &lt;li&gt;New Super Mario Bros. Wii&lt;/li&gt; &#xA;  &lt;li&gt;Super Mario Maker 2&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Contributors:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ipodtouch0218&#34;&gt;@ipodtouch0218&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;@GradedWarrior&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/TheMoogle&#34;&gt;@TheMoogle&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Skillz808&#34;&gt;@Skillz&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/skarph&#34;&gt;@skarph&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/zestydevy&#34;&gt;@Zest&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/kittenchilly&#34;&gt;@kittenchilly&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Amy54Desu&#34;&gt;@Amy54Desu&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/KrakHub&#34;&gt;@Kraken&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;QA Testing:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;TheCyVap&lt;/li&gt; &#xA;  &lt;li&gt;Shadow_Walker13&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Level Design:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Skarph&lt;/li&gt; &#xA;  &lt;li&gt;TheCyVap&lt;/li&gt; &#xA;  &lt;li&gt;mindnomad&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Rippers:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Demon2Warrier (Background)&lt;/li&gt; &#xA;  &lt;li&gt;VentureSonic (Background)&lt;/li&gt; &#xA;  &lt;li&gt;Poudink (Tiles)&lt;/li&gt; &#xA;  &lt;li&gt;Someone (Tiles)&lt;/li&gt; &#xA;  &lt;li&gt;Hiccup (Tiles)&lt;/li&gt; &#xA;  &lt;li&gt;Jouv (Tiles)&lt;/li&gt; &#xA;  &lt;li&gt;Symbolcom (Enemies)&lt;/li&gt; &#xA;  &lt;li&gt;Mr. C (Enemies)&lt;/li&gt; &#xA;  &lt;li&gt;Ragey (Enemies)&lt;/li&gt; &#xA;  &lt;li&gt;Technokami (Enemies)&lt;/li&gt; &#xA;  &lt;li&gt;A Refracted Swindler (UI)&lt;/li&gt; &#xA;  &lt;li&gt;Treeki (UI)&lt;/li&gt; &#xA;  &lt;li&gt;Double S (Models)&lt;/li&gt; &#xA;  &lt;li&gt;KartMakerBrosU (Models)&lt;/li&gt; &#xA;  &lt;li&gt;TeridaxXDOO1 (Models&lt;/li&gt; &#xA;  &lt;li&gt;Skarph (Models/Sound)&lt;/li&gt; &#xA;  &lt;li&gt;LukeWarnut (Sound)&lt;/li&gt; &#xA;  &lt;li&gt;Luke Hackett (Sound)&lt;/li&gt; &#xA;  &lt;li&gt;mindnomad (Sound)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>mbdavid/LiteDB</title>
    <updated>2022-07-17T02:05:37Z</updated>
    <id>tag:github.com,2022-07-17:/mbdavid/LiteDB</id>
    <link href="https://github.com/mbdavid/LiteDB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LiteDB - A .NET NoSQL Document Store in a single data file - https://www.litedb.org&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiteDB - A .NET NoSQL Document Store in a single data file&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/mbdavid/LiteDB?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/mbdavid/LiteDB.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/mbdavid/LiteDB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/mbdavid/litedb&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/sfe8he0vik18m033?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/mbdavid/LiteDB&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mbdavid/LiteDB.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;LiteDB is a small, fast and lightweight .NET NoSQL embedded database.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Serverless NoSQL Document Store&lt;/li&gt; &#xA; &lt;li&gt;Simple API, similar to MongoDB&lt;/li&gt; &#xA; &lt;li&gt;100% C# code for .NET 4.5 / NETStandard 1.3/2.0 in a single DLL (less than 450kb)&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe&lt;/li&gt; &#xA; &lt;li&gt;ACID with full transaction support&lt;/li&gt; &#xA; &lt;li&gt;Data recovery after write failure (WAL log file)&lt;/li&gt; &#xA; &lt;li&gt;Datafile encryption using DES (AES) cryptography&lt;/li&gt; &#xA; &lt;li&gt;Map your POCO classes to &lt;code&gt;BsonDocument&lt;/code&gt; using attributes or fluent mapper API&lt;/li&gt; &#xA; &lt;li&gt;Store files and stream data (like GridFS in MongoDB)&lt;/li&gt; &#xA; &lt;li&gt;Single data file storage (like SQLite)&lt;/li&gt; &#xA; &lt;li&gt;Index document fields for fast search&lt;/li&gt; &#xA; &lt;li&gt;LINQ support for queries&lt;/li&gt; &#xA; &lt;li&gt;SQL-Like commands to access/transform data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mbdavid/LiteDB.Studio&#34;&gt;LiteDB Studio&lt;/a&gt; - Nice UI for data access&lt;/li&gt; &#xA; &lt;li&gt;Open source and free for everyone - including commercial use&lt;/li&gt; &#xA; &lt;li&gt;Install from NuGet: &lt;code&gt;Install-Package LiteDB&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;New v5&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New storage engine&lt;/li&gt; &#xA; &lt;li&gt;No locks for &lt;code&gt;read&lt;/code&gt; operations (multiple readers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Write&lt;/code&gt; locks per collection (multiple writers)&lt;/li&gt; &#xA; &lt;li&gt;Internal/System collections&lt;/li&gt; &#xA; &lt;li&gt;New &lt;code&gt;SQL-Like Syntax&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;New query engine (support projection, sort, filter, query)&lt;/li&gt; &#xA; &lt;li&gt;Partial document load (root level)&lt;/li&gt; &#xA; &lt;li&gt;and much, much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lite.Studio&lt;/h2&gt; &#xA;&lt;p&gt;New UI to manage and visualize your database:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/61465032cd9df0ccb7c0ff4a2d4f1cf772cdaa14/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f454f58564b7674583041412d6c64793f666f726d61743d6a7067266e616d653d6d656469756d&#34; alt=&#34;LiteDB.Studio&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://github.com/mbdavid/LiteDB/wiki&#34;&gt;the Wiki&lt;/a&gt; for full documentation. For simplified chinese version, &lt;a href=&#34;https://github.com/lidanger/LiteDB.wiki_Translation_zh-cn&#34;&gt;check here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LiteDB Community&lt;/h2&gt; &#xA;&lt;p&gt;Help LiteDB grow its user community by answering this &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSc4cNG7wyLKXXcOLIt7Ea4TlXCG6s-51_EfHPu2p5WZ2dIx7A/viewform?usp=sf_link&#34;&gt;simple survey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use LiteDB&lt;/h2&gt; &#xA;&lt;p&gt;A quick example for storing and searching documents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;// Create your POCO class&#xA;public class Customer&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Name { get; set; }&#xA;    public int Age { get; set; }&#xA;    public string[] Phones { get; set; }&#xA;    public bool IsActive { get; set; }&#xA;}&#xA;&#xA;// Open database (or create if doesn&#39;t exist)&#xA;using(var db = new LiteDatabase(@&#34;MyData.db&#34;))&#xA;{&#xA;    // Get customer collection&#xA;    var col = db.GetCollection&amp;lt;Customer&amp;gt;(&#34;customers&#34;);&#xA;&#xA;    // Create your new customer instance&#xA;    var customer = new Customer&#xA;    { &#xA;        Name = &#34;John Doe&#34;, &#xA;        Phones = new string[] { &#34;8000-0000&#34;, &#34;9000-0000&#34; }, &#xA;        Age = 39,&#xA;        IsActive = true&#xA;    };&#xA;&#xA;    // Create unique index in Name field&#xA;    col.EnsureIndex(x =&amp;gt; x.Name, true);&#xA;&#xA;    // Insert new customer document (Id will be auto-incremented)&#xA;    col.Insert(customer);&#xA;&#xA;    // Update a document inside a collection&#xA;    customer.Name = &#34;Joana Doe&#34;;&#xA;&#xA;    col.Update(customer);&#xA;&#xA;    // Use LINQ to query documents (with no index)&#xA;    var results = col.Find(x =&amp;gt; x.Age &amp;gt; 20);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using fluent mapper and cross document reference for more complex data models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;// DbRef to cross references&#xA;public class Order&#xA;{&#xA;    public ObjectId Id { get; set; }&#xA;    public DateTime OrderDate { get; set; }&#xA;    public Address ShippingAddress { get; set; }&#xA;    public Customer Customer { get; set; }&#xA;    public List&amp;lt;Product&amp;gt; Products { get; set; }&#xA;}        &#xA;&#xA;// Re-use mapper from global instance&#xA;var mapper = BsonMapper.Global;&#xA;&#xA;// &#34;Products&#34; and &#34;Customer&#34; are from other collections (not embedded document)&#xA;mapper.Entity&amp;lt;Order&amp;gt;()&#xA;    .DbRef(x =&amp;gt; x.Customer, &#34;customers&#34;)   // 1 to 1/0 reference&#xA;    .DbRef(x =&amp;gt; x.Products, &#34;products&#34;)    // 1 to Many reference&#xA;    .Field(x =&amp;gt; x.ShippingAddress, &#34;addr&#34;); // Embedded sub document&#xA;            &#xA;using(var db = new LiteDatabase(&#34;MyOrderDatafile.db&#34;))&#xA;{&#xA;    var orders = db.GetCollection&amp;lt;Order&amp;gt;(&#34;orders&#34;);&#xA;        &#xA;    // When query Order, includes references&#xA;    var query = orders&#xA;        .Include(x =&amp;gt; x.Customer)&#xA;        .Include(x =&amp;gt; x.Products) // 1 to many reference&#xA;        .Find(x =&amp;gt; x.OrderDate &amp;lt;= DateTime.Now);&#xA;&#xA;    // Each instance of Order will load Customer/Products references&#xA;    foreach(var order in query)&#xA;    {&#xA;        var name = order.Customer.Name;&#xA;        ...&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Where to use?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Desktop/local small applications&lt;/li&gt; &#xA; &lt;li&gt;Application file format&lt;/li&gt; &#xA; &lt;li&gt;Small web sites/applications&lt;/li&gt; &#xA; &lt;li&gt;One database &lt;strong&gt;per account/user&lt;/strong&gt; data store&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GUI viewer tool: &lt;a href=&#34;https://github.com/falahati/LiteDBViewer&#34;&gt;https://github.com/falahati/LiteDBViewer&lt;/a&gt; (v4)&lt;/li&gt; &#xA; &lt;li&gt;A GUI editor tool: &lt;a href=&#34;https://github.com/JosefNemec/LiteDbExplorer&#34;&gt;https://github.com/JosefNemec/LiteDbExplorer&lt;/a&gt; (v4)&lt;/li&gt; &#xA; &lt;li&gt;Lucene.NET directory: &lt;a href=&#34;https://github.com/sheryever/LiteDBDirectory&#34;&gt;https://github.com/sheryever/LiteDBDirectory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LINQPad support: &lt;a href=&#34;https://github.com/adospace/litedbpad&#34;&gt;https://github.com/adospace/litedbpad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;F# Support: &lt;a href=&#34;https://github.com/Zaid-Ajaj/LiteDB.FSharp&#34;&gt;https://github.com/Zaid-Ajaj/LiteDB.FSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UltraLiteDB (for Unity or IOT): &lt;a href=&#34;https://github.com/rejemy/UltraLiteDB&#34;&gt;https://github.com/rejemy/UltraLiteDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Change details for each release are documented in the &lt;a href=&#34;https://github.com/mbdavid/LiteDB/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code Signing&lt;/h2&gt; &#xA;&lt;p&gt;LiteDB is digitally signed courtesy of &lt;a href=&#34;https://www.signpath.io&#34;&gt;SignPath&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.signpath.io&#34;&gt; &lt;img src=&#34;https://about.signpath.io/assets/logo_signpath_500.png&#34; width=&#34;150&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>