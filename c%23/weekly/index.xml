<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-09T01:39:19Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/aspire-samples</title>
    <updated>2024-06-09T01:39:19Z</updated>
    <id>tag:github.com,2024-06-09:/dotnet/aspire-samples</id>
    <link href="https://github.com/dotnet/aspire-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Aspire Samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/aspire-samples/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet/aspire-samples/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI (main)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Samples for .NET Aspire.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://aka.ms/aspireannouncement&#34;&gt;.NET Aspire&lt;/a&gt; is a stack for building resilient, observable, cloud-native apps with .NET.&lt;/p&gt; &#xA;&lt;h2&gt;Official Samples&lt;/h2&gt; &#xA;&lt;p&gt;Official samples hosted in this repo can be accessed via the &lt;a href=&#34;https://learn.microsoft.com/samples/browse/?expanded=dotnet&amp;amp;products=dotnet-aspire&#34;&gt;Samples browser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sample highlights include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/AspireShop/&#34;&gt;Aspire Shop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/Metrics&#34;&gt;Metrics with OpenTelemetry, Prometheus &amp;amp; Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/AspireWithNode&#34;&gt;Integrating a Node.js app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/AspireWithDapr&#34;&gt;Integrating DAPR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/VolumeMount&#34;&gt;Persisting data in composed containers using volume mounts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/DatabaseContainers&#34;&gt;Working with database containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/samples/ClientAppsIntegration&#34;&gt;Integrating clients apps like WinForms&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;eShop&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/eshop&#34;&gt;eShop&lt;/a&gt; is a reference .NET application implementing an eCommerce web site using a services-based architecture using .NET Aspire.&lt;/p&gt; &#xA;&lt;h2&gt;.NET Aspire Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/dotnet/aspire&#34;&gt;.NET Aspire Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/aspireannouncement&#34;&gt;.NET Aspire Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/aspire&#34;&gt;.NET Aspire GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;.NET (including the aspire-samples repo) is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspire-samples/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The sample applications provided in this repository are intended to illustrate individual concepts that may be beneficial in understanding the underlying technology and its potential uses. These samples may not illustrate best practices for production environments.&lt;/p&gt; &#xA;&lt;p&gt;The code is not intended for operational deployment. Users should exercise caution and not rely on the samples as a foundation for any commercial or production use. See &lt;a href=&#34;https://learn.microsoft.com/aspnet/core/security/&#34;&gt;ASP.NET Core security topics&lt;/a&gt; for more information on security concerns related to hosting ASP.NET Core applications.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to this repository of samples related to official .NET Aspire hosting and components pieces (i.e. those pieces who&#39;s code lives in the &lt;a href=&#34;https://github.com/dotnet/aspire&#34;&gt;Aspire repo&lt;/a&gt; and that ship from the &lt;a href=&#34;https://www.nuget.org/profiles/aspire&#34;&gt;&lt;strong&gt;Aspire&lt;/strong&gt; NuGet account&lt;/a&gt;). It&#39;s generally a good idea to &lt;a href=&#34;https://github.com/dotnet/aspire-samples/issues/new/choose&#34;&gt;log an issue&lt;/a&gt; first to discuss any idea for a sample with the team before sending a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&#34;https://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;https://www.dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fullstackhero/dotnet-starter-kit</title>
    <updated>2024-06-09T01:39:19Z</updated>
    <id>tag:github.com,2024-06-09:/fullstackhero/dotnet-starter-kit</id>
    <link href="https://github.com/fullstackhero/dotnet-starter-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production Grade Cloud-Ready .NET 8 Starter Kit (Web API + Blazor Client) with Multitenancy Support, and Clean/Modular Architecture that saves roughly 200+ Development Hours! All Batteries Included.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/actions/workflows/dotnet.yml&#34;&gt;&lt;img src=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/actions/workflows/dotnet.yml/badge.svg?branch=main&#34; alt=&#34;dotnet-cicd&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fullstackhero/dotnet-webapi-boilerplate?color=2da44e&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yQWpShsKrf&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/878181478972928011?color=%237289da&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=%237289da&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FullStackHero.WebAPI.Boilerplate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/FullStackHero.WebAPI.Boilerplate?color=2da44e&amp;amp;label=nuget%20downloads&amp;amp;logo=nuget&#34; alt=&#34;Nuget downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/iammukeshm&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/iammukeshm.svg?style=social&amp;amp;label=Follow%20%40iammukeshm&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-webapi-boilerplate/main/media/fullstack-hero-dotnet-7-webapi-boilerplate-banner.png&#34; alt=&#34;fullstackhero webapi&#34; title=&#34;fullstackhero webapi&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s fullstackhero&#39;s .NET Web API Boilerplate?&lt;/h2&gt; &#xA;&lt;p&gt;fullstackhero&#39;s .NET Web API Boilerplate is a starting point for your next &lt;code&gt;.NET 7 Clean Architecture Project&lt;/code&gt; that incorporates the most essential packages and features your projects will ever need including out of the box Multi-Tenancy support. This project can save well over &lt;code&gt;200+ hours&lt;/code&gt; of development time for your team.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As the name suggests, this is an API / Server Boilerplate. You can find other Client Boilerplates that consume this API under &lt;code&gt;@fullstackhero&lt;/code&gt; handle.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Find &lt;code&gt;Blazor WebAssembly Boilerplate&lt;/code&gt; here - &lt;a href=&#34;https://github.com/fullstackhero/blazor-wasm-boilerplate&#34;&gt;https://github.com/fullstackhero/blazor-wasm-boilerplate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;YouTube Video - .NET Web API Boilerplate | FullStackHero - Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Watch the Getting started video here&lt;/code&gt; : &lt;a href=&#34;https://www.youtube.com/watch?v=a1mWRLQf9hY&#34;&gt;https://www.youtube.com/watch?v=a1mWRLQf9hY&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=a1mWRLQf9hY&#34;&gt;&lt;img src=&#34;https://codewithmukesh.com/wp-content/uploads/2023/04/fullstackhero-youtube.png&#34; alt=&#34;.NET Web API Boilerplate | FullStackHero - Getting Started&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this repository is to provide a complete and feature-rich starting point for any .NET Developer / Team to kick-start their next major project using .NET 7 Web API. This also serves the purpose of learning advanced concepts and implementations such as &lt;code&gt;Multitenancy, CQRS, Onion Architecture, Clean Coding standards, Cloud Deployments with Terraform to AWS, Docker Concepts, CICD Pipelines &amp;amp; Workflows&lt;/code&gt; and so on.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Built on .NET 7.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Follows Clean Architecture Principles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Domain Driven Design&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cloud Ready. Can be deployed to AWS Infrastructure as ECS Containers using Terraform!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Docker-Compose File Examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Documented at &lt;a href=&#34;https://fullstackhero.net&#34;&gt;fullstackhero.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi Tenancy Support with Finbuckle &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create Tenants with Multi Database / Shared Database Support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Activate / Deactivate Tenants on Demand&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upgrade Subscription of Tenants - Add More Validity Months to each tenant!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports MySQL, MSSQL, Oracle &amp;amp; PostgreSQL!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to See More!&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Uses Entity Framework Core as DB Abstraction&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Flexible Repository Pattern&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dapper Integration for Optimal Performance&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Serilog Integration with various Sinks - File, SEQ, Kibana&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenAPI - Supports Client Service Generation&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mapster Integration for Quicker Mapping&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API Versioning&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Response Caching - Distributed Caching + REDIS&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fluent Validations&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Audit Logging&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Advanced User &amp;amp; Role Based Permission Management&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code Analysis &amp;amp; StyleCop Integration with Rulesets&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JSON Based Localization with Caching&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hangfire Support - Secured Dashboard&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Storage Service&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Test Projects&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JWT &amp;amp; Azure AD Authentication&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MediatR - CQRS&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SignalR Notifications&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &amp;amp; Much More&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read Documentation related to this Boilerplate here - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/&#34;&gt;https://fullstackhero.net/dotnet-webapi-boilerplate/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Feel free to contribute to the Documentation Repository - &lt;a href=&#34;https://github.com/fullstackhero/docs&#34;&gt;https://github.com/fullstackhero/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with this Boilerplate, here are the available options.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install using the &lt;code&gt;FSH CLI&lt;/code&gt; tool. Use this for release versions of the Boilerplate only.&lt;/li&gt; &#xA; &lt;li&gt;Fork the Repository. Use this if you want to always keep your version of the Boilerplate up-to date with the latest changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that your DEV enviroment is setup, &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/&#34;&gt;Read the Development Environment Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;FSH CLI Tool&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;p&gt;Before creating your first fullstackhero solution, you should ensure that your local machine has:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;.NET 7&lt;/strong&gt; You can find the download &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NodeJS (16+)&lt;/strong&gt; You can find the download &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;After you have installed .NET, you will need to install the &lt;code&gt;fsh&lt;/code&gt; console tool.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet tool install --global FSH.CLI&#xA;fsh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This isntall the FSH CLI tools and the associated Templates. You are now ready to create your first FSH project!&lt;/p&gt; &#xA;&lt;h4&gt;FSH .NET WebAPI Boilerplate&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s how you would create a Solution using the FSH .NET WebAPI Boilerplate.&lt;/p&gt; &#xA;&lt;p&gt;Simply navigate to a new directory (wherever you want to place your new solution), and open up Command Prompt at the opened directory.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command. Note that, in this demonstration, I am naming my new solution as FSH.Starter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fsh api new FSH.Starter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fsh api n FSH.Starter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new .NET 7 WEBAPI solution for you using the FSH Templates. For further steps and details, &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/&#34;&gt;Read the Getting Started Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Update&lt;/h4&gt; &#xA;&lt;p&gt;To update the tool &amp;amp; templates, run the following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet tool update FSH.CLI --global&#xA;fsh update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Forking the Repository&lt;/h3&gt; &#xA;&lt;p&gt;You would probably need to take this approach if you want to keep your source code upto date with the latest changes. To get started based on this repository, you need to get a copy locally. You have three options: fork, clone, or download.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make a fork of this repository in your Github account.&lt;/li&gt; &#xA; &lt;li&gt;Create your new &lt;code&gt;dotnet-webapi-boilerplate&lt;/code&gt; personal project by cloning the forked repository on your personal github.&lt;/li&gt; &#xA; &lt;li&gt;Setup an upstream remote on your personal project pointing to your forked repository using command &lt;code&gt;git remote add upstream https://github.com/{githubuseraccount}/dotnet-webapi-boilerplate&lt;/code&gt; and &lt;code&gt;git remote set-url --push upstream DISABLE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For step by step instructions, &lt;a href=&#34;https://discord.com/channels/878181478972928011/892573122186838046/933513103688224838&#34;&gt;follow this&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/0xjac/85097472043b697ab57ba1b1c7530274&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Guide&lt;/h2&gt; &#xA;&lt;p&gt;So, for a better developer experience, I have added Makefile into the solution. Now that our solution is generated, let&#39;s navigate to the root folder of the solution and open up a command terminal.&lt;/p&gt; &#xA;&lt;p&gt;To build the solution,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the solution is configured to work with postgresql database (mainly because of hte OS licensing). So, you will have to make sure that postgresql database instance is up and running on your machine. You can modify the connection string to include your username and password. Connections strings can be found at &lt;code&gt;src/Host/Configurations/database.json&lt;/code&gt; and &lt;code&gt;src/Host/Configurations/hangfire.json&lt;/code&gt;. Once that&#39;s done, let&#39;s start up the API server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it, the application would connect to the defined postgresql database and start creating tables, and seed required data.&lt;/p&gt; &#xA;&lt;p&gt;For testing this API, we have 3 options.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Swagger @ &lt;code&gt;localhost:5001/swagger&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Postman collections are available &lt;code&gt;./postman&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ThunderClient for VSCode. This is my personal favorite. You will have to install the Thunderclient extension for VSCode.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The default credentials to this API is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;email&#34;:&#34;admin@root.com&#34;,&#xA;    &#34;password&#34;:&#34;123Pa$$word!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open up Postman, Thunderclient or Swagger.&lt;/p&gt; &#xA;&lt;p&gt;identity -&amp;gt; get-token&lt;/p&gt; &#xA;&lt;p&gt;This is a POST Request. Here the body of the request will be the JSON (credentials) I specified earlier. And also, remember to pass the tenant id in the header of the request. The default tenant id is &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is a sample CURL command for getting the tokens.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;curl -X POST \&#xA;  &#39;https://localhost:5001/api/tokens&#39; \&#xA;  --header &#39;Accept: */*&#39; \&#xA;  --header &#39;tenant: root&#39; \&#xA;  --header &#39;Accept-Language: en-US&#39; \&#xA;  --header &#39;Content-Type: application/json&#39; \&#xA;  --data-raw &#39;{&#xA;  &#34;email&#34;: &#34;admin@root.com&#34;,&#xA;  &#34;password&#34;: &#34;123Pa$$word!&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And here is the response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;token&#34;: &#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjM0YTY4ZjQyLWE0ZDgtNDNlMy1hNzE3LTI1OTczZjZmZTJjNyIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2VtYWlsYWRkcmVzcyI6ImFkbWluQHJvb3QuY29tIiwiZnVsbE5hbWUiOiJyb290IEFkbWluIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6InJvb3QiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zdXJuYW1lIjoiQWRtaW4iLCJpcEFkZHJlc3MiOiIxMjcuMC4wLjEiLCJ0ZW5hbnQiOiJyb290IiwiaW1hZ2VfdXJsIjoiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIiLCJleHAiOjE2ODA5NDE3MzN9.VYNaNvk2T4YDvQ3wriXgk2W_Vy9zyEEhjveNauNAeJY&#34;,&#xA;  &#34;refreshToken&#34;: &#34;pyxO30zJK8KelpEXF0vPfbSbjntdlbbnxrZAlUFXfyE=&#34;,&#xA;  &#34;refreshTokenExpiryTime&#34;: &#34;2023-04-15T07:15:33.5187598Z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to pass the &lt;code&gt;token&lt;/code&gt; in the request headers to authenticate calls to the fullstackhero API!&lt;/p&gt; &#xA;&lt;p&gt;For further steps and details, &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/&#34;&gt;Read the Getting Started Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Containerization&lt;/h2&gt; &#xA;&lt;p&gt;The API project, being .NET 7, it is configured to have built-in support for containerization. That means, you really don&#39;t need a Dockerfile to containerize the webapi.&lt;/p&gt; &#xA;&lt;p&gt;To build a docker image, all you have to do is, ensure that docker-desktop or docker instance is running. And run the following command at the root of the solution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make publish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also push the docker image directly to dockerhub or any supported registry by using the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make publish-to-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will have to update your docker registry / repo url in the Makefile though!.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;This project also comes with examples of docker compose files, where you can spin up the webapi and database isntance in your local containers with the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;make dcu #docker compose up - Boots up the webapi &amp;amp; postgresql container&#xA;make dcd #docker compose down - Shuts down the webapi &amp;amp; postgresql containers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also examples for mysql &amp;amp; mssql variations of the fsh webapi. You can find the other docker-compose files under the ./docker-compose folder. Read more about &lt;a href=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/master/docker-compose/README.md&#34;&gt;fullstackhero&#39;s docker-compose instructions &amp;amp; files here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloud Deployment with Terraform + AWS ECS&lt;/h2&gt; &#xA;&lt;p&gt;This is something you wont get to see very often with boilerplates. But, we do support cloud deployment to AWS using terraform. The terraform files are available at the &lt;code&gt;./terraform&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Terraform&lt;/li&gt; &#xA; &lt;li&gt;Install &amp;amp; Configure AWS CLI profiles to allow terraform to provision resources for you. I have made a video about &lt;a href=&#34;https://www.youtube.com/watch?v=oY0-1mj4oCo&amp;amp;ab_channel=MukeshMurugan&#34;&gt;AWS Credentials Management&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In brief, the terraform folder has 2 sub-folders.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;backend&lt;/li&gt; &#xA; &lt;li&gt;environments/staging&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Backend folder is internally used by Terraform for state management and locking. There is a one-time setup you have to do against this folder. Navigate to the backend folder and run the command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;terraform init&#xA;terraform apply -auto-approve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would create the required S3 Buckets and DDB table for you.&lt;/p&gt; &#xA;&lt;p&gt;Next is the &lt;code&gt;environments/staging&lt;/code&gt; folder. Here too, run the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;terraform init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once done, you can go the terraform.tfvars file to change the variables like,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;project tags&lt;/li&gt; &#xA; &lt;li&gt;docker image name&lt;/li&gt; &#xA; &lt;li&gt;ecs cluster name and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After that, simply back to the root of the solution and run the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make ta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will evaluate your terraform files and create a provision plan for you. Once you are ok, type in &lt;code&gt;yes&lt;/code&gt; and the tool will start to deploy your .NET WebAPI project as containers along with a RDS PostgreSQL intance. You will be receiving the hosted api url once the provisioning is completed!&lt;/p&gt; &#xA;&lt;p&gt;To destroy the deployed resources, run the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make td&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important Links &amp;amp; Documentations&lt;/h2&gt; &#xA;&lt;p&gt;Overview - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Getting Started - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Development Environment - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/&#34;&gt;Learn about setting up the DEV environment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Participate in Discussions - &lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/discussions&#34;&gt;QNA &amp;amp; General Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join our Discord - &lt;a href=&#34;https://discord.gg/gdgHRt4mMw&#34;&gt;fullstackhero @ Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelogs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/raw/main/CHANGELOGS.md&#34;&gt;View Complete Changelogs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord &lt;a href=&#34;https://discord.gg/gdgHRt4mMw&#34;&gt;@fullstackhero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook Page &lt;a href=&#34;https://facebook.com/codewithmukesh&#34;&gt;@codewithmukesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Youtube Channel &lt;a href=&#34;https://youtube.com/c/codewithmukesh&#34;&gt;@codewithmukesh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed with the &lt;a href=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support ⭐&lt;/h2&gt; &#xA;&lt;p&gt;Has this Project helped you learn something New? or Helped you at work? Here are a few ways by which you can support.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Leave a star! ⭐&lt;/li&gt; &#xA; &lt;li&gt;Recommend this awesome project to your colleagues. 🥇&lt;/li&gt; &#xA; &lt;li&gt;Do consider endorsing me on LinkedIn for ASP.NET Core - &lt;a href=&#34;https://codewithmukesh.com/linkedin&#34;&gt;Connect via LinkedIn&lt;/a&gt; 🦸&lt;/li&gt; &#xA; &lt;li&gt;Sponsor the project - &lt;a href=&#34;https://opencollective.com/fullstackhero&#34;&gt;opencollective/fullstackhero&lt;/a&gt; ❤️&lt;/li&gt; &#xA; &lt;li&gt;Or, &lt;a href=&#34;https://www.buymeacoffee.com/codewithmukesh&#34;&gt;consider buying me a coffee&lt;/a&gt;! ☕&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/codewithmukesh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-webapi-boilerplate/main/media/buy-me-a-coffee.png&#34; alt=&#34;buy-me-a-coffee&#34; title=&#34;buy-me-a-coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/master/CONTRIBUTING.md&#34;&gt;Submit your PR and join the elite list!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=fullstackhero/dotnet-webapi-boilerplate&#34; alt=&#34;fsh dotnet webapi contributors&#34; title=&#34;fsh dotnet webapi contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Financial Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Become a financial contributor and help me sustain the project. &lt;a href=&#34;https://opencollective.com/fullstackhero/contribute&#34;&gt;Support the Project!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/fullstackhero&#34;&gt;&lt;img src=&#34;https://opencollective.com/fullstackhero/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>