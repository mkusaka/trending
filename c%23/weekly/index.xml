<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-11T01:42:17Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>UnrealSharp/UnrealSharp</title>
    <updated>2024-02-11T01:42:17Z</updated>
    <id>tag:github.com,2024-02-11:/UnrealSharp/UnrealSharp</id>
    <link href="https://github.com/UnrealSharp/UnrealSharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UnrealSharp is a plugin to Unreal Engine 5, which enables developers to create games using C# with Hot Reload&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UnrealSharp&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;UnrealSharp is a plugin for Unreal Engine 5 that allows game developers to use C# in their projects with the power of .NET 8. This plugin bridges the gap between C# and UE5, providing a seamless and efficient workflow for those who prefer C# over C++/Blueprints.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NdbiysPTztA&#34;&gt;Workflow Showcase&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;C# Integration&lt;/strong&gt;: Write your game logic in C#.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seamless Unreal Engine 5 Compatibility&lt;/strong&gt;: Fully integrated with the latest UE5 features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hot reload:&lt;/strong&gt; Compile and reload code on the fly without having to restart the engine for changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic Bindings:&lt;/strong&gt; Automatically generates C# API based on what is exposed to Blueprint. Which enables marketplace code plugins a seamless integration with UnrealSharp.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unreal Engine 5+&lt;/li&gt; &#xA; &lt;li&gt;.NET 8.0.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UnrealSharp 0.1 Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux/Mac support is not yet implemented.&lt;/li&gt; &#xA; &lt;li&gt;Packaging not yet implemented.&lt;/li&gt; &#xA; &lt;li&gt;Multiplayer is almost done, but is not currently not working properly.&lt;/li&gt; &#xA; &lt;li&gt;Delegates exposed to Blueprint not yet implemented, can use pure C# delegates though.&lt;/li&gt; &#xA; &lt;li&gt;Hot reload is always full reload of the whole assembly. Will be reworked for 0.2 for speed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://github.com/UnrealSharp/UnrealSharp/wiki/2.-Get-Started&#34;&gt;Get Started&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the roadmap for planned and developed features!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/UnrealSharp/projects/3&#34;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discord Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the discord community to stay up to date with the recent updates and plugin support!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/HQuJUYFxeV&#34;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;I accept pull requests and any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Discord: &lt;strong&gt;olsson.&lt;/strong&gt; (Yes, with a dot at the end.)&lt;/p&gt; &#xA;&lt;p&gt;Or join the &lt;a href=&#34;https://discord.gg/HQuJUYFxeV&#34;&gt;Discord community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d like to give a huge shoutout to &lt;a href=&#34;https://mono-ue.github.io/&#34;&gt;MonoUE&lt;/a&gt; (Sadly abandoned :( ) for the great resource for integrating C# into Unreal Engine. Some of the systems are modified versions of their integration, and it&#39;s been a real time saver.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thank you to the MonoUE team!&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KirosHan/Palworld-server-protector-DotNet</title>
    <updated>2024-02-11T01:42:17Z</updated>
    <id>tag:github.com,2024-02-11:/KirosHan/Palworld-server-protector-DotNet</id>
    <link href="https://github.com/KirosHan/Palworld-server-protector-DotNet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Palworld幻兽帕鲁服务端守护+存档备份+内存监控+优雅重启+Rcon指令&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Palworld-server-protector-DotNet&lt;/h1&gt; &#xA;&lt;p&gt;【新】GUI版本 Palworld服务端进程守护+内存监控+优雅重启+自动存档+Rcon （for windows）&lt;/p&gt; &#xA;&lt;p&gt;注意：protector-electron（旧版）已弃用&lt;/p&gt; &#xA;&lt;p&gt;欢迎反馈bug，可提交issues或者扫码进群（添加机器人后发送Palworld即可）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KirosHan/Palworld-server-protector-DotNet/main/PNG/qrcode.jpg&#34; alt=&#34;Qrcode&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🍻&lt;/span&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;服务器配置文档(.ini)可视化编辑【New】&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Webhoot通知推送(企业微信机器人)【New】&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;内存监控（自定义阈值触发）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;进程守护（当前如果没有服务端运行就自动重启）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;优雅重启（内存占用达到阈值后自动发送公告并关服等待重启）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自动备份存档&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;轮询获取在线玩家&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rcon指令&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;‼&lt;/span&gt;注意&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本GUI版本复刻了命令行版本（&lt;a href=&#34;https://github.com/KirosHan/Palworld-server-protector&#34;&gt;https://github.com/KirosHan/Palworld-server-protector&lt;/a&gt;）所有功能&lt;/li&gt; &#xA; &lt;li&gt;旧GUI版（electron）由于占用内存过高已弃用并不再维护&lt;/li&gt; &#xA; &lt;li&gt;本工具大部分功能基于Rcon实现，所以使用需要提前配置服务端启用Rcon和管理员密码（如果配置不生效，也请留意steamapps/common/PalServer/Pal/Saved/SaveGames/0/.../WorldOption.sav）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;👀&lt;/span&gt;效果图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KirosHan/Palworld-server-protector-DotNet/main/PNG/2.5.1_1.png&#34; alt=&#34;预览1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/KirosHan/Palworld-server-protector-DotNet/main/PNG/2.5.1_2.png&#34; alt=&#34;预览2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📄&lt;/span&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KirosHan/Palworld-server-protector-DotNet/wiki&#34;&gt;https://github.com/KirosHan/Palworld-server-protector-DotNet/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;✈&lt;/span&gt;直接下载（懒人专属）&lt;/h2&gt; &#xA;&lt;p&gt;更新时间：2024-02-05&lt;/p&gt; &#xA;&lt;p&gt;Latest版本：V2.6.6(1)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;使用Json保存配置文件(兼容读取原有的Ini配置文件)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改了玩家列表比较方式，现在只比较玩家Name，即使ID获取错误的情况也视为同一玩家&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修复了服务器名字中含有空格时无法正确获取的情况&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.6.5(1) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Bug fixed：修复了由于缓存文件占用导致备份失败的问题（包括备份内容错误）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fixed：当获取不到玩家steamid的情况下，也会统计到在线列表中（steamid留空）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.6.3(1) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加了webhook玩家动态(上线/下线)通知，需配置并开启Rcon以及webhook功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更详尽的错误日志&lt;/li&gt; &#xA; &lt;li&gt;重构了Rcon模块&lt;/li&gt; &#xA; &lt;li&gt;更多采用异步方法，避免阻塞UI线程造成界面卡顿&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=-V2.5.3(2) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加了webhook的推送选择项&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复了最小化后无法启动窗体的bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.5.2(1) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UI调整，添加监控台&lt;/li&gt; &#xA; &lt;li&gt;Webhook添加钉钉机器人支持&lt;/li&gt; &#xA; &lt;li&gt;优化备份存档功能逻辑&lt;/li&gt; &#xA; &lt;li&gt;运行状态保存，重启时自动加载上次关闭时状态&lt;/li&gt; &#xA; &lt;li&gt;Webhook支持推送在线人数&lt;/li&gt; &#xA; &lt;li&gt;添加任务栏通知&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.4.1(1) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加Webhook推送功能，目前仅支持企业微信群机器人，其他数据格式正在收集中，欢迎提供。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.3.0(1)-=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增服务端配置文件可视化编辑（.ini）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;=-=- V2.2.0(1) -=-=&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增配置保存功能，不用每次打开重新配置了&lt;/li&gt; &#xA; &lt;li&gt;新增Rcon的kick和ban命令&lt;/li&gt; &#xA; &lt;li&gt;新增错误日志输出&lt;/li&gt; &#xA; &lt;li&gt;修改了参数启动的方式，现在可以自由修改&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KirosHan/Palworld-server-protector-DotNet/releases&#34;&gt;https://github.com/KirosHan/Palworld-server-protector-DotNet/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如无法运行，请安装.net 6.0运行环境&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;☕&lt;/span&gt;Star and a Coffee&lt;/h2&gt; &#xA;&lt;p&gt;如果这个仓库对你有用，欢迎点个Star⭐︎&lt;/p&gt; &#xA;&lt;p&gt;也可以Buy me a coffee☕︎&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KirosHan/Palworld-server-protector-DotNet/main/PNG/buymeacoffee.png&#34; alt=&#34;BuyMeACoffee&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt;编译运行&lt;/h2&gt; &#xA;&lt;p&gt;Visual studio 2022&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔮&lt;/span&gt;Rcon&lt;/h2&gt; &#xA;&lt;p&gt;本项目Rcon功能模块改编自&lt;a href=&#34;https://github.com/KTTI465/PalWorld-RCON-GUI&#34;&gt;https://github.com/KTTI465/PalWorld-RCON-GUI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt;运行逻辑&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;    A[初始化界面] --&amp;gt; B[启动内存监控]&#xA;    A --&amp;gt; C[服务器管理]&#xA;    A --&amp;gt; D[玩家管理]&#xA;    B --&amp;gt; E[内存超阈值处理]&#xA;    C --&amp;gt; F[发送服务器命令]&#xA;    D --&amp;gt; G[获取在线玩家]&#xA;    D --&amp;gt; H[踢出/封禁玩家]&#xA;    E --&amp;gt; I[服务器重启]&#xA;    F --&amp;gt; J[服务器启动/停止]&#xA;    F --&amp;gt; K[备份游戏数据]&#xA;    G --&amp;gt; L[定时更新玩家列表]&#xA;    H --&amp;gt; M[更新玩家状态]&#xA;    I --&amp;gt; N[记录日志并通知]&#xA;    K --&amp;gt; N&#xA;    M --&amp;gt; N&#xA;    L --&amp;gt; G&#xA;    N --&amp;gt; O[结束]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;💊&lt;/span&gt;已知问题&lt;/h2&gt; &#xA;&lt;p&gt;1.受服务端限制，rcon发送的文本中无法保留空格，已自动替换为下划线&lt;/p&gt; &#xA;&lt;p&gt;2.受服务端限制，rcon无法发送中文&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;💕&lt;/span&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://kiros.onbeta.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22515170?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kiros&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kiros&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KirosHan/Palworld-server-protector-DotNet/main/#infra-KirosHan&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com//KirosHan/Palworld-server-protector-DotNet/commits?author=KirosHan&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com//KirosHan/Palworld-server-protector-DotNet/commits?author=KirosHan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Vincentzyx&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8458250?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Vincentzyx&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vincentzyx&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com//KirosHan/Palworld-server-protector-DotNet/commits?author=Vincentzyx&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;h2&gt;&lt;span&gt;📈&lt;/span&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#KirosHan/Palworld-server-protector-DotNet&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=KirosHan/Palworld-server-protector-DotNet&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=KirosHan/Palworld-server-protector-DotNet&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=KirosHan/Palworld-server-protector-DotNet&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>gerardog/gsudo</title>
    <updated>2024-02-11T01:42:17Z</updated>
    <id>tag:github.com,2024-02-11:/gerardog/gsudo</id>
    <link href="https://github.com/gerardog/gsudo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sudo for Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gsudo - a sudo for Windows&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/gsudo/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gsudo/community.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/gsudo/community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gerardog/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;CI Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.chocolatey.org/packages/gsudo&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/dt/gsudo?label=Chocolatey%20Downloads&#34; alt=&#34;Chocolatey Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gerardog/gsudo/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/gerardog/gsudo/total?label=GitHub%20Downloads&#34; alt=&#34;GitHub Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;gsudo&lt;/strong&gt; is a &lt;code&gt;sudo&lt;/code&gt; equivalent for Windows, with a similar user-experience as the original Unix/Linux sudo. Allows you to run a command with elevated permissions, or to elevate the current shell, in the current console window or a new one.&lt;/p&gt; &#xA;&lt;p&gt;Just &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage&#34;&gt;prepend &lt;code&gt;gsudo&lt;/code&gt;&lt;/a&gt; (or the &lt;code&gt;sudo&lt;/code&gt; alias) to your command and it will run elevated. For PowerShell use &lt;code&gt;gsudo { ScriptBlock }&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage-from-powershell--powershell-core&#34;&gt;syntax&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;One UAC popup will appear each time. You can see less popups if you enable &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#credentials-cache&#34;&gt;gsudo cache&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It detects your current shell and elevates your command as native shell commands. (Supports &lt;code&gt;Cmd&lt;/code&gt;, &lt;code&gt;PowerShell&lt;/code&gt;, &lt;code&gt;WSL&lt;/code&gt;, &lt;code&gt;git-bash&lt;/code&gt;, &lt;code&gt;MinGW&lt;/code&gt;, &lt;code&gt;Cygwin&lt;/code&gt;, &lt;code&gt;Yori&lt;/code&gt;, &lt;code&gt;Take Command&lt;/code&gt;, &lt;code&gt;BusyBox&lt;/code&gt; &amp;amp; &lt;code&gt;NuShell&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#gsudo---a-sudo-for-windows&#34;&gt;gsudo - a sudo for Windows&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#table-of-contents&#34;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage-from-powershell--powershell-core&#34;&gt;Usage from PowerShell / PowerShell Core&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#powershell-module&#34;&gt;PowerShell Module&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage-from-wsl-windows-subsystem-for-linux&#34;&gt;Usage from WSL (Windows Subsystem for Linux)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#credentials-cache&#34;&gt;Credentials Cache&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#please-support-gsudo-&#34;&gt;Please support gsudo! 💵&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;⭐ Extended documentation available at: &lt;a href=&#34;https://gerardog.github.io/gsudo/docs/intro&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://gerardog.github.io/gsudo/&#34;&gt;https://gerardog.github.io/gsudo/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/demo.gif&#34; alt=&#34;gsudo demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(with &lt;code&gt;gsudo config CacheMode auto&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Elevated commands are shown in the current console. No new window (unless you specify &lt;code&gt;-n&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#credentials-cache&#34;&gt;Credentials cache&lt;/a&gt;: &lt;code&gt;gsudo&lt;/code&gt; can elevate many times showing only one UAC pop-up if the user opts-in to enable the cache.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Detects your current shell (Supports &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage&#34;&gt;&lt;code&gt;CMD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage-from-powershell--powershell-core&#34;&gt;&lt;code&gt;PowerShell&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#usage-from-wsl-windows-subsystem-for-linux&#34;&gt;&lt;code&gt;WSL&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Bash for Windows&lt;/code&gt; (Git-Bash/MinGW/MSYS2/Cygwin), &lt;code&gt;Yori&lt;/code&gt;, &lt;code&gt;Take Command&lt;/code&gt; and &lt;code&gt;NuShell&lt;/code&gt;), and elevates your command correctly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports being used on scripts:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Outputs StdOut/StdErr can be piped or captured (e.g. &lt;code&gt;gsudo dir | findstr /c:&#34;bytes free&#34; &amp;gt; FreeSpace.txt&lt;/code&gt;) and exit codes too (&lt;code&gt;%errorlevel%&lt;/code&gt;). If &lt;code&gt;gsudo&lt;/code&gt; fails to elevate, the exit code will be 999.&lt;/li&gt; &#xA;   &lt;li&gt;If &lt;code&gt;gsudo&lt;/code&gt; is invoked from an already elevated console, it will just run the command (it won&#39;t fail). So, you don&#39;t have to worry if you run &lt;code&gt;gsudo&lt;/code&gt; or a script that uses &lt;code&gt;gsudo&lt;/code&gt; from an already elevated console. (The UAC popup will not appear, as no elevation is required)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;gsudo !!&lt;/code&gt; elevates the last executed command. Works on CMD, Git-Bash, MinGW, Cygwin (and PowerShell with &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/#gsudomodule&#34;&gt;gsudo module&lt;/a&gt; only)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt;: &lt;code&gt;scoop install gsudo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/microsoft/winget-cli/releases&#34;&gt;WinGet&lt;/a&gt;: &lt;code&gt;winget install gerardog.gsudo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://chocolatey.org/install&#34;&gt;Chocolatey&lt;/a&gt;: &lt;code&gt;choco install gsudo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Running this line: &lt;a href=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/installgsudo.ps1&#34;&gt;(script)&lt;/a&gt;: &lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;PowerShell -Command &#34;Set-ExecutionPolicy RemoteSigned -scope Process; [Net.ServicePointManager]::SecurityProtocol = &#39;Tls12&#39;; iwr -useb https://raw.githubusercontent.com/gerardog/gsudo/master/installgsudo.ps1 | iex&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Portable: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Download &lt;code&gt;gsudo.portable.zip&lt;/code&gt; from the &lt;a href=&#34;https://github.com/gerardog/gsudo/releases/latest&#34;&gt;latest release&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Extract the folder corresponding to your processor architecture (x64, x86, or arm64) from the zip file to a suitable directory on your computer.&lt;/li&gt; &#xA;   &lt;li&gt;Optionally, add that directory to your system&#39;s PATH environment variable if it&#39;s not already accessible.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please restart all your console windows&lt;/strong&gt; after installing to ensure that the &lt;code&gt;PATH&lt;/code&gt; environment variable is refreshed.&lt;/p&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;gsudo.exe&lt;/code&gt; is portable. No windows service is required or system change is done, except adding it to the Path.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;gsudo [options]                  # Elevates your current shell&#xA;gsudo [options] {command} [args] # Runs {command} with elevated permissions&#xA;gsudo cache [on | off | help]    # Starts/Stops a credentials cache session. (less UAC popups)&#xA;gsudo status [--json | filter ]  # Shows current user, cache and console status.&#xA;gsudo !!                         # Re-run last command as admin. (YMMV)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New Window options:&#xA; -n | --new            # Starts the command in a new console/window (and returns immediately).&#xA; -w | --wait           # When in new console, wait for the command to end.&#xA; --keepShell           # After running a command, keep the elevated shell open.&#xA; --keepWindow          # After running a command in a new console, ask for keypress before closing the console/window.&#xA;&#xA;Security options:&#xA; -u | --user {usr}     # Run as the specified user. Asks for password. For local admins shows UAC unless &#39;-i Medium&#39;&#xA; -i | --integrity {v}  # Specify integrity level: Untrusted, Low, Medium, MediumPlus, High (default), System&#xA; -s | --system         # Run as Local System account (NT AUTHORITY\SYSTEM).&#xA; --ti                  # Run as member of NT SERVICE\TrustedInstaller&#xA; -k                    # Kills all cached credentials. The next time gsudo is run a UAC popup will be appear.&#xA;&#xA;Shell related options:&#xA; -d | --direct         # Skips Shell detection. Assume CMD shell or CMD {command}.&#xA; --loadProfile         # When elevating PowerShell commands, load user profile.&#xA;&#xA;Other options:&#xA; --loglevel {val}      # Set minimum log level to display: All, Debug, Info, Warning, Error, None&#xA; --debug               # Enable debug mode.&#xA; --copyns              # Connect network drives to the elevated user. Warning: Verbose, interactive asks for credentials&#xA; --copyev              # (deprecated) Copy environment variables to the elevated process. (not needed on default console mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can use anywhere &lt;strong&gt;the &lt;code&gt;sudo&lt;/code&gt; alias&lt;/strong&gt; created by the installers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;gsudo   # elevates the current shell in the current console window (Supports Cmd/PowerShell/Pwsh Core/Yori/Take Command/git-bash/cygwin)&#xA;gsudo -n # launch the current shell elevated in a new console window&#xA;gsudo -n -w powershell ./Do-Something.ps1 # launch in new window and wait for exit&#xA;gsudo notepad %windir%\system32\drivers\etc\hosts # launch windows app&#xA;&#xA;sudo notepad # sudo alias built-in&#xA;&#xA;# redirect/pipe input/output/error example&#xA;gsudo dir | findstr /c:&#34;bytes free&#34; &amp;gt; FreeSpace.txt&#xA;&#xA;gsudo config LogLevel &#34;Error&#34;          # Configure Reduced logging&#xA;gsudo config Prompt &#34;$P [elevated]$G &#34; # Configure a custom Elevated Prompt&#xA;gsudo config Prompt --reset            # Reset to default value&#xA;&#xA;# Enable credentials cache (less UAC popups):&#xA;gsudo config CacheMode Auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage from PowerShell / PowerShell Core&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gsudo&lt;/code&gt; detects if invoked from PowerShell and elevates PS commands (unless &lt;code&gt;-d&lt;/code&gt; is used to elevate CMD commands).&lt;/p&gt; &#xA;&lt;p&gt;The command to elevate will run in a different process, so it &lt;strong&gt;can&#39;t access the parent &lt;code&gt;$variables&lt;/code&gt; and scope.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To elevate a commands or script block: &lt;strong&gt;Wrap it in {curly braces}&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Syntax:&#xA;gsudo { ScriptBlock }&#xA;gsudo [options] { ScriptBlock } [-args $argument1[..., $argumentN]] ;&#xA;&#xA;# Examples:&#xA;gsudo { Write-Output &#34;Hello World&#34; }&#xA;&#xA;# Pass arguments with -args&#xA;$MyString = &#34;Hello World&#34;&#xA;gsudo { Write-Output $args[0] } -args $MyString  &#xA;&#xA;# Output is serialized as PSObjects with properties.&#xA;$services = gsudo { Get-Service &#39;WSearch&#39;, &#39;Winmgmt&#39;} &#xA;Write-Output $services.DisplayName&#xA;&#xA;# Inputs too: Example elevated iteration of a list.&#xA;Get-ChildItem . | gsudo { $Input.CreationTime}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternative syntaxes:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;2. Invoke-gsudo wrapper function: (much slower)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Pass values (not variables by reference) by prefixing `$using:`. I.E.&#xA;&#xA;$MyString = &#34;Hello World&#34;&#xA;Invoke-Gsudo { Write-Output $using:MyString }  &#xA;&#xA;# Syntax:&#xA;Invoke-Gsudo [-ScriptBlock] &amp;lt;ScriptBlock&amp;gt; &#xA;             [[-ArgumentList] &amp;lt;Object[]&amp;gt;] &#xA;             [-InputObject &amp;lt;PSObject&amp;gt;] &#xA;             [-LoadProfile | -NoProfile] &#xA;             [-Credential &amp;lt;PSCredential&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code&gt;- PowerShell function.&#xA;- Performs auto serialization of inputs &amp;amp; outputs. &#xA;- You can prefix variables with the `$using:` scope modifier (like `$using:variableName`) and their serialized value is applied.&#xA;- Use `-LoadProfile` or `-NoProfile` to override profile loading or not.&#xA;- Use `-Credential` option for Run As User (same as `-u` but for `Get-Credentials`).&#xA;- Better forwarding of your current context to the elevated instance (current Location, $ErrorActionPreference)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;3. Manual string interpolation. (not recommended) &lt;/summary&gt; I don&#39;t recommend this approach as it is really hard to do proper escape all special characters. &#xA; &lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Usage: gsudo &#39;string literal&#39;&#xA;&#xA;# Variable substitutions example:&#xA;$file=&#39;C:\My Secret.txt&#39;; &#xA;$algorithm=&#39;md5&#39;;&#xA;$hash = gsudo &#34;(Get-FileHash &#39;$file&#39; -Algorithm $algorithm).Hash&#34;&#xA;# or &#xA;$hash = gsudo &#34;(Get-FileHash &#34;&#34;$file&#34;&#34; -Algorithm $algorithm).Hash&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Accepts a string literal with the command to elevate.&lt;/li&gt; &#xA;  &lt;li&gt;Returns a list of strings.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;PowerShell Module&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;gsudomodule&#34;&gt;&lt;/a&gt; Optional: Import module &lt;code&gt;gsudoModule.psd1&lt;/code&gt; into your PowerShell Profile:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adds syntax auto-complete to gsudo in PowerShell. Plus, it suggests the 3 previous commands, making your workflow smoother than ever!&lt;/li&gt; &#xA;   &lt;li&gt;Enables &lt;code&gt;gsudo !!&lt;/code&gt; on Powershell, to elevate the last executed command.&lt;/li&gt; &#xA;   &lt;li&gt;Adds Functions: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;Test-IsGsudoCacheAvailable&lt;/code&gt; Returns true if a gsudo cache is active (meaning elevation with no UAC is possible).&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Test-IsProcessElevated&lt;/code&gt;: Returns true if the current process is elevated.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Test-IsAdminMember&lt;/code&gt;: Returns true if the current user is member of the &lt;code&gt;Local Administrators&lt;/code&gt; groups, which means it can elevate with.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;# Add the following line to your $PROFILE &#xA;Import-Module &#34;gsudoModule&#34;&#xA;&#xA;# Or run:&#xA;Write-Output &#34;`nImport-Module `&#34;gsudoModule`&#34;&#34; | Add-Content $PROFILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you haven&#39;t already customized your PowerShell prompt (for example by installing Oh-My-Posh), you can easily add a red &lt;code&gt;#&lt;/code&gt; indicating that the current process is elevated: &lt;img src=&#34;https://raw.githubusercontent.com/gerardog/gsudo/master/docs/static/img/gsudo-powershell-prompt.gif&#34; alt=&#34;gsudo prompt&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;To do so add this line to your profile (after importing &lt;code&gt;gsudoModule&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-Alias Prompt gsudoPrompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Usage from WSL (Windows Subsystem for Linux)&lt;/h3&gt; &#xA;&lt;p&gt;On WSL, elevation and &lt;code&gt;root&lt;/code&gt; are different concepts. &lt;code&gt;root&lt;/code&gt; allows full administration of WSL but not the windows system. Use WSL&#39;s native &lt;code&gt;su&lt;/code&gt; or &lt;code&gt;sudo&lt;/code&gt; to gain &lt;code&gt;root&lt;/code&gt; access. To get admin privilege on the Windows box you need to elevate the WSL.EXE process. &lt;code&gt;gsudo&lt;/code&gt; allows that (a UAC popup will appear).&lt;/p&gt; &#xA;&lt;p&gt;On WSL bash, prepend &lt;code&gt;gsudo&lt;/code&gt; to elevate &lt;strong&gt;WSL commands&lt;/strong&gt; or &lt;code&gt;gsudo -d&lt;/code&gt; for &lt;strong&gt;CMD commands&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# elevate default shell&#xA;PC:~$ gsudo &#xA;&#xA;# run elevated WSL command&#xA;PC:~$ gsudo mkdir /mnt/c/Windows/MyFolder&#xA;&#xA;# run elevated Windows command&#xA;PC:~$ gsudo -d notepad C:/Windows/System32/drivers/etc/hosts&#xA;PC:~$ gsudo -d &#34;notepad C:\Windows\System32\drivers\etc\hosts&#34;&#xA;&#xA;# test for gsudo and command success&#xA;retval=$?;&#xA;if [ $retval -eq 0 ]; then&#xA;    echo &#34;Success&#34;;&#xA;elif [ $retval -eq $((999 % 256)) ]; then # gsudo failure exit code (999) is read as 231 on wsl (999 mod 256)&#xA;    echo &#34;gsudo failed to elevate!&#34;;&#xA;else&#xA;    echo &#34;Command failed with exit code $retval&#34;;&#xA;fi;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt; gsudo config                          # Show current config settings &amp;amp; values.&#xA; gsudo config {key} [--global] [value] # Read or write a user setting&#xA; gsudo config {key} [--global] --reset # Reset config to default value&#xA; --global                              # Affects all users (overrides user settings)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credentials Cache&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Credentials Cache&lt;/code&gt;, if enabled and active, allows to elevate several times from a parent process with only one UAC pop-up. After 5 minutes without elevations, the cache session closes automatically (Configurable timeout via &lt;code&gt;gsudo config CacheDuration&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;While this very convenient, it&#39;s important to understand its potential security risks. Even if gsudo itself is secure, the inherent vulnerability lies in the host process. If your system is already compromised by a malicious process, it can manipulate the permitted process (e.g., Cmd/Powershell) and force an active gsudo cache instance to elevate privileges without triggering a UAC prompt.&lt;/p&gt; &#xA;&lt;p&gt;This risk is the trade-off for using the Credentials Cache. The cache is safe to use as long as you are confident there are no malicious processes running on your system.&lt;/p&gt; &#xA;&lt;p&gt;Here are the &lt;code&gt;Credentials Cache&lt;/code&gt; Modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Explicit:&lt;/code&gt; (default) Every elevation shows a UAC popup, unless a cache session is started manually... &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To start or stop a cache session run: &lt;code&gt;gsudo cache {on | off}&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This is the default mode. (Use &lt;code&gt;gsudo config CacheMode Explicit&lt;/code&gt; to revert to this value).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Auto:&lt;/code&gt; Similar to unix-sudo. The first elevation shows a UAC popup and &lt;strong&gt;starts a cache session automatically&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;gsudo config CacheMode Auto&lt;/code&gt; to use this mode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Disabled:&lt;/code&gt; Every elevation shows a UAC popup, and tryoing to start a cache session will throw an error.. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;gsudo config CacheMode Disabled&lt;/code&gt; to use this mode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In any case, you can stop all cache sessions with &lt;code&gt;gsudo -k&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gerardog.github.io/gsudo/docs/credentials-cache&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The elevated instances do not have access to the network shares connected on the non-elevated space. This is not a &lt;code&gt;gsudo&lt;/code&gt; issue but how Windows works. Use &lt;code&gt;--copyNS&lt;/code&gt; to replicate Network Shares into the elevated session, but this is not bi-directional and is interactive (may prompt for user/password).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;gsudo.exe&lt;/code&gt; can be placed on a network share and invoked as &lt;code&gt;\\server\share\gsudo {command}&lt;/code&gt; but doesn&#39;t work if your &lt;strong&gt;current&lt;/strong&gt; folder is a network drive. For example do not map &lt;code&gt;\\server\share\&lt;/code&gt; to &lt;code&gt;Z:&lt;/code&gt; and then &lt;code&gt;Z:\&amp;gt;gsudo do-something&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please report issues in the &lt;a href=&#34;https://github.com/gerardog/gsudo/issues&#34;&gt;Issues&lt;/a&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Why is it named &lt;code&gt;gsudo&lt;/code&gt; instead of just &lt;code&gt;sudo&lt;/code&gt;?&lt;/p&gt; &lt;p&gt;When I created &lt;code&gt;gsudo&lt;/code&gt;, there were other &lt;code&gt;sudo&lt;/code&gt; packages on most Windows popular package managers such as &lt;code&gt;Chocolatey&lt;/code&gt; and &lt;code&gt;Scoop&lt;/code&gt;, so I had no other choice to pick another name. &lt;code&gt;gsudo&lt;/code&gt; installers create an alias for &lt;code&gt;sudo&lt;/code&gt;, so feel free to use &lt;code&gt;sudo&lt;/code&gt; on your command line to invoke &lt;code&gt;gsudo&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why did you migrated from &lt;code&gt;.Net Framework 4.6&lt;/code&gt; to &lt;code&gt;.Net Core 7.0&lt;/code&gt;?&lt;/p&gt; &lt;p&gt;Starting from v1.4.0, it is built using &lt;code&gt;.Net 7.0&lt;/code&gt; NativeAOT. It loads faster and uses less memory, and runs on machines without any .Net runtime installed. Prior versions &lt;code&gt;&amp;lt;v1.3.0&lt;/code&gt; used .Net 4.6, because it was included in every Windows 10/11 installation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Is &lt;code&gt;gsudo&lt;/code&gt; a port of &lt;code&gt;*nix sudo&lt;/code&gt;?&lt;/p&gt; &lt;p&gt;No. &lt;code&gt;gsudo&lt;/code&gt; reminds of the original sudo regarding user expectations. Many &lt;code&gt;sudo&lt;/code&gt; features are &lt;code&gt;*nix&lt;/code&gt; specific and could never have a &lt;code&gt;Windows&lt;/code&gt; counterpart. Other features (such as &lt;code&gt;sudoers&lt;/code&gt;) could potentially be implemented but are not at this point.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;What are the requirements? Does it work in Windows 7/8?&lt;/p&gt; &lt;p&gt;It works on Win7 SP1 onwards. Some features may only work in Windows 10/11, like elevating as TrustedInstaller.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How do I return to the previous security level after using gsudo?&lt;/p&gt; &lt;p&gt;In the same way as you would with &lt;code&gt;Unix/Linux sudo&lt;/code&gt;: &lt;code&gt;gsudo&lt;/code&gt; does not alter the current process, instead it launches a new process with different permissions/integrity level. To go back to the previous level, just end the new process. For &lt;code&gt;Command Prompt&lt;/code&gt; or &lt;code&gt;PowerShell&lt;/code&gt; just type &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Please support gsudo! 💵&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please give us a star! ⭐&lt;/li&gt; &#xA; &lt;li&gt;Help spread the word by mentioning &lt;code&gt;gsudo&lt;/code&gt; in social networks!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gerardog.github.io/gsudo/sponsor&#34;&gt;Sponsor or Donate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>