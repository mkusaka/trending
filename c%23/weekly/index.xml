<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-19T01:52:33Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BornToBeRoot/NETworkManager</title>
    <updated>2023-03-19T01:52:33Z</updated>
    <id>tag:github.com,2023-03-19:/BornToBeRoot/NETworkManager</id>
    <link href="https://github.com/BornToBeRoot/NETworkManager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A powerful tool for managing networks and troubleshoot network problems!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;NETworkManager Preview&#34; src=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/Images/NETworkManager_128x128.png?raw=true&#34;&gt; &#xA; &lt;h1&gt;NETworkManager&lt;/h1&gt; &#xA; &lt;p&gt; &lt;b&gt;A powerful tool for managing networks and troubleshoot network problems!&lt;/b&gt; &lt;/p&gt; &#xA; &lt;p&gt; You can connect to and manage remote systems via Remote Desktop, PowerShell, PuTTY, TigerVNC or AWS (Systems Manager) Session Manager. &lt;br&gt; &lt;br&gt; Furthermore it contains features like a WiFi analyzer, IP scanner, port scanner, ping monitor, traceroute, DNS lookup or a LLDP/CDP capture (and many &lt;a href=&#34;https://borntoberoot.net/NETworkManager/Features&#34;&gt;more&lt;/a&gt;) to analyze your network and troubleshoot network problems. &lt;br&gt; &lt;br&gt; You can save your hosts (or networks) in profiles which can be used in the various features. For additional security, the profile file can be encrypted. &lt;br&gt; &lt;br&gt; And the best part... it&#39;s open source! &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/BornToBeroot/NETworkManager/releases&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;All releases&#34; src=&#34;https://img.shields.io/github/downloads/BornToBeroot/NETworkManager/total.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeroot/NETworkManager/releases/latest&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Latest release&#34; src=&#34;https://img.shields.io/github/downloads/BornToBeroot/NETworkManager/latest/total.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeroot/NETworkManager/releases&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Latest pre-release&#34; src=&#34;https://img.shields.io/github/downloads-pre/BornToBeroot/NETworkManager/latest/total.svg?label=downloads%40pre-release&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/BornToBeroot/NETworkManager/stargazers&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/BornToBeroot/NETworkManager.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeroot/NETworkManager/network&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/BornToBeroot/NETworkManager.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://ci.appveyor.com/project/BornToBeRoot/NETworkManager/branch/main&#34;&gt; &lt;img alt=&#34;AppVeyor&#34; src=&#34;https://img.shields.io/appveyor/ci/BornToBeRoot/NETworkManager/main.svg?style=for-the-badge&amp;amp;logo=appveyor&amp;amp;&amp;amp;label=main&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;AppVeyor&#34; src=&#34;https://img.shields.io/github/license/BornToBeroot/NETworkManager.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://transifex.com/BornToBeRoot/NETworkManager/&#34;&gt; &lt;img alt=&#34;Transifex&#34; src=&#34;https://img.shields.io/badge/transifex-translate-green.svg?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/issues/new?labels=Feature-Request&amp;amp;template=Feature_request.md&#34;&gt; &lt;img alt=&#34;Feature request&#34; src=&#34;https://img.shields.io/badge/github-feature_request-green.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/issues/new?labels=Issue&amp;amp;template=Bug_report.md&#34;&gt; &lt;img alt=&#34;Bug report&#34; src=&#34;https://img.shields.io/badge/github-bug_report-red.svg?style=for-the-badge&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-download&#34;&gt;Download&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-changelog&#34;&gt;Changelog&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-documentation&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-contributing&#34;&gt;Contributing&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-build&#34;&gt;Build&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/#-license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;img alt=&#34;NETworkManager Preview&#34; src=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/docs/Preview.gif?raw=true&#34;&gt; &#xA;&lt;h2&gt;📦 Download&lt;/h2&gt; &#xA;&lt;p&gt;Prebuilt binaries (setup, portable and archive) are available on the &lt;a href=&#34;https://borntoberoot.net/NETworkManager/Download&#34;&gt;download page&lt;/a&gt;. Here you will also find the system requirements and how to install the application silent. The files are provided via &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/releases/latest&#34;&gt;GitHub releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition, NETworkManager is available through the package managers &lt;a href=&#34;https://chocolatey.org/packages/NETworkManager&#34;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/winget-pkgs/tree/master/manifests/b/BornToBeRoot/NETworkManager/&#34;&gt;WinGet&lt;/a&gt; and &lt;a href=&#34;https://stealthpuppy.com/evergreen/apps/&#34;&gt;Evergreen&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;# Chocolatey&#xA;choco install networkmanager&#xA;&#xA;# WinGet&#xA;winget install BornToBeRoot.NETworkManager&#xA;&#xA;# Evergreen&#xA;Get-EvergreenApp -Name NETworkManager | Save-EvergreenApp -Path C:\Users\$env:Username\Downloads\&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📃 Changelog&lt;/h2&gt; &#xA;&lt;p&gt;You can find the changelog for each version &lt;a href=&#34;https://borntoberoot.net/NETworkManager/Changelog&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation is provided via GitHub pages and can be found &lt;a href=&#34;https://borntoberoot.net/NETworkManager/Documentation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;✨ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Here you will find ways to contribute:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/CONTRIBUTING.md#contributing&#34;&gt;Request a feature, report a bug or ask a question&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/CONTRIBUTING.md#code&#34;&gt;Add a feature or fix a bug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/CONTRIBUTING.md#translation&#34;&gt;Add or improve a translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BornToBeRoot/NETworkManager/main/CONTRIBUTING.md#documentation&#34;&gt;Improve the documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/SECURITY.md&#34;&gt;Report a security vulnerability&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A list of all contributors can be found &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/Contributors.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; defined by the &lt;a href=&#34;http://contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🔧 Build&lt;/h2&gt; &#xA;&lt;p&gt;You can build the application like any other .NET Core / WPF application on Windows.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure that the following requirements are installed:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;SDK .NET 6.x&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Visual Studio 2019 or later with &lt;code&gt;.NET desktop development&lt;/code&gt; and &lt;code&gt;Universal Windows Platform development&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(optional) Install &lt;a href=&#34;https://jrsoftware.org/isinfo.php&#34;&gt;InnoSetup&lt;/a&gt; to create an installer.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download the additional languages from the &lt;a href=&#34;https://github.com/jrsoftware/issrc/raw/main/Files/Languages/Unofficial/&#34;&gt;Inno Setup repository&lt;/a&gt; and copy the following files to &lt;code&gt;%ProgramFiles%\Inno Setup 6\Languages&lt;/code&gt;: &lt;code&gt;ChineseSimplified.isl&lt;/code&gt;, &lt;code&gt;ChineseTraditional.isl&lt;/code&gt;, &lt;code&gt;Hungarian.isl&lt;/code&gt;, &lt;code&gt;Korean.isl&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone or download the repository:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/BornToBeRoot/NETworkManager&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;Source\NETworkManager.sln&lt;/code&gt; with Visual Studio to debug or build the solution.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively the &lt;code&gt;build.ps1&lt;/code&gt; script can be used to create the binaries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;git clone https://github.com/BornToBeRoot/NETworkManager; Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass; .\NETworkManager\build.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;NETworkManager is published under the &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/raw/main/LICENSE&#34;&gt;GNU General Public License v3&lt;/a&gt;. The licenses of the used libraries can be found &lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager/tree/main/Source/NETworkManager.Documentation/Licenses&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/semantic-kernel</title>
    <updated>2023-03-19T01:52:33Z</updated>
    <id>tag:github.com,2023-03-19:/microsoft/semantic-kernel</id>
    <link href="https://github.com/microsoft/semantic-kernel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.SemanticKernel/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&#34; alt=&#34;Nuget package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/microsoft/semantic-kernel&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci.yml/badge.svg?branch=main&#34; alt=&#34;dotnet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/SKDiscord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1063152441819942922&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ &lt;strong&gt;NOTE&lt;/strong&gt;: This project is in early alpha and, just like AI, will evolve quickly. We invite you to join us in developing the Semantic Kernel together! Please contribute by using GitHub &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/discussions&#34;&gt;Discussions&lt;/a&gt;, opening GitHub &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/issues/new/choose&#34;&gt;Issues&lt;/a&gt;, sending us &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/pulls&#34;&gt;PRs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Semantic Kernel (SK)&lt;/strong&gt; is a lightweight SDK enabling integration of AI Large Language Models (LLMs) with conventional programming languages. The SK extensible programming model combines natural language &lt;strong&gt;semantic functions&lt;/strong&gt;, traditional code &lt;strong&gt;native functions&lt;/strong&gt;, and &lt;strong&gt;embeddings-based memory&lt;/strong&gt; unlocking new potential and adding value to applications with AI.&lt;/p&gt; &#xA;&lt;p&gt;SK supports &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PROMPT_TEMPLATE_LANGUAGE.md&#34;&gt;prompt templating&lt;/a&gt;, function chaining, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/EMBEDDINGS.md&#34;&gt;vectorized memory&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PLANNER.md&#34;&gt;intelligent planning&lt;/a&gt; capabilities out of the box.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/371009/221739773-cf43522f-c1e4-42f2-b73d-5ba84e21febb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Semantic Kernel is designed to support and encapsulate several design patterns from the latest in AI research, such that developers can infuse their applications with complex &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/SKILLS.md&#34;&gt;skills&lt;/a&gt; like &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PROMPT_TEMPLATE_LANGUAGE.md&#34;&gt;prompt&lt;/a&gt; chaining, recursive reasoning, summarization, zero/few-shot learning, contextual memory, long-term memory, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/EMBEDDINGS.md&#34;&gt;embeddings&lt;/a&gt;, semantic indexing, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PLANNER.md&#34;&gt;planning&lt;/a&gt;, and accessing external knowledge stores as well as your own data.&lt;/p&gt; &#xA;&lt;p&gt;By joining the SK community, you can build AI-first apps faster and have a front-row peek at how the SDK is being built. SK has been released as open-source so that more pioneering developers can join us in crafting the future of this landmark moment in the history of computing.&lt;/p&gt; &#xA;&lt;h2&gt;Samples ⚡&lt;/h2&gt; &#xA;&lt;p&gt;If you would like a quick overview about how Semantic Kernel can integrate with your app, start by cloning the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/microsoft/semantic-kernel.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and try these examples:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/chat-summary-webapp-react/README.md&#34;&gt;Simple chat summary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use ready-to-use skills and get those skills into your app easily.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/book-creator-webapp-react/README.md&#34;&gt;Book creator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use planner to deconstruct a complex goal and envision using the planner in your app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/auth-api-webapp-react/README.md&#34;&gt;Authentication and APIs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a basic connector pattern to authenticate and connect to an API and imagine integrating external data into your app&#39;s LLM AI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a more hands-on overview, you can also run the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/notebooks/dotnet/Getting-Started-Notebook.ipynb&#34;&gt;Getting Started notebook&lt;/a&gt;, looking into the syntax, creating &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/GLOSSARY.md&#34;&gt;Semantic Functions&lt;/a&gt;, working with Memory, and see how the kernel works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will need an &lt;a href=&#34;https://openai.com/api/&#34;&gt;Open AI API Key&lt;/a&gt; or &lt;a href=&#34;https://learn.microsoft.com/azure/cognitive-services/openai/quickstart?pivots=rest-api&#34;&gt;Azure Open AI service key&lt;/a&gt; to get started.&lt;/li&gt; &#xA; &lt;li&gt;There are a few software requirements you may need to satisfy before running examples and notebooks: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/azure/azure-functions/functions-run-local&#34;&gt;Azure Functions Core Tools&lt;/a&gt; used for running the kernel as a local API, required by the web apps.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/getting-started/install&#34;&gt;Yarn&lt;/a&gt; used for installing web apps&#39; dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Semantic Kernel supports .NET Standard 2.1 and it&#39;s recommended using .NET 6+. However, some of the examples in the repository require &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;.NET 7&lt;/a&gt; and the VS Code &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode&#34;&gt;Polyglot extension&lt;/a&gt; to run the notebooks.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started with Semantic Kernel ⚡&lt;/h2&gt; &#xA;&lt;p&gt;Here is a quick example of how to use Semantic Kernel from a C# console app.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new project, targeting .NET 6 or newer, and add the &lt;code&gt;Microsoft.SemanticKernel&lt;/code&gt; nuget package:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet add package Microsoft.SemanticKernel --prerelease&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.SemanticKernel/&#34;&gt;nuget.org&lt;/a&gt; for the latest version and more instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy and paste the following code into your project, with your Azure OpenAI key in hand (you can create one &lt;a href=&#34;https://learn.microsoft.com/azure/cognitive-services/openai/quickstart?pivots=rest-api&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using Microsoft.SemanticKernel;&#xA;using Microsoft.SemanticKernel.KernelExtensions;&#xA;&#xA;var kernel = Kernel.Builder.Build();&#xA;&#xA;// For Azure Open AI service endpoint and keys please see&#xA;// https://learn.microsoft.com/azure/cognitive-services/openai/quickstart?pivots=rest-api&#xA;kernel.Config.AddAzureOpenAICompletionBackend(&#xA;    &#34;davinci-backend&#34;,                   // Alias used by the kernel&#xA;    &#34;text-davinci-003&#34;,                  // Azure OpenAI *Deployment ID*&#xA;    &#34;https://contoso.openai.azure.com/&#34;, // Azure OpenAI *Endpoint*&#xA;    &#34;...your Azure OpenAI Key...&#34;        // Azure OpenAI *Key*&#xA;);&#xA;&#xA;string skPrompt = @&#34;&#xA;{{$input}}&#xA;&#xA;Give me the TLDR in 5 words.&#xA;&#34;;&#xA;&#xA;string textToSummarize = @&#34;&#xA;1) A robot may not injure a human being or, through inaction,&#xA;allow a human being to come to harm.&#xA;&#xA;2) A robot must obey orders given it by human beings except where&#xA;such orders would conflict with the First Law.&#xA;&#xA;3) A robot must protect its own existence as long as such protection&#xA;does not conflict with the First or Second Law.&#xA;&#34;;&#xA;&#xA;var tldrFunction = kernel.CreateSemanticFunction(skPrompt);&#xA;&#xA;var summary = await kernel.RunAsync(textToSummarize, tldrFunction);&#xA;&#xA;Console.WriteLine(summary);&#xA;&#xA;// Output =&amp;gt; Protect humans, follow orders, survive.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing and Community&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions and suggestions to SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; &#xA;&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;To learn more and get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://aka.ms/sk/learn&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Learn how to &lt;a href=&#34;https://github.com/microsoft/semantic-kernel/raw/main/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt; to the project&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://aka.ms/SKDiscord&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the team on our &lt;a href=&#34;https://aka.ms/sk/blog&#34;&gt;blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/36091529/225807182-22ad65e9-82c6-4727-bb77-d1c256736045.png&#34; align=&#34;left&#34; width=&#34;40px&#34;&gt; &#xA;&lt;b&gt;Python developers:&lt;/b&gt; Semantic Kernel is coming to Python soon! Check out the work-in-progress and contribute in the &#xA;&lt;a href=&#34;https://github.com/microsoft/semantic-kernel/tree/python-preview&#34;&gt;&lt;b&gt;python-preview&lt;/b&gt;&lt;/a&gt; branch. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vrm-c/UniVRM</title>
    <updated>2023-03-19T01:52:33Z</updated>
    <id>tag:github.com,2023-03-19:/vrm-c/UniVRM</id>
    <link href="https://github.com/vrm-c/UniVRM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UniVRM is a gltf-based VRM format implementation for Unity. English is here https://vrm.dev/en/ . 日本語 はこちら https://vrm.dev/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniVRM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/vrm-c/UniVRM?color=green&#34; alt=&#34;GitHub latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vrm-c/UniVRM/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/vrm-c/UniVRM&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The standard implementation of 3D Avatar file format &lt;a href=&#34;https://vrm-consortium.org/en/&#34;&gt;VRM&lt;/a&gt; for &lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VRM is an extension of &lt;a href=&#34;https://www.khronos.org/gltf/&#34;&gt;glTF 2.0&lt;/a&gt;, so this library also support glTF 2.0 files.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;UniVRM supports the &lt;a href=&#34;https://github.com/vrm-c/vrm-specification&#34;&gt;VRM 1.0 specification&lt;/a&gt; and the &lt;a href=&#34;https://registry.khronos.org/glTF/&#34;&gt;glTF 2.0 specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM can import/export following supported file types at both runtime and editor.&lt;/p&gt; &#xA;&lt;h3&gt;Supported file types&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VRM 1.0 (.vrm)&lt;/li&gt; &#xA; &lt;li&gt;VRM 0.x (.vrm)&lt;/li&gt; &#xA; &lt;li&gt;glTF 2.0 (.glb | .gltf | .zip)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Import features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can import supported file types at both runtime and editor.&lt;/li&gt; &#xA; &lt;li&gt;Support for async/await importing at runtime.&lt;/li&gt; &#xA; &lt;li&gt;Support for Migration VRM 0.x files into VRM 1.0 files.&lt;/li&gt; &#xA; &lt;li&gt;Support for ScriptedImporter for VRM 1.0 and glTF 2.0.&lt;/li&gt; &#xA; &lt;li&gt;You can import glTF&#39;s PBR materials into Unity Built-in RP&#39;s Standard materials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Export features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can export supported file types at both runtime and editor.&lt;/li&gt; &#xA; &lt;li&gt;You can export Unity Built-in RP&#39;s Standard materials into glTF&#39;s PBR materials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Environments&lt;/h2&gt; &#xA;&lt;p&gt;The latest UniVRM supports Unity 2020.3 LTS or later.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM supports scripting backends both .NET and IL2CPP.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM supports the following building target platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standalone (Windows/Mac/Linux)&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;WebGL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The other platforms maybe work but they are not tested.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Latest Release&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;Latest Release Version (supports Unity 2020.3 LTS or later)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Previous Releases&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;You can use an previous version of UniVRM if you use an older version of Unity. These are &lt;strong&gt;not supported&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Unity Version&lt;/th&gt; &#xA;    &lt;th&gt;UniVRM Release&lt;/th&gt; &#xA;    &lt;th&gt;VRM 1.0 support&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2019.3&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.99.1&#34;&gt;v0.99.1&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2018.4&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.79.0&#34;&gt;v0.79.0&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;You can install UniVRM using the UnityPackage or the UPM Package.&lt;/p&gt; &#xA;&lt;h3&gt;UnityPackage&lt;/h3&gt; &#xA;&lt;p&gt;From the &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;latest release&lt;/a&gt;, you can download the &lt;code&gt;.unitypackage&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For import/export VRM 1.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;VRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You can also download sample projects as &lt;strong&gt;VRM_Samples-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export VRM 0.x &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;UniVRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You can also download sample projects as &lt;strong&gt;UniVRM_Samples-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export glTF 2.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;VRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UPM Package&lt;/h3&gt; &#xA;&lt;p&gt;From the &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;latest release&lt;/a&gt;, you can find UPM package urls.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For import/export VRM 1.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrm&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export VRM 0.x &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.univrm&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export glTF 2.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can install these UPM packages via &lt;code&gt;Package Manager&lt;/code&gt; -&amp;gt; &lt;code&gt;+&lt;/code&gt; -&amp;gt; &lt;code&gt;Add package from git URL...&lt;/code&gt; in UnityEditor.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vrm.dev/en/vrm/index.html&#34;&gt;https://vrm.dev/en/vrm/index.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For developers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vrm-c.github.io/UniVRM/en/&#34;&gt;https://vrm-c.github.io/UniVRM/en/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vrm-c/UniVRM/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>