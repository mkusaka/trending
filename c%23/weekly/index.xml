<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-26T02:05:15Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zeroruka/GI_Assets</title>
    <updated>2022-06-26T02:05:15Z</updated>
    <id>tag:github.com,2022-06-26:/zeroruka/GI_Assets</id>
    <link href="https://github.com/zeroruka/GI_Assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Character textures, models and mods for a certain anime game.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GI Assets&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Anime Game Character Model &amp;amp; Texture files for modding.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER: Using mods in this repo on official Genshin servers is very likely to get you banned. I do not recommend or condone the use of these scripts and programs on official servers, and if you do use it on official servers I take no responsibility for any consequences as a result.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;免责声明：在官方服务器上使用本库中的MOD，很可能会被封号。我不推荐或纵容在官方服务器上使用这些脚本和程序，如果你依然要在官服上使用，我对由此产生的任何后果不承担责任。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;All guides are in the &lt;a href=&#34;https://github.com/zeroruka/GI_Assets/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;中文教程请看 &lt;a href=&#34;https://github.com/zeroruka/GI-Assets-wiki/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>JamesNK/Newtonsoft.Json</title>
    <updated>2022-06-26T02:05:15Z</updated>
    <id>tag:github.com,2022-06-26:/JamesNK/Newtonsoft.Json</id>
    <link href="https://github.com/JamesNK/Newtonsoft.Json" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Json.NET is a popular high-performance JSON framework for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/Doc/icons/logo.jpg&#34; alt=&#34;Logo&#34;&gt; Json.NET&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Newtonsoft.Json/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Newtonsoft.Json.svg?style=flat-square&#34; alt=&#34;NuGet version (Newtonsoft.Json)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/jamesnk/Public/_build/latest?definitionId=8&#34;&gt;&lt;img src=&#34;https://dev.azure.com/jamesnk/Public/_apis/build/status/JamesNK.Newtonsoft.Json?branchName=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.newtonsoft.com/json&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.newtonsoft.com/json/help&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Newtonsoft.Json&#34;&gt;NuGet Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json/releases&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/LICENSE.md&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/json.net&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>homuler/MediaPipeUnityPlugin</title>
    <updated>2022-06-26T02:05:15Z</updated>
    <id>tag:github.com,2022-06-26:/homuler/MediaPipeUnityPlugin</id>
    <link href="https://github.com/homuler/MediaPipeUnityPlugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unity plugin to run MediaPipe graphs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaPipe Unity Plugin&lt;/h1&gt; &#xA;&lt;p&gt;This is a Unity (2021.3.3f1) &lt;a href=&#34;https://docs.unity3d.com/Manual/NativePlugins.html&#34;&gt;Native Plugin&lt;/a&gt; to use &lt;a href=&#34;https://github.com/google/mediapipe&#34;&gt;MediaPipe&lt;/a&gt; (0.8.10).&lt;/p&gt; &#xA;&lt;p&gt;The goal of this project is to port the MediaPipe API (C++) &lt;em&gt;one by one&lt;/em&gt; to C# so that it can be called from Unity.&lt;br&gt; This approach may sacrifice performance when you need to call multiple APIs in a loop, but it gives you the flexibility to use MediaPipe instead.&lt;/p&gt; &#xA;&lt;p&gt;With this plugin, you can&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write MediaPipe code in C#.&lt;/li&gt; &#xA; &lt;li&gt;Run MediaPipe&#39;s official solution on Unity.&lt;/li&gt; &#xA; &lt;li&gt;Run your custom &lt;code&gt;Calculator&lt;/code&gt; and &lt;code&gt;CalculatorGraph&lt;/code&gt; on Unity. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;⚠&lt;/span&gt; Depending on the type of input/output, you may need to write C++ code.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;😸&lt;/span&gt; Hello World!&lt;/h2&gt; &#xA;&lt;p&gt;Here is a Hello World! example.&lt;br&gt; Compare it with &lt;a href=&#34;https://github.com/google/mediapipe/raw/cf101e62a9d49a51be76836b2b8e5ba5c06b5da0/mediapipe/examples/desktop/hello_world/hello_world.cc&#34;&gt;the official code&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using Mediapipe;&#xA;using UnityEngine;&#xA;&#xA;public sealed class HelloWorld : MonoBehaviour&#xA;{&#xA;    private const string _ConfigText = @&#34;&#xA;input_stream: &#34;&#34;in&#34;&#34;&#xA;output_stream: &#34;&#34;out&#34;&#34;&#xA;node {&#xA;  calculator: &#34;&#34;PassThroughCalculator&#34;&#34;&#xA;  input_stream: &#34;&#34;in&#34;&#34;&#xA;  output_stream: &#34;&#34;out1&#34;&#34;&#xA;}&#xA;node {&#xA;  calculator: &#34;&#34;PassThroughCalculator&#34;&#34;&#xA;  input_stream: &#34;&#34;out1&#34;&#34;&#xA;  output_stream: &#34;&#34;out&#34;&#34;&#xA;}&#xA;&#34;;&#xA;&#xA;    private void Start()&#xA;    {&#xA;        var graph = new CalculatorGraph(_ConfigText);&#xA;        var poller = graph.AddOutputStreamPoller&amp;lt;string&amp;gt;(&#34;out&#34;).Value();&#xA;        graph.StartRun().AssertOk();&#xA;&#xA;        for (var i = 0; i &amp;lt; 10; i++)&#xA;        {&#xA;            graph.AddPacketToInputStream(&#34;in&#34;, new StringPacket(&#34;Hello World!&#34;, new Timestamp(i))).AssertOk();&#xA;        }&#xA;&#xA;        graph.CloseInputStream(&#34;in&#34;).AssertOk();&#xA;        var packet = new StringPacket();&#xA;&#xA;        while (poller.Next(packet))&#xA;        {&#xA;            Debug.Log(packet.Get());&#xA;        }&#xA;        graph.WaitUntilDone().AssertOk();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed usage, see &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/API-Overview&#34;&gt;the API Overview&lt;/a&gt; page or the tutorial on &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/Getting-Started&#34;&gt;the Getting Started page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🛠&lt;/span&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;This repository does not contain required libraries (e.g. &lt;code&gt;libmediapipe_c.so&lt;/code&gt;, &lt;code&gt;Google.Protobuf.dll&lt;/code&gt;, etc), so you &lt;strong&gt;need to build them&lt;/strong&gt; first.&lt;br&gt; For step-by-step guide, please refer to the &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/Installation-Guide&#34;&gt;Installation Guide&lt;/a&gt; in Wiki.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; libraries that can be built differ depending on your environment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; GPU mode is not supported on macOS and Windows.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Editor&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (ARM64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;WebGL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (AMD64) [^1]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Intel Mac&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;M1 Mac [^2]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows 10/11 (AMD64) [^3]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;[^1]: Tested on Arch Linux. [^2]: Experimental, because MediaPipe does not support M1 Mac. [^3]: Running MediaPipe on Windows is &lt;a href=&#34;https://google.github.io/mediapipe/getting_started/install.html#installing-on-windows&#34;&gt;experimental&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🍽&lt;/span&gt; Try sample app&lt;/h2&gt; &#xA;&lt;h3&gt;Example Solutions&lt;/h3&gt; &#xA;&lt;p&gt;Here is a list of &lt;a href=&#34;https://google.github.io/mediapipe/solutions/solutions.html&#34;&gt;solutions&lt;/a&gt; that you can try in the sample app.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;🔔&lt;/span&gt; The graphs you can run are not limited to the ones in this list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (GPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (CPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (CPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (CPU)&lt;/th&gt; &#xA;   &lt;th&gt;WebGL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Face Detection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Face Mesh&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Iris&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hands&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pose&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Holistic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Selfie Segmentation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hair Segmentation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Object Detection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Box Tracking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Instant Motion Tracking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Objectron&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;KNIFT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;UnityEditor&lt;/h3&gt; &#xA;&lt;p&gt;Select &lt;code&gt;Mediapipe/Samples/Scenes/Start Scene&lt;/code&gt; and play.&lt;/p&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve built native libraries for CPU (i.e. &lt;code&gt;--desktop cpu&lt;/code&gt;), select &lt;code&gt;CPU&lt;/code&gt; for inference mode from the Inspector Window. &lt;img src=&#34;https://user-images.githubusercontent.com/4690128/134795568-156f3d41-b46e-477f-a487-d04c99300c33.png&#34; alt=&#34;preferable-inference-mode&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Android, iOS&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you select &lt;code&gt;GPU&lt;/code&gt; for inference mode before building the app, because &lt;code&gt;CPU&lt;/code&gt; inference mode is not supported currently.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; Wiki&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki&#34;&gt;https://github.com/homuler/MediaPipeUnityPlugin/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that some files are distributed under other licenses.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MediaPipe (&lt;a href=&#34;https://github.com/google/mediapipe/raw/e6c19885c6d3c6f410c730952aeed2852790d306/LICENSE&#34;&gt;Apache Licence 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;emscripten (&lt;a href=&#34;https://github.com/emscripten-core/emscripten/raw/7c873832e933e86855f5ef5f7c6438f0e457c94e/LICENSE&#34;&gt;MIT&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;third_party/mediapipe_emscripten_patch.diff&lt;/code&gt; contains code copied from emscripten&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FontAwesome (&lt;a href=&#34;https://github.com/FortAwesome/Font-Awesome/raw/7cbd7f9951be31f9d06b6ac97739a700320b9130/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Sample scenes use Font Awesome fonts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/raw/master/Third%20Party%20Notices.md&#34;&gt;Third Party Notices.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>