<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:39:19Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mzying2001/CefFlashBrowser</title>
    <updated>2024-07-21T01:39:19Z</updated>
    <id>tag:github.com,2024-07-21:/Mzying2001/CefFlashBrowser</id>
    <link href="https://github.com/Mzying2001/CefFlashBrowser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FlashÊµèËßàÂô® / Flash Browser&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Mzying2001/CefFlashBrowser/raw/master/Icons/128px.png&#34;&gt; &lt;br&gt; CefFlashBrowser &lt;br&gt; &lt;img src=&#34;https://img.shields.io/github/license/Mzying2001/CefFlashBrowser&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Mzying2001/CefFlashBrowser?include_prereleases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Mzying2001/CefFlashBrowser/total&#34;&gt; &lt;/h1&gt; &#xA;&lt;p&gt;FLASH BROWSER!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Mzying2001/CefFlashBrowser/raw/master/Images/MainWindow.png&#34; alt=&#34;main&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/teams-ai</title>
    <updated>2024-07-21T01:39:19Z</updated>
    <id>tag:github.com,2024-07-21:/microsoft/teams-ai</id>
    <link href="https://github.com/microsoft/teams-ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SDK focused on building AI based applications and extensions for Microsoft Teams and other Bot Framework channels&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://media.githubusercontent.com/media/microsoft/teams-ai/main/assets/icon.png&#34; width=&#34;100px&#34;&gt; Teams AI Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/microsoft/teams-ai?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/microsoft/teams-ai/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Javascript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_build/latest?definitionId=5&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_apis/build/status%2Fteams-ai%2Fmicrosoft.teams-ai.javascript?branchName=main&#34; alt=&#34;Javascript Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@microsoft/teams-ai&#34;&gt;NPM&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_build/latest?definitionId=4&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_apis/build/status%2Fteams-ai%2Fmicrosoft.teams-ai.dotnet?branchName=main&#34; alt=&#34;C# Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Teams.AI&#34;&gt;NuGet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_build/latest?definitionId=10&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/DomoreexpGithub/Github_Pipelines/_apis/build/status%2Fteams-ai%2Fmicrosoft.teams-ai.python?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/teams-ai/&#34;&gt;PyPI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Welcome to the Teams AI Library! This SDK is specifically designed to assist you in creating bots capable of interacting with Teams and Microsoft 365 applications. It is constructed using the &lt;a href=&#34;https://github.com/microsoft/botbuilder-js&#34;&gt;Bot Framework SDK&lt;/a&gt; as its foundation, simplifying the process of developing bots that interact with Teams&#39; artificial intelligence capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/teams-ai/assets/14900841/154353ff-bafe-4423-abcd-6dc5a8680fe9&#34; alt=&#34;Teams AI flow diagram&#34;&gt; This is a diagram of the Teams-AI flow. Teams AI Library SDK hooks into the Teams SDK and Azure OpenAI SDK to provide a seamless experience for developers.&lt;/p&gt; &#xA;&lt;p&gt;The SDK is currently available for JavaScript/TypeScript applications in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/js&#34;&gt;&lt;code&gt;js&lt;/code&gt;&lt;/a&gt; folder and via the &lt;a href=&#34;https://www.npmjs.com/package/@microsoft/teams-ai&#34;&gt;teams-ai package on NPM&lt;/a&gt;. .NET support is available in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/dotnet&#34;&gt;&lt;code&gt;dotnet&lt;/code&gt;&lt;/a&gt; folder and via the &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Teams.AI&#34;&gt;teams-ai package on NuGet&lt;/a&gt;. Python support is available in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/python&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt; folder and via the &lt;a href=&#34;https://pypi.org/project/teams-ai/&#34;&gt;teams-ai package on Pypi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;üñáÔ∏è Jump right in‚ùóÔ∏è üìé&lt;/h3&gt; &#xA; &lt;p&gt;If you want to jump immediately into AI, try out the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/js/samples/04.ai-apps/a.teamsChefBot&#34;&gt;04.ai.a.teamsChefbot&lt;/a&gt; sample. This sample is a simple bot that uses the OpenAI GPT model to build a Teams app. Just load it up in Visual Studio Code, rename the sample.env file to .env, add in your OpenAI key or Azure OpenAI key and endpoint in the .env file, and hit F5! üéâ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Start with our getting started guides&lt;/h3&gt; &#xA;&lt;p&gt;This SDK is now generally available. We welcome your feedback and contributions!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To get started, head over to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/getting-started/README.md&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Capabilities&lt;/h2&gt; &#xA;&lt;h3&gt;Teams-centric component scaffolding&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For examples of the below, browse through the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/js/samples/&#34;&gt;&lt;code&gt;js&lt;/code&gt;&lt;/a&gt; sample folders, the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/dotnet/samples&#34;&gt;&lt;code&gt;dotnet&lt;/code&gt;&lt;/a&gt; sample folders or the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/python/samples&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt; sample folders. Simple scaffolding for any conversational app component, including:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat bots&lt;/li&gt; &#xA; &lt;li&gt;Message Extensions&lt;/li&gt; &#xA; &lt;li&gt;Link unfurling&lt;/li&gt; &#xA; &lt;li&gt;Adaptive Cards&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Natural Language Modelling&lt;/h3&gt; &#xA;&lt;p&gt;The SDK is built to leverage OpenAI Large Language Models so you don&#39;t have to create your own. This saves you the complexity of processing natural language, and allows your users to talk to your app with their own words.&lt;/p&gt; &#xA;&lt;h3&gt;Prompt Engineering&lt;/h3&gt; &#xA;&lt;p&gt;With a simple text file written in human language, you can describe the functionality of your app to cue OpenAI to focus on the right user intentions and provide relevant responses.&lt;/p&gt; &#xA;&lt;h3&gt;Moderation&lt;/h3&gt; &#xA;&lt;p&gt;A configurable API call to filter inappropriate content for input content, output content, or both.&lt;/p&gt; &#xA;&lt;p&gt;Moderators are available whether you decide to you OpenAI or Azure OpenAI for your models.&lt;/p&gt; &#xA;&lt;p&gt;If using OpenAI see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/js/packages/teams-ai/src/moderators/OpenAIModerator.ts&#34;&gt;OpenAIModerator.ts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/dotnet/packages/Microsoft.TeamsAI/Microsoft.TeamsAI/AI/Moderator/OpenAIModerator.cs&#34;&gt;OpenAIModerator.cs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/python/packages/ai/teams/ai/moderators/openai_moderator.py&#34;&gt;openai_moderator.py&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For Azure&#39;s moderator, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/js/packages/teams-ai/src/moderators/AzureContentSafetyModerator.ts&#34;&gt;AzureContentSafetyModerator.ts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/dotnet/packages/Microsoft.TeamsAI/Microsoft.TeamsAI/AI/Moderator/AzureContentSafetyModerator.cs&#34;&gt;AzureContentSafetyModerator.cs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/python/packages/ai/teams/ai/moderators/azure_content_safety_moderator.py&#34;&gt;azure_content_safety_moderator.py&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Predictive Engine to Map Intents to Actions&lt;/h3&gt; &#xA;&lt;p&gt;Leveraging provided prompts and topic filters, it&#39;s simple to create a predictive engine that detects user intents and map them to relevant app actions, where you can focus your business logic. These actions are even possible to chain together to make building complex workflows easy.&lt;/p&gt; &#xA;&lt;h3&gt;Conversational Session History&lt;/h3&gt; &#xA;&lt;p&gt;The state of your user&#39;s session is not lost, allowing conversations to flow freely and arrive quickly at right outcome.&lt;/p&gt; &#xA;&lt;h3&gt;Localization&lt;/h3&gt; &#xA;&lt;p&gt;Because OpenAI&#39;s models are trained on the open internet, they&#39;re tuned to any language, saving you the cost of localization.&lt;/p&gt; &#xA;&lt;h3&gt;LLM modularity&lt;/h3&gt; &#xA;&lt;p&gt;While the SDK handles OpenAI&#39;s GPT models out of the box, you can choose to swap to the LLM of your choice without touching any of your conversational app code.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This SDK is licensed under the MIT License. This SDK includes tools to use APIs provided by third parties. These APIs are provided under their own separate terms.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAI API. Use of the OpenAI API requires an API key, which can be obtained from OpenAI. By using this SDK, you agree to abide by the OpenAI API Terms of Use and Privacy Policy. You can find them at &lt;a href=&#34;https://openai.com/policies/terms-of-use&#34;&gt;OpenAI Terms of Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Azure OpenAI Service. Use of the Azure OpenAI API requires an API key. By using this SDK, you agree to abide by the Azure OpenAI API terms. You can find them at &lt;a href=&#34;https://www.microsoft.com/licensing/terms/productoffering/MicrosoftAzure/MCA#ServiceSpecificTerms&#34;&gt;Azure OPENAI TOS&lt;/a&gt;, and associated documentation at &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/cognitive-services/openai/&#34;&gt;Azure Cognitive Services&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/teams-ai/main/CONTRIBUTING.md&#34;&gt;./CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;h2&gt;Accessing daily builds&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/microsoft/teams-ai/raw/main/docs/DAILYBUILDS.MD&#34;&gt;Daily Builds&lt;/a&gt; for instructions on how to access daily builds.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openiddict/openiddict-core</title>
    <updated>2024-07-21T01:39:19Z</updated>
    <id>tag:github.com,2024-07-21:/openiddict/openiddict-core</id>
    <link href="https://github.com/openiddict/openiddict-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible and versatile OAuth 2.0/OpenID Connect stack for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenIddict&lt;/h1&gt; &#xA;&lt;h3&gt;The OpenID Connect stack you&#39;ll be addicted to.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openiddict/openiddict-core/actions?query=workflow%3Abuild+branch%3Adev+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/openiddict/openiddict-core/workflows/build/badge.svg?branch=dev&amp;amp;event=push&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s OpenIddict?&lt;/h2&gt; &#xA;&lt;p&gt;OpenIddict aims at providing a &lt;strong&gt;versatile solution&lt;/strong&gt; to implement &lt;strong&gt;OpenID Connect client, server and token validation support in any ASP.NET Core 2.1 (and higher) application&lt;/strong&gt;. &lt;strong&gt;ASP.NET 4.6.1 (and higher) applications are also fully supported thanks to a native Microsoft.Owin 4.2 integration&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenIddict fully supports the &lt;strong&gt;&lt;a href=&#34;http://openid.net/specs/openid-connect-core-1_0.html&#34;&gt;code/implicit/hybrid flows&lt;/a&gt;&lt;/strong&gt;, the &lt;strong&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6749&#34;&gt;client credentials/resource owner password grants&lt;/a&gt;&lt;/strong&gt; and the &lt;a href=&#34;https://tools.ietf.org/html/rfc8628&#34;&gt;device authorization flow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenIddict natively supports &lt;strong&gt;&lt;a href=&#34;https://www.nuget.org/packages/OpenIddict.EntityFrameworkCore&#34;&gt;Entity Framework Core&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://www.nuget.org/packages/OpenIddict.EntityFramework&#34;&gt;Entity Framework 6&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://www.nuget.org/packages/OpenIddict.MongoDb&#34;&gt;MongoDB&lt;/a&gt;&lt;/strong&gt; out-of-the-box and custom stores can be implemented to support other providers.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;To implement a custom OpenID Connect server using OpenIddict, read &lt;a href=&#34;https://documentation.openiddict.com/guides/getting-started/&#34;&gt;Getting started&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Samples demonstrating how to use OpenIddict with the different OAuth 2.0/OpenID Connect flows&lt;/strong&gt; can be found in the &lt;a href=&#34;https://github.com/openiddict/openiddict-samples&#34;&gt;dedicated repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Developers looking for a simple and turnkey solution are strongly encouraged to use &lt;a href=&#34;https://docs.orchardcore.net/en/latest/docs/reference/modules/OpenId/&#34;&gt;OrchardCore and its OpenID module&lt;/a&gt;&lt;/strong&gt;, which is based on OpenIddict, comes with sensible defaults and offers a built-in management GUI to easily register OpenID client applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Looking to integrate with a SAML2P Identity Provider (IDP) or Service Provider (SP)?&lt;/strong&gt; Rock Solid Knowledge, a sponsor of OpenIddict, is developing a range of identity components to enhance your OpenIddict solution. The first of these is their popular &lt;a href=&#34;https://www.openiddictcomponents.com/?utm_source=openiddictgithubmain&amp;amp;utm_campaign=openiddict&#34;&gt;SAML2P component&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Compatibility matrix&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Web framework version&lt;/th&gt; &#xA;   &lt;th&gt;.NET runtime version&lt;/th&gt; &#xA;   &lt;th&gt;OpenIddict 4.x&lt;/th&gt; &#xA;   &lt;th&gt;OpenIddict 5.x&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 2.1&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.6.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 2.1&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.7.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 2.1&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 2.1&lt;/td&gt; &#xA;   &lt;td&gt;.NET Core 2.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùó&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 3.1&lt;/td&gt; &#xA;   &lt;td&gt;.NET Core 3.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùó&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 5.0&lt;/td&gt; &#xA;   &lt;td&gt;.NET 5.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùó&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 6.0&lt;/td&gt; &#xA;   &lt;td&gt;.NET 6.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 7.0&lt;/td&gt; &#xA;   &lt;td&gt;.NET 7.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASP.NET Core 8.0&lt;/td&gt; &#xA;   &lt;td&gt;.NET 8.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.Owin 4.2&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.6.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.Owin 4.2&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.7.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.Owin 4.2&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;strong&gt;ASP.NET Core 2.1 on .NET Core 2.1, ASP.NET Core 3.1 and 5.0 are no longer supported by Microsoft. While OpenIddict can still be used on these platforms thanks to its .NET Standard 2.0 compatibility, users are strongly encouraged to migrate to ASP.NET Core/.NET 6.0&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;p&gt;ASP.NET Core 2.1 on .NET Framework 4.6.1 (and higher) is still fully supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] &lt;strong&gt;The following features are not available when targeting .NET Framework 4.6.1&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;X.509 development encryption/signing certificates: calling &lt;code&gt;AddDevelopmentEncryptionCertificate()&lt;/code&gt; or &lt;code&gt;AddDevelopmentSigningCertificate()&lt;/code&gt; will result in a &lt;code&gt;PlatformNotSupportedException&lt;/code&gt; being thrown at runtime if no valid development certificate can be found and a new one must be generated.&lt;/li&gt; &#xA;  &lt;li&gt;X.509 ECDSA signing certificates/keys: calling &lt;code&gt;AddSigningCertificate()&lt;/code&gt; or &lt;code&gt;AddSigningKey()&lt;/code&gt; with an ECDSA certificate/key will always result in a &lt;code&gt;PlatformNotSupportedException&lt;/code&gt; being thrown at runtime.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Certification&lt;/h2&gt; &#xA;&lt;p&gt;Unlike many other identity providers, &lt;strong&gt;OpenIddict is not a turnkey solution but a framework that requires writing custom code&lt;/strong&gt; to be operational (typically, at least an authorization controller), making it a poor candidate for the certification program.&lt;/p&gt; &#xA;&lt;p&gt;While a reference implementation could be submitted as-is, &lt;strong&gt;this wouldn&#39;t guarantee that implementations deployed by OpenIddict users would be standard-compliant.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instead, &lt;strong&gt;developers are encouraged to execute the conformance tests against their own deployment&lt;/strong&gt; once they&#39;ve implemented their own logic.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] The samples repository contains &lt;a href=&#34;https://github.com/openiddict/openiddict-samples/tree/dev/samples/Contruum/Contruum.Server&#34;&gt;a dedicated sample&lt;/a&gt; specially designed to be used with the OpenID Connect Provider Certification tool and demonstrate that OpenIddict can be easily used in a certified implementation. To allow executing the certification tests as fast as possible, that sample doesn&#39;t include any membership or consent feature (two hardcoded identities are proposed for tests that require switching between identities).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Looking for additional resources to help you get started with OpenIddict?&lt;/strong&gt; Don&#39;t miss these interesting blog posts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ganhammar.se/posts/openiddict-on-aws-serverless-flexible-oauth2-oidc-provider&#34;&gt;OpenIddict on AWS Serverless: Flexible OAuth2/OIDC Provider&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/ganhammar&#34;&gt;Anton Ganhammar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2023/12/18/openiddict-5-0-general-availability/&#34;&gt;OpenIddict 5.0 general availability&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2023/10/20/introducing-native-applications-per-client-token-lifetimes-and-client-assertions-support-in-openiddict-5-0-preview1/&#34;&gt;Introducing native applications, per-client token lifetimes and client assertions support in OpenIddict 5.0 preview1&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2023/10/04/can-you-use-the-asp-net-core-identity-api-endpoints-with-openiddict/&#34;&gt;Can you use the ASP.NET Core Identity API endpoints with OpenIddict?&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://medium.com/@sergeygoodgood/openid-connect-and-oauth2-0-server-in-aspnetcore-using-openiddict-c463c6ebc082&#34;&gt;OpenID Connect and OAuth 2.0 server in ASP.NET Core using OpenIddict&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://medium.com/@sergeygoodgood&#34;&gt;Siarhei Kharlap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://alex-klaus.com/transparent-auth-gateway-1/&#34;&gt;Transparent Auth Gateway&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/aklaus&#34;&gt;Alex Klaus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2023/02/27/introducing-system-integration-support-for-the-openiddict-client/&#34;&gt;Introducing system integration support for the OpenIddict client&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2022/12/23/openiddict-4-0-general-availability/&#34;&gt;OpenIddict 4.0 general availability&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2022/12/16/getting-started-with-the-openiddict-web-providers/&#34;&gt;Getting started with the OpenIddict web providers&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/issues/694&#34;&gt;Introducing the OpenIddict-powered providers&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2022/02/25/introducing-the-openiddict-client/&#34;&gt;Introducing the OpenIddict client&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://damienbod.com/2022/01/03/secure-a-blazor-wasm-asp-net-core-hosted-app-using-bff-and-openiddict/&#34;&gt;Secure a Blazor WASM ASP.NET Core hosted APP using BFF and OpenIddict&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/damienbod&#34;&gt;Damien Bowden&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://dev.to/robinvanderknaap/setting-up-an-authorization-server-with-openiddict-part-i-introduction-4jid&#34;&gt;Setting up an Authorization Server with OpenIddict&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://dev.to/robinvanderknaap&#34;&gt;Robin van der Knaap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2020/03/03/adding-openiddict-3-0-to-an-owin-application/&#34;&gt;Adding OpenIddict 3.0 to an OWIN application&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kevinchalet.com/2020/02/18/creating-an-openid-connect-server-proxy-with-openiddict-3-0-s-degraded-mode/&#34;&gt;Creating an OpenID Connect server proxy with OpenIddict 3.0&#39;s degraded mode&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenIddict-based projects maintained by third parties&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://abp.io/&#34;&gt;ABP Framework OpenIddict module&lt;/a&gt;&lt;/strong&gt;: full-stack Web application framework for .NET&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ganhammar/OpenIddict.AmazonDynamoDB&#34;&gt;OpenIddict.AmazonDynamoDB&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/ganhammar&#34;&gt;ganhammar&lt;/a&gt;: Amazon DynamoDB stores for OpenIddict&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thomasduft/openiddict-ui&#34;&gt;OpenIddict UI&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/thomasduft&#34;&gt;Thomas Duft&lt;/a&gt;: headless UI for managing client applications and scopes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/OrchardCMS/OrchardCore&#34;&gt;OrchardCore OpenID module&lt;/a&gt;&lt;/strong&gt;: turnkey OpenID Connect server and token validation solution, built with multitenancy in mind&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/panoukos41/couchdb-openiddict&#34;&gt;P41.OpenIddict.CouchDB&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/panoukos41&#34;&gt;Panos Athanasiou&lt;/a&gt;: CouchDB stores for OpenIddict&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Nfactor26/pixel-identity&#34;&gt;pixel-identity&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/Nfactor26&#34;&gt;Nishant Singh&lt;/a&gt;: Ready to host OpenID Connect service using OpenIddict and ASP.NET Identity with a Blazor-based UI for managing users, roles, applications and scopes with support for multiple databases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/SharpGrip/OpenIddict.Api&#34;&gt;SharpGrip.OpenIddict.Api&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/SharpGrip&#34;&gt;SharpGrip&lt;/a&gt;: SharpGrip OpenIddict API is an extension of the OpenIddict library exposing the OpenIddict entities through a RESTful API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Security policy&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately by emailing &lt;a href=&#34;mailto:security@openiddict.com&#34;&gt;security@openiddict.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need support, please first make sure you&#39;re &lt;a href=&#34;https://github.com/sponsors/kevinchalet&#34;&gt;sponsoring the project&lt;/a&gt;. Depending on the tier you selected, you can open a GitHub ticket or send an email to &lt;a href=&#34;mailto:contact@openiddict.com&#34;&gt;contact@openiddict.com&lt;/a&gt; for private support.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can also post your question on &lt;a href=&#34;https://app.gitter.im/#/room/#openiddict_openiddict-core:gitter.im&#34;&gt;Gitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] With OpenIddict 5.x being now generally available, the previous version, OpenIddict 4.x, stops being supported and won&#39;t receive bug fixes or security updates. As such, it is recommended to migrate to OpenIddict 5.x to continue receiving bug and security fixes.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;There are, however, two exceptions to this policy&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;ABP Framework 7.x users will still receive patches for OpenIddict 4.x for as long as ABP Framework 7.x itself is supported by Volosoft&lt;/strong&gt; (typically a year following the release of ABP 8.x), whether they have a commercial ABP license or just use the free packages.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenIddict sponsors who have opted for a $250+/month sponsorship are now offered extended support:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;$250/month sponsors get full support for OpenIddict 4.x until June 18, 2024 (6 months).&lt;/li&gt; &#xA;    &lt;li&gt;$500/month sponsors get full support for OpenIddict 4.x until December 18, 2024 (12 months).&lt;/li&gt; &#xA;    &lt;li&gt;$1,000/month sponsors get full support for OpenIddict 4.x until December 18, 2025 (24 months).&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;If you want to try out the latest features and bug fixes, there is a MyGet feed with nightly builds of OpenIddict. To reference the OpenIddict MyGet feed, &lt;strong&gt;create a &lt;code&gt;NuGet.config&lt;/code&gt; file&lt;/strong&gt; (at the root of your solution):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;&#xA;&amp;lt;configuration&amp;gt;&#xA;  &amp;lt;packageSources&amp;gt;&#xA;    &amp;lt;add key=&#34;nuget&#34; value=&#34;https://api.nuget.org/v3/index.json&#34; /&amp;gt;&#xA;    &amp;lt;add key=&#34;openiddict&#34; value=&#34;https://www.myget.org/F/openiddict/api/v3/index.json&#34; /&amp;gt;&#xA;  &amp;lt;/packageSources&amp;gt;&#xA;&amp;lt;/configuration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenIddict&lt;/strong&gt; is actively maintained by &lt;strong&gt;&lt;a href=&#34;https://github.com/kevinchalet&#34;&gt;K√©vin Chalet&lt;/a&gt;&lt;/strong&gt;. Contributions are welcome and can be submitted using pull requests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Special thanks to &lt;a href=&#34;https://github.com/sponsors/kevinchalet#sponsors&#34;&gt;our sponsors&lt;/a&gt; for their incredible support&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;a href=&#34;https://volosoft.com/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://volosoft.com/assets/logos/volosoft-logo-light.svg&#34;&gt; &#xA;  &lt;img src=&#34;https://volosoft.com/assets/logos/volosoft-logo-dark.svg?sanitize=true&#34; width=&#34;500px&#34; alt=&#34;Volosoft logo&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.openiddictcomponents.com/&#34;&gt; &lt;img src=&#34;https://www.openiddictcomponents.com/media/kz1aymji/openiddict-components-logo-poweredbyrsk.png&#34; width=&#34;400px&#34; alt=&#34;OpenIddict Components Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;!-- sponsors --&gt;&#xA;&lt;a href=&#34;https://github.com/sebastienros&#34;&gt;&lt;img src=&#34;https://github.com/sebastienros.png&#34; width=&#34;60px&#34; alt=&#34;S√©bastien Ros&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/schmitch&#34;&gt;&lt;img src=&#34;https://github.com/schmitch.png&#34; width=&#34;60px&#34; alt=&#34;Schmitt Christian&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/cryo75&#34;&gt;&lt;img src=&#34;https://github.com/cryo75.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/florianwachs&#34;&gt;&lt;img src=&#34;https://github.com/florianwachs.png&#34; width=&#34;60px&#34; alt=&#34;Florian Wachs&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/SebastianStehle&#34;&gt;&lt;img src=&#34;https://github.com/SebastianStehle.png&#34; width=&#34;60px&#34; alt=&#34;Sebastian Stehle&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/communicatie-cockpit&#34;&gt;&lt;img src=&#34;https://github.com/communicatie-cockpit.png&#34; width=&#34;60px&#34; alt=&#34;Communicatie Cockpit&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/KeithT&#34;&gt;&lt;img src=&#34;https://github.com/KeithT.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Skrypt&#34;&gt;&lt;img src=&#34;https://github.com/Skrypt.png&#34; width=&#34;60px&#34; alt=&#34;Jasmin Savard&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ThomasBjallas&#34;&gt;&lt;img src=&#34;https://github.com/ThomasBjallas.png&#34; width=&#34;60px&#34; alt=&#34;Thomas&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jonmartinsson&#34;&gt;&lt;img src=&#34;https://github.com/jonmartinsson.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/DigitalOpsDev&#34;&gt;&lt;img src=&#34;https://github.com/DigitalOpsDev.png&#34; width=&#34;60px&#34; alt=&#34;DigitalOps Co. Ltd.&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/EYERIDE-Fleet-Management-System&#34;&gt;&lt;img src=&#34;https://github.com/EYERIDE-Fleet-Management-System.png&#34; width=&#34;60px&#34; alt=&#34;EYERIDE Fleet Management System&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/hypdeb&#34;&gt;&lt;img src=&#34;https://github.com/hypdeb.png&#34; width=&#34;60px&#34; alt=&#34;Julien Debache&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/StanlyLife&#34;&gt;&lt;img src=&#34;https://github.com/StanlyLife.png&#34; width=&#34;60px&#34; alt=&#34;Stian H√•ve&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ravindUwU&#34;&gt;&lt;img src=&#34;https://github.com/ravindUwU.png&#34; width=&#34;60px&#34; alt=&#34;Ravindu Liyanapathirana&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/dlandi&#34;&gt;&lt;img src=&#34;https://github.com/dlandi.png&#34; width=&#34;60px&#34; alt=&#34;HieronymusBlaze&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ahanoff&#34;&gt;&lt;img src=&#34;https://github.com/ahanoff.png&#34; width=&#34;60px&#34; alt=&#34;Akhan Zhakiyanov&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/blowdart&#34;&gt;&lt;img src=&#34;https://github.com/blowdart.png&#34; width=&#34;60px&#34; alt=&#34;Barry Dorrans&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/devqsrl&#34;&gt;&lt;img src=&#34;https://github.com/devqsrl.png&#34; width=&#34;60px&#34; alt=&#34;DevQ S.r.l.&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/dgxhubbard&#34;&gt;&lt;img src=&#34;https://github.com/dgxhubbard.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/verdie-g&#34;&gt;&lt;img src=&#34;https://github.com/verdie-g.png&#34; width=&#34;60px&#34; alt=&#34;Gr√©goire&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/neil-timmerman&#34;&gt;&lt;img src=&#34;https://github.com/neil-timmerman.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/forterro&#34;&gt;&lt;img src=&#34;https://github.com/forterro.png&#34; width=&#34;60px&#34; alt=&#34;Forterro&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/MarcelMalik&#34;&gt;&lt;img src=&#34;https://github.com/MarcelMalik.png&#34; width=&#34;60px&#34; alt=&#34;Marcel&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/expeo&#34;&gt;&lt;img src=&#34;https://github.com/expeo.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jwillmer&#34;&gt;&lt;img src=&#34;https://github.com/jwillmer.png&#34; width=&#34;60px&#34; alt=&#34;Jens Willmer&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/craaash80&#34;&gt;&lt;img src=&#34;https://github.com/craaash80.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/BlauhausTechnology&#34;&gt;&lt;img src=&#34;https://github.com/BlauhausTechnology.png&#34; width=&#34;60px&#34; alt=&#34;Blauhaus Technology (Pty) Ltd&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/trejjam&#34;&gt;&lt;img src=&#34;https://github.com/trejjam.png&#34; width=&#34;60px&#34; alt=&#34;Jan Trejbal&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/aviationexam&#34;&gt;&lt;img src=&#34;https://github.com/aviationexam.png&#34; width=&#34;60px&#34; alt=&#34;Aviationexam s.r.o.&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/monofor&#34;&gt;&lt;img src=&#34;https://github.com/monofor.png&#34; width=&#34;60px&#34; alt=&#34;Monofor&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ratiodata-se&#34;&gt;&lt;img src=&#34;https://github.com/ratiodata-se.png&#34; width=&#34;60px&#34; alt=&#34;Ratiodata SE&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/DennisvanZetten&#34;&gt;&lt;img src=&#34;https://github.com/DennisvanZetten.png&#34; width=&#34;60px&#34; alt=&#34;Dennis van Zetten&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jeroenbai&#34;&gt;&lt;img src=&#34;https://github.com/jeroenbai.png&#34; width=&#34;60px&#34; alt=&#34;Jeroen&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Elfster&#34;&gt;&lt;img src=&#34;https://github.com/Elfster.png&#34; width=&#34;60px&#34; alt=&#34;Elfster&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Lombiq&#34;&gt;&lt;img src=&#34;https://github.com/Lombiq.png&#34; width=&#34;60px&#34; alt=&#34;Lombiq Technologies Ltd.&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/pureblazor&#34;&gt;&lt;img src=&#34;https://github.com/pureblazor.png&#34; width=&#34;60px&#34; alt=&#34;PureBlazor&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/HabardiT&#34;&gt;&lt;img src=&#34;https://github.com/HabardiT.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/AndrewBabbitt97&#34;&gt;&lt;img src=&#34;https://github.com/AndrewBabbitt97.png&#34; width=&#34;60px&#34; alt=&#34;Andrew Babbitt&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/karlschriek&#34;&gt;&lt;img src=&#34;https://github.com/karlschriek.png&#34; width=&#34;60px&#34; alt=&#34;Karl Schriek&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/softawaregmbh&#34;&gt;&lt;img src=&#34;https://github.com/softawaregmbh.png&#34; width=&#34;60px&#34; alt=&#34;softaware gmbh&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/dulibanarkadiusz&#34;&gt;&lt;img src=&#34;https://github.com/dulibanarkadiusz.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/SingularSystems&#34;&gt;&lt;img src=&#34;https://github.com/SingularSystems.png&#34; width=&#34;60px&#34; alt=&#34;Singular Systems&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/SCP-srl&#34;&gt;&lt;img src=&#34;https://github.com/SCP-srl.png&#34; width=&#34;60px&#34; alt=&#34;SCP-srl&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jacob925&#34;&gt;&lt;img src=&#34;https://github.com/jacob925.png&#34; width=&#34;60px&#34; alt=&#34;Jacob Clark&#34;&gt;&lt;/a&gt;&#xA;&lt;!-- sponsors --&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;strong&gt;Apache License&lt;/strong&gt;. This means that you can use, modify and distribute it freely. See &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0.html&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>