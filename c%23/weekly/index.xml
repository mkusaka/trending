<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-15T01:39:57Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/machinelearning</title>
    <updated>2024-12-15T01:39:57Z</updated>
    <id>tag:github.com,2024-12-15:/dotnet/machinelearning</id>
    <link href="https://github.com/dotnet/machinelearning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ML.NET is an open source and cross-platform machine learning framework for .NET.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Machine Learning for .NET&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet&#34;&gt;ML.NET&lt;/a&gt; is a cross-platform open-source machine learning (ML) framework for .NET.&lt;/p&gt; &#xA;&lt;p&gt;ML.NET allows developers to easily build, train, deploy, and consume custom models in their .NET applications without requiring prior expertise in developing machine learning models or experience with other programming languages like Python or R. The framework provides data loading from files and databases, enables data transformations, and includes many ML algorithms.&lt;/p&gt; &#xA;&lt;p&gt;With ML.NET, you can train models for a &lt;a href=&#34;https://docs.microsoft.com/dotnet/machine-learning/resources/tasks&#34;&gt;variety of scenarios&lt;/a&gt;, like classification, forecasting, and anomaly detection.&lt;/p&gt; &#xA;&lt;p&gt;You can also consume both TensorFlow and ONNX models within ML.NET which makes the framework more extensible and expands the number of supported scenarios.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with machine learning and ML.NET&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn more about the &lt;a href=&#34;https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet&#34;&gt;basics of ML.NET&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build your first ML.NET model by following our &lt;a href=&#34;https://dotnet.microsoft.com/learn/ml-dotnet/get-started-tutorial/intro&#34;&gt;ML.NET Getting Started tutorial&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://docs.microsoft.com/dotnet/machine-learning/&#34;&gt;documentation and tutorials&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/?view=ml-dotnet&#34;&gt;API Reference documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone our &lt;a href=&#34;https://github.com/dotnet/machinelearning-samples&#34;&gt;ML.NET Samples GitHub repo&lt;/a&gt; and run some sample apps.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at some &lt;a href=&#34;https://github.com/dotnet/machinelearning-samples/raw/main/docs/COMMUNITY-SAMPLES.md&#34;&gt;ML.NET Community Samples&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Watch some videos on the &lt;a href=&#34;https://aka.ms/mlnetyoutube&#34;&gt;ML.NET videos YouTube playlist&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at ML.NET&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; to see what the team plans to work on in the next year.&lt;/p&gt; &#xA;&lt;h2&gt;Operating systems and processor architectures supported by ML.NET&lt;/h2&gt; &#xA;&lt;p&gt;ML.NET runs on Windows, Linux, and macOS using .NET Core, or Windows using .NET Framework.&lt;/p&gt; &#xA;&lt;p&gt;ML.NET also runs on ARM64, Apple M1, and Blazor Web Assembly. However, there are some &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/docs/project-docs/platform-limitations.md&#34;&gt;limitations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;64-bit is supported on all platforms. 32-bit is supported on Windows, except for TensorFlow and LightGBM related functionality.&lt;/p&gt; &#xA;&lt;h2&gt;ML.NET NuGet packages status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.ML/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.ML.svg?style=flat&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.ML/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.ML.svg?style=flat&#34; alt=&#34;Latest NuGet Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release notes&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/docs/release-notes&#34;&gt;release notes&lt;/a&gt; to see what&#39;s new. You can also read the &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/category/ml-net/&#34;&gt;blog posts&lt;/a&gt; for more details about each release.&lt;/p&gt; &#xA;&lt;h2&gt;Using ML.NET packages&lt;/h2&gt; &#xA;&lt;p&gt;First, ensure you have installed &lt;a href=&#34;https://www.microsoft.com/net/learn/get-started&#34;&gt;.NET Core 2.1&lt;/a&gt; or later. ML.NET also works on the .NET Framework 4.6.1 or later, but 4.7.2 or later is recommended.&lt;/p&gt; &#xA;&lt;p&gt;Once you have an app, you can install the ML.NET NuGet package from the .NET Core CLI using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet add package Microsoft.ML&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from the NuGet Package Manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Package Microsoft.ML&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can add the Microsoft.ML package from within Visual Studio&#39;s NuGet package manager or via &lt;a href=&#34;https://github.com/fsprojects/Paket&#34;&gt;Paket&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Daily NuGet builds of the project are also available in our Azure DevOps feed:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json&#34;&gt;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Building ML.NET (For contributors building ML.NET open source code)&lt;/h2&gt; &#xA;&lt;p&gt;To build ML.NET from source please visit our &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/docs/project-docs/developer-guide.md&#34;&gt;developer guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/dotnet/machinelearning&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dotnet/machinelearning/branch/main/graph/badge.svg?flag=production&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Debug&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Release&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;CentOS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Centos_x64_Net60&amp;amp;configuration=Centos_x64_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Centos_x64_Net60&amp;amp;configuration=Centos_x64_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Ubuntu_x64_Net60&amp;amp;configuration=Ubuntu_x64_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Ubuntu_x64_Net60&amp;amp;configuration=Ubuntu_x64_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=MacOS_x64_Net60&amp;amp;configuration=MacOS_x64_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=MacOS_x64_Net60&amp;amp;configuration=MacOS_x64_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Windows x64&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_Net60&amp;amp;configuration=Windows_x64_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_Net60&amp;amp;configuration=Windows_x64_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Windows FullFramework&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_NetFx461&amp;amp;configuration=Windows_x64_NetFx461%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_NetFx461&amp;amp;configuration=Windows_x64_NetFx461%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Windows x86&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x86_Net60&amp;amp;configuration=Windows_x86_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x86_Net60&amp;amp;configuration=Windows_x86_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Windows NetCore3.1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_Net60&amp;amp;configuration=Windows_x64_Net60%20Debug_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=104&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=main&amp;amp;jobName=Windows_x64_Net60&amp;amp;configuration=Windows_x64_Net60%20Release_Build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Release process and versioning&lt;/h2&gt; &#xA;&lt;p&gt;Major releases of ML.NET are shipped once a year with the major .NET releases, starting with ML.NET 1.7 in November 2021 with .NET 6, then ML.NET 2.0 with .NET 7, etc. We will maintain release branches to optionally service ML.NET with bug fixes and/or minor features on the same cadence as .NET servicing.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/docs/release-notes&#34;&gt;Release Notes&lt;/a&gt; to see all of the past ML.NET releases.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Please review our &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our community on &lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tune into the &lt;a href=&#34;https://dotnet.microsoft.com/live/community-standup&#34;&gt;.NET Machine Learning Community Standup&lt;/a&gt; every other Wednesday at 10AM Pacific Time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&#34;https://contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code examples&lt;/h2&gt; &#xA;&lt;p&gt;Here is a code snippet for training a model to predict sentiment from text samples. You can find complete samples in the &lt;a href=&#34;https://github.com/dotnet/machinelearning-samples&#34;&gt;samples repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;var dataPath = &#34;sentiment.csv&#34;;&#xA;var mlContext = new MLContext();&#xA;var loader = mlContext.Data.CreateTextLoader(new[]&#xA;    {&#xA;        new TextLoader.Column(&#34;SentimentText&#34;, DataKind.String, 1),&#xA;        new TextLoader.Column(&#34;Label&#34;, DataKind.Boolean, 0),&#xA;    },&#xA;    hasHeader: true,&#xA;    separatorChar: &#39;,&#39;);&#xA;var data = loader.Load(dataPath);&#xA;var learningPipeline = mlContext.Transforms.Text.FeaturizeText(&#34;Features&#34;, &#34;SentimentText&#34;)&#xA;        .Append(mlContext.BinaryClassification.Trainers.FastTree());&#xA;var model = learningPipeline.Fit(data);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now from the model we can make inferences (predictions):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;var predictionEngine = mlContext.Model.CreatePredictionEngine&amp;lt;SentimentData, SentimentPrediction&amp;gt;(model);&#xA;var prediction = predictionEngine.Predict(new SentimentData&#xA;{&#xA;    SentimentText = &#34;Today is a great day!&#34;&#xA;});&#xA;Console.WriteLine(&#34;prediction: &#34; + prediction.Prediction);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ML.NET is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/machinelearning/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;, and it is free to use commercially.&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;ML.NET is a part of the &lt;a href=&#34;https://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mcmonkeyprojects/SwarmUI</title>
    <updated>2024-12-15T01:39:57Z</updated>
    <id>tag:github.com,2024-12-15:/mcmonkeyprojects/SwarmUI</id>
    <link href="https://github.com/mcmonkeyprojects/SwarmUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SwarmUI (formerly StableSwarmUI), A Modular Stable Diffusion Web-User-Interface, with an emphasis on making powertools easily accessible, high performance, and extensibility.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwarmUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;SwarmUI v0.9.4 Beta&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Formerly known as StableSwarmUI.&lt;/p&gt; &#xA;&lt;p&gt;A Modular AI Image Generation Web-User-Interface, with an emphasis on making powertools easily accessible, high performance, and extensibility. Supports Stable Diffusion, Flux, etc. AI image models, with plans to support AI video, audio, and more in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/.github/images/swarmui.jpg&#34; alt=&#34;ui-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.gg/q2y38cqjNw&#34;&gt;Discord&lt;/a&gt; to discuss the project, get support, see announcements, etc.&lt;/p&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://github.com/mcmonkeyprojects/SwarmUI/discussions/1&#34;&gt;Feature Announcements Thread&lt;/a&gt; for updates on new features.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;This project is in &lt;strong&gt;Beta&lt;/strong&gt; status. This means for most tasks, Swarm has excellent tooling available to you, but there is much more planned. Swarm is recommended as an ideal UI for most users, beginners and pros alike. There are still some things to be worked out.&lt;/p&gt; &#xA;&lt;p&gt;Beginner users will love Swarm&#39;s primary Generate tab interface, making it easy to generate anything with a variety of powerful features. Advanced users may favor the Comfy Workflow tab to get the unrestricted raw graph, but will still have reason to come back to the Generate tab for convenience features (image editor, auto-workflow-generation, etc) and powertools (eg Grid Generator).&lt;/p&gt; &#xA;&lt;p&gt;Those interested in helping push Swarm from Beta to a Full ready-for-anything perfected Release status are welcome to submit PRs (read the &lt;a href=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; document first), and you can contact us here on GitHub or on &lt;a href=&#34;https://discord.gg/q2y38cqjNw&#34;&gt;Discord&lt;/a&gt;. I highly recommend reaching out to ask about plans for a feature before PRing it. There may already be specific plans or even a work in progress.&lt;/p&gt; &#xA;&lt;p&gt;Key feature targets not yet implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better mobile browser support&lt;/li&gt; &#xA; &lt;li&gt;full detail &#34;Current Model&#34; display in UI, separate from the model selector (probably as a tab within the batch sidebar?) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;And a way to dynamically shift tabs around between spots for convenience / layout customization&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;LLM-assisted prompting&lt;/li&gt; &#xA; &lt;li&gt;convenient direct-distribution of Swarm as a program (Electron app?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Try It On Google Colab or Runpod&lt;/h1&gt; &#xA;&lt;h3&gt;Google Colab&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Google Colab does not necessarily allow remote WebUIs, particularly for free accounts, use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;Colab link if you want to try Swarm: &lt;a href=&#34;https://colab.research.google.com/github/mcmonkeyprojects/SwarmUI/blob/master/colab/colab-notebook.ipynb&#34;&gt;https://colab.research.google.com/github/mcmonkeyprojects/SwarmUI/blob/master/colab/colab-notebook.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Runpod&lt;/h3&gt; &#xA;&lt;p&gt;Runpod template (note: maintained by third party contributor &lt;a href=&#34;https://github.com/nerdylive123&#34;&gt;nerdylive123&lt;/a&gt;): &lt;a href=&#34;https://runpod.io/console/deploy?template=u7mlkrmxq3&amp;amp;ref=c6jd6jj0&#34;&gt;https://runpod.io/console/deploy?template=u7mlkrmxq3&amp;amp;ref=c6jd6jj0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note it may take several minutes to start up the first time. Check the container logs to see setup progress. Check the template &lt;code&gt;?&lt;/code&gt; info for hints on how to use.&lt;/p&gt; &#xA;&lt;h1&gt;Installing on Windows&lt;/h1&gt; &#xA;&lt;p&gt;Note: if you&#39;re on Windows 10, you may need to manually install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&#34;&gt;DotNET 8 SDK&lt;/a&gt; first. (Windows 11 this is automated).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.6.5-Beta/install-windows.bat&#34;&gt;The Install-Windows.bat file&lt;/a&gt;, store it somewhere you want to install at (not &lt;code&gt;Program Files&lt;/code&gt;), and run it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It should open a command prompt and install itself.&lt;/li&gt; &#xA;   &lt;li&gt;If it closes without going further, try running it again, it sometimes needs to run twice. (TODO: Fix that)&lt;/li&gt; &#xA;   &lt;li&gt;It will place an icon on your desktop that you can use to re-launch the server at any time.&lt;/li&gt; &#xA;   &lt;li&gt;When the installer completes, it will automatically launch the SwarmUI server, and open a browser window to the install page.&lt;/li&gt; &#xA;   &lt;li&gt;Follow the install instructions on the page.&lt;/li&gt; &#xA;   &lt;li&gt;After you submit, be patient, some of the install processing take a few minutes (downloading models and etc).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(TODO): Even easier self-contained pre-installer, a &lt;code&gt;.msi&lt;/code&gt; or &lt;code&gt;.exe&lt;/code&gt; that provides a general install screen and lets you pick folder and all.&lt;/p&gt; &#xA;&lt;h1&gt;Alternate Manual Windows Install&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install git from &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;https://git-scm.com/download/win&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install DotNET 8 SDK from &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&#34;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&lt;/a&gt; (Make sure to get the SDK x64 for Windows)&lt;/li&gt; &#xA; &lt;li&gt;open a terminal to the folder you want swarm in and run &lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;open the folder and run &lt;code&gt;launch-windows.bat&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installing on Linux&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; via your OS package manager if they are not already installed (make sure to include &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;venv&lt;/code&gt; on distros that do not include them in python directly)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example, on recent Ubuntu versions, &lt;code&gt;sudo apt install git python3-pip python3-venv&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download &lt;a href=&#34;https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.6.5-Beta/install-linux.sh&#34;&gt;the install-linux.sh file&lt;/a&gt;, store it somewhere you want to install at, and run it&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you like terminals, you can open a terminal to the folder and run the following commands: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;wget https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.6.5-Beta/install-linux.sh -O install-linux.sh&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;chmod +x install-linux.sh&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;./install-linux.sh&lt;/code&gt; script, it will install everything for you and eventually open the webpage in your browser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the install instructions on-page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can at any time in the future run the &lt;code&gt;launch-linux.sh&lt;/code&gt; script to re-launch Swarm.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the page doesn&#39;t open itself, you can manually open &lt;code&gt;http://localhost:7801&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Alternate Manual Linux Install&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; via your OS package manager if they are not already installed (make sure to include &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;venv&lt;/code&gt; on distros that do not include them in python directly) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example, on recent Ubuntu versions, &lt;code&gt;sudo apt install git python3-pip python3-venv&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You&#39;ll want Python 3.11. Things should also work fine with 3.10 or 3.12. Do not use 3.13.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install DotNET 8 using the instructions at &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&#34;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&lt;/a&gt; (you need &lt;code&gt;dotnet-sdk-8.0&lt;/code&gt;, as that includes all relevant sub-packages) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Some users &lt;a href=&#34;https://github.com/Stability-AI/StableSwarmUI/pull/6&#34;&gt;have said&lt;/a&gt; that certain Linux distros expect &lt;code&gt;aspnet-runtime&lt;/code&gt; to be installed separately&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open a shell terminal and &lt;code&gt;cd&lt;/code&gt; to a directory you want to install into&lt;/li&gt; &#xA; &lt;li&gt;Run shell commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;cd &lt;code&gt;SwarmUI&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;./launch-linux.sh&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;or if running on a headless server, &lt;code&gt;./launch-linux.sh --launch_mode none --host 0.0.0.0&lt;/code&gt; and/or swap host for &lt;a href=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Advanced%20Usage.md&#34;&gt;cloudflared&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;open &lt;code&gt;http://localhost:7801/Install&lt;/code&gt; (if it doesn&#39;t launch itself)&lt;/li&gt; &#xA; &lt;li&gt;Follow the install instructions on-page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(TODO): Maybe outlink a dedicated document with per-distro details and whatever. Maybe also make a one-click installer for Linux?&lt;/p&gt; &#xA;&lt;h1&gt;Installing on Mac&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can only run SwarmUI on Mac computers with M-Series Apple silicon processors (eg M1, M2, ...).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Terminal.&lt;/li&gt; &#xA; &lt;li&gt;Ensure your &lt;code&gt;brew&lt;/code&gt; packages are updated with &lt;code&gt;brew update&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Verify your &lt;code&gt;brew&lt;/code&gt; installation with &lt;code&gt;brew doctor&lt;/code&gt;. You should not see any error in the command output.&lt;/li&gt; &#xA; &lt;li&gt;Install .NET for macOS: &lt;code&gt;brew install dotnet&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t have Python, install it: &lt;code&gt;brew install python@3.11&lt;/code&gt; and &lt;code&gt;brew install virtualenv&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Python 3.11, 3.10, 3.12 are all fine. 3.13 is not, do not use 3.13.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Change the directory (&lt;code&gt;cd&lt;/code&gt;) to the folder where you want to install SwarmUI.&lt;/li&gt; &#xA; &lt;li&gt;Clone the SwarmUI GitHub repository: &lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd SwarmUI&lt;/code&gt; and run the installation script: &lt;code&gt;./launch-macos.sh&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The installation starts now and downloads the Stable Diffusion models from the internet. Depending on your internet connection, this may take several minutes. Wait for your web browser to open the SwarmUI window.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;During the SwarmUI installation, you are prompted for the type of backend you want to use. For Mac computers with M1 or M2, you can safely choose the ComfyUI backend and choose the Stable Diffusion XL Base and Refiner models in the Download Models screen.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing With Docker&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Docker.md&#34;&gt;Docs/Docker.md&lt;/a&gt; for detailed instructions on using SwarmUI in Docker.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/README.md&#34;&gt;the documentation folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Motivations&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;Swarm&#34; name is in reference to the original key function of the UI: enabling a &#39;swarm&#39; of GPUs to all generate images for the same user at once (especially for large grid generations). This is just the feature that inspired the name and not the end all of what Swarm is.&lt;/p&gt; &#xA;&lt;p&gt;The overall goal of SwarmUI is to a be full-featured one-stop-shop for all things Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Motivations.md&#34;&gt;the motivations document&lt;/a&gt; for motivations on technical choices.&lt;/p&gt; &#xA;&lt;h1&gt;Legal&lt;/h1&gt; &#xA;&lt;p&gt;This project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;embeds a copy of &lt;a href=&#34;https://7-zip.org/download.html&#34;&gt;7-zip&lt;/a&gt; (LGPL).&lt;/li&gt; &#xA; &lt;li&gt;has the ability to auto-install &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUI&lt;/a&gt; (GPL).&lt;/li&gt; &#xA; &lt;li&gt;has the option to use as a backend &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt; (AGPL).&lt;/li&gt; &#xA; &lt;li&gt;can automatically install &lt;a href=&#34;https://github.com/christophschuhmann/improved-aesthetic-predictor&#34;&gt;christophschuhmann/improved-aesthetic-predictor&lt;/a&gt; (Apache2) and &lt;a href=&#34;https://github.com/yuvalkirstain/PickScore&#34;&gt;yuvalkirstain/PickScore&lt;/a&gt; (MIT).&lt;/li&gt; &#xA; &lt;li&gt;can automatically install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;git-for-windows&lt;/a&gt; (GPLv2).&lt;/li&gt; &#xA; &lt;li&gt;can automatically install MIT/BSD/Apache2/PythonSoftwareFoundation pip packages: &lt;a href=&#34;https://pypi.org/project/spandrel/&#34;&gt;spandrel&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/dill/&#34;&gt;dill&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/imageio-ffmpeg/&#34;&gt;imageio-ffmpeg&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/opencv-python-headless/&#34;&gt;opencv-python-headless&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/matplotlib/&#34;&gt;matplotlib&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/rembg/&#34;&gt;rembg&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/kornia/&#34;&gt;kornia&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/Cython/&#34;&gt;Cython&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;can automatically install &lt;a href=&#34;https://github.com/ultralytics/ultralytics&#34;&gt;ultralytics&lt;/a&gt; (AGPL) for &lt;code&gt;YOLOv8&lt;/code&gt; face detection (ie &lt;code&gt;SwarmYoloDetection&lt;/code&gt; node or &lt;code&gt;&amp;lt;segment:yolo-...&amp;gt;&lt;/code&gt; syntax usage may become subject to AGPL terms),&lt;/li&gt; &#xA; &lt;li&gt;can automatically install &lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;insightface&lt;/a&gt; (MIT) for &lt;code&gt;IP Adapter - Face&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;uses &lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json&#34;&gt;JSON.NET&lt;/a&gt; (MIT), &lt;a href=&#34;https://github.com/FreneticLLC/FreneticUtilities&#34;&gt;FreneticUtilities&lt;/a&gt; (MIT), &lt;a href=&#34;https://github.com/mbdavid/LiteDB&#34;&gt;LiteDB&lt;/a&gt; (MIT), &lt;a href=&#34;https://github.com/SixLabors/ImageSharp/&#34;&gt;ImageSharp&lt;/a&gt; (Apache2 under open-source Split License)&lt;/li&gt; &#xA; &lt;li&gt;embeds copies of web assets from &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;BootStrap&lt;/a&gt; (MIT), &lt;a href=&#34;https://select2.org/&#34;&gt;Select2&lt;/a&gt; (MIT), &lt;a href=&#34;https://jquery.com/&#34;&gt;JQuery&lt;/a&gt; (MIT), &lt;a href=&#34;https://github.com/MikeKovarik/exifr&#34;&gt;exifr&lt;/a&gt; (MIT).&lt;/li&gt; &#xA; &lt;li&gt;can be used to install some custom node packs, which have individual license notices for any non-pure-FOSS licenses before install.&lt;/li&gt; &#xA; &lt;li&gt;supports user-built extensions which may have their own licenses or legal conditions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SwarmUI itself is under the MIT license, however some usages may be affected by the GPL variant licenses of connected projects list above, and note that any models used have their own licenses.&lt;/p&gt; &#xA;&lt;h3&gt;Previous License&lt;/h3&gt; &#xA;&lt;p&gt;(For updates prior to June 2024)&lt;/p&gt; &#xA;&lt;p&gt;The MIT License (MIT) Copyright (c) 2024 Stability AI&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2024 Alex &#34;mcmonkey&#34; Goodwin&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>