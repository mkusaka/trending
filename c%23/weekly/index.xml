<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-12T01:44:54Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>roflmuffin/CounterStrikeSharp</title>
    <updated>2023-11-12T01:44:54Z</updated>
    <id>tag:github.com,2023-11-12:/roflmuffin/CounterStrikeSharp</id>
    <link href="https://github.com/roflmuffin/CounterStrikeSharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CounterStrikeSharp allows you to write server plugins in C# for Counter-Strike 2/Source2/CS2&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CounterStrikeSharp&lt;/h1&gt; &#xA;&lt;p&gt;CounterStrikeSharp is a server side modding framework for Counter-Strike: Global Offensive. This project attempts to implement a .NET Core scripting layer on top of a Metamod Source Plugin, allowing developers to create plugins that interact with the game server in a modern language (C#) to facilitate the creation of maintainable and testable code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/X7r3PmuYKq&#34;&gt;Come and join our Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;This project is an ongoing migration of a previous project (titled &lt;a href=&#34;https://github.com/roflmuffin/vspdotnet&#34;&gt;VSP.NET&lt;/a&gt;) whereby a scripting layer was added to a Valve Server Plugin for CSGO.&lt;/p&gt; &#xA;&lt;p&gt;Due to the architectural changes of CS2, the plugin is being rebuilt on the ground up, to support Linux 64-bit, something which was previously impossible.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;As a result, there are a few key philosophies and trade-offs that drive the project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only 64 bit is supported. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;.NET only supports x64 on Linux; CSGO previously only supported 32 bit servers, but CS2 supports 64 bit on Linux.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supporting both platforms is a lot of work for 1 person, so there are no real plans to support Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest build from &lt;a href=&#34;https://github.com/roflmuffin/CounterStrikeSharp/releases&#34;&gt;here&lt;/a&gt;. (Download the with runtime version if this is your first time installing).&lt;/p&gt; &#xA;&lt;p&gt;Detailed installation instructions can be found in the &lt;a href=&#34;https://docs.cssharp.dev/guides/getting-started/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What works?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;(Note, these were features in the previous VSP.NET project, but have not been implemented yet in this project)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;These features are the core of the platform and work pretty well/have a low risk of causing issues.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Console Commands, Server Commands (e.g. css_mycommand)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chat Commands with &lt;code&gt;!&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; prefixes (e.g. !mycommand)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;(In Progress)&lt;/strong&gt; Console Variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Game Event Handlers &amp;amp; Custom Events (e.g. player_death) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Basic event value get/set (string, bool, int32, float)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Complex event values get/set (ehandle, pawn, player controller)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Game Tick Based Timers (e.g. repeating map timers) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Timer Flags (REPEAT, STOP_ON_MAPCHANGE)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Listeners (e.g. client connected, disconnected, map start etc.) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Client Listeners (e.g. connect, disconnect, put in server)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OnMapStart&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OnTick&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Server Information (current map, game time, tick rate, model precaching)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Schema System Access (access player values like current weapon, money, location etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/X7r3PmuYKq&#34;&gt;Join the Discord&lt;/a&gt;: Ask questions, provide suggestions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cssharp.dev/&#34;&gt;Read the docs&lt;/a&gt;: Getting started guide, hello world plugin example&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roflmuffin/CounterStrikeSharp/issues&#34;&gt;Issue tracker&lt;/a&gt;: Raise any issues here&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roflmuffin/CounterStrikeSharp/actions&#34;&gt;Builds&lt;/a&gt;: Download latest unstable dev snapshot&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cssharp.dev/guides/getting-started/&#34;&gt;Install Docs&lt;/a&gt;: Installation instructions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/roflmuffin/CounterStrikeSharp/main/managed/TestPlugin/TestPlugin.cs&#34;&gt;Example Plugin&lt;/a&gt;: Test plugin with basic functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can view the &lt;a href=&#34;https://raw.githubusercontent.com/roflmuffin/CounterStrikeSharp/main/examples/WarcraftPlugin&#34;&gt;example Warcraft plugin&lt;/a&gt; migrated from the previous VSP.NET project to give you an idea of the kind of power this scripting runtime is capable of. This plugin shows how you can hook events, create commands, use third party libraries (SQLite) and do basic entity manipulation.&lt;/p&gt; &#xA;&lt;h3&gt;Basic Example with Game Event &amp;amp; Console Commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using CounterStrikeSharp.API.Core;&#xA;&#xA;namespace HelloWorldPlugin;&#xA;&#xA;public class HelloWorldPlugin : BasePlugin&#xA;{&#xA;    public override string ModuleName =&amp;gt; &#34;Hello World Plugin&#34;;&#xA;&#xA;    public override string ModuleVersion =&amp;gt; &#34;0.0.1&#34;;&#xA;&#xA;    public override void Load(bool hotReload)&#xA;    {&#xA;        Console.WriteLine(&#34;Hello World!&#34;);&#xA;    }&#xA;&#xA;    [GameEventHandler]&#xA;    public HookResult OnPlayerConnect(EventPlayerConnect @event, GameEventInfo info)&#xA;    {&#xA;        // Userid will give you a reference to a CCSPlayerController class&#xA;        Log($&#34;Player {@event.Userid.PlayerName} has connected!&#34;);&#xA;&#xA;        return HookResult.Continue;&#xA;    }&#xA;&#xA;    [ConsoleCommand(&#34;issue_warning&#34;, &#34;Issue warning to player&#34;)]&#xA;    public void OnCommand(CCSPlayerController? player, CommandInfo command)&#xA;    {&#xA;        Log(&#34;You shouldn&#39;t be doing that!&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;A lot of code has been borrowed from SourceMod as well as Source.Python, two pioneering source engine plugin frameworks which this project lends a lot of its credit to. I&#39;ve also used the scripting context &amp;amp; native system that is implemented in FiveM for GTA5. Also shoutout to the &lt;a href=&#34;https://github.com/Source2ZE/CS2Fixes&#34;&gt;CS2Fixes&lt;/a&gt; project for providing good reverse-engineering information so shortly after CS2 release.&lt;/p&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;p&gt;Building requires CMake on Linux.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/roflmuffin/counterstrikesharp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Init and update submodules&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make build folder&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate CMake Build Files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake --build . --config Debug&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>