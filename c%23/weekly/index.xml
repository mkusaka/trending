<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:40:59Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/csharplang</title>
    <updated>2022-10-16T01:40:59Z</updated>
    <id>tag:github.com,2022-10-16:/dotnet/csharplang</id>
    <link href="https://github.com/dotnet/csharplang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official repo for the design of the C# programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;C# Language Design&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/dotnet/csharplang?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/dotnet/csharplang.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/dotnet/csharplang&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/dotnet-discord-csharp&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/143867839282020352/widget.png&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the official repo for C# language design. This is where new C# language features are developed, adopted and specified.&lt;/p&gt; &#xA;&lt;p&gt;C# is designed by the C# Language Design Team (LDT) in close coordination with the &lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;Roslyn&lt;/a&gt; project, which implements the language.&lt;/p&gt; &#xA;&lt;p&gt;You can find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Active C# language feature proposals in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/proposals&#34;&gt;proposals folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Notes from C# language design meetings in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/meetings&#34;&gt;meetings folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full C# 6 language specification (draft) in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/spec&#34;&gt;spec folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Summary of the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/Language-Version-History.md&#34;&gt;language version history here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you discover bugs or deficiencies in the above, please leave an issue to raise them, or even better: a pull request to fix them.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;em&gt;new feature proposals&lt;/em&gt;, however, please raise them for &lt;a href=&#34;https://github.com/dotnet/csharplang/labels/Discussion&#34;&gt;discussion&lt;/a&gt;, and &lt;em&gt;only&lt;/em&gt; submit a proposal as a pull request if invited to do so by a member of the Language Design Team (a &#34;champion&#34;).&lt;/p&gt; &#xA;&lt;h2&gt;Discussions&lt;/h2&gt; &#xA;&lt;p&gt;Debate pertaining to language features takes place in the form of &lt;a href=&#34;https://github.com/dotnet/csharplang/discussions&#34;&gt;Discussions&lt;/a&gt; in this repo.&lt;/p&gt; &#xA;&lt;p&gt;If you want to suggest a feature, discuss current design notes or proposals, etc., please &lt;a href=&#34;https://github.com/dotnet/csharplang/discussions/new&#34;&gt;open a new Discussion topic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Discussions that are short and stay on topic are much more likely to be read. If you leave comment number fifty, chances are that only a few people will read it. To make discussions easier to navigate and benefit from, please observe a few rules of thumb:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discussion should be relevant to C# language design. If they are not, they will be summarily closed.&lt;/li&gt; &#xA; &lt;li&gt;Choose a descriptive topic that clearly communicates the scope of discussion.&lt;/li&gt; &#xA; &lt;li&gt;Stick to the topic of the discussion. If a comment is tangential, or goes into detail on a subtopic, start a new discussion and link back.&lt;/li&gt; &#xA; &lt;li&gt;Is your comment useful for others to read, or can it be adequately expressed with an emoji reaction to an existing comment?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Language proposals which prevent specific syntax from occurring can be achieved with a &lt;a href=&#34;https://docs.microsoft.com/visualstudio/extensibility/getting-started-with-roslyn-analyzers&#34;&gt;Roslyn analyzer&lt;/a&gt;. Proposals that only make existing syntax optionally illegal will be rejected by the language design committee to prevent increased language complexity.&lt;/p&gt; &#xA;&lt;h2&gt;Proposals&lt;/h2&gt; &#xA;&lt;p&gt;Once you have a fully fleshed out proposal describing a new language feature in syntactic and semantic detail, please &lt;a href=&#34;https://github.com/dotnet/csharplang/issues/new/choose&#34;&gt;open an issue for it&lt;/a&gt;, and it will be labeled as a &lt;a href=&#34;https://github.com/dotnet/csharplang/issues?q=is%3Aopen+is%3Aissue+label%3AProposal&#34;&gt;Proposal&lt;/a&gt;. The comment thread on the issue can be used to hash out or briefly discuss details of the proposal, as well as pros and cons of adopting it into C#. If an issue does not meet the bar of being a full proposal, we may move it to a discussion, so that it can be &#34;baked&#34; further. Specific open issues or more expansive discussion with a proposal will often warrant opening a side discussion rather than cluttering the comment section on the issue.&lt;/p&gt; &#xA;&lt;p&gt;When a member of the C# LDM finds that a proposal merits discussion, they can &lt;a href=&#34;https://github.com/dotnet/csharplang/issues?q=is%3Aopen+is%3Aissue+label%3A%22Proposal+champion%22&#34;&gt;Champion&lt;/a&gt; it, which means that they will bring it to the C# Language Design Meeting. If the LDM decides to work on adopting the feature, the proposer, the champion and others can collaborate on adding it as a document to the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/proposals&#34;&gt;Proposals&lt;/a&gt; folder, where its evolution can be tracked over time.&lt;/p&gt; &#xA;&lt;h2&gt;Design Process&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/proposals&#34;&gt;Proposals&lt;/a&gt; evolve as a result of decisions in &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/meetings&#34;&gt;Language Design Meetings&lt;/a&gt;, which are informed by &lt;a href=&#34;https://github.com/dotnet/csharplang/discussions&#34;&gt;discussions&lt;/a&gt;, experiments, and offline design work.&lt;/p&gt; &#xA;&lt;p&gt;In many cases it will be necessary to implement and share a prototype of a feature in order to land on the right design, and ultimately decide whether to adopt the feature. Prototypes help discover both implementation and usability issues of a feature. A prototype should be implemented in a fork of the &lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;Roslyn repo&lt;/a&gt; and meet the following bar:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parsing (if applicable) should be resilient to experimentation: typing should not cause crashes.&lt;/li&gt; &#xA; &lt;li&gt;Include minimal tests demonstrating the feature at work end-to-end.&lt;/li&gt; &#xA; &lt;li&gt;Include minimal IDE support (keyword coloring, formatting, completion).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once approved, a feature should be fully implemented in &lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;Roslyn&lt;/a&gt;, and fully specified in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/spec&#34;&gt;language specification&lt;/a&gt;, whereupon the proposal is moved into the appropriate folder for a completed feature, e.g. &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/proposals/csharp-7.1&#34;&gt;C# 7.1 proposals&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: An active proposal is under active consideration for inclusion into a future version of the C# programming language but is not in any way guaranteed to ultimately be included in the next or any version of the language. A proposal may be postponed or rejected at any time during any phase of the above process based on feedback from the design team, community, code reviewers, or testing.&lt;/p&gt; &#xA;&lt;h3&gt;Milestones&lt;/h3&gt; &#xA;&lt;p&gt;We have a few different milestones for issues on the repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang/milestone/19&#34;&gt;Working Set&lt;/a&gt; is the set of championed proposals that are currently being actively worked on. Not everything in this milestone will make the next version of C#, but it will get design time during the upcoming release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang/milestone/10&#34;&gt;Backlog&lt;/a&gt; is the set of championed proposals that have been triaged, but are not being actively worked on. While discussion and ideas from the community are welcomed on these proposals, the cost of the design work and implementation review on these features are too high for us to consider community implementation until we are ready for it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang/milestone/14&#34;&gt;Any Time&lt;/a&gt; is the set of championed proposals that have been triaged, but are not being actively worked on and are open to community implementation. Issues in this can be in one of 2 states: needs approved specification, and needs implementation. Those that need a specification still need to be presented during LDM for approval of the spec, but we are willing to take the time to do so at our earliest convenience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang/milestone/13&#34;&gt;Likely Never&lt;/a&gt; is the set of proposals that the LDM has rejected from the language. Without strong need or community feedback, these proposals will not be considered in the future.&lt;/li&gt; &#xA; &lt;li&gt;Numbered milestones are the set of features that have been implemented for that particular language version. For closed milestones, these are the set of things that shipped with that release. For open milestones, features can be potentially pulled later if we discover compatibility or other issues as we near release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Language Design Meetings&lt;/h2&gt; &#xA;&lt;p&gt;Language Design Meetings (LDMs) are held by the LDT and occasional invited guests, and are documented in Design Meeting Notes in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/meetings&#34;&gt;meetings&lt;/a&gt; folder, organized in folders by year. The lifetime of a design meeting note is described in &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/meetings/README.md&#34;&gt;meetings/README.md&lt;/a&gt;. LDMs are where decisions about future C# versions are made, including which proposals to work on, how to evolve the proposals, and whether and when to adopt them.&lt;/p&gt; &#xA;&lt;h2&gt;Language Specification&lt;/h2&gt; &#xA;&lt;p&gt;It is our plan to move the C# Language Specification into Markdown, and draft it in the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/csharplang/main/spec&#34;&gt;spec&lt;/a&gt; folder. The spec drafts will eventually be standardized and published by ECMA. The folder currently contains an unofficial Markdown version of the C# 6.0 specification for convenience.&lt;/p&gt; &#xA;&lt;h2&gt;Implementation&lt;/h2&gt; &#xA;&lt;p&gt;The reference implementation of the C# language can be found in the &lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;Roslyn repository&lt;/a&gt;. This repository also tracks the &lt;a href=&#34;https://github.com/dotnet/roslyn/raw/master/docs/Language%20Feature%20Status.md&#34;&gt;implementation status for language features&lt;/a&gt;. Until recently, that was also where language design artifacts were tracked. Please allow a little time as we move over active proposals.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>restsharp/RestSharp</title>
    <updated>2022-10-16T01:40:59Z</updated>
    <id>tag:github.com,2022-10-16:/restsharp/RestSharp</id>
    <link href="https://github.com/restsharp/RestSharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple REST and HTTP API Client for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RestSharp - Simple .NET REST Client&lt;/h1&gt; &#xA;&lt;p&gt;RestSharp is a lightweight HTTP client library. It&#39;s a wrapper around &lt;code&gt;HttpClient&lt;/code&gt;, not a full-fledged client on its own.&lt;/p&gt; &#xA;&lt;p&gt;What RestSharp adds to &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default parameters of any kind, not just headers&lt;/li&gt; &#xA; &lt;li&gt;Add a parameter of any kind to requests, like query, URL segment, header, cookie, or body&lt;/li&gt; &#xA; &lt;li&gt;Multiple ways to add a request body, including JSON, XML, and form data&lt;/li&gt; &#xA; &lt;li&gt;Built-in serialization and deserilization of JSON and XML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RestSharp vNext&lt;/h2&gt; &#xA;&lt;p&gt;Finally, RestSharp has moved to &lt;code&gt;HttpClient&lt;/code&gt;. We also deprecated the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SimpleJson in favour of &lt;code&gt;System.Text.Json.JsonSerialzer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IRestClient&lt;/code&gt;, &lt;code&gt;IRestRequest&lt;/code&gt;, and &lt;code&gt;IRestResponse&lt;/code&gt; in favour of implementing classes&lt;/li&gt; &#xA; &lt;li&gt;Everything &lt;code&gt;Http&lt;/code&gt; and &lt;code&gt;IHttp&lt;/code&gt; as those are just wrappers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most of the client and some of the request options are now in &lt;code&gt;RestClientOptions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://restsharp.dev/v107&#34;&gt;v107+ docs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;span&gt;💥&lt;/span&gt; Interfaces rage!&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Before you start to rage in public about interfaces that are useful for unit-testing HTTP calls,&lt;br&gt;please read &lt;a href=&#34;https://restsharp.dev/v107/#mocking&#34;&gt;this page&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Builds and Packages&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/restsharp/RestSharp/actions?query=workflow%3A%22Build+and+deploy%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/restsharp/RestSharp/Build%20and%20deploy&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Nuget&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;downloads&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/RestSharp&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;preview&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;RestSharp is an open-source project with a single maintainer. Do not expect your issue to be resolved unless it concerns a large group of RestSharp users. The best way to resolve your issue is to fix it yourself. Fork the repository and submit a pull request. You can also motivate the maintainer by sponsoring this project.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute&lt;/h3&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/restsharp/RestSharp/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on the process for reporting issues and submitting pull requests.&lt;/p&gt; &#xA;&lt;h3&gt;Get help&lt;/h3&gt; &#xA;&lt;p&gt;Read the docs: &lt;a href=&#34;https://restsharp.dev&#34;&gt;Official Site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ask a question on StackOverflow with the tag &lt;code&gt;restsharp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find RestSharp on Twitter: &lt;a href=&#34;https://twitter.com/RestSharp&#34;&gt;@RestSharp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;.NET Foundation&lt;/h3&gt; &#xA;&lt;p&gt;This project is supported by the &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/restsharp/RestSharp/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/RestSharp/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/RestSharp&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/RestSharp/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/RestSharp/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License: Apache License 2.0&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/wpf</title>
    <updated>2022-10-16T01:40:59Z</updated>
    <id>tag:github.com,2022-10-16:/dotnet/wpf</id>
    <link href="https://github.com/dotnet/wpf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WPF is a .NET Core UI framework for building Windows desktop applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Presentation Foundation (WPF)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&#34; alt=&#34;.NET Foundation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dnceng.visualstudio.com/public/_build/latest?definitionId=270&#34;&gt;&lt;img src=&#34;https://dnceng.visualstudio.com/public/_apis/build/status/dotnet/wpf/dotnet-wpf%20CI&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/wpf/raw/main/LICENSE.TXT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows Presentation Foundation (WPF) is a UI framework for building Windows desktop applications. WPF supports a broad set of application development features, including an application model, resources, controls, graphics, layout, data binding and documents. WPF uses the Extensible Application Markup Language (XAML) to provide a declarative model for application programming.&lt;/p&gt; &#xA;&lt;p&gt;WPF applications are based on a vector graphics architecture. This enables applications to look great on high DPI monitors, as they can be infinitely scaled. WPF also includes a flexible hosting model, which makes it straightforward to host a video in a button, for example. The visual designer provided in Visual Studio makes it easy to build WPF application, with drag-in-drop and/or direct editing of XAML markup.&lt;/p&gt; &#xA;&lt;p&gt;As of .NET 6.0 WPF supports ARM64.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/roadmap.md&#34;&gt;WPF Roadmap&lt;/a&gt; to learn about project priorities, status and ship dates.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/winforms&#34;&gt;WinForms&lt;/a&gt; is another UI framework for building Windows desktop applications that is supported on .NET (6.0.x/5.0.x/3.1.x). WPF and WinForms applications only run on Windows. They are part of the &lt;code&gt;Microsoft.NET.Sdk.WindowsDesktop&lt;/code&gt; SDK. You are recommended to use the most recent version of &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt; to develop WPF and WinForms applications for .NET.&lt;/p&gt; &#xA;&lt;p&gt;To build the WPF repo and contribute features and fixes for .NET 7.0, &lt;a href=&#34;https://visualstudio.microsoft.com/vs/preview/&#34;&gt;Visual Studio 2022 Preview&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6.0 SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/installer&#34;&gt;.NET Preview SDKs (7.0 daily, 6.0 servicing, and 3.1 servicing)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/Documentation/getting-started.md&#34;&gt;Getting started instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/Documentation/contributing.md&#34;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework&#34;&gt;Migrating .NET Framework WPF Apps to .NET Core&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are currently developing WPF for .NET 7.&lt;/li&gt; &#xA; &lt;li&gt;We have completed publishing WPF sources. You can learn more about this at &lt;a href=&#34;https://github.com/dotnet/wpf/issues/2554&#34;&gt;https://github.com/dotnet/wpf/issues/2554&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;We have completed porting WPF to .NET Core as part of .NET Core 3.0, you can learn more about what was done &lt;a href=&#34;https://github.com/dotnet/wpf/issues/1936&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/roadmap.md&#34;&gt;WPF roadmap&lt;/a&gt; to learn about the schedule for specific WPF components.&lt;/p&gt; &#xA;&lt;p&gt;Test published at &lt;a href=&#34;https://github.com/dotnet/wpf-test&#34;&gt;separate repo&lt;/a&gt; Tests and have limited coverage at this time. We will add more tests, however, it will be a progressive process.&lt;/p&gt; &#xA;&lt;p&gt;The Visual Studio WPF designer is now available as part of Visual Studio 2019.&lt;/p&gt; &#xA;&lt;h2&gt;How to Engage, Contribute and Provide Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to contribute are to try things out, file bugs, join in design conversations, and fix issues.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This repo defines &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/Documentation/contributing.md&#34;&gt;contributing guidelines&lt;/a&gt; and also follows the more general &lt;a href=&#34;https://github.com/dotnet/runtime/raw/main/CONTRIBUTING.md&#34;&gt;.NET Core contributing guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have a question or have found a bug, &lt;a href=&#34;https://github.com/dotnet/wpf/issues/new&#34;&gt;file an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/Documentation/getting-started.md#installation&#34;&gt;daily builds&lt;/a&gt; if you want to contribute and stay up to date with the team.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;.NET Framework issues&lt;/h3&gt; &#xA;&lt;p&gt;Issues with .NET Framework, including WPF, should be filed on &lt;a href=&#34;https://developercommunity.visualstudio.com/spaces/61/index.html&#34;&gt;VS developer community&lt;/a&gt;, or &lt;a href=&#34;https://support.microsoft.com/en-us/contactus?ws=support&#34;&gt;Product Support&lt;/a&gt;. They should not be filed on this repo.&lt;/p&gt; &#xA;&lt;h2&gt;Relationship to .NET Framework&lt;/h2&gt; &#xA;&lt;p&gt;This code base is a fork of the WPF code in the .NET Framework. .NET Core 3.0 was released with a goal of WPF having parity with the .NET Framework version. Over time, the two implementations may diverge.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/&#34;&gt;Update on .NET Core 3.0 and .NET Framework 4.8&lt;/a&gt; provides a good description of the forward-looking differences between .NET Core and .NET Framework.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/&#34;&gt;update&lt;/a&gt; states how going forward .NET Core is the future of .NET. and .NET Framework 4.8 will be the last major version of .NET Framework.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt; to define expected conduct in our community. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at &lt;a href=&#34;mailto:conduct@dotnetfoundation.org&#34;&gt;conduct@dotnetfoundation.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also see info about related &lt;a href=&#34;https://www.microsoft.com/msrc/bounty-dot-net-core&#34;&gt;Microsoft .NET Core and ASP.NET Core Bug Bounty Program&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;.NET Core (including the WPF repo) is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/wpf/main/LICENSE.TXT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;.NET Core WPF is a &lt;a href=&#34;https://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/Microsoft/dotnet&#34;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;to find other .NET-related projects.&lt;/p&gt;</summary>
  </entry>
</feed>