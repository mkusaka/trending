<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-30T01:51:53Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SebLague/Chess-Challenge</title>
    <updated>2023-07-30T01:51:53Z</updated>
    <id>tag:github.com,2023-07-30:/SebLague/Chess-Challenge</id>
    <link href="https://github.com/SebLague/Chess-Challenge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://youtu.be/iScy18pVR58&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chess Coding Challenge (C#)&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the &lt;a href=&#34;https://youtu.be/iScy18pVR58&#34;&gt;chess coding challenge&lt;/a&gt;! This is a friendly competition in which your goal is to create a small chess bot (in C#) using the framework provided in this repository. Once submissions close, these bots will battle it out to discover which bot is best!&lt;/p&gt; &#xA;&lt;p&gt;I will then create a video exploring the implementations of the best and most unique/interesting bots. I also plan to make a small game that features these most interesting/challenging entries, so that everyone can try playing against them.&lt;/p&gt; &#xA;&lt;h2&gt;Submission Due Date&lt;/h2&gt; &#xA;&lt;p&gt;October 1st 2023.&lt;br&gt; Entries can be submitted over &lt;a href=&#34;https://forms.gle/6jjj8jxNQ5Ln53ie6&#34;&gt;here&lt;/a&gt;.&lt;br&gt; You are free to edit your entry at any point up to the due date.&lt;/p&gt; &#xA;&lt;h2&gt;Change Log&lt;/h2&gt; &#xA;&lt;p&gt;It has been necessary to make some bug fixes to the original project, and I&#39;ve also been tempted (by some great suggestions from the community) into making a few non-breaking improvements/additions to the API. I realize that changes can be frustrating during a challenge though, and so will commit to freezing the API from August 1st.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.1&lt;/b&gt; Fixed major bug affecting &lt;code&gt;board.GetPiece()&lt;/code&gt; and &lt;code&gt;PieceList&lt;/code&gt; functions. Added &lt;code&gt;Board.CreateBoardFromFEN()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.11&lt;/b&gt; UI changes: Added coordinate names to board UI and fixed human player input bug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.12&lt;/b&gt; Small fixes to &lt;code&gt;board.IsDraw()&lt;/code&gt;: Fifty move counter is now updated properly during search, and insufficient material is now detected for lone bishops on the same square colour.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.13&lt;/b&gt; Fixed issue with &lt;code&gt;board.ZobristKey&lt;/code&gt; where value would sometimes be different after making and undoing a move. Added an alternative function for getting moves &lt;code&gt;board.GetLegalMovesNonAlloc()&lt;/code&gt; (see docs for more info).&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.14&lt;/b&gt; A handful of additions to the Board API: &lt;code&gt;board.IsInsufficientMaterial()&lt;/code&gt;, &lt;code&gt;board.IsRepeatedPosition()&lt;/code&gt;, &lt;code&gt;board.GameRepetitionHistory&lt;/code&gt;, &lt;code&gt;board.FiftyMoveCounter&lt;/code&gt;, &lt;code&gt;board.GameMoveHistory&lt;/code&gt;, &lt;code&gt;board.GameStartFenString&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.15&lt;/b&gt; Fixed incorrect &lt;code&gt;move.CapturePieceType&lt;/code&gt; for en-passant moves and moves in &lt;code&gt;board.GameMoveHistory&lt;/code&gt;. Added &lt;code&gt;BitboardHelper.VisualizeBitboard()&lt;/code&gt; to help with debugging bitboards.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.16&lt;/b&gt; Added &lt;code&gt;timer.GameStartTimeMilliseconds&lt;/code&gt;, &lt;code&gt;timer.OpponentMillisecondsRemaining&lt;/code&gt;, &lt;code&gt;board.ForceSkipTurn()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.17&lt;/b&gt; Added &lt;code&gt;BitboardHelper.GetPieceAttacks()&lt;/code&gt; and optimized &lt;code&gt;board.SquareIsAttackedByOponent()&lt;/code&gt;. Writing &lt;code&gt;#DEBUG&lt;/code&gt; in a comment will now exclude code in that line from counting towards the token limit (for testing only of course).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[There will be no API changes after August 1]&lt;/p&gt; &#xA;&lt;h2&gt;How to Participate&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install an IDE such as &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download&#34;&gt;.NET 6.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download this repository and open the Chess-Challenge project in your IDE.&lt;/li&gt; &#xA; &lt;li&gt;Try building and running the project. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If a window with a chess board appears — great!&lt;/li&gt; &#xA;   &lt;li&gt;If it doesn&#39;t work, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/SebLague/Chess-Challenge/main/#faq-and-troubleshooting&#34;&gt;FAQ/troubleshooting&lt;/a&gt; section at the bottom of the page. You can also search the &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues&#34;&gt;issues page&lt;/a&gt; to see if anyone is having a similar issue. If not, post about it there with any details such as error messages, operating system etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the MyBot.cs file &lt;em&gt;(located in src/MyBot)&lt;/em&gt; and write some code! &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You might want to take a look at the &lt;a href=&#34;https://seblague.github.io/chess-coding-challenge/documentation/&#34;&gt;Documentation&lt;/a&gt; first, and the Rules too!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build and run the program again to test your changes. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For testing, you have three options in the program: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can play against the bot yourself (Human vs Bot)&lt;/li&gt; &#xA;     &lt;li&gt;The bot can play a match against itself (MyBot vs MyBot)&lt;/li&gt; &#xA;     &lt;li&gt;The bot can play a match against a simple example bot (MyBot vs EvilBot).&lt;br&gt;You could also replace the EvilBot code with your own code, to test two different versions of your bot against one another.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;re happy with your chess bot, head over to the &lt;a href=&#34;https://forms.gle/6jjj8jxNQ5Ln53ie6&#34;&gt;Submission Page&lt;/a&gt; to enter it into the competition. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You will be able to edit your entry up until the competition closes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You may participate alone, or in a group of any size.&lt;/li&gt; &#xA; &lt;li&gt;You may submit a maximum of two entries. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please only submit a second entry if it is significantly different from your first bot (not just a minor tweak).&lt;/li&gt; &#xA;   &lt;li&gt;Note: you will need to log in with a second Google account if you want submit a second entry.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Only the following namespaces are allowed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ChessChallenge.API&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Numerics&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Collections.Generic&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Linq&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You may not use the &lt;code&gt;AsParallel()&lt;/code&gt; function&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;As implied by the allowed namespaces, you may not read data from a file or access the internet, nor may you create any new threads or tasks to run code in parallel/in the background.&lt;/li&gt; &#xA; &lt;li&gt;You may not use the unsafe keyword.&lt;/li&gt; &#xA; &lt;li&gt;You may not store data inside the name of a variable/function/class etc (to be extracted with &lt;code&gt;nameof()&lt;/code&gt;, &lt;code&gt;GetType().ToString()&lt;/code&gt;, &lt;code&gt;Environment.StackTrace&lt;/code&gt; and so on). Thank you to &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/12&#34;&gt;#12&lt;/a&gt; and &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/24&#34;&gt;#24&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If your bot makes an illegal move or runs out of time, it will lose the game. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Games are played with 1 minute per side by default (this can be changed in the settings class). The final tournament time control is TBD, so your bot should not assume a particular time control, and instead respect the amount of time left on the timer (given in the Think function).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Your bot may not use more than 256mb of memory for creating look-up tables (such as a transposition table).&lt;/li&gt; &#xA; &lt;li&gt;If you have added a constructor to MyBot (for generating look up tables, etc.) it may not take longer than 5 seconds to complete.&lt;/li&gt; &#xA; &lt;li&gt;All of your code/data must be contained within the &lt;em&gt;MyBot.cs&lt;/em&gt; file. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note: you may create additional scripts for testing/training your bot, but only the &lt;em&gt;MyBot.cs&lt;/em&gt; file will be submitted, so it must be able to run without them.&lt;/li&gt; &#xA;   &lt;li&gt;You may not rename the &lt;em&gt;MyBot&lt;/em&gt; struct or &lt;em&gt;Think&lt;/em&gt; function contained in the &lt;em&gt;MyBot.cs&lt;/em&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;The code in MyBot.cs may not exceed the &lt;em&gt;bot brain capacity&lt;/em&gt; of 1024 (see below).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bot Brain Capacity&lt;/h2&gt; &#xA;&lt;p&gt;There is a size limit on the code you create called the &lt;em&gt;bot brain capacity&lt;/em&gt;. This is measured in ‘tokens’ and may not exceed 1024. The number of tokens you have used so far is displayed on the bottom of the screen when running the program.&lt;/p&gt; &#xA;&lt;p&gt;All names (variables, functions, etc.) are counted as a single token, regardless of length. This means that both lines of code: &lt;code&gt;bool a = true;&lt;/code&gt; and &lt;code&gt;bool myObscenelyLongVariableName = true;&lt;/code&gt; count the same. Additionally, the following things do not count towards the limit: white space, new lines, comments, access modifiers, commas, and semicolons.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ and Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will the final tournament games be played from the standard starting position, or from custom positions? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Games will be played from the standard starting position. If tiebreak games are required, custom positions will be used.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/85&#34;&gt;Unable to build/run the project from my IDE/Code editor&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After downloading the project and installing .Net 6.0, open a terminal / command prompt window.&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to the folder where Chess-Challenge.csproj is located using the &lt;code&gt;cd&lt;/code&gt; command. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example: &lt;code&gt;cd C:\Users\MyName\Desktop\Chess-Challenge\Chess-Challenge&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Now use the command: &lt;code&gt;dotnet run&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This should launch the project. If not, open an issue with any error messages and relevant info.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/discussions/3&#34;&gt;Running on Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues with illegal moves or errors when making/undoing a move &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure that you are making and undoing moves in the correct order, and that you don&#39;t forget to undo a move when exiting early from a function for example.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;How to tell what colour MyBot is playing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can look at &lt;code&gt;board.IsWhiteToMove&lt;/code&gt; when the Think function is called&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetPiece()&lt;/code&gt; function is giving a null piece after making a move &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please make sure you are using the latest version of the project, there was a bug with this function in the original version&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;There is a community-run discord server &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/discussions/156&#34;&gt;over here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-sdk-for-net</title>
    <updated>2023-07-30T01:51:53Z</updated>
    <id>tag:github.com,2023-07-30:/Azure/azure-sdk-for-net</id>
    <link href="https://github.com/Azure/azure-sdk-for-net" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our public developer docs at https://learn.microsoft.com/dotnet/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-net.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for .NET&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&#34; alt=&#34;Packages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencies.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dependency-report-blue.svg?sanitize=true&#34; alt=&#34;Dependencies&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencyGraph/dagre.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dependency-graph-blue.svg?sanitize=true&#34; alt=&#34;Dependencies Graph&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our &lt;a href=&#34;https://docs.microsoft.com/dotnet/azure/&#34;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&#34;https://azure.github.io/azure-sdk-for-net&#34;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with a library, see the README.md file located in the library&#39;s project folder. You can find these library folders grouped by service in the /sdk directory.&lt;/p&gt; &#xA;&lt;p&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&#34;https://docs.microsoft.com/dotnet/azure/&#34;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages available&lt;/h2&gt; &#xA;&lt;p&gt;Each service might have a number of libraries available from each of the following categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-new-releases&#34;&gt;Client - New Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-previous-versions&#34;&gt;Client - Previous Versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-new-releases&#34;&gt;Management - New Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-previous-versions&#34;&gt;Management - Previous Versions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Client: New Releases&lt;/h3&gt; &#xA;&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries follow the &lt;a href=&#34;https://azure.github.io/azure-sdk/dotnet/guidelines/&#34;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features at &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/core/Azure.Core/README.md&#34;&gt;Azure.Core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These new client libraries can be identified by the naming used for their folder, package, and namespace. Each will start with &lt;code&gt;Azure&lt;/code&gt;, followed by the service category, and then the name of the service. For example &lt;code&gt;Azure.Storage.Blobs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a complete list of available packages, please see the &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&#34;&gt;latest available packages&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you need to ensure your code is ready for production we strongly recommend using one of the stable, non-preview libraries.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Client: Previous Versions&lt;/h3&gt; &#xA;&lt;p&gt;Last stable versions of packages that are production-ready. These libraries provide similar functionalities to the preview packages, as they allow you to use and consume existing resources and interact with them, for example: upload a storage blob. Stable library directories typically contain &#39;Microsoft.Azure&#39; in their names, e.g. &#39;Microsoft.Azure.KeyVault&#39;. They might not implement the &lt;a href=&#34;https://azure.github.io/azure-sdk/dotnet_introduction.html&#34;&gt;guidelines&lt;/a&gt; or have the same feature set as the November releases. They do however offer wider coverage of services.&lt;/p&gt; &#xA;&lt;h3&gt;Management: New Releases&lt;/h3&gt; &#xA;&lt;p&gt;A new set of management libraries that follow the &lt;a href=&#34;https://azure.github.io/azure-sdk/dotnet_introduction.html&#34;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and based on &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/core/Azure.Core&#34;&gt;Azure.Core libraries&lt;/a&gt; are now in Public Preview. These new libraries provide a number of core capabilities that are shared amongst all Azure SDKs, including the intuitive Azure Identity library, an HTTP Pipeline with custom policies, error-handling, distributed tracing, and much more. You can find the list of new packages &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&#34;&gt;on this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started with these new libraries, please see the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/raw/main/doc/mgmt_preview_quickstart.md&#34;&gt;quickstart guide here&lt;/a&gt;. These new libraries can be identified by namespaces that start with &lt;code&gt;Azure.ResourceManager&lt;/code&gt;, e.g. &lt;code&gt;Azure.ResourceManager.Network&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Management: Previous Versions&lt;/h3&gt; &#xA;&lt;p&gt;For a complete list of management libraries which enable you to provision and manage Azure resources, please check &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/all/dotnet.html&#34;&gt;here&lt;/a&gt;. They might not have the same feature set as the new releases but they do offer wider coverage of services. Previous versions of management libraries can be identified by namespaces that start with &lt;code&gt;Microsoft.Azure.Management&lt;/code&gt;, e.g. &lt;code&gt;Microsoft.Azure.Management.Network&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Documentation and code samples for these libraries can be found &lt;a href=&#34;https://azure.github.io/azure-sdk-for-net&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For reference documentation visit the &lt;a href=&#34;https://aka.ms/net-docs&#34;&gt;Azure SDK for .NET API Reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&#34;https://docs.microsoft.com/dotnet/azure/&#34;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;File an issue via &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/issues/new/choose&#34;&gt;Github Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://stackoverflow.com/questions/tagged/azure+.net&#34;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; tags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with other community members &lt;a href=&#34;https://gitter.im/azure/azure-sdk-for-net?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/azure/azure-sdk-for-net&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;We want your thoughts!&lt;/h2&gt; &#xA;&lt;h3&gt;Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;What features are important to you? You can let us know by looking at our open &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/issues?q=is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc&#34;&gt;feature requests&lt;/a&gt; and sharing your thoughts by giving the issue a thumbs up or thumbs down. (Note the list is sorted by number of thumbs up in descending order.)&lt;/p&gt; &#xA;&lt;h3&gt;Design Discussions&lt;/h3&gt; &#xA;&lt;p&gt;We would love to incorporate the community&#39;s input into our library design process. Here&#39;s a list of &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/labels/design-discussion&#34;&gt;design discussions&lt;/a&gt; that we&#39;re currently having. Participate in the discussions by leaving your comments in the issue!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-net/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-net%2FREADME.png&#34; alt=&#34;Impressions&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Uahh/ToastFish</title>
    <updated>2023-07-30T01:51:53Z</updated>
    <id>tag:github.com,2023-07-30:/Uahh/ToastFish</id>
    <link href="https://github.com/Uahh/ToastFish" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个利用摸鱼时间背单词的软件。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Uahh/ToastFish/main/Resources/chika128.ico&#34; width=&#34;128&#34; height=&#34;128&#34; alt=&#34;图标&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;ToastFish&lt;/h1&gt; &#xA; &lt;h4&gt;这是一个利用Windows通知栏背单词的软件&lt;/h4&gt; &#xA; &lt;h4&gt;可以让你在上班、上课等恶劣环境下安全隐蔽地背单词&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-orange&#34; alt=&#34;License MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/release-v3.0-blue&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Uahh/ToastFish&#34; alt=&#34;GitHub issues&#34;&gt; &lt;a href=&#34;https://github.com/Uahh/ToastFish/actions/workflows/dotnet-desktop.yml&#34;&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/actions/workflows/dotnet-desktop.yml/badge.svg?sanitize=true&#34; alt=&#34;.NET Build &amp;amp; Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;基本流程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;选择词库：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E9%80%89%E6%8B%A9%E8%AF%8D%E5%BA%93.gif&#34; alt=&#34;选择词库&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;设置背诵单词数量：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E9%80%89%E6%8B%A9%E6%95%B0%E9%87%8F.gif&#34; alt=&#34;设置词数&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;点击开始：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E5%BC%80%E5%A7%8B.gif&#34; alt=&#34;设置词数&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;背完之后会有测试：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E6%B5%8B%E8%AF%95.gif&#34; alt=&#34;设置词数&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;背诵记录&lt;/h3&gt; &#xA;&lt;p&gt;每一次点击开始都会有记录，文件格式为xlsx。位于安装目录的Log文件夹下。&lt;/p&gt; &#xA;&lt;h3&gt;导入单词&lt;/h3&gt; &#xA;&lt;p&gt;可以将背诵记录导入，重新背诵。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E5%AF%BC%E5%85%A5%E5%8D%95%E8%AF%8D.gif&#34; alt=&#34;设置词数&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;自定义内容&lt;/h3&gt; &#xA;&lt;p&gt;可以通过自定义Excel内容来让ToastFish推送所需要的内容。&lt;br&gt; 自定义Excel模板位于安装目录/Resources/自定义模板.xslx&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Uahh/ToastFish/raw/main/Resources/Gif/%E5%AF%BC%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%95%E8%AF%8D.gif&#34; alt=&#34;设置词数&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;操作系统要求&lt;/h3&gt; &#xA;&lt;p&gt;Windows 10 及以上&lt;/p&gt; &#xA;&lt;h3&gt;Q&amp;amp;A&lt;/h3&gt; &#xA;&lt;p&gt;Q: 每次通知停留时间太短了，如何设置停留时间？&lt;br&gt; A: 可以在系统设置 -&amp;gt; 轻松使用 -&amp;gt; 显示 -&amp;gt; 通知显示的时间 里设置停留时间&lt;/p&gt; &#xA;&lt;p&gt;Q: 使用英语发音功能时会闪退？&lt;br&gt; A: 请在系统设置里下载英语语音包，重启软件即可解决。&lt;/p&gt; &#xA;&lt;p&gt;Q: 有没有Win7或是Mac版本的开发计划？&lt;br&gt; A: 这个真没有，Win7和Mac没有Windows10的通知栏。&lt;/p&gt; &#xA;&lt;p&gt;Q: 没有我想要背的单词怎么办？&lt;br&gt; A: 可以使用自定义功能自己构建单词列表，如果单词数量很多，可以联系作者帮忙添加。&lt;/p&gt; &#xA;&lt;p&gt;Q: 遇到了其他困难或是想给软件提建议？&lt;br&gt; A: 可以提Issue，将问题或建议提供给我。&lt;/p&gt; &#xA;&lt;p&gt;Q: 软件收费吗？&lt;br&gt; A: 软件完全开源且免费。&lt;/p&gt; &#xA;&lt;h2&gt;下载与安装&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;可以去网盘下载，下载双击安装ToastFishSetup.exe即可。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;链接：https://pan.baidu.com/s/1VlnJSSbEgcNErV-gy3um6w&#xA;提取码：2173 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;也可以去项目Tag处下载Release版本，解压即可免安装运行。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;编译源码&lt;/h2&gt; &#xA;&lt;p&gt;请在cmd中运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Uahh/ToastFish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;项目使用VS2019, .net环境为4.7.2.&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢@itorr为本软件提供的支持、建议和测试！&lt;/p&gt;</summary>
  </entry>
</feed>