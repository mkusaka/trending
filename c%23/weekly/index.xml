<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-08T01:51:21Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OrchardCMS/OrchardCore</title>
    <updated>2023-01-08T01:51:21Z</updated>
    <id>tag:github.com,2023-01-08:/OrchardCMS/OrchardCore</id>
    <link href="https://github.com/OrchardCMS/OrchardCore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Orchard Core is an open-source modular and multi-tenant application framework built with ASP.NET Core, and a content management system (CMS) built on top of that framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Orchard Core&lt;/h1&gt; &#xA;&lt;p&gt;Orchard Core consists of two distinct projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orchard Core Framework&lt;/strong&gt;: An application framework for building modular, multi-tenant applications on ASP.NET Core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orchard Core CMS&lt;/strong&gt;: A Web Content Management System (CMS) built on top of the Orchard Core Framework.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/OrchardCMS/OrchardCore?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/OrchardCMS/OrchardCore&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/OrchardCMS/OrchardCore/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD--3--Clause-blue.svg?sanitize=true&#34; alt=&#34;BSD-3-Clause License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.orchardcore.net/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/orchardcore/badge/&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/orchard-core&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/orchard-core/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local communities&lt;/h2&gt; &#xA;&lt;p&gt;中文资源&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shang.qq.com/wpa/qunwpa?idkey=48721591a71ee7586316604a7a4ee99d26fd977c6120370a06585085a5936f62&#34;&gt;&lt;img src=&#34;https://docs.orchardcore.net/en/latest/docs/assets/images/orchard-core-cn-community-logo.png&#34; alt=&#34;Orchard Core CN 中文讨论组&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;p&gt;Stable (release/1.5):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Release+-+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/OrchardCMS/OrchardCore/actions/workflows/release_ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/OrchardCore.Application.Cms.Targets&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/OrchardCore.Application.Cms.Targets.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nightly (main):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Preview+-+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/OrchardCMS/OrchardCore/actions/workflows/preview_ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloudsmith.io/~orchardcore/repos/preview/packages/detail/nuget/OrchardCore.Application.Cms.Targets/latest/&#34;&gt;&lt;img src=&#34;https://api-prd.cloudsmith.io/badges/version/orchardcore/preview/nuget/OrchardCore.Application.Cms.Targets/latest/x/?render=true&amp;amp;badge_token=gAAAAABey9hKFD_C-ZIpLvayS3HDsIjIorQluDs53KjIdlxoDz6Ntt1TzvMNJp7a_UWvQbsfN5nS7_0IbxCyqHZsjhmZP6cBkKforo-NqwrH5-E6QCrJ3D8%3D&#34; alt=&#34;Cloudsmith&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;h3&gt;1.5.0&lt;/h3&gt; &#xA;&lt;p&gt;The software is finished -- and by finished, we mean there are no show-stopping, little-children-killing bugs in it. That we know of. There are probably numerous lower-priority bugs triaged into the next point release or service pack, as well.&lt;/p&gt; &#xA;&lt;p&gt;Here is a more detailed &lt;a href=&#34;https://github.com/OrchardCMS/OrchardCore/wiki/Roadmap&#34;&gt;roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository using the command &lt;code&gt;git clone https://github.com/OrchardCMS/OrchardCore.git&lt;/code&gt; and checkout the &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Command line&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the latest version of the .NET SDK from this page &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;https://dotnet.microsoft.com/download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Next, navigate to &lt;code&gt;./OrchardCore/src/OrchardCore.Cms.Web&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Call &lt;code&gt;dotnet run&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then open the &lt;code&gt;http://localhost:5000&lt;/code&gt; URL in your browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download Visual Studio 2022 (any edition) from &lt;a href=&#34;https://www.visualstudio.com/downloads/&#34;&gt;https://www.visualstudio.com/downloads/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;OrchardCore.sln&lt;/code&gt; and wait for Visual Studio to restore all Nuget packages&lt;/li&gt; &#xA; &lt;li&gt;Ensure &lt;code&gt;OrchardCore.Cms.Web&lt;/code&gt; is the startup project and run it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker run --name orchardcms -p 8080:80 orchardproject/orchardcore-cms-linux:latest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker images and parameters can be found at &lt;a href=&#34;https://hub.docker.com/u/orchardproject/&#34;&gt;https://hub.docker.com/u/orchardproject/&lt;/a&gt;&lt;br&gt; See &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/run/#publish-or-expose-port--p---expose&#34;&gt;Docker documentation&lt;/a&gt; to expose different port.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;The documentation can be accessed here: &lt;a href=&#34;https://docs.orchardcore.net/&#34;&gt;https://docs.orchardcore.net/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/OrchardCMS/OrchardCore/main/CODE-OF-CONDUCT.md&#34;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by the &lt;a href=&#34;http://www.dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>betalgo/openai</title>
    <updated>2023-01-08T01:51:21Z</updated>
    <id>tag:github.com,2023-01-08:/betalgo/openai</id>
    <link href="https://github.com/betalgo/openai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open AI GPT-3 and DALL-E dotnet SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dotnet SDK for OpenAI GPT-3 and DALL·E&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Betalgo.OpenAI.GPT3/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Betalgo.OpenAI.GPT3?style=for-the-badge&#34; alt=&#34;Betalgo.OpenAI.GPT3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Package Betalgo.OpenAI.GPT3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dotnet SDK for OpenAI GPT-3 and DALL·E&lt;br&gt; &lt;em&gt;Unofficial&lt;/em&gt;.&lt;br&gt; &lt;em&gt;GPT-3 doesn&#39;t have any official .Net SDK.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Image (DALL·E)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Completions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mars&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Embeddings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Files&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fine-tunes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Moderation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For changelogs please go to end of the document.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://openai.com/&#34;&gt;https://openai.com/&lt;/a&gt; to get your API key. Also documentation with more detail is avaliable there.&lt;/p&gt; &#xA;&lt;h2&gt;Sample Usages&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;em&gt;&lt;strong&gt;!! I would strongly suggest to use different account than your main account while you use playground. Test methods could add or delete your files and models !!&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The repository includes one sample project already &lt;strong&gt;&#34;OpenAI.Playground&#34;&lt;/strong&gt; You can check playground project to see how I was testing it while I was developing the library. Be carefull while playing with it. Some test methods will delete your files or fine tunings.&lt;/p&gt; &#xA;&lt;h3&gt;Without using dependcy injection:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var openAiService = new OpenAIService(new OpenAiOptions()&#xA;{&#xA;    ApiKey =  Environment.GetEnvironmentVariable(&#34;MY_OPEN_AI_API_KEY&#34;)&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using dependcy injection:&lt;/h3&gt; &#xA;&lt;h4&gt;secrets.json:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt; &#34;OpenAIServiceOptions&#34;: {&#xA;    //&#34;ApiKey&#34;:&#34;Your api key goes here&#34;&#xA;    //,&#34;Organization&#34;: &#34;Your Organization Id goes here (optional)&#34;&#xA;  },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;(How to use &lt;a href=&#34;https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-6.0&amp;amp;tabs=windows&#34;&gt;user secret&lt;/a&gt; ?&lt;br&gt; Right click your project name in &#34;solution explorer&#34; then click &#34;Manage User Secret&#34;, it is a good way to keep your api keys)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Program.cs&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;serviceCollection.AddOpenAIService();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt; Use it like below but do NOT put your API key directly to your source code.&lt;/p&gt; &#xA;&lt;h4&gt;Program.cs&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;serviceCollection.AddOpenAIService(settings =&amp;gt; { settings.ApiKey = Environment.GetEnvironmentVariable(&#34;MY_OPEN_AI_API_KEY&#34;); });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After injecting your service you will be able to get it from service provider&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var openAiService = serviceProvider.GetRequiredService&amp;lt;IOpenAIService&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set default engine(optional):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;openAiService.SetDefaultEngineId(Engines.Davinci);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Completions Sample&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var completionResult = await openAiService.Completions.CreateCompletion(new CompletionCreateRequest()&#xA;{&#xA;    Prompt = &#34;Once upon a time&#34;,&#xA;    MaxTokens = 5&#xA;}, Models.Davinci);&#xA;&#xA;if (completionResult.Successful)&#xA;{&#xA;    Console.WriteLine(completionResult.Choices.FirstOrDefault());&#xA;}&#xA;else&#xA;{&#xA;    if (completionResult.Error == null)&#xA;    {&#xA;        throw new Exception(&#34;Unknown Error&#34;);&#xA;    }&#xA;    Console.WriteLine($&#34;{completionResult.Error.Code}: {completionResult.Error.Message}&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes:&lt;/h2&gt; &#xA;&lt;p&gt;I couldn&#39;t find enough time to test all the methods or improve the documentation. My main target was to make fine-tuning available. If you hit any issue please report it or pull request always appreciated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;I was building an SDK for myself then I decide to share it, I hope it will be useful for you. I haven&#39;t maintained any open source projects before. Any help would be much appreciated. I am open to suggestions If you would like to contribute somehow.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;I will be using the latest libraries all the time. Also, next releasing will include breaking changes frequently &lt;em&gt;(as I mentioned before I was building the SDK for myself. Unfortunately I do not have time to plan these changes and support lower version apps)&lt;/em&gt;. So please be aware of that before starting to use the library.&lt;/p&gt; &#xA;&lt;p&gt;As you can guess I do not accept any damage caused by use of the library. You are always free to use other libraries or OpenAI Web-API.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;6.6.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug-fix, now we are handling logprops response properly, thanks to @KosmonikOS&lt;/li&gt; &#xA; &lt;li&gt;Code clean-up, thanks to @KosmonikOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.6.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug-fix,added jsonignore for &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;stopAsList&lt;/code&gt;, thanks to @Patapum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.6.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Breaking change&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;EmbeddingCreateRequest.Input&lt;/code&gt; was a &lt;em&gt;&lt;strong&gt;string list&lt;/strong&gt;&lt;/em&gt; type now it is a &lt;em&gt;&lt;strong&gt;string&lt;/strong&gt;&lt;/em&gt; type.&lt;br&gt; I have introduced &lt;code&gt;InputAsList&lt;/code&gt; property instead of &lt;code&gt;Input&lt;/code&gt;. You may need to update your code according the change.&lt;br&gt; &lt;em&gt;&lt;strong&gt;Both Input(string) and InputAsList(string list) avaliable for use&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Added string and string List support for some of the propertis.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CompletionCreateRequest --&amp;gt; Prompt &amp;amp; PromptAsList / Stop &amp;amp; StopAsList&lt;/li&gt; &#xA;   &lt;li&gt;CreateModerationRequest --&amp;gt; Input &amp;amp; InputAsList&lt;/li&gt; &#xA;   &lt;li&gt;EmbeddingCreateRequest --&amp;gt; Input &amp;amp; InputAsList&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.6.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for new models (davinciv3 &amp;amp; edit models)&lt;/li&gt; &#xA; &lt;li&gt;Added support for Edit endpoint.&lt;/li&gt; &#xA; &lt;li&gt;(&lt;em&gt;Warning&lt;/em&gt;: edit endpoint works with only some of the models, I couldn&#39;t find documentation about it, please follow the thread for more information: &lt;a href=&#34;https://community.openai.com/t/is-edit-endpoint-documentation-incorrect/23361&#34;&gt;https://community.openai.com/t/is-edit-endpoint-documentation-incorrect/23361&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Some objects were created as class instead of record at last version. I change them to record. This will be breaking changes for some of you.&lt;/li&gt; &#xA; &lt;li&gt;With this version I think we cover all of openai APIs&lt;/li&gt; &#xA; &lt;li&gt;In next version I will be focusing on code cleanup and refactoring.&lt;/li&gt; &#xA; &lt;li&gt;If I don&#39;t need to relase bug-fix for this version also I will be updating library with dotnet 7 in next version as I promised.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.5.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAI made a surprise release yesterday and they have announced DALL·E API. I needed to do other things but I couldn&#39;t resist. Because I was rushing, some methods and class names may will change in the next release. Until that day, enjoy your creative AI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This library now fully support all DALL·E features&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;I tried to complete Edit API too bu unfortunately something was wrong with the documentation, I need to ask some questions in the community forum.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.4.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug-fixes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FineTuneCreateRequest suffix json property name changed &#34;Suffix&#34; to &#34;suffix&#34;&lt;/li&gt; &#xA;   &lt;li&gt;CompletionCreateRequest user json property name changed &#34;User&#34; to &#34;user&#34; (Thanks to @shaneqld), also now it is a nullable string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.4.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I have good news and bad news&lt;/li&gt; &#xA; &lt;li&gt;Moderation feature implementation is done. Now we support Moderation.&lt;/li&gt; &#xA; &lt;li&gt;Updated some request and response models to catch up with changes in OpenAI API&lt;/li&gt; &#xA; &lt;li&gt;New version has some breaking changes. Because we are in the fall season I needed to do some cleanup. Sorry for breaking changes but most of them are just renaming. I believe they can be solved before your coffee finish.&lt;/li&gt; &#xA; &lt;li&gt;I am hoping to support Edit Feature in the next version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.3.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to @c-d and @sarilouis for their contributions to this version.&lt;/li&gt; &#xA; &lt;li&gt;Now we support Embedding endpoint. Thanks to @sarilouis&lt;/li&gt; &#xA; &lt;li&gt;Bug fixes and updates for Models&lt;/li&gt; &#xA; &lt;li&gt;Code clean-up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Removed deprecated Answers, Classifications, and Search endpoints &lt;a href=&#34;https://community.openai.com/t/answers-classification-search-endpoint-deprecation/18532&#34;&gt;https://community.openai.com/t/answers-classification-search-endpoint-deprecation/18532&lt;/a&gt;. They will be still available until December at web-API. If you still need them please do not update to this version.&lt;/li&gt; &#xA; &lt;li&gt;Code clean-up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Organization id is not a required value anymore, Thanks to @samuelnygaard&lt;/li&gt; &#xA; &lt;li&gt;Removed deprecated Engine Endpoint and replaced it with Models Endpoint. Now Model response has more fields.&lt;/li&gt; &#xA; &lt;li&gt;Regarding OpenAI Engine naming, I had to rename Engine Enum and static fields. They are quite similar but you have to replace them with new ones. Please use Models class instead of Engine class.&lt;/li&gt; &#xA; &lt;li&gt;To support fast engine name changing I have created a new Method, &lt;code&gt;Models.ModelNameBuilder()&lt;/code&gt; you may consider using it.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>JosefNemec/Playnite</title>
    <updated>2023-01-08T01:51:21Z</updated>
    <id>tag:github.com,2023-01-08:/JosefNemec/Playnite</id>
    <link href="https://github.com/JosefNemec/Playnite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Video game library manager with support for wide range of 3rd party libraries and game emulation support, providing one unified interface for your games.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://playnite.link/applogo.png&#34; width=&#34;32&#34;&gt; Playnite &lt;a href=&#34;https://crowdin.com/project/playnite&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/playnite/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;An open source video game library manager and launcher with support for 3rd party libraries like Steam, GOG, Origin, Battle.net and Ubisoft Connect. Includes game emulation support, providing one unified interface for your games.&lt;/p&gt; &#xA;&lt;p&gt;Screenshots are available at the &lt;a href=&#34;http://playnite.link/&#34;&gt;Homepage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you find Playnite useful please consider supporting the lead developer &lt;a href=&#34;https://github.com/JosefNemec&#34;&gt;Josef Nemec&lt;/a&gt; on &lt;a href=&#34;https://www.patreon.com/playnite&#34;&gt;Patreon&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://playnite.link/&#34;&gt;Homepage&lt;/a&gt; for the list of features.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Grab the latest installer or portable package from the &lt;a href=&#34;https://playnite.link/download.html&#34;&gt;download&lt;/a&gt; page. Playnite will automatically notify you about a new version upon release.&lt;/p&gt; &#xA;&lt;p&gt;Requirements: Windows 7 and newer and &lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=53344&#34;&gt;.NET Framework 4.6.2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;Playnite can be extended with plugins (written in .NET languages) or by scripts (PowerShell and IronPython are currently supported).&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://playnite.link/docs/&#34;&gt;extensions portal&lt;/a&gt; for tutorials and the full API documentation.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Can be found &lt;a href=&#34;https://github.com/JosefNemec/Playnite/wiki/Frequently-Asked-Questions&#34;&gt;on the wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;The list of known issues and solutions can be found &lt;a href=&#34;https://github.com/JosefNemec/Playnite/wiki/Known-Issues&#34;&gt;on the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Statement&lt;/h2&gt; &#xA;&lt;p&gt;Playnite doesn&#39;t store any user information and you don&#39;t need to provide any information to import installed games. Account connection process is usually done via official login web forms and only the web session cookies or tokens are stored, the same way when you login to those services via the web browser.&lt;/p&gt; &#xA;&lt;p&gt;All information about your library is stored locally on your PC.&lt;/p&gt; &#xA;&lt;h2&gt;Questions, issues etc.&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug please file an &lt;a href=&#34;https://github.com/JosefNemec/Playnite/issues&#34;&gt;issue&lt;/a&gt; and if relevant (crashes, broken features) please attach a diagnostics package, which can be created from inside the &#34;About Playnite...&#34; submenu.&lt;/p&gt; &#xA;&lt;p&gt;Biggest community around Playnite currently gathers on our &lt;a href=&#34;https://discord.gg/hSFvmN6&#34;&gt;Discord server&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/playnite/&#34;&gt;Reddit&lt;/a&gt;. You can also follow &lt;a href=&#34;https://twitter.com/AppPlaynite&#34;&gt;@AppPlaynite&lt;/a&gt; for general updates.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/JosefNemec/Playnite/wiki/How-to:-Translations&#34;&gt;How to: Translations&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/JosefNemec/Playnite/wiki/How-to%3A-Themes&#34;&gt;How to: Themes&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;h3&gt;Code Contributions&lt;/h3&gt; &#xA;&lt;p&gt;Please ask in the related issue first before starting implementing something to make sure that nobody else is already working on it. If an issue doesn&#39;t exist for your feature/bug fix, create one first.&lt;/p&gt; &#xA;&lt;p&gt;Regarding code styling, there are only a few major rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;private fields and properties should use camelCase (without underscore)&lt;/li&gt; &#xA; &lt;li&gt;all methods (private and public) should use PascalCase&lt;/li&gt; &#xA; &lt;li&gt;use spaces instead of tabs with 4 spaces width&lt;/li&gt; &#xA; &lt;li&gt;add empty line between code block end &lt;code&gt;}&lt;/code&gt; and additional expression&lt;/li&gt; &#xA; &lt;li&gt;always encapsulate the code body after &lt;em&gt;if, for, foreach, while&lt;/em&gt; etc. with curly braces:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;if (true)&#xA;{&#xA;    DoSomething();&#xA;}&#xA;&#xA;DoSomethingElse();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;instead of&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;if (true)&#xA;    DoSomething();&#xA;DoSomethingElse();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;master&lt;/code&gt; - default branch representing state of currently released build.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;devel&lt;/code&gt; - development branch containing latest changes. All pull requests should be made against &lt;code&gt;devel&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;devel*&lt;/code&gt; - development branches for specific features/versions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;You can see the planned versions with their features in the &lt;a href=&#34;https://github.com/JosefNemec/Playnite/milestones&#34;&gt;milestones overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/JosefNemec/Playnite/wiki/Building&#34;&gt;wiki&lt;/a&gt; for info about building and setting up the development environment.&lt;/p&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;p&gt;.NET development tools courtesy of &lt;a href=&#34;https://www.jetbrains.com/?from=Playnite&#34;&gt;JetBrains&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=Playnite&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3874087/128503701-884cdae4-3283-4d67-8ad1-6103e777a660.png&#34; alt=&#34;jetbrains&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Code signing courtesy of &lt;a href=&#34;https://about.signpath.io&#34;&gt;SignPath&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://about.signpath.io&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3874087/128503363-9c39f8cd-9900-4a8b-83f2-81359d4fc731.PNG&#34; alt=&#34;Capture&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>