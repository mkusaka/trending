<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-03T01:41:04Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>win4r/AISuperDomain</title>
    <updated>2025-08-03T01:41:04Z</updated>
    <id>tag:github.com,2025-08-03:/win4r/AISuperDomain</id>
    <link href="https://github.com/win4r/AISuperDomain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aila(AIË∂ÖÂÖÉÂüü): The premier AI integration tool for Windows, macOS, and Android. Ask once, get answers from 10+ AIs like ChatGPT, Gemini, Claude3, Copilot, Poe, perplexity and more. Features customizable AI and prompts.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Engage with Every Leading AI at Once, Uncover the Ultimate Insights&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/win4r/AISuperDomain/main/README_ZH-CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/win4r/AISuperDomain/main/README_ZH-TW.md&#34;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/win4r/AISuperDomain/main/README_JA-JP.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/win4r/AISuperDomain/main/README_KO-KR.md&#34;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/win4r/AISuperDomain/main/README_FR-FR.md&#34;&gt;Fran√ßais&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/win4r/AISuperDomain/releases&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/2115997d-8b00-4767-bf79-103b4e53abc3&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üî•ËßÜÈ¢ëÊºîÁ§∫Ôºö&lt;a href=&#34;https://b23.tv/B1OXY2V&#34;&gt;https://b23.tv/B1OXY2V&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Aila Desktop Application&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the Aila Desktop Application GitHub repository! This innovative software integrates multiple leading AI models into a single desktop application, providing users with a powerful platform for generating diverse responses to their inquiries. Aila is designed to run seamlessly on both Windows and macOS systems, enabling users to interact with multiple artificial intelligences through one convenient interface.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Multiple AI Integration&lt;/h3&gt; &#xA;&lt;p&gt;Aila sets itself apart by allowing users to pose a question and receive simultaneous answers from a variety of AI models. This unique feature enriches the user experience with a broad spectrum of insights, as each AI contributes its distinct perspective and expertise.&lt;/p&gt; &#xA;&lt;h3&gt;Supported AI Models&lt;/h3&gt; &#xA;&lt;p&gt;Aila currently supports the following AI models:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;AI Name&lt;/th&gt; &#xA;   &lt;th&gt;Introduction&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGPT&lt;/td&gt; &#xA;   &lt;td&gt;An AI developed by OpenAI, known for generating human-like text based on the input provided.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gemini&lt;/td&gt; &#xA;   &lt;td&gt;A versatile AI capable of performing a variety of tasks, including language translation and data analysis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Claude&lt;/td&gt; &#xA;   &lt;td&gt;An AI designed for conversational engagement, providing responses that can mimic human dialogue.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Copilot&lt;/td&gt; &#xA;   &lt;td&gt;Your AI companion that helps you navigate information and perform tasks across various domains.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mistral AI&lt;/td&gt; &#xA;   &lt;td&gt;A large language model called Mistral, which is comparable to GPT-4 in terms of performance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Poe&lt;/td&gt; &#xA;   &lt;td&gt;An advanced AI chatbot aggregator for seamless conversations and content generation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Coze&lt;/td&gt; &#xA;   &lt;td&gt;A next-generation AI application and chatbot developing platform for everyone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Perplexity&lt;/td&gt; &#xA;   &lt;td&gt;An AI that focuses on answering complex questions with detailed explanations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HuggingChat&lt;/td&gt; &#xA;   &lt;td&gt;An AI built on the Hugging Face platform, known for its natural language processing capabilities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YouAI&lt;/td&gt; &#xA;   &lt;td&gt;A personalized AI that tailors its responses and recommendations to the individual user&#39;s preferences.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lmsyshat&lt;/td&gt; &#xA;   &lt;td&gt;An AI with capabilities in system administration and IT support, providing technical assistance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gemini Pro 1.5&lt;/td&gt; &#xA;   &lt;td&gt;An advanced version of Gemini, offering enhanced performance and additional features.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Together AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that facilitates collaboration and teamwork through shared tasks and project management tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Grok AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that excels in pattern recognition and data interpretation, often used in analytics.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ai playground&lt;/td&gt; &#xA;   &lt;td&gt;A platform for experimenting with different AI models and exploring their functionalities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PI AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that specializes in personal intelligence, helping users manage their personal data securely.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Devin AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that provides development and coding assistance, streamlining the software development process.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tongyi Qianwen&lt;/td&gt; &#xA;   &lt;td&gt;An AI focused on unifying diverse data sources to provide comprehensive insights.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DouBao AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that offers financial analysis and predictions, commonly used in the fintech sector.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM&lt;/td&gt; &#xA;   &lt;td&gt;An AI that generates text based on generative language models, suitable for various applications.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;character ai&lt;/td&gt; &#xA;   &lt;td&gt;An AI that creates character profiles and narratives for storytelling and gaming purposes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;meta image generator&lt;/td&gt; &#xA;   &lt;td&gt;An AI that generates images based on textual descriptions, often used for creative projects.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Suno AI&lt;/td&gt; &#xA;   &lt;td&gt;An AI that composes music and generates songs based on user input, enhancing musical creativity.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wenxin Yiyan&lt;/td&gt; &#xA;   &lt;td&gt;A powerful AI chatbot from Baidu.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kimi Chat&lt;/td&gt; &#xA;   &lt;td&gt;A powerful AI chatbot from Moonshot AI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Dynamic AI Display&lt;/h3&gt; &#xA;&lt;p&gt;Customize your viewing experience by choosing how many AI responses to display simultaneously. Options include 1, 2, 3, 4, or 6 AI models, allowing flexibility in information presentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/3b8cead8-fe71-497a-aff0-f0dddca05eb1&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Full-Screen Mode&lt;/h3&gt; &#xA;&lt;p&gt;Click on an AI&#39;s name in the top-right corner to view its response in full screen, making it easier to focus on and read through. To return to the multi-AI display, simply click the &#34;Home&#34; button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/36f0d4ac-ce52-44d8-a0b9-5362b3b9c46e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Efficient Interaction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt Suggestions&lt;/strong&gt;: Initiate a query with &#34;/&#34; to access a list of prompt suggestions, facilitating quicker engagement.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistent Prompts&lt;/strong&gt;: Using &#34;#&#34; at the start of your input activates a persistent prompt, keeping it available for continuous use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Submission&lt;/strong&gt;: Submit questions via the Tab+Enter shortcut or by clicking the &#34;Submit&#34; button. The &#34;Switch&#34; button allows for easy cycling through displayed AI models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Customization and Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Access settings and customization options through the fly-out menu by clicking the top-left icon. Here, users can select their preferred AI models and adjust the display count. The &#34;Config File&#34; option leads to Aila&#39;s JSON configuration file, where users can add new AI models, modify prompts, and personalize their experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/30035e18-ce75-49ff-b385-f3895d8dd029&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To begin using Aila, download the latest version from &lt;a href=&#34;https://github.com/win4r/AISuperDomain/releases&#34;&gt;Aila Releases&lt;/a&gt;. Follow the instructions below based on your operating system to ensure a smooth installation process.&lt;/p&gt; &#xA;&lt;h3&gt;macOS Installation&lt;/h3&gt; &#xA;&lt;p&gt;After downloading, macOS users can simply double-click the downloaded file to start the installation process. Follow the on-screen instructions to complete the setup.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Installation&lt;/h3&gt; &#xA;&lt;p&gt;Windows users must ensure that their system has .NET 8 installed prior to installation. Additionally, you will need to install the provided certificate before proceeding with the Aila installation. Once these prerequisites are met, double-click the downloaded file and follow the on-screen instructions to install Aila.&lt;/p&gt; &#xA;&lt;p&gt;Explore the settings within Aila to customize your AI experience to your liking.&lt;/p&gt; &#xA;&lt;h2&gt;Customize a script and add any AI&lt;/h2&gt; &#xA;&lt;p&gt;You can start by locating the input box for AI, then use the browser&#39;s devtool to inspect the HTML of the input box element. Send the HTML to ChatGPT, and ask ChatGPT to write a generic script for you. &lt;img width=&#34;1385&#34; alt=&#34;Screenshot 2024-03-11 at 12 11 34‚ÄØPM&#34; src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/ee50b1b8-d80e-4e3a-a284-712dbb1d9398&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can refer to the steps and methods I used to ask ChatGPT, as shared in the link to our conversation. This step is based on the input box of chat.mistral.ai, allowing ChatGPT to provide a correct and usable script. &lt;a href=&#34;https://chat.openai.com/share/835483e9-1ca1-41bb-8858-1c1402e98648&#34;&gt;https://chat.openai.com/share/835483e9-1ca1-41bb-8858-1c1402e98648&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to Aila are highly encouraged. Whether you have suggestions for new features, improvements, or bug fixes, please feel free to open an issue or submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Aila Desktop Application is released under the MIT License. For more details, see the LICENSE file.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For support or feedback, please contact us through the GitHub issues section of this repository. Your feedback is crucial for making Aila an even better tool for interacting with AI.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for exploring Aila Desktop Application. We look forward to seeing the innovative ways you use this platform to enhance your AI interactions!&lt;/p&gt; &#xA;&lt;h2&gt;Buy Me a Coffee&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/aila&#34;&gt;&lt;img src=&#34;https://storage.ko-fi.com/cdn/kofi2.png?v=3&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;My WeChat Group and My WeChat QR Code&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/d6dcfd1a-60fa-4b6f-9d5e-1482150a7d95&#34; width=&#34;186&#34; height=&#34;300&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/7568cf78-c8ba-4182-aa96-d524d903f2bc&#34; width=&#34;214.8&#34; height=&#34;291&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/win4r/AISuperDomain/assets/42172631/fefe535c-8153-4046-bfb4-e65eacbf7a33&#34; width=&#34;207&#34; height=&#34;281&#34;&gt;</summary>
  </entry>
  <entry>
    <title>CoplayDev/unity-mcp</title>
    <updated>2025-08-03T01:41:04Z</updated>
    <id>tag:github.com,2025-08-03:/CoplayDev/unity-mcp</id>
    <link href="https://github.com/CoplayDev/unity-mcp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Unity MCP server that allows MCP clients like Claude Desktop or Cursor to perform Unity Editor actions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity MCP ‚ú®&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unity.com/releases/editor/archive&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Unity-000000?style=flat&amp;amp;logo=unity&amp;amp;logoColor=blue&#34; alt=&#34;&#34; title=&#34;Unity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.12-3776AB.svg?style=flat&amp;amp;logo=python&amp;amp;logoColor=white&#34; alt=&#34;python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;&lt;img src=&#34;https://badge.mcpx.dev?status=on&#34; alt=&#34;&#34; title=&#34;MCP Enabled&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/w/justinpbarnett/unity-mcp&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/justinpbarnett/unity-mcp&#34; alt=&#34;GitHub Issues or Pull Requests&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-red.svg?sanitize=true&#34; alt=&#34;&#34; title=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create your Unity apps with LLMs!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unity MCP acts as a bridge, allowing AI assistants (like Claude, Cursor) to interact directly with your Unity Editor via a local &lt;strong&gt;MCP (Model Context Protocol) Client&lt;/strong&gt;. Give your LLM tools to manage assets, control scenes, edit scripts, and automate tasks within Unity.&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Join Our Community&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://discord.gg/vhTUxXaqYr&#34;&gt;Discord&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get help, share ideas, and collaborate with other Unity MCP developers!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Key Features üöÄ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;üó£Ô∏è Natural Language Control:&lt;/strong&gt; Instruct your LLM to perform Unity tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üõ†Ô∏è Powerful Tools:&lt;/strong&gt; Manage assets, scenes, materials, scripts, and editor functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ü§ñ Automation:&lt;/strong&gt; Automate repetitive Unity workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üß© Extensible:&lt;/strong&gt; Designed to work with various MCP Clients.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;strong&gt; Available Tools &lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Your LLM can use functions like:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;read_console&lt;/code&gt;: Gets messages from or clears the console.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_script&lt;/code&gt;: Manages C# scripts (create, read, update, delete).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_editor&lt;/code&gt;: Controls and queries the editor&#39;s state and settings.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_scene&lt;/code&gt;: Manages scenes (load, save, create, get hierarchy, etc.).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_asset&lt;/code&gt;: Performs asset operations (import, create, modify, delete, etc.).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_shader&lt;/code&gt;: Performs shader CRUD operations (create, read, modify, delete).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_gameobject&lt;/code&gt;: Manages GameObjects: create, modify, delete, find, and component operations.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;execute_menu_item&lt;/code&gt;: Executes a menu item via its path (e.g., &#34;File/Save Project&#34;).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How It Works ü§î&lt;/h2&gt; &#xA;&lt;p&gt;Unity MCP connects your tools using two components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity MCP Bridge:&lt;/strong&gt; A Unity package running inside the Editor. (Installed via Package Manager).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity MCP Server:&lt;/strong&gt; A Python server that runs locally, communicating between the Unity Bridge and your MCP Client. (Installed manually).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Flow:&lt;/strong&gt; &lt;code&gt;[Your LLM via MCP Client] &amp;lt;-&amp;gt; [Unity MCP Server (Python)] &amp;lt;-&amp;gt; [Unity MCP Bridge (Unity Editor)]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The setup is constantly improving as we update the package. Check back if you randomly start to run into issues.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git CLI:&lt;/strong&gt; For cloning the server code. &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Download Git&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Python:&lt;/strong&gt; Version 3.12 or newer. &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Download Python&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unity Hub &amp;amp; Editor:&lt;/strong&gt; Version 2020.3 LTS or newer. &lt;a href=&#34;https://unity.com/download&#34;&gt;Download Unity&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;uv (Python package manager):&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install uv&#xA;# Or see: https://docs.astral.sh/uv/getting-started/installation/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;An MCP Client:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/claude-code&#34;&gt;Claude Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.cursor.com/en/downloads&#34;&gt;Cursor&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/copilot/overview&#34;&gt;Visual Studio Code Copilot&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;(Others may work with manual config)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;strong&gt;[Optional] Roslyn for Advanced Script Validation&lt;/strong&gt;&lt;/summary&gt; &#xA;   &lt;p&gt;For &lt;strong&gt;Strict&lt;/strong&gt; validation level that catches undefined namespaces, types, and methods:&lt;/p&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Method 1: NuGet for Unity (Recommended)&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ol&gt; &#xA;    &lt;li&gt;Install &lt;a href=&#34;https://github.com/GlitchEnzo/NuGetForUnity&#34;&gt;NuGetForUnity&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Window &amp;gt; NuGet Package Manager&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Search for &lt;code&gt;Microsoft.CodeAnalysis.CSharp&lt;/code&gt; and install the package&lt;/li&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Player Settings &amp;gt; Scripting Define Symbols&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Add &lt;code&gt;USE_ROSLYN&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Restart Unity&lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Method 2: Manual DLL Installation&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ol&gt; &#xA;    &lt;li&gt;Download Microsoft.CodeAnalysis.CSharp.dll and dependencies from &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.CodeAnalysis.CSharp/&#34;&gt;NuGet&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Place DLLs in &lt;code&gt;Assets/Plugins/&lt;/code&gt; folder&lt;/li&gt; &#xA;    &lt;li&gt;Ensure .NET compatibility settings are correct&lt;/li&gt; &#xA;    &lt;li&gt;Add &lt;code&gt;USE_ROSLYN&lt;/code&gt; to Scripting Define Symbols&lt;/li&gt; &#xA;    &lt;li&gt;Restart Unity&lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Without Roslyn, script validation falls back to basic structural checks. Roslyn enables full C# compiler diagnostics with precise error reporting.&lt;/p&gt;&#xA;  &lt;/details&gt;&lt;p&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: Install the Unity Package (Bridge)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Unity project.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt; -&amp;gt; &lt;code&gt;Add package from git URL...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enter: &lt;pre&gt;&lt;code&gt;https://github.com/justinpbarnett/unity-mcp.git?path=/UnityMcpBridge&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The MCP Server should automatically be installed onto your machine as a result of this process.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Step 2: Configure Your MCP Client&lt;/h3&gt; &#xA;&lt;p&gt;Connect your MCP Client (Claude, Cursor, etc.) to the Python server you installed in Step 1.&lt;/p&gt; &#xA;&lt;img width=&#34;609&#34; alt=&#34;image&#34; src=&#34;https://github.com/user-attachments/assets/cef3a639-4677-4fd8-84e7-2d82a04d55bb&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option A: Auto-Configure (Recommended for Claude/Cursor/VSC Copilot)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Unity, go to &lt;code&gt;Window &amp;gt; Unity MCP&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Auto Configure&lt;/code&gt; on the IDE you uses.&lt;/li&gt; &#xA; &lt;li&gt;Look for a green status indicator üü¢ and &#34;Connected&#34;. &lt;em&gt;(This attempts to modify the MCP Client&#39;s config file automatically)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option B: Manual Configuration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If Auto-Configure fails or you use a different client:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Find your MCP Client&#39;s configuration file.&lt;/strong&gt; (Check client documentation). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Claude Example (macOS):&lt;/em&gt; &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Claude Example (Windows):&lt;/em&gt; &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edit the file&lt;/strong&gt; to add/update the &lt;code&gt;mcpServers&lt;/code&gt; section, using the &lt;em&gt;exact&lt;/em&gt; paths from Step 1.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Click for OS-Specific JSON Configuration Snippets...&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\UnityMCP\\UnityMcpServer\\src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Remember to replace YOUR_USERNAME and use double backslashes \)&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;/usr/local/bin/UnityMCP/UnityMcpServer/src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Replace YOUR_USERNAME if using ~/bin)&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;/home/YOUR_USERNAME/bin/UnityMCP/UnityMcpServer/src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Replace YOUR_USERNAME)&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Claude Code&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;If you&#39;re using Claude Code, you can register the MCP server using these commands:&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;claude mcp add UnityMCP -- uv --directory /[PATH_TO]/UnityMCP/UnityMcpServer/src run server.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;claude mcp add UnityMCP -- &#34;C:/Users/USERNAME/AppData/Roaming/Python/Python313/Scripts/uv.exe&#34; --directory &#34;C:/Users/USERNAME/AppData/Local/Programs/UnityMCP/UnityMcpServer/src&#34; run server.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage ‚ñ∂Ô∏è&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open your Unity Project.&lt;/strong&gt; The Unity MCP Bridge (package) should connect automatically. Check status via Window &amp;gt; Unity MCP.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start your MCP Client&lt;/strong&gt; (Claude, Cursor, etc.). It should automatically launch the Unity MCP Server (Python) using the configuration from Installation Step 3.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interact!&lt;/strong&gt; Unity tools should now be available in your MCP Client.&lt;/p&gt; &lt;p&gt;Example Prompt: &lt;code&gt;Create a 3D player controller&lt;/code&gt;, &lt;code&gt;Create a yellow and bridge sun&lt;/code&gt;, &lt;code&gt;Create a cool shader and apply it on a cube&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Future Dev Plans (Besides PR) üìù&lt;/h2&gt; &#xA;&lt;h3&gt;üî¥ High Priority&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Asset Generation Improvements&lt;/strong&gt; - Enhanced server request handling and asset pipeline optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Code Generation Enhancements&lt;/strong&gt; - Improved generated code quality and error handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Robust Error Handling&lt;/strong&gt; - Comprehensive error messages, recovery mechanisms, and graceful degradation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Remote Connection Support&lt;/strong&gt; - Enable seamless remote connection between Unity host and MCP server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Documentation Expansion&lt;/strong&gt; - Complete tutorials for custom tool creation and API reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üü° Medium Priority&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Custom Tool Creation GUI&lt;/strong&gt; - Visual interface for users to create and configure their own MCP tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Advanced Logging System&lt;/strong&gt; - Logging with filtering, export, and debugging capabilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üü¢ Low Priority&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Mobile Platform Support&lt;/strong&gt; - Extended toolset for mobile development workflows and platform-specific features&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Easier Tool Setup&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Plugin Marketplace&lt;/strong&gt; - Community-driven tool sharing and distribution platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;strong&gt;‚úÖ Completed Features&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;strong&gt;&lt;strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Shader Generation&lt;/strong&gt; - Generate shaders using CGProgram template&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Advanced Script Validation&lt;/strong&gt; - Multi-level validation with semantic analysis, namespace/type checking, and Unity best practices (Will need Roslyn Installed, see &lt;a href=&#34;https://raw.githubusercontent.com/CoplayDev/unity-mcp/master/#prerequisites&#34;&gt;Prerequisite&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/strong&gt;&lt;/strong&gt;&#xA;&lt;/details&gt;&#xA;&lt;strong&gt;&lt;strong&gt; &lt;h3&gt;üî¨ Research &amp;amp; Exploration&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;AI-Powered Asset Generation&lt;/strong&gt; - Integration with AI tools for automatic 3D models, textures, and animations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Real-time Collaboration&lt;/strong&gt; - Live editing sessions between multiple developers &lt;em&gt;(Currently in progress)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Analytics Dashboard&lt;/strong&gt; - Usage analytics, project insights, and performance metrics&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Voice Commands&lt;/strong&gt; - Voice-controlled Unity operations for accessibility&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;AR/VR Tool Integration&lt;/strong&gt; - Extended support for immersive development workflows&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;hr&gt; &lt;h2&gt;For Developers üõ†Ô∏è&lt;/h2&gt; &lt;h3&gt;Development Tools&lt;/h3&gt; &lt;p&gt;If you&#39;re contributing to Unity MCP or want to test core changes, we have development tools to streamline your workflow:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Development Deployment Scripts&lt;/strong&gt;: Quickly deploy and test your changes to Unity MCP Bridge and Python Server&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Automatic Backup System&lt;/strong&gt;: Safe testing with easy rollback capabilities&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Hot Reload Workflow&lt;/strong&gt;: Fast iteration cycle for core development&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;More coming!&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;üìñ &lt;strong&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/CoplayDev/unity-mcp/master/README-DEV.md&#34;&gt;README-DEV.md&lt;/a&gt;&lt;/strong&gt; for complete development setup and workflow documentation.&lt;/p&gt; &lt;h3&gt;Contributing ü§ù&lt;/h3&gt; &lt;p&gt;Help make Unity MCP better!&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fork&lt;/strong&gt; the main repository.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a branch&lt;/strong&gt; (&lt;code&gt;feature/your-idea&lt;/code&gt; or &lt;code&gt;bugfix/your-fix&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Make changes.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; (feat: Add cool new feature).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Push&lt;/strong&gt; your branch.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open a Pull Request&lt;/strong&gt; against the master branch.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;hr&gt; &lt;h2&gt;Troubleshooting ‚ùì&lt;/h2&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;strong&gt;Click to view common issues and fixes...&lt;/strong&gt;&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unity Bridge Not Running/Connecting:&lt;/strong&gt;&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Ensure Unity Editor is open.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Check the status window: Window &amp;gt; Unity MCP.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Restart Unity.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Client Not Connecting / Server Not Starting:&lt;/strong&gt;&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify Server Path:&lt;/strong&gt; Double-check the --directory path in your MCP Client&#39;s JSON config. It must exactly match the location where you cloned the UnityMCP repository in Installation Step 1 (e.g., .../Programs/UnityMCP/UnityMcpServer/src).&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify uv:&lt;/strong&gt; Make sure uv is installed and working (pip show uv).&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Manually:&lt;/strong&gt; Try running the server directly from the terminal to see errors: &lt;code&gt;# Navigate to the src directory first! cd /path/to/your/UnityMCP/UnityMcpServer/src uv run server.py&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;strong&gt;Permissions (macOS/Linux):&lt;/strong&gt; If you installed the server in a system location like /usr/local/bin, ensure the user running the MCP client has permission to execute uv and access files there. Installing in ~/bin might be easier.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Auto-Configure Failed:&lt;/strong&gt;&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Use the Manual Configuration steps. Auto-configure might lack permissions to write to the MCP client&#39;s config file.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/details&gt; &lt;p&gt;Still stuck? &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fgithub.com%2Fjustinpbarnett%2Funity-mcp%2Fissues&#34;&gt;Open an Issue&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/vhTUxXaqYr&#34;&gt;Join the Discord&lt;/a&gt;!&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;h2&gt;Contact üëã&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;justinpbarnett:&lt;/strong&gt; &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fx.com%2Fjustinpbarnett&#34;&gt;X/Twitter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;scriptwonder&lt;/strong&gt;: &lt;a href=&#34;mailto:swu85@ur.rochester.edu&#34;&gt;Email&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/shutong-wu-214043172/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;hr&gt; &lt;h2&gt;License üìú&lt;/h2&gt; &lt;p&gt;MIT License. See &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fgithub.com%2Fjustinpbarnett%2Funity-mcp%2Fblob%2Fmaster%2FLICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;h2&gt;Acknowledgments üôè&lt;/h2&gt; &lt;p&gt;Thanks to the contributors and the Unity team.&lt;/p&gt; &lt;h2&gt;Star History&lt;/h2&gt; &lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#justinpbarnett/unity-mcp&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=justinpbarnett/unity-mcp&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/strong&gt;&lt;/strong&gt;</summary>
  </entry>
  <entry>
    <title>Arcenox-co/TickerQ</title>
    <updated>2025-08-03T01:41:04Z</updated>
    <id>tag:github.com,2025-08-03:/Arcenox-co/TickerQ</id>
    <link href="https://github.com/Arcenox-co/TickerQ" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TickerQ is a fast, reflection-free background task scheduler for .NET ‚Äî built with source generators, EF Core integration, cron + time-based execution, and a real-time dashboard.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TickerQ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ZJemWvp9MK&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-TickerQ-5865F2?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;Discord Community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/tickerq&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/tickerq.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/tickerq&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/tickerq.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Arcenox-co/TickerQ/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/Arcenox-co/TickerQ/actions/workflows/build.yml/badge.svg?branch=main&#34; alt=&#34;Build NuGet Packages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tickerq.arcenox.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs%20-official%20web-blue&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Robust. Adaptive. Precise.&lt;/strong&gt;&lt;br&gt; TickerQ is a fast, reflection-free background task scheduler for .NET ‚Äî built with source generators, EF Core integration, cron + time-based execution, and a real-time dashboard.&lt;/p&gt; &#xA;&lt;h3&gt;üìö Full Docs: &lt;a href=&#34;https://tickerq.arcenox.com&#34;&gt;https://tickerq.arcenox.com&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of v2.2.0, all TickerQ packages are versioned together ‚Äî even if a package has no changes ‚Äî to keep the ecosystem in sync. Always update all packages to the same version.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Time and Cron Scheduling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stateless Core&lt;/strong&gt; with source generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;EF Core Persistence&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Live Dashboard UI&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Retry Policies &amp;amp; Throttling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dependency Injection support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-node distributed coordination&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Core (required)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package TickerQ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Entity Framework Integration (optional)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package TickerQ.EntityFrameworkCore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dashboard UI (optional)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package TickerQ.Dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Basic Setup&lt;/h2&gt; &#xA;&lt;h3&gt;In &lt;code&gt;Program.cs&lt;/code&gt; or &lt;code&gt;Startup.cs&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;builder.Services.AddTickerQ(options =&amp;gt;&#xA;{&#xA;    options.SetMaxConcurrency(4); // Optional&#xA;    options.SetExceptionHandler&amp;lt;MyExceptionHandler&amp;gt;(); // Optional&#xA;    options.AddOperationalStore&amp;lt;MyDbContext&amp;gt;(efOpt =&amp;gt; &#xA;    {&#xA;        efOpt.UseModelCustomizerForMigrations(); // Applies custom model customization only during EF Core migrations&#xA;        efOpt.CancelMissedTickersOnApplicationRestart(); // Useful in distributed mode&#xA;    }); // Enables EF-backed storage&#xA;    options.AddDashboard(basePath: &#34;/tickerq-dashboard&#34;); // Dashboard path&#xA;    options.AddDashboardBasicAuth(); // Enables simple auth&#xA;});&#xA;&#xA;app.UseTickerQ(); // Activates job processor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚ùóÔ∏èIf Not Using &lt;code&gt;UseModelCustomizerForMigrations()&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;You must apply TickerQ configurations manually in your &lt;code&gt;DbContext&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class MyDbContext : DbContext&#xA;{&#xA;    public MyDbContext(DbContextOptions&amp;lt;MyDbContext&amp;gt; options)&#xA;        : base(options) { }&#xA;&#xA;    protected override void OnModelCreating(ModelBuilder builder)&#xA;    {&#xA;        base.OnModelCreating(builder);&#xA;&#xA;        // Apply TickerQ entity configurations explicitly&#xA;        builder.ApplyConfiguration(new TimeTickerConfigurations());&#xA;        builder.ApplyConfiguration(new CronTickerConfigurations());&#xA;        builder.ApplyConfiguration(new CronTickerOccurrenceConfigurations());&#xA;&#xA;        // Alternatively, apply all configurations from assembly:&#xA;        // builder.ApplyConfigurationsFromAssembly(typeof(TimeTickerConfigurations).Assembly);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° &lt;strong&gt;Recommendation:&lt;/strong&gt;&lt;br&gt; Use &lt;code&gt;UseModelCustomizerForMigrations()&lt;/code&gt; to cleanly separate infrastructure concerns from your core domain model, especially during design-time operations like migrations.&lt;br&gt; &lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using third-party libraries (e.g., OpenIddict) that also override &lt;code&gt;IModelCustomizer&lt;/code&gt;, you must either merge customizations or fall back to manual configuration inside &lt;code&gt;OnModelCreating()&lt;/code&gt; to avoid conflicts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Job Definition&lt;/h2&gt; &#xA;&lt;h3&gt;1. &lt;strong&gt;Cron Job (Recurring)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class CleanupJobs&#xA;{&#xA;    [TickerFunction(functionName: &#34;CleanupLogs&#34;, cronExpression: &#34;0 0 * * *&#34; )]&#xA;    public void CleanupLogs()&#xA;    {&#xA;        // Runs every midnight&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This uses a cron expression to run daily at midnight.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;2. &lt;strong&gt;One-Time Job (TimeTicker)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class NotificationJobs&#xA;{&#xA;    [TickerFunction(functionName: &#34;SendWelcome&#34;)]&#xA;    public Task SendWelcome(TickerFunctionContext&amp;lt;string&amp;gt; tickerContext ,CancellationToken ct)&#xA;    {&#xA;        Console.WriteLine(tickerContext.Request); // Output: User123&#xA;        return Task.CompletedTask;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then schedule it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await _timeTickerManager.AddAsync(new TimeTicker&#xA;{&#xA;    Function = &#34;SendWelcome&#34;,&#xA;    ExecutionTime = DateTime.UtcNow.AddMinutes(1),&#xA;    Request = TickerHelper.CreateTickerRequest&amp;lt;string&amp;gt;(&#34;User123&#34;),&#xA;    Retries = 3,&#xA;    RetryIntervals = new[] { 30, 60, 120 }, // Retry after 30s, 60s, then 2min&#xA;&#xA;    // Optional batching&#xA;    BatchParent = Guid.Parse(&#34;....&#34;),&#xA;    BatchRunCondition = BatchRunCondition.OnSuccess&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;3. &lt;strong&gt;Injecting Services in Jobs (Fully DI Support)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class ReportJobs&#xA;{&#xA;    private readonly IReportService _reportService;&#xA;&#xA;    public ReportJobs(IReportService reportService)&#xA;    {&#xA;        _reportService = reportService;&#xA;    }&#xA;&#xA;    [TickerFunction(functionName: &#34;GenerateDailyReport&#34;, cronExpression: &#34;0 6 * * *&#34;)]&#xA;    public async Task GenerateDailyReport()&#xA;    {&#xA;        await _reportService.GenerateAsync();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dashboard UI&lt;/h2&gt; &#xA;&lt;h3&gt;Check out Dashboard Overview: &lt;a href=&#34;https://tickerq.arcenox.com/intro/dashboard-overview.html&#34;&gt;TickerQ-Dashboard-Examples&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Enabled by adding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;options.AddDashboard(basePath: &#34;/tickerq-dashboard&#34;);&#xA;options.AddDashboardBasicAuth(); // Optional&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessible at &lt;code&gt;/tickerq-dashboard&lt;/code&gt;, it shows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;System status&lt;/li&gt; &#xA; &lt;li&gt;Active tickers&lt;/li&gt; &#xA; &lt;li&gt;Job queue state&lt;/li&gt; &#xA; &lt;li&gt;Cron ticker stats&lt;/li&gt; &#xA; &lt;li&gt;Execution history&lt;/li&gt; &#xA; &lt;li&gt;Trigger/cancel/edit jobs live&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Auth config (optional):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;TickerQBasicAuth&#34;: {&#xA;  &#34;Username&#34;: &#34;admin&#34;,&#xA;  &#34;Password&#34;: &#34;admin&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üîê Retry &amp;amp; Locking&lt;/h2&gt; &#xA;&lt;p&gt;TickerQ supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Retries per job&lt;/li&gt; &#xA; &lt;li&gt;Retry intervals (&lt;code&gt;RetryIntervals&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Distributed locking (EF mode only)&lt;/li&gt; &#xA; &lt;li&gt;Job ownership tracking across instances&lt;/li&gt; &#xA; &lt;li&gt;Cooldown on job failure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üß™ Advanced: Manual CronTicker Scheduling&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await _cronTickerManager.AddAsync(new CronTicker&#xA;{&#xA;    Function = &#34;CleanupLogs&#34;,&#xA;    Expression = &#34;0 */6 * * *&#34;, // Every 6 hours&#xA;    Retries = 2,&#xA;    RetryIntervals = new[] { 60, 300 }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Developer Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;[TickerFunction]&lt;/code&gt; to register jobs&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;FunctionName&lt;/code&gt; consistently across schedule and handler&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;CancellationToken&lt;/code&gt; for graceful cancellation&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;Request&lt;/code&gt; to pass dynamic data to jobs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;PRs, ideas, and issues are welcome!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork &amp;amp; branch&lt;/li&gt; &#xA; &lt;li&gt;Code your change&lt;/li&gt; &#xA; &lt;li&gt;Submit a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;MIT OR Apache 2.0&lt;/strong&gt; ¬© &lt;a href=&#34;https://arcenox.com&#34;&gt;Arcenox&lt;/a&gt;&lt;br&gt; You may choose either license to use this software.&lt;/p&gt;</summary>
  </entry>
</feed>