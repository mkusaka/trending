<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:40:38Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/azure-powershell</title>
    <updated>2022-11-20T01:40:38Z</updated>
    <id>tag:github.com,2022-11-20:/Azure/azure-powershell</id>
    <link href="https://github.com/Azure/azure-powershell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft Azure PowerShell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure/azure-powershell/main/documentation/images/MicrosoftAzure-32px.png&#34; alt=&#34;AzureIcon&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Azure/azure-powershell/main/documentation/images/MicrosoftPowerShellCore-32px.png&#34; alt=&#34;PowershellIcon&#34;&gt; Microsoft Azure PowerShell&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains PowerShell cmdlets for developers and administrators to develop, deploy, administer, and manage Microsoft Azure resources.&lt;/p&gt; &#xA;&lt;p&gt;The Az PowerShell module is preinstalled in &lt;a href=&#34;https://shell.azure.com/&#34;&gt;Azure Cloud Shell&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;The following table contains a list of the Azure PowerShell rollup modules.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Module Name&lt;/th&gt; &#xA;   &lt;th&gt;PowerShell Gallery Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure PowerShell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Az&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/Az/&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/Az.svg?style=flat-square&amp;amp;label=Az&#34; alt=&#34;Az&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure PowerShell with preview modules&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AzPreview&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/AzPreview/&#34;&gt;&lt;img src=&#34;https://img.shields.io/powershellgallery/v/AzPreview.svg?style=flat-square&amp;amp;label=AzPreview&#34; alt=&#34;AzPreview&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a complete list of the modules found in this repository, see &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-powershell/main/documentation/azure-powershell-modules.md&#34;&gt;Azure PowerShell Modules&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;PowerShell Gallery&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command in a PowerShell session to install the Az PowerShell module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/latest&#34;&gt;The latest version of PowerShell 7&lt;/a&gt; is the recommended version of PowerShell for use with the Az PowerShell module on all platforms including Windows, Linux, and macOS. This module also runs on Windows PowerShell 5.1 with &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet-framework-runtime&#34;&gt;.NET Framework 4.7.2&lt;/a&gt; or higher.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Az&lt;/code&gt; module replaces &lt;code&gt;AzureRM&lt;/code&gt;. You should not install &lt;code&gt;Az&lt;/code&gt; side-by-side with &lt;code&gt;AzureRM&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have an earlier version of the Azure PowerShell module installed from the PowerShell Gallery and would like to update to the latest version, run the following command in a PowerShell session:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Update-Module -Name Az -Scope CurrentUser -Force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Update-Module&lt;/code&gt; installs the new version side-by-side with previous versions. It does not uninstall the previous versions.&lt;/p&gt; &#xA;&lt;p&gt;For more information on installing Azure PowerShell, see the &lt;a href=&#34;https://learn.microsoft.com/powershell/azure/install-az-ps&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Log into Azure&lt;/h3&gt; &#xA;&lt;p&gt;To connect to Azure, use the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/connect-azaccount&#34;&gt;&lt;code&gt;Connect-AzAccount&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Opens a new browser window to log into your Azure account.&#xA;Connect-AzAccount&#xA;&#xA;# Log in with a previously created service principal. Use the application ID as the username, and the secret as password.&#xA;$Credential = Get-Credential&#xA;Connect-AzAccount -ServicePrincipal -Credential $Credential -TenantId $TenantId&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To log into a specific cloud (&lt;em&gt;AzureChinaCloud&lt;/em&gt;, &lt;em&gt;AzureCloud&lt;/em&gt;, &lt;em&gt;AzureUSGovernment&lt;/em&gt;), use the &lt;code&gt;Environment&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Log into a specific cloud, for example the Azure China cloud.&#xA;Connect-AzAccount -Environment AzureChinaCloud&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Session context&lt;/h3&gt; &#xA;&lt;p&gt;A session context persists login information across Azure PowerShell modules and PowerShell instances. Use the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/get-azcontext&#34;&gt;&lt;code&gt;Get-AzContext&lt;/code&gt;&lt;/a&gt; cmdlet to view the context you are using in the current session. The results contain the Azure tenant and subscription.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Get the Azure PowerShell context for the current PowerShell session&#xA;Get-AzContext&#xA;&#xA;# Lists all available Azure PowerShell contexts in the current PowerShell session&#xA;Get-AzContext -ListAvailable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the subscriptions in a tenant, use the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/get-azsubscription&#34;&gt;&lt;code&gt;Get-AzSubscription&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Get all of the Azure subscriptions in your current Azure tenant&#xA;Get-AzSubscription&#xA;&#xA;# Get all of the Azure subscriptions in a specific Azure tenant&#xA;Get-AzSubscription -TenantId $TenantId&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the subscription that you are using for your current context, use the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/set-azcontext&#34;&gt;&lt;code&gt;Set-AzContext&lt;/code&gt;&lt;/a&gt; cmdlet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Set the Azure PowerShell context to a specific Azure subscription&#xA;Set-AzContext -Subscription $SubscriptionName -Name &#39;MyContext&#39;&#xA;&#xA;# Set the Azure PowerShell context using piping&#xA;Get-AzSubscription -SubscriptionName $SubscriptionName | Set-AzContext -Name &#39;MyContext&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For details on Azure PowerShell contexts, see &lt;a href=&#34;https://learn.microsoft.com/powershell/azure/context-persistence&#34;&gt;Azure PowerShell context objects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Discovering cmdlets&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;Get-Command&lt;/code&gt; to discover cmdlets within a specific module, or cmdlets that follow a specific search pattern:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# List all cmdlets in the Az.Accounts module&#xA;Get-Command -Module Az.Accounts&#xA;&#xA;# List all cmdlets that contain VirtualNetwork in their name&#xA;Get-Command -Name &#39;*VirtualNetwork*&#39;&#xA;&#xA;# List all cmdlets that contain VM in their name in the Az.Compute module&#xA;Get-Command -Module Az.Compute -Name &#39;*VM*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cmdlet help and examples&lt;/h3&gt; &#xA;&lt;p&gt;To view the help content for a cmdlet, use the &lt;code&gt;Get-Help&lt;/code&gt; cmdlet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# View basic help information for Get-AzSubscription&#xA;Get-Help -Name Get-AzSubscription&#xA;&#xA;# View the examples for Get-AzSubscription&#xA;Get-Help -Name Get-AzSubscription -Examples&#xA;&#xA;# View the full help for Get-AzSubscription&#xA;Get-Help -Name Get-AzSubscription -Full&#xA;&#xA;# View the online version of the help from https://learn.microsoft.com for Get-AzSubscription&#xA;Get-Help -Name Get-AzSubscription -Online&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For detailed instructions on using Azure PowerShell, see the &lt;a href=&#34;https://learn.microsoft.com/powershell/azure/get-started-azureps&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues and Feedback&lt;/h2&gt; &#xA;&lt;h3&gt;Issues&lt;/h3&gt; &#xA;&lt;p&gt;If you find any bugs when using Azure PowerShell, file an issue in our &lt;a href=&#34;https://github.com/Azure/azure-powershell/issues&#34;&gt;GitHub repo&lt;/a&gt;. Fill out the issue template with the appropriate information.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, see &lt;a href=&#34;https://azure.microsoft.com/support/community/&#34;&gt;Azure Community Support&lt;/a&gt; if you have issues with Azure PowerShell or Azure services.&lt;/p&gt; &#xA;&lt;h3&gt;Feedback&lt;/h3&gt; &#xA;&lt;p&gt;If there is a feature you would like to see in Azure PowerShell, use the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/send-feedback&#34;&gt;&lt;code&gt;Send-Feedback&lt;/code&gt;&lt;/a&gt; cmdlet, or file an issue in our &lt;a href=&#34;https://github.com/Azure/azure-powershell/issues&#34;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute Code&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to become a contributor to this project, see the instructions provided in &lt;a href=&#34;https://opensource.microsoft.com/collaborate/&#34;&gt;Microsoft Azure Projects Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional information about contributing to this repository can be found in &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-powershell/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-powershell/main/documentation/development-docs/azure-powershell-developer-guide.md&#34;&gt;&lt;em&gt;Azure PowerShell Developer Guide&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;Azure PowerShell collects telemetry data by default. Microsoft aggregates collected data to identify patterns of usage to identify common issues and to improve the experience of Azure PowerShell. Microsoft Azure PowerShell does not collect any private or personal data. For example, the usage data helps identify issues such as cmdlets with low success and helps prioritize our work. While we appreciate the insights this data provides, we also understand that not everyone wants to send usage data. You can disable data collection with the &lt;a href=&#34;https://learn.microsoft.com/powershell/module/az.accounts/disable-azdatacollection&#34;&gt;&lt;code&gt;Disable-AzDataCollection&lt;/code&gt;&lt;/a&gt; cmdlet. To learn more, see our &lt;a href=&#34;https://privacy.microsoft.com/privacystatement&#34;&gt;privacy statement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/azure/&#34;&gt;Microsoft Azure Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/&#34;&gt;PowerShell Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;!-- References --&gt; &#xA;&lt;!-- Local --&gt; &#xA;&lt;!-- External --&gt; &#xA;&lt;!-- Docs --&gt;</summary>
  </entry>
  <entry>
    <title>grpc/grpc-dotnet</title>
    <updated>2022-11-20T01:40:38Z</updated>
    <id>tag:github.com,2022-11-20:/grpc/grpc-dotnet</id>
    <link href="https://github.com/grpc/grpc-dotnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;gRPC for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gRPC for .NET&lt;/h1&gt; &#xA;&lt;p&gt;gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.&lt;/p&gt; &#xA;&lt;p&gt;gRPC functionality for .NET Core 3.0 or later includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Grpc.AspNetCore&#34;&gt;Grpc.AspNetCore&lt;/a&gt; – An ASP.NET Core framework for hosting gRPC services. gRPC on ASP.NET Core integrates with standard ASP.NET Core features like logging, dependency injection (DI), authentication and authorization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Grpc.Net.Client&#34;&gt;Grpc.Net.Client&lt;/a&gt; – A gRPC client for .NET Core that builds upon the familiar &lt;code&gt;HttpClient&lt;/code&gt;. The client uses new HTTP/2 functionality in .NET Core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Grpc.Net.ClientFactory&#34;&gt;Grpc.Net.ClientFactory&lt;/a&gt; – gRPC client integration with &lt;code&gt;HttpClientFactory&lt;/code&gt;. The client factory allows gRPC clients to be centrally configured and injected into your app with DI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/grpc/&#34;&gt;An introduction to gRPC on .NET&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;gRPC for .NET is now the recommended implementation!&lt;/h2&gt; &#xA;&lt;p&gt;Starting from May 2021, gRPC for .NET is the recommended implemention of gRPC for C#. The original &lt;a href=&#34;https://github.com/grpc/grpc/tree/master/src/csharp&#34;&gt;gRPC for C#&lt;/a&gt; implementation (distributed as the &lt;code&gt;Grpc.Core&lt;/code&gt; nuget package) is now in maintenance mode and will be deprecated in the future. See &lt;a href=&#34;https://grpc.io/blog/grpc-csharp-future/&#34;&gt;blogpost&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;To start using gRPC for .NET&lt;/h2&gt; &#xA;&lt;p&gt;The best place to start using gRPC for .NET is the gRPC template that comes with .NET Core 3.0 or later. Use the template to &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/tutorials/grpc/grpc-start&#34;&gt;create a gRPC service website and client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For additional examples of using gRPC in .NET refer to &lt;a href=&#34;https://github.com/grpc/grpc-dotnet/tree/master/examples&#34;&gt;https://github.com/grpc/grpc-dotnet/tree/master/examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;gRPC NuGet feed&lt;/h2&gt; &#xA;&lt;p&gt;Official versions of gRPC are published to &lt;a href=&#34;https://www.nuget.org/profiles/grpc-packages&#34;&gt;NuGet.org&lt;/a&gt;. This is the recommended place for most developers to get gRPC packages.&lt;/p&gt; &#xA;&lt;p&gt;Nightly versions of gRPC for ASP.NET Core are published to the gRPC NuGet repository at &lt;a href=&#34;https://grpc.jfrog.io/grpc/api/nuget/v3/grpc-nuget-dev&#34;&gt;https://grpc.jfrog.io/grpc/api/nuget/v3/grpc-nuget-dev&lt;/a&gt;. It is recommended to use a nightly gRPC package if you are using a nightly version of .NET Core, and vice-versa. There may be incompatibilities between .NET Core and gRPC for ASP.NET Core if a newer version of one is used with an older version of the other.&lt;/p&gt; &#xA;&lt;p&gt;To use the gRPC NuGet repository and get the latest packages from it, place a &lt;code&gt;NuGet.config&lt;/code&gt; file with the gRPC repository setup in your solution folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;&#xA;&amp;lt;configuration&amp;gt;&#xA;    &amp;lt;packageSources&amp;gt;&#xA;        &amp;lt;!-- Add this repository to the list of available repositories --&amp;gt;&#xA;        &amp;lt;add key=&#34;gRPC repository&#34; value=&#34;https://grpc.jfrog.io/grpc/api/nuget/v3/grpc-nuget-dev&#34; /&amp;gt;&#xA;    &amp;lt;/packageSources&amp;gt;&#xA;&amp;lt;/configuration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional instructions for configuring a project to use a custom NuGet repository are available at &lt;a href=&#34;https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#changing-config-settings&#34;&gt;Changing NuGet configuration settings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To develop gRPC for ASP.NET Core&lt;/h2&gt; &#xA;&lt;p&gt;Installing .NET Core SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Run this script before building the project.&#xA;./build/get-dotnet.sh or ./build/get-dotnet.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set up the development environment to use the installed .NET Core SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Source this script to use the installed .NET Core SDK.&#xA;source ./activate.sh or . ./activate.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To launch Visual Studio with the installed SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# activate.sh or activate.ps1 must be sourced first, see previous step&#xA;startvs.cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet build Grpc.DotNet.sln&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet test Grpc.DotNet.sln&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;To contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;General rules for &lt;a href=&#34;https://github.com/grpc/grpc/raw/master/CONTRIBUTING.md&#34;&gt;contributing to the gRPC project&lt;/a&gt; apply for this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CjangCjengh/MoeGoe_GUI</title>
    <updated>2022-11-20T01:40:38Z</updated>
    <id>tag:github.com,2022-11-20:/CjangCjengh/MoeGoe_GUI</id>
    <link href="https://github.com/CjangCjengh/MoeGoe_GUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GUI for MoeGoe&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MoeGoe_GUI&lt;/h1&gt; &#xA;&lt;p&gt;GUI for &lt;a href=&#34;https://github.com/CjangCjengh/MoeGoe&#34;&gt;MoeGoe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Access the history of text input&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Focus a textbox&lt;/li&gt; &#xA; &lt;li&gt;Press up/down arrow key&lt;/li&gt; &#xA; &lt;li&gt;Press enter&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Advanced settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Right click on a textarea&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>