<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T02:04:05Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/dotnet-podcasts</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/dotnet-podcasts</id>
    <link href="https://github.com/microsoft/dotnet-podcasts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET 6 reference application shown at .NET Conf 2021 featuring ASP.NET Core, Blazor, .NET MAUI, Microservices, and more!&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample description: &#34;.NET 6 reference application shown at .NET Conf 2021 featuring ASP.NET Core, Blazor, .NET MAUI, Microservices, and more!&#34; languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csharp products:&lt;/li&gt; &#xA; &lt;li&gt;dotnet-core&lt;/li&gt; &#xA; &lt;li&gt;ef-core&lt;/li&gt; &#xA; &lt;li&gt;blazor&lt;/li&gt; &#xA; &lt;li&gt;xamarin&lt;/li&gt; &#xA; &lt;li&gt;azure-sql-database&lt;/li&gt; &#xA; &lt;li&gt;azure-storage&lt;/li&gt; &#xA; &lt;li&gt;azure-container-apps&lt;/li&gt; &#xA; &lt;li&gt;azure-container-registry&lt;/li&gt; &#xA; &lt;li&gt;azure-app-service-web&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;.NET Podcasts - Sample Application&lt;/h1&gt; &#xA;&lt;p&gt;The .NET Podcast app is a sample application showcasing &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6&lt;/a&gt;, &lt;a href=&#34;https://dotnet.microsoft.com/apps/aspnet&#34;&gt;ASP.NET Core&lt;/a&gt;, &lt;a href=&#34;https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor&#34;&gt;Blazor&lt;/a&gt;, &lt;a href=&#34;https://dotnet.microsoft.com/apps/maui&#34;&gt;.NET MAUI&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/services/container-apps/#overview&#34;&gt;Azure Container Apps&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/dotnet/orleans/overview&#34;&gt;Orleans&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;You can browse a &lt;a href=&#34;https://dotnetpodcasts.azurewebsites.net/&#34;&gt;live running version of the .NET Podcasts app&lt;/a&gt; powered by ASP.NET Core and Blazor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/docs/net-podcasts.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Website&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/actions/workflows/podcast-web.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web API&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/actions/workflows/podcast-api.yml/badge.svg?sanitize=true&#34; alt=&#34;Services Build status&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Listen Together Hub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/actions/workflows/podcast-hub.yml/badge.svg?sanitize=true&#34; alt=&#34;Services Build status&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Architecture Diagram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/docs/arch_diagram_podcast.png&#34; alt=&#34;.NET Podcast Application Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Repositories&lt;/h2&gt; &#xA;&lt;p&gt;For this sample application, we build an app to listen all your favorite .NET podcasts for all the ecosystems: Web, Android, iOS, macOS and Windows. You can find the different apps separated by folders in this repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Mobile&#34;&gt;Mobile &amp;amp; Desktop:&lt;/a&gt; Native .NET MAUI Application for iOS, Android, macOS, and Windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Web&#34;&gt;Website:&lt;/a&gt; Blazor WebAssembly app and ASP.NET Core Razor Marketing website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Services&#34;&gt;Backend API:&lt;/a&gt; ASP.NET Core Web APIs &amp;amp; Minimal APIs, ingestion worker, and podcast update worker&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/MobileBlazor&#34;&gt;Blazor Hybrid App:&lt;/a&gt; Sample hybrid application of .NET MAUI with Blazor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Full Deployment with GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;dotnet-podcasts&lt;/code&gt; repo is configured to deploy all services and websites automatically to Azure using GitHub Actions. &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/Deploy-websites-services.md&#34;&gt;Follow the detailed guidelines&lt;/a&gt; to setup GitHub Actions on your fork.&lt;/p&gt; &#xA;&lt;h2&gt;Local Deployment Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started is to build and run the .NET Podcasts app service, database, and storage using Docker.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;First install &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and navigate to the root directory in a terminal&lt;/li&gt; &#xA; &lt;li&gt;Run the following docker command (this may take some time to pull images, build, and deploy locally)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cli&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will deploy and start all services required to run the web, mobile, and desktop apps. The Web API will run on &lt;code&gt;localhost:5000&lt;/code&gt; and the SignalR Hub for listen together will run on &lt;code&gt;localhost:5001&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Web, Mobile, &amp;amp; Desktop&lt;/h3&gt; &#xA;&lt;p&gt;The apps are configured to speak to &lt;code&gt;localhost&lt;/code&gt; on the correct ports for each service. Simply open the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Web#solution&#34;&gt;Web solution&lt;/a&gt; or the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Mobile&#34;&gt;.NET MAUI solution&lt;/a&gt; and run the app.&lt;/p&gt; &#xA;&lt;p&gt;Ensure that you have the following services running in Docker (podcast.api, listentogether.hub, podcast.updater.worker, podcast.db, storage):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/docs/docker/docker-app-config.png&#34; alt=&#34;Configured Docker services&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backend Services&lt;/h3&gt; &#xA;&lt;p&gt;Open the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/src/Services&#34;&gt;Services solution&lt;/a&gt; and pick a service to run locally such as the &lt;code&gt;Podcast.API&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure that the following services are running in Docker, note that you only need the &lt;code&gt;podcast.db&lt;/code&gt; and &lt;code&gt;storage&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/dotnet-podcasts/main/docs/docker/docker-services-config.png&#34; alt=&#34;Configured Docker services&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local Deployment with Visual Studio&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;First install &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and navigate to the root directory in a terminal&lt;/li&gt; &#xA; &lt;li&gt;Open the solution &lt;code&gt;NetPodcast.sln&lt;/code&gt;, set the start project to &lt;code&gt;docker-compose&lt;/code&gt; and hit F5. To optimize debugging while running all services, please refer to &lt;a href=&#34;https://docs.microsoft.com/visualstudio/containers/launch-profiles&#34;&gt;Launch a subset of Compose services documentation.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;By default, the Podcast.Api&#39;s swagger endpoint will be launched. Navigate to &lt;code&gt;localhost:5002&lt;/code&gt; for the web application. If you see any errors, wait for a while and refresh the page.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OneXDeveloper/MapAssist</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/OneXDeveloper/MapAssist</id>
    <link href="https://github.com/OneXDeveloper/MapAssist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;D2R MapHack&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://mapassist.github.io&#34;&gt;MapAssist&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reveals the D2R map as a game overlay, includes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Shows monsters, monster immunities, and distinguish different monster types with different colors&lt;/li&gt; &#xA;   &lt;li&gt;Lines to next area and other points of interest &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Including the correct tomb in Canyon of Magi and the right direction to Summoner in Arcane Sanctuary&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Waypoints&lt;/li&gt; &#xA;   &lt;li&gt;Party players, neutral players, hostile players, corpses&lt;/li&gt; &#xA;   &lt;li&gt;Player portals and red portal&lt;/li&gt; &#xA;   &lt;li&gt;Super chests&lt;/li&gt; &#xA;   &lt;li&gt;Shrines&lt;/li&gt; &#xA;   &lt;li&gt;Weapon and armor racks&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Built-in item filter with map icons and loot drop alerts&lt;/li&gt; &#xA; &lt;li&gt;Naturally boosts your magic find (strong anecdotal evidence)&lt;/li&gt; &#xA; &lt;li&gt;+300% chance to find Gem shrines (strong anecdotal evidence)&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable with a built-in GUI&lt;/li&gt; &#xA; &lt;li&gt;Works online (user accepts all risks) and offline&lt;/li&gt; &#xA; &lt;li&gt;Multi-launcher compatible&lt;/li&gt; &#xA; &lt;li&gt;Active development (new features added regularly)&lt;/li&gt; &#xA; &lt;li&gt;Free technical support &lt;a href=&#34;https://discord.gg/uBftrtBE4j&#34;&gt;on our Discord channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1294559/151440355-6cfd64d5-94e0-4942-b144-9224e16d15c6.png&#34; alt=&#34;MapAssist&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1294559/151440400-4c887af4-ca89-46cf-893b-9cdc8a1fcb5b.png&#34; alt=&#34;MapAssist&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1294559/151440395-baecf57f-d7bd-4cbe-b78f-201ce3e0f464.png&#34; alt=&#34;MapAssist&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1294559/151440410-452eada6-da24-458e-8c32-d86e18204642.png&#34; alt=&#34;MapAssist&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1294559/151440415-fe92d5b1-068d-4734-b355-f47cfa9931df.png&#34; alt=&#34;MapAssist&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclosures&lt;/h2&gt; &#xA;&lt;p&gt;THE &#39;MapAssist&#39; TOOL AND CONTENTS THEREIN WERE INTENDED FOR INFORMATIONAL AND LEARNING PURPOSES ONLY.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to contribute a pull request with new features or fixes, the code is under GPL so make sure to please follow the license.&lt;/p&gt; &#xA;&lt;p&gt;The software is free and open source licensed under the GPLv3. You may download a copy of the source code and follow the instructions to build the software for yourself. In certain instances there may be direct links to precompiled versions of the software, you are free to use these as well. The best place to start looking is inside of the repository.&lt;/p&gt; &#xA;&lt;p&gt;Use at your own risk! The MapAssist team makes no expression of warranty or claim about the safety in regards to the usage of this program. We have done our best to provide an open project for learning and educational purposes only. The contents of the official source code are known to not contain any malicious or disingenuous code. If you have additional information in regards to the safety of this program please do not hesitate to raise a concern.&lt;/p&gt; &#xA;&lt;p&gt;All software projects are subject to their own licensing, and copyrights. All other product names and any registered and unregistered trademarks mentioned are used for identification purposes only and remain the exclusive property of their respective owners.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>insoxin/China-Telecom-Helper</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/insoxin/China-Telecom-Helper</id>
    <link href="https://github.com/insoxin/China-Telecom-Helper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;中国电信助手,白嫖年入保底256+话费 .每月金豆领取(lv6,1000金豆),每日签到(随机金豆),每日喂食宠物.每日登录奖励领取(5金豆),查看我的云盘(10金豆),翻牌 (10金豆),查看我的订单 (5金豆),打开消息 (100金豆),当日分享 (50金豆),浏览生活频道 (5金豆),查看我的金豆 (5金豆),关注直播 (5金豆),观看直播15s (5金豆),打开消息 (100金豆),答问卷 (100金豆)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;China-Telecom-Helper 中国电信助手&lt;/h1&gt; &#xA;&lt;p&gt;中国电信助手 白嫖年入保底256+话费&lt;/p&gt; &#xA;&lt;p&gt;每月金豆领取(lv6,1000金豆),每日签到(随机金豆),每日喂食宠物.每日登录奖励领取(5金豆),查看我的云盘(10金豆),翻牌 (10金豆),查看我的订单 (5金豆),打开消息 (100金豆),当日分享 (50金豆),浏览生活频道 (5金豆),查看我的金豆 (5金豆),关注直播 (5金豆),观看直播15s (5金豆),打开消息 (100金豆),答问卷 (100金豆)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.rmb.bdstatic.com/bjh/7367f58ef56656fac3c1ed462e658bb9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;免费使用,禁止买卖,仅限用于学习和研究目的；不得用于商业或者非法用途，否则，一切后果请用户自负。您必须在下载后的24个小时之内，从您的电脑中彻底删除上述内容。&lt;/p&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;活动规则请自行至&lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/wiki&#34;&gt;wiki&lt;/a&gt;查看&lt;/p&gt; &#xA;&lt;p&gt;感谢法学专业大佬提醒,金豆自动兑换话费模块可能涉及盈利,已移除.可自行手动兑换&lt;/p&gt; &#xA;&lt;p&gt;金豆每月固定可兑换17元 17*12=204&lt;/p&gt; &#xA;&lt;p&gt;每签到7天可以200金豆兑换1元话费 365÷7=52.14&lt;/p&gt; &#xA;&lt;p&gt;再加上不定时活动&lt;/p&gt; &#xA;&lt;p&gt;年入保底256+ &lt;img src=&#34;https://user-images.githubusercontent.com/19371836/169460450-f67cb1fb-346c-4615-9b8e-716a2dcea92a.jpg&#34; alt=&#34;JKT9DN8BOUSH0BDO{P~CV$O&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/19371836/169460610-cda8844a-a86d-40be-a821-c9cf2c5bbc68.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;配置运行&lt;/h2&gt; &#xA;&lt;p&gt;程序同目录下创建 config.json 文件或者 &lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/raw/main/config.json&#34;&gt;https://github.com/insoxin/China-Telecom-Helper/blob/main/config.json&lt;/a&gt; 下载填写自值&lt;/p&gt; &#xA;&lt;p&gt;phone,cookie,para等自行抓包获取&lt;/p&gt; &#xA;&lt;p&gt;抓包教程:&lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/wiki/%E4%B8%80%E4%BA%9B%E6%95%B0%E6%8D%AE%E5%80%BC%E7%9A%84%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B&#34;&gt;一些数据值的抓包教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;systime默认即可,也可更换国内cdn,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cloudflare 全球cdn加速  &#xA;&#xA;https://cloudflare.api.isoyu.com/time/SysTime/?appCode=B586A14C4EC466D33682F8626CCB3794&amp;amp;auturl=api.isoyu.com&amp;amp;num=13&#xA;&#xA;国内 cdn加速&#xA;&#xA;https://api.isoyu.com/time/SysTime/?appCode=B586A14C4EC466D33682F8626CCB3794&amp;amp;auturl=api.isoyu.com&amp;amp;num=13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;完整示例&lt;/h3&gt; &#xA;&lt;p&gt;下列文档中示例json 只是示范,要灵活运用.可能存在与新版本不兼容问题,具体请以 &lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/raw/main/config.json&#34;&gt;https://github.com/insoxin/China-Telecom-Helper/blob/main/config.json&lt;/a&gt; 为准&lt;/p&gt; &#xA;&lt;h3&gt;试运行&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.rmb.bdstatic.com/bjh/b9f518e9d5ebe4671652700106623c78.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;根据自己系统下载,如若没有,可留言&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/releases&#34;&gt;https://github.com/insoxin/China-Telecom-Helper/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;国内蓝奏云(更新没GitHub及时) 国内 &lt;a href=&#34;https://wwi.lanzouf.com/b0efvpoaf&#34;&gt;https://wwi.lanzouf.com/b0efvpoaf&lt;/a&gt; 密码:b13w&lt;/p&gt; &#xA;&lt;p&gt;config.json 别忘了填写所有参数&lt;/p&gt; &#xA;&lt;h3&gt;定时执行&lt;/h3&gt; &#xA;&lt;p&gt;特别注意:电信官方服务器经常抽风,导致不成功所以让他每八小时执行一下,一天三次.显示空白是服务器抽风,显示聚合任务接口成功才是请求成功了&lt;/p&gt; &#xA;&lt;p&gt;Linux 可使用 Crontab 设置定时任务&lt;/p&gt; &#xA;&lt;p&gt;windows可使用 系统任务计划程序 设置定时任务&lt;/p&gt; &#xA;&lt;h2&gt;运行截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19371836/169181296-ab7af2e5-857c-472d-ba94-7b1277292caf.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.rmb.bdstatic.com/bjh/7367f58ef56656fac3c1ed462e658bb9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;结束&lt;/h2&gt; &#xA;&lt;p&gt;问题反馈:&lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper/issues&#34;&gt;https://github.com/insoxin/China-Telecom-Helper/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;觉得好用可以给我下面项目点点star,打赏就不必了.不盈利.如果你发现有什么签到奖励蛮好的,可以留言,无偿定制&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insoxin/api&#34;&gt;https://github.com/insoxin/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insoxin/China-Telecom-Helper&#34;&gt;https://github.com/insoxin/China-Telecom-Helper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/insoxin/China-Telecom-Helper&#34;&gt;&lt;img src=&#34;https://starchart.cc/insoxin/China-Telecom-Helper.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GTA-ASM/SanAndreasUnity</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/GTA-ASM/SanAndreasUnity</id>
    <link href="https://github.com/GTA-ASM/SanAndreasUnity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source reimplementation of GTA San Andreas game engine in Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;San Andreas Unity&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/aIojfPW.png&#34; width=&#34;320&#34; height=&#34;320&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://discord.gg/p6jjud5&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/454006273751515152.svg?sanitize=true&#34;&gt;&lt;/a&gt; &amp;nbsp; &#xA; &lt;a href=&#34;https://gtaforums.com/topic/912395-san-andreas-unity/&#34;&gt; &lt;img src=&#34;http://i.imgur.com/Fatp2jZ.png&#34; width=&#34;50&#34; height=&#34;30&#34;&gt;&lt;/a&gt; &amp;nbsp; &#xA; &lt;a href=&#34;https://www.youtube.com/channel/UCsslP7vqD06AMh6JlEy0pkg&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/YouTube_full-color_icon_%282017%29.svg/71px-YouTube_full-color_icon_%282017%29.svg.png&#34; width=&#34;30&#34; height=&#34;21&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;San Andreas Unity is an open source reimplementation of GTA San Andreas game engine in Unity.&lt;/p&gt; &#xA;&lt;p&gt;This won&#39;t be a complete reimplementation, but the focus is on gameplay features, mutliplayer, and creating a framework which will allow easy game extending and unlimited modding possibilities.&lt;/p&gt; &#xA;&lt;p&gt;For more information about the project, read this &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/wiki/About-project&#34;&gt;wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running for the first time, the game will ask you for path to GTA installation. You need to own GTA in order to play it.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Download it for &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/releases/download/v4.0/SanAndreasUnity-4.0-windows.zip&#34;&gt;Windows&lt;/a&gt;, &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/releases/download/v4.0/SanAndreasUnity-4.0-linux.zip&#34;&gt;Linux&lt;/a&gt; or &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/wiki/Running-on-Android&#34;&gt;Android&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The game is tested on Linux, Windows, Mac, and Android. It supports both Mono and IL2CPP scripting backends, so it can be built for any platform that Unity supports, provided that you can copy PC version of GTASA to target device.&lt;/p&gt; &#xA;&lt;h2&gt;Multiplayer&lt;/h2&gt; &#xA;&lt;p&gt;Game fully works in multiplayer. You can start the game as dedicated server, as a host (server &amp;amp; client at the same time), or you can connect to a server. This works on all supported platforms, which means you can start a host even on Android device.&lt;/p&gt; &#xA;&lt;p&gt;If you want to host a server, take a look at &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/wiki/Command-line&#34;&gt;command line instructions&lt;/a&gt; and &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/wiki/Server-administration&#34;&gt;server administration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone the project, including submodules: &lt;code&gt;git clone --depth 1 --recurse-submodules https://github.com/GTA-ASM/SanAndreasUnity&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;open the project with Unity 2020.3.26 or newer&lt;/li&gt; &#xA; &lt;li&gt;open startup scene located at Assets/Scenes/Startup.unity&lt;/li&gt; &#xA; &lt;li&gt;press Play button&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;In-game controls&lt;/h2&gt; &#xA;&lt;p&gt;Press Escape while in game to open pause menu. You&#39;ll see there a lot of utilities, and among them, there is a window which shows all controls.&lt;/p&gt; &#xA;&lt;h2&gt;Game modes&lt;/h2&gt; &#xA;&lt;p&gt;Game can be extended through plugins/game modes in the form of C# DLLs. More info on &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/wiki/Plugins-(Game-modes)&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://discord.gg/p6jjud5&#34;&gt;discord&lt;/a&gt; to discuss about development.&lt;/p&gt; &#xA;&lt;p&gt;You can check out issues for &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;newcomers&lt;/a&gt;, issues related to &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/issues?q=is%3Aissue+is%3Aopen+label%3Aimporting&#34;&gt;importing assets&lt;/a&gt; from original game, or the &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/issues&#34;&gt;whole list&lt;/a&gt; of issues.&lt;/p&gt; &#xA;&lt;p&gt;Issues that are in focus right now are those with &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/issues?q=is%3Aissue+is%3Aopen+label%3Apriority%3Ahigh&#34;&gt;high priority&lt;/a&gt; label and those found in &lt;a href=&#34;https://github.com/GTA-ASM/SanAndreasUnity/milestones&#34;&gt;milestones&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/557828/24571348/d964f098-1670-11e7-8759-0160dbf5bcb5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/557828/24571349/d96b7c24-1670-11e7-997d-ae15913481f8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/HX978mr.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PItR-0FF7JI&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/PItR-0FF7JI/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=hnInLUbobI8&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/hnInLUbobI8/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VDfSE3nc3oM&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/VDfSE3nc3oM/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NPCiUZ-MZGM&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/NPCiUZ-MZGM/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jasontaylordev/CleanArchitecture</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/jasontaylordev/CleanArchitecture</id>
    <link href="https://github.com/jasontaylordev/CleanArchitecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clean Architecture Solution Template for .NET 6&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;left&#34; width=&#34;116&#34; height=&#34;116&#34; src=&#34;https://raw.githubusercontent.com/jasontaylordev/CleanArchitecture/main/.github/icon.png&#34;&gt; &#xA;&lt;h1&gt;Clean Architecture Solution Template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/dotnetcore.yml&#34;&gt;&lt;img src=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/dotnetcore.yml/badge.svg?sanitize=true&#34; alt=&#34;.NET&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Clean.Architecture.Solution.Template?label=NuGet&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Clean.Architecture.Solution.Template?label=Downloads&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/p9YtBjfgGe&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/893301913662148658?label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/jasontaylordev?label=Follow&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;This is a solution template for creating a Single Page App (SPA) with Angular and ASP.NET Core following the principles of Clean Architecture. Create a new project based on this template by clicking the above &lt;strong&gt;Use this template&lt;/strong&gt; button or by installing and running the associated NuGet package (see Getting Started for full details).&lt;/p&gt; &#xA;&lt;h2&gt;Learn about Clean Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dK4Yb6-LxAk&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/dK4Yb6-LxAk/0.jpg&#34; alt=&#34;Clean Architecture with ASP.NET Core 3.0 • Jason Taylor • GOTO 2019&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-6.0&#34;&gt;ASP.NET Core 6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/ef/core/&#34;&gt;Entity Framework Core 6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/&#34;&gt;Angular 13&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbogard/MediatR&#34;&gt;MediatR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://automapper.org/&#34;&gt;AutoMapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fluentvalidation.net/&#34;&gt;FluentValidation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nunit.org/&#34;&gt;NUnit&lt;/a&gt;, &lt;a href=&#34;https://fluentassertions.com/&#34;&gt;FluentAssertions&lt;/a&gt;, &lt;a href=&#34;https://github.com/moq&#34;&gt;Moq&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/jbogard/Respawn&#34;&gt;Respawn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started is to install the &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;NuGet package&lt;/a&gt; and run &lt;code&gt;dotnet new ca-sln&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6 SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js LTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet new --install Clean.Architecture.Solution.Template&lt;/code&gt; to install the project template&lt;/li&gt; &#xA; &lt;li&gt;Create a folder for your solution and cd into it (the template will use it as project name)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet new ca-sln&lt;/code&gt; to create a new project&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;src/WebUI&lt;/code&gt; and launch the project using &lt;code&gt;dotnet run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check out my &lt;a href=&#34;https://jasontaylor.dev/clean-architecture-getting-started/&#34;&gt;blog post&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Database Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The template is configured to use an in-memory database by default. This ensures that all users will be able to run the solution without needing to set up additional infrastructure (e.g. SQL Server).&lt;/p&gt; &#xA;&lt;p&gt;If you would like to use SQL Server, you will need to update &lt;strong&gt;WebUI/appsettings.json&lt;/strong&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;UseInMemoryDatabase&#34;: false,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that the &lt;strong&gt;DefaultConnection&lt;/strong&gt; connection string within &lt;strong&gt;appsettings.json&lt;/strong&gt; points to a valid SQL Server instance.&lt;/p&gt; &#xA;&lt;p&gt;When you run the application the database will be automatically created (if necessary) and the latest migrations will be applied.&lt;/p&gt; &#xA;&lt;h3&gt;Database Migrations&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;code&gt;dotnet-ef&lt;/code&gt; for your migrations first ensure that &#34;UseInMemoryDatabase&#34; is disabled, as described within previous section. Then, add the following flags to your command (values assume you are executing from repository root)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--project src/Infrastructure&lt;/code&gt; (optional if in this folder)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--startup-project src/WebUI&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--output-dir Persistence/Migrations&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to add a new migration from the root folder:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dotnet ef migrations add &#34;SampleMigration&#34; --project src\Infrastructure --startup-project src\WebUI --output-dir Persistence\Migrations&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Domain&lt;/h3&gt; &#xA;&lt;p&gt;This will contain all entities, enums, exceptions, interfaces, types and logic specific to the domain layer.&lt;/p&gt; &#xA;&lt;h3&gt;Application&lt;/h3&gt; &#xA;&lt;p&gt;This layer contains all application logic. It is dependent on the domain layer, but has no dependencies on any other layer or project. This layer defines interfaces that are implemented by outside layers. For example, if the application need to access a notification service, a new interface would be added to application and an implementation would be created within infrastructure.&lt;/p&gt; &#xA;&lt;h3&gt;Infrastructure&lt;/h3&gt; &#xA;&lt;p&gt;This layer contains classes for accessing external resources such as file systems, web services, smtp, and so on. These classes should be based on interfaces defined within the application layer.&lt;/p&gt; &#xA;&lt;h3&gt;WebUI&lt;/h3&gt; &#xA;&lt;p&gt;This layer is a single page application based on Angular 13 and ASP.NET Core 6. This layer depends on both the Application and Infrastructure layers, however, the dependency on Infrastructure is only to support dependency injection. Therefore only &lt;em&gt;Startup.cs&lt;/em&gt; should reference Infrastructure.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you are having problems, please let us know by &lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/issues/new/choose&#34;&gt;raising a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed with the &lt;a href=&#34;https://raw.githubusercontent.com/jasontaylordev/CleanArchitecture/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leiurayer/downkyi</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/leiurayer/downkyi</id>
    <link href="https://github.com/leiurayer/downkyi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;哔哩下载姬downkyi，B站视频下载工具，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;哔哩下载姬&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/stargazers&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/network&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/issues&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/raw/main/LICENSE&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/images/app/index.png&#34; alt=&#34;Alipay&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;哔哩下载姬（DownKyi）是一个简单易用的哔哩哔哩视频下载工具，具有简洁的界面，流畅的操作逻辑。哔哩下载姬可以下载几乎所有的B站视频，并输出mp4格式的文件；采用Aria下载器多线程下载，采用FFmpeg对视频进行混流、提取音视频等操作。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/src/README.md&#34;&gt;更多详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/releases/latest&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/releases/latest&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub Release Date&#34; src=&#34;https://img.shields.io/github/release-date/leiurayer/downkyi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/leiurayer/downkyi/releases&#34; style=&#34;text-decoration:none&#34;&gt; &lt;img alt=&#34;GitHub all releases&#34; src=&#34;https://img.shields.io/github/downloads/leiurayer/downkyi/total&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;p&gt;如果这个项目对您有很大帮助，并且您希望支持该项目的开发和维护，请随时扫描一下二维码进行捐赠。非常感谢您的捐款，谢谢！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/images/Alipay.png&#34; alt=&#34;Alipay&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/images/WeChat.png&#34; alt=&#34;WeChat&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发&lt;/h2&gt; &#xA;&lt;h3&gt;x86 &amp;amp; x64&lt;/h3&gt; &#xA;&lt;p&gt;发布的压缩包中aria2c.exe和ffmpeg.exe均为32位，如果需要请用下面链接中的文件替换。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/third_party/aria2-1.36.0-win-32bit-build1.zip&#34;&gt;aria2-1.36.0-win-32bit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/third_party/aria2-1.36.0-win-64bit-build1.zip&#34;&gt;aria2-1.36.0-win-64bit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leiurayer/FFmpeg-Builds/releases/tag/latest&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;相关项目&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SocialSisterYi/bilibili-API-collect&#34;&gt;哔哩哔哩-API收集整理&lt;/a&gt;：B站API归档&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PrismLibrary/Prism&#34;&gt;Prism&lt;/a&gt;：MVVM框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leiurayer/WebPSharp&#34;&gt;WebPSharp&lt;/a&gt;：WebP格式图片支持，&lt;a href=&#34;https://raw.githubusercontent.com/leiurayer/downkyi/main/third_party/WebPSharp.0.5.1.nupkg&#34;&gt;NuGet程序包&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责申明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;本软件只提供视频解析，不提供任何资源上传、存储到服务器的功能。&lt;/li&gt; &#xA; &lt;li&gt;本软件仅解析来自B站的内容，不会对解析到的音视频进行二次编码，部分视频会进行有限的格式转换、拼接等操作。&lt;/li&gt; &#xA; &lt;li&gt;本软件解析得到的所有内容均来自B站UP主上传、分享，其版权均归原作者所有。内容提供者、上传者（UP主）应对其提供、上传的内容承担全部责任。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;本软件提供的所有内容，仅可用作学习交流使用，未经原作者授权，禁止用于其他用途。请在下载24小时内删除。为尊重作者版权，请前往资源的原始发布网站观看，支持原创，谢谢。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;因使用本软件产生的版权问题，软件作者概不负责。&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dotnetcore/FastGithub</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnetcore/FastGithub</id>
    <link href="https://github.com/dotnetcore/FastGithub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;github加速神器，解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FastGithub&lt;/h1&gt; &#xA;&lt;p&gt;github加速神器，解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题。&lt;/p&gt; &#xA;&lt;h3&gt;0 写在前面&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不具备“翻墙”功能,也没有相关的计划&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不支持Windows7等已被发行方停止支持的操作系统，并且也不会主动提供支持&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不能为您的游戏加速&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub没有主动在github之外的任何渠道发布&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1 程序下载&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnetcore/fastgithub/releases&#34;&gt;github-release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Q群1 &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=cx_MgEIvoo1EMkrKg5tXz8vMdtPap3Rw&amp;amp;jump_from=webapi&#34;&gt;307306673&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群2 &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=6BBJ1nrJwe1o1E4-NJfwSOP-C4sMGc4q&amp;amp;jump_from=webapi&#34;&gt;742376932&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群3 &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=1YpGW564&#34;&gt;597131950&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群4 &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=bThQHk5P&#34;&gt;492258685&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2 部署方式&lt;/h3&gt; &#xA;&lt;h4&gt;2.1 windows-x64桌面&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;双击运行FastGithub.UI.exe&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.2 windows-x64服务&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fastgithub.exe start&lt;/code&gt; // 以windows服务安装并启动&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fastgithub.exe stop&lt;/code&gt; // 以windows服务卸载并删除&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.3 linux-x64终端&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.4 linux-x64服务&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub start&lt;/code&gt; // 以systemd服务安装并启动&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub stop&lt;/code&gt; // 以systemd服务卸载并删除&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.5 macOS-x64&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;双击运行fastgithub&lt;/li&gt; &#xA; &lt;li&gt;安装cacert/fastgithub.cer并设置信任&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnetcore/FastGithub/raw/master/MacOSXConfig.md&#34;&gt;具体配置详情&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.6 docker-compose一键部署&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;准备好docker 18.09, docker-compose.&lt;/li&gt; &#xA; &lt;li&gt;在源码目录下，有一个docker-compose.yaml 文件，专用于在实际项目中，临时使用github.com源码，而做的demo配置。&lt;/li&gt; &#xA; &lt;li&gt;根据自己的需要更新docker-compose.yaml中的sample和build镜像即可完成拉github.com源码加速，并基于源码做后续的操作。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3 软件功能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供域名的纯净IP解析；&lt;/li&gt; &#xA; &lt;li&gt;提供IP测速并选择最快的IP；&lt;/li&gt; &#xA; &lt;li&gt;提供域名的tls连接自定义配置；&lt;/li&gt; &#xA; &lt;li&gt;google的CDN资源替换，解决大量国外网站无法加载js和css的问题；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4 证书验证&lt;/h3&gt; &#xA;&lt;h4&gt;4.1 git&lt;/h4&gt; &#xA;&lt;p&gt;git操作提示&lt;code&gt;SSL certificate problem&lt;/code&gt;&lt;br&gt; 需要关闭git的证书验证：&lt;code&gt;git config --global http.sslverify false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4.2 firefox&lt;/h4&gt; &#xA;&lt;p&gt;firefox提示&lt;code&gt;连接有潜在的安全问题&lt;/code&gt;&lt;br&gt; 设置-&amp;gt;隐私与安全-&amp;gt;证书-&amp;gt;查看证书-&amp;gt;证书颁发机构，导入cacert/fastgithub.cer，勾选“信任由此证书颁发机构来标识网站”&lt;/p&gt; &#xA;&lt;h3&gt;5 安全性说明&lt;/h3&gt; &#xA;&lt;p&gt;FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。&lt;/p&gt; &#xA;&lt;h3&gt;6 合法性说明&lt;/h3&gt; &#xA;&lt;p&gt;《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于VPN的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ardalis/CleanArchitecture</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/ardalis/CleanArchitecture</id>
    <link href="https://github.com/ardalis/CleanArchitecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clean Architecture Solution Template: A starting point for Clean Architecture with ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/actions&#34;&gt;&lt;img src=&#34;https://github.com/ardalis/CleanArchitecture/workflows/.NET%20Core/badge.svg?sanitize=true&#34; alt=&#34;.NET Core&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/actions/workflows/publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/ardalis/CleanArchitecture/actions/workflows/publish.yml/badge.svg?sanitize=true&#34; alt=&#34;publish Ardalis.CleanArchitecture Template to nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Ardalis.CleanArchitecture.Template/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Ardalis.CleanArchitecture.Template?label=Ardalis.CleanArchitecture.Template&#34; alt=&#34;Ardalis.CleanArchitecture.Template on NuGet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ardalis&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/ardalis.svg?label=Follow%20@ardalis&#34; alt=&#34;Follow @ardalis&#34;&gt; &lt;/a&gt; &amp;nbsp; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=nimblepros&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/nimblepros.svg?label=Follow%20@nimblepros&#34; alt=&#34;Follow @nimblepros&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Clean Architecture&lt;/h1&gt; &#xA;&lt;p&gt;A starting point for Clean Architecture with ASP.NET Core. &lt;a href=&#34;https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;Clean Architecture&lt;/a&gt; is just the latest in a series of names for the same loosely-coupled, dependency-inverted architecture. You will also find it named &lt;a href=&#34;http://alistair.cockburn.us/Hexagonal+architecture&#34;&gt;hexagonal&lt;/a&gt;, &lt;a href=&#34;http://www.dossier-andreas.net/software_architecture/ports_and_adapters.html&#34;&gt;ports-and-adapters&lt;/a&gt;, or &lt;a href=&#34;http://jeffreypalermo.com/blog/the-onion-architecture-part-1/&#34;&gt;onion architecture&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This architecture is used in the &lt;a href=&#34;https://www.pluralsight.com/courses/fundamentals-domain-driven-design&#34;&gt;DDD Fundamentals course&lt;/a&gt; by &lt;a href=&#34;https://ardalis.com&#34;&gt;Steve Smith&lt;/a&gt; and &lt;a href=&#34;https://thedatafarm.com/&#34;&gt;Julie Lerman&lt;/a&gt;. Contact Steve&#39;s company, &lt;a href=&#34;https://nimblepros.com/&#34;&gt;NimblePros&lt;/a&gt;, for Clean Architecture or DDD training and/or implementation assistance for your team.&lt;/p&gt; &#xA;&lt;h2&gt;Table Of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#clean-architecture&#34;&gt;Clean Architecture&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#table-of-contents&#34;&gt;Table Of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#give-a-star-star&#34;&gt;Give a Star! &lt;span&gt;⭐&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GregTrevellick.CleanArchitecture&#34;&gt;Now available as a project template&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#versions&#34;&gt;Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#learn-more&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#using-the-visual-studio-item-template&#34;&gt;Using the Visual Studio Item Template&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#using-the-dotnet-cli-template&#34;&gt;Using the dotnet CLI template&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#using-the-github-repository&#34;&gt;Using the GitHub Repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#running-migrations&#34;&gt;Running Migrations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#goals&#34;&gt;Goals&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#history-and-shameless-plug-section&#34;&gt;History and Shameless Plug Section&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#design-decisions-and-dependencies&#34;&gt;Design Decisions and Dependencies&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#the-core-project&#34;&gt;The Core Project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#the-sharedkernel-project&#34;&gt;The SharedKernel Project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#the-infrastructure-project&#34;&gt;The Infrastructure Project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#the-web-project&#34;&gt;The Web Project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#the-test-projects&#34;&gt;The Test Projects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#patterns-used&#34;&gt;Patterns Used&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#domain-events&#34;&gt;Domain Events&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ardalis/CleanArchitecture/main/#related-projects&#34;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Give a Star! &lt;span&gt;⭐&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you like or are using this project to learn or start your solution, please give it a star. Thanks!&lt;/p&gt; &#xA;&lt;p&gt;Or if you&#39;re feeling really generous, we now support GitHub sponsorships - see the button above.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;Now available as a &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GregTrevellick.CleanArchitecture&#34;&gt;project template&lt;/a&gt; within Visual Studio.&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;The master branch is now using .NET 6. If you need a previous version use one of these tagged commits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/releases/tag/dotnet-core-5&#34;&gt;5.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/tree/dotnet-core-3.1&#34;&gt;3.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/tree/dotnet-core-2.2&#34;&gt;2.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/tree/dotnet-core-2.0&#34;&gt;2.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/Ardalis/search?query=clean%20architecture&#34;&gt;Live Stream Recordings Working on Clean Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://player.fm/series/net-rocks/clean-architecture-with-steve-smith&#34;&gt;DotNetRocks Podcast Discussion with Steve &#34;ardalis&#34; Smith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=k8cZUW4MS3I&#34;&gt;Fritz and Friends Streaming Discussion with Steve &#34;ardalis&#34; Smith&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To use this template, there are a few options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install using &lt;code&gt;dotnet new&lt;/code&gt; (preferred - see below)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GregTrevellick.CleanArchitecture&#34;&gt;Install the Visual Studio Template&lt;/a&gt; and use it within Visual Studio&lt;/li&gt; &#xA; &lt;li&gt;Download this Repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are all covered below.&lt;/p&gt; &#xA;&lt;h2&gt;Using the Visual Studio Item Template&lt;/h2&gt; &#xA;&lt;p&gt;After installing the template, you should be able to create a new project in Visual Studio and search for Clean Architecture. You should see the template appear in your list of project templates:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/782127/80412393-cd116880-889b-11ea-886f-9b91fffbc767.png&#34; alt=&#34;Clean Architecture Project Template&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After choosing this template, provide a project name and finish the project creation wizard. You should be all set.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/782127/80412455-e5818300-889b-11ea-8219-379581583a92.png&#34; alt=&#34;Clean Architecture Project Template step 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that the template is generally only updated with major updates to the project. The GitHub repository will always have the latest bug fixes and enhancements.&lt;/p&gt; &#xA;&lt;h2&gt;Using the dotnet CLI template&lt;/h2&gt; &#xA;&lt;p&gt;First, install the template from &lt;a href=&#34;https://www.nuget.org/packages/Ardalis.CleanArchitecture.Template/&#34;&gt;NuGet (https://www.nuget.org/packages/Ardalis.CleanArchitecture.Template/)&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet new -i Ardalis.CleanArchitecture.Template&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the template in the list of templates from &lt;code&gt;dotnet new&lt;/code&gt; after this install successfully. Look for &#34;Steve Smith Clean Architecture&#34; with Short Name of &#34;clean-arch&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Navigate to the directory where you will put the new solution.&lt;/p&gt; &#xA;&lt;p&gt;Run this command to create the solution structure in a subfolder name &lt;code&gt;Your.ProjectName&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet new clean-arch -o Your.ProjectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Your.ProjectName&lt;/code&gt; directory and solution file will be created, and inside that will be all of your new solution contents, properly namespaced and ready to run/test!&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;img src=&#34;https://user-images.githubusercontent.com/782127/101661723-9fd28e80-3a16-11eb-8be4-f9195d825ad6.png&#34; alt=&#34;powershell screenshot showing steps&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks &lt;a href=&#34;https://github.com/dahlsailrunner&#34;&gt;@dahlsailrunner&lt;/a&gt; for your help getting this working!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Known Issue&lt;/strong&gt;: Don&#39;t include hyphens in the name. See &lt;a href=&#34;https://github.com/ardalis/CleanArchitecture/issues/201&#34;&gt;#201&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Using the GitHub Repository&lt;/h2&gt; &#xA;&lt;p&gt;To get started based on this repository, you need to get a copy locally. You have three options: fork, clone, or download. Most of the time, you probably just want to download.&lt;/p&gt; &#xA;&lt;p&gt;You should &lt;strong&gt;download the repository&lt;/strong&gt;, unblock the zip file, and extract it to a new folder if you just want to play with the project or you wish to use it as the starting point for an application.&lt;/p&gt; &#xA;&lt;p&gt;You should &lt;strong&gt;fork this repository&lt;/strong&gt; only if you plan on submitting a pull request. Or if you&#39;d like to keep a copy of a snapshot of the repository in your own GitHub account.&lt;/p&gt; &#xA;&lt;p&gt;You should &lt;strong&gt;clone this repository&lt;/strong&gt; if you&#39;re one of the contributors and you have commit access to it. Otherwise you probably want one of the other options.&lt;/p&gt; &#xA;&lt;h2&gt;Running Migrations&lt;/h2&gt; &#xA;&lt;p&gt;In Visual Studio, open the Package Manager Console, and run &lt;code&gt;Add-Migration InitialMigrationName -StartupProject Your.ProjectName.Web -Context AppDbContext -Project Your.ProjectName.Infrastructure&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use SqlServer, change &lt;code&gt;options.UseSqlite(connectionString));&lt;/code&gt; to &lt;code&gt;options.UseSqlServer(connectionString));&lt;/code&gt; in the &lt;code&gt;Your.ProjectName.Infrastructure.StartupSetup&lt;/code&gt; file. Also remember to replace the &lt;code&gt;SqliteConnection&lt;/code&gt; with &lt;code&gt;DefaultConnection&lt;/code&gt; in the &lt;code&gt;Your.ProjectName.Web.Program&lt;/code&gt; file, which points to your Database Server.&lt;/p&gt; &#xA;&lt;h1&gt;Goals&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this repository is to provide a basic solution structure that can be used to build Domain-Driven Design (DDD)-based or simply well-factored, SOLID applications using .NET Core. Learn more about these topics here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/csharp-solid-principles&#34;&gt;SOLID Principles for C# Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/principles-oo-design&#34;&gt;SOLID Principles of Object Oriented Design&lt;/a&gt; (the original, longer course)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/domain-driven-design-fundamentals&#34;&gt;Domain-Driven Design Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re used to building applications as single-project or as a set of projects that follow the traditional UI -&amp;gt; Business Layer -&amp;gt; Data Access Layer &#34;N-Tier&#34; architecture, I recommend you check out these two courses (ideally before DDD Fundamentals):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/n-tier-apps-part1&#34;&gt;Creating N-Tier Applications in C#, Part 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/n-tier-csharp-part2&#34;&gt;Creating N-Tier Applications in C#, Part 2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I also maintain Microsoft&#39;s reference application, eShopOnWeb, and its associated free eBook. Check them out here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnWeb&#34;&gt;eShopOnWeb on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/webappebook&#34;&gt;Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure&lt;/a&gt; (eBook)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History and Shameless Plug Section&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve used this starter kit to teach the basics of ASP.NET Core using Domain-Driven Design concepts and patterns for some time now (starting when ASP.NET Core was still in pre-release). Typically I teach a one- or two-day hands-on workshop ahead of events like DevIntersection, or private on-site workshops for companies looking to bring their teams up to speed with the latest development technologies and techniques. Feel free to &lt;a href=&#34;https://ardalis.com/contact-us&#34;&gt;contact me&lt;/a&gt; if you&#39;d like information about upcoming workshops.&lt;/p&gt; &#xA;&lt;h1&gt;Design Decisions and Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this sample is to provide a fairly bare-bones starter kit for new projects. It does not include every possible framework, tool, or feature that a particular enterprise application might benefit from. Its choices of technology for things like data access are rooted in what is the most common, accessible technology for most business software developers using Microsoft&#39;s technology stack. It doesn&#39;t (currently) include extensive support for things like logging, monitoring, or analytics, though these can all be added easily. Below is a list of the technology dependencies it includes, and why they were chosen. Most of these can easily be swapped out for your technology of choice, since the nature of this architecture is to support modularity and encapsulation.&lt;/p&gt; &#xA;&lt;h2&gt;The Core Project&lt;/h2&gt; &#xA;&lt;p&gt;The Core project is the center of the Clean Architecture design, and all other project dependencies should point toward it. As such, it has very few external dependencies. The one exception in this case is the &lt;code&gt;System.Reflection.TypeExtensions&lt;/code&gt; package, which is used by &lt;code&gt;ValueObject&lt;/code&gt; to help implement its &lt;code&gt;IEquatable&amp;lt;&amp;gt;&lt;/code&gt; interface. The Core project should include things like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entities&lt;/li&gt; &#xA; &lt;li&gt;Aggregates&lt;/li&gt; &#xA; &lt;li&gt;Domain Events&lt;/li&gt; &#xA; &lt;li&gt;DTOs&lt;/li&gt; &#xA; &lt;li&gt;Interfaces&lt;/li&gt; &#xA; &lt;li&gt;Event Handlers&lt;/li&gt; &#xA; &lt;li&gt;Domain Services&lt;/li&gt; &#xA; &lt;li&gt;Specifications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The SharedKernel Project&lt;/h2&gt; &#xA;&lt;p&gt;Many solutions will also reference a separate &lt;strong&gt;Shared Kernel&lt;/strong&gt; project/package. I recommend creating a separate SharedKernel project and solution if you will require sharing code between multiple &lt;a href=&#34;https://ardalis.com/encapsulation-boundaries-large-and-small/&#34;&gt;bounded contexts&lt;/a&gt; (see &lt;a href=&#34;https://www.pluralsight.com/courses/domain-driven-design-fundamentals&#34;&gt;DDD Fundamentals&lt;/a&gt;). I further recommend this be published as a NuGet package (most likely privately within your organization) and referenced as a NuGet dependency by those projects that require it. For this sample, in the interest of simplicity, I&#39;ve added a SharedKernel project to the solution. It contains types that would likely be shared between multiple bounded contexts (VS solutions, typically), in my experience. If you want to see an &lt;a href=&#34;https://www.nuget.org/packages/PluralsightDdd.SharedKernel/&#34;&gt;example of a SharedKernel package, the one I use in my updated Pluralsight DDD course is on NuGet here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The Infrastructure Project&lt;/h2&gt; &#xA;&lt;p&gt;Most of your application&#39;s dependencies on external resources should be implemented in classes defined in the Infrastructure project. These classes should implement interfaces defined in Core. If you have a very large project with many dependencies, it may make sense to have multiple Infrastructure projects (e.g. Infrastructure.Data), but for most projects one Infrastructure project with folders works fine. The sample includes data access and domain event implementations, but you would also add things like email providers, file access, web api clients, etc. to this project so they&#39;re not adding coupling to your Core or UI projects.&lt;/p&gt; &#xA;&lt;p&gt;The Infrastructure project depends on &lt;code&gt;Microsoft.EntityFrameworkCore.SqlServer&lt;/code&gt; and &lt;code&gt;Autofac&lt;/code&gt;. The former is used because it&#39;s built into the default ASP.NET Core templates and is the least common denominator of data access. If desired, it can easily be replaced with a lighter-weight ORM like Dapper. Autofac (formerly StructureMap) is used to allow wireup of dependencies to take place closest to where the implementations reside. In this case, an InfrastructureRegistry class can be used in the Infrastructure class to allow wireup of dependencies there, without the entry point of the application even having to have a reference to the project or its types. &lt;a href=&#34;https://ardalis.com/avoid-referencing-infrastructure-in-visual-studio-solutions&#34;&gt;Learn more about this technique&lt;/a&gt;. The current implementation doesn&#39;t include this behavior - it&#39;s something I typically cover and have students add themselves in my workshops.&lt;/p&gt; &#xA;&lt;h2&gt;The Web Project&lt;/h2&gt; &#xA;&lt;p&gt;The entry point of the application is the ASP.NET Core web project. This is actually a console application, with a &lt;code&gt;public static void Main&lt;/code&gt; method in &lt;code&gt;Program.cs&lt;/code&gt;. It currently uses the default MVC organization (Controllers and Views folders) as well as most of the default ASP.NET Core project template code. This includes its configuration system, which uses the default &lt;code&gt;appsettings.json&lt;/code&gt; file plus environment variables, and is configured in &lt;code&gt;Startup.cs&lt;/code&gt;. The project delegates to the &lt;code&gt;Infrastructure&lt;/code&gt; project to wire up its services using Autofac.&lt;/p&gt; &#xA;&lt;h2&gt;The Test Projects&lt;/h2&gt; &#xA;&lt;p&gt;Test projects could be organized based on the kind of test (unit, functional, integration, performance, etc.) or by the project they are testing (Core, Infrastructure, Web), or both. For this simple starter kit, the test projects are organized based on the kind of test, with unit, functional and integration test projects existing in this solution. In terms of dependencies, there are three worth noting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/xunit&#34;&gt;xunit&lt;/a&gt; I&#39;m using xunit because that&#39;s what ASP.NET Core uses internally to test the product. It works great and as new versions of ASP.NET Core ship, I&#39;m confident it will continue to work well with it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Moq/&#34;&gt;Moq&lt;/a&gt; I&#39;m using Moq as a mocking framework for white box behavior-based tests. If I have a method that, under certain circumstances, should perform an action that isn&#39;t evident from the object&#39;s observable state, mocks provide a way to test that. I could also use my own Fake implementation, but that requires a lot more typing and files. Moq is great once you get the hang of it, and assuming you don&#39;t have to mock the world (which we don&#39;t in this case because of good, modular design).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.AspNetCore.TestHost&#34;&gt;Microsoft.AspNetCore.TestHost&lt;/a&gt; I&#39;m using TestHost to test my web project using its full stack, not just unit testing action methods. Using TestHost, you make actual HttpClient requests without going over the wire (so no firewall or port configuration issues). Tests run in memory and are very fast, and requests exercise the full MVC stack, including routing, model binding, model validation, filters, etc.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Patterns Used&lt;/h1&gt; &#xA;&lt;p&gt;This solution template has code built in to support a few common patterns, especially Domain-Driven Design patterns. Here is a brief overview of how a few of them work.&lt;/p&gt; &#xA;&lt;h2&gt;Domain Events&lt;/h2&gt; &#xA;&lt;p&gt;Domain events are a great pattern for decoupling a trigger for an operation from its implementation. This is especially useful from within domain entities since the handlers of the events can have dependencies while the entities themselves typically do not. In the sample, you can see this in action with the &lt;code&gt;ToDoItem.MarkComplete()&lt;/code&gt; method. The following sequence diagram demonstrates how the event and its handler are used when an item is marked complete through a web API endpoint.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/782127/75702680-216ce300-5c73-11ea-9187-ec656192ad3b.png&#34; alt=&#34;Domain Event Sequence Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/apiendpoints&#34;&gt;ApiEndpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/guardclauses&#34;&gt;GuardClauses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/result&#34;&gt;Result&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardalis/specification&#34;&gt;Specification&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fullstackhero/dotnet-webapi-boilerplate</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/fullstackhero/dotnet-webapi-boilerplate</id>
    <link href="https://github.com/fullstackhero/dotnet-webapi-boilerplate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clean Architecture Template for .NET 6.0 WebApi built with Multitenancy Support.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fullstackhero/dotnet-webapi-boilerplate?color=2da44e&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yQWpShsKrf&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/878181478972928011?color=%237289da&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=%237289da&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FullStackHero.WebAPI.Boilerplate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/FullStackHero.WebAPI.Boilerplate?label=FullStackHero.WebAPI.Boilerplate&#34; alt=&#34;FullStackHero.WebAPI.Boilerplate on NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FullStackHero.WebAPI.Boilerplate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/FullStackHero.WebAPI.Boilerplate?color=2da44e&amp;amp;label=nuget%20downloads&amp;amp;logo=nuget&#34; alt=&#34;Nuget downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=iammukeshm&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/iammukeshm.svg?label=Follow%20@iammukeshm&#34; alt=&#34;Follow @iammukeshm&#34;&gt; &lt;/a&gt; &amp;nbsp; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=codewithmukesh&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/codewithmukesh.svg?label=Follow%20@codewithmukesh&#34; alt=&#34;Follow @codewithmukesh&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://codewithmukesh.com/wp-content/uploads/2022/02/fullstackhero-dotnet-webapi-banner.png&#34; alt=&#34;fullstackhero&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s fullstackhero&#39;s .NET Web API Boilerplate?&lt;/h2&gt; &#xA;&lt;p&gt;fullstackhero&#39;s .NET Web API Boilerplate is a starting point for your next &lt;code&gt;.NET 6 Clean Architecture Project&lt;/code&gt; that incorporates the most essential packages and features your projects will ever need including out of the box Multi-Tenancy support. This project can save well over &lt;code&gt;200+ hours&lt;/code&gt; of development time for your team.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As the name suggests, this is an API / Server Boilerplate. You can find other Client Boilerplates that consume this API under &lt;code&gt;@fullstackhero&lt;/code&gt; handle.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Find &lt;code&gt;Blazor WebAssembly Boilerplate&lt;/code&gt; here - &lt;a href=&#34;https://github.com/fullstackhero/blazor-wasm-boilerplate&#34;&gt;https://github.com/fullstackhero/blazor-wasm-boilerplate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this repository is to provide a complete and feature-rich starting point for any .NET Developer / Team to kick-start their next major project using .NET 6 Web API. This also serves the purpose of learning advanced concepts and implementations such as &lt;code&gt;Multitenancy, CQRS, Onion Architecture, Clean Coding standards&lt;/code&gt; and so on.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Built on .NET 6.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Follows Clean Architecture Principles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Domain Driven Design&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Completely Documented at &lt;a href=&#34;https://fullstackhero.net&#34;&gt;fullstackhero.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi Tenancy Support with Finbuckle &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create Tenants with Multi Database / Shared Database Support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Activate / Deactivate Tenants on Demand&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upgrade Subscription of Tenants - Add More Validity Months to each tenant!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports MySQL, MSSQL, Oracle &amp;amp; PostgreSQL!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to See More!&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Uses Entity Framework Core as DB Abstraction&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Flexible Repository Pattern&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dapper Integration for Optimal Performance&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Serilog Integration with various Sinks - File, SEQ, Kibana&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenAPI - Supports Client Service Generation&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mapster Integration for Quicker Mapping&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API Versioning&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Response Caching - Distributed Caching + REDIS&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fluent Validations&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Audit Logging&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Advanced User &amp;amp; Role Based Permission Management&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code Analysis &amp;amp; StyleCop Integration with Rulesets&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JSON Based Localization with Caching&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hangfire Support - Secured Dashboard&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Storage Service&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Test Projects&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JWT &amp;amp; Azure AD Authentication&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MediatR - CQRS&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SignalR Notifications&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &amp;amp; Much More&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read Documentation related to this Boilerplate here - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/&#34;&gt;https://fullstackhero.net/dotnet-webapi-boilerplate/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Feel free to contribute to the Documentation Repository - &lt;a href=&#34;https://github.com/fullstackhero/docs&#34;&gt;https://github.com/fullstackhero/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with this Boilerplate, here are the available options.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install using &lt;code&gt;dotnet new&lt;/code&gt; . Use this for release versions of the Boilerplate only.&lt;/li&gt; &#xA; &lt;li&gt;Fork the Repository. Use this if you want to always keep your version of the Boilerplate up-to date with the latest changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that your DEV enviroment is setup, &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/&#34;&gt;Read the Development Environment Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Forking the Repository&lt;/h2&gt; &#xA;&lt;p&gt;You would probably need to take this approach if you want to keep your source code upto date with the latest changes. To get started based on this repository, you need to get a copy locally. You have three options: fork, clone, or download.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make a fork of this repository in your Github account.&lt;/li&gt; &#xA; &lt;li&gt;Create your new &lt;code&gt;dotnet-webapi-boilerplate&lt;/code&gt; personal project by cloning the forked repository on your personal github.&lt;/li&gt; &#xA; &lt;li&gt;Setup an upstream remote on your personal project pointing to your forked repository using command &lt;code&gt;git remote add upstream https://github.com/{githubuseraccount}/dotnet-webapi-boilerplate&lt;/code&gt; and &lt;code&gt;git remote set-url --push upstream DISABLE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For step by step instructions, &lt;a href=&#34;https://discord.com/channels/878181478972928011/892573122186838046/933513103688224838&#34;&gt;follow this&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/0xjac/85097472043b697ab57ba1b1c7530274&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using the .NET CLI&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;0.0.6 RC is now released!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Open up your Command Prompt / Powershell and run the following command to install the solution template.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet new --install FullStackHero.WebAPI.Boilerplate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would install the &lt;code&gt;fullstackhero .NET WebAPI Boilerplate&lt;/code&gt; template globally on your machine. With that done, let&#39;s see how you can start generating complete .NET WebAPI Solutions seamlessly.&lt;/p&gt; &#xA;&lt;p&gt;Simply navigate to a new directory (wherever you want to place your new solution), and open up Command Prompt at the opened directory.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command. Note that, in this demonstration, I am naming my new solution as &lt;code&gt;FSH.Starter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet new fsh-api -o FSH.Starter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For further steps and details, &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/&#34;&gt;Read the Getting Started Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important Links &amp;amp; Documentations&lt;/h2&gt; &#xA;&lt;p&gt;Overview - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Getting Started - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Development Environment - &lt;a href=&#34;https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/&#34;&gt;Learn about setting up the DEV environment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Track Progress - &lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/milestone/1&#34;&gt;Release 1.0 Milestones&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Participate in Discussions - &lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/discussions&#34;&gt;QNA &amp;amp; General Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join our Discord - &lt;a href=&#34;https://discord.gg/gdgHRt4mMw&#34;&gt;fullstackhero @ Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelogs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/raw/main/Changelogs.md&#34;&gt;View Complete Changelogs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord &lt;a href=&#34;https://discord.gg/gdgHRt4mMw&#34;&gt;@fullstackhero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook Page &lt;a href=&#34;https://facebook.com/codewithmukesh&#34;&gt;@codewithmukesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Youtube Channel &lt;a href=&#34;https://youtube.com/c/codewithmukesh&#34;&gt;@codewithmukesh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Submit your PR and join the elite list!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/fullstackhero/dotnet-webapi-boilerplate/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=fullstackhero/dotnet-webapi-boilerplate&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed with the &lt;a href=&#34;https://raw.githubusercontent.com/fullstackhero/dotnet-webapi-boilerplate/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support &lt;span&gt;⭐&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Has this Project helped you learn something New? or Helped you at work? Here are a few ways by which you can support.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Leave a star! &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recommend this awesome project to your colleagues. 🥇&lt;/li&gt; &#xA; &lt;li&gt;Do consider endorsing me on LinkedIn for ASP.NET Core - &lt;a href=&#34;https://codewithmukesh.com/linkedin&#34;&gt;Connect via LinkedIn&lt;/a&gt; 🦸&lt;/li&gt; &#xA; &lt;li&gt;Or, If you want to support this project in the long run, &lt;a href=&#34;https://www.buymeacoffee.com/codewithmukesh&#34;&gt;consider buying me a coffee&lt;/a&gt;! ☕&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/codewithmukesh&#34;&gt;&lt;img width=&#34;250&#34; alt=&#34;black-button&#34; src=&#34;https://user-images.githubusercontent.com/31455818/138557309-27587d91-7b82-4cab-96bb-90f4f4e600f1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Cysharp/UniTask</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/Cysharp/UniTask</id>
    <link href="https://github.com/Cysharp/UniTask" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Cysharp/UniTask/actions&#34;&gt;&lt;img src=&#34;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Cysharp/UniTask/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; &#xA; &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; &#xA; &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; &#xA; &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; &#xA; &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; &#xA; &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; &#xA; &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For technical details, see blog post: &lt;a href=&#34;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&#34;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&#34;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&#34;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&#34;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&#34;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&#34;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&#34;&gt;Progress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&#34;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&#34;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&#34;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&#34;&gt;External Assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&#34;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&#34;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&#34;&gt;Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&#34;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&#34;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&#34;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&#34;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&#34;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&#34;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&#34;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&#34;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&#34;&gt;API References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&#34;&gt;UPM Package&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&#34;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-openupm&#34;&gt;Install via OpenUPM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&#34;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Install via &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&#34;&gt;UPM package&lt;/a&gt; or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&#34;https://github.com/Cysharp/UniTask/releases&#34;&gt;UniTask/releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// extension awaiter/methods can be used by this namespace&#xA;using Cysharp.Threading.Tasks;&#xA;&#xA;// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;&#xA;// zero allocation and fast excution for zero overhead async/await integrate with Unity&#xA;async UniTask&amp;lt;string&amp;gt; DemoAsync()&#xA;{&#xA;    // You can await Unity&#39;s AsyncObject&#xA;    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;foo&#34;);&#xA;    var txt = (await UnityWebRequest.Get(&#34;https://...&#34;).SendWebRequest()).downloadHandler.text;&#xA;    await SceneManager.LoadSceneAsync(&#34;scene2&#34;);&#xA;&#xA;    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject&#xA;    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;bar&#34;).WithCancellation(this.GetCancellationTokenOnDestroy());&#xA;&#xA;    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;&#xA;    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;baz&#34;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));&#xA;&#xA;    // await frame-based operation like a coroutine&#xA;    await UniTask.DelayFrame(100); &#xA;&#xA;    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);&#xA;    &#xA;    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)&#xA;    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);&#xA;&#xA;    // replacement of yield return null&#xA;    await UniTask.Yield();&#xA;    await UniTask.NextFrame();&#xA;&#xA;    // replacement of WaitForEndOfFrame(requires MonoBehaviour(CoroutineRunner))&#xA;    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour&#xA;&#xA;    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))&#xA;    await UniTask.WaitForFixedUpdate();&#xA;    &#xA;    // replacement of yield return WaitUntil&#xA;    await UniTask.WaitUntil(() =&amp;gt; isActive == false);&#xA;&#xA;    // special helper of WaitUntil&#xA;    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);&#xA;&#xA;    // You can await IEnumerator coroutines&#xA;    await FooCoroutineEnumerator();&#xA;&#xA;    // You can await a standard task&#xA;    await Task.Run(() =&amp;gt; 100);&#xA;&#xA;    // Multithreading, run on ThreadPool under this code&#xA;    await UniTask.SwitchToThreadPool();&#xA;&#xA;    /* work on ThreadPool */&#xA;&#xA;    // return to MainThread(same as `ObserveOnMainThread` in UniRx)&#xA;    await UniTask.SwitchToMainThread();&#xA;&#xA;    // get async webrequest&#xA;    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)&#xA;    {&#xA;        var op = await req.SendWebRequest();&#xA;        return op.downloadHandler.text;&#xA;    }&#xA;&#xA;    var task1 = GetTextAsync(UnityWebRequest.Get(&#34;http://google.com&#34;));&#xA;    var task2 = GetTextAsync(UnityWebRequest.Get(&#34;http://bing.com&#34;));&#xA;    var task3 = GetTextAsync(UnityWebRequest.Get(&#34;http://yahoo.com&#34;));&#xA;&#xA;    // concurrent async-wait and get results easily by tuple syntax&#xA;    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);&#xA;&#xA;    // shorthand of WhenAll, tuple can await directly&#xA;    var (google2, bing2, yahoo2) = await (task1, task2, task3);&#xA;&#xA;    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).&#xA;    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&#34;Asset not found&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; &#xA;&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&#34;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&#34;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; &#xA;&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;* await asyncOperation;&#xA;* .WithCancellation(CancellationToken);&#xA;* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&#34;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&#34;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTaskVoid LoadManyAsync()&#xA;{&#xA;    // parallel load.&#xA;    var (a, b, c) = await UniTask.WhenAll(&#xA;        LoadAsSprite(&#34;foo&#34;),&#xA;        LoadAsSprite(&#34;bar&#34;),&#xA;        LoadAsSprite(&#34;baz&#34;));&#xA;}&#xA;&#xA;async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)&#xA;{&#xA;    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);&#xA;    return (resource as Sprite);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()&#xA;{&#xA;    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();&#xA;&#xA;    // when complete, call utcs.TrySetResult();&#xA;    // when failed, call utcs.TrySetException();&#xA;    // when cancel, call utcs.TrySetCanceled();&#xA;&#xA;    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; &#xA;&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; &#xA;&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&#34;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following operations should never be performed on a ValueTask&#xA;  &lt;tresult&gt;&#xA;    instance:&#xA;  &lt;/tresult&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var task = UniTask.DelayFrame(10);&#xA;await task;&#xA;await task; // NG, throws Exception&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; &#xA;&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; &#xA;&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; &#xA;&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&#34;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cts = new CancellationTokenSource();&#xA;&#xA;cancelButton.onClick.AddListener(() =&amp;gt;&#xA;{&#xA;    cts.Cancel();&#xA;});&#xA;&#xA;await UnityWebRequest.Get(&#34;http://google.co.jp&#34;).SendWebRequest().WithCancellation(cts.Token);&#xA;&#xA;await UniTask.DelayFrame(1000, cancellationToken: cts.Token);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// this CancellationToken lifecycle is same as GameObject.&#xA;await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());&#xA;&#xA;// ---&#xA;&#xA;async UniTask FooAsync(CancellationToken cancellationToken)&#xA;{&#xA;    await BarAsync(cancellationToken);&#xA;}&#xA;&#xA;async UniTask BarAsync(CancellationToken cancellationToken)&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class MyBehaviour : MonoBehaviour&#xA;{&#xA;    CancellationTokenSource disableCancellation = new CancellationTokenSource();&#xA;    CancellationTokenSource destroyCancellation = new CancellationTokenSource();&#xA;&#xA;    private void OnEnable()&#xA;    {&#xA;        if (disableCancellation != null)&#xA;        {&#xA;            disableCancellation.Dispose();&#xA;        }&#xA;        disableCancellation = new CancellationTokenSource();&#xA;    }&#xA;&#xA;    private void OnDisable()&#xA;    {&#xA;        disableCancellation.Cancel();&#xA;    }&#xA;&#xA;    private void OnDestroy()&#xA;    {&#xA;        destroyCancellation.Cancel();&#xA;        destroyCancellation.Dispose();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Andalso &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()&#xA;{&#xA;    await UniTask.Yield();&#xA;    throw new OperationCanceledException();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()&#xA;{&#xA;    try&#xA;    {&#xA;        var x = await FooAsync();&#xA;        return x * 2;&#xA;    }&#xA;    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0&#xA;    {&#xA;        return -1;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();&#xA;if (isCanceled)&#xA;{&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; &#xA;&lt;h2&gt;Timeout handling&lt;/h2&gt; &#xA;&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cts = new CancellationTokenSource();&#xA;cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.&#xA;&#xA;try&#xA;{&#xA;    await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest().WithCancellation(cts.Token);&#xA;}&#xA;catch (OperationCanceledException ex)&#xA;{&#xA;    if (ex.CancellationToken == cts.Token)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Timeout&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cancelToken = new CancellationTokenSource();&#xA;cancelButton.onClick.AddListener(()=&amp;gt;&#xA;{&#xA;    cancelToken.Cancel(); // cancel from button click.&#xA;});&#xA;&#xA;var timeoutToken = new CancellationTokenSource();&#xA;timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.&#xA;&#xA;try&#xA;{&#xA;    // combine token&#xA;    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);&#xA;&#xA;    await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest().WithCancellation(linkedTokenSource.Token);&#xA;}&#xA;catch (OperationCanceledException ex)&#xA;{&#xA;    if (timeoutToken.IsCancellationRequested)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Timeout.&#34;);&#xA;    }&#xA;    else if (cancelToken.IsCancellationRequested)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Cancel clicked.&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.&#xA;&#xA;async UniTask FooAsync()&#xA;{&#xA;    try&#xA;    {&#xA;        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.&#xA;        await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest()&#xA;            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));&#xA;        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.&#xA;    }&#xA;    catch (OperationCanceledException ex)&#xA;    {&#xA;        if (timeoutController.IsTimeout())&#xA;        {&#xA;            UnityEngine.Debug.Log(&#34;timeout&#34;);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;TimeoutController timeoutController;&#xA;CancellationTokenSource clickCancelSource;&#xA;&#xA;void Start()&#xA;{&#xA;    this.clickCancelSource = new CancellationTokenSource();&#xA;    this.timeoutController = new TimeoutController(clickCancelSource);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));&#xA;&#xA;var request = await UnityWebRequest.Get(&#34;http://google.co.jp&#34;)&#xA;    .SendWebRequest()&#xA;    .ToUniTask(progress: progress);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; &#xA;&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;&#xA;{&#xA;    public void Report(float value)&#xA;    {&#xA;        UnityEngine.Debug.Log(value);&#xA;    }&#xA;&#xA;    public async UniTaskVoid WebRequest()&#xA;    {&#xA;        var request = await UnityWebRequest.Get(&#34;http://google.co.jp&#34;)&#xA;            .SendWebRequest()&#xA;            .ToUniTask(progress: this); // pass this&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PlayerLoop&lt;/h2&gt; &#xA;&lt;p&gt;UniTask is run on a custom &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&#34;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public enum PlayerLoopTiming&#xA;{&#xA;    Initialization = 0,&#xA;    LastInitialization = 1,&#xA;&#xA;    EarlyUpdate = 2,&#xA;    LastEarlyUpdate = 3,&#xA;&#xA;    FixedUpdate = 4,&#xA;    LastFixedUpdate = 5,&#xA;&#xA;    PreUpdate = 6,&#xA;    LastPreUpdate = 7,&#xA;&#xA;    Update = 8,&#xA;    LastUpdate = 9,&#xA;&#xA;    PreLateUpdate = 10,&#xA;    LastPreLateUpdate = 11,&#xA;&#xA;    PostLateUpdate = 12,&#xA;    LastPostLateUpdate = 13&#xA;    &#xA;#if UNITY_2020_2_OR_NEWER&#xA;    TimeUpdate = 14,&#xA;    LastTimeUpdate = 15,&#xA;#endif&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It indicates when to run, you can check &lt;a href=&#34;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&#34;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad&#xA;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]&#xA;public static void InitUniTaskLoop()&#xA;{&#xA;    var loop = PlayerLoop.GetCurrentPlayerLoop();&#xA;    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; &#xA;&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Get ECS Loop.&#xA;var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;&#xA;&#xA;// Setup UniTask&#39;s PlayerLoop.&#xA;PlayerLoopHelper.Initialize(ref playerLoop);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;void Start()&#xA;{&#xA;    UnityEngine.Debug.Log(&#34;UniTaskPlayerLoop ready? &#34; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());&#xA;    PlayerLoopHelper.DumpCurrentPlayerLoop();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();&#xA;PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&#34;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&#34;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTaskVoid FireAndForgetMethod()&#xA;{&#xA;    // do anything...&#xA;    await UniTask.Yield();&#xA;}&#xA;&#xA;public void Caller()&#xA;{&#xA;    FireAndForgetMethod().Forget();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask DoAsync()&#xA;{&#xA;    // do anything...&#xA;    await UniTask.Yield();&#xA;}&#xA;&#xA;public void Caller()&#xA;{&#xA;    DoAsync().Forget();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Action actEvent;&#xA;UnityAction unityEvent; // especially used in uGUI&#xA;&#xA;// Bad: async void&#xA;actEvent += async () =&amp;gt; { };&#xA;unityEvent += async () =&amp;gt; { };&#xA;&#xA;// Ok: create Action delegate by lambda&#xA;actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });&#xA;unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;class Sample : MonoBehaviour&#xA;{&#xA;    async UniTaskVoid Start()&#xA;    {&#xA;        // async init code.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;UniTaskTracker&lt;/h2&gt; &#xA;&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; &#xA; &lt;li&gt;Reload - Reload view.&lt;/li&gt; &#xA; &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; &#xA; &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; &#xA; &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; &#xA;&lt;h2&gt;External Assets&lt;/h2&gt; &#xA;&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; &#xA;&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, it is required to import &lt;code&gt;com.demigiant.dotween&lt;/code&gt; from &lt;a href=&#34;https://openupm.com/packages/com.demigiant.dotween/&#34;&gt;OpenUPM&lt;/a&gt; or to define &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// sequential&#xA;await transform.DOMoveX(2, 10);&#xA;await transform.DOMoveZ(5, 20);&#xA;&#xA;// parallel with cancellation&#xA;var ct = this.GetCancellationTokenOnDestroy();&#xA;&#xA;await UniTask.WhenAll(&#xA;    transform.DOMoveX(10, 3).WithCancellation(ct),&#xA;    transform.DOScale(10, 3).WithCancellation(ct));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; &#xA;&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Unity 2020.2, C# 8.0&#xA;await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate(token))&#xA;{&#xA;    Debug.Log(&#34;Update() &#34; + Time.frameCount);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// C# 7.3(Unity 2018.3~)&#xA;await UniTaskAsyncEnumerable.EveryUpdate(token).ForEachAsync(_ =&amp;gt;&#xA;{&#xA;    Debug.Log(&#34;Update() &#34; + Time.frameCount);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;, &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)&#xA;SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)&#xA;SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).&#xA;public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)&#xA;{&#xA;    var frameCount = 0;&#xA;    await UniTask.Yield();&#xA;    while (!token.IsCancellationRequested)&#xA;    {&#xA;        yield return frameCount++;&#xA;        await UniTask.Yield();&#xA;    }&#xA;}&#xA;&#xA;// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.&#xA;public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()&#xA;{&#xA;    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.&#xA;    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;&#xA;    {&#xA;        var frameCount = 0;&#xA;        await UniTask.Yield();&#xA;        while (!token.IsCancellationRequested)&#xA;        {&#xA;            await writer.YieldAsync(frameCount++); // instead of `yield return`&#xA;            await UniTask.Yield();&#xA;        }&#xA;    });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Awaitable Events&lt;/h2&gt; &#xA;&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;async UniTask TripleClick()&#xA;{&#xA;    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async&#xA;    await button.OnClickAsync();&#xA;    await button.OnClickAsync();&#xA;    await button.OnClickAsync();&#xA;    Debug.Log(&#34;Three times clicked&#34;);&#xA;}&#xA;&#xA;// more efficient way&#xA;async UniTask TripleClick()&#xA;{&#xA;    using (var handler = button.GetAsyncClickEventHandler())&#xA;    {&#xA;        await handler.OnClickAsync();&#xA;        await handler.OnClickAsync();&#xA;        await handler.OnClickAsync();&#xA;        Debug.Log(&#34;Three times clicked&#34;);&#xA;    }&#xA;}&#xA;&#xA;// use async LINQ&#xA;async UniTask TripleClick(CancellationToken token)&#xA;{&#xA;    await button.OnClickAsAsyncEnumerable().Take(3).Last();&#xA;    Debug.Log(&#34;Three times clicked&#34;);&#xA;}&#xA;&#xA;// use async LINQ2&#xA;async UniTask TripleClick(CancellationToken token)&#xA;{&#xA;    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;&#xA;    {&#xA;        Debug.Log(&#34;Every clicked&#34;);&#xA;    });&#xA;    Debug.Log(&#34;Three times clicked, complete.&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();&#xA;await trigger.OnCollisionEnterAsync();&#xA;await trigger.OnCollisionEnterAsync();&#xA;await trigger.OnCollisionEnterAsync();&#xA;&#xA;// every moves.&#xA;await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);&#xA;&#xA;// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ&#xA;rp.ForEachAsync(x =&amp;gt;&#xA;{&#xA;    Debug.Log(x);&#xA;}, this.GetCancellationTokenOnDestroy()).Forget();&#xA;&#xA;rp.Value = 10; // push 10 to all subscriber&#xA;rp.Value = 11; // push 11 to all subscriber&#xA;&#xA;// WithoutCurrent ignore initial value&#xA;// BindTo bind stream value to unity components.&#xA;rp.WithoutCurrent().BindTo(this.textComponent);&#xA;&#xA;await rp.WaitAsync(); // wait until next value set&#xA;&#xA;// also exists ToReadOnlyAsyncReactiveProperty&#xA;var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);&#xA;var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// can not get click event during 3 seconds complete.&#xA;await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// queued message in asynchronous processing&#xA;await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&#34;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; &#xA;&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable&#xA;{&#xA;    Channel&amp;lt;T&amp;gt; channel;&#xA;&#xA;    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;&#xA;    IDisposable connection;&#xA;&#xA;    public AsyncMessageBroker()&#xA;    {&#xA;        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();&#xA;        multicastSource = channel.Reader.ReadAllAsync().Publish();&#xA;        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.&#xA;    }&#xA;&#xA;    public void Publish(T value)&#xA;    {&#xA;        channel.Writer.TryWrite(value);&#xA;    }&#xA;&#xA;    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()&#xA;    {&#xA;        return multicastSource;&#xA;    }&#xA;&#xA;    public void Dispose()&#xA;    {&#xA;        channel.Writer.TryComplete();&#xA;        connection.Dispose();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For Unit Testing&lt;/h2&gt; &#xA;&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;[UnityTest]&#xA;public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;&#xA;{&#xA;    var time = Time.realtimeSinceStartup;&#xA;&#xA;    Time.timeScale = 0.5f;&#xA;    try&#xA;    {&#xA;        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);&#xA;&#xA;        var elapsed = Time.realtimeSinceStartup - time;&#xA;        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));&#xA;    }&#xA;    finally&#xA;    {&#xA;        Time.timeScale = 1.0f;&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&#34;https://github.com/Cysharp/RuntimeUnitTestToolkit&#34;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; &#xA;&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; &#xA;&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; &#xA;&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; &#xA;&lt;h2&gt;For UnityEditor&lt;/h2&gt; &#xA;&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; &#xA; &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; &#xA;&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; &#xA;&lt;p&gt;Use standard type.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;.NET Type&lt;/th&gt; &#xA;   &lt;th&gt;UniTask Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Use UniTask type.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;.NET Type&lt;/th&gt; &#xA;   &lt;th&gt;UniTask Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Pooling Configuration&lt;/h2&gt; &#xA;&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&#34;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&#34;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())&#xA;{&#xA;    Debug.Log(type + &#34;:&#34; + size);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; &#xA;&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; &#xA;&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; &#xA;&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class SyncContextInjecter&#xA;{&#xA;    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]&#xA;    public static void Inject()&#xA;    {&#xA;        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API References&lt;/h2&gt; &#xA;&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&#34;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&#34;https://dotnet.github.io/docfx/&#34;&gt;DocFX&lt;/a&gt; and &lt;a href=&#34;https://github.com/Cysharp/DocfxTemplate&#34;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&#34;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&#34;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;UPM Package&lt;/h2&gt; &#xA;&lt;h3&gt;Install via git URL&lt;/h3&gt; &#xA;&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;or add &lt;code&gt;&#34;com.cysharp.unitask&#34;: &#34;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&#34;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install via OpenUPM&lt;/h3&gt; &#xA;&lt;p&gt;The package is available on the &lt;a href=&#34;https://openupm.com&#34;&gt;openupm registry&lt;/a&gt;. It&#39;s recommended to install it via &lt;a href=&#34;https://github.com/openupm/openupm-cli&#34;&gt;openupm-cli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openupm add com.cysharp.unitask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;.NET Core&lt;/h2&gt; &#xA;&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&#34;https://www.nuget.org/packages/UniTask&#34;&gt;UniTask&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; &#xA;&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AysncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; &#xA;&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&#34;https://github.com/mgravell/PooledAwait&#34;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class ZeroAllocAsyncAwaitInDotNetCore&#xA;{&#xA;    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)&#xA;    {&#xA;        return Core(this, x, y);&#xA;&#xA;        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)&#xA;        {&#xA;            // do anything...&#xA;            await Task.Delay(TimeSpan.FromSeconds(x + y));&#xA;            await UniTask.Yield();&#xA;&#xA;            return 10;&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.&#xA;public ValueTask TestAsync()&#xA;{&#xA;    await using (UniTask.ReturnToCurrentSynchronizationContext())&#xA;    {&#xA;        await UniTask.SwitchToThreadPool();&#xA;        // do anything..&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&#34;https://github.com/Cysharp/MagicOnion/&#34;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; &#xA;&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&#34;https://github.com/Cysharp/ValueTaskSupplement&#34;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/samples</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/samples</id>
    <link href="https://github.com/dotnet/samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code referenced by the .NET documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dotnet/samples/workflows/Markdownlint/badge.svg?sanitize=true&#34; alt=&#34;Markdownlint&#34;&gt; &lt;a href=&#34;https://github.com/dotnet/samples/actions/workflows/build-validation.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet/samples/actions/workflows/build-validation.yml/badge.svg?sanitize=true&#34; alt=&#34;Snippets 5000&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/samples/actions/workflows/version-sweep.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet/samples/actions/workflows/version-sweep.yml/badge.svg?sanitize=true&#34; alt=&#34;target supported version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains all the sample code that is part of any topic under the .NET documentation. There are several different projects that are organized in sub-folders. These sub-folders are organized similarly to the organization of the docs for .NET. Some of the articles will have more than one sample associated with them.&lt;/p&gt; &#xA;&lt;p&gt;The content team tracks issues for .NET documentation in the &lt;a href=&#34;https://github.com/dotnet/docs&#34;&gt;dotnet/docs&lt;/a&gt; and &lt;a href=&#34;https://github.com/dotnet/dotnet-api-docs&#34;&gt;dotnet/dotnet-api-docs&lt;/a&gt; repositories. Issues are turned off on this repository. File issues against existing samples and suggestions for new samples in those repositories. If you&#39;re not sure where, choose &lt;a href=&#34;https://github.com/dotnet/docs/issues&#34;&gt;dotnet/docs&lt;/a&gt;. This process keeps the issues associated with the articles that explain the concepts for each sample. The best process is to file an issue from the feedback control at the bottom of each docs page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For existing samples, file the issue on the page with the sample.&lt;/li&gt; &#xA; &lt;li&gt;To suggest new samples, file the issue on the index page where you want to see the new sample.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The code in this repository represents programs that demonstrate application or library scenarios. These samples often use more than one technology, feature, or toolkit. Each sample has a readme.md file that explains the sample and links to resources for more information.&lt;/p&gt; &#xA;&lt;p&gt;Samples should be buildable projects. Those projects should build and run on the widest set of platforms possible for the given sample. In practice, that means building .NET Core-based console applications where possible. Samples that are specific to the web or a UI framework should add those tools as needed. Examples include web applications, mobile apps, WPF or WinForms apps, and so on.&lt;/p&gt; &#xA;&lt;p&gt;We are working toward having a CI system in place for all code. When you make any updates to samples, make sure each update is part of a buildable project. Ideally, add tests for correctness on samples as well.&lt;/p&gt; &#xA;&lt;h2&gt;Building a sample&lt;/h2&gt; &#xA;&lt;p&gt;Build any .NET Core sample using the .NET Core CLI, which is installed with &lt;a href=&#34;https://www.microsoft.com/net/download&#34;&gt;the .NET Core SDK&lt;/a&gt;. Then run these commands from the CLI in the directory of any sample:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet build&#xA;dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These will install any needed dependencies, build the project, and run the project respectively.&lt;/p&gt; &#xA;&lt;p&gt;Multi-project samples have instructions in their root directory in a &lt;code&gt;README.md&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Except where noted, all samples build from the command line on any platform supported by .NET Core. There are a few samples that are specific to Visual Studio and require Visual Studio 2017 or later. In addition, some samples show platform-specific features and will require a specific platform. Other samples and snippets require the .NET Framework and will run on Windows platforms, and will need the Developer Pack for the target Framework version.&lt;/p&gt; &#xA;&lt;h2&gt;Creating new samples&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to add a code sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample &lt;strong&gt;must be part of a buildable project&lt;/strong&gt;. Where possible, the projects should build on all platforms supported by .NET Core. Exceptions to this are samples that demonstrate a platform-specific feature or platform-specific tool.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample should conform to the &lt;a href=&#34;https://github.com/dotnet/runtime/raw/main/docs/coding-guidelines/coding-style.md&#34;&gt;runtime coding style&lt;/a&gt; to maintain consistency.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Additionally, we prefer the use of &lt;code&gt;static&lt;/code&gt; methods rather than instance methods when demonstrating something that doesn&#39;t require instantiating a new object.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample should include &lt;strong&gt;appropriate exception handling&lt;/strong&gt;. It should handle all exceptions that are likely to be thrown in the context of the sample. For example, a sample that calls the &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.console.readline&#34;&gt;Console.ReadLine&lt;/a&gt; method to retrieve user input should use appropriate exception handling when the input string is passed as an argument to a method. Similarly, if your sample expects a method call to fail, the resulting exception must be handled. Always handle the specific exceptions thrown by the method, rather than base class exceptions such as &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.exception&#34;&gt;Exception&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.systemexception&#34;&gt;SystemException&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your sample builds a standalone package, you must include the runtimes used by our CI build system, in addition to any runtimes used by your sample:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;win7-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win8-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win81-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ubuntu.16.04-x64&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will have a CI system in place to build these projects shortly.&lt;/p&gt; &#xA;&lt;p&gt;To create a sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;File an &lt;a href=&#34;https://github.com/dotnet/docs/issues&#34;&gt;issue&lt;/a&gt; or add a comment to an existing one that you are working on it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write the topic that explains the concepts demonstrated in your sample (example: &lt;code&gt;docs/standard/linq/where-clause.md&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write your sample (example: &lt;em&gt;WhereClause-Sample1.cs&lt;/em&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;em&gt;Program.cs&lt;/em&gt; with a Main entry point that calls your samples. If there is already one there, add the call to your sample:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Program&#xA;{&#xA;    public void Main(string[] args)&#xA;    {&#xA;        WhereClause1.QuerySyntaxExample();&#xA;&#xA;        // Add the method syntax as an example.&#xA;        WhereClause1.MethodSyntaxExample();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t check in the solution file if it contains only one project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To build and run your sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to the sample folder and build to check for errors:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run your sample:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a &lt;em&gt;README.md&lt;/em&gt; to the root directory of your sample.&lt;/p&gt; &lt;p&gt;This should include a brief description of the code, and refer people to the article that references the sample.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dotnet-architecture/eShopOnWeb</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet-architecture/eShopOnWeb</id>
    <link href="https://github.com/dotnet-architecture/eShopOnWeb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample ASP.NET Core 6.0 reference application, powered by Microsoft, demonstrating a layered application architecture with monolithic deployment model. Download the eBook PDF from docs folder.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnWeb/actions&#34;&gt;&lt;img src=&#34;https://github.com/dotnet-architecture/eShopOnWeb/workflows/eShopOnWeb%20Build%20and%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Microsoft eShopOnWeb ASP.NET Core Reference Application&lt;/h1&gt; &#xA;&lt;p&gt;Sample ASP.NET Core reference application, powered by Microsoft, demonstrating a single-process (monolithic) application architecture and deployment model. If you&#39;re new to .NET development, read the &lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnWeb/wiki/Getting-Started-for-Beginners&#34;&gt;Getting Started for Beginners&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;A list of Frequently Asked Questions about this repository can be found &lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnWeb/wiki/Frequently-Asked-Questions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview Video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ardalis&#34;&gt;Steve &#34;ardalis&#34; Smith&lt;/a&gt; recorded &lt;a href=&#34;https://www.youtube.com/watch?v=vRZ8ucGac8M&amp;amp;ab_channel=Ardalis&#34;&gt;a live stream providing an overview of the eShopOnWeb reference app&lt;/a&gt; in October 2020.&lt;/p&gt; &#xA;&lt;h2&gt;eBook&lt;/h2&gt; &#xA;&lt;p&gt;This reference application is meant to support the free .PDF download ebook: &lt;a href=&#34;https://aka.ms/webappebook&#34;&gt;Architecting Modern Web Applications with ASP.NET Core and Azure&lt;/a&gt;, updated to &lt;strong&gt;ASP.NET Core 6.0&lt;/strong&gt;. &lt;a href=&#34;https://dotnet.microsoft.com/learn/web/aspnet-architecture&#34;&gt;Also available in ePub/mobi formats&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also read the book in online pages at the .NET docs here: &lt;a href=&#34;https://docs.microsoft.com/dotnet/architecture/modern-web-apps-azure/&#34;&gt;https://docs.microsoft.com/dotnet/architecture/modern-web-apps-azure/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnet.microsoft.com/learn/web/aspnet-architecture&#34;&gt;&lt;img src=&#34;https://dotnet.microsoft.com/blob-assets/images/e-books/aspnet.png&#34; height=&#34;300&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;eShopOnWeb&lt;/strong&gt; sample is related to the &lt;a href=&#34;https://github.com/dotnet/eShopOnContainers&#34;&gt;eShopOnContainers&lt;/a&gt; sample application which, in that case, focuses on a microservices/containers-based application architecture. However, &lt;strong&gt;eShopOnWeb&lt;/strong&gt; is much simpler in regards to its current functionality and focuses on traditional Web Application Development with a single deployment.&lt;/p&gt; &#xA;&lt;p&gt;The goal for this sample is to demonstrate some of the principles and patterns described in the &lt;a href=&#34;https://aka.ms/webappebook&#34;&gt;eBook&lt;/a&gt;. It is not meant to be an eCommerce reference application, and as such it does not implement many features that would be obvious and/or essential to a real eCommerce application.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;VERSIONS&lt;/h3&gt; &#xA; &lt;h4&gt;The &lt;code&gt;main&lt;/code&gt; branch is currently running ASP.NET Core 6.0.&lt;/h4&gt; &#xA; &lt;h4&gt;Older versions are tagged.&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Topics (eBook TOC)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA; &lt;li&gt;Characteristics of Modern Web Applications&lt;/li&gt; &#xA; &lt;li&gt;Choosing Between Traditional Web Apps and SPAs&lt;/li&gt; &#xA; &lt;li&gt;Architectural Principles&lt;/li&gt; &#xA; &lt;li&gt;Common Web Application Architectures&lt;/li&gt; &#xA; &lt;li&gt;Common Client Side Technologies&lt;/li&gt; &#xA; &lt;li&gt;Developing ASP.NET Core MVC Apps&lt;/li&gt; &#xA; &lt;li&gt;Working with Data in ASP.NET Core Apps&lt;/li&gt; &#xA; &lt;li&gt;Testing ASP.NET Core MVC Apps&lt;/li&gt; &#xA; &lt;li&gt;Development Process for Azure-Hosted ASP.NET Core Apps&lt;/li&gt; &#xA; &lt;li&gt;Azure Hosting Recommendations for ASP.NET Core Web Apps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the sample&lt;/h2&gt; &#xA;&lt;p&gt;The store&#39;s home page should look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/782127/88414268-92d83a00-cdaa-11ea-9b4c-db67d95be039.png&#34; alt=&#34;eShopOnWeb home page screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Most of the site&#39;s functionality works with just the web application running. However, the site&#39;s Admin page relies on Blazor WebAssembly running in the browser, and it must communicate with the server using the site&#39;s PublicApi web application. You&#39;ll need to also run this project. You can configure Visual Studio to start multiple projects, or just go to the PublicApi folder in a terminal window and run &lt;code&gt;dotnet run&lt;/code&gt; from there. After that from the Web folder you should run &lt;code&gt;dotnet run --launch-profile Web&lt;/code&gt;. Now you should be able to browse to &lt;code&gt;https://localhost:5001/&lt;/code&gt;. Note that if you use this approach, you&#39;ll need to stop the application manually in order to build the solution (otherwise you&#39;ll get file locking errors).&lt;/p&gt; &#xA;&lt;p&gt;After cloning or downloading the sample you must setup your database. To use the sample with a persistent database, you will need to run its Entity Framework Core migrations before you will be able to run the app.&lt;/p&gt; &#xA;&lt;p&gt;You can also run the samples in Docker (see below).&lt;/p&gt; &#xA;&lt;h3&gt;Configuring the sample to use SQL Server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;By default, the project uses a real database. If you want an in memory database, you can add in &lt;code&gt;appsettings.json&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;UseOnlyInMemoryDatabase&#34;: true&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure your connection strings in &lt;code&gt;appsettings.json&lt;/code&gt; point to a local SQL Server instance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure the tool EF was already installed. You can find some help &lt;a href=&#34;https://docs.microsoft.com/ef/core/miscellaneous/cli/dotnet&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet tool update --global dotnet-ef&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a command prompt in the Web folder and execute the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet restore&#xA;dotnet tool restore&#xA;dotnet ef database update -c catalogcontext -p ../Infrastructure/Infrastructure.csproj -s Web.csproj&#xA;dotnet ef database update -c appidentitydbcontext -p ../Infrastructure/Infrastructure.csproj -s Web.csproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These commands will create two separate databases, one for the store&#39;s catalog data and shopping cart information, and one for the app&#39;s user credentials and identity data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the application.&lt;/p&gt; &lt;p&gt;The first time you run the application, it will seed both databases with data such that you should see products in the store, and you should be able to log in using the &lt;a href=&#34;mailto:demouser@microsoft.com&#34;&gt;demouser@microsoft.com&lt;/a&gt; account.&lt;/p&gt; &lt;p&gt;Note: If you need to create migrations, you can use these commands:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-- create migration (from Web folder CLI)&#xA;dotnet ef migrations add InitialModel --context catalogcontext -p ../Infrastructure/Infrastructure.csproj -s Web.csproj -o Data/Migrations&#xA;&#xA;dotnet ef migrations add InitialIdentityModel --context appidentitydbcontext -p ../Infrastructure/Infrastructure.csproj -s Web.csproj -o Identity/Migrations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running the sample using Docker&lt;/h2&gt; &#xA;&lt;p&gt;You can run the Web sample by running these commands from the root folder (where the .sln file is located):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose build&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should be able to make requests to localhost:5106 for the Web project, and localhost:5200 for the Public API project once these commands complete. If you have any problems, especially with login, try from a new guest or incognito browser instance.&lt;/p&gt; &#xA;&lt;p&gt;You can also run the applications by using the instructions located in their &lt;code&gt;Dockerfile&lt;/code&gt; file in the root of each project. Again, run these commands from the root of the solution (where the .sln file is located).&lt;/p&gt; &#xA;&lt;h2&gt;Community Extensions&lt;/h2&gt; &#xA;&lt;p&gt;We have some great contributions from the community, and while these aren&#39;t maintained by Microsoft we still want to highlight them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VBAndCs/eShopOnWeb_VB.NET&#34;&gt;eShopOnWeb VB.NET&lt;/a&gt; by Mohammad Hamdy Ghanem&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet-presentations/dotnet-maui-workshop</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet-presentations/dotnet-maui-workshop</id>
    <link href="https://github.com/dotnet-presentations/dotnet-maui-workshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A full day workshop (.NET MAUI Workshop in a Box) on how to build apps with .NET MAUI for iOS, Android, macOS, and Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET MAUI - Workshop&lt;/h1&gt; &#xA;&lt;p&gt;Today we will build a &lt;a href=&#34;https://docs.microsoft.com/dotnet/maui?WT.mc_id=friends-mauiworkshop-jamont&#34;&gt;.NET MAUI&lt;/a&gt; application that will display a list of Monkeys from around the world. We will start by building the business logic backend that pulls down json-encoded data from a RESTful endpoint. We will then leverage &lt;a href=&#34;https://docs.microsoft.com/xamarin/essentials/index?WT.mc_id=friends-mauiworkshop-jamont&#34;&gt;.NET MAUI&lt;/a&gt; to find the closest monkey to us and also show the monkey on a map. We will also see how to display data in many different ways and then finally fully theme the application.&lt;/p&gt; &#xA;&lt;h2&gt;Setup Guide&lt;/h2&gt; &#xA;&lt;p&gt;Hey there! This workshop will be a hands on and a bring your own device workshop. You can develop on PC (Recommended) or Mac and all you will need to do is install Visual Studio 2022 or Visual Studio for Mac 2022 with the .NET MAUI workload.&lt;/p&gt; &#xA;&lt;p&gt;Before starting the workshop, I recommend going through the quick 10 minute &lt;a href=&#34;https://docs.microsoft.com/dotnet/maui/get-started/first-app?WT.mc_id=friends-mauiworkshop-jamont&#34;&gt;.NET MAUI Tutorial&lt;/a&gt; that will guide you through installation and also ensuring everything is configured correct.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to mobile development, we recommend deploying to a physical Android device which can be setup in just a few steps. If you don&#39;t have a device, don&#39;t worry as you can setup an &lt;a href=&#34;https://docs.microsoft.com/xamarin/android/get-started/installation/android-emulator?WT.mc_id=friends-mauiworkshop-jamont&#34;&gt;Android emulator with hardware acceleration&lt;/a&gt;. If you don&#39;t have time to set this up ahead of time, don&#39;t worry as we are here to help during the workshop.&lt;/p&gt; &#xA;&lt;p&gt;Beyond that you will be good to go for the workshop!&lt;/p&gt; &#xA;&lt;h2&gt;Agenda&lt;/h2&gt; &#xA;&lt;p&gt;I have also put together an abstract of what you can expect for the day long workshop:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%200%20-%20Overview/README.md&#34;&gt;Part 0&lt;/a&gt; - 30 Min Session - Introduction to .NET MAUI Session &amp;amp; Setup Help&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%201%20-%20Displaying%20Data/README.md&#34;&gt;Part 1&lt;/a&gt; - Single Page List of Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%202%20-%20MVVM/README.md&#34;&gt;Part 2&lt;/a&gt; - MVVM &amp;amp; Data Binding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%203%20-%20Navigation/README.md&#34;&gt;Part 3&lt;/a&gt; - Navigation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%204%20-%20Platform%20Features/README.md&#34;&gt;Part 4&lt;/a&gt; - Implementing Platform Features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%205%20-%20CollectionView/README.md&#34;&gt;Part 5&lt;/a&gt; - CollectionView &amp;amp; Beyond&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/Part%206%20-%20AppThemes/README.md&#34;&gt;Part 6&lt;/a&gt; - Theming the app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started open the &lt;code&gt;Part 1 - Displaying Data&lt;/code&gt; folder and open &lt;code&gt;MonkeyFinder.sln&lt;/code&gt;. You can use this throughout the workshop. Each &lt;strong&gt;part&lt;/strong&gt; has a &lt;strong&gt;README&lt;/strong&gt; file with directions for that part. If you came in late, you can open any of the folders and there is a starting project for that section.&lt;/p&gt; &#xA;&lt;h2&gt;Video Walkthrough&lt;/h2&gt; &#xA;&lt;p&gt;James recorded a &lt;a href=&#34;https://raw.githubusercontent.com/dotnet-presentations/dotnet-maui-workshop/main/%5Bhttps://www.youtube.com/DuNLR_NJv8U%5D(https://www.youtube.com/watch?v=DuNLR_NJv8U)&#34;&gt;full 4-hour walkthrough&lt;/a&gt; end-to-end on &lt;a href=&#34;https://youtube.com/jamesmontemagno&#34;&gt;his YouTube&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;More links and resources:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dot.net/maui&#34;&gt;.NET MAUI Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/paths/build-apps-with-dotnet-maui/&#34;&gt;.NET MAUI on Microsoft Learn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/maui&#34;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/maui&#34;&gt;.NET MAUI on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dot.net/videos&#34;&gt;.NET Beginner Series Videos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any questions please reach out to me on Twitter &lt;a href=&#34;https://twitter.com/jamesmontemagno&#34;&gt;@JamesMontemagno&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>migueldeicaza/gui.cs</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/migueldeicaza/gui.cs</id>
    <link href="https://github.com/migueldeicaza/gui.cs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Console-based user interface toolkit for .NET applications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/migueldeicaza/gui.cs/workflows/.NET%20Core/badge.svg?branch=master&#34; alt=&#34;.NET Core&#34;&gt; &lt;img src=&#34;https://github.com/migueldeicaza/gui.cs/workflows/Code%20scanning%20-%20action/badge.svg?sanitize=true&#34; alt=&#34;Code scanning - action&#34;&gt; &lt;a href=&#34;https://www.nuget.org/packages/Terminal.Gui&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Terminal.Gui.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/migueldeicaza/90ef67a684cb71db1817921a970f8d27/raw/code-coverage.json&#34; alt=&#34;Code Coverage&#34;&gt; &lt;a href=&#34;https://www.nuget.org/packages/Terminal.Gui&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Terminal.Gui&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/migueldeicaza/gui.cs/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/migueldeicaza/gui.cs.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/issues/migueldeicaza/gui.cs/bug&#34; alt=&#34;Bugs&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Terminal.Gui - Cross Platform Terminal UI toolkit for .NET&lt;/h1&gt; &#xA;&lt;p&gt;A toolkit for building rich console apps for .NET, .NET Core, and Mono that works on Windows, the Mac, and Linux/Unix.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/migueldeicaza/gui.cs/master/docfx/sample.gif&#34; alt=&#34;Sample app&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Controls and Views&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Terminal.Gui&lt;/em&gt; provides a rich set of views and controls for building terminal user interfaces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Button.html&#34;&gt;Button&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.CheckBox.html&#34;&gt;CheckBox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ColorPicker.html&#34;&gt;ColorPicker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ComboBox.html&#34;&gt;ComboBox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Dialog.html&#34;&gt;Dialog&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.OpenDialog.html&#34;&gt;OpenDialog&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.SaveDialog.html&#34;&gt;SaveDialog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.FrameView.html&#34;&gt;FrameView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.GraphView.html&#34;&gt;GraphView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.HexView.html&#34;&gt;Hex viewer/editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Label.html&#34;&gt;Label&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ListView.html&#34;&gt;ListView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.MenuBar.html&#34;&gt;Menu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.MessageBox.html&#34;&gt;MessageBox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ProgressBar.html&#34;&gt;ProgressBar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.RadioGroup.html&#34;&gt;Radio buttons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TableView.html&#34;&gt;TableView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TimeField.html&#34;&gt;Time &amp;amp; Date Fields&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TextField.html&#34;&gt;TextField&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TextValidateField.html&#34;&gt;TextValidateField&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TextView.html&#34;&gt;TextView (Text Editor)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.TreeView.html&#34;&gt;TreeView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ScrollView.html&#34;&gt;ScrollView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.ScrollBarView.html&#34;&gt;ScrollBarView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.StatusBar.html&#34;&gt;StatusBar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Window.html&#34;&gt;Window&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross Platform&lt;/strong&gt; - Windows, Mac, and Linux. Terminal drivers for Curses, &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/issues/27&#34;&gt;Windows Console&lt;/a&gt;, and the .NET Console mean apps will work well on both color and monochrome terminals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keyboard and Mouse Input&lt;/strong&gt; - Both keyboard and mouse input are supported, including support for drag &amp;amp; drop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/articles/overview.html#layout&#34;&gt;Flexible Layout&lt;/a&gt;&lt;/strong&gt; - Supports both &lt;em&gt;Absolute layout&lt;/em&gt; and an innovative &lt;em&gt;Computed Layout&lt;/em&gt; system. &lt;em&gt;Computed Layout&lt;/em&gt; makes it easy to layout controls relative to each other and enables dynamic terminal UIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clipboard support&lt;/strong&gt; - Cut, Copy, and Paste of text provided through the &lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.Clipboard.html&#34;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; class.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.View.html&#34;&gt;Arbitrary Views&lt;/a&gt;&lt;/strong&gt; - All visible UI elements are subclasses of the &lt;code&gt;View&lt;/code&gt; class, and these in turn can contain an arbitrary number of sub-views.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced App Features&lt;/strong&gt; - The &lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.MainLoop.html&#34;&gt;Mainloop&lt;/a&gt; supports processing events, idle handlers, timers, and monitoring file descriptors. Most classes are safe for threading.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reactive Extensions&lt;/strong&gt; - Use &lt;a href=&#34;https://github.com/dotnet/reactive&#34;&gt;reactive extensions&lt;/a&gt; and benefit from increased code readability, and the ability to apply the MVVM pattern and &lt;a href=&#34;https://www.reactiveui.net/&#34;&gt;ReactiveUI&lt;/a&gt; data bindings. See the &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/ReactiveExample&#34;&gt;source code&lt;/a&gt; of a sample app in order to learn how to achieve this.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Keyboard Input Handling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Terminal.Gui&lt;/strong&gt; respects common Linux, Mac, and Windows keyboard idioms. For example, clipboard operations use the familiar &lt;code&gt;Control/Command-C, X, V&lt;/code&gt; model. &lt;code&gt;CTRL-Q&lt;/code&gt; is used for exiting views (and apps).&lt;/p&gt; &#xA;&lt;p&gt;The input handling of &lt;strong&gt;Terminal.Gui&lt;/strong&gt; is similar in some ways to Emacs and the Midnight Commander, so you can expect some of the special key combinations to be active.&lt;/p&gt; &#xA;&lt;p&gt;The key &lt;code&gt;ESC&lt;/code&gt; can act as an Alt modifier (or Meta in Emacs parlance), to allow input on terminals that do not have an alt key. So to produce the sequence &lt;code&gt;Alt-F&lt;/code&gt;, you can press either &lt;code&gt;Alt-F&lt;/code&gt;, or &lt;code&gt;ESC&lt;/code&gt; followed by the key &lt;code&gt;F&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To enter the key &lt;code&gt;ESC&lt;/code&gt;, you can either press &lt;code&gt;ESC&lt;/code&gt; and wait 100 milliseconds, or you can press &lt;code&gt;ESC&lt;/code&gt; twice.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ESC-0&lt;/code&gt;, and &lt;code&gt;ESC-1&lt;/code&gt; through &lt;code&gt;ESC-9&lt;/code&gt; have a special meaning, they map to &lt;code&gt;F10&lt;/code&gt;, and &lt;code&gt;F1&lt;/code&gt; to &lt;code&gt;F9&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;p&gt;Apps can change key bindings using the &lt;code&gt;AddKeyBinding&lt;/code&gt; API.&lt;/p&gt; &#xA;&lt;h3&gt;Driver Model&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Terminal.Gui&lt;/strong&gt; has support for &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/raw/master/Terminal.Gui/ConsoleDrivers/CursesDriver/CursesDriver.cs&#34;&gt;ncurses&lt;/a&gt;, &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/raw/master/Terminal.Gui/ConsoleDrivers/NetDriver.cs&#34;&gt;&lt;code&gt;System.Console&lt;/code&gt;&lt;/a&gt;, and a full &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/raw/master/Terminal.Gui/ConsoleDrivers/WindowsDriver.cs&#34;&gt;Win32 Console&lt;/a&gt; front-end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ncurses&lt;/code&gt; is used on Mac/Linux/Unix with color support based on what your library is compiled with; the Windows driver supports full color and mouse, and an easy-to-debug &lt;code&gt;System.Console&lt;/code&gt; can be used on Windows and Unix, but lacks mouse support.&lt;/p&gt; &#xA;&lt;p&gt;You can force the use of &lt;code&gt;System.Console&lt;/code&gt; on Unix as well; see &lt;code&gt;Core.cs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Showcase &amp;amp; Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/UICatalog&#34;&gt;UI Catalog&lt;/a&gt;&lt;/strong&gt; - The UI Catalog project provides an easy to use and extend sample illustrating the capabilities of &lt;strong&gt;Terminal.Gui&lt;/strong&gt;. Run &lt;code&gt;dotnet run --project UICatalog&lt;/code&gt; to run the UI Catalog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/ReactiveExample&#34;&gt;Reactive Example&lt;/a&gt;&lt;/strong&gt; - A sample app that shows how to use &lt;code&gt;System.Reactive&lt;/code&gt; and &lt;code&gt;ReactiveUI&lt;/code&gt; with &lt;code&gt;Terminal.Gui&lt;/code&gt;. The app uses the MVVM architecture that may seem familiar to folks coming from WPF, Xamarin Forms, UWP, Avalonia, or Windows Forms. In this app, we implement the data bindings using ReactiveUI &lt;code&gt;WhenAnyValue&lt;/code&gt; syntax and &lt;a href=&#34;https://github.com/reactiveui/pharmacist&#34;&gt;Pharmacist&lt;/a&gt; — a tool that converts all events in a NuGet package into observable wrappers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/Example&#34;&gt;Example (aka &lt;code&gt;demo.cs&lt;/code&gt;)&lt;/a&gt;&lt;/strong&gt; - Run &lt;code&gt;dotnet run&lt;/code&gt; in the &lt;code&gt;Example&lt;/code&gt; directory to run the simple demo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/StandaloneExample&#34;&gt;Standalone Example&lt;/a&gt;&lt;/strong&gt; - A trivial .NET core sample application can be found in the &lt;code&gt;StandaloneExample&lt;/code&gt; directory. Run &lt;code&gt;dotnet run&lt;/code&gt; in directory to test.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/FSharpExample&#34;&gt;F# Example&lt;/a&gt;&lt;/strong&gt; - An example showing how to build a Terminal.Gui app using F#.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/PowerShell/GraphicalTools/raw/master/docs/Microsoft.PowerShell.ConsoleGuiTools/Out-ConsoleGridView.md&#34;&gt;PowerShell&#39;s &lt;code&gt;Out-ConsoleGridView&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;OCGV&lt;/code&gt; sends the output from a command to an interactive table.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/En3Tho/PoshRedisViewer&#34;&gt;PoshRedisViewer&lt;/a&gt;&lt;/strong&gt; - A compact Redis viewer module for PowerShell written in F# and Gui.cs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/articles/overview.html&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/articles/index.html&#34;&gt;Conceptual Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/api/Terminal.Gui/Terminal.Gui.html&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/tree/master/Terminal.Gui&#34;&gt;&lt;code&gt;Terminal.Gui/&lt;/code&gt; README&lt;/a&gt; for an overview of how the library is structured. The &lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/articles/index.html&#34;&gt;Conceptual Documentation&lt;/a&gt; provides insight into core concepts.&lt;/p&gt; &#xA;&lt;h3&gt;Sample Usage&lt;/h3&gt; &#xA;&lt;p&gt;(This code uses C# 9.0 &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9#top-level-statements&#34;&gt;Top-level statements&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using Terminal.Gui;&#xA;using NStack;&#xA;&#xA;Application.Init();&#xA;var top = Application.Top;&#xA;&#xA;// Creates the top-level window to show&#xA;var win = new Window(&#34;MyApp&#34;)&#xA;{&#xA;&#x9;X = 0,&#xA;&#x9;Y = 1, // Leave one row for the toplevel menu&#xA;&#xA;&#x9;// By using Dim.Fill(), it will automatically resize without manual intervention&#xA;&#x9;Width = Dim.Fill(),&#xA;&#x9;Height = Dim.Fill()&#xA;};&#xA;&#xA;top.Add(win);&#xA;&#xA;// Creates a menubar, the item &#34;New&#34; has a help menu.&#xA;var menu = new MenuBar(new MenuBarItem[] {&#xA;&#x9;&#x9;&#x9;new MenuBarItem (&#34;_File&#34;, new MenuItem [] {&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;_New&#34;, &#34;Creates new file&#34;, null),&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;_Close&#34;, &#34;&#34;,null),&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;_Quit&#34;, &#34;&#34;, () =&amp;gt; { if (Quit ()) top.Running = false; })&#xA;&#x9;&#x9;&#x9;}),&#xA;&#x9;&#x9;&#x9;new MenuBarItem (&#34;_Edit&#34;, new MenuItem [] {&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;_Copy&#34;, &#34;&#34;, null),&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;C_ut&#34;, &#34;&#34;, null),&#xA;&#x9;&#x9;&#x9;&#x9;new MenuItem (&#34;_Paste&#34;, &#34;&#34;, null)&#xA;&#x9;&#x9;&#x9;})&#xA;&#x9;&#x9;});&#xA;top.Add(menu);&#xA;&#xA;static bool Quit()&#xA;{&#xA;&#x9;var n = MessageBox.Query(50, 7, &#34;Quit Demo&#34;, &#34;Are you sure you want to quit this demo?&#34;, &#34;Yes&#34;, &#34;No&#34;);&#xA;&#x9;return n == 0;&#xA;}&#xA;&#xA;var login = new Label(&#34;Login: &#34;) { X = 3, Y = 2 };&#xA;var password = new Label(&#34;Password: &#34;)&#xA;{&#xA;&#x9;X = Pos.Left(login),&#xA;&#x9;Y = Pos.Top(login) + 1&#xA;};&#xA;var loginText = new TextField(&#34;&#34;)&#xA;{&#xA;&#x9;X = Pos.Right(password),&#xA;&#x9;Y = Pos.Top(login),&#xA;&#x9;Width = 40&#xA;};&#xA;var passText = new TextField(&#34;&#34;)&#xA;{&#xA;&#x9;Secret = true,&#xA;&#x9;X = Pos.Left(loginText),&#xA;&#x9;Y = Pos.Top(password),&#xA;&#x9;Width = Dim.Width(loginText)&#xA;};&#xA;&#xA;// Add some controls, &#xA;win.Add(&#xA;&#x9;// The ones with my favorite layout system, Computed&#xA;&#x9;login, password, loginText, passText,&#xA;&#xA;&#x9;// The ones laid out like an australopithecus, with Absolute positions:&#xA;&#x9;new CheckBox(3, 6, &#34;Remember me&#34;),&#xA;&#x9;new RadioGroup(3, 8, new ustring[] { &#34;_Personal&#34;, &#34;_Company&#34; }, 0),&#xA;&#x9;new Button(3, 14, &#34;Ok&#34;),&#xA;&#x9;new Button(10, 14, &#34;Cancel&#34;),&#xA;&#x9;new Label(3, 18, &#34;Press F9 or ESC plus 9 to activate the menubar&#34;)&#xA;);&#xA;&#xA;Application.Run();&#xA;Application.Shutdown();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example above shows adding views using both styles of layout supported by &lt;strong&gt;Terminal.Gui&lt;/strong&gt;: &lt;strong&gt;Absolute layout&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://migueldeicaza.github.io/gui.cs/articles/overview.html#layout&#34;&gt;Computed layout&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can encapsulate the app behavior in a new &lt;code&gt;Window&lt;/code&gt;-derived class, say &lt;code&gt;App.cs&lt;/code&gt; containing the code above, and simplify your &lt;code&gt;Main&lt;/code&gt; method to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using Terminal.Gui;&#xA;&#xA;class Demo {&#xA;&#x9;static void Main ()&#xA;&#x9;{&#xA;&#x9;&#x9;Application.Run&amp;lt;App&amp;gt; ();&#xA;&#x9;&#x9;Application.Shutdown ();&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Use NuGet to install the &lt;code&gt;Terminal.Gui&lt;/code&gt; NuGet package: &lt;a href=&#34;https://www.nuget.org/packages/Terminal.Gui&#34;&gt;https://www.nuget.org/packages/Terminal.Gui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation in .NET Core Projects&lt;/h3&gt; &#xA;&lt;p&gt;To install Terminal.Gui into a .NET Core project, use the &lt;code&gt;dotnet&lt;/code&gt; CLI tool with following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet add package Terminal.Gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running and Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows, Mac, and Linux - Build and run using the .NET SDK command line tools (&lt;code&gt;dotnet build&lt;/code&gt; in the root directory). Run &lt;code&gt;UICatalog&lt;/code&gt; with &lt;code&gt;dotnet run --project UICatalog&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Windows - Open &lt;code&gt;Terminal.Gui.sln&lt;/code&gt; with Visual Studio 2019.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Building in &lt;code&gt;Release&lt;/code&gt; requires the &lt;a href=&#34;https://git-scm.com/&#34;&gt;git command line tool&lt;/a&gt; (a dependency of the &lt;a href=&#34;https://github.com/adamralph/minver#can-i-disable-minver&#34;&gt;MinVer&lt;/a&gt; build tool)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Debates on architecture and design can be found in Issues tagged with &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/issues?q=is%3Aopen+is%3Aissue+label%3Adesign&#34;&gt;design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;This is an updated version of &lt;a href=&#34;http://tirania.org/blog/archive/2007/Apr-16.html&#34;&gt;gui.cs&lt;/a&gt; that Miguel wrote for &lt;a href=&#34;https://github.com/mono/mono-curses&#34;&gt;mono-curses&lt;/a&gt; in 2007.&lt;/p&gt; &#xA;&lt;p&gt;The original &lt;strong&gt;gui.cs&lt;/strong&gt; was a UI toolkit in a single file and tied to curses. This version tries to be console-agnostic and instead of having a container/widget model, only uses Views (which can contain subviews) and changes the rendering model to rely on damage regions instead of burdening each view with the details.&lt;/p&gt; &#xA;&lt;p&gt;A presentation of this was part of the &lt;a href=&#34;https://channel9.msdn.com/Events/dotnetConf/2018/S313&#34;&gt;Retro.NET&lt;/a&gt; talk at .NET Conf 2018 &lt;a href=&#34;https://tirania.org/Retro.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Release history can be found in the &lt;a href=&#34;https://github.com/migueldeicaza/gui.cs/raw/master/Terminal.Gui/Terminal.Gui.csproj&#34;&gt;Terminal.Gui.csproj&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;In 2019, 2020, and 2021, Charlie Kindel (&lt;a href=&#34;https://github.com/tig&#34;&gt;https://github.com/tig&lt;/a&gt;), @BDisp (&lt;a href=&#34;https://github.com/BDisp&#34;&gt;https://github.com/BDisp&lt;/a&gt;), and Thomas Nind (&lt;a href=&#34;https://github.com/tznind&#34;&gt;https://github.com/tznind&lt;/a&gt;) vastly extended, improved, polished and fixed gui.cs to what it is today.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>icsharpcode/ILSpy</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/icsharpcode/ILSpy</id>
    <link href="https://github.com/icsharpcode/ILSpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET Decompiler with support for PDB generation, ReadyToRun, Metadata (&amp;more) - cross-platform!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ILSpy &lt;a href=&#34;https://nuget.org/packages/ICSharpCode.Decompiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/ICSharpCode.Decompiler.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/icsharpcode/ILSpy/workflows/Build%20ILSpy/badge.svg?branch=master&#34; alt=&#34;Build ILSpy&#34;&gt; &lt;a href=&#34;https://twitter.com/ilspy&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ILSpy.svg?label=Follow%20@ILSpy&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/8ef1d688-f80c-4380-8004-2ec7f814e7de&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/VS%20Extension-ILSpy-blue.svg?sanitize=true&#34; alt=&#34;ILSpy VS extension&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;ILSpy is the open-source .NET assembly browser and decompiler.&lt;/p&gt; &#xA;&lt;p&gt;Download: &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/releases&#34;&gt;latest release&lt;/a&gt; | &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/actions?query=workflow%3A%22Build+ILSpy%22+branch%3Amaster+is%3Asuccess+event%3Apush&#34;&gt;latest CI build (master)&lt;/a&gt; | &lt;a href=&#34;https://www.microsoft.com/store/apps/9MXFBKFVSQ13&#34;&gt;Microsoft Store (RC &amp;amp; RTM versions only)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Decompiler Frontends&lt;/h2&gt; &#xA;&lt;p&gt;Aside from the WPF UI ILSpy (downloadable via Releases, see also &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Plugins&#34;&gt;plugins&lt;/a&gt;), the following other frontends are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2022 ships with decompilation support for F12 enabled by default (using our engine v7.1).&lt;/li&gt; &#xA; &lt;li&gt;In Visual Studio 2019, you have to manually enable F12 support. Go to Tools / Options / Text Editor / C# / Advanced and check &#34;Enable navigation to decompiled source&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp&#34;&gt;C# for Visual Studio Code&lt;/a&gt; ships with decompilation support as well. To enable, activate the setting &#34;Enable Decompilation Support&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Our Visual Studio 2022 extension &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.ILSpy2022&#34;&gt;marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our Visual Studio 2017/2019 extension &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.ILSpy&#34;&gt;marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our Visual Studio Code Extension &lt;a href=&#34;https://github.com/icsharpcode/ilspy-vscode&#34;&gt;repository&lt;/a&gt; | &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=icsharpcode.ilspy-vscode&#34;&gt;marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our Linux/Mac/Windows ILSpy UI based on &lt;a href=&#34;http://www.avaloniaui.net/&#34;&gt;Avalonia&lt;/a&gt; - check out &lt;a href=&#34;https://github.com/icsharpcode/AvaloniaILSpy&#34;&gt;https://github.com/icsharpcode/AvaloniaILSpy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://www.nuget.org/packages/ICSharpCode.Decompiler/&#34;&gt;ICSharpCode.Decompiler&lt;/a&gt; NuGet for your own projects&lt;/li&gt; &#xA; &lt;li&gt;Our dotnet tool for Linux/Mac/Windows - check out &lt;a href=&#34;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/ICSharpCode.ILSpyCmd&#34;&gt;ILSpyCmd&lt;/a&gt; in this repository&lt;/li&gt; &#xA; &lt;li&gt;Our Linux/Mac/Windows &lt;a href=&#34;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/ICSharpCode.Decompiler.PowerShell&#34;&gt;PowerShell cmdlets&lt;/a&gt; in this repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Decompilation to C# (check out the &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/issues/829&#34;&gt;language support status&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Whole-project decompilation (csproj, not sln!)&lt;/li&gt; &#xA; &lt;li&gt;Search for types/methods/properties (learn about the &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Search-Options&#34;&gt;options&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Hyperlink-based type/method/property navigation&lt;/li&gt; &#xA; &lt;li&gt;Base/Derived types navigation, history&lt;/li&gt; &#xA; &lt;li&gt;Assembly metadata explorer (&lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Metadata-Explorer&#34;&gt;feature walkthrough&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;BAML to XAML decompiler&lt;/li&gt; &#xA; &lt;li&gt;ReadyToRun binary support for .NET Core (see the &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/ILSpy.ReadyToRun&#34;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Extensible via &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Plugins&#34;&gt;plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Additional features in DEBUG builds (&lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Additional-Features-in-DEBUG-Builds&#34;&gt;for the devs&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ILSpy is distributed under the MIT License. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/doc/ILSpyAboutPage.txt&#34;&gt;About&lt;/a&gt; doc for details, as well as &lt;a href=&#34;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/doc/third-party-notices.txt&#34;&gt;third party notices&lt;/a&gt; for included open-source libraries.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;h4&gt;Windows:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure PowerShell (at least version) 5.0 is installed.&lt;/li&gt; &#xA; &lt;li&gt;Clone the ILSpy repository using git.&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to download the ILSpy-Tests submodule (used by some test cases).&lt;/li&gt; &#xA; &lt;li&gt;Install Visual Studio (documented version: 17.1). You can install the necessary components in one of 3 ways: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow Microsoft&#39;s instructions for &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/install/import-export-installation-configurations?view=vs-2022#import-a-configuration&#34;&gt;importing a configuration&lt;/a&gt;, and import the .vsconfig file located at the root of the solution.&lt;/li&gt; &#xA;   &lt;li&gt;Alternatively, you can open the ILSpy solution (ILSpy.sln) and Visual Studio will &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/install/import-export-installation-configurations?view=vs-2022#automatically-install-missing-components&#34;&gt;prompt you to install the missing components&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Finally, you can manually install the necessary components via the Visual Studio Installer. The workloads/components are as follows: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Workload &#34;.NET Desktop Development&#34;. This workload includes the .NET Framework 4.8 SDK and the .NET Framework 4.7.2 targeting pack, as well as the &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6.0 SDK&lt;/a&gt; (ILSpy.csproj targets .NET 6.0, but we have net472 projects too). &lt;em&gt;Note: The optional components of this workload are not required for ILSpy&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Workload &#34;Visual Studio extension development&#34; (ILSpy.sln contains a VS extension project) &lt;em&gt;Note: The optional components of this workload are not required for ILSpy&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Individual Component &#34;MSVC v143 - VS 2022 C++ x64/x86 build tools&#34; (or similar) &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;em&gt;The VC++ toolset is optional&lt;/em&gt;; if present it is used for &lt;code&gt;editbin.exe&lt;/code&gt; to modify the stack size used by ILSpy.exe from 1MB to 16MB, because the decompiler makes heavy use of recursion, where small stack sizes lead to problems in very complex methods.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Open ILSpy.sln in Visual Studio. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;NuGet package restore will automatically download further dependencies&lt;/li&gt; &#xA;     &lt;li&gt;Run project &#34;ILSpy&#34; for the ILSpy UI&lt;/li&gt; &#xA;     &lt;li&gt;Use the Visual Studio &#34;Test Explorer&#34; to see/run the tests&lt;/li&gt; &#xA;     &lt;li&gt;If you are only interested in a specific subset of ILSpy, you can also use &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;ILSpy.Wpf.slnf: for the ILSpy WPF frontend&lt;/li&gt; &#xA;       &lt;li&gt;ILSpy.XPlat.slnf: for the cross-platform CLI or PowerShell cmdlets&lt;/li&gt; &#xA;       &lt;li&gt;ILSpy.AddIn.slnf: for the Visual Studio plugin&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Visual Studio 16.3 and later include a version of the .NET (Core) SDK that is managed by the Visual Studio installer - once you update, it may get upgraded too. Please note that ILSpy is only compatible with the .NET 6.0 SDK and Visual Studio will refuse to load some projects in the solution (and unit tests will fail). If this problem occurs, please manually install the .NET 6.0 SDK from &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Unix / Mac:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6.0 SDK&lt;/a&gt; is installed.&lt;/li&gt; &#xA; &lt;li&gt;Make sure &lt;a href=&#34;https://github.com/PowerShell/PowerShell&#34;&gt;PowerShell&lt;/a&gt; is installed (formerly known as PowerShell Core)&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository using git.&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to download the ILSpy-Tests submodule (used by some test cases).&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;dotnet build ILSpy.XPlat.slnf&lt;/code&gt; to build the non-Windows flavors of ILSpy (.NET Core Global Tool and PowerShell Core).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs&lt;/li&gt; &#xA; &lt;li&gt;If you want to contribute a pull request, please add &lt;a href=&#34;https://gist.github.com/siegfriedpammer/75700ea61609eb22714d21885e4eb084&#34;&gt;https://gist.github.com/siegfriedpammer/75700ea61609eb22714d21885e4eb084&lt;/a&gt; to your &lt;code&gt;.git/hooks&lt;/code&gt; to prevent checking in code with wrong indentation. We use tabs and not spaces. The build server runs the same script, so any pull requests using wrong indentation will fail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current and past &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Policy for ILSpy&lt;/h2&gt; &#xA;&lt;p&gt;ILSpy does not collect any personally identifiable information, nor does it send user files to 3rd party services. ILSpy does not use any APM (Application Performance Management) service to collect telemetry or metrics.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GhostPack/Seatbelt</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/GhostPack/Seatbelt</id>
    <link href="https://github.com/GhostPack/Seatbelt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Seatbelt is a C# project that performs a number of security oriented host-survey &#34;safety checks&#34; relevant from both offensive and defensive security perspectives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Seatbelt&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Seatbelt is a C# project that performs a number of security oriented host-survey &#34;safety checks&#34; relevant from both offensive and defensive security perspectives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/andrewchiles&#34;&gt;@andrewchiles&lt;/a&gt;&#39; &lt;a href=&#34;https://github.com/threatexpress/red-team-scripts/raw/master/HostEnum.ps1&#34;&gt;HostEnum.ps1&lt;/a&gt; script and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/leechristensen/Random/raw/master/PowerShellScripts/Get-HostProfile.ps1&#34;&gt;Get-HostProfile.ps1&lt;/a&gt; provided inspiration for many of the artifacts to collect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;@harmj0y&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt; are the primary authors of this implementation.&lt;/p&gt; &#xA;&lt;p&gt;Seatbelt is licensed under the BSD 3-Clause license.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#seatbelt&#34;&gt;Seatbelt&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-line-usage&#34;&gt;Command Line Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-groups&#34;&gt;Command Groups&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#system&#34;&gt;system&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#user&#34;&gt;user&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#misc&#34;&gt;misc&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#additional-command-groups&#34;&gt;Additional Command Groups&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-arguments&#34;&gt;Command Arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#output&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#remote-enumeration&#34;&gt;Remote Enumeration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#building-your-own-modules&#34;&gt;Building Your Own Modules&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#compile-instructions&#34;&gt;Compile Instructions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command Line Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&#xA;                        %&amp;amp;&amp;amp;@@@&amp;amp;&amp;amp;&#xA;                        &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;%%%,                       #&amp;amp;&amp;amp;@@@@@@%%%%%%###############%&#xA;                        &amp;amp;%&amp;amp;   %&amp;amp;%%                        &amp;amp;////(((&amp;amp;%%%%%#%################//((((###%%%%%%%%%%%%%%%&#xA;%%%%%%%%%%%######%%%#%%####%  &amp;amp;%%**#                      @////(((&amp;amp;%%%%%%######################(((((((((((((((((((&#xA;#%#%%%%%%%#######%#%%#######  %&amp;amp;%,,,,,,,,,,,,,,,,         @////(((&amp;amp;%%%%%#%#####################(((((((((((((((((((&#xA;#%#%%%%%%#####%%#%#%%#######  %%%,,,,,,  ,,.   ,,         @////(((&amp;amp;%%%%%%%######################(#(((#(#((((((((((&#xA;#####%%%####################  &amp;amp;%%......  ...   ..         @////(((&amp;amp;%%%%%%%###############%######((#(#(####((((((((&#xA;#######%##########%#########  %%%......  ...   ..         @////(((&amp;amp;%%%%%#########################(#(#######((#####&#xA;###%##%%####################  &amp;amp;%%...............          @////(((&amp;amp;%%%%%%%%##############%#######(#########((#####&#xA;#####%######################  %%%..                       @////(((&amp;amp;%%%%%%%################&#xA;                        &amp;amp;%&amp;amp;   %%%%%      Seatbelt         %////(((&amp;amp;%%%%%%%%#############*&#xA;                        &amp;amp;%%&amp;amp;&amp;amp;&amp;amp;%%%%%        v1.2.0         ,(((&amp;amp;%%%%%%%%%%%%%%%%%,&#xA;                         #%%%%##,&#xA;&#xA;&#xA;Available commands (+ means remote usage is supported):&#xA;&#xA;    + AMSIProviders          - Providers registered for AMSI&#xA;    + AntiVirus              - Registered antivirus (via WMI)&#xA;    + AppLocker              - AppLocker settings, if installed&#xA;      ARPTable               - Lists the current ARP table and adapter information (equivalent to arp -a)&#xA;      AuditPolicies          - Enumerates classic and advanced audit policy settings&#xA;    + AuditPolicyRegistry    - Audit settings via the registry&#xA;    + AutoRuns               - Auto run executables/scripts/programs&#xA;      Certificates           - Finds user and machine personal certificate files&#xA;      CertificateThumbprints - Finds thumbprints for all certificate store certs on the systen&#xA;    + ChromiumBookmarks      - Parses any found Chrome/Edge/Brave/Opera bookmark files&#xA;    + ChromiumHistory        - Parses any found Chrome/Edge/Brave/Opera history files&#xA;    + ChromiumPresence       - Checks if interesting Chrome/Edge/Brave/Opera files exist&#xA;    + CloudCredentials       - AWS/Google/Azure/Bluemix cloud credential files&#xA;    + CloudSyncProviders     - All configured Office 365 endpoints (tenants and teamsites) which are synchronised by OneDrive.&#xA;      CredEnum               - Enumerates the current user&#39;s saved credentials using CredEnumerate()&#xA;    + CredGuard              - CredentialGuard configuration&#xA;      dir                    - Lists files/folders. By default, lists users&#39; downloads, documents, and desktop folders (arguments == [directory] [maxDepth] [regex] [boolIgnoreErrors]&#xA;    + DNSCache               - DNS cache entries (via WMI)&#xA;    + DotNet                 - DotNet versions&#xA;    + DpapiMasterKeys        - List DPAPI master keys&#xA;      Dsregcmd               - Return Tenant information - Replacement for Dsregcmd /status&#xA;      EnvironmentPath        - Current environment %PATH$ folders and SDDL information&#xA;    + EnvironmentVariables   - Current environment variables&#xA;    + ExplicitLogonEvents    - Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days.&#xA;      ExplorerMRUs           - Explorer most recently used files (last 7 days, argument == last X days)&#xA;    + ExplorerRunCommands    - Recent Explorer &#34;run&#34; commands&#xA;      FileInfo               - Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s)&#xA;    + FileZilla              - FileZilla configuration files&#xA;    + FirefoxHistory         - Parses any found FireFox history files&#xA;    + FirefoxPresence        - Checks if interesting Firefox files exist&#xA;    + Hotfixes               - Installed hotfixes (via WMI)&#xA;      IdleTime               - Returns the number of seconds since the current user&#39;s last input.&#xA;    + IEFavorites            - Internet Explorer favorites&#xA;      IETabs                 - Open Internet Explorer tabs&#xA;    + IEUrls                 - Internet Explorer typed URLs (last 7 days, argument == last X days)&#xA;    + InstalledProducts      - Installed products via the registry&#xA;      InterestingFiles       - &#34;Interesting&#34; files matching various patterns in the user&#39;s folder. Note: takes non-trivial time.&#xA;    + InterestingProcesses   - &#34;Interesting&#34; processes - defensive products and admin tools&#xA;      InternetSettings       - Internet settings including proxy configs and zones configuration&#xA;    + KeePass                - Finds KeePass configuration files&#xA;    + LAPS                   - LAPS settings, if installed&#xA;    + LastShutdown           - Returns the DateTime of the last system shutdown (via the registry).&#xA;      LocalGPOs              - Local Group Policy settings applied to the machine/local users&#xA;    + LocalGroups            - Non-empty local groups, &#34;-full&#34; displays all groups (argument == computername to enumerate)&#xA;    + LocalUsers             - Local users, whether they&#39;re active/disabled, and pwd last set (argument == computername to enumerate)&#xA;    + LogonEvents            - Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&#xA;    + LogonSessions          - Windows logon sessions&#xA;      LOLBAS                 - Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time.&#xA;    + LSASettings            - LSA settings (including auth packages)&#xA;    + MappedDrives           - Users&#39; mapped drives (via WMI)&#xA;      McAfeeConfigs          - Finds McAfee configuration files&#xA;      McAfeeSiteList         - Decrypt any found McAfee SiteList.xml configuration files.&#xA;      MicrosoftUpdates       - All Microsoft updates (via COM)&#xA;      NamedPipes             - Named pipe names, any readable ACL information and associated process information.&#xA;    + NetworkProfiles        - Windows network profiles&#xA;    + NetworkShares          - Network shares exposed by the machine (via WMI)&#xA;    + NTLMSettings           - NTLM authentication settings&#xA;      OfficeMRUs             - Office most recently used file list (last 7 days)&#xA;      OneNote                - List OneNote backup files&#xA;    + OptionalFeatures       - List Optional Features/Roles (via WMI)&#xA;      OracleSQLDeveloper     - Finds Oracle SQLDeveloper connections.xml files&#xA;    + OSInfo                 - Basic OS info (i.e. architecture, OS version, etc.)&#xA;    + OutlookDownloads       - List files downloaded by Outlook&#xA;    + PoweredOnEvents        - Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days.&#xA;    + PowerShell             - PowerShell versions and security settings&#xA;    + PowerShellEvents       - PowerShell script block logs (4104) with sensitive data.&#xA;    + PowerShellHistory      - Searches PowerShell console history files for sensitive regex matches.&#xA;      Printers               - Installed Printers (via WMI)&#xA;    + ProcessCreationEvents  - Process creation logs (4688) with sensitive data.&#xA;      Processes              - Running processes with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;-full&#34; enumerates all processes&#xA;    + ProcessOwners          - Running non-session 0 process list with owners. For remote use.&#xA;    + PSSessionSettings      - Enumerates PS Session Settings from the registry&#xA;    + PuttyHostKeys          - Saved Putty SSH host keys&#xA;    + PuttySessions          - Saved Putty configuration (interesting fields) and SSH host keys&#xA;      RDCManFiles            - Windows Remote Desktop Connection Manager settings files&#xA;    + RDPSavedConnections    - Saved RDP connections stored in the registry&#xA;    + RDPSessions            - Current incoming RDP sessions (argument == computername to enumerate)&#xA;    + RDPsettings            - Remote Desktop Server/Client Settings&#xA;      RecycleBin             - Items in the Recycle Bin deleted in the last 30 days - only works from a user context!&#xA;      reg                    - Registry key values (HKLM\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors]&#xA;      RPCMappedEndpoints     - Current RPC endpoints mapped&#xA;    + SCCM                   - System Center Configuration Manager (SCCM) settings, if applicable&#xA;    + ScheduledTasks         - Scheduled tasks (via WMI) that aren&#39;t authored by &#39;Microsoft&#39;, &#34;-full&#34; dumps all Scheduled tasks&#xA;      SearchIndex            - Query results from the Windows Search Index, default term of &#39;passsword&#39;. (argument(s) == &amp;lt;search path&amp;gt; &amp;lt;pattern1,pattern2,...&amp;gt;&#xA;      SecPackageCreds        - Obtains credentials from security packages&#xA;      SecurityPackages       - Enumerates the security packages currently available using EnumerateSecurityPackagesA()&#xA;      Services               - Services with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;-full&#34; dumps all processes&#xA;    + SlackDownloads         - Parses any found &#39;slack-downloads&#39; files&#xA;    + SlackPresence          - Checks if interesting Slack files exist&#xA;    + SlackWorkspaces        - Parses any found &#39;slack-workspaces&#39; files&#xA;    + SuperPutty             - SuperPutty configuration files&#xA;    + Sysmon                 - Sysmon configuration from the registry&#xA;    + SysmonEvents           - Sysmon process creation logs (1) with sensitive data.&#xA;      TcpConnections         - Current TCP connections and their associated processes and services&#xA;      TokenGroups            - The current token&#39;s local and domain groups&#xA;      TokenPrivileges        - Currently enabled token privileges (e.g. SeDebugPrivilege/etc.)&#xA;    + UAC                    - UAC system policies via the registry&#xA;      UdpConnections         - Current UDP connections and associated processes and services&#xA;      UserRightAssignments   - Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate&#xA;      WifiProfile            - Enumerates the saved Wifi profiles and extract the ssid, authentication type, cleartext key/passphrase (when possible)&#xA;    + WindowsAutoLogon       - Registry autologon information&#xA;      WindowsCredentialFiles - Windows credential DPAPI blobs&#xA;    + WindowsDefender        - Windows Defender settings (including exclusion locations)&#xA;    + WindowsEventForwarding - Windows Event Forwarding (WEF) settings via the registry&#xA;    + WindowsFirewall        - Non-standard firewall rules, &#34;-full&#34; dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public)&#xA;      WindowsVault           - Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge).&#xA;    + WMI                    - Runs a specified WMI query&#xA;      WMIEventConsumer       - Lists WMI Event Consumers&#xA;      WMIEventFilter         - Lists WMI Event Filters&#xA;      WMIFilterBinding       - Lists WMI Filter to Consumer Bindings&#xA;    + WSUS                   - Windows Server Update Services (WSUS) settings, if applicable&#xA;&#xA;&#xA;Seatbelt has the following command groups: All, User, System, Slack, Chromium, Remote, Misc&#xA;&#xA;    You can invoke command groups with         &#34;Seatbelt.exe &amp;lt;group&amp;gt;&#34;&#xA;&#xA;&#xA;    Or command groups except specific commands &#34;Seatbelt.exe &amp;lt;group&amp;gt; -Command&#34;&#xA;&#xA;   &#34;Seatbelt.exe -group=all&#34; runs all commands&#xA;&#xA;   &#34;Seatbelt.exe -group=user&#34; runs the following commands:&#xA;&#xA;        Certificates, CertificateThumbprints, ChromiumPresence, CloudCredentials, CloudSyncProviders,&#xA;        CredEnum, dir, DpapiMasterKeys, Dsregcmd,&#xA;        ExplorerMRUs, ExplorerRunCommands, FileZilla, FirefoxPresence,&#xA;        IdleTime, IEFavorites, IETabs, IEUrls,&#xA;        KeePass, MappedDrives, OfficeMRUs, OneNote,&#xA;        OracleSQLDeveloper, PowerShellHistory, PuttyHostKeys, PuttySessions,&#xA;        RDCManFiles, RDPSavedConnections, SecPackageCreds, SlackDownloads,&#xA;        SlackPresence, SlackWorkspaces, SuperPutty, TokenGroups,&#xA;        WindowsCredentialFiles, WindowsVault&#xA;&#xA;   &#34;Seatbelt.exe -group=system&#34; runs the following commands:&#xA;&#xA;        AMSIProviders, AntiVirus, AppLocker, ARPTable, AuditPolicies,&#xA;        AuditPolicyRegistry, AutoRuns, Certificates, CertificateThumbprints,&#xA;        CredGuard, DNSCache, DotNet, EnvironmentPath,&#xA;        EnvironmentVariables, Hotfixes, InterestingProcesses, InternetSettings,&#xA;        LAPS, LastShutdown, LocalGPOs, LocalGroups,&#xA;        LocalUsers, LogonSessions, LSASettings, McAfeeConfigs,&#xA;        NamedPipes, NetworkProfiles, NetworkShares, NTLMSettings,&#xA;        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell,&#xA;        Processes, PSSessionSettings, RDPSessions, RDPsettings,&#xA;        SCCM, Services, Sysmon, TcpConnections,&#xA;        TokenPrivileges, UAC, UdpConnections, UserRightAssignments,&#xA;        WifiProfile, WindowsAutoLogon, WindowsDefender, WindowsEventForwarding,&#xA;        WindowsFirewall, WMI, WMIEventConsumer, WMIEventFilter,&#xA;        WMIFilterBinding, WSUS&#xA;&#xA;   &#34;Seatbelt.exe -group=slack&#34; runs the following commands:&#xA;&#xA;        SlackDownloads, SlackPresence, SlackWorkspaces&#xA;&#xA;   &#34;Seatbelt.exe -group=chromium&#34; runs the following commands:&#xA;&#xA;        ChromiumBookmarks, ChromiumHistory, ChromiumPresence&#xA;&#xA;   &#34;Seatbelt.exe -group=remote&#34; runs the following commands:&#xA;&#xA;        AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials,&#xA;        DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables,&#xA;        ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes,&#xA;        InterestingProcesses, KeePass, LastShutdown, LocalGroups,&#xA;        LocalUsers, LogonEvents, LogonSessions, LSASettings,&#xA;        MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings,&#xA;        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell,&#xA;        ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions,&#xA;        RDPSavedConnections, RDPSessions, RDPsettings, Sysmon,&#xA;        WindowsDefender, WindowsEventForwarding, WindowsFirewall&#xA;&#xA;   &#34;Seatbelt.exe -group=misc&#34; runs the following commands:&#xA;&#xA;        ChromiumBookmarks, ChromiumHistory, ExplicitLogonEvents, FileInfo, FirefoxHistory,&#xA;        InstalledProducts, InterestingFiles, LogonEvents, LOLBAS,&#xA;        McAfeeSiteList, MicrosoftUpdates, OutlookDownloads, PowerShellEvents,&#xA;        Printers, ProcessCreationEvents, ProcessOwners, RecycleBin,&#xA;        reg, RPCMappedEndpoints, ScheduledTasks, SearchIndex,&#xA;        SecurityPackages, SysmonEvents&#xA;&#xA;&#xA;Examples:&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; [Command2] ...&#39; will run one or more specified checks only&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; -full&#39; will return complete results for a command without any filtering.&#xA;    &#39;Seatbelt.exe &#34;&amp;lt;Command&amp;gt; [argument]&#34;&#39; will pass an argument to a command that supports it (note the quotes).&#xA;    &#39;Seatbelt.exe -group=all&#39; will run ALL enumeration checks, can be combined with &#34;-full&#34;.&#xA;    &#39;Seatbelt.exe -group=all -AuditPolicies&#39; will run all enumeration checks EXCEPT AuditPolicies, can be combined with &#34;-full&#34;.&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\USER -password=PASSWORD]&#39; will run an applicable check remotely&#xA;    &#39;Seatbelt.exe -group=remote -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\USER -password=PASSWORD]&#39; will run remote specific checks&#xA;    &#39;Seatbelt.exe -group=system -outputfile=&#34;C:\Temp\out.txt&#34;&#39; will run system checks and output to a .txt file.&#xA;    &#39;Seatbelt.exe -group=user -q -outputfile=&#34;C:\Temp\out.json&#34;&#39; will run in quiet mode with user checks and output to a .json file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; searches that target users will run for the current user if not-elevated and for ALL users if elevated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A more detailed wiki is coming...&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Command Groups&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; many commands do some type of filtering by default. Supplying the &lt;code&gt;-full&lt;/code&gt; argument prevents filtering output. Also, the command group &lt;code&gt;all&lt;/code&gt; will run all current checks.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command will run ALL checks and returns ALL output:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=all -full&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;system&lt;/h3&gt; &#xA;&lt;p&gt;Runs checks that mine interesting data about the system.&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=system&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AMSIProviders&lt;/td&gt; &#xA;   &lt;td&gt;Providers registered for AMSI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AntiVirus&lt;/td&gt; &#xA;   &lt;td&gt;Registered antivirus (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppLocker&lt;/td&gt; &#xA;   &lt;td&gt;AppLocker settings, if installed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARPTable&lt;/td&gt; &#xA;   &lt;td&gt;Lists the current ARP table and adapter information(equivalent to arp -a)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AuditPolicies&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates classic and advanced audit policy settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AuditPolicyRegistry&lt;/td&gt; &#xA;   &lt;td&gt;Audit settings via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AutoRuns&lt;/td&gt; &#xA;   &lt;td&gt;Auto run executables/scripts/programs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Certificates&lt;/td&gt; &#xA;   &lt;td&gt;User and machine personal certificate files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CertificateThumbprints&lt;/td&gt; &#xA;   &lt;td&gt;Thumbprints for all certificate store certs on the system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CredGuard&lt;/td&gt; &#xA;   &lt;td&gt;CredentialGuard configuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DNSCache&lt;/td&gt; &#xA;   &lt;td&gt;DNS cache entries (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DotNet&lt;/td&gt; &#xA;   &lt;td&gt;DotNet versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EnvironmentPath&lt;/td&gt; &#xA;   &lt;td&gt;Current environment %PATH$ folders and SDDL information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EnvironmentVariables&lt;/td&gt; &#xA;   &lt;td&gt;Current user environment variables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hotfixes&lt;/td&gt; &#xA;   &lt;td&gt;Installed hotfixes (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InterestingProcesses&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Interesting&#34; processes - defensive products and admin tools&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternetSettings&lt;/td&gt; &#xA;   &lt;td&gt;Internet settings including proxy configs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS&lt;/td&gt; &#xA;   &lt;td&gt;LAPS settings, if installed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LastShutdown&lt;/td&gt; &#xA;   &lt;td&gt;Returns the DateTime of the last system shutdown (via the registry)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalGPOs&lt;/td&gt; &#xA;   &lt;td&gt;Local Group Policy settings applied to the machine/local users&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalGroups&lt;/td&gt; &#xA;   &lt;td&gt;Non-empty local groups, &#34;full&#34; displays all groups (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalUsers&lt;/td&gt; &#xA;   &lt;td&gt;Local users, whether they&#39;re active/disabled, and pwd last set (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogonSessions&lt;/td&gt; &#xA;   &lt;td&gt;Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LSASettings&lt;/td&gt; &#xA;   &lt;td&gt;LSA settings (including auth packages)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;McAfeeConfigs&lt;/td&gt; &#xA;   &lt;td&gt;Finds McAfee configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NamedPipes&lt;/td&gt; &#xA;   &lt;td&gt;Named pipe names and any readable ACL information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NetworkProfiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows network profiles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NetworkShares&lt;/td&gt; &#xA;   &lt;td&gt;Network shares exposed by the machine (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NTLMSettings&lt;/td&gt; &#xA;   &lt;td&gt;NTLM authentication settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OptionalFeatures&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OSInfo&lt;/td&gt; &#xA;   &lt;td&gt;Basic OS info (i.e. architecture, OS version, etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PoweredOnEvents&lt;/td&gt; &#xA;   &lt;td&gt;Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShell&lt;/td&gt; &#xA;   &lt;td&gt;PowerShell versions and security settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Processes&lt;/td&gt; &#xA;   &lt;td&gt;Running processes with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;full&#34; enumerates all processes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PSSessionSettings&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates PS Session Settings from the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPSessions&lt;/td&gt; &#xA;   &lt;td&gt;Current incoming RDP sessions (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPsettings&lt;/td&gt; &#xA;   &lt;td&gt;Remote Desktop Server/Client Settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SCCM&lt;/td&gt; &#xA;   &lt;td&gt;System Center Configuration Manager (SCCM) settings, if applicable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Services&lt;/td&gt; &#xA;   &lt;td&gt;Services with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;full&#34; dumps all processes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sysmon&lt;/td&gt; &#xA;   &lt;td&gt;Sysmon configuration from the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TcpConnections&lt;/td&gt; &#xA;   &lt;td&gt;Current TCP connections and their associated processes and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TokenPrivileges&lt;/td&gt; &#xA;   &lt;td&gt;Currently enabled token privileges (e.g. SeDebugPrivilege/etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UAC&lt;/td&gt; &#xA;   &lt;td&gt;UAC system policies via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UdpConnections&lt;/td&gt; &#xA;   &lt;td&gt;Current UDP connections and associated processes and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UserRightAssignments&lt;/td&gt; &#xA;   &lt;td&gt;Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WifiProfile&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsAutoLogon&lt;/td&gt; &#xA;   &lt;td&gt;Registry autologon information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsDefender&lt;/td&gt; &#xA;   &lt;td&gt;Windows Defender settings (including exclusion locations)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsEventForwarding&lt;/td&gt; &#xA;   &lt;td&gt;Windows Event Forwarding (WEF) settings via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsFirewall&lt;/td&gt; &#xA;   &lt;td&gt;Non-standard firewall rules, &#34;full&#34; dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIEventConsumer&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Event Consumers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIEventFilter&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Event Filters&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIFilterBinding&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Filter to Consumer Bindings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WSUS&lt;/td&gt; &#xA;   &lt;td&gt;Windows Server Update Services (WSUS) settings, if applicable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;user&lt;/h3&gt; &#xA;&lt;p&gt;Runs checks that mine interesting data about the currently logged on user (if not elevated) or ALL users (if elevated).&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=user&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Certificates&lt;/td&gt; &#xA;   &lt;td&gt;User and machine personal certificate files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CertificateThumbprints&lt;/td&gt; &#xA;   &lt;td&gt;Thumbprints for all certificate store certs on the system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Chrome/Edge/Brave/Opera files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudCredentials&lt;/td&gt; &#xA;   &lt;td&gt;AWS/Google/Azure cloud credential files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudSyncProviders&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CredEnum&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates the current user&#39;s saved credentials using CredEnumerate()&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir&lt;/td&gt; &#xA;   &lt;td&gt;Lists files/folders. By default, lists users&#39; downloads, documents, and desktop folders (arguments == &amp;lt;directory&amp;gt; &amp;lt;depth&amp;gt; &amp;lt;regex&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DpapiMasterKeys&lt;/td&gt; &#xA;   &lt;td&gt;List DPAPI master keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dsregcmd&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplorerMRUs&lt;/td&gt; &#xA;   &lt;td&gt;Explorer most recently used files (last 7 days, argument == last X days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplorerRunCommands&lt;/td&gt; &#xA;   &lt;td&gt;Recent Explorer &#34;run&#34; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FileZilla&lt;/td&gt; &#xA;   &lt;td&gt;FileZilla configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirefoxPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Firefox files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IdleTime&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of seconds since the current user&#39;s last input.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IEFavorites&lt;/td&gt; &#xA;   &lt;td&gt;Internet Explorer favorites&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IETabs&lt;/td&gt; &#xA;   &lt;td&gt;Open Internet Explorer tabs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IEUrls&lt;/td&gt; &#xA;   &lt;td&gt;Internet Explorer typed URLs (last 7 days, argument == last X days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KeePass&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MappedDrives&lt;/td&gt; &#xA;   &lt;td&gt;Users&#39; mapped drives (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OfficeMRUs&lt;/td&gt; &#xA;   &lt;td&gt;Office most recently used file list (last 7 days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OneNote&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OracleSQLDeveloper&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShellHistory&lt;/td&gt; &#xA;   &lt;td&gt;Iterates through every local user and attempts to read their PowerShell console history if successful will print it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PuttyHostKeys&lt;/td&gt; &#xA;   &lt;td&gt;Saved Putty SSH host keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PuttySessions&lt;/td&gt; &#xA;   &lt;td&gt;Saved Putty configuration (interesting fields) and SSH host keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDCManFiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows Remote Desktop Connection Manager settings files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPSavedConnections&lt;/td&gt; &#xA;   &lt;td&gt;Saved RDP connections stored in the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecPackageCreds&lt;/td&gt; &#xA;   &lt;td&gt;Obtains credentials from security packages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackDownloads&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found &#39;slack-downloads&#39; files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Slack files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackWorkspaces&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found &#39;slack-workspaces&#39; files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SuperPutty&lt;/td&gt; &#xA;   &lt;td&gt;SuperPutty configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TokenGroups&lt;/td&gt; &#xA;   &lt;td&gt;The current token&#39;s local and domain groups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsCredentialFiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows credential DPAPI blobs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsVault&lt;/td&gt; &#xA;   &lt;td&gt;Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;misc&lt;/h3&gt; &#xA;&lt;p&gt;Runs all miscellaneous checks.&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=misc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumBookmarks&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found Chrome/Edge/Brave/Opera bookmark files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumHistory&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found Chrome/Edge/Brave/Opera history files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplicitLogonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FileInfo&lt;/td&gt; &#xA;   &lt;td&gt;Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirefoxHistory&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found FireFox history files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InstalledProducts&lt;/td&gt; &#xA;   &lt;td&gt;Installed products via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InterestingFiles&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Interesting&#34; files matching various patterns in the user&#39;s folder. Note: takes non-trivial time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOLBAS&lt;/td&gt; &#xA;   &lt;td&gt;Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;McAfeeSiteList&lt;/td&gt; &#xA;   &lt;td&gt;Decrypt any found McAfee SiteList.xml configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MicrosoftUpdates&lt;/td&gt; &#xA;   &lt;td&gt;All Microsoft updates (via COM)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OutlookDownloads&lt;/td&gt; &#xA;   &lt;td&gt;List files downloaded by Outlook&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShellEvents&lt;/td&gt; &#xA;   &lt;td&gt;PowerShell script block logs (4104) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Printers&lt;/td&gt; &#xA;   &lt;td&gt;Installed Printers (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ProcessCreationEvents&lt;/td&gt; &#xA;   &lt;td&gt;Process creation logs (4688) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ProcessOwners&lt;/td&gt; &#xA;   &lt;td&gt;Running non-session 0 process list with owners. For remote use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RecycleBin&lt;/td&gt; &#xA;   &lt;td&gt;Items in the Recycle Bin deleted in the last 30 days - only works from a user context!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reg&lt;/td&gt; &#xA;   &lt;td&gt;Registry key values (HKLM\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RPCMappedEndpoints&lt;/td&gt; &#xA;   &lt;td&gt;Current RPC endpoints mapped&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ScheduledTasks&lt;/td&gt; &#xA;   &lt;td&gt;Scheduled tasks (via WMI) that aren&#39;t authored by &#39;Microsoft&#39;, &#34;full&#34; dumps all Scheduled tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SearchIndex&lt;/td&gt; &#xA;   &lt;td&gt;Query results from the Windows Search Index, default term of &#39;passsword&#39;. (argument(s) == &amp;lt;search path&amp;gt; &amp;lt;pattern1,pattern2,...&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecurityPackages&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates the security packages currently available using EnumerateSecurityPackagesA()&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SysmonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Sysmon process creation logs (1) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Additional Command Groups&lt;/h3&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=GROUPNAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alias&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slack&lt;/td&gt; &#xA;   &lt;td&gt;Runs modules that start with &#34;Slack*&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chromium&lt;/td&gt; &#xA;   &lt;td&gt;Runs modules that start with &#34;Chromium*&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remote&lt;/td&gt; &#xA;   &lt;td&gt;Runs the following modules (for use against a remote system): AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials, DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables, ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes, InterestingProcesses, KeePass, LastShutdown, LocalGroups, LocalUsers, LogonEvents, LogonSessions, LSASettings, MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings, OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell, ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions, RDPSavedConnections, RDPSessions, RDPsettings, Sysmon, WindowsDefender, WindowsEventForwarding, WindowsFirewall&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Command Arguments&lt;/h2&gt; &#xA;&lt;p&gt;Command that accept arguments have it noted in their description. To pass an argument to a command, enclose the command an arguments in double quotes.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command returns 4624 logon events for the last 30 days:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe &#34;LogonEvents 30&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following command queries a registry three levels deep, returning only keys/valueNames/values that match the regex &lt;code&gt;.*defini.*&lt;/code&gt;, and ignoring any errors that occur.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe &#34;reg \&#34;HKLM\SOFTWARE\Microsoft\Windows Defender\&#34; 3 .*defini.* true&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt can redirect its output to a file with the &lt;code&gt;-outputfile=&#34;C:\Path\file.txt&#34;&lt;/code&gt; argument. If the file path ends in .json, the output will be structured json.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command will output the results of system checks to a txt file:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=system -outputfile=&#34;C:\Temp\system.txt&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Remote Enumeration&lt;/h2&gt; &#xA;&lt;p&gt;Commands noted with a + in the help menu can be run remotely against another system. This is performed over WMI via queries for WMI classes and WMI&#39;s StdRegProv for registry enumeration.&lt;/p&gt; &#xA;&lt;p&gt;To enumerate a remote system, supply &lt;code&gt;-computername=COMPUTER.DOMAIN.COM&lt;/code&gt; - an alternate username and password can be specified with &lt;code&gt;-username=DOMAIN\USER -password=PASSWORD&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command runs remote-focused checks against a remote system:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=remote -computername=192.168.230.209 -username=THESHIRE\sam -password=&#34;yum \&#34;po-ta-toes\&#34;&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Your Own Modules&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt&#39;s structure is completely modular, allowing for additional command modules to be dropped into the file structure and loaded up dynamically.&lt;/p&gt; &#xA;&lt;p&gt;There is a commented command module template at &lt;code&gt;.\Seatbelt\Commands\Template.cs&lt;/code&gt; for reference. Once built, drop the module in the logical file location, include it in the project in the Visual Studio Solution Explorer, and compile.&lt;/p&gt; &#xA;&lt;h2&gt;Compile Instructions&lt;/h2&gt; &#xA;&lt;p&gt;We are not planning on releasing binaries for Seatbelt, so you will have to compile yourself.&lt;/p&gt; &#xA;&lt;p&gt;Seatbelt has been built against .NET 3.5 and 4.0 with C# 8.0 features and is compatible with &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio Community Edition&lt;/a&gt;. Simply open up the project .sln, choose &#34;release&#34;, and build. To change the target .NET framework version, &lt;a href=&#34;https://github.com/GhostPack/Seatbelt/issues/27&#34;&gt;modify the project&#39;s settings&lt;/a&gt; and rebuild the project.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt incorporates various collection items, code C# snippets, and bits of PoCs found throughout research for its capabilities. These ideas, snippets, and authors are highlighted in the appropriate locations in the source code, and include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/andrewchiles&#34;&gt;@andrewchiles&lt;/a&gt;&#39; &lt;a href=&#34;https://github.com/threatexpress/red-team-scripts/raw/master/HostEnum.ps1&#34;&gt;HostEnum.ps1&lt;/a&gt; script and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/leechristensen/Random/raw/master/PowerShellScripts/Get-HostProfile.ps1&#34;&gt;Get-HostProfile.ps1&lt;/a&gt; provided inspiration for many of the artifacts to collect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/33935825/pinvoke-netlocalgroupgetmembers-runs-into-fatalexecutionengineerror/33939889#33939889&#34;&gt;Boboes&#39; code concerning NetLocalGroupGetMembers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ambyte/01664dc7ee576f69042c&#34;&gt;ambyte&#39;s code for converting a mapped drive letter to a network path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2146153/how-to-get-the-logon-sid-in-c-sharp/2146418#2146418&#34;&gt;Igor Korkhov&#39;s code to retrieve current token group information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/498371/how-to-detect-if-my-application-is-running-in-a-virtual-machine/11145280#11145280&#34;&gt;RobSiklos&#39; snippet to determine if a host is a virtual machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1410127/c-sharp-test-if-user-has-write-access-to-a-folder/21996345#21996345&#34;&gt;JGU&#39;s snippet on file/folder ACL right comparison&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://csharphelper.com/blog/2015/06/find-files-that-match-multiple-patterns-in-c/&#34;&gt;Rod Stephens&#39; pattern for recursive file enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4349743/setting-size-of-token-privileges-luid-and-attributes-array-returned-by-gettokeni&#34;&gt;SwDevMan81&#39;s snippet for enumerating current token privileges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Invoke-IR/ACE/raw/master/ACE-Management/PS-ACE/Scripts/ACE_Get-KerberosTicketCache.ps1&#34;&gt;Jared Atkinson&#39;s PowerShell work on Kerberos ticket caches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dreamincode.net/forums/topic/135033-increment-memory-pointer-issue/&#34;&gt;darkmatter08&#39;s Kerberos C# snippet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Numerous &lt;a href=&#34;https://www.pinvoke.net/&#34;&gt;PInvoke.net&lt;/a&gt; samples &amp;lt;3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codeproject.com/Articles/18179/Using-the-Local-Security-Authority-to-Enumerate-Us&#34;&gt;Jared Hill&#39;s awesome CodeProject to use Local Security Authority to Enumerate User Sessions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/lync/en-US/e949b8d6-17ad-4afc-88cd-0019a3ac9df9/powershell-alternative-to-arp-a?forum=ITCG&#34;&gt;Fred&#39;s code on querying the ARP cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/577433/which-pid-listens-on-a-given-port-in-c-sharp/577660#577660&#34;&gt;ShuggyCoUk&#39;s snippet on querying the TCP connection table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/yizhang82/a1268d3ea7295a8a1496e01d60ada816&#34;&gt;yizhang82&#39;s example of using reflection to interact with COM objects through C#&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/djhohnstein&#34;&gt;@djhohnstein&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/djhohnstein/SharpWeb/raw/master/Edge/SharpEdge.cs&#34;&gt;SharpWeb project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/djhohnstein&#34;&gt;@djhohnstein&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/djhohnstein/EventLogParser&#34;&gt;EventLogParser project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/cmaddalena&#34;&gt;@cmaddalena&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/chrismaddalena/SharpCloud&#34;&gt;SharpCloud project&lt;/a&gt;, BSD 3-Clause&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/_RastaMouse&#34;&gt;@_RastaMouse&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/rasta-mouse/Watson/&#34;&gt;Watson project&lt;/a&gt;, GPL License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/_RastaMouse&#34;&gt;@_RastaMouse&lt;/a&gt;&#39;s &lt;a href=&#34;https://rastamouse.me/2018/09/enumerating-applocker-config/&#34;&gt;Work on AppLocker enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/peewpw&#34;&gt;@peewpw&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/peewpw/Invoke-WCMDump/raw/master/Invoke-WCMDump.ps1&#34;&gt;Invoke-WCMDump project&lt;/a&gt;, GPL License&lt;/li&gt; &#xA; &lt;li&gt;TrustedSec&#39;s &lt;a href=&#34;https://github.com/trustedsec/HoneyBadger/tree/master/modules/post/windows/gather&#34;&gt;HoneyBadger project&lt;/a&gt;, BSD 3-Clause&lt;/li&gt; &#xA; &lt;li&gt;CENTRAL Solutions&#39;s &lt;a href=&#34;https://www.centrel-solutions.com/support/tools.aspx?feature=auditrights&#34;&gt;Audit User Rights Assignment Project&lt;/a&gt;, No license&lt;/li&gt; &#xA; &lt;li&gt;Collection ideas inspired from &lt;a href=&#34;https://twitter.com/ukstufus&#34;&gt;@ukstufus&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/stufus/reconerator&#34;&gt;Reconerator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Office MRU locations and timestamp parsing information from Dustin Hurlbut&#39;s paper &lt;a href=&#34;https://ad-pdf.s3.amazonaws.com/Microsoft_Office_2007-2010_Registry_ArtifactsFINAL.pdf&#34;&gt;Microsoft Office 2007, 2010 - Registry Artifacts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands&#34;&gt;Windows Commands list&lt;/a&gt;, used for sensitive regex construction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21805038/how-do-i-pinvoke-rpcmgmtepeltinqnext&#34;&gt;Ryan Ries&#39; code for enumeration mapped RPC endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/5941873&#34;&gt;Chris Haas&#39; post on EnumerateSecurityPackages()&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/carlos_perez&#34;&gt;darkoperator&lt;/a&gt;&#39;s work &lt;a href=&#34;https://github.com/trustedsec/HoneyBadger&#34;&gt;on the HoneyBadger project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/airzero24&#34;&gt;@airzero24&lt;/a&gt;&#39;s work on &lt;a href=&#34;https://github.com/airzero24/WMIReg&#34;&gt;WMI Registry enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alexandru&#39;s answer on &lt;a href=&#34;https://stackoverflow.com/questions/26217199/what-are-some-alternatives-to-registrykey-openbasekey-in-net-3-5&#34;&gt;RegistryKey.OpenBaseKey alternatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tomas Vera&#39;s &lt;a href=&#34;http://www.tomasvera.com/programming/using-javascriptserializer-to-parse-json-objects/&#34;&gt;post on JavaScriptSerializer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marc Gravell&#39;s &lt;a href=&#34;https://stackoverflow.com/a/929418&#34;&gt;note on recursively listing files/folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mattifestation&#34;&gt;@mattifestation&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/mattifestation/PSSysmonTools/raw/master/PSSysmonTools/Code/SysmonRuleParser.ps1#L589-L595&#34;&gt;Sysmon rule parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Some inspiration from spolnik&#39;s &lt;a href=&#34;https://github.com/spolnik/Simple.CredentialsManager&#34;&gt;Simple.CredentialsManager project&lt;/a&gt;, Apache 2 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tenforums.com/tutorials/68926-verify-if-device-guard-enabled-disabled-windows-10-a.html&#34;&gt;This post on Credential Guard settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/windows/en-US/b0e13a16-51a6-4aca-8d44-c85e097f882b/nametype-in-nla-information-for-a-network-profile&#34;&gt;This thread&lt;/a&gt; on network profile information&lt;/li&gt; &#xA; &lt;li&gt;Mark McKinnon&#39;s post on &lt;a href=&#34;http://cfed-ttf.blogspot.com/2009/08/decoding-datecreated-and.html&#34;&gt;decoding the DateCreated and DateLastConnected SSID values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This Specops &lt;a href=&#34;https://specopssoft.com/blog/things-work-group-policy-caching/&#34;&gt;post on group policy caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sa_ddam213&#39;s StackOverflow post on &lt;a href=&#34;https://stackoverflow.com/questions/18071412/list-filenames-in-the-recyclebin-with-c-sharp-without-using-any-external-files&#34;&gt;enumerating items in the Recycle Bin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kirill Osenkov&#39;s &lt;a href=&#34;https://stackoverflow.com/a/15608028&#34;&gt;code for managed assembly detection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/mono/linux-packaging-mono/raw/d356d2b7db91d62b80a61eeb6fbc70a402ac3cac/external/corefx/LICENSE.TXT&#34;&gt;Mono project&lt;/a&gt; for the SecBuffer/SecBufferDesc classes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/elad_shamir&#34;&gt;Elad Shamir&lt;/a&gt; and his &lt;a href=&#34;https://github.com/eladshamir/Internal-Monologue/&#34;&gt;Internal-Monologue&lt;/a&gt; project, &lt;a href=&#34;https://twitter.com/mysmartlogon&#34;&gt;Vincent Le Toux&lt;/a&gt; for his &lt;a href=&#34;https://github.com/vletoux/DetectPasswordViaNTLMInFlow/&#34;&gt;DetectPasswordViaNTLMInFlow&lt;/a&gt; project, and Lee Christensen for this &lt;a href=&#34;https://github.com/leechristensen/GetNTLMChallenge/&#34;&gt;GetNTLMChallenge&lt;/a&gt; project. All of these served as inspiration int he SecPackageCreds command.&lt;/li&gt; &#xA; &lt;li&gt;@leftp and @eksperience&#39;s &lt;a href=&#34;https://github.com/EncodeGroup/Gopher&#34;&gt;Gopher project&lt;/a&gt; for inspiration for the FileZilla and SuperPutty commands&lt;/li&gt; &#xA; &lt;li&gt;@funoverip for the original McAfee SiteList.xml decryption code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;ve tried to do our due diligence for citations, but if we&#39;ve left someone/something out, please let us know!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>files-community/Files</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/files-community/Files</id>
    <link href="https://github.com/files-community/Files" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern file manager for Windows&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Files Logo&#34; src=&#34;https://raw.githubusercontent.com/files-community/Files/main/src/Files.Uwp/Assets/AppTiles/StoreLogo.scale-400.png&#34; width=&#34;100px&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Files&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/filescommunity/Files/_build/latest?definitionId=4&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/filescommunity/Files/_apis/build/status/Build%20Pipeline?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/files&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/725513575971684472/widget.png&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://www.microsoft.com/store/apps/9NGHP3DX8HDX&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Microsoft%20Store-Download-purple.svg?style=flat-round&#34; alt=&#34;Store link&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://files.community/download/stable&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Sideload-Download-purple.svg?style=flat-round&#34; alt=&#34;Sideload link&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://files.community/download/preview&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Preview-Download-blue.svg?style=flat-round&#34; alt=&#34;Preview link&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Files?&lt;/h2&gt; &#xA;&lt;p&gt;Files is a file manager for Windows with a powerful yet intuitive design. It has features like multiple tabs, panes, columns, shell extensions in the context menu and tags.&lt;/p&gt; &#xA;&lt;p&gt;We welcome discussions and contributions to our repository, however to help maintain a healthy community, please read our &lt;a href=&#34;https://github.com/files-community/Files/raw/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;We use App Center to track which settings are being used, find bugs, and fix crashes. Information sent to App Center is anonymous and free of any user or contextual data.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Have any questions? Check out our &lt;a href=&#34;https://files.community/docs&#34;&gt;documentation site&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;h3&gt;1: Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/vs/&#34;&gt;Visual Studio 2022&lt;/a&gt; with the UWP Development Kit and following individual components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows 11 SDK (10.0.22000)&lt;/li&gt; &#xA;   &lt;li&gt;MSVC v143 - VS 2022 C++ x64/x86 build tools&lt;/li&gt; &#xA;   &lt;li&gt;C++ ATL for latest v143 build tools (x86 &amp;amp; x64)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2: Clone the repository.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps&#34;&gt;git clone https://github.com/files-community/Files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a local copy of the repository.&lt;/p&gt; &#xA;&lt;h3&gt;3: Build the project&lt;/h3&gt; &#xA;&lt;p&gt;To build the app in development mode, open the sln file in Visual Studio (Files.sln) and set the Files.Package project as the startup item by right-clicking on &lt;code&gt;Files.Package&lt;/code&gt; in the solution explorer &amp;amp; hitting ‘Set as Startup item’.&lt;/p&gt; &#xA;&lt;p&gt;In the architecture pane, select the correct architecture for your system as Debug which should look like this: &lt;img src=&#34;https://user-images.githubusercontent.com/39923744/148721296-2bd132d0-4a4d-4555-8f58-16b00b18ade3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute to this project? Feel free to open an &lt;a href=&#34;https://github.com/files-community/Files/issues&#34;&gt;issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/files-community/Files/pulls&#34;&gt;pull request&lt;/a&gt;. View our &lt;a href=&#34;https://github.com/files-community/Files/raw/main/.github/CONTRIBUTING.md&#34;&gt;Contributing guidelines&lt;/a&gt; to make sure you&#39;re up to date on the latest guidelines for contributing to the Files codebase.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/files-community/Files/main/src/Files.Uwp/Assets/FilesHome.png&#34; alt=&#34;Files&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AvaloniaUI/Avalonia</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/AvaloniaUI/Avalonia</id>
    <link href="https://github.com/AvaloniaUI/Avalonia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform UI framework for .NET&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://t.me/Avalonia&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Patrolavia/telegram-badge/master/chat.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/AvaloniaUI/Avalonia?utm_campaign=pr-badge&amp;amp;utm_content=badge&amp;amp;utm_medium=badge&amp;amp;utm_source=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-46BC99&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_build/latest?definitionId=4&#34;&gt;&lt;img src=&#34;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_apis/build/status/AvaloniaUI.Avalonia&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/avaloniaui/avalonia.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/Avalonia&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Avalonia.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Avalonia&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/avalonia&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/avaloniaui/avalonia.svg?sanitize=true&#34; alt=&#34;Size&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 About&lt;/h2&gt; &#xA;&lt;p&gt;Avalonia is a cross-platform UI framework for dotnet, providing a flexible styling system and supporting a wide range of Operating Systems such as Windows, Linux, macOS. Avalonia is mature and production ready. We also have in beta release support for iOS, Android and in early stages support for browser via WASM.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4672627/152126443-932966cf-57e7-4e77-9be6-62463a66b9f8.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see the status of some of our features, please see our &lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia/issues/2239&#34;&gt;Roadmap&lt;/a&gt;. You can also see what &lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia/issues/3538&#34;&gt;breaking changes&lt;/a&gt; we have planned and what our &lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia/wiki/Breaking-Changes&#34;&gt;past breaking changes&lt;/a&gt; have been. &lt;a href=&#34;https://github.com/AvaloniaCommunity/awesome-avalonia&#34;&gt;Awesome Avalonia&lt;/a&gt; is community-curated list of awesome Avalonia UI tools, libraries, projects and resources. Go and see what people are building with Avalonia!&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The Avalonia &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=AvaloniaTeam.AvaloniaforVisualStudio&#34;&gt;Visual Studio Extension&lt;/a&gt; contains project and control templates that will help you get started, or you can use the .NET Core CLI. For a starter guide see our &lt;a href=&#34;https://docs.avaloniaui.net/docs/getting-started&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Avalonia is delivered via &lt;b&gt;NuGet&lt;/b&gt; package manager. You can find the packages here: &lt;a href=&#34;https://www.nuget.org/packages/Avalonia/&#34;&gt;https://www.nuget.org/packages/Avalonia/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use these commands in the Package Manager console to install Avalonia manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Install-Package Avalonia&#xA;Install-Package Avalonia.Desktop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;p&gt;Examples of UIs built with Avalonia &#xA; &lt;video src=&#34;https://user-images.githubusercontent.com/4672627/152325602-28df36ec-6444-44a6-aebe-90ad52c8f27a.mp4&#34;&gt;&lt;/video&gt; (&lt;a href=&#34;https://icons8.com/lunacy&#34;&gt;Lunacy&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4672627/152325740-261c27a3-e6f0-4662-bff7-4796d4940e04.png&#34; alt=&#34;image&#34;&gt; (&lt;a href=&#34;https://www.plasticscm.com/&#34;&gt;PlasticSCM&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4672627/152326453-14944c4d-33da-4d50-a268-b87f80927adb.png&#34; alt=&#34;image&#34;&gt; (&lt;a href=&#34;https://www.wasabiwallet.io/&#34;&gt;WasabiWallet&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;JetBrains Rider&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/rider/whatsnew/?mkt_tok=eyJpIjoiTURBNU1HSmhNV0kwTUdFMiIsInQiOiJtNnU2VEc1TlNLa1ZRVkROYmdZYVpYREJsaU1qdUhmS3dxSzRHczdYWHl0RVlTNDMwSFwvNUs3VENTNVM0bVcyNFdaRmVYZzVWTTF1N3VrQWNGTkJreEhlam1hMlB4UVVWcHBGM1dNOUxoXC95YnRQdGgyUXl1YmZCM3h3d3BVWWdBIn0%3D#avalonia-support&#34;&gt;JetBrains Rider&lt;/a&gt; now has official support for Avalonia.&lt;/p&gt; &#xA;&lt;p&gt;Code completion, inspections and refactorings are supported out of the box, for XAML previewer add &lt;code&gt;https://plugins.jetbrains.com/plugins/dev/14839&lt;/code&gt; to plugin repositories and install &lt;a href=&#34;https://github.com/ForNeVeR/AvaloniaRider&#34;&gt;AvaloniaRider&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Bleeding Edge Builds&lt;/h2&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia/wiki/Using-nightly-build-feed&#34;&gt;nightly build&lt;/a&gt; which tracks the current state of master. Although these packages are less stable than the release on NuGet.org, you&#39;ll get all the latest features and bugfixes right away and many of our users actually prefer this feed!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found at &lt;a href=&#34;https://docs.avaloniaui.net&#34;&gt;https://docs.avaloniaui.net&lt;/a&gt;. We also have a &lt;a href=&#34;https://docs.avaloniaui.net/docs/getting-started/programming-with-avalonia&#34;&gt;tutorial&lt;/a&gt; over there for newcomers.&lt;/p&gt; &#xA;&lt;h2&gt;Building and Using&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/Documentation/build.md&#34;&gt;build instructions here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;Avalonia is licenced under the &lt;a href=&#34;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/licence.md&#34;&gt;MIT licence&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Donating to the project is a fantastic way to thank our valued contributors for their hard work. Your donations are shared among our community and awarded for significant contributions.&lt;/p&gt; &#xA;&lt;p&gt;If you need support see Commercial Support section below.&lt;/p&gt; &#xA;&lt;p&gt;Donate with BTC or use &lt;a href=&#34;https://opencollective.com/avalonia&#34;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BTC&lt;/strong&gt;: bc1q05wx78qemgy9x6ytl5ljk2xrt00yqargyjm8gx&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/Avalonia#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/Avalonia#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/Avalonia#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Avalonia/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Avalonia/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://baseheadinc.com/&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;50&#34; src=&#34;https://baseheadinc.com/wp-content/uploads/2020/09/BH-Logo-for-Site-Header-New.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commercial Support&lt;/h2&gt; &#xA;&lt;p&gt;We have a range of &lt;a href=&#34;https://avaloniaui.net/support.html&#34;&gt;support plans available&lt;/a&gt; for those looking to partner with the creators of Avalonia, enabling access to the best support at every step of the development process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note that donations are not considered payment for commercial support agreements. Please contact us to discuss your needs first. &lt;a href=&#34;mailto://team@avaloniaui.net&#34;&gt;team@avaloniaui.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by the &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/maui-samples</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/maui-samples</id>
    <link href="https://github.com/dotnet/maui-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Samples for .NET Multi-Platform App UI (.NET MAUI)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET MAUI Samples&lt;/h1&gt; &#xA;&lt;p&gt;Samples built with .NET Multi-platform App UI (.NET MAUI).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dot.net/maui&#34;&gt;.NET MAUI&lt;/a&gt; is a cross-platform framework for creating mobile and desktop apps with C# and XAML. Using .NET MAUI, you can develop apps that can run on Android, iOS, iPadOS, macOS, and Windows from a single shared codebase.&lt;/p&gt; &#xA;&lt;h2&gt;Official Samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui-samples/main/6.0/Apps/WeatherTwentyOne&#34;&gt;Weather &#39;21 App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui-samples/main/6.0/Apps/Calculator&#34;&gt;Calculator App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/dotnet-podcasts&#34;&gt;.NET Podcasts App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui-samples/main/6.0/Navigation&#34;&gt;Navigation Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui-samples/main/6.0/Beginners-Series&#34;&gt;Beginner&#39;s Series Task App Sample&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rachelkang/recipeSearch&#34;&gt;Rachel&#39;s Recipes App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsuarezruiz/awesome-dotnet-maui&#34;&gt;Awesome .NET MAUI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;.NET MAUI Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dot.net/maui&#34;&gt;.NET MAUI Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/maui&#34;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/dotnet/category/maui/&#34;&gt;.NET MAUI Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/maui&#34;&gt;.NET MAUI GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/dotnet&#34;&gt;.NET home repo&lt;/a&gt; - links to hundreds of .NET projects, from Microsoft and the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/aspnet/core/&#34;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&#34;http://contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;http://www.dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;.NET (including the maui-samples repo) is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui-samples/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/AspNetCore.Docs</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/AspNetCore.Docs</id>
    <link href="https://github.com/dotnet/AspNetCore.Docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core Docs&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the conceptual ASP.NET Core documentation hosted at &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/getting-started&#34;&gt;docs.microsoft.com/aspnet/core&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/AspNetCore.Docs/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; and the &lt;a href=&#34;https://github.com/dotnet/AspNetCore.Docs/issues&#34;&gt;issues list&lt;/a&gt; if you would like to help.&lt;/p&gt; &#xA;&lt;p&gt;API documentation changes are made in the &lt;a href=&#34;https://github.com/dotnet/AspNetApiDocs&#34;&gt;AspNetApiDocs repository&lt;/a&gt; against the triple slash &lt;code&gt;///&lt;/code&gt; comments.&lt;/p&gt; &#xA;&lt;p&gt;ASP.NET 4.x documentation changes are made in the &lt;a href=&#34;https://github.com/dotnet/AspNetDocs&#34;&gt;dotnet/AspNetDocs repository&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/aspnetcore</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/aspnetcore</id>
    <link href="https://github.com/dotnet/aspnetcore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&#34; alt=&#34;.NET Foundation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dotnet/aspnetcore?color=%230b0&amp;amp;style=flat-square&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dotnet/aspnetcore/help%20wanted?color=%232EA043&amp;amp;label=help%20wanted&amp;amp;style=flat-square&#34; alt=&#34;Help Wanted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dotnet/aspnetcore/good%20first%20issue?color=%23512BD4&amp;amp;label=good%20first%20issue&amp;amp;style=flat-square&#34; alt=&#34;Good First Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ASP.NET Core&lt;/h1&gt; &#xA;&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud based internet connected applications, such as web apps, IoT apps and mobile backends. ASP.NET Core apps run on &lt;a href=&#34;https://dot.net&#34;&gt;.NET Core&lt;/a&gt;, a free, cross-platform and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac and Linux. &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/&#34;&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/getting-started&#34;&gt;Getting Started&lt;/a&gt; instructions in the &lt;a href=&#34;https://docs.microsoft.com/aspnet/index&#34;&gt;ASP.NET Core docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also check out the &lt;a href=&#34;https://www.microsoft.com/net&#34;&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/dotnet/aspnetcore/raw/main/docs/TriageProcess.md&#34;&gt;Triage Process&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt; &#xA;&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations, and make pull-requests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/DailyBuilds.md&#34;&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow along with the development of ASP.NET Core: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://live.asp.net&#34;&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live to YouTube. You can view past standups in the linked playlist.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aka.ms/aspnet/roadmap&#34;&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/BuildFromSource.md&#34;&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting security issues and bugs&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://technet.microsoft.com/en-us/security/ff852094.aspx&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;These are some other repos for related projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aspnet/Docs&#34;&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/&#34;&gt;https://docs.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/efcore&#34;&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/runtime&#34;&gt;Runtime&lt;/a&gt; - cross-platform runtime for cloud, mobile, desktop, and IoT apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/razor-compiler&#34;&gt;Razor Compiler&lt;/a&gt; - the parser and the C# code generator for the Razor syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/razor-tooling&#34;&gt;Razor Tooling&lt;/a&gt; - tools for working on Razor ASP.NET Core apps using &lt;a href=&#34;https://visualstudio.com&#34;&gt;Visual Studio&lt;/a&gt;, &lt;a href=&#34;https://visualstudio.microsoft.com/vs/mac/&#34;&gt;Visual Studio for Mac&lt;/a&gt;, and &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CODE-OF-CONDUCT.md&#34;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abpframework/abp</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/abpframework/abp</id>
    <link href="https://github.com/abpframework/abp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Web Application Framework for ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ABP Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/abpframework/abp/build%20and%20test/dev?style=flat-square&#34; alt=&#34;build and test&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/abpframework/abp&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/abpframework/abp/branch/dev/graph/badge.svg?token=jUKLCxa6HF&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Volo.Abp.Core&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Volo.Abp.Core.svg?style=flat-square&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Volo.Abp.Core&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Volo.Abp.Core.svg?style=flat-square&#34; alt=&#34;NuGet (with prereleases)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Nightly-Builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/abp-nightly/vpre/Volo.Abp.svg?style=flat-square&#34; alt=&#34;MyGet (nightly builds)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Volo.Abp.Core&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Volo.Abp.Core.svg?style=flat-square&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/abp&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/951497912645476422?label=Discord&#34; alt=&#34;ABP Discord server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ABP Framework is a complete &lt;strong&gt;infrastructure&lt;/strong&gt; based on the &lt;strong&gt;ASP.NET Core&lt;/strong&gt; to create &lt;strong&gt;modern web applications&lt;/strong&gt; and &lt;strong&gt;APIs&lt;/strong&gt; by following the software development &lt;strong&gt;best practices&lt;/strong&gt; and the &lt;strong&gt;latest technologies&lt;/strong&gt;. Check out &lt;a href=&#34;https://abp.io&#34;&gt;https://abp.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Tutorials/Todo/Index&#34;&gt;Quick Start&lt;/a&gt; is a single-part, quick-start tutorial to build a simple application with the ABP Framework. Start with this tutorial if you want to quickly understand how ABP works.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Getting-Started&#34;&gt;Getting Started guide&lt;/a&gt; can be used to create and run ABP based solutions with different options and details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Tutorials/Part-1&#34;&gt;Web Application Development Tutorial&lt;/a&gt; is a complete tutorial to develop a full stack web application with all aspects of a real-life solution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;Install the ABP CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; dotnet tool install -g Volo.Abp.Cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a new solution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; abp new BookStore -u mvc -d ef&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://docs.abp.io/en/abp/latest/CLI&#34;&gt;CLI documentation&lt;/a&gt; for all available options.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;UI Framework Options&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; src=&#34;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/ui-options.png&#34;&gt; &#xA;&lt;h3&gt;Database Provider Options&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; src=&#34;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/db-options.png&#34;&gt; &#xA;&lt;h2&gt;What ABP Provides?&lt;/h2&gt; &#xA;&lt;p&gt;ABP provides a &lt;strong&gt;full stack developer experience&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/ddd-microservice-simple.png&#34;&gt; &#xA;&lt;p&gt;ABP offers a complete, &lt;strong&gt;modular&lt;/strong&gt; and &lt;strong&gt;layered&lt;/strong&gt; software architecture based on &lt;strong&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Domain-Driven-Design&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/strong&gt; principles and patterns. It also provides the necessary infrastructure and guiding to &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Domain-Driven-Design-Implementation-Guide&#34;&gt;implement this architecture&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ABP Framework is suitable for &lt;strong&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Microservice-Architecture&#34;&gt;microservice solutions&lt;/a&gt;&lt;/strong&gt; as well as monolithic applications.&lt;/p&gt; &#xA;&lt;h3&gt;Infrastructure&lt;/h3&gt; &#xA;&lt;p&gt;There are a lot of features provided by the ABP Framework to achieve real world scenarios easier, like &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Event-Bus&#34;&gt;Event Bus&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Background-Jobs&#34;&gt;Background Job System&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Audit-Logging&#34;&gt;Audit Logging&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Blob-Storing&#34;&gt;BLOB Storing&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Data-Seeding&#34;&gt;Data Seeding&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Data-Filtering&#34;&gt;Data Filtering&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Cross Cutting Concerns&lt;/h3&gt; &#xA;&lt;p&gt;ABP also simplifies (and even automates wherever possible) cross cutting concerns and common non-functional requirements like &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Exception-Handling&#34;&gt;Exception Handling&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Validation&#34;&gt;Validation&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Authorization&#34;&gt;Authorization&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Localization&#34;&gt;Localization&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Caching&#34;&gt;Caching&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Dependency-Injection&#34;&gt;Dependency Injection&lt;/a&gt;, &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Settings&#34;&gt;Setting Management&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Application Modules&lt;/h3&gt; &#xA;&lt;p&gt;ABP is a modular framework and the Application Modules provide &lt;strong&gt;pre-built application functionalities&lt;/strong&gt;;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Modules/Account&#34;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt;: Provides UI for the account management and allows user to login/register to the application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Modules/Identity&#34;&gt;Identity&lt;/a&gt;&lt;/strong&gt;: Manages organization units, roles, users and their permissions, based on the Microsoft Identity library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Modules/OpenIddict&#34;&gt;&lt;strong&gt;OpenIddict&lt;/strong&gt;&lt;/a&gt;: Integrates to OpenIddict.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Modules/Tenant-Management&#34;&gt;&lt;strong&gt;Tenant Management&lt;/strong&gt;&lt;/a&gt;: Manages tenants for a &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Multi-Tenancy&#34;&gt;multi-tenant&lt;/a&gt; (SaaS) application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Modules/Index&#34;&gt;Application Modules&lt;/a&gt; document for all pre-built modules.&lt;/p&gt; &#xA;&lt;h3&gt;Startup Templates&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Startup-Templates/Index&#34;&gt;Startup templates&lt;/a&gt; are pre-built Visual Studio solution templates. You can create your own solution based on these templates to &lt;strong&gt;immediately start your development&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ABP Community&lt;/h2&gt; &#xA;&lt;h3&gt;ABP Community Web Site&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://community.abp.io/&#34;&gt;ABP Community&lt;/a&gt; is a website to publish &lt;strong&gt;articles&lt;/strong&gt; and share &lt;strong&gt;knowledge&lt;/strong&gt; about the ABP Framework. You can also create content for the community!&lt;/p&gt; &#xA;&lt;h3&gt;Blog&lt;/h3&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://blog.abp.io/&#34;&gt;ABP Blog&lt;/a&gt; to learn the latest happenings in the ABP Framework.&lt;/p&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Samples/Index&#34;&gt;sample projects&lt;/a&gt; built with the ABP Framework.&lt;/p&gt; &#xA;&lt;h3&gt;Want to Contribute?&lt;/h3&gt; &#xA;&lt;p&gt;ABP is a community-driven open source project. See &lt;a href=&#34;https://docs.abp.io/en/abp/latest/Contribution/Index&#34;&gt;the contribution guide&lt;/a&gt; if you want to be a part of this project.&lt;/p&gt; &#xA;&lt;h2&gt;Official Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://abp.io/&#34; target=&#34;_blank&#34;&gt;Main Web Site&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://abp.io/get-started&#34; target=&#34;_blank&#34;&gt;Get Started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://abp.io/features&#34; target=&#34;_blank&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.abp.io/en/abp/latest/Samples/Index&#34; target=&#34;_blank&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.abp.io/&#34; target=&#34;_blank&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.abp.io/&#34; target=&#34;_blank&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/abp&#34; target=&#34;_blank&#34;&gt;Stack&amp;nbsp;overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/abpframework&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support the ABP Framework&lt;/h2&gt; &#xA;&lt;p&gt;Love ABP Framework? &lt;strong&gt;Please give a star&lt;/strong&gt; to this repository &lt;span&gt;⭐&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discord Channel&lt;/h2&gt; &#xA;&lt;p&gt;You can use this link to join the ABP Community Discord Server: &lt;a href=&#34;https://discord.gg/abp&#34;&gt;https://discord.gg/abp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ABP Commercial&lt;/h2&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://commercial.abp.io/&#34;&gt;ABP Commercial&lt;/a&gt; if you are looking for pre-built application modules, professional themes, code generation tooling and premium support for the ABP Framework.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/MixedRealityToolkit-Unity</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/MixedRealityToolkit-Unity</id>
    <link href="https://github.com/microsoft/MixedRealityToolkit-Unity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mixed Reality Toolkit (MRTK) provides a set of components and features to accelerate cross-platform MR app development in Unity.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13754172/122838732-89ea3400-d2ab-11eb-8c79-32dd84944989.png&#34; alt=&#34;Mixed Reality Toolkit&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.awexr.com/usa-2021/auggie-winners&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13754172/142922601-f7c38745-aa50-4b50-8ad3-41992e543f5e.png&#34; alt=&#34;MRTK_AWE_AuggieAwards_2021a&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is the Mixed Reality Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;MRTK-Unity is a Microsoft-driven project that provides a set of components and features, used to accelerate cross-platform MR app development in Unity. Here are some of its functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provides the &lt;strong&gt;cross-platform input system and building blocks for spatial interactions and UI&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enables &lt;strong&gt;rapid prototyping&lt;/strong&gt; via in-editor simulation that allows you to see changes immediately.&lt;/li&gt; &#xA; &lt;li&gt;Operates as an &lt;strong&gt;extensible framework&lt;/strong&gt; that provides developers the ability to swap out core components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports a wide range of platforms&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Platform&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Supported Devices&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenXR (Unity 2020.3.8+)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Microsoft HoloLens 2 &lt;br&gt; Windows Mixed Reality headsets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows Mixed Reality&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Microsoft HoloLens &lt;br&gt; Microsoft HoloLens 2 &lt;br&gt; Windows Mixed Reality headsets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Oculus (Unity 2019.3 or newer)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Oculus Quest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenVR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows Mixed Reality headsets &lt;br&gt; HTC Vive &lt;br&gt; Oculus Rift&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ultraleap Hand Tracking&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ultraleap Leap Motion controller&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mobile&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;iOS and Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Getting started with MRTK&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re new to MRTK or Mixed Reality development in Unity, &lt;strong&gt;we recommend you start at the beginning of our&lt;/strong&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/unity-development-overview?tabs=mrtk%2Chl2&#34;&gt;Unity development journey&lt;/a&gt; in the Microsoft Docs. The Unity development journey is specifically tailored to walk new developers through the installation, core concepts, and usage of MRTK.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;IMPORTANT: The Unity development journey currently uses &lt;strong&gt;MRTK version 2.7.2&lt;/strong&gt;, &lt;strong&gt;Mixed Reality OpenXR plugin version 1.0.0&lt;/strong&gt; and &lt;strong&gt;Unity 2020.3.8+&lt;/strong&gt;.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you&#39;re an experienced Mixed Reality or MRTK developer, check the links in the next section for the newest packages and release notes.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Starting from MRTK 2.6, we are publishing both conceptual docs and API references on docs.microsoft.com. For conceptual docs, please visit &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/&#34;&gt;our new landing page&lt;/a&gt;. For API references, please visit &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/microsoft.mixedreality.toolkit&#34;&gt;the MRTK-Unity section of the dot net API explorer&lt;/a&gt;. Existing content will remain here but will not be updated further.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/release-notes/mrtk-27-release-notes&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_ReleaseNotes.png&#34; alt=&#34;Release notes&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/release-notes/mrtk-27-release-notes&#34;&gt;Release Notes&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/architecture/overview&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_ArchitectureOverview.png&#34; alt=&#34;MRTK Overview&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/architecture/overview&#34;&gt;MRTK Overview&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/button&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_FeatureGuides.png&#34; alt=&#34;Feature Guides&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/button&#34;&gt;Feature Guides&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/api/Microsoft.MixedReality.Toolkit?view=mixed-reality-toolkit-unity-2020-dotnet-2.6.0&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_APIReference.png&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/api/Microsoft.MixedReality.Toolkit?view=mixed-reality-toolkit-unity-2020-dotnet-2.6.0&#34;&gt;API Reference&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Build status&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;CI Status&lt;/th&gt; &#xA;   &lt;th&gt;Docs Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;main&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build/latest?definitionId=15&#34;&gt;&lt;img src=&#34;https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_apis/build/status/public/mrtk_CI?branchName=main&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build/latest?definitionId=7&#34;&gt;&lt;img src=&#34;https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_apis/build/status/public/mrtk_docs?branchName=main&#34; alt=&#34;Docs Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Required software&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.microsoft.com/windows/downloads/windows-10-sdk&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK170802_Short_17.png&#34; alt=&#34;Windows SDK&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developer.microsoft.com/windows/downloads/windows-10-sdk&#34;&gt;Windows SDK&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://unity3d.com/get-unity/download/archive&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK170802_Short_18.png&#34; alt=&#34;Unity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://unity3d.com/get-unity/download/archive&#34;&gt;Unity 2018/2019/2020 LTS&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;http://dev.windows.com/downloads&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK170802_Short_19.png&#34; alt=&#34;Visual Studio 2019&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://dev.windows.com/downloads&#34;&gt;Visual Studio 2019&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/using-the-hololens-emulator&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK170802_Short_20.png&#34; alt=&#34;Emulators (optional)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/using-the-hololens-emulator&#34;&gt;Emulators (optional)&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/mixed-reality/develop/install-the-tools&#34;&gt;Install the tools&lt;/a&gt; page for more detailed information.&lt;/p&gt; &#xA;&lt;h1&gt;Feature areas&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_InputSystem.png&#34; alt=&#34;Input System&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/overview&#34;&gt;Input System&lt;/a&gt;&lt;br&gt;&amp;nbsp;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_HandTracking.png&#34; alt=&#34;Hand Tracking&lt;br/&gt; (HoloLens 2)&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/hand-tracking&#34;&gt;Hand Tracking&lt;br&gt; (HoloLens 2)&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_EyeTracking.png&#34; alt=&#34;Eye Tracking&lt;br/&gt; (HoloLens 2)&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/eye-tracking/eye-tracking-main&#34;&gt;Eye Tracking&lt;br&gt; (HoloLens 2)&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_Profiles.png&#34; alt=&#34;Profiles&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/configuration/mixed-reality-configuration-guide&#34;&gt;Profiles&lt;/a&gt;&lt;br&gt;&amp;nbsp;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_HandTracking.png&#34; alt=&#34;Hand Tracking&lt;br/&gt; (Ultraleap)&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/supported-devices/leap-motion-mrtk&#34;&gt;Hand Tracking (Ultraleap)&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_UIControls.png&#34; alt=&#34;UI Controls&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/#ux-building-blocks&#34;&gt;UI Controls&lt;/a&gt;&lt;br&gt;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_Solver.png&#34; alt=&#34;Solvers&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/solvers/solver&#34;&gt;Solvers&lt;/a&gt;&lt;br&gt;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_SceneSystem.png&#34; alt=&#34;Multi-Scene&lt;br/&gt; Manager&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/scene-system/scene-system-getting-started&#34;&gt;Multi-Scene&lt;br&gt; Manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_SpatialUnderstanding.png&#34; alt=&#34;Spatial&lt;br/&gt; Awareness&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/spatial-awareness/spatial-awareness-getting-started&#34;&gt;Spatial&lt;br&gt; Awareness&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_Diagnostics.png&#34; alt=&#34;Diagnostic&lt;br/&gt; Tool&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/diagnostics/diagnostics-system-getting-started&#34;&gt;Diagnostic&lt;br&gt; Tool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_StandardShader.png&#34; alt=&#34;MRTK Standard Shader&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/rendering/mrtk-standard-shader&#34;&gt;MRTK Standard Shader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_VoiceCommand.png&#34; alt=&#34;Speech &amp;amp; Dictation&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/speech&#34;&gt;Speech&lt;/a&gt;&lt;br&gt; &amp;amp; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/dictation&#34;&gt;Dictation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_Boundary.png&#34; alt=&#34;Boundary&lt;br/&gt;System&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/boundary/boundary-system-getting-started&#34;&gt;Boundary&lt;br&gt;System&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_InputSystem.png&#34; alt=&#34;In-Editor&lt;br/&gt;Simulation&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input-simulation/input-simulation-service&#34;&gt;In-Editor&lt;br&gt;Simulation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_Experimental.png&#34; alt=&#34;Experimental&lt;br/&gt;Features&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/contributing/experimental-features&#34;&gt;Experimental&lt;br&gt;Features&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;UX building blocks&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/button&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Button/MRTK_Button_Main.png&#34; alt=&#34;Button&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/button&#34;&gt;Button&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/bounds-control&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/bounds-control/MRTK_BoundsControl_Main.png&#34; alt=&#34;Bounds Control&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/bounds-control&#34;&gt;Bounds Control&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/object-manipulator&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/manipulation-handler/MRTK_Manipulation_Main.png&#34; alt=&#34;Object Manipulator&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/object-manipulator&#34;&gt;Object Manipulator&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A button control which supports various input methods, including HoloLens 2&#39;s articulated hand&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Standard UI for manipulating objects in 3D space&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Script for manipulating objects with one or two hands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/slate&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Slate/MRTK_Slate_Main.png&#34; alt=&#34;Slate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/slate&#34;&gt;Slate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/system-keyboard&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/system-keyboard/MRTK_SystemKeyboard_Main.png&#34; alt=&#34;System Keyboard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/system-keyboard&#34;&gt;System Keyboard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/interactable&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Interactable/InteractableExamples.png&#34; alt=&#34;Interactable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/interactable&#34;&gt;Interactable&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2D style plane which supports scrolling with articulated hand input&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Example script of using the system keyboard in Unity&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A script for making objects interactable with visual states and theme support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/solvers/solver&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Solver/MRTK_Solver_Main.png&#34; alt=&#34;Solver&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/solvers/solver&#34;&gt;Solver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/object-collection&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/object-collection/MRTK_ObjectCollection_Main.jpg&#34; alt=&#34;Object Collection&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/object-collection&#34;&gt;Object Collection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/tooltip&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Tooltip/MRTK_Tooltip_Main.png&#34; alt=&#34;Tooltip&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/tooltip&#34;&gt;Tooltip&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Various object positioning behaviors such as tag-along, body-lock, constant view size and surface magnetism&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Script for laying out an array of objects in a three-dimensional shape&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Annotation UI with a flexible anchor/pivot system, which can be used for labeling motion controllers and objects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/sliders&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Slider/MRTK_UX_Slider_Main.jpg&#34; alt=&#34;Slider&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/sliders&#34;&gt;Slider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/rendering/mrtk-standard-shader&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK-Standard-Shader/MRTK_StandardShader.jpg&#34; alt=&#34;MRTK Standard Shader&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/rendering/mrtk-standard-shader&#34;&gt;MRTK Standard Shader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/hand-menu&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Solver/MRTK_UX_HandMenu.png&#34; alt=&#34;Hand Menu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/hand-menu&#34;&gt;Hand Menu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Slider UI for adjusting values supporting direct hand tracking interaction&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MRTK&#39;s Standard shader supports various Fluent design elements with performance&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hand-locked UI for quick access, using the Hand Constraint Solver&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/app-bar&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/app-bar/MRTK_AppBar_Main.png&#34; alt=&#34;App Bar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/app-bar&#34;&gt;App Bar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/pointers&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Pointers/MRTK_Pointer_Main.png&#34; alt=&#34;Pointers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/pointers&#34;&gt;Pointers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/fingertip-visualization&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Fingertip/MRTK_FingertipVisualization_Main.png&#34; alt=&#34;Fingertip Visualization&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/fingertip-visualization&#34;&gt;Fingertip Visualization&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UI for Bounds Control&#39;s manual activation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Learn about various types of pointers&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Visual affordance on the fingertip which improves the confidence for the direct interaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/near-menu&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/near-menu/MRTK_UX_NearMenu.png&#34; alt=&#34;Near Menu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/near-menu&#34;&gt;Near Menu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/spatial-awareness/spatial-awareness-getting-started&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/spatial-awareness/MRTK_SpatialAwareness_Main.png&#34; alt=&#34;Spatial Awareness&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/spatial-awareness/spatial-awareness-getting-started&#34;&gt;Spatial Awareness&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/speech&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Input/MRTK_Input_Speech.png&#34; alt=&#34;Voice Command&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/speech&#34;&gt;Voice Command&lt;/a&gt; / &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/dictation&#34;&gt;Dictation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Floating menu UI for the near interactions&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Make your holographic objects interact with the physical environments&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Scripts and examples for integrating speech input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/progress-indicator&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/progress-indicator/MRTK_ProgressIndicator_Main.png&#34; alt=&#34;Progress Indicator&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/progress-indicator&#34;&gt;Progress Indicator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/dialog&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Dialog/MRTK_UX_Dialog_Main.png&#34; alt=&#34;Dialog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/dialog&#34;&gt;Dialog [Experimental]&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/hand-coach&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/hand-coach/MRTK_UX_HandCoach_Main.jpg&#34; alt=&#34;Hand Coach&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/hand-coach&#34;&gt;Hand Coach&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Visual indicator for communicating data process or operation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UI for asking for user&#39;s confirmation or acknowledgement&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Component that helps guide the user when the gesture has not been taught&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/experimental/hand-physics-service&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/hand-physics/MRTK_UX_HandPhysics_Main.jpg&#34; alt=&#34;Hand Physics Service&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/experimental/hand-physics-service&#34;&gt;Hand Physics Service [Experimental]&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/scrolling-object-collection&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/scrolling-collection/ScrollingCollection_Main.jpg&#34; alt=&#34;Scrolling Collection&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/ux-building-blocks/scrolling-object-collection&#34;&gt;Scrolling Collection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/experimental/dock&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/Dock/MRTK_UX_Dock_Main.png&#34; alt=&#34;Dock&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/experimental/dock&#34;&gt;Dock [Experimental]&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The hand physics service enables rigid body collision events and interactions with articulated hands&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An Object Collection that natively scrolls 3D objects&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The Dock allows objects to be moved in and out of predetermined positions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/eye-tracking/eye-tracking-target-selection&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/eye-tracking/mrtk_et_targetselect.png&#34; alt=&#34;Eye Tracking: Target Selection&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/eye-tracking/eye-tracking-target-selection&#34;&gt;Eye Tracking: Target Selection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/eye-tracking/eye-tracking-navigation&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/eye-tracking/mrtk_et_navigation.png&#34; alt=&#34;Eye Tracking: Navigation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input/eye-tracking/eye-tracking-navigation&#34;&gt;Eye Tracking: Navigation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/example-scenes/eye-tracking-examples-overview#visualization-of-visual-attention&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/eye-tracking/mrtk_et_heatmaps.png&#34; alt=&#34;Eye Tracking: Heat Map&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/example-scenes/eye-tracking-examples-overview#visualization-of-visual-attention&#34;&gt;Eye Tracking: Heat Map&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Combine eyes, voice and hand input to quickly and effortlessly select holograms across your scene&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Learn how to auto-scroll text or fluently zoom into focused content based on what you are looking at&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Examples for logging, loading and visualizing what users have been looking at in your app&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Tools&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/tools/optimize-window&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_OptimizeWindow.png&#34; alt=&#34;Optimize Window&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/tools/optimize-window&#34;&gt;Optimize Window&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/tools/dependency-window&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_DependencyWindow.png&#34; alt=&#34;Dependency Window&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/tools/dependency-window&#34;&gt;Dependency Window&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_BuildWindow.png&#34; alt=&#34;Build Window&#34;&gt; Build Window&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input-simulation/input-animation-recording&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Icon_InputRecording.png&#34; alt=&#34;Input recording&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/input-simulation/input-animation-recording&#34;&gt;Input recording&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Automate configuration of Mixed Reality projects for performance optimizations&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Analyze dependencies between assets and identify unused assets&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Configure and execute an end-to-end build process for Mixed Reality applications&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Record and playback head movement and hand tracking data in editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Example scenes&lt;/h1&gt; &#xA;&lt;p&gt;Explore MRTK&#39;s various types of interactions and UI controls through the example scenes. You can find example scenes under &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/MixedRealityToolkit-Unity/main/Assets/MixedRealityToolkit.Examples/Demos&#34;&gt;&lt;strong&gt;Assets/MRTK/Examples/Demos&lt;/strong&gt;&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/example-scenes/hand-interaction-examples&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_Examples.png&#34; alt=&#34;Example Scene&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;MRTK examples hub&lt;/h1&gt; &#xA;&lt;p&gt;With the MRTK Examples Hub, you can try various example scenes in MRTK. On HoloLens 2, you can download and install &lt;a href=&#34;https://www.microsoft.com/p/mrtk-examples-hub/9mv8c39l2sj4&#34;&gt;MRTK Examples Hub through the Microsoft Store app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/example-scenes/example-hub&#34;&gt;Examples Hub README page&lt;/a&gt; to learn about the details on creating a multi-scene hub with MRTK&#39;s scene system and scene transition service.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/example-scenes/hand-interaction-examples&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_ExamplesHub.png&#34; alt=&#34;Example Scene&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sample apps made with MRTK&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRDL_PeriodicTable.jpg&#34; alt=&#34;Periodic Table of the Elements&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/galaxy-explorer-update&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRTK_GalaxyExplorer.jpg&#34; alt=&#34;Galaxy Explorer&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/galaxy-explorer-update&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRDL_Surfaces.jpg&#34; alt=&#34;Galaxy Explorer&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/MRDL_Unity_PeriodicTable&#34;&gt;Periodic Table of the Elements&lt;/a&gt; is an open-source sample app which demonstrates how to use MRTK&#39;s input system and building blocks to create an app experience for HoloLens and Immersive headsets. Read the porting story: &lt;a href=&#34;https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158&#34;&gt;Bringing the Periodic Table of the Elements app to HoloLens 2 with MRTK v2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Microsoft/GalaxyExplorer&#34;&gt;Galaxy Explorer&lt;/a&gt; is an open-source sample app that was originally developed in March 2016 as part of the HoloLens &#39;Share Your Idea&#39; campaign. Galaxy Explorer has been updated with new features for HoloLens 2, using MRTK v2. Read the story: &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/galaxy-explorer-update&#34;&gt;The Making of Galaxy Explorer for HoloLens 2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/microsoft/MRDL_Unity_Surfaces&#34;&gt;Surfaces&lt;/a&gt; is an open-source sample app for HoloLens 2 which explores how we can create a tactile sensation with visual, audio, and fully articulated hand-tracking. Check out Microsoft MR Dev Days session &lt;a href=&#34;https://channel9.msdn.com/Shows/Docs-Mixed-Reality/Learnings-from-the-MR-Surfaces-App&#34;&gt;Learnings from the Surfaces app&lt;/a&gt; for the detailed design and development story.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Session videos from Mixed Reality Dev Days 2020&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://channel9.msdn.com/Shows/Docs-Mixed-Reality/Intro-to-MRTK-Unity&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRDevDays_Session1.png&#34; alt=&#34;MRDevDays&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://channel9.msdn.com/Shows/Docs-Mixed-Reality/MRTKs-UX-Building-Blocks&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRDevDays_Session2.png&#34; alt=&#34;MRDevDays&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://channel9.msdn.com/Shows/Docs-Mixed-Reality/MRTK-Performance-and-Shaders&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/MRDevDays_Session3.png&#34; alt=&#34;MRDevDays&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tutorial on how to create a simple MRTK app from start to finish. Learn about interaction concepts and MRTK’s multi-platform capabilities.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Deep dive on the MRTK’s UX building blocks that help you build beautiful mixed reality experiences.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An introduction to performance tools, both in MRTK and external, as well as an overview of the MRTK Standard Shader.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mr-dev-days-sessions&#34;&gt;Mixed Reality Dev Days&lt;/a&gt; to explore more session videos.&lt;/p&gt; &#xA;&lt;h1&gt;Engage with the community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Join the conversation around MRTK on &lt;a href=&#34;https://holodevelopers.slack.com/&#34;&gt;Slack&lt;/a&gt;. You can join the Slack community via the &lt;a href=&#34;https://holodevelopersslack.azurewebsites.net/&#34;&gt;automatic invitation sender&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ask questions about using MRTK on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/mrtk&#34;&gt;Stack Overflow&lt;/a&gt; using the &lt;strong&gt;MRTK&lt;/strong&gt; tag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Search for &lt;a href=&#34;https://github.com/Microsoft/MixedRealityToolkit-Unity/issues&#34;&gt;known issues&lt;/a&gt; or file a &lt;a href=&#34;https://github.com/Microsoft/MixedRealityToolkit-Unity/issues&#34;&gt;new issue&lt;/a&gt; if you find something broken in MRTK code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For questions about contributing to MRTK, go to the &lt;a href=&#34;https://holodevelopers.slack.com/messages/C2H4HT858&#34;&gt;mixed-reality-toolkit&lt;/a&gt; channel on slack.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h1&gt;Useful resources on the Mixed Reality Dev Center&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-discover.png&#34; alt=&#34;Discover&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/&#34;&gt;Discover&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-design.png&#34; alt=&#34;Design&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/design&#34;&gt;Design&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-develop.png&#34; alt=&#34;Develop&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/development&#34;&gt;Develop&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-distribute.png&#34; alt=&#34;Distribute)&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/implementing-3d-app-launchers&#34;&gt;Distribute&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Learn to build mixed reality experiences for HoloLens and immersive headsets (VR).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Get design guides. Build user interface. Learn interactions and input.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Get development guides. Learn the technology. Understand the science.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Get your app ready for others and consider creating a 3D launcher.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Useful resources on Azure&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-azurespatialanchors.png&#34; alt=&#34;Spatial Anchors&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://docs.microsoft.com/azure/spatial-anchors/&#34;&gt;Spatial Anchors&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-azurespeechservices.png&#34; alt=&#34;Speech Services&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/&#34;&gt;Speech Services&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/features/images/mrdevcenter/icon-azurevisionservices.png&#34; alt=&#34;Vision Services&#34;&gt; &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/computer-vision/&#34;&gt;Vision Services&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Spatial Anchors is a cross-platform service that allows you to create Mixed Reality experiences using objects that persist their location across devices over time.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Discover and integrate Azure powered speech capabilities like speech to text, speaker recognition or speech translation into your application.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify and analyze your image or video content using Vision Services like computer vision, face detection, emotion recognition or video indexer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Learn more about the MRTK project&lt;/h1&gt; &#xA;&lt;p&gt;You can find our planning material on &lt;a href=&#34;https://github.com/Microsoft/MixedRealityToolkit-Unity/wiki&#34;&gt;our wiki&lt;/a&gt; under the Project Management Section. You can always see the items the team is actively working on in the Iteration Plan issue.&lt;/p&gt; &#xA;&lt;h1&gt;How to contribute&lt;/h1&gt; &#xA;&lt;p&gt;Learn how you can contribute to MRTK at &lt;a href=&#34;https://docs.microsoft.com/windows/mixed-reality/mrtk-unity/contributing/contributing&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For details on the different branches used in the Mixed Reality Toolkit repositories, check this &lt;a href=&#34;https://github.com/Microsoft/MixedRealityToolkit-Unity/wiki/Branch-Guide&#34;&gt;Branch Guide here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/efcore</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/efcore</id>
    <link href="https://github.com/dotnet/efcore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/dnceng/public/51/main&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/dnceng/public/51/main&#34; alt=&#34;test results&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is home to the following &lt;a href=&#34;https://dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&#34;https://github.com/microsoft&#34;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&#34;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Entity Framework Core&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;EF Core is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/&#34;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer&#xA;dotnet add package Microsoft.EntityFrameworkCore.Sqlite&#xA;dotnet add package Microsoft.EntityFrameworkCore.Cosmos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&#34;https://docs.microsoft.com/ef/core/get-started/&#34;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var db = new BloggingContext())&#xA;{&#xA;    // Inserting data into the database&#xA;    db.Add(new Blog { Url = &#34;http://blogs.msdn.com/adonet&#34; });&#xA;    db.SaveChanges();&#xA;&#xA;    // Querying&#xA;    var blog = db.Blogs&#xA;        .OrderBy(b =&amp;gt; b.BlogId)&#xA;        .First();&#xA;&#xA;    // Updating&#xA;    blog.Url = &#34;https://devblogs.microsoft.com/dotnet&#34;;&#xA;    blog.Posts.Add(&#xA;        new Post&#xA;        {&#xA;            Title = &#34;Hello World&#34;,&#xA;            Content = &#34;I wrote an app using EF Core!&#34;&#xA;        });&#xA;    db.SaveChanges();&#xA;&#xA;    // Deleting&#xA;    db.Remove(blog);&#xA;    db.SaveChanges();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable version is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.Data.Sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;This library implements the common &lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/data/adonet/&#34;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&#34;https://docs.microsoft.com/dotnet/standard/data/sqlite/&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var connection = new SqliteConnection(&#34;Data Source=Blogs.db&#34;))&#xA;{&#xA;    connection.Open();&#xA;&#xA;    var command = connection.CreateCommand();&#xA;    command.CommandText = &#34;SELECT Url FROM Blogs&#34;;&#xA;&#xA;    using (var reader = command.ExecuteReader())&#xA;    {&#xA;        while (reader.Read())&#xA;        {&#xA;            var url = reader.GetString(0);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/efcore/issues/23884&#34;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/release-planning&#34;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/writing-a-provider&#34;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/maui</title>
    <updated>2022-06-01T02:04:05Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/maui</id>
    <link href="https://github.com/dotnet/maui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET MAUI is the .NET Multi-platform App UI, a framework for building native device applications spanning mobile, tablet, and desktop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/xamarin/public/_build/latest?definitionId=57&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/xamarin/public/_apis/build/status/MAUI-public?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Public&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://devdiv.visualstudio.com/DevDiv/_build/latest?definitionId=13330&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://devdiv.visualstudio.com/DevDiv/_apis/build/status/MAUI?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Private&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnet.microsoft.com/en-us/apps/maui&#34;&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/a&gt; is a cross-platform framework for creating mobile and desktop apps with C# and XAML. Using .NET MAUI, you can develop apps that can run on Android, iOS, iPadOS, macOS, and Windows from a single shared codebase.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dot.net/maui&#34;&gt;Install .NET MAUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/maui&#34;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/maui-samples&#34;&gt;.NET MAUI Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;.NET Multi-platform App UI (.NET MAUI) is the evolution of Xamarin.Forms that expands capabilities beyond mobile Android and iOS into desktop apps for Windows and macOS. With .NET MAUI, you can build apps that perform great for any device that runs Windows, macOS, Android, &amp;amp; iOS from a single codebase. Coupled with Visual Studio productivity tools and emulators, .NET and Visual Studio significantly speed up the development process for building apps that target the widest possible set of devices. Use a single development stack that supports the best of breed solutions for all modern workloads with a unified SDK, base class libraries, and toolchain. &lt;a href=&#34;https://docs.microsoft.com/dotnet/maui/what-is-maui&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet/maui/main/Assets/maui-weather-hero-sm.png&#34; alt=&#34;.NET MAUI Weather App on all platforms&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;May 10, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-3/&#34;&gt;.NET MAUI Release Candidate 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;April 26, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-2/&#34;&gt;.NET MAUI Release Candidate 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;April 12, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-1/&#34;&gt;.NET MAUI Release Candidate - Ready for Cross-Platform App Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/category/net-maui/&#34;&gt;.NET MAUI Blog&lt;/a&gt; and visit the &lt;a href=&#34;https://github.com/dotnet/maui/wiki/News&#34;&gt;News&lt;/a&gt; wiki page for more news and updates.&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;Do you have questions? Do not worry, we have prepared a complete &lt;a href=&#34;https://github.com/dotnet/maui/wiki/FAQs&#34;&gt;FAQ&lt;/a&gt; answering the most common questions.&lt;/p&gt; &#xA;&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt; are to try things out, file issues, join in design conversations, and make pull-requests. Proposals for changes specific to MAUI can be found &lt;a href=&#34;https://github.com/dotnet/maui/issues&#34;&gt;here for discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CODE_OF_CONDUCT.md&#34;&gt;CODE-OF-CONDUCT&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>