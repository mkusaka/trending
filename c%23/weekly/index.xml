<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:24:49Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>builtbybel/Winpilot</title>
    <updated>2024-04-21T03:24:49Z</updated>
    <id>tag:github.com,2024-04-21:/builtbybel/Winpilot</id>
    <link href="https://github.com/builtbybel/Winpilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your everyday Windows companion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Winpilot (former Bloatynosy)&lt;/h1&gt; &#xA;&lt;h4&gt;A new journey with Windows&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/builtbybel/Winpilot/assets/57478606/a864eac4-d372-40ed-922e-c5e788cf9fb9&#34; alt=&#34;winpilot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About the app&lt;/h2&gt; &#xA;&lt;p&gt;Winpilot will pick up where Bloatynosy left off. The plan was originally just to rename the AI version, but this time we&#39;ll do it right and completely turn our backs on Bloatynosy. I&#39;ve been playing around with a few names over the past few weeks, which are now making their way into Winpilot as plugins, such as CoTweaker and ClippySupreme, which also doubles as the main assistant in the Winpilot app designed as a chatbot. I might also introduce some classic Bloatynosy functions natively as &#34;plugins&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/builtbybel/Winpilot/assets/57478606/22488a48-3dce-4860-b029-34381ed4e106&#34; alt=&#34;explorer_FYkwJJaf91&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The latest release of Winpilot introduces a significant milestone with its hybrid web app foundation. This update not only empowers users with the capability to remove AI features in Windows but also emphasizes the app&#39;s intelligent approach, driven by a novel hybrid and web-based core.&lt;/p&gt; &#xA;&lt;p&gt;Here are the individual plugins briefly explained:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CoTweaker&lt;/strong&gt;: It enhances Windows privacy settings and optimizes system and gaming configurations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decrapify&lt;/strong&gt;: It removes unwanted apps and also handles advanced debloating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WingetUI&lt;/strong&gt;: It offers some essential base apps for download.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copilotless&lt;/strong&gt;: It searches for AI/Copilot features in Windows and allows you to remove them. Please follow the instructions provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ClippySupreme&lt;/strong&gt;: This is the assistant you&#39;ll consistently see in the app, monitoring various areas of the system. It can also provide simple tips. Just keep clicking on the plugin to access them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Winpilot can also be used to change various settings and access various pieces of system information. &lt;strong&gt;Windows-specific features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask to add a device&lt;/li&gt; &#xA; &lt;li&gt;Ask to add Microsoft Account&lt;/li&gt; &#xA; &lt;li&gt;Ask to backup&lt;/li&gt; &#xA; &lt;li&gt;Ask to take a screenshot&lt;/li&gt; &#xA; &lt;li&gt;Ask to change your background image&lt;/li&gt; &#xA; &lt;li&gt;Ask for system (winver) or device information&lt;/li&gt; &#xA; &lt;li&gt;Ask to clean storage&lt;/li&gt; &#xA; &lt;li&gt;Ask to empty recycle bin&lt;/li&gt; &#xA; &lt;li&gt;Ask to show startup apps&lt;/li&gt; &#xA; &lt;li&gt;Ask for your IP address&lt;/li&gt; &#xA; &lt;li&gt;Ask to install apps&lt;/li&gt; &#xA; &lt;li&gt;Ask to uninstall apps&lt;/li&gt; &#xA; &lt;li&gt;Ask to uninstall Microsoft Software&lt;/li&gt; &#xA; &lt;li&gt;Ask to remove bloatware&lt;/li&gt; &#xA; &lt;li&gt;Intelligent &#34;AI&#34; driven bloatware detection&lt;/li&gt; &#xA; &lt;li&gt;Set up Privacy options&lt;/li&gt; &#xA; &lt;li&gt;Search for AI/Copilot features on Windows&lt;/li&gt; &#xA; &lt;li&gt;Turn off AI/Copilot features&lt;/li&gt; &#xA; &lt;li&gt;Ask to toggle dark/light theme&lt;/li&gt; &#xA; &lt;li&gt;Ask to snap a window&lt;/li&gt; &#xA; &lt;li&gt;Ask to run Windows updates&lt;/li&gt; &#xA; &lt;li&gt;Ask to run quick scan in Windows Security/Defender&lt;/li&gt; &#xA; &lt;li&gt;Ask to control options (like taskbar) directly. Turn widgets on and off, arrange taskbar icons, etc.&lt;/li&gt; &#xA; &lt;li&gt;Ask to reset system&lt;/li&gt; &#xA; &lt;li&gt;Ask to show available space&lt;/li&gt; &#xA; &lt;li&gt;Ask to show processes with high RAM usage&lt;/li&gt; &#xA; &lt;li&gt;Access to third party plugins and scripts, like Chris Titus app&lt;/li&gt; &#xA; &lt;li&gt;Chat with Microsoft Copilot&lt;/li&gt; &#xA; &lt;li&gt;Ask to restart Windows Explorer and Taskbar&lt;/li&gt; &#xA; &lt;li&gt;Ask to run vive tool feature configurations (static)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use these skills via a type prompt in Winpilot, such as &#34;toggle dark theme&#34; or &#34;uninstall apps or bloatware&#34;; Winpilots Assistant Clippy will take the appropriate action and confirm completion.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Recommended Winpilot Version:&lt;/strong&gt; &lt;a href=&#34;https://github.com/builtbybel/Winpilot/releases&#34;&gt;Latest release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Classic Bloatynosy version:&lt;/strong&gt; &lt;a href=&#34;https://github.com/builtbybel/Bloatynosy/releases/tag/1.5.0&#34;&gt;Last classic Bloatynosy 1.5 release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How-to&lt;/h2&gt; &#xA;&lt;p&gt;Simply execute Winpilot.exe. Feel free to delete the cache folder Winpilot.exe.WebView2 whenever necessary.&lt;/p&gt; &#xA;&lt;p&gt;With the chat box in front of you, input your search terms, inquiries, or keywords, and enjoy real-time results. For instance, if you need to &#39;install an app,&#39; simply type &#39;install&#39; or any related keyword, and you&#39;ll receive the same outcome. Additionally, using this search function, you can easily install popular apps using &#39;winget.&#39; Remember other useful keywords such as &#39;bloat,&#39; &#39;appx,&#39; or &#39;uninstall&#39; to effortlessly remove unwanted default apps in Windows 10/11. The possibilities are endless. Have fun experimenting with different queries!&lt;/p&gt; &#xA;&lt;h2&gt;Support statement&lt;/h2&gt; &#xA;&lt;p&gt;WebView2 apps can run on the following versions of Windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 11&lt;/li&gt; &#xA; &lt;li&gt;Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 IoT Enterprise LTSC x32 2019&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 IoT Enterprise LTSC x64 2019&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 IoT Enterprise 21h1 x64&lt;/li&gt; &#xA; &lt;li&gt;Windows Server 2022&lt;/li&gt; &#xA; &lt;li&gt;Windows Server 2019&lt;/li&gt; &#xA; &lt;li&gt;Windows Server 2016&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-US/microsoft-edge/webview2/&#34;&gt;https://learn.microsoft.com/en-US/microsoft-edge/webview2/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nopSolutions/nopCommerce</title>
    <updated>2024-04-21T03:24:49Z</updated>
    <id>tag:github.com,2024-04-21:/nopSolutions/nopCommerce</id>
    <link href="https://github.com/nopSolutions/nopCommerce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ASP.NET Core eCommerce software. nopCommerce is a free and open-source shopping cart.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ï»¿nopCommerce: free and open-source eCommerce solution&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nopcommerce.com/?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=homepage&#34;&gt;nopCommerce&lt;/a&gt; is the best open-source eCommerce platform. nopCommerce is free, and it is the most popular ASP.NET Core shopping cart.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.nopcommerce.com/images/github/responsive_devices_codeplex.png#v1&#34; alt=&#34;nopCommerce demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Key features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The product is being developed and supported by the professional team since 2008.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce has been downloaded more than 3,000,000 times.&lt;/li&gt; &#xA; &lt;li&gt;The active developer community has more than 250,000 members.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce runs on .NET 7 with an MS SQL 2012 (or higher) backend database.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce is cross-platform, and you can run it on Windows, Linux, or Mac.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce supports Docker out of the box, so you can easily run nopCommerce on a Linux machine.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce supports PostgreSQL and MySQL databases.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce fully supports web farms. You can read more about it &lt;a href=&#34;https://docs.nopcommerce.com/en/developer/tutorials/web-farms.html?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=documentation&amp;amp;utm_content=text&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All methods in nopCommerce are async.&lt;/li&gt; &#xA; &lt;li&gt;nopCommerce supports multi-factor authentication out of the box.&lt;/li&gt; &#xA; &lt;li&gt;Start our &lt;a href=&#34;https://nopcommerce.com/training?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=course&amp;amp;utm_content=text&#34;&gt;online course for developers&lt;/a&gt; and get the practical and technical skills you need to run and customize nopCommerce websites.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.nopcommerce.com/images/github/logos.png#v2&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;nopCommerce architecture follows well-known software patterns and the best security practices. The source code is fully customizable. Pluggable and clear architecture makes it easy to develop custom functionality and follow any business requirements.&lt;/p&gt; &#xA;&lt;p&gt;Using the latest Microsoft technologies, nopCommerce provides high performance, stability, and security. nopCommerce is also fully compatible with Azure and web farms.&lt;/p&gt; &#xA;&lt;p&gt;Our clear and detailed &lt;a href=&#34;https://docs.nopcommerce.com/developer/index.html?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=documentation&amp;amp;utm_content=text&#34;&gt;documentation&lt;/a&gt; and &lt;a href=&#34;https://nopcommerce.com/training?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=course&amp;amp;utm_content=text&#34;&gt;online course&lt;/a&gt; for developers will help you start with nopCommerce easily.&lt;/p&gt; &#xA;&lt;h3&gt;The advantages of working with nopCommerce&lt;/h3&gt; &#xA;&lt;p&gt;nopCommerce offers powerful &lt;a href=&#34;https://www.nopcommerce.com/features?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=features&amp;amp;utm_content=text&#34;&gt;out-of-the-box features&lt;/a&gt; for creating an online store of any size and type.&lt;/p&gt; &#xA;&lt;p&gt;nopCommerce is integrated with all the popular third-party services. You can find thousands of integrations on nopCommerce &lt;a href=&#34;https://www.nopcommerce.com/marketplace?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=marketplace&amp;amp;utm_content=text&#34;&gt;Marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.nopcommerce.com/web-api?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=WebAPI&amp;amp;utm_content=text&#34;&gt;Web API plugin&lt;/a&gt; by the nopCommerce team lets you build integrations with third-party services or mobile applications using REST. The Web API plugin is available with source code and covers all methods of nopCommerce: backend and frontend. You can read more about it &lt;a href=&#34;https://www.nopcommerce.com/web-api?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=WebAPI&amp;amp;utm_content=text&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Friendly members of the &lt;a href=&#34;https://www.nopcommerce.com/boards?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=forum&amp;amp;utm_content=text&#34;&gt;nopCommerce community&lt;/a&gt; will always help with advice and share their experiences. nopCommerce core development team provides &lt;a href=&#34;https://www.nopcommerce.com/nopcommerce-premium-support-services?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=premium_support&amp;amp;utm_content=text&#34;&gt;professional support&lt;/a&gt; within 24 hours.&lt;/p&gt; &#xA;&lt;h2&gt;Store demo&lt;/h2&gt; &#xA;&lt;p&gt;Evaluate the functionality and convenience of nopCommerce as a customer and store owner.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Front End&lt;/th&gt; &#xA;   &lt;th&gt;Admin area&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://demo.nopcommerce.com?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=demo_store&amp;amp;utm_content=button&#34;&gt;&lt;img src=&#34;https://www.nopcommerce.com/images/github/public-demo.png#v1&#34; alt=&#34;ScreenShot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://admin-demo.nopcommerce.com/admin?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=demo_store&amp;amp;utm_content=button&#34;&gt;&lt;img src=&#34;https://www.nopcommerce.com/images/github/admin-demo.png#v1&#34; alt=&#34;ScreenShot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;nopCommerce resources&lt;/h3&gt; &#xA;&lt;p&gt;nopCommerce official site: &lt;a href=&#34;https://www.nopcommerce.com/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=homepage&amp;amp;utm_content=links&#34;&gt;https://www.nopcommerce.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/demo?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=demo_store&amp;amp;utm_content=links&#34;&gt;Demo store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/download-nopcommerce?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=download_nop&amp;amp;utm_content=links&#34;&gt;Download nopCommerce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nopcommerce.com/training?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=course&amp;amp;utm_content=links&#34;&gt;Online course for developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/features?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=features&amp;amp;utm_content=links&#34;&gt;Feature list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/web-api?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=WebAPI&amp;amp;utm_content=links&#34;&gt;Web API plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nopcommerce.com?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=documentation&amp;amp;utm_content=links&#34;&gt;nopCommerce documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/boards?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=forum&amp;amp;utm_content=links&#34;&gt;Community forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/nopcommerce-premium-support-services?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=premium_support&amp;amp;utm_content=links&#34;&gt;Premium support services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/certified-developer-program?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=certified_developer&amp;amp;utm_content=links&#34;&gt;Certified developer program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nopcommerce.com/partners?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=solution_partners&amp;amp;utm_content=links&#34;&gt;nopCommerce partners&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;nopCommerce YouTube: &lt;a href=&#34;https://www.youtube.com/watch?v=6gLbizzSA9o&amp;amp;list=PLnL_aDfmRHwtJmzeA7SxrpH3-XDY2ue0a&#34;&gt;The Architecture behind the nopCommerce eCommerce Platform&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Earn with nopCommerce&lt;/h3&gt; &#xA;&lt;p&gt;60,000 stores worldwide are powered by nopCommerce, and 10,000 new stores open every year. nopCommerce &lt;a href=&#34;https://www.nopcommerce.com/partners?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=solution_partners&amp;amp;utm_content=text_become_partner&#34;&gt;solution partnersâ directory&lt;/a&gt; gets 80,000+ page views per year from store owners who are looking for a partner to build a store from scratch, migrate from another platform, or improve and customize an existing store.&lt;/p&gt; &#xA;&lt;p&gt;Become a solution partner of nopCommerce and get new clients â &lt;a href=&#34;https://www.nopcommerce.com/become-partner?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=become-partner&amp;amp;utm_content=learn_more&#34;&gt;learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Create a new graphical theme or develop a new plugin or integration and sell it on the nopCommerce &lt;a href=&#34;https://www.nopcommerce.com/marketplace?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=marketplace&amp;amp;utm_content=text_sell_on_marketplace&#34;&gt;Marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute&lt;/h3&gt; &#xA;&lt;p&gt;As a free and open-source project, we are very grateful to everyone who helps us to develop nopCommerce. Please find more details about the options and bonuses for contributors at &lt;a href=&#34;https://www.nopcommerce.com/contribute?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=contribute&amp;amp;utm_content=text&#34;&gt;contribute page&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GlitchEnzo/NuGetForUnity</title>
    <updated>2024-04-21T03:24:49Z</updated>
    <id>tag:github.com,2024-04-21:/GlitchEnzo/NuGetForUnity</id>
    <link href="https://github.com/GlitchEnzo/NuGetForUnity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A NuGet Package Manager for Unity&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://openupm.com/packages/com.github-glitchenzo.nugetforunity/&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/com.github-glitchenzo.nugetforunity?label=openupm&amp;amp;registry_uri=https://package.openupm.com&#34; alt=&#34;openupm&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/GlitchEnzo/NuGetForUnity/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;main github action workflow&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GlitchEnzo/NuGetForUnity/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/GlitchEnzo/NuGetForUnity.svg?sanitize=true&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is NuGetForUnity?&lt;/h1&gt; &#xA;&lt;p&gt;NuGetForUnity is a NuGet client built from scratch to run inside the Unity Editor. NuGet is a package management system which makes it easy to create packages that are distributed on a server and consumed by users. NuGet supports &lt;a href=&#34;http://semver.org/&#34;&gt;semantic versioning&lt;/a&gt; for packages as well as dependencies on other packages.&lt;/p&gt; &#xA;&lt;p&gt;You can learn more about NuGet here: &lt;a href=&#34;https://www.nuget.org/&#34;&gt;nuget.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NuGetForUnity provides a visual editor window to see available packages on the server, see installed packages, and see available package updates. A visual interface is also provided to create and edit &lt;em&gt;.nuspec&lt;/em&gt; files in order to define and publish your own NuGet packages from within Unity.&lt;/p&gt; &#xA;&lt;img alt=&#34;Online Packages Tap&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/online.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;h1&gt;How do I install NuGetForUnity?&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install via OpenUPM&lt;/summary&gt; The package is available on the &#xA; &lt;a href=&#34;https://openupm.com/packages/com.github-glitchenzo.nugetforunity/&#34;&gt;openupm&lt;/a&gt; registry. So you can install it via openupm-cli or manually using a scoped registry see documentation at &#xA; &lt;a href=&#34;https://openupm.com/packages/com.github-glitchenzo.nugetforunity/&#34;&gt;openupm&lt;/a&gt;. &#xA; &lt;pre&gt;&lt;code&gt;openupm add com.github-glitchenzo.nugetforunity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install as GIT dependency via Package Manager&lt;/summary&gt; &#xA; &lt;h4&gt;Unity 2019.3 or newer&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Open Package Manager window (Window | Package Manager)&lt;/li&gt; &#xA;  &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt; button on the upper-left of a window, and select &#34;Add package from git URL...&#34;&lt;/li&gt; &#xA;  &lt;li&gt;Enter the following URL and click &lt;code&gt;Add&lt;/code&gt; button&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code&gt;https://github.com/GlitchEnzo/NuGetForUnity.git?path=/src/NuGetForUnity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; To install a concrete version you can specify the version by prepending #v{version} e.g. &lt;code&gt;#v2.0.0&lt;/code&gt;. For more see &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-git.html&#34;&gt;Unity UPM Documentation&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h4&gt;Unity 2019.2 or earlier&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Close Unity Editor&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open Packages/manifest.json by any Text editor&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Insert the following line after &lt;code&gt;&#34;dependencies&#34;: {&lt;/code&gt;, and save the file.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;com.glitchenzo.nugetforunity&#34;: &#34;https://github.com/GlitchEnzo/NuGetForUnity.git?path=/src/NuGetForUnity&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Reopen Unity project in Unity Editor&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install via .unitypackage file&lt;/summary&gt; &#xA; &lt;p&gt;Install the provided Unity package into your Unity project. Located &lt;a href=&#34;https://github.com/GlitchEnzo/NuGetForUnity/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Download the &lt;code&gt;*.unitypackage&lt;/code&gt; file. Right-click on it in File Explorer and choose &#34;Open in Unity.&#34;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;How do I use NuGetForUnity?&lt;/h1&gt; &#xA;&lt;p&gt;To launch, select &lt;strong&gt;NuGet â Manage NuGet Packages&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img alt=&#34;Menu Items&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/menu_item.png&#34; height=&#34;170px&#34;&gt; &#xA;&lt;p&gt;After several seconds (it can take some time to query the server for packages), you should see a window like this:&lt;/p&gt; &#xA;&lt;img alt=&#34;Online Packages Tap&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/online.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Online&lt;/strong&gt; tab shows the packages available on the NuGet server.&lt;/p&gt; &#xA;&lt;p&gt;Enable &lt;strong&gt;Show Prerelease&lt;/strong&gt; to list prerelease versions of packages (alpha, beta, release candidate, etc). Disable &lt;strong&gt;Show Prerelease&lt;/strong&gt; to only show stable releases.&lt;/p&gt; &#xA;&lt;p&gt;Type a search term in the &lt;strong&gt;Search&lt;/strong&gt; box to filter what is displayed.&lt;/p&gt; &#xA;&lt;p&gt;Press the &lt;strong&gt;Refresh&lt;/strong&gt; button to refresh the window with the latest query settings. (Useful after pushing a new package to the server and wanting to see it without closing and reopening the window.)&lt;/p&gt; &#xA;&lt;p&gt;The name of the package, publisher, number of downloads and description are displayed.&lt;/p&gt; &#xA;&lt;p&gt;Click the &lt;strong&gt;View License&lt;/strong&gt; after expanding &lt;strong&gt;Details&lt;/strong&gt; to open the license in a web browser.&lt;/p&gt; &#xA;&lt;p&gt;Click the &lt;strong&gt;Install&lt;/strong&gt; to install the package version specified in the dropdown list next to the button. Note: If the package is already installed, the currently installed version will be displayed in the upper right corner instead. If the &lt;strong&gt;Install&lt;/strong&gt; button is disabled, it means the package is already imported by Unity.&lt;/p&gt; &#xA;&lt;p&gt;You can also select multiple packages for installation and install them all at once.&lt;/p&gt; &#xA;&lt;p&gt;In addition to manual selection you can also copy a list of packageIds that you need to install, separated by new line or comma, and simply click the &#34;Select all from clipboard&#34; button at the top right to add them all to the selection. Note that if the package is already installed or available in Unity it will not show up in the selected list.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Installed&lt;/strong&gt; tabs shows the packages already installed in the current Unity project.&lt;/p&gt; &#xA;&lt;img alt=&#34;Installed Packages Tap&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/installed.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Installed packages&lt;/strong&gt; part of the list shows packages directly installed as project dependencies.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Implicitly installed packages&lt;/strong&gt; part shows packages that are installed as transitive dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Click the &lt;strong&gt;Uninstall&lt;/strong&gt; button to uninstall the package. When uninstalling an &lt;strong&gt;explicitly&lt;/strong&gt; installed package, all of its dependencies that are not a dependency of any other package or the project itself will also be uninstalled.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;strong&gt;Add as explicit&lt;/strong&gt; is clicked on an &lt;strong&gt;implicitly&lt;/strong&gt; installed package, it will be moved to the first part of the list and will &lt;strong&gt;not&lt;/strong&gt; be automatically uninstalled in a scenario described above.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Updates&lt;/strong&gt; tab shows the packages currently installed, and offers options to update to available higher versions or downgrade to lower versions.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;strong&gt;Show Downgrades&lt;/strong&gt; is not checked, all packages that have available versions that are higher than the currently installed version will be shown, and there will be a dropdown list next to &lt;strong&gt;Update&lt;/strong&gt; button with available versions for update.&lt;/p&gt; &#xA;&lt;img alt=&#34;Updates Packages Tab Update&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/updates.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Update All&lt;/strong&gt; button is shown only if &lt;strong&gt;Show Downgrades&lt;/strong&gt; is not checked, and it will update all packages with versions currently selected in their respective dropdown lists.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, if &lt;strong&gt;Show Downgrades&lt;/strong&gt; is checked, all packages that have available versions that are lower than the currently installed version will be shown, and there will be a dropdown list next to &lt;strong&gt;Downgrade&lt;/strong&gt; button with available versions for downgrade.&lt;/p&gt; &#xA;&lt;img alt=&#34;Updates Packages Tab Downgrades&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/updates_showdowngrades.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;p&gt;By default, the selected version in the dropdown list is the &lt;strong&gt;highest newer&lt;/strong&gt; or &lt;strong&gt;highest lower&lt;/strong&gt; version, depending on the &lt;strong&gt;Show Downgrades&lt;/strong&gt; checkbox.&lt;/p&gt; &#xA;&lt;p&gt;Click the &lt;strong&gt;Update&lt;/strong&gt; (or &lt;strong&gt;Downgrade&lt;/strong&gt;) button to uninstall the current package and install the new package.&lt;/p&gt; &#xA;&lt;h1&gt;How does NuGetForUnity work?&lt;/h1&gt; &#xA;&lt;p&gt;NuGetForUnity loads the &lt;em&gt;NuGet.config&lt;/em&gt; file in the Unity project (automatically created if there isn&#39;t already one) in order to determine the server it should pull packages down from and push packages up to. By default, this server is set to the nuget.org package source.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The default NuGet.config file:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;&#xA;&amp;lt;configuration&amp;gt;&#xA;    &amp;lt;packageSources&amp;gt;&#xA;        &amp;lt;clear /&amp;gt;&#xA;        &amp;lt;add key=&#34;nuget.org&#34; value=&#34;https://api.nuget.org/v3/index.json&#34; /&amp;gt;&#xA;    &amp;lt;/packageSources&amp;gt;&#xA;    &amp;lt;activePackageSource&amp;gt;&#xA;        &amp;lt;add key=&#34;All&#34; value=&#34;(Aggregate source)&#34; /&amp;gt;&#xA;    &amp;lt;/activePackageSource&amp;gt;&#xA;    &amp;lt;config&amp;gt;&#xA;        &amp;lt;add key=&#34;repositoryPath&#34; value=&#34;./Packages&#34; /&amp;gt;&#xA;    &amp;lt;/config&amp;gt;&#xA;&amp;lt;/configuration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change this to any other NuGet server (such as NuGet.Server or ProGet - see below). The &lt;strong&gt;NuGet â Reload NuGet.config&lt;/strong&gt; menu item is useful if you are editing the &lt;em&gt;NuGet.config&lt;/em&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;See more information about &lt;em&gt;NuGet.config&lt;/em&gt; files here: &lt;a href=&#34;https://docs.nuget.org/consume/nuget-config-settings&#34;&gt;https://docs.nuget.org/consume/nuget-config-settings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img alt=&#34;Menu Items&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/menu_item.png&#34; height=&#34;170px&#34;&gt; &#xA;&lt;p&gt;NuGetForUnity installs packages into the local repository path defined in the &lt;em&gt;NuGet.config&lt;/em&gt; file (&lt;code&gt;repositoryPath&lt;/code&gt;). By default, this is set to the &lt;code&gt;Assets/Packages&lt;/code&gt; folder. In the &lt;em&gt;NuGet.config&lt;/em&gt; file, this can either be a full path, or it can be a relative path based on the project&#39;s Assets folder. Note: You&#39;ll probably want your Packages folder to be ignored by your version control software to prevent NuGet packages from being versioned in your repository.&lt;/p&gt; &#xA;&lt;p&gt;When a package is installed, the &lt;em&gt;packages.config&lt;/em&gt; file in the project is automatically updated with the specific package information, as well as all of the dependencies that are also installed. This allows for the packages to be restored from scratch at any point. The &lt;code&gt;Restore&lt;/code&gt; operation is automatically run every time the project is opened or the code is recompiled in the project. It can be run manually by selecting the &lt;strong&gt;NuGet â Restore Packages&lt;/strong&gt; menu item.&lt;/p&gt; &#xA;&lt;img alt=&#34;Menu Items&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/menu_item.png&#34; height=&#34;170px&#34;&gt; &#xA;&lt;p&gt;Note: Depending on the size and number of packages you need to install, the &lt;code&gt;Restore&lt;/code&gt; operation could take a &lt;em&gt;long&lt;/em&gt; time, so please be patient. If it appears the Unity isn&#39;t launching or responding, wait a few more minutes before attempting to kill the process.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in the process NuGetForUnity follows or you are trying to debug an issue, you can force NuGetForUnity to use verbose logging to output an increased amount of data to the Unity console. Add the line &lt;code&gt;&amp;lt;add key=&#34;verbose&#34; value=&#34;true&#34; /&amp;gt;&lt;/code&gt; to the &lt;code&gt;&amp;lt;config&amp;gt;&lt;/code&gt; element in the &lt;em&gt;NuGet.config&lt;/em&gt; file. You can disable verbose logging by either setting the value to false or completely deleting the line.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;.nupkg&lt;/em&gt; files downloaded from the NuGet server are cached locally in the current user&#39;s Application Data folder &lt;code&gt;%localappdata%\NuGet\Cache&lt;/code&gt; (&lt;code&gt;C:\Users\[username]\AppData\Local\NuGet\Cache&lt;/code&gt;). The cache location can be overwritten by setting the &lt;code&gt;NuGetCachePath&lt;/code&gt; environment variable. Packages previously installed are installed via the cache folder instead of downloading it from the server again.&lt;/p&gt; &#xA;&lt;h1&gt;Advanced settings&lt;/h1&gt; &#xA;&lt;h2&gt;Use custom NuGet server&lt;/h2&gt; &#xA;&lt;p&gt;The default configuration uses &lt;code&gt;nuget.org&lt;/code&gt; but package sources hosted on other servers should also work. Some need some special settings. The setting can be either set using configuration UI &lt;strong&gt;NuGet â Preferences&lt;/strong&gt; or in the &lt;code&gt;NuGet.config&lt;/code&gt;. Some examples:&lt;/p&gt; &#xA;&lt;h3&gt;Azure Artifacts / GitHub Packages&lt;/h3&gt; &#xA;&lt;p&gt;They require the &lt;code&gt;supportsPackageIdSearchFilter&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;&#xA;&amp;lt;configuration&amp;gt;&#xA;    &amp;lt;packageSources&amp;gt;&#xA;        &amp;lt;add key=&#34;github&#34; value=&#34;https://nuget.pkg.github.com/NAMESPACE/index.json&#34; supportsPackageIdSearchFilter=&#34;false&#34; /&amp;gt;&#xA;    &amp;lt;/packageSources&amp;gt;&#xA;    &amp;lt;packageSourceCredentials&amp;gt;&#xA;        &amp;lt;github&amp;gt;&#xA;            &amp;lt;add key=&#34;userName&#34; value=&#34;USERNAME&#34; /&amp;gt;&#xA;            &amp;lt;add key=&#34;clearTextPassword&#34; value=&#34;TOKEN&#34; /&amp;gt;&#xA;        &amp;lt;/github&amp;gt;&#xA;    &amp;lt;/packageSourceCredentials&amp;gt;&#xA;    ...&#xA;&amp;lt;/configuration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JFrog Artifactory&lt;/h3&gt; &#xA;&lt;p&gt;Requires &lt;code&gt;protocolVersion&lt;/code&gt; set to &lt;code&gt;3&lt;/code&gt; the other required settings like &lt;code&gt;packageDownloadUrlTemplateOverwrite&lt;/code&gt; should be automatically detected / configured.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;&#xA;&amp;lt;configuration&amp;gt;&#xA;    &amp;lt;packageSources&amp;gt;&#xA;        &amp;lt;add&#xA;            key=&#34;Artifactory&#34;&#xA;            value=&#34;https://company.com/artifactory/api/nuget/v3/PROJECT&#34;&#xA;            protocolVersion=&#34;3&#34;&#xA;            packageDownloadUrlTemplateOverwrite=&#34;https://company.com/artifactory/api/nuget/v3/PROJECT/registration-semver2/Download/{0}/{1}&#34;&#xA;            updateSearchBatchSize=&#34;1&#34;&#xA;        /&amp;gt;&#xA;    &amp;lt;/packageSources&amp;gt;&#xA;    &amp;lt;packageSourceCredentials&amp;gt;&#xA;        &amp;lt;Artifactory&amp;gt;&#xA;            &amp;lt;add key=&#34;userName&#34; value=&#34;USERNAME&#34; /&amp;gt;&#xA;            &amp;lt;add key=&#34;clearTextPassword&#34; value=&#34;Password&#34; /&amp;gt;&#xA;        &amp;lt;/Artifactory&amp;gt;&#xA;    &amp;lt;/packageSourceCredentials&amp;gt;&#xA;&amp;lt;/configuration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable automatic referencing of assemblies&lt;/h2&gt; &#xA;&lt;p&gt;To disable the automatic referencing of assemblies of a NuGet package you can set the &lt;code&gt;autoReferenced&lt;/code&gt; attribute of a package inside the &lt;code&gt;packages.config&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. &lt;em&gt;Currently this setting is not available from UI.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;&#xA;&amp;lt;packages&amp;gt;&#xA;    &amp;lt;package id=&#34;Serilog&#34; version=&#34;2.12.0&#34; autoReferenced=&#34;false&#34; /&amp;gt;&#xA;&amp;lt;/packages&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When this setting is set to &lt;code&gt;false&lt;/code&gt; the assemblies of the NuGet package are only referenced by Unity projects that explicitly list them inside there &lt;code&gt;*.asmdef&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h1&gt;How do I create my own NuGet packages from within Unity?&lt;/h1&gt; &#xA;&lt;p&gt;First, you&#39;ll need to create a &lt;em&gt;.nuspec&lt;/em&gt; file that defines your package. In your Project window, right click where you want the &lt;em&gt;.nuspec&lt;/em&gt; file to go and select &lt;strong&gt;NuGet â Create Nuspec File&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;img alt=&#34;Create Nuspec Menu&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/nuspec_menu.png&#34; height=&#34;400px&#34;&gt; &#xA;&lt;p&gt;Select the new &lt;em&gt;.nuspec&lt;/em&gt; file and you should see something like this:&lt;/p&gt; &#xA;&lt;img alt=&#34;Nuspec editor&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/nuspec_editor.png&#34; height=&#34;500px&#34;&gt; &#xA;&lt;p&gt;Input the appropriate information for your package (ID, Version, Author, Description, etc). Be sure to include whatever dependencies are required by your package.&lt;/p&gt; &#xA;&lt;p&gt;Press the &lt;strong&gt;Pack&lt;/strong&gt; button to pack your package into a &lt;em&gt;.nupkg&lt;/em&gt; file that is saved in the &lt;code&gt;C:\Users\[username]\AppData\Local\NuGet\Cache&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Press the &lt;strong&gt;Push&lt;/strong&gt; button to push your package up to the server. Be sure to set the correct API Key that give you permission to push to the server (if you server is configured to use one).&lt;/p&gt; &#xA;&lt;h1&gt;How do I create my own NuGet server to host NuGet packages?&lt;/h1&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;http://nugetserver.net/&#34;&gt;NuGet.Server&lt;/a&gt;, &lt;a href=&#34;https://github.com/NuGet/NuGetGallery&#34;&gt;NuGet Gallery&lt;/a&gt;, &lt;a href=&#34;http://inedo.com/proget&#34;&gt;ProGet&lt;/a&gt;, etc to create your own NuGet server.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; NuGetForUnity doesn&#39;t use the official NuGet Client implementation form Microsoft, so authenticating against a third-party NuGet server is currently not supported for every case. If you ran into authentication issues please create a issue so we can try to implement it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Alternatively, you can use a &#34;local feed&#34; which is just a folder on your hard-drive or a network share. &lt;a href=&#34;https://learn.microsoft.com/en-us/nuget/hosting-packages/local-feeds&#34;&gt;Local NuGet feeds&lt;/a&gt; can have two different structures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flat: &amp;lt;local feed path&amp;gt;/&amp;lt;package id&amp;gt;.&amp;lt;package version&amp;gt;.nupkg&lt;/li&gt; &#xA; &lt;li&gt;hierarchical: &amp;lt;local feed path&amp;gt;/&amp;lt;package id&amp;gt;/&amp;lt;package version&amp;gt;/&amp;lt;package id&amp;gt;.&amp;lt;package version&amp;gt;.nupkg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Be sure to set the proper URL/path in the &lt;em&gt;NuGet.config&lt;/em&gt; file and you should be good to go!&lt;/p&gt; &#xA;&lt;p&gt;Read more information here: &lt;a href=&#34;http://docs.nuget.org/create/hosting-your-own-nuget-feeds&#34;&gt;http://docs.nuget.org/create/hosting-your-own-nuget-feeds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Restoring NuGet Packages over the Command Line&lt;/h1&gt; &#xA;&lt;p&gt;For those with projects using automated build solutions like &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;continuous integration&lt;/a&gt;, NuGetForUnity provides the ability to restore your NuGet packages directly from the command line without starting Unity. This is achieved using a separate &lt;a href=&#34;https://www.nuget.org/packages/NuGetForUnity.Cli&#34;&gt;NuGetForUnity.Cli&lt;/a&gt; NuGet package containing a &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools&#34;&gt;.Net Tool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;System-wide as a global tool using: &lt;code&gt;dotnet tool install --global NuGetForUnity.Cli&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Project / folder wide as a local tool using: A tool manifest (local tool installation context) can be created with: &lt;code&gt;dotnet new tool-manifest&lt;/code&gt;. Than install NuGetForUnity.Cli using: &lt;code&gt;dotnet tool install NuGetForUnity.Cli&lt;/code&gt;. Than add the tool manifest &lt;code&gt;.config/dotnet-tools.json&lt;/code&gt; to your version control system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools&#34;&gt;.Net Tool Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Restore nuget packages of a single Unity Project: &lt;code&gt;dotnet nugetforunity restore &amp;lt;PROJECT_PATH&amp;gt;&lt;/code&gt;. If installed as a global tool it can be called without the &lt;code&gt;dotnet&lt;/code&gt; prefix: &lt;code&gt;nugetforunity restore &amp;lt;PROJECT_PATH&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Plugin support&lt;/h1&gt; &#xA;&lt;p&gt;NugetForUnity has plugin support. If you open the NugetForUnity section in Unity preferences it will list the plugins you have installed in your project and you can enable them from there.&lt;/p&gt; &#xA;&lt;p&gt;Plugins are any dlls which contain NugetForUnityPlugin in their name and have a class inside them that implements the &lt;code&gt;INugetPlugin&lt;/code&gt; interface. They can be placed anywhere inside the project (inside the &lt;code&gt;Assets&lt;/code&gt; directory).&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in implementing a plugin read the &lt;a href=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/plugin-dev-readme.md&#34;&gt;plugin development documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Common issues when installing NuGet packages&lt;/h1&gt; &#xA;&lt;p&gt;In the .Net ecosystem Unity is relatively special as it doesn&#39;t use the standard .Net runtime from Microsoft instead, it uses a fork of the &lt;a href=&#34;https://docs.unity3d.com/Manual/Mono.html&#34;&gt;Mono&lt;/a&gt; runtime. For some platforms Unity even uses &lt;a href=&#34;https://docs.unity3d.com/Manual/IL2CPP.html&#34;&gt;IL2CPP&lt;/a&gt; that compiles all C# code to C++ code. So Unity also uses a different build-system. This can lead to some issues with NuGet packages that heavily depend on the standard .Net build-system. NuGetForUnity tries to handle most of the changes needed to allow using NuGet packages inside Unity but it is not able to resolve all issues. This section contains some common issues and potential solutions.&lt;/p&gt; &#xA;&lt;h2&gt;Version Conflicts&lt;/h2&gt; &#xA;&lt;p&gt;If two NuGet packages depend on the same package but reference different versions of it, Unity shows an error like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Assembly &#39;Assets/Packages/System.Diagnostics.EventLog.4.7.0/lib/netstandard2.0/System.Diagnostics.EventLog.dll&#39; will not be loaded due to errors:&#xA;System.Diagnostics.EventLog references strong named System.Security.Principal.Windows Assembly references: 4.1.1.0 Found in project: 4.1.3.0.&#xA;Assembly Version Validation can be disabled in Player Settings &#34;Assembly Version Validation&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As mentioned in the message this error can be suppressed by changing a setting. Just go to Edit -&amp;gt; Project Settings -&amp;gt; Player -&amp;gt; Scroll down and expand &#34;Other Settings&#34; than uncheck &#34;Assembly Version Validation&#34; under the &#34;Configuration&#34; section.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Screenshot of Player Settings&lt;/summary&gt; &#xA; &lt;img als=&#34;Assembly Version Validation settings page&#34; src=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/docs/screenshots/assembly-version-validation-setting.png&#34; height=&#34;550px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Missing System libraries&lt;/h2&gt; &#xA;&lt;p&gt;When targeting .Net Framework, the &#39;Api Compatibility Level&#39; setting under &lt;em&gt;Edit&lt;/em&gt; -&amp;gt; &lt;em&gt;Project Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Player&lt;/em&gt; -&amp;gt; &lt;em&gt;Other Settings&lt;/em&gt; is set to .NET Framework, Unity doesn&#39;t include some System libraries by default. See also &lt;a href=&#34;https://docs.unity3d.com/Manual/dotnetProfileAssemblies.html&#34;&gt;Unity documentation about system libraries&lt;/a&gt; and &lt;a href=&#34;https://docs.unity3d.com/Manual/dotnetProfileSupport.html&#34;&gt;Unity documentation about .Net Profiles&lt;/a&gt;. Libraries that are not imported by default are e.g. &lt;code&gt;System.Drawing&lt;/code&gt;, &lt;code&gt;System.IO.Compression&lt;/code&gt;, &lt;code&gt;System.IO.Compression.FileSystem&lt;/code&gt; and &lt;code&gt;System.Net.Http&lt;/code&gt;. If you try to use one of this libraries you get an error like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The type `HttpClient` is defined in an assembly that is not referenced. You must add a reference to assembly &#39;System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To import one of the System libraries and resolve the error you need to create a &lt;code&gt;csc.rsp&lt;/code&gt; file with the content e.g. to import &lt;code&gt;System.Net.Http&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-r:System.Net.Http.dll&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and place it inside the containing project that requires the library (e.g. the &lt;code&gt;Assets&lt;/code&gt; folder). It can also be placed in a folder that contains a &lt;code&gt;.asmdef&lt;/code&gt; to only add the reference to the sub-project. For example NuGetForUnity also uses a &lt;code&gt;csc.rsp&lt;/code&gt; file see &lt;a href=&#34;https://raw.githubusercontent.com/GlitchEnzo/NuGetForUnity/master/src/NuGetForUnity/Editor/csc.rsp&#34;&gt;csc.rsp&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>