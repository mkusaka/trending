<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-31T01:44:12Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/garnet</title>
    <updated>2024-03-31T01:44:12Z</updated>
    <id>tag:github.com,2024-03-31:/microsoft/garnet</id>
    <link href="https://github.com/microsoft/garnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Garnet is a remote cache-store from Microsoft Research that offers strong performance (throughput and latency), scalability, storage, recovery, cluster sharding, key migration, and replication features. Garnet can work with existing Redis clients.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Garnet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/garnet/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/garnet/actions/workflows/ci.yml/badge.svg?branch=main&#34; alt=&#34;.NET CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/garnet-discord&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1213937452272582676/widget.png?style=shield&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Garnet is a new remote cache-store from Microsoft Research, that offers several unique benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Garnet adopts the popular &lt;a href=&#34;https://redis.io/docs/reference/protocol-spec/&#34;&gt;RESP&lt;/a&gt; wire protocol as a starting point, which makes it possible to use Garnet from unmodified Redis clients available in most programming languages of today, such as &lt;a href=&#34;https://github.com/StackExchange/StackExchange.Redis&#34;&gt;StackExchange.Redis&lt;/a&gt; in C#.&lt;/li&gt; &#xA; &lt;li&gt;Garnet offers much better throughput and scalability with many client connections and small batches, relative to comparable open-source cache-stores, leading to cost savings for large apps and services.&lt;/li&gt; &#xA; &lt;li&gt;Garnet demonstrates extremely low client latencies (often less than 300 microseconds at the 99.9th percentile) using commodity cloud (Azure) VMs with accelerated TCP enabled, which is critical to real-world scenarios.&lt;/li&gt; &#xA; &lt;li&gt;Based on the latest .NET technology, Garnet is cross-platform, extensible, and modern. It is designed to be easy to develop for and evolve, without sacrificing performance in the common case. We leveraged the rich library ecosystem of .NET for API breadth, with open opportunities for optimization. Thanks to our careful use of .NET, Garnet achieves state-of-the-art performance on both Linux and Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repo contains the code to build and run Garnet. For more information and documentation, check out our website at &lt;a href=&#34;https://microsoft.github.io/garnet&#34;&gt;https://microsoft.github.io/garnet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Summary&lt;/h2&gt; &#xA;&lt;p&gt;Garnet implements a wide range of APIs including raw strings (e.g., gets, sets, and key expiration), analytical (e.g., HyperLogLog and Bitmap), and object (e.g., sorted sets and lists) operations. It can handle multi-key transactions in the form of client-side RESP transactions and our own server-side stored procedures in C# and allows users to define custom operations on both raw strings and new object types, all in the convenience and safety of C#, leading to a lower bar for developing custom extensions.&lt;/p&gt; &#xA;&lt;p&gt;Garnet uses a fast and pluggable network layer, enabling future extensions such as leveraging kernel-bypass stacks. It supports secure transport layer security (TLS) communications using the robust &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/api/system.net.security.sslstream&#34;&gt;SslStream&lt;/a&gt; library of .NET, as well as basic access control. Garnet’s storage layer, called Tsavorite, was forked from our prior open-source project &lt;a href=&#34;https://github.com/microsoft/FASTER&#34;&gt;FASTER&lt;/a&gt;, and includes strong database features such as thread scalability, tiered storage support (memory, SSD, and cloud storage), fast non-blocking checkpointing, recovery, operation logging for durability, multi-key transaction support, and better memory management and reuse. Finally, Garnet supports a cluster mode of operation with support for sharding, replication, and dynamic key migration.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/microsoft/garnet/assets/18355833/851be90b-e43a-40ca-ae56-7dc087cf6adc&#34; width=&#34;350&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Performance Preview&lt;/h2&gt; &#xA;&lt;p&gt;We illustrate a few key results on our &lt;a href=&#34;https://microsoft.github.io/garnet/docs/benchmarking/overview&#34;&gt;website&lt;/a&gt; comparing Garnet to leading open-source cache-stores.&lt;/p&gt; &#xA;&lt;h2&gt;Design Highlights&lt;/h2&gt; &#xA;&lt;p&gt;Garnet’s design re-thinks the entire cache-store stack – from receiving packets on the network, to parsing and processing database operations, to performing storage interactions. We build on top of years of our &lt;a href=&#34;https://microsoft.github.io/FASTER/docs/td-research-papers/&#34;&gt;prior research&lt;/a&gt;. Below is Garnet’s overall architecture.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/microsoft/garnet/assets/18355833/8d89f719-f86b-4b1f-81d1-1ae7bd450001&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Garnet’s network layer inherits a shared memory design inspired by our prior research on &lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/achieving-high-throughput-and-elasticity-in-a-larger-than-memory-store/&#34;&gt;ShadowFax&lt;/a&gt;. TLS processing and storage interactions are performed on the IO completion thread, avoiding thread switching overheads in the common case. This approach allows CPU cache coherence to bring the data to the network, instead of traditional shuffle-based designs, which require data movement on the server.&lt;/p&gt; &#xA;&lt;p&gt;Garnet’s storage design consists of two Tsavorite key-value stores whose fates are bound by a unified operation log. The first store, called the “main store,” is optimized for raw string operations and manages memory carefully to avoid garbage collection. The second, and optional, “object store” is optimized for complex objects and custom data types, including popular types such as Sorted Set, Set, Hash, List, and Geo. Data types in the object store leverage the .NET library ecosystem for their current implementations. They are stored on the heap in memory (which makes updates very efficient) and in a serialized form on disk. In the future, we plan to investigate using a unified index and log to ease maintenance.&lt;/p&gt; &#xA;&lt;p&gt;A distinguishing feature of Garnet’s design is its narrow-waist Tsavorite storage API, which is used to implement the large, rich, and extensible RESP API surface on top. This API consists of read, upsert, delete, and atomic read-modify-write operations, implemented with asynchronous callbacks for Garnet to interject logic at various points during each operation. Our storage API model allows us to cleanly separate Garnet’s parsing and query processing concerns from storage details such as concurrency, storage tiering, and checkpointing. Garnet uses two-phase locking for multi-key transactions.&lt;/p&gt; &#xA;&lt;h3&gt;Cluster Mode&lt;/h3&gt; &#xA;&lt;p&gt;In addition to single-node execution, Garnet supports a cluster mode, which allows users to create and manage a sharded and replicated deployment. Garnet also supports an efficient and dynamic key migration scheme to rebalance shards. Users can use standard Redis cluster commands to create and manage Garnet clusters, and nodes perform gossip to share and evolve cluster state. Cluster is still work in progress.&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;Head over to our &lt;a href=&#34;https://microsoft.github.io/garnet&#34;&gt;documentation&lt;/a&gt; site, or jump directly to the &lt;a href=&#34;https://microsoft.github.io/garnet/docs/getting-started&#34;&gt;getting started&lt;/a&gt; or &lt;a href=&#34;https://microsoft.github.io/garnet/docs/welcome/releases&#34;&gt;releases&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/garnet/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;Privacy information can be found at &lt;a href=&#34;https://privacy.microsoft.com/en-us/privacystatement&#34;&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;p&gt;Redis is a registered trademark of Redis Ltd. Any rights therein are reserved to Redis Ltd. Any use by Microsoft is for referential purposes only and does not indicate any sponsorship, endorsement or affiliation between Redis and Microsoft.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aspnetrun/run-aspnetcore-microservices</title>
    <updated>2024-03-31T01:44:12Z</updated>
    <id>tag:github.com,2024-03-31:/aspnetrun/run-aspnetcore-microservices</id>
    <link href="https://github.com/aspnetrun/run-aspnetcore-microservices" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microservices on .Net platforms which used ASP.NET Web API, Docker, RabbitMQ, MassTransit, Grpc, Yarp API Gateway, PostgreSQL, Redis, SQLite, SqlServer, Marten, Entity Framework Core, CQRS, MediatR, DDD, Vertical and Clean Architecture implementation with using latest features of .NET 8 and C# 12&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;UDEMY COURSE WITH DISCOUNTED - Step by Step Development of this Repository -&amp;gt; &lt;a href=&#34;https://www.udemy.com/course/microservices-architecture-and-implementation-on-dotnet/?couponCode=MARC24&#34;&gt;https://www.udemy.com/course/microservices-architecture-and-implementation-on-dotnet/?couponCode=MARC24&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the overall picture of &lt;strong&gt;implementations on microservices with .net tools&lt;/strong&gt; on real-world &lt;strong&gt;e-commerce microservices&lt;/strong&gt; project;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/aspnetrun/run-aspnetcore-microservices/assets/1147445/efe5e688-67f2-4ddd-af37-d9d3658aede4&#34; alt=&#34;microservices&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is a couple of microservices which implemented &lt;strong&gt;e-commerce&lt;/strong&gt; modules over &lt;strong&gt;Catalog, Basket, Discount&lt;/strong&gt; and &lt;strong&gt;Ordering&lt;/strong&gt; microservices with &lt;strong&gt;NoSQL (DocumentDb, Redis)&lt;/strong&gt; and &lt;strong&gt;Relational databases (PostgreSQL, Sql Server)&lt;/strong&gt; with communicating over &lt;strong&gt;RabbitMQ Event Driven Communication&lt;/strong&gt; and using &lt;strong&gt;Yarp API Gateway&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Check Explanation of this Repository on Medium&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mehmetozkaya/net-8-microservices-ddd-cqrs-vertical-clean-architecture-2dd7ebaaf4bd&#34;&gt;.NET 8 Microservices: DDD, CQRS, Vertical/Clean Architecture and Event-Driven Communication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Whats Including In This Repository&lt;/h2&gt; &#xA;&lt;p&gt;We have implemented below &lt;strong&gt;features over the run-aspnetcore-microservices repository&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Catalog microservice which includes;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASP.NET Core Minimal APIs and latest features of .NET8 and C# 12&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vertical Slice Architecture&lt;/strong&gt; implementation with Feature folders and single .cs file includes different classes in one file&lt;/li&gt; &#xA; &lt;li&gt;CQRS implementation using MediatR library&lt;/li&gt; &#xA; &lt;li&gt;CQRS Validation Pipeline Behaviors with MediatR and FluentValidation&lt;/li&gt; &#xA; &lt;li&gt;Use Marten library for .NET Transactional Document DB on PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;Use Carter for Minimal API endpoint definition&lt;/li&gt; &#xA; &lt;li&gt;Cross-cutting concerns Logging, Global Exception Handling and Health Checks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Basket microservice which includes;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASP.NET 8 Web API application, Following REST API principles, CRUD&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;strong&gt;Redis&lt;/strong&gt; as a &lt;strong&gt;Distributed Cache&lt;/strong&gt; over basketdb&lt;/li&gt; &#xA; &lt;li&gt;Implements Proxy, Decorator and Cache-aside patterns&lt;/li&gt; &#xA; &lt;li&gt;Consume Discount &lt;strong&gt;Grpc Service&lt;/strong&gt; for inter-service sync communication to calculate product final price&lt;/li&gt; &#xA; &lt;li&gt;Publish BasketCheckout Queue with using &lt;strong&gt;MassTransit and RabbitMQ&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Discount microservice which includes;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASP.NET &lt;strong&gt;Grpc Server&lt;/strong&gt; application&lt;/li&gt; &#xA; &lt;li&gt;Build a Highly Performant &lt;strong&gt;inter-service gRPC Communication&lt;/strong&gt; with Basket Microservice&lt;/li&gt; &#xA; &lt;li&gt;Exposing Grpc Services with creating &lt;strong&gt;Protobuf messages&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Entity Framework Core ORM — SQLite Data Provider and Migrations to simplify data access and ensure high performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQLite database&lt;/strong&gt; connection and containerization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Microservices Communication&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sync inter-service &lt;strong&gt;gRPC Communication&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Async Microservices Communication with &lt;strong&gt;RabbitMQ Message-Broker Service&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;strong&gt;RabbitMQ Publish/Subscribe Topic&lt;/strong&gt; Exchange Model&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;strong&gt;MassTransit&lt;/strong&gt; for abstraction over RabbitMQ Message-Broker system&lt;/li&gt; &#xA; &lt;li&gt;Publishing BasketCheckout event queue from Basket microservices and Subscribing this event from Ordering microservices&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;strong&gt;RabbitMQ EventBus.Messages library&lt;/strong&gt; and add references Microservices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Ordering Microservice&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implementing &lt;strong&gt;DDD, CQRS, and Clean Architecture&lt;/strong&gt; with using Best Practices&lt;/li&gt; &#xA; &lt;li&gt;Developing &lt;strong&gt;CQRS with using MediatR, FluentValidation and Mapster packages&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Consuming &lt;strong&gt;RabbitMQ&lt;/strong&gt; BasketCheckout event queue with using &lt;strong&gt;MassTransit-RabbitMQ&lt;/strong&gt; Configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SqlServer database&lt;/strong&gt; connection and containerization&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;strong&gt;Entity Framework Core ORM&lt;/strong&gt; and auto migrate to SqlServer when application startup&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Yarp API Gateway Microservice&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Develop API Gateways with &lt;strong&gt;Yarp Reverse Proxy&lt;/strong&gt; applying Gateway Routing Pattern&lt;/li&gt; &#xA; &lt;li&gt;Yarp Reverse Proxy Configuration; Route, Cluster, Path, Transform, Destinations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rate Limiting&lt;/strong&gt; with FixedWindowLimiter on Yarp Reverse Proxy Configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;WebUI ShoppingApp Microservice&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASP.NET Core Web Application with Bootstrap 4 and Razor template&lt;/li&gt; &#xA; &lt;li&gt;Call &lt;strong&gt;Yarp APIs with Refit HttpClientFactory&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker Compose establishment with all microservices on docker;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Containerization of microservices&lt;/li&gt; &#xA; &lt;li&gt;Containerization of databases&lt;/li&gt; &#xA; &lt;li&gt;Override Environment variables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run The Project&lt;/h2&gt; &#xA;&lt;p&gt;You will need the following tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet-core/8&#34;&gt;.Net Core 8 or later&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to get your development environment set up: (Before Run Start the Docker Desktop)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Once Docker for Windows is installed, go to the &lt;strong&gt;Settings &amp;gt; Advanced option&lt;/strong&gt;, from the Docker icon in the system tray, to configure the minimum amount of memory and CPU like so:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Memory: 4 GB&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;CPU: 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;At the root directory of solution, select &lt;strong&gt;docker-compose&lt;/strong&gt; and &lt;strong&gt;Set a startup project&lt;/strong&gt;. &lt;strong&gt;Run docker-compose without debugging on visual studio&lt;/strong&gt;. Or you can go to root directory which include &lt;strong&gt;docker-compose.yml&lt;/strong&gt; files, run below command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait for docker compose all microservices. That’s it! (some microservices need extra time to work so please wait if not worked in first shut)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch &lt;strong&gt;Shopping Web UI -&amp;gt; &lt;a href=&#34;https://localhost:6065&#34;&gt;https://localhost:6065&lt;/a&gt;&lt;/strong&gt; in your browser to view index page. You can use Web project in order to &lt;strong&gt;call microservices over Yarp API Gateway&lt;/strong&gt;. When you &lt;strong&gt;checkout the basket&lt;/strong&gt; you can follow &lt;strong&gt;queue record on RabbitMQ dashboard&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1147445/81381837-08226000-9116-11ea-9489-82645b8dbfc4.png&#34; alt=&#34;mainscreen2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mehmet Ozkaya&lt;/strong&gt; - &lt;em&gt;Initial work&lt;/em&gt; - &lt;a href=&#34;https://github.com/mehmetozkaya&#34;&gt;mehmetozkaya&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also the list of &lt;a href=&#34;https://github.com/aspnetrun/run-core/contributors&#34;&gt;contributors&lt;/a&gt; who participated in this project. Check also &lt;a href=&#34;https://aspnetrun.github.io/run-aspnetcore-angular-realworld/&#34;&gt;gihtub page of repository.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DevToys-app/DevToys</title>
    <updated>2024-03-31T01:44:12Z</updated>
    <id>tag:github.com,2024-03-31:/DevToys-app/DevToys</id>
    <link href="https://github.com/DevToys-app/DevToys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Swiss Army knife for developers.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;128&#34; align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/logo/Icon-Windows-Linux.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; DevToys &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Swiss Army knife for developers. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://etienne-baudoux.visualstudio.com/DevToys/_build?definitionId=19&amp;amp;branchName=main&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://etienne-baudoux.visualstudio.com/DevToys/_apis/build/status/DevToys?branchName=main&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Crowdin&#34; target=&#34;_blank&#34; href=&#34;https://crowdin.com/project/devtoys&#34;&gt; &lt;img src=&#34;https://badges.crowdin.net/devtoys/localized.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://github.com/DevToys-app/DevToys/releases&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/DevToys-app/DevToys.svg?label=Latest%20version&#34; alt=&#34;Latest version&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://community.chocolatey.org/packages/devtoys&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/chocolatey/v/devtoys?include_prereleases&#34; alt=&#34;Chocolatey Version (including pre-releases)&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://www.microsoft.com/store/apps/9PGCV4V3BK4W&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Microsoft%20Store-Download-brightgreen&#34; alt=&#34;Store link&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://devtoys.app&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Website-devtoys.app-blue&#34; alt=&#34;Website&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;DevToys helps with daily development tasks like formatting JSON, comparing text, and testing RegExp. No need to use many untrustworthy websites to do simple tasks with your data. With Smart Detection, DevToys can detect the best tool to use for the data copied to the Windows clipboard. Compact overlay lets you keep the app small and on top of other windows. Multiple instances of the app can be used at once.&lt;/p&gt; &#xA;&lt;p&gt;Many tools are available.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Converters &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON &amp;lt;&amp;gt; YAML&lt;/li&gt; &#xA;   &lt;li&gt;Timestamp&lt;/li&gt; &#xA;   &lt;li&gt;Number Base&lt;/li&gt; &#xA;   &lt;li&gt;Cron Parser&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Encoders / Decoders &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTML&lt;/li&gt; &#xA;   &lt;li&gt;URL&lt;/li&gt; &#xA;   &lt;li&gt;Base64 Text &amp;amp; Image&lt;/li&gt; &#xA;   &lt;li&gt;GZip&lt;/li&gt; &#xA;   &lt;li&gt;JWT Decoder&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Formatters &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON&lt;/li&gt; &#xA;   &lt;li&gt;SQL&lt;/li&gt; &#xA;   &lt;li&gt;XML&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generators &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hash (MD5, SHA1, SHA256, SHA512)&lt;/li&gt; &#xA;   &lt;li&gt;UUID 1 and 4&lt;/li&gt; &#xA;   &lt;li&gt;Lorem Ipsum&lt;/li&gt; &#xA;   &lt;li&gt;Checksum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Text &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Escape / Unescape&lt;/li&gt; &#xA;   &lt;li&gt;Inspector &amp;amp; Case Converter&lt;/li&gt; &#xA;   &lt;li&gt;Regex Tester&lt;/li&gt; &#xA;   &lt;li&gt;Text Comparer&lt;/li&gt; &#xA;   &lt;li&gt;XML Validator&lt;/li&gt; &#xA;   &lt;li&gt;Markdown Preview&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Color Blindness Simulator&lt;/li&gt; &#xA;   &lt;li&gt;Color Picker &amp;amp; Contrast&lt;/li&gt; &#xA;   &lt;li&gt;PNG / JPEG Compressor&lt;/li&gt; &#xA;   &lt;li&gt;Image Converter&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;... and more are coming!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/screenshots/1.png&#34; alt=&#34;DevToys&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Rate on Microsoft Store as of 5/23/2022&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/ms-store-rate.png&#34; alt=&#34;Microsoft Store rate&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to install (as an end-user)&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need Windows 10 build 1903+ or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Microsoft Store&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for DevToys in the Microsoft Store App or click &lt;a href=&#34;https://www.microsoft.com/store/apps/9PGCV4V3BK4W&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;a href=&#34;https://github.com/veler/DevToys/releases&#34;&gt;release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Double click the *.msixbundle file.&lt;/li&gt; &#xA; &lt;li&gt;Install.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;WinGet&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a PowerShell command prompt.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;winget search DevToys&lt;/code&gt; to search and see details about DevToys.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;winget install DevToys&lt;/code&gt; to install the app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; a Microsoft Store account is required for WinGet. We&#39;re trying to workaround it. See here &lt;a href=&#34;https://github.com/microsoft/winget-pkgs/pull/43996&#34;&gt;https://github.com/microsoft/winget-pkgs/pull/43996&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chocolatey&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you already have &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; installed on your computer.&lt;/li&gt; &#xA; &lt;li&gt;Open a PowerShell command prompt.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;choco install devtoys&lt;/code&gt; or visit the &lt;a href=&#34;https://community.chocolatey.org/packages/devtoys/&#34;&gt;chocolatey community package&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;App Permission&lt;/h2&gt; &#xA;&lt;p&gt;DevToys works entirely offline, meaning that none of the data used by the app goes on internet. However, the app requires some other permissions in order to work correctly.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;Uses all system resources&lt;/code&gt; - This permission is required for some tools like &lt;code&gt;PNG / JPEG Compressor&lt;/code&gt; or (upcoming) &lt;code&gt;On-screen color picker / measurer&lt;/code&gt;, which use a 3rd party Open-Source Win32 process like &lt;a href=&#34;https://github.com/fhanau/Efficient-Compression-Tool&#34;&gt;Efficient-Compression-Tool&lt;/a&gt;. All the code requiring this permission can be found &lt;a href=&#34;https://github.com/veler/DevToys/tree/main/src/dev/impl/DevToys.OutOfProcService&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run DevToys&lt;/h2&gt; &#xA;&lt;h3&gt;Using Start Menu&lt;/h3&gt; &#xA;&lt;p&gt;Open Windows start menu, type &lt;code&gt;DevToys&lt;/code&gt; and press &lt;code&gt;[Enter]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using PowerShell&lt;/h3&gt; &#xA;&lt;p&gt;A cool thing about DevToys is that you can start it in command line! For this, simply open a PowerShell command prompt and type &lt;code&gt;start devtoys:?tool={tool name}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;start devtoys:?tool=jsonyaml&lt;/code&gt; will open DevToys and start on the &lt;code&gt;Json &amp;lt;&amp;gt; Yaml&lt;/code&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;Here is the list of tool name you can use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;base64&lt;/code&gt; - Base64 Text Encoder/Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;base64img&lt;/code&gt; - Base64 Image Encoder/Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gzip&lt;/code&gt; - GZip Encoder/Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hash&lt;/code&gt; - Hash Generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uuid&lt;/code&gt; - UUID Generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;loremipsum&lt;/code&gt; - Lorem Ipsum Generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;checksum&lt;/code&gt; - Checksum File&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cronparser&lt;/code&gt; - Cron Parser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jsonformat&lt;/code&gt; Json Formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sqlformat&lt;/code&gt; - SQL Formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xmlformat&lt;/code&gt; - XML Formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jsonyaml&lt;/code&gt; - Json &amp;lt;&amp;gt; Yaml&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jwt&lt;/code&gt; - JWT Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;colorblind&lt;/code&gt; - Color Blindness Simulator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;color&lt;/code&gt; - Color Picker &amp;amp; Contrast&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;imgcomp&lt;/code&gt; - PNG/JPEG compressor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;imageconverter&lt;/code&gt; - Image Converter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; - Markdown Preview&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;regex&lt;/code&gt; - Regular Expression Tester&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;time&lt;/code&gt; - Unix Timestamp Converter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;baseconverter&lt;/code&gt; - Number Base Converter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;string&lt;/code&gt; - String Utilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; - URL Encoder/Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;html&lt;/code&gt; - HTML Encoder/Decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;diff&lt;/code&gt; - Text Comparer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xmlvalidator&lt;/code&gt; - XML Validator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;escape&lt;/code&gt; - Text Escape / Unescape&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;settings&lt;/code&gt; - Settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/PRIVACY-POLICY.md&#34;&gt;PRIVACY POLICY&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Third-Party Softwares&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/THIRD-PARTY-NOTICES.md&#34;&gt;ThirdPartyNotices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DevToys-app/DevToys/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;A few words regarding the license&lt;/h3&gt; &#xA;&lt;p&gt;DevToys is using a license that permits redistribution of the app as trialware or shareware without changes. However, the authors &lt;a href=&#34;https://github.com/veler&#34;&gt;Etienne BAUDOUX&lt;/a&gt; and &lt;a href=&#34;https://github.com/btiteux&#34;&gt;BenjaminT&lt;/a&gt; would prefer you not. If you believe you have a strong reason to do so, kindly reach out to discuss with us first.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;h3&gt;Code contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/324efe7f02eac0ea57d264c986651a346e86caf9.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/DevToys-app/DevToys/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=DevToys-app/DevToys&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Designers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AlurDesign&#34;&gt;Jakub&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>