<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T01:50:56Z</updated>
  <subtitle>Weekly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SteveSandersonMS/DotNetIsolator</title>
    <updated>2023-04-02T01:50:56Z</updated>
    <id>tag:github.com,2023-04-02:/SteveSandersonMS/DotNetIsolator</id>
    <link href="https://github.com/SteveSandersonMS/DotNetIsolator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for running isolated .NET runtimes inside .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DotNetIsolator [EXPERIMENTAL]&lt;/h1&gt; &#xA;&lt;p&gt;Lets your .NET code run other .NET code in an isolated environment easily.&lt;/p&gt; &#xA;&lt;p&gt;Basic concept:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create as many &lt;code&gt;IsolatedRuntime&lt;/code&gt; instances as you like. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Each one is actually a WebAssembly sandbox built with &lt;a href=&#34;https://github.com/dotnet/dotnet-wasi-sdk&#34;&gt;dotnet-wasi-sdk&lt;/a&gt; and running on &lt;a href=&#34;https://github.com/bytecodealliance/wasmtime-dotnet&#34;&gt;Wasmtime&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Each one has a completely separate memory space and no direct access to the host machine&#39;s disk/network/OS/etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make .NET calls into &lt;code&gt;IsolatedRuntime&lt;/code&gt; instances. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Either create &lt;code&gt;IsolatedObject&lt;/code&gt; instances within those runtimes then invoke their methods&lt;/li&gt; &#xA;   &lt;li&gt;... or just call a lambda method directly&lt;/li&gt; &#xA;   &lt;li&gt;You can pass/capture/return arbitrary values across the boundary, and they will be serialized automatically via Messagepack&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This is &lt;strong&gt;experimental&lt;/strong&gt; and &lt;strong&gt;unsupported&lt;/strong&gt;. It may or may not be developed any further. There will definitely be functional gaps. There are no guarantees &lt;a href=&#34;https://raw.githubusercontent.com/SteveSandersonMS/DotNetIsolator/main/#security-notes&#34;&gt;about security&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;First, install the package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet add package DotNetIsolator --prerelease&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now try this code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;// Set up an isolated runtime&#xA;using var host = new IsolatedRuntimeHost().WithBinDirectoryAssemblyLoader();&#xA;using var runtime = new IsolatedRuntime(host);&#xA;&#xA;// Output: I&#39;m running on X64&#xA;Console.WriteLine($&#34;I&#39;m running on {RuntimeInformation.OSArchitecture}&#34;);&#xA;&#xA;runtime.Invoke(() =&amp;gt;&#xA;{&#xA;    // Output: I&#39;m running on Wasm&#xA;    Console.WriteLine($&#34;I&#39;m running on {RuntimeInformation.OSArchitecture}&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, for a more involved example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;// Set up the runtime&#xA;using var host = new IsolatedRuntimeHost().WithBinDirectoryAssemblyLoader();&#xA;using var isolatedRuntime = new IsolatedRuntime(host);&#xA;&#xA;// Evaluate the environment info in both the host runtime and the isolated one&#xA;var realInfo = GetEnvironmentInfo();&#xA;var isolatedInfo = isolatedRuntime.Invoke(GetEnvironmentInfo);&#xA;Console.WriteLine($&#34;Real env: {realInfo}&#34;);&#xA;Console.WriteLine($&#34;Isolated env: {isolatedInfo}&#34;);&#xA;&#xA;static EnvInfo GetEnvironmentInfo()&#xA;{&#xA;    var sysRoot = Environment.GetEnvironmentVariable(&#34;SystemRoot&#34;) ?? &#34;(Not set)&#34;;&#xA;    return new EnvInfo(&#xA;        Environment.GetEnvironmentVariables().Count,&#xA;        $&#34;SystemRoot={sysRoot}&#34;);&#xA;}&#xA;&#xA;// Demonstrates that you can return arbitrarily-typed objects&#xA;record EnvInfo(int NumEnvVars, string ExampleEnvVar)&#xA;{&#xA;    public override string ToString() =&amp;gt; $&#34;{NumEnvVars} entries, including {ExampleEnvVar}&#34;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output, which will differ slighly on macOS/Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Real env: 64 entries, including SystemRoot=C:\WINDOWS&#xA;Isolated env: 0 entries, including SystemRoot=(Not set)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API guides&lt;/h2&gt; &#xA;&lt;h3&gt;Creating an &lt;code&gt;IsolatedRuntimeHost&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;First you must create an &lt;code&gt;IsolatedRuntimeHost&lt;/code&gt;. These host objects can be shared across users, since they don&#39;t hold any per-runtime state. If you&#39;re using DI, you could register it as a singleton.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this is to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start up &lt;a href=&#34;https://github.com/bytecodealliance/wasmtime-dotnet&#34;&gt;Wasmtime&lt;/a&gt;. This takes ~400ms so you only want to do it once and not every time you instantiate an &lt;code&gt;IsolatedRuntime&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure assembly loading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuring assembly loading&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The isolated .NET runtime instances need to load .NET assemblies in order to do anything useful. This package includes a WebAssembly-specific .NET base class library (BCL) for low-level .NET types such as &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;Dictionary&amp;lt;T, U&amp;gt;&lt;/code&gt;, etc. Isolated runtimes always have permission to load these prebundled BCL assemblies.&lt;/p&gt; &#xA;&lt;p&gt;You will almost always also want to load application-specific assemblies into your isolated runtimes, so that you can run your own code. The easiest way to configure assembly loading is to use &lt;code&gt;WithBinDirectoryAssemblyLoader&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using var host = new IsolatedRuntimeHost()&#xA;    .WithBinDirectoryAssemblyLoader();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This grants permission to load .NET assemblies from your host application&#39;s &lt;code&gt;bin&lt;/code&gt; directory. This makes it possible to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invoke lambda methods (since the code for those methods is inside the DLLs in your &lt;code&gt;bin&lt;/code&gt; directory)&lt;/li&gt; &#xA; &lt;li&gt;Instantiate objects of arbitrary types inside isolated runtimes&lt;/li&gt; &#xA; &lt;li&gt;Pass/return types declared in your own application or other packages that you reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;WithBinDirectoryAssemblyLoader&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; allow the guest code to escape from its sandbox. Even though it can load assemblies from the host application, it can only use them within its sandbox.&lt;/p&gt; &#xA;&lt;p&gt;If you want to impose stricter controls over assembly loading, then instead of &lt;code&gt;WithBinDirectoryAssemblyLoader&lt;/code&gt;, you can use &lt;code&gt;WithAssemblyLoader&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using var host = new IsolatedRuntimeHost()&#xA;    .WithAssemblyLoader(assemblyName =&amp;gt;&#xA;    {&#xA;        switch (assemblyName)&#xA;        {&#xA;            case &#34;MyAssembly&#34;:&#xA;                return File.ReadAllBytes(&#34;some/path/to/MyAssembly.dll&#34;);&#xA;        }&#xA;&#xA;        return null; // Unknown assembly. Maybe another loader will find it.&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can register as many assembly loaders as you wish.&lt;/p&gt; &#xA;&lt;h3&gt;Creating an &lt;code&gt;IsolatedRuntime&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Once you have an &lt;code&gt;IsolatedRuntimeHost&lt;/code&gt;, it&#39;s trivial to create as many runtimes as you like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using var runtime1 = new IsolatedRuntime(host);&#xA;using var runtime2 = new IsolatedRuntime(host);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently, each runtime takes ~8ms to instantiate.&lt;/p&gt; &#xA;&lt;h3&gt;Calling lambdas&lt;/h3&gt; &#xA;&lt;p&gt;Once you have an &lt;code&gt;IsolatedRuntime&lt;/code&gt;, you can dispatch calls into them by using &lt;code&gt;Invoke&lt;/code&gt; and lambda methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var person1 = new Person(3);&#xA;var person2 = new Person(9);&#xA;&#xA;var sumOfAges = runtime.Invoke(() =&amp;gt;&#xA;{&#xA;    // This runs inside the isolated runtime.&#xA;    // Notice that we can use closure-captured values/objects too.&#xA;    // They will be serialized in using MessagePack.&#xA;    return person1.Age + person2.Age;&#xA;});&#xA;&#xA;// Output: The isolated runtime calculated the result: 12&#xA;Console.WriteLine($&#34;The isolated runtime calculated the result: {sumOfAges}&#34;);&#xA;&#xA;record Person(int Age);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if the lambda mutates the value of captured objects or static fields, those changes will only take effect inside the isolated runtime. It cannot affect objects in the host runtime, since there is no direct sharing of memory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public static int StaticCounter = 0;&#xA;&#xA;private static void Main(string[] args)&#xA;{&#xA;    using var host = new IsolatedRuntimeHost().WithBinDirectoryAssemblyLoader();&#xA;    using var runtime = new IsolatedRuntime(host);&#xA;&#xA;    int localValue = 0;&#xA;&#xA;    runtime.Invoke(() =&amp;gt;&#xA;    {&#xA;        StaticCounter++;&#xA;        localValue++;&#xA;        Console.WriteLine($&#34;(isolated) StaticCounter={StaticCounter}, localValue={localValue}&#34;);&#xA;    });&#xA;&#xA;    Console.WriteLine($&#34;(host)     StaticCounter={StaticCounter}, localValue={localValue}&#34;);&#xA;&#xA;    // The output is:&#xA;    // (isolated) StaticCounter=1, localValue=1&#xA;    // (host)     StaticCounter=0, localValue=0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Instantiating isolated objects&lt;/h3&gt; &#xA;&lt;p&gt;Using lambdas is convenient, but only works if the isolated runtime is allowed to load the assemblies from your &lt;code&gt;bin&lt;/code&gt; directory (because that&#39;s where the code is).&lt;/p&gt; &#xA;&lt;p&gt;As an alternative, you can manually instantiate isolated objects inside the isolated runtime, then call methods on them. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;// Generic API&#xA;IsolatedObject obj1 = runtime.CreateObject&amp;lt;Person&amp;gt;();&#xA;&#xA;// String-based API (useful if the host app doesn&#39;t reference the assembly containing the type)&#xA;IsolatedObject obj2 = runtime.CreateObject(&#34;MyAssembly&#34;, &#34;MyNamespace&#34;, &#34;Person&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;CreateObject&lt;/code&gt; requires the object type to have a parameterless constructor. Support for constructor parameters isn&#39;t yet implemented (but would be simple to do).&lt;/p&gt; &#xA;&lt;h3&gt;Calling methods on isolated objects&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;Invoke&lt;/code&gt; or &lt;code&gt;InvokeVoid&lt;/code&gt; to find a method and invoke it in a single step. For example, if the object has a method &lt;code&gt;void DoSomething(int value)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;isolatedObject.InvokeVoid(&#34;DoSomething&#34;, 123);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it has a return value, you must specify the type as a generic parameter. For example, if the object has a method &lt;code&gt;TimeSpan GetAge(bool includeGestation)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;TimeSpan result = isolatedObject.Invoke&amp;lt;bool, TimeSpan&amp;gt;(&#34;GetAge&#34;, /* includeGestation */ true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can capture a reference to an &lt;code&gt;IsolateMethod&lt;/code&gt; so you can invoke it later. This is similar to a &lt;code&gt;MethodInfo&lt;/code&gt; so it isn&#39;t bound to a specific target object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var getAgeMethod = isolatedObject.FindMethod(&#34;GetAge&#34;);&#xA;&#xA;// ... then later:&#xA;var age = getAgeMethod.Invoke&amp;lt;bool, TimeSpan&amp;gt;(isolatedObject, /* includeGestation */ true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also find methods without having to instantiate any objects first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var getAgeMethod = isolatedRuntime.GetMethod(typeof(Person), &#34;GetAge&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Security notes&lt;/h2&gt; &#xA;&lt;p&gt;If you want to rely on this isolation as a critical security boundary in your application, you should bear in mind that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;This is an experimental prerelease package&lt;/strong&gt;. No security review has taken place. There could be defects that allow guest code to cause unintentional effects on the host.&lt;/li&gt; &#xA; &lt;li&gt;WebAssembly itself defines an extremely well-proven sandbox (browsers run untrusted WebAssembly modules from any website, and have done so for years with a solid track record), but: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Wasmtime is a different implementation than what runs inside your browser. Learn more at &lt;a href=&#34;https://bytecodealliance.org/articles/security-and-correctness-in-wasmtime&#34;&gt;Security and Correctness in Wasmtime&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;The security model for WebAssembly doesn&#39;t directly address side-channel attacks (e.g., &lt;a href=&#34;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&#34;&gt;spectre&lt;/a&gt;). There are robust solutions for this but it&#39;s outside the scope of this repo.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In summary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you used this as one layer in a multi-layered security model, it would be a pretty good layer! But nobody&#39;s promising it&#39;s bulletproof on its own.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re not running potentially hostile code, and are merely using this to manage the isolation of your own code, most of the above considerations don&#39;t apply.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and feedback&lt;/h2&gt; &#xA;&lt;p&gt;This is completely unsupported. There are no promises that this will be developed any further. It is published only to help people explore what they could do with this sort of capability.&lt;/p&gt; &#xA;&lt;p&gt;You are free to &lt;a href=&#34;https://github.com/SteveSandersonMS/DotNetIsolator/issues&#34;&gt;report issues&lt;/a&gt; but please don&#39;t assume you&#39;ll get any response, much less a fix.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure-Samples/cognitive-services-speech-sdk</title>
    <updated>2023-04-02T01:50:56Z</updated>
    <id>tag:github.com,2023-04-02:/Azure-Samples/cognitive-services-speech-sdk</id>
    <link href="https://github.com/Azure-Samples/cognitive-services-speech-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code for the Microsoft Cognitive Services Speech SDK&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cpp&lt;/li&gt; &#xA; &lt;li&gt;csharp&lt;/li&gt; &#xA; &lt;li&gt;java&lt;/li&gt; &#xA; &lt;li&gt;javascript&lt;/li&gt; &#xA; &lt;li&gt;nodejs&lt;/li&gt; &#xA; &lt;li&gt;objc&lt;/li&gt; &#xA; &lt;li&gt;python&lt;/li&gt; &#xA; &lt;li&gt;swift name: &#34;Microsoft Cognitive Services Speech SDK Samples&#34; description: &#34;Learn how to use the Microsoft Cognitive Services Speech SDK to add speech-enabled features to your apps.&#34; products:&lt;/li&gt; &#xA; &lt;li&gt;azure&lt;/li&gt; &#xA; &lt;li&gt;azure-cognitive-services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Sample Repository for the Microsoft Cognitive Services Speech SDK&lt;/h1&gt; &#xA;&lt;p&gt;This project hosts the &lt;strong&gt;samples&lt;/strong&gt; for the Microsoft Cognitive Services Speech SDK. To find out more about the Microsoft Cognitive Services Speech SDK itself, please visit the &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;SDK documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://aka.ms/csspeech/whatsnew&#34;&gt;here&lt;/a&gt; for release notes and older releases.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;This repository hosts samples that help you to get started with several features of the SDK. In addition more complex scenarios are included to give you a head-start on using speech technology in your application.&lt;/p&gt; &#xA;&lt;p&gt;We tested the samples with the latest released version of the SDK on Windows 10, Linux (on &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/speech-sdk?tabs=linux&#34;&gt;supported Linux distributions and target architectures&lt;/a&gt;), Android devices (API 23: Android 6.0 Marshmallow or higher), Mac x64 (OS version 10.14 or higher) and Mac M1 arm64 (OS version 11.0 or higher) and iOS 11.4 devices.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;SDK documentation&lt;/a&gt; has extensive sections about getting started, setting up the SDK, as well as the process to acquire the required subscription keys. You will need subscription keys to run the samples on your machines, you therefore should follow the instructions on these pages before continuing.&lt;/p&gt; &#xA;&lt;h2&gt;Get the samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The easiest way to use these samples without using Git is to download the current version as a &lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/archive/master.zip&#34;&gt;ZIP file&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Windows, before you unzip the archive, right-click it, select &lt;strong&gt;Properties&lt;/strong&gt;, and then select &lt;strong&gt;Unblock&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Be sure to unzip the entire archive, and not just individual samples.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this sample repository using a Git client.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build and run the samples&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: the samples make use of the Microsoft Cognitive Services Speech SDK. By downloading the Microsoft Cognitive Services Speech SDK, you acknowledge its license, see &lt;a href=&#34;https://aka.ms/csspeech/license&#34;&gt;Speech SDK license agreement&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please see the description of each individual sample for instructions on how to build and run it.&lt;/p&gt; &#xA;&lt;h2&gt;Related GitHub repositories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; - Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&#34;https://dev.botframework.com/&#34;&gt;Bot-Framework bot&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&#34;&gt;Custom Command&lt;/a&gt; web application.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/cognitive-services-speech-sdk-js&#34;&gt;microsoft/cognitive-services-speech-sdk-js&lt;/a&gt; - JavaScript implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Microsoft/cognitive-services-speech-sdk-go&#34;&gt;Microsoft/cognitive-services-speech-sdk-go&lt;/a&gt; - Go implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Speech-Service-Actions-Template&#34;&gt;Azure-Samples/Speech-Service-Actions-Template&lt;/a&gt; - Template to create a repository to develop Azure Custom Speech models with built-in support for DevOps and common software engineering practices&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Speech recognition quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech recognition using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/from-microphone&#34;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/from-microphone&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/from-microphone&#34;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/from-microphone&#34;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/from-microphone&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/from-microphone&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/from-microphone&#34;&gt;Quickstart C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/from-microphone&#34;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/from-microphone&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/browser&#34;&gt;Quickstart JavaScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/node&#34;&gt;Quickstart Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/from-microphone&#34;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/from-microphone&#34;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a file with recorded speech.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/from-microphone&#34;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/from-microphone&#34;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/from-microphone&#34;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Speech translation quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech translation using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/translate-speech-to-text&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/translate-speech-to-text&#34;&gt;Quickstart C# .NET Framework for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/translate-speech-to-text&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/translate-speech-to-text&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/translate-speech-to-text&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Speech synthesis quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech synthesis to a speaker. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/text-to-speech&#34;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/text-to-speech&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/text-to-speech&#34;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/text-to-speech&#34;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/text-to-speech&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/text-to-speech&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/text-to-speech&#34;&gt;Quickstart for C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/text-to-speech&#34;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/text-to-speech&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/text-to-speech&#34;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/text-to-speech&#34;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/text-to-speech&#34;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/text-to-speech&#34;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/text-to-speech&#34;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Voice Assistant quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to create a custom Voice Assistant. The applications will connect to a previously authored bot configured to use the Direct Line Speech channel, send a voice request, and return a voice response activity (if configured). If you want to build these quickstarts from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/index-voice-assistants&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; for full Voice Assistant samples and tools.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/virtual-assistant&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/virtual-assistant&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;p&gt;The following samples demonstrate additional capabilities of the Speech SDK, such as additional modes of speech recognition as well as intent recognition and translation. Voice Assistant samples can be found in a &lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;separate GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/windows/console&#34;&gt;C++ Console app for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, conversation transcription and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/linux/compressed-audio-input&#34;&gt;C++ Speech Recognition from MP3/Opus file (Linux only)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition from an MP3/Opus file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/console&#34;&gt;C# Console app for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnetcore/console&#34;&gt;C# Console app for .NET Core (Windows or Linux)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/jre/console&#34;&gt;Java Console app for JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/python/console&#34;&gt;Python Console app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/speechtotext-uwp&#34;&gt;Speech-to-text UWP sample&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/texttospeech-uwp&#34;&gt;Text-to-speech UWP sample&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech synthesis&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/android/sdkdemo/&#34;&gt;Speech recognition sample for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech and intent recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/&#34;&gt;Speech recognition, synthesis, and translation sample for the browser, using JavaScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/node&#34;&gt;Speech recognition and translation sample using JavaScript and Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Speech recognition sample for iOS using a connection object&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Extended speech recognition sample for iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition using streams etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Speech synthesis sample for iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech synthesis using streams etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/virtualassistant-uwp/&#34;&gt;C# UWP DialogServiceConnector sample for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/unity/speechrecognizer/&#34;&gt;C# Unity sample for Windows or Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation for Unity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/unity/VirtualAssistantPreview/&#34;&gt;C# Unity SpeechBotConnector sample for Windows or Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the SpeechBotConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;C#, C++ and Java DialogServiceConnector samples&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, Android&lt;/td&gt; &#xA;   &lt;td&gt;Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&#34;https://dev.botframework.com/&#34;&gt;Bot-Framework Bot&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&#34;&gt;Custom Command&lt;/a&gt; web application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Samples for using the Speech Service REST API (no Speech SDK installation required):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch/&#34;&gt;Batch transcription&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates usage of batch transcription from different programming languages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch-synthesis/&#34;&gt;Batch synthesis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates usage of batch synthesis from different programming languages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enumerate audio devices&lt;/td&gt; &#xA;   &lt;td&gt;C++, Windows&lt;/td&gt; &#xA;   &lt;td&gt;Shows how to get the Device ID of all connected microphones and loudspeakers. Device ID is required if you want to listen via non-default microphone (Speech Recognition), or play to a non-default loudspeaker (Text-To-Speech) using Speech SDK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enumerate audio devices&lt;/td&gt; &#xA;   &lt;td&gt;C# .NET Framework, Windows&lt;/td&gt; &#xA;   &lt;td&gt;-&#34;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Sample data for Custom Speech&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/sampledata/customspeech&#34;&gt;Sample data for Custom Speech&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;Microsoft Cognitive Services Speech Service and SDK Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DataDog/dd-trace-dotnet</title>
    <updated>2023-04-02T01:50:56Z</updated>
    <id>tag:github.com,2023-04-02:/DataDog/dd-trace-dotnet</id>
    <link href="https://github.com/DataDog/dd-trace-dotnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET Library for Datadog APM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog APM .NET Client Libraries&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; style=&#34;margin-left:10px&#34; src=&#34;https://user-images.githubusercontent.com/22597395/202840005-3cc7ffd9-4a22-4c59-99ab-293d6f616a19.svg?sanitize=true&#34; alt=&#34;bits dotnet&#34; width=&#34;200px&#34;&gt; &#xA;&lt;p&gt;This repository contains the sources for the client-side components of the Datadog product suite for Application Telemetry Collection and Application Performance Monitoring for .NET Applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-dotnet/tree/master/tracer&#34;&gt;Datadog .NET Tracer&lt;/a&gt;&lt;/strong&gt;: A set of .NET libraries that let you trace any piece of your .NET code. It automatically instruments supported libraries out-of-the-box and also supports custom instrumentation to instrument your own code.&lt;/p&gt; &#xA;&lt;p&gt;This library powers &lt;a href=&#34;https://docs.datadoghq.com/tracing/&#34;&gt;Distributed Tracing&lt;/a&gt;, &lt;a href=&#34;https://docs.datadoghq.com/tracing/profiler/connect_traces_and_profiles/&#34;&gt;Application Security Management&lt;/a&gt;, &lt;a href=&#34;https://docs.datadoghq.com/continuous_integration/&#34;&gt;Continuous Integration Visibility&lt;/a&gt;, &lt;a href=&#34;https://www.datadoghq.com/blog/dash-2022-new-feature-roundup/#send-critical-metrics-traces-and-logs-with-no-code-changes-using-dynamic-instrumentation&#34;&gt;Dynamic Instrumentation&lt;/a&gt; and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-dotnet/tree/master/profiler&#34;&gt;Datadog .NET Continuous Profiler&lt;/a&gt;&lt;/strong&gt;: Libraries that automatically profile your application. &lt;a href=&#34;https://docs.datadoghq.com/tracing/profiler/&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows and Linux Installers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-dotnet/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/DataDog/dd-trace-dotnet&#34; alt=&#34;GitHub release (latest SemVer)&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Datadog.Trace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Datadog.Trace&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Datadog.Trace.svg?sanitize=true&#34; alt=&#34;Datadog.Trace&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Datadog.Trace.OpenTracing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Datadog.Trace.OpenTracing&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Datadog.Trace.OpenTracing.svg?sanitize=true&#34; alt=&#34;Datadog.Trace.OpenTracing&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;p&gt;Build status on &lt;code&gt;master&lt;/code&gt;: &lt;a href=&#34;https://dev.azure.com/datadoghq/dd-trace-dotnet/_build/latest?definitionId=54&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/datadoghq/dd-trace-dotnet/_apis/build/status/consolidated-pipeline?branchName=master&amp;amp;stageName=build_windows_tracer&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2017 Datadog &lt;a href=&#34;https://www.datadoghq.com/&#34;&gt;https://www.datadoghq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-trace-dotnet/LICENSE&#34;&gt;license information&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact us&lt;/h2&gt; &#xA;&lt;h3&gt;Security Vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;If you have found a security issue, please contact the security team directly at &lt;a href=&#34;mailto:security@datadoghq.com&#34;&gt;security@datadoghq.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other feedback&lt;/h3&gt; &#xA;&lt;p&gt;If you have questions, feedback, or feature requests, reach our &lt;a href=&#34;https://docs.datadoghq.com/help&#34;&gt;support&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>