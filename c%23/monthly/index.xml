<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-01T01:58:43Z</updated>
  <subtitle>Monthly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DapperLib/Dapper</title>
    <updated>2023-11-01T01:58:43Z</updated>
    <id>tag:github.com,2023-11-01:/DapperLib/Dapper</id>
    <link href="https://github.com/DapperLib/Dapper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dapper - a simple object mapper for .Net&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dapper - a simple object mapper for .Net&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/StackExchange/dapper&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/8rbgoxqio76ynj4h?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;Located at &lt;a href=&#34;https://dapperlib.github.io/Dapper/&#34;&gt;dapperlib.github.io/Dapper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;MyGet Pre-release feed: &lt;a href=&#34;https://www.myget.org/gallery/dapper&#34;&gt;https://www.myget.org/gallery/dapper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;NuGet Stable&lt;/th&gt; &#xA;   &lt;th&gt;NuGet Pre-release&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;   &lt;th&gt;MyGet&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;Dapper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.svg?sanitize=true&#34; alt=&#34;Dapper MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;Dapper.EntityFramework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.EntityFramework&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.EntityFramework.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;Dapper.EntityFramework.StrongName&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.EntityFramework.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.EntityFramework.StrongName&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.EntityFramework.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.EntityFramework.StrongName MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;Dapper.Rainbow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.Rainbow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.Rainbow&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.Rainbow.svg?sanitize=true&#34; alt=&#34;Dapper.Rainbow MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;Dapper.SqlBuilder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.SqlBuilder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.SqlBuilder&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.SqlBuilder.svg?sanitize=true&#34; alt=&#34;Dapper.SqlBuilder MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;Dapper.StrongName&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Dapper.StrongName/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.myget.org/feed/dapper/package/nuget/Dapper.StrongName&#34;&gt;&lt;img src=&#34;https://img.shields.io/myget/dapper/vpre/Dapper.StrongName.svg?sanitize=true&#34; alt=&#34;Dapper.StrongName MyGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Package Purposes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dapper &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The core library&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.EntityFramework &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Extension handlers for EntityFramework&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.EntityFramework.StrongName &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Extension handlers for EntityFramework&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.Rainbow &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Micro-ORM implemented on Dapper, provides CRUD helpers&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dapper.SqlBuilder &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Component for building SQL queries dynamically and composably&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Dapper was originally developed for and by Stack Overflow, but is F/OSS. Sponsorship is welcome and invited - see the sponsor link at the top of the page. A huge thanks to everyone (individuals or organisations) who have sponsored Dapper, but a massive thanks in particular to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws&#34;&gt;AWS&lt;/a&gt; who sponsored Dapper from Oct 2023 via the &lt;a href=&#34;https://github.com/aws/dotnet-foss&#34;&gt;.NET on AWS Open Source Software Fund&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Dapper is a &lt;a href=&#34;https://www.nuget.org/packages/Dapper&#34;&gt;NuGet library&lt;/a&gt; that you can add in to your project that will enhance your ADO.NET connections via extension methods on your &lt;code&gt;DbConnection&lt;/code&gt; instance. This provides a simple and efficient API for invoking SQL, with support for both synchronous and asynchronous data access, and allows bother buffered and non-buffered queries.&lt;/p&gt; &#xA;&lt;p&gt;It provides multiple helpers, but the key APIs are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// insert/update/delete etc&#xA;var count  = connection.Execute(sql [, args]);&#xA;&#xA;// multi-row query&#xA;IEnumerable&amp;lt;T&amp;gt; rows = connection.Query&amp;lt;T&amp;gt;(sql [, args]);&#xA;&#xA;// single-row query ({Single|First}[OrDefault])&#xA;T row = connection.QuerySingle&amp;lt;T&amp;gt;(sql [, args]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;args&lt;/code&gt; can be (among other things):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a simple POCO (including anonyomous types) for named parameters&lt;/li&gt; &#xA; &lt;li&gt;a &lt;code&gt;Dictionary&amp;lt;string,object&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;a &lt;code&gt;DynamicParameters&lt;/code&gt; instance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Execute a query and map it to a list of typed objects&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Dog&#xA;{&#xA;    public int? Age { get; set; }&#xA;    public Guid Id { get; set; }&#xA;    public string Name { get; set; }&#xA;    public float? Weight { get; set; }&#xA;&#xA;    public int IgnoredProperty { get { return 1; } }&#xA;}&#xA;&#xA;var guid = Guid.NewGuid();&#xA;var dog = connection.Query&amp;lt;Dog&amp;gt;(&#34;select Age = @Age, Id = @Id&#34;, new { Age = (int?)null, Id = guid });&#xA;&#xA;Assert.Equal(1,dog.Count());&#xA;Assert.Null(dog.First().Age);&#xA;Assert.Equal(guid, dog.First().Id);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a query and map it to a list of dynamic objects&lt;/h2&gt; &#xA;&lt;p&gt;This method will execute SQL and return a dynamic list.&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var rows = connection.Query(&#34;select 1 A, 2 B union all select 3, 4&#34;).AsList();&#xA;&#xA;Assert.Equal(1, (int)rows[0].A);&#xA;Assert.Equal(2, (int)rows[0].B);&#xA;Assert.Equal(3, (int)rows[1].A);&#xA;Assert.Equal(4, (int)rows[1].B);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a Command that returns no results&lt;/h2&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var count = connection.Execute(@&#34;&#xA;  set nocount on&#xA;  create table #t(i int)&#xA;  set nocount off&#xA;  insert #t&#xA;  select @a a union all select @b&#xA;  set nocount on&#xA;  drop table #t&#34;, new {a=1, b=2 });&#xA;Assert.Equal(2, count);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Execute a Command multiple times&lt;/h2&gt; &#xA;&lt;p&gt;The same signature also allows you to conveniently and efficiently execute a command multiple times (for example to bulk-load data)&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var count = connection.Execute(@&#34;insert MyTable(colA, colB) values (@a, @b)&#34;,&#xA;    new[] { new { a=1, b=1 }, new { a=2, b=2 }, new { a=3, b=3 } }&#xA;  );&#xA;Assert.Equal(3, count); // 3 rows inserted: &#34;1,1&#34;, &#34;2,2&#34; and &#34;3,3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another example usage when you &lt;em&gt;already&lt;/em&gt; have an existing collection:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var foos = new List&amp;lt;Foo&amp;gt;&#xA;{&#xA;    { new Foo { A = 1, B = 1 } }&#xA;    { new Foo { A = 2, B = 2 } }&#xA;    { new Foo { A = 3, B = 3 } }&#xA;};&#xA;&#xA;var count = connection.Execute(@&#34;insert MyTable(colA, colB) values (@a, @b)&#34;, foos);&#xA;Assert.Equal(foos.Count, count);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This works for any parameter that implements &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for some T.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;A key feature of Dapper is performance. The following metrics show how long it takes to execute a &lt;code&gt;SELECT&lt;/code&gt; statement against a DB (in various config, each labeled) and map the data returned to objects.&lt;/p&gt; &#xA;&lt;p&gt;The benchmarks can be found in &lt;a href=&#34;https://github.com/DapperLib/Dapper/tree/main/benchmarks/Dapper.Tests.Performance&#34;&gt;Dapper.Tests.Performance&lt;/a&gt; (contributions welcome!) and can be run via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet run --project .\benchmarks\Dapper.Tests.Performance\ -c Release -f netcoreapp3.1 -- -f * --join&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output from the latest run is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19041.208 (2004/?/20H1)&#xA;Intel Core i7-7700HQ CPU 2.80GHz (Kaby Lake), 1 CPU, 8 logical and 4 physical cores&#xA;.NET Core SDK=3.1.201&#xA;  [Host]   : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT&#xA;  ShortRun : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ORM&lt;/th&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Return&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Mean&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;StdDev&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Error&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 0&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 1&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Gen 2&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Allocated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Belgrade&lt;/td&gt; &#xA;   &lt;td&gt;ExecuteReader&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;94.46 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.115 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.268 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.42 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hand Coded&lt;/td&gt; &#xA;   &lt;td&gt;DataTable&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;105.43 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.998 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.508 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;9.37 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hand Coded&lt;/td&gt; &#xA;   &lt;td&gt;SqlCommand&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;106.58 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.191 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.801 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.1250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.42 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;QueryFirstOrDefault&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;119.52 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.320 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.219 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.6250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.39 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;dynamic&amp;gt; (buffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;119.93 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.943 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.937 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.3750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.73 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Massive&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query (dynamic)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;120.31 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.340 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.252 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.1250&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.07 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;QueryFirstOrDefault&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;121.57 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.564 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.364 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.35 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;T&amp;gt; (buffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;121.67 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.913 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.403 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.8750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.8750&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.65 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PetaPoco&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Fetch&amp;lt;T&amp;gt; (Fast)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;124.91 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.015 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.747 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.5 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;125.23 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.932 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.433 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.6 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;125.76 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.038 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.081 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.62 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PetaPoco&lt;/td&gt; &#xA;   &lt;td&gt;Fetch&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;127.48 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.283 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.475 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.18 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (Compiled)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;128.89 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.627 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.971 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.92 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;129.20 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.577 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.896 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.43 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;SingleFromQuery&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;129.41 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.094 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.166 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.6 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mighty&lt;/td&gt; &#xA;   &lt;td&gt;SingleFromQuery&amp;lt;dynamic&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;130.59 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.432 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.677 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.43 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Contrib Get&amp;lt;T&amp;gt;&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;134.74 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.816 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.746 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.29 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ServiceStack&lt;/td&gt; &#xA;   &lt;td&gt;SingleById&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;135.01 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.213 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.320 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;15.27 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LINQ to DB&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;151.87 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.826 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.784 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.97 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;SqlQuery&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;171.00 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.460 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.791 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.7500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;23.67 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;GetObjectByKey&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;172.36 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.758 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.681 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.2500&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;29.06 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;T&amp;gt; (unbuffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;174.40 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.296 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.983 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.77 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;&#39;Query&amp;lt;dynamic&amp;gt; (unbuffered)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;174.45 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.988 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.340 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.81 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;FindObject&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;181.76 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.554 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;9.333 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;27.15 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevExpress.XPO&lt;/td&gt; &#xA;   &lt;td&gt;Query&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;189.81 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.187 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.004 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;10.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;31.61 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (Compiled)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;199.72 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.983 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.616 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.8 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;Get&amp;lt;T&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;248.71 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.604 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.098 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;29.79 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;253.20 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.033 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.097 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.7 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;HQL&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;258.70 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.716 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;17.712 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;32.1 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;SqlQuery&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;268.89 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.349 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;32.516 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.5 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;First&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;278.46 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;12.094 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18.284 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44.18 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF Core&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (No Tracking)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;280.88 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.192 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;13.765 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.38 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;Criteria&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;304.90 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.232 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.267 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;60.29 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EF 6&lt;/td&gt; &#xA;   &lt;td&gt;&#39;First (No Tracking)&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;316.55 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7.667 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;11.592 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.5000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;50.95 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;SQL&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;335.41 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3.111 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4.703 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;19.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;78.86 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NHibernate&lt;/td&gt; &#xA;   &lt;td&gt;LINQ&lt;/td&gt; &#xA;   &lt;td&gt;Post&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;807.79 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;27.207 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;45.719 μs&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2.0000&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;53.65 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Feel free to submit patches that include other ORMs - when running benchmarks, be sure to compile in Release and not attach a debugger (&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F5&lt;/kbd&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you might prefer Frans Bouma&#39;s &lt;a href=&#34;https://github.com/FransBouma/RawDataAccessBencher&#34;&gt;RawDataAccessBencher&lt;/a&gt; test suite or &lt;a href=&#34;https://github.com/InfoTechBridge/OrmBenchmark&#34;&gt;OrmBenchmark&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Parameterized queries&lt;/h2&gt; &#xA;&lt;p&gt;Parameters are usually passed in as anonymous classes. This allows you to name your parameters easily and gives you the ability to simply cut-and-paste SQL snippets and run them in your db platform&#39;s Query analyzer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;new {A = 1, B = &#34;b&#34;} // A will be mapped to the param @A, B to the param @B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters can also be built up dynamically using the DynamicParameters class. This allows for building a dynamic SQL statement while still using parameters for safety and performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    var sqlPredicates = new List&amp;lt;string&amp;gt;();&#xA;    var queryParams = new DynamicParameters();&#xA;    if (boolExpression)&#xA;    {&#xA;        sqlPredicates.Add(&#34;column1 = @param1&#34;);&#xA;        queryParams.Add(&#34;param1&#34;, dynamicValue1, System.Data.DbType.Guid);&#xA;    } else {&#xA;        sqlPredicates.Add(&#34;column2 = @param2&#34;);&#xA;        queryParams.Add(&#34;param2&#34;, dynamicValue2, System.Data.DbType.String);&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DynamicParameters also supports copying multiple parameters from existing objects of different types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    var queryParams = new DynamicParameters(objectOfType1);&#xA;    queryParams.AddDynamicParams(objectOfType2);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When an object that implements the &lt;code&gt;IDynamicParameters&lt;/code&gt; interface passed into &lt;code&gt;Execute&lt;/code&gt; or &lt;code&gt;Query&lt;/code&gt; functions, parameter values will be extracted via this interface. Obviously, the most likely object class to use for this purpose would be the built-in &lt;code&gt;DynamicParameters&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;h2&gt;List Support&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to pass in &lt;code&gt;IEnumerable&amp;lt;int&amp;gt;&lt;/code&gt; and will automatically parameterize your query.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;connection.Query&amp;lt;int&amp;gt;(&#34;select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids&#34;, new { Ids = new int[] { 1, 2, 3 } });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will be translated to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;select * from (select 1 as Id union all select 2 union all select 3) as X where Id in (@Ids1, @Ids2, @Ids3)&#34; // @Ids1 = 1 , @Ids2 = 2 , @Ids2 = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Literal replacements&lt;/h2&gt; &#xA;&lt;p&gt;Dapper supports literal replacements for bool and numeric types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;connection.Query(&#34;select * from User where UserTypeId = {=Admin}&#34;, new { UserTypeId.Admin });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The literal replacement is not sent as a parameter; this allows better plans and filtered index usage but should usually be used sparingly and after testing. This feature is particularly useful when the value being injected is actually a fixed value (for example, a fixed &#34;category id&#34;, &#34;status code&#34; or &#34;region&#34; that is specific to the query). For &lt;em&gt;live&lt;/em&gt; data where you are considering literals, you might &lt;em&gt;also&lt;/em&gt; want to consider and test provider-specific query hints like &lt;a href=&#34;https://blogs.msdn.microsoft.com/sqlprogrammability/2008/11/26/optimize-for-unknown-a-little-known-sql-server-2008-feature/&#34;&gt;&lt;code&gt;OPTIMIZE FOR UNKNOWN&lt;/code&gt;&lt;/a&gt; with regular parameters.&lt;/p&gt; &#xA;&lt;h2&gt;Buffered vs Unbuffered readers&lt;/h2&gt; &#xA;&lt;p&gt;Dapper&#39;s default behavior is to execute your SQL and buffer the entire reader on return. This is ideal in most cases as it minimizes shared locks in the db and cuts down on db network time.&lt;/p&gt; &#xA;&lt;p&gt;However when executing huge queries you may need to minimize memory footprint and only load objects as needed. To do so pass, &lt;code&gt;buffered: false&lt;/code&gt; into the &lt;code&gt;Query&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h2&gt;Multi Mapping&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to map a single row to multiple objects. This is a key feature if you want to avoid extraneous querying and eager load associations.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;Consider 2 classes: &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;class Post&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Title { get; set; }&#xA;    public string Content { get; set; }&#xA;    public User Owner { get; set; }&#xA;}&#xA;&#xA;class User&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Name { get; set; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let us say that we want to map a query that joins both the posts and the users table. Until now if we needed to combine the result of 2 queries, we&#39;d need a new object to express it but it makes more sense in this case to put the &lt;code&gt;User&lt;/code&gt; object inside the &lt;code&gt;Post&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;This is the use case for multi mapping. You tell dapper that the query returns a &lt;code&gt;Post&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object and then give it a function describing what you want to do with each of the rows containing both a &lt;code&gt;Post&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object. In our case, we want to take the user object and put it inside the post object. So we write the function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;(post, user) =&amp;gt; { post.Owner = user; return post; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The 3 type arguments to the &lt;code&gt;Query&lt;/code&gt; method specify what objects dapper should use to deserialize the row and what is going to be returned. We&#39;re going to interpret both rows as a combination of &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt; and we&#39;re returning back a &lt;code&gt;Post&lt;/code&gt; object. Hence the type declaration becomes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;&amp;lt;Post, User, Post&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everything put together, looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var sql =&#xA;@&#34;select * from #Posts p&#xA;left join #Users u on u.Id = p.OwnerId&#xA;Order by p.Id&#34;;&#xA;&#xA;var data = connection.Query&amp;lt;Post, User, Post&amp;gt;(sql, (post, user) =&amp;gt; { post.Owner = user; return post;});&#xA;var post = data.First();&#xA;&#xA;Assert.Equal(&#34;Sams Post1&#34;, post.Content);&#xA;Assert.Equal(1, post.Id);&#xA;Assert.Equal(&#34;Sam&#34;, post.Owner.Name);&#xA;Assert.Equal(99, post.Owner.Id);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dapper is able to split the returned row by making an assumption that your Id columns are named &lt;code&gt;Id&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;. If your primary key is different or you would like to split the row at a point other than &lt;code&gt;Id&lt;/code&gt;, use the optional &lt;code&gt;splitOn&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple Results&lt;/h2&gt; &#xA;&lt;p&gt;Dapper allows you to process multiple result grids in a single query.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var sql =&#xA;@&#34;&#xA;select * from Customers where CustomerId = @id&#xA;select * from Orders where CustomerId = @id&#xA;select * from Returns where CustomerId = @id&#34;;&#xA;&#xA;using (var multi = connection.QueryMultiple(sql, new {id=selectedId}))&#xA;{&#xA;   var customer = multi.Read&amp;lt;Customer&amp;gt;().Single();&#xA;   var orders = multi.Read&amp;lt;Order&amp;gt;().ToList();&#xA;   var returns = multi.Read&amp;lt;Return&amp;gt;().ToList();&#xA;   ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stored Procedures&lt;/h2&gt; &#xA;&lt;p&gt;Dapper fully supports stored procs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var user = cnn.Query&amp;lt;User&amp;gt;(&#34;spGetUser&#34;, new {Id = 1},&#xA;        commandType: CommandType.StoredProcedure).SingleOrDefault();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want something more fancy, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var p = new DynamicParameters();&#xA;p.Add(&#34;@a&#34;, 11);&#xA;p.Add(&#34;@b&#34;, dbType: DbType.Int32, direction: ParameterDirection.Output);&#xA;p.Add(&#34;@c&#34;, dbType: DbType.Int32, direction: ParameterDirection.ReturnValue);&#xA;&#xA;cnn.Execute(&#34;spMagicProc&#34;, p, commandType: CommandType.StoredProcedure);&#xA;&#xA;int b = p.Get&amp;lt;int&amp;gt;(&#34;@b&#34;);&#xA;int c = p.Get&amp;lt;int&amp;gt;(&#34;@c&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ansi Strings and varchar&lt;/h2&gt; &#xA;&lt;p&gt;Dapper supports varchar params, if you are executing a where clause on a varchar column using a param be sure to pass it in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Query&amp;lt;Thing&amp;gt;(&#34;select * from Thing where Name = @Name&#34;, new {Name = new DbString { Value = &#34;abcde&#34;, IsFixedLength = true, Length = 10, IsAnsi = true }});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On SQL Server it is crucial to use the unicode when querying unicode and ANSI when querying non unicode.&lt;/p&gt; &#xA;&lt;h2&gt;Type Switching Per Row&lt;/h2&gt; &#xA;&lt;p&gt;Usually you&#39;ll want to treat all rows from a given table as the same data type. However, there are some circumstances where it&#39;s useful to be able to parse different rows as different data types. This is where &lt;code&gt;IDataReader.GetRowParser&lt;/code&gt; comes in handy.&lt;/p&gt; &#xA;&lt;p&gt;Imagine you have a database table named &#34;Shapes&#34; with the columns: &lt;code&gt;Id&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt;, and you want to parse its rows into &lt;code&gt;Circle&lt;/code&gt;, &lt;code&gt;Square&lt;/code&gt;, or &lt;code&gt;Triangle&lt;/code&gt; objects based on the value of the Type column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var shapes = new List&amp;lt;IShape&amp;gt;();&#xA;using (var reader = connection.ExecuteReader(&#34;select * from Shapes&#34;))&#xA;{&#xA;    // Generate a row parser for each type you expect.&#xA;    // The generic type &amp;lt;IShape&amp;gt; is what the parser will return.&#xA;    // The argument (typeof(*)) is the concrete type to parse.&#xA;    var circleParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Circle));&#xA;    var squareParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Square));&#xA;    var triangleParser = reader.GetRowParser&amp;lt;IShape&amp;gt;(typeof(Triangle));&#xA;&#xA;    var typeColumnIndex = reader.GetOrdinal(&#34;Type&#34;);&#xA;&#xA;    while (reader.Read())&#xA;    {&#xA;        IShape shape;&#xA;        var type = (ShapeType)reader.GetInt32(typeColumnIndex);&#xA;        switch (type)&#xA;        {&#xA;            case ShapeType.Circle:&#xA;            &#x9;shape = circleParser(reader);&#xA;            &#x9;break;&#xA;            case ShapeType.Square:&#xA;            &#x9;shape = squareParser(reader);&#xA;            &#x9;break;&#xA;            case ShapeType.Triangle:&#xA;            &#x9;shape = triangleParser(reader);&#xA;            &#x9;break;&#xA;            default:&#xA;            &#x9;throw new NotImplementedException();&#xA;        }&#xA;&#xA;      &#x9;shapes.Add(shape);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Defined Variables in MySQL&lt;/h2&gt; &#xA;&lt;p&gt;In order to use Non-parameter SQL variables with MySql Connector, you have to add the following option to your connection string:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Allow User Variables=True&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you don&#39;t provide Dapper with a property to map.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations and caveats&lt;/h2&gt; &#xA;&lt;p&gt;Dapper caches information about every query it runs, this allows it to materialize objects quickly and process parameters quickly. The current implementation caches this information in a &lt;code&gt;ConcurrentDictionary&lt;/code&gt; object. Statements that are only used once are routinely flushed from this cache. Still, if you are generating SQL strings on the fly without using parameters it is possible you may hit memory issues.&lt;/p&gt; &#xA;&lt;p&gt;Dapper&#39;s simplicity means that many feature that ORMs ship with are stripped out. It worries about the 95% scenario, and gives you the tools you need most of the time. It doesn&#39;t attempt to solve every problem.&lt;/p&gt; &#xA;&lt;h2&gt;Will Dapper work with my DB provider?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper has no DB specific implementation details, it works across all .NET ADO providers including &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt;, SQL CE, Firebird, Oracle, MySQL, PostgreSQL and SQL Server.&lt;/p&gt; &#xA;&lt;h2&gt;Do you have a comprehensive list of examples?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper has a comprehensive test suite in the &lt;a href=&#34;https://github.com/DapperLib/Dapper/tree/main/tests/Dapper.Tests&#34;&gt;test project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who is using this?&lt;/h2&gt; &#xA;&lt;p&gt;Dapper is in production use at &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aras-p/UnityGaussianSplatting</title>
    <updated>2023-11-01T01:58:43Z</updated>
    <id>tag:github.com,2023-11-01:/aras-p/UnityGaussianSplatting</id>
    <link href="https://github.com/aras-p/UnityGaussianSplatting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Toy Gaussian Splatting visualization in Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gaussian Splatting playground in Unity&lt;/h1&gt; &#xA;&lt;p&gt;SIGGRAPH 2023 had a paper &#34;&lt;a href=&#34;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/&#34;&gt;&lt;strong&gt;3D Gaussian Splatting for Real-Time Radiance Field Rendering&lt;/strong&gt;&lt;/a&gt;&#34; by Kerbl, Kopanas, Leimkühler, Drettakis that looks pretty cool! Check out their website, source code repository, data sets and so on.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve decided to try to implement the realtime visualization part (i.e. the one that takes already-produced gaussian splat &#34;model&#34; file) in Unity.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotOverview.jpg?raw=true&#34; alt=&#34;Screenshot&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The original paper code has a purely CUDA-based realtime renderer; other people have done their own implementations (e.g. WebGPU at &lt;a href=&#34;https://github.com/cvlab-epfl/gaussian-splatting-web&#34;&gt;cvlab-epfl&lt;/a&gt;, Taichi at &lt;a href=&#34;https://github.com/wanmeihuali/taichi_3d_gaussian_splatting&#34;&gt;wanmeihuali&lt;/a&gt;, etc.).&lt;/p&gt; &#xA;&lt;p&gt;Code in here so far is randomly cribbled together from reading the paper (as well as earlier literature on EWA splatting), looking at the official CUDA implementation, and so on. Current state:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code does &lt;strong&gt;not&lt;/strong&gt; use the &#34;tile-based splat rasterizer&#34; bit from the paper; it just draws each gaussian splat as an oriented quad that covers the extents of it.&lt;/li&gt; &#xA; &lt;li&gt;Splat color accumulation is done by rendering front-to-back, with a blending mode that results in the same accumulated color as their tile-based renderer.&lt;/li&gt; &#xA; &lt;li&gt;Splat sorting is done with a AMD FidelityFX derived radix sort.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Note: this is all &lt;em&gt;&lt;strong&gt;a toy&lt;/strong&gt;&lt;/em&gt; that I&#39;m just playing around with. If you file bugs or feature requests, I will most likely just ignore them and do whatever I please. I told you so! &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download or clone this repository and open &lt;code&gt;projects/GaussianExample&lt;/code&gt; as a Unity project (I use Unity 2022.3, other versions might also work). Note that the project requires DX12 or Vulkan on Windows, i.e. DX11 will not work. This is &lt;strong&gt;not tested at all on mobile/web&lt;/strong&gt;, and probably does not work there.&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/Images/shotAssetCreator.png&#34; width=&#34;250px&#34;&gt; &#xA;&lt;p&gt;Next up, &lt;strong&gt;create some GaussianSplat assets&lt;/strong&gt;: open &lt;code&gt;Tools -&amp;gt; Gaussian Splats -&amp;gt; Create GaussianSplatAsset&lt;/code&gt; menu within Unity. In the dialog, point &lt;code&gt;Input PLY File&lt;/code&gt; to your Gaussian Splat file (note that it has to be a gaussian splat PLY file, not some other PLY file. E.g. in the official paper models, the correct files are under &lt;code&gt;point_cloud/iteration_*/point_cloud.ply&lt;/code&gt;). Optionally there can be &lt;code&gt;cameras.json&lt;/code&gt; next to it or somewhere in parent folders.&lt;/p&gt; &#xA;&lt;p&gt;Pick desired compression options and output folder, and press &#34;Create Asset&#34; button. The compression even at &#34;very low&#34; quality setting is decently usable, e.g. this capture at Very Low preset is under 8MB of total size (click to see the video): &lt;br&gt; &lt;a href=&#34;https://youtu.be/iccfV0YlWVI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/iccfV0YlWVI/0.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If everything was fine, there should be a GaussianSplat asset that has several data files next to it.&lt;/p&gt; &#xA;&lt;p&gt;Since the gaussian splat models are quite large, I have not included any in this Github repo. The original &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;paper github page&lt;/a&gt; has a a link to &lt;a href=&#34;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/datasets/pretrained/models.zip&#34;&gt;14GB zip&lt;/a&gt; of their models.&lt;/p&gt; &#xA;&lt;p&gt;In the game object that has a &lt;code&gt;GaussianSplatRenderer&lt;/code&gt; script, &lt;strong&gt;point the Asset field to&lt;/strong&gt; one of your created assets. There are various controls on the script to debug/visualize the data, as well as a slider to move game camera into one of asset&#39;s camera locations.&lt;/p&gt; &#xA;&lt;p&gt;The rendering takes game object transformation matrix into account; the official gaussian splat models seem to be all rotated by about -160 degrees around X axis, and mirrored around Z axis, so in the sample scene the object has such a transform set up.&lt;/p&gt; &#xA;&lt;p&gt;Additional documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/render-pipeline-integration.md&#34;&gt;Render Pipeline Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/docs/splat-editing.md&#34;&gt;Editing Splats&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;That&#39;s it!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Future plans, roadmap and a todo list does not really exist, I&#39;ll just do whatever I randomly decide. I keep some of the open ideas as github issues.&lt;/p&gt; &#xA;&lt;h2&gt;Write-ups&lt;/h2&gt; &#xA;&lt;p&gt;My own blog posts about all this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aras-p.info/blog/2023/09/05/Gaussian-Splatting-is-pretty-cool/&#34;&gt;Gaussian Splatting is pretty cool!&lt;/a&gt; (2023 Sep 5)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aras-p.info/blog/2023/09/13/Making-Gaussian-Splats-smaller/&#34;&gt;Making Gaussian Splats smaller&lt;/a&gt; (2023 Sep 13)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aras-p.info/blog/2023/09/27/Making-Gaussian-Splats-more-smaller/&#34;&gt;Making Gaussian Splats more smaller&lt;/a&gt; (2023 Sep 27)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance numbers:&lt;/h2&gt; &#xA;&lt;p&gt;&#34;bicycle&#34; scene from the paper, with 6.1M splats and first camera in there, rendering at 1200x797 resolution, at &#34;Medium&#34; asset quality level (282MB asset file):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (NVIDIA RTX 3080 Ti): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Official SBIR viewer: 7.4ms (135FPS). 4.8GB VRAM usage.&lt;/li&gt; &#xA;   &lt;li&gt;Unity, DX12 or Vulkan: 8.1ms (123FPS) - 4.55ms rendering, 2.37ms sorting, 0.78ms splat view calc. 1.3GB VRAM usage.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mac (Apple M1 Max): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Unity, Metal: 23.6ms (42FPS).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides the gaussian splat asset that is loaded into GPU memory, currently this also needs about 48 bytes of GPU memory per splat (for sorting, caching view dependent data etc.).&lt;/p&gt; &#xA;&lt;h2&gt;License and External Code Used&lt;/h2&gt; &#xA;&lt;p&gt;The code I wrote for this is under MIT license. The project also uses several 3rd party libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zanders3/json&#34;&gt;zanders3/json&lt;/a&gt;, MIT license, (c) 2018 Alex Parker.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Ffx&#34; GPU sorting code is based on &lt;a href=&#34;https://github.com/GPUOpen-Effects/FidelityFX-ParallelSort&#34;&gt;AMD FidelityFX ParallelSort&lt;/a&gt;, MIT license, (c) 2020-2021 Advanced Micro Devices, Inc. Ported to Unity by me.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;However, keep in mind that the &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting/raw/main/LICENSE.md&#34;&gt;license of the original paper implementation&lt;/a&gt; says that the official &lt;em&gt;training&lt;/em&gt; software for the Gaussian Splats is for educational / academic / non-commercial purpose; commercial usage requires getting license from INRIA. That is: even if this viewer / integration into Unity is just &#34;MIT license&#34;, you need to separately consider &lt;em&gt;how&lt;/em&gt; did you get your Gaussian Splat PLY files.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PowerShell/PowerShell</title>
    <updated>2023-11-01T01:58:43Z</updated>
    <id>tag:github.com,2023-11-01:/PowerShell/PowerShell</id>
    <link href="https://github.com/PowerShell/PowerShell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true&#34; alt=&#34;logo&#34;&gt; PowerShell&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/overview&#34;&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; &#xA;&lt;h2&gt;Windows PowerShell vs. PowerShell Core&lt;/h2&gt; &#xA;&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not automatically ported back to Windows PowerShell 5.1. This also means that &lt;a href=&#34;https://github.com/PowerShell/PowerShell/issues&#34;&gt;issues tracked here&lt;/a&gt; are only for PowerShell Core 6 and higher. Windows PowerShell specific issues should be reported with the &lt;a href=&#34;https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332&#34;&gt;Feedback Hub app&lt;/a&gt;, by choosing &#34;Apps &amp;gt; PowerShell&#34; in the category.&lt;/p&gt; &#xA;&lt;h2&gt;New to PowerShell?&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning&#34;&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Get PowerShell&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install a PowerShell package for any of the following platforms.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Supported Platform&lt;/th&gt; &#xA;   &lt;th&gt;Download (LTS)&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (stable)&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (preview)&lt;/th&gt; &#xA;   &lt;th&gt;How to Install&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#windows&#34;&gt;Windows (x64)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/PowerShell-7.2.16-win-x64.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/PowerShell-7.3.9-win-x64.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/PowerShell-7.4.0-rc.1-win-x64.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-windows&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#windows&#34;&gt;Windows (x86)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/PowerShell-7.2.16-win-x86.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/PowerShell-7.3.9-win-x86.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/PowerShell-7.4.0-rc.1-win-x86.msi&#34;&gt;.msi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-windows&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Ubuntu 22.04&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-on-linux?view=powershell-7.3#ubuntu&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Ubuntu 20.04&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#ubuntu-2004&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Ubuntu 18.04&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#ubuntu-1804&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Ubuntu 16.04&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#ubuntu-1604&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Debian 10&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#debian-10&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Debian 11&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts_7.2.16-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;CentOS 7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview-7.4.0_rc.1-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#centos-7&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;CentOS 8&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview-7.4.0_rc.1-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Red Hat Enterprise Linux 7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview-7.4.0_rc.1-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#red-hat-enterprise-linux-rhel-7&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;openSUSE 42.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview-7.4.0_rc.1-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#opensuse&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#linux&#34;&gt;Fedora 35&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview-7.4.0_rc.1-1.rh.x86_64.rpm&#34;&gt;.rpm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#fedora&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#macos&#34;&gt;macOS 10.13+ (x64)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-osx-x64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-osx-x64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-osx-x64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-macos&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/release-notes/6.0/supported-os.md#macos&#34;&gt;macOS 11+ (arm64)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.2.16/powershell-lts-7.2.16-osx-arm64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-osx-arm64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-osx-arm64.pkg&#34;&gt;.pkg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-macos&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell-Docker&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can download and install a PowerShell package for any of the following platforms, &lt;strong&gt;which are supported by the community.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (stable)&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (preview)&lt;/th&gt; &#xA;   &lt;th&gt;How to Install&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#arch-linux&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kali Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell_7.3.9-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-preview_7.4.0-rc.1-1.deb_amd64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#kali&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Many Linux distributions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://snapcraft.io/powershell&#34;&gt;Snapcraft&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://snapcraft.io/powershell-preview&#34;&gt;Snapcraft&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can also download the PowerShell binary archives for Windows, macOS, and Linux.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (stable)&lt;/th&gt; &#xA;   &lt;th&gt;Downloads (preview)&lt;/th&gt; &#xA;   &lt;th&gt;How to Install&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/PowerShell-7.3.9-win-x86.zip&#34;&gt;32-bit&lt;/a&gt;/&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/PowerShell-7.3.9-win-x64.zip&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/PowerShell-7.4.0-rc.1-win-x86.zip&#34;&gt;32-bit&lt;/a&gt;/&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/PowerShell-7.4.0-rc.1-win-x64.zip&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-windows#zip&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS (x64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-osx-x64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-osx-x64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-macos#binary-archives&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS (arm64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-osx-arm64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-osx-arm64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-macos#binary-archives&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-linux-x64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-linux-x64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#binary-archives&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows (ARM)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/PowerShell-7.3.9-win-arm64.zip&#34;&gt;64-bit&lt;/a&gt; (preview)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/PowerShell-7.4.0-rc.1-win-arm64.zip&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/powershell-core-on-arm&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Raspbian (ARM)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-linux-arm32.tar.gz&#34;&gt;32-bit&lt;/a&gt;/&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.3.9/powershell-7.3.9-linux-arm64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-linux-arm32.tar.gz&#34;&gt;32-bit&lt;/a&gt;/&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/download/v7.4.0-rc.1/powershell-7.4.0-rc.1-linux-arm64.tar.gz&#34;&gt;64-bit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux#raspbian&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To install a specific version, visit &lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://aka.ms/PSPublicDashboard&#34;&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; &#xA;&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href=&#34;https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Discussions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/discussions/quickstart&#34;&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; &#xA;&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; &#xA;&lt;p&gt;Create or join a &lt;a href=&#34;https://github.com/PowerShell/PowerShell/discussions&#34;&gt;discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Chat&lt;/h2&gt; &#xA;&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; &#xA;&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/PowerShell/PowerShell&#34;&gt;Gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/PowerShell&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/#powershell&#34;&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/psslack&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Add-ons and libraries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/janikvonrotz/awesome-powershell&#34;&gt;Awesome PowerShell&lt;/a&gt; has a great curated list of add-ons and resources.&lt;/p&gt; &#xA;&lt;h2&gt;Building the Repository&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/building/linux.md&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/building/windows-core.md&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/building/macos.md&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you have any problems building, consult the developer &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Azure CI (Windows)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Azure CI (Linux)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Azure CI (macOS)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;CodeFactor Grade&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://powershell.visualstudio.com/PowerShell/_build?definitionId=32&#34;&gt;&lt;img src=&#34;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily&#34; alt=&#34;windows-nightly-image&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://powershell.visualstudio.com/PowerShell/_build?definitionId=23&#34;&gt;&lt;img src=&#34;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master&#34; alt=&#34;linux-nightly-image&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://powershell.visualstudio.com/PowerShell/_build?definitionId=24&#34;&gt;&lt;img src=&#34;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master&#34; alt=&#34;macOS-nightly-image&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.codefactor.io/repository/github/powershell/powershell&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/powershell/powershell/badge&#34; alt=&#34;cf-image&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; &#xA;&lt;p&gt;You can clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/PowerShell/PowerShell.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/git&#34;&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developing and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please look into the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; to know how to develop and contribute. If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&#34;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; &#xA;&lt;p&gt;Also, make sure to check out our &lt;a href=&#34;https://github.com/powershell/powershell-rfc&#34;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For support, see the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md&#34;&gt;Support Section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Legal and Licensing&lt;/h2&gt; &#xA;&lt;p&gt;PowerShell is licensed under the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Docker Files and Images&lt;/h3&gt; &#xA;&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on Docker Hub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/microsoft/windowsservercore/&#34;&gt;Windows Server Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/microsoft/nanoserver/&#34;&gt;Nano Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Telemetry&lt;/h3&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry&#34;&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;The governance policy for the PowerShell project is described &lt;a href=&#34;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>