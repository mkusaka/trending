<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T02:33:12Z</updated>
  <subtitle>Monthly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/efcore</title>
    <updated>2022-06-03T02:33:12Z</updated>
    <id>tag:github.com,2022-06-03:/dotnet/efcore</id>
    <link href="https://github.com/dotnet/efcore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/dnceng/public/51/main&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/dnceng/public/51/main&#34; alt=&#34;test results&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is home to the following &lt;a href=&#34;https://dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&#34;https://github.com/microsoft&#34;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&#34;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Entity Framework Core&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;EF Core is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/&#34;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer&#xA;dotnet add package Microsoft.EntityFrameworkCore.Sqlite&#xA;dotnet add package Microsoft.EntityFrameworkCore.Cosmos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&#34;https://docs.microsoft.com/ef/core/get-started/&#34;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var db = new BloggingContext())&#xA;{&#xA;    // Inserting data into the database&#xA;    db.Add(new Blog { Url = &#34;http://blogs.msdn.com/adonet&#34; });&#xA;    db.SaveChanges();&#xA;&#xA;    // Querying&#xA;    var blog = db.Blogs&#xA;        .OrderBy(b =&amp;gt; b.BlogId)&#xA;        .First();&#xA;&#xA;    // Updating&#xA;    blog.Url = &#34;https://devblogs.microsoft.com/dotnet&#34;;&#xA;    blog.Posts.Add(&#xA;        new Post&#xA;        {&#xA;            Title = &#34;Hello World&#34;,&#xA;            Content = &#34;I wrote an app using EF Core!&#34;&#xA;        });&#xA;    db.SaveChanges();&#xA;&#xA;    // Deleting&#xA;    db.Remove(blog);&#xA;    db.SaveChanges();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable version is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.Data.Sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;This library implements the common &lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/data/adonet/&#34;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&#34;https://docs.microsoft.com/dotnet/standard/data/sqlite/&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var connection = new SqliteConnection(&#34;Data Source=Blogs.db&#34;))&#xA;{&#xA;    connection.Open();&#xA;&#xA;    var command = connection.CreateCommand();&#xA;    command.CommandText = &#34;SELECT Url FROM Blogs&#34;;&#xA;&#xA;    using (var reader = command.ExecuteReader())&#xA;    {&#xA;        while (reader.Read())&#xA;        {&#xA;            var url = reader.GetString(0);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/efcore/issues/23884&#34;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/release-planning&#34;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/writing-a-provider&#34;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/samples</title>
    <updated>2022-06-03T02:33:12Z</updated>
    <id>tag:github.com,2022-06-03:/dotnet/samples</id>
    <link href="https://github.com/dotnet/samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code referenced by the .NET documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dotnet/samples/workflows/Markdownlint/badge.svg?sanitize=true&#34; alt=&#34;Markdownlint&#34;&gt; &lt;a href=&#34;https://github.com/dotnet/samples/actions/workflows/build-validation.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet/samples/actions/workflows/build-validation.yml/badge.svg?sanitize=true&#34; alt=&#34;Snippets 5000&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/samples/actions/workflows/version-sweep.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet/samples/actions/workflows/version-sweep.yml/badge.svg?sanitize=true&#34; alt=&#34;target supported version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains all the sample code that is part of any topic under the .NET documentation. There are several different projects that are organized in sub-folders. These sub-folders are organized similarly to the organization of the docs for .NET. Some of the articles will have more than one sample associated with them.&lt;/p&gt; &#xA;&lt;p&gt;The content team tracks issues for .NET documentation in the &lt;a href=&#34;https://github.com/dotnet/docs&#34;&gt;dotnet/docs&lt;/a&gt; and &lt;a href=&#34;https://github.com/dotnet/dotnet-api-docs&#34;&gt;dotnet/dotnet-api-docs&lt;/a&gt; repositories. Issues are turned off on this repository. File issues against existing samples and suggestions for new samples in those repositories. If you&#39;re not sure where, choose &lt;a href=&#34;https://github.com/dotnet/docs/issues&#34;&gt;dotnet/docs&lt;/a&gt;. This process keeps the issues associated with the articles that explain the concepts for each sample. The best process is to file an issue from the feedback control at the bottom of each docs page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For existing samples, file the issue on the page with the sample.&lt;/li&gt; &#xA; &lt;li&gt;To suggest new samples, file the issue on the index page where you want to see the new sample.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The code in this repository represents programs that demonstrate application or library scenarios. These samples often use more than one technology, feature, or toolkit. Each sample has a readme.md file that explains the sample and links to resources for more information.&lt;/p&gt; &#xA;&lt;p&gt;Samples should be buildable projects. Those projects should build and run on the widest set of platforms possible for the given sample. In practice, that means building .NET Core-based console applications where possible. Samples that are specific to the web or a UI framework should add those tools as needed. Examples include web applications, mobile apps, WPF or WinForms apps, and so on.&lt;/p&gt; &#xA;&lt;p&gt;We are working toward having a CI system in place for all code. When you make any updates to samples, make sure each update is part of a buildable project. Ideally, add tests for correctness on samples as well.&lt;/p&gt; &#xA;&lt;h2&gt;Building a sample&lt;/h2&gt; &#xA;&lt;p&gt;Build any .NET Core sample using the .NET Core CLI, which is installed with &lt;a href=&#34;https://www.microsoft.com/net/download&#34;&gt;the .NET Core SDK&lt;/a&gt;. Then run these commands from the CLI in the directory of any sample:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet build&#xA;dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These will install any needed dependencies, build the project, and run the project respectively.&lt;/p&gt; &#xA;&lt;p&gt;Multi-project samples have instructions in their root directory in a &lt;code&gt;README.md&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Except where noted, all samples build from the command line on any platform supported by .NET Core. There are a few samples that are specific to Visual Studio and require Visual Studio 2017 or later. In addition, some samples show platform-specific features and will require a specific platform. Other samples and snippets require the .NET Framework and will run on Windows platforms, and will need the Developer Pack for the target Framework version.&lt;/p&gt; &#xA;&lt;h2&gt;Creating new samples&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to add a code sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample &lt;strong&gt;must be part of a buildable project&lt;/strong&gt;. Where possible, the projects should build on all platforms supported by .NET Core. Exceptions to this are samples that demonstrate a platform-specific feature or platform-specific tool.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample should conform to the &lt;a href=&#34;https://github.com/dotnet/runtime/raw/main/docs/coding-guidelines/coding-style.md&#34;&gt;runtime coding style&lt;/a&gt; to maintain consistency.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Additionally, we prefer the use of &lt;code&gt;static&lt;/code&gt; methods rather than instance methods when demonstrating something that doesn&#39;t require instantiating a new object.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your sample should include &lt;strong&gt;appropriate exception handling&lt;/strong&gt;. It should handle all exceptions that are likely to be thrown in the context of the sample. For example, a sample that calls the &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.console.readline&#34;&gt;Console.ReadLine&lt;/a&gt; method to retrieve user input should use appropriate exception handling when the input string is passed as an argument to a method. Similarly, if your sample expects a method call to fail, the resulting exception must be handled. Always handle the specific exceptions thrown by the method, rather than base class exceptions such as &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.exception&#34;&gt;Exception&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/dotnet/api/system.systemexception&#34;&gt;SystemException&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your sample builds a standalone package, you must include the runtimes used by our CI build system, in addition to any runtimes used by your sample:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;win7-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win8-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win81-x64&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ubuntu.16.04-x64&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will have a CI system in place to build these projects shortly.&lt;/p&gt; &#xA;&lt;p&gt;To create a sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;File an &lt;a href=&#34;https://github.com/dotnet/docs/issues&#34;&gt;issue&lt;/a&gt; or add a comment to an existing one that you are working on it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write the topic that explains the concepts demonstrated in your sample (example: &lt;code&gt;docs/standard/linq/where-clause.md&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write your sample (example: &lt;em&gt;WhereClause-Sample1.cs&lt;/em&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;em&gt;Program.cs&lt;/em&gt; with a Main entry point that calls your samples. If there is already one there, add the call to your sample:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Program&#xA;{&#xA;    public void Main(string[] args)&#xA;    {&#xA;        WhereClause1.QuerySyntaxExample();&#xA;&#xA;        // Add the method syntax as an example.&#xA;        WhereClause1.MethodSyntaxExample();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t check in the solution file if it contains only one project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To build and run your sample:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to the sample folder and build to check for errors:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run your sample:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a &lt;em&gt;README.md&lt;/em&gt; to the root directory of your sample.&lt;/p&gt; &lt;p&gt;This should include a brief description of the code, and refer people to the article that references the sample.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dotnetcore/FastGithub</title>
    <updated>2022-06-03T02:33:12Z</updated>
    <id>tag:github.com,2022-06-03:/dotnetcore/FastGithub</id>
    <link href="https://github.com/dotnetcore/FastGithub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;github加速神器，解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FastGithub&lt;/h1&gt; &#xA;&lt;p&gt;github加速神器，解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题。&lt;/p&gt; &#xA;&lt;h3&gt;0 写在前面&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不具备“翻墙”功能,也没有相关的计划&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不支持Windows7等已被发行方停止支持的操作系统，并且也不会主动提供支持&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub不能为您的游戏加速&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fastgithub没有主动在github之外的任何渠道发布&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1 程序下载&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnetcore/fastgithub/releases&#34;&gt;github-release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Q群1 &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=cx_MgEIvoo1EMkrKg5tXz8vMdtPap3Rw&amp;amp;jump_from=webapi&#34;&gt;307306673&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群2 &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=6BBJ1nrJwe1o1E4-NJfwSOP-C4sMGc4q&amp;amp;jump_from=webapi&#34;&gt;742376932&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群3 &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=1YpGW564&#34;&gt;597131950&lt;/a&gt; [已满]&lt;/li&gt; &#xA; &lt;li&gt;Q群4 &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=bThQHk5P&#34;&gt;492258685&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2 部署方式&lt;/h3&gt; &#xA;&lt;h4&gt;2.1 windows-x64桌面&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;双击运行FastGithub.UI.exe&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.2 windows-x64服务&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fastgithub.exe start&lt;/code&gt; // 以windows服务安装并启动&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fastgithub.exe stop&lt;/code&gt; // 以windows服务卸载并删除&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.3 linux-x64终端&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.4 linux-x64服务&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub start&lt;/code&gt; // 以systemd服务安装并启动&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./fastgithub stop&lt;/code&gt; // 以systemd服务卸载并删除&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.5 macOS-x64&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;双击运行fastgithub&lt;/li&gt; &#xA; &lt;li&gt;安装cacert/fastgithub.cer并设置信任&lt;/li&gt; &#xA; &lt;li&gt;设置系统自动代理为&lt;code&gt;http://127.0.0.1:38457&lt;/code&gt;，或手动代理http/https为&lt;code&gt;127.0.0.1:38457&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnetcore/FastGithub/raw/master/MacOSXConfig.md&#34;&gt;具体配置详情&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.6 docker-compose一键部署&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;准备好docker 18.09, docker-compose.&lt;/li&gt; &#xA; &lt;li&gt;在源码目录下，有一个docker-compose.yaml 文件，专用于在实际项目中，临时使用github.com源码，而做的demo配置。&lt;/li&gt; &#xA; &lt;li&gt;根据自己的需要更新docker-compose.yaml中的sample和build镜像即可完成拉github.com源码加速，并基于源码做后续的操作。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3 软件功能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供域名的纯净IP解析；&lt;/li&gt; &#xA; &lt;li&gt;提供IP测速并选择最快的IP；&lt;/li&gt; &#xA; &lt;li&gt;提供域名的tls连接自定义配置；&lt;/li&gt; &#xA; &lt;li&gt;google的CDN资源替换，解决大量国外网站无法加载js和css的问题；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4 证书验证&lt;/h3&gt; &#xA;&lt;h4&gt;4.1 git&lt;/h4&gt; &#xA;&lt;p&gt;git操作提示&lt;code&gt;SSL certificate problem&lt;/code&gt;&lt;br&gt; 需要关闭git的证书验证：&lt;code&gt;git config --global http.sslverify false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4.2 firefox&lt;/h4&gt; &#xA;&lt;p&gt;firefox提示&lt;code&gt;连接有潜在的安全问题&lt;/code&gt;&lt;br&gt; 设置-&amp;gt;隐私与安全-&amp;gt;证书-&amp;gt;查看证书-&amp;gt;证书颁发机构，导入cacert/fastgithub.cer，勾选“信任由此证书颁发机构来标识网站”&lt;/p&gt; &#xA;&lt;h3&gt;5 安全性说明&lt;/h3&gt; &#xA;&lt;p&gt;FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。&lt;/p&gt; &#xA;&lt;h3&gt;6 合法性说明&lt;/h3&gt; &#xA;&lt;p&gt;《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于VPN的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。&lt;/p&gt;</summary>
  </entry>
</feed>