<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T02:00:49Z</updated>
  <subtitle>Monthly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>egametang/ET</title>
    <updated>2024-04-01T02:00:49Z</updated>
    <id>tag:github.com,2024-04-01:/egametang/ET</id>
    <link href="https://github.com/egametang/ET" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unity3D Client And C# Server Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;English: please use your browser to translate to english&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;strong&gt;讨论QQ群 : 474643097&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;公司黑名单：&lt;/h1&gt; &#xA;&lt;h2&gt;成都三猩元宇宙公司，拖欠员工工资，拖欠本人咨询费用&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;商业项目（已出现多个一个人开发的MMO上线，足以证明ET的强大）：&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qiangu.com/&#34;&gt;千古风流&lt;/a&gt; 大型mmo，团队100人2年开发完成&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/248095&#34;&gt;神选誓约&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/271100&#34;&gt;危境&lt;/a&gt; 一个技术一个策划开发的mmo，抖音可以搜索危境看直播&lt;/li&gt; &#xA; &lt;li&gt;魔力回忆 许木大厨一个人开发的魔力宝贝&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/1704940/_/&#34;&gt;新生&lt;/a&gt; steam上，一个人开发的科幻mmo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wan.rxqu.com/mobile/downfile/index/gid/9.html&#34;&gt;怒斩屠龙之乾坤剑指&lt;/a&gt; 传奇项目&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.com/app/227804&#34;&gt;魔法点点2&lt;/a&gt; 一个人开发&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.com/app/71064&#34;&gt;养不大&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;天天躲猫猫2（ios2019春节下载排行19）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/ECPS_admin/PlanB&#34;&gt;牛虎棋牌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wufanjoin/fivestar&#34;&gt;五星麻将&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/247225&#34;&gt;代号肉鸽：无限&lt;/a&gt; 一个人开发&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kxdw.com/android/130033.html&#34;&gt;卡车人生&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/361952&#34;&gt;掌门太闲&lt;/a&gt; 一个人开发&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/235872&#34;&gt;万世镜&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.Inutan.CultureChest&#34;&gt;Culture &amp;amp; Chest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taptap.cn/app/228923&#34;&gt;史莱姆大乱斗&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;ET8.1 发布!&lt;/h1&gt; &#xA;&lt;p&gt;8.1跟8区别不大，代码结构完全没有变化，主要是编译方式的修改，可以在Unity中按F6进行编译，也可以在IDE中进行编译，运行中reload可以先按F6编译，再按F7进行热重载&lt;/p&gt; &#xA;&lt;h1&gt;ET8 发布! 貂蝉&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;多线程多进程架构,架构更加灵活强大，多线程设计详细内容请看多线程设计课程&lt;/li&gt; &#xA; &lt;li&gt;抽象出纤程(Fiber)的概念，类似erlang的进程，非常轻松的创建多个纤程，利用多核，仍然是单线程开发的体验&lt;/li&gt; &#xA; &lt;li&gt;纤程调度: 主线程，线程池，每个纤程一个线程，3种调度方式&lt;/li&gt; &#xA; &lt;li&gt;Fiber间通信的Actor消息机制&lt;/li&gt; &#xA; &lt;li&gt;Entity方面，domain改成IScene，只要实现IScene接口，Entity就是domain，这样定义domain更加自由&lt;/li&gt; &#xA; &lt;li&gt;预测回滚的帧同步实现 想详细了解可以看帧同步课程&lt;/li&gt; &#xA; &lt;li&gt;protobuf换成了memorypack，实现无gc的网络&lt;/li&gt; &#xA; &lt;li&gt;纯C#版的kcp库，性能非常强，由sj提交&lt;/li&gt; &#xA; &lt;li&gt;热更dll改成用ide编译，更加方便&lt;/li&gt; &#xA; &lt;li&gt;sj利用source generater实现了代码自动模板功能，目前可以自动生成System类，开发者只需要定义Awake Update静态方法即可，特别方便&lt;/li&gt; &#xA; &lt;li&gt;sj开发了分析器，实现了EntitySystemOf，根据entity接口一键生成对应的system方法&lt;/li&gt; &#xA; &lt;li&gt;客户端利用fiber实现网络独立线程（demo已实现），甚至可以把逻辑跟表现使用独立的纤程，更好的利用多核&lt;/li&gt; &#xA; &lt;li&gt;帧同步demo直接利用纤程创建房间，更加方便&lt;/li&gt; &#xA; &lt;li&gt;纯c#版寻路dotrecast，至此ET已经完全C#化，没有任何cpp代码了&lt;/li&gt; &#xA; &lt;li&gt;kcp跟软路由底层同时支持tcp跟websocket，当udp联不通的情况下，可以切换成tcp Websocket，并且支持运行时动态切换，玩家不掉线！&lt;/li&gt; &#xA; &lt;li&gt;集成了sj的非托管容器库，性能爆炸&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;用ET的18个理由&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;多进程多线程Actor架构，客户端跟服务端都可以轻松创建纤程(fiber)利用多核，比如客户端网络一个纤程，寻路一个纤程，帧同步逻辑层一个纤程，表现层一个纤程&lt;/li&gt; &#xA; &lt;li&gt;async await协程同步代码编写，避免回调地狱&lt;/li&gt; &#xA; &lt;li&gt;0GC消耗，超强的MemoryPack序列化, 超强的网络层性能&lt;/li&gt; &#xA; &lt;li&gt;kcp支持，网络响应非常迅速，并且闪断wifi 4g都不会导致掉线，做竞技游戏必备&lt;/li&gt; &#xA; &lt;li&gt;kcp底层可以使用tcp udp Websocket协议，当udp联不通的情况下，可以切换成tcp Websocket，并且支持运行时动态切换，玩家不掉线！&lt;/li&gt; &#xA; &lt;li&gt;软路由防攻击设计，买些垃圾主机就可以防住黑客攻击，比买高防省钱多了，并且用户不会掉线&lt;/li&gt; &#xA; &lt;li&gt;双端C#开发，前后端共享代码，C#本身性能极强，仅次于CPP，不需要学一些乱起八糟的语言，很多独立游戏开发者，一个人就能用ET开发mmorpg游戏&lt;/li&gt; &#xA; &lt;li&gt;强大的编译分析器，编译器就能帮助大家写出正确的ET风格的代码&lt;/li&gt; &#xA; &lt;li&gt;客户端hybridclr热更新支持&lt;/li&gt; &#xA; &lt;li&gt;客户端服务端均支持运行时热重载，客户端服务端不需要关闭进程就能修改代码，大大提升了开发效率以及运营效率&lt;/li&gt; &#xA; &lt;li&gt;完善的demo，源码带有状态同步跟预测回滚的帧同步demo&lt;/li&gt; &#xA; &lt;li&gt;完善的机器人开发机制，机器人直接共享客户端逻辑代码，减少95%机器人开发工作量，接入ai机器人非常轻松。大规模机器人压测，轻而易举&lt;/li&gt; &#xA; &lt;li&gt;强大的ai开发机制，比行为树更加容易&lt;/li&gt; &#xA; &lt;li&gt;强大的单元测试开发机制，每个单元测试都是整个游戏环境，不用搞mock隔离，开发起来非常轻松&lt;/li&gt; &#xA; &lt;li&gt;优美的程序结构，数据跟方法完全分离&lt;/li&gt; &#xA; &lt;li&gt;all in one的开发体验，开发时只需要启动unity，发布的时候又可以单独发布服务端，并且可以跨windows跟linux平台&lt;/li&gt; &#xA; &lt;li&gt;客户端服务端数据开发期完全可视化，开启ENABLE_VIEW宏即可在Unity Hierarchy面板中看到客户端跟服务端的所有的Entity对象以及字段的内容&lt;/li&gt; &#xA; &lt;li&gt;WebGL以及微信小游戏支持，有ET8的webgl版本，开发体验跟ET8完全一致，无缝对接ET8的服务器&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;熊猫的三门课程,需要请加QQ 80081771：&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1h84y1G7aH/?spm_id_from=333.999.0.0&amp;amp;vd_source=e55f8234b8f8039504cbf131082c93dd&#34;&gt;网络游戏架构设计&lt;/a&gt; 基于ET7.2，共27集，讲解ET7.2的框架设计细节&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1tX4y1C7pM/?share_source=copy_web&amp;amp;vd_source=001b901865c99550d1b2a8cd663695d4&#34;&gt;帧同步设计&lt;/a&gt; 基于ET8，共12集，讲解预测回滚帧同步设计&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Ah4y1f7QT/?spm_id_from=333.999.0.0&amp;amp;vd_source=e55f8234b8f8039504cbf131082c93dd&#34;&gt;多线程架构设计&lt;/a&gt; 基于ET8，共11集，讲解ET8的多线程设计&lt;/li&gt; &#xA; &lt;li&gt;WebGL小游戏框架，基于ET8，完善的网络，配置，热更等等，跟ET8使用一样&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://et-framework.cn&#34;&gt;ET论坛&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/egametang/ET/release8.1/Store&#34;&gt;ET商店&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://community.uwa4d.com/search?keyword=ET&amp;amp;scope=1&#34;&gt;ET视频教程&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/egametang/ET/release8.1/Book/1.1%E8%BF%90%E8%A1%8C%E6%8C%87%E5%8D%97.md&#34;&gt;运行指南&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://www.yuque.com/u28961999/yms0nt/&#34;&gt;分析器说明&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Benchmark&lt;/h1&gt; &#xA;&lt;p&gt;100W Ping Pong 平均耗时4秒左右，平均每秒收发20W的消息。这个网络性能远远超过主线程的需求，大家可以自己测试一下，测试方法： Unity Menu-&amp;gt;ServerTools select Benchmark, Start Watcher。然后在Logs目录，打开Debug日志等一会所有连接完成就能看到下面的日志了。&lt;br&gt; 2022-12-02 22:19:48.9837 (C2G_BenchmarkHandler.cs:13) benchmark count: 1000001&lt;br&gt; 2022-12-02 22:19:53.4621 (C2G_BenchmarkHandler.cs:13) benchmark count: 2000001&lt;br&gt; 2022-12-02 22:19:57.0416 (C2G_BenchmarkHandler.cs:13) benchmark count: 3000001&lt;br&gt; 2022-12-02 22:20:00.6186 (C2G_BenchmarkHandler.cs:13) benchmark count: 4000001&lt;br&gt; 2022-12-02 22:20:04.1384 (C2G_BenchmarkHandler.cs:13) benchmark count: 5000001&lt;br&gt; 2022-12-02 22:20:08.2236 (C2G_BenchmarkHandler.cs:13) benchmark count: 6000001&lt;br&gt; 2022-12-02 22:20:12.2842 (C2G_BenchmarkHandler.cs:13) benchmark count: 7000001&lt;br&gt; 2022-12-02 22:20:15.8544 (C2G_BenchmarkHandler.cs:13) benchmark count: 8000001&lt;br&gt; 2022-12-02 22:20:19.4085 (C2G_BenchmarkHandler.cs:13) benchmark count: 9000001&lt;br&gt; 2022-12-02 22:20:24.2969 (C2G_BenchmarkHandler.cs:13) benchmark count: 10000001&lt;br&gt; 2022-12-02 22:20:41.1448 (C2G_BenchmarkHandler.cs:13) benchmark count: 11000001&lt;br&gt; 2022-12-02 22:20:44.7174 (C2G_BenchmarkHandler.cs:13) benchmark count: 12000001&lt;br&gt; 2022-12-02 22:20:48.3188 (C2G_BenchmarkHandler.cs:13) benchmark count: 13000001&lt;br&gt; 2022-12-02 22:20:51.7793 (C2G_BenchmarkHandler.cs:13) benchmark count: 14000001&lt;br&gt; 2022-12-02 22:20:55.3379 (C2G_BenchmarkHandler.cs:13) benchmark count: 15000001&lt;br&gt; 2022-12-02 22:20:58.8810 (C2G_BenchmarkHandler.cs:13) benchmark count: 16000001&lt;br&gt; 2022-12-02 22:21:02.5156 (C2G_BenchmarkHandler.cs:13) benchmark count: 17000001&lt;br&gt; 2022-12-02 22:21:06.0132 (C2G_BenchmarkHandler.cs:13) benchmark count: 18000001&lt;br&gt; 2022-12-02 22:21:09.5320 (C2G_BenchmarkHandler.cs:13) benchmark count: 19000001&lt;/p&gt; &#xA;&lt;h1&gt;ET7 发布! 18岁亦菲&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;调整结构，机器人工程与服务器合并，更易使用，一个进程同时可以做server，也能创建机器人，真正的ALL IN ONE! -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;客户端跟服务端合并，服务端代码全部放在了客户端，客户端中可以带一个服务端，开发超级方便，服务端发布的时候可以选择发布成Dotnet也可以发布成UnityServer，终极All IN ONE -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;Entity可视化，客户端跟服务端所有的Entity都实现了可视化，开启ENABLE_CODES宏，运行游戏，查看Hierarchy面板，展开Init/Global/Scene(Process)即可看到 -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;因为所有代码都在Unity中，所以开发ET插件变得非常容易，直接使用Unity导入导出即可 -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;增加软路由，可以防各种网络攻击而不影响正常玩家，网游必备！-- 已实现&lt;/li&gt; &#xA; &lt;li&gt;各种事件跟网络消息订阅带上DomainSceneType，更精确，更不容易出错 -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;sj兄弟添加了各种分析器，分析器保证了写出的代码必须符合ET规范，否则编译不通过！（这点ET6也增加上了） -- 已实现&lt;/li&gt; &#xA; &lt;li&gt;ET7集成了huatuo热更新库。 注意！(不要混淆客户端热更新跟服务端热更新，服务端热更新，ET一直都有)&lt;/li&gt; &#xA; &lt;li&gt;网络改成独立线程，序列化反序列化都在网络线程处理，主线程压力大大减轻。并且重新整理了网络层代码，更优美了&lt;/li&gt; &#xA; &lt;li&gt;集成Unity.Mathematic数学库，逻辑层客户端跟服务端都使用这一套数学库，这样服务端跟客户端完全统一了&lt;/li&gt; &#xA; &lt;li&gt;ENABLE_CODES模式下拆分成4个程序集，解决分析器失效的问题&lt;/li&gt; &#xA; &lt;li&gt;Game管理的Singleton增加ISingletonUpdate跟ISingletonLateUpdate接口，实现相应的接口即可执行对应的Update跟LateUpdate方法，Game类解除了跟EventSystem等单间类的耦合关系&lt;/li&gt; &#xA; &lt;li&gt;Actor消息判断如果是发向自己的进程则不用通过网络，直接处理即可，大大提升性能&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;ET6 发布！ET6相比ET5有巨大变化，可以说是凤姐变亦菲，6.0拥有如下惊人的特点&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;客户端逻辑全热更新（基于ILRuntime），没有不能更的部分&lt;/li&gt; &#xA; &lt;li&gt;客户端服务端均可热重载，开发不用重启客户端服务端即可修改逻辑代码，开发极其方便&lt;/li&gt; &#xA; &lt;li&gt;机器人框架，ET6的客户端的逻辑跟表现分离，机器人程序直接共享利用客户端的逻辑层代码做压测，只需要极少代码即可做出机器人，方便压测服务端&lt;/li&gt; &#xA; &lt;li&gt;测试用例框架，利用客户端的逻辑层代码写单元测试，每个单元测试都是完整的游戏环境，无需各种恶心的mock&lt;/li&gt; &#xA; &lt;li&gt;AI框架，比行为树更加方便，写AI比写UI还简单&lt;/li&gt; &#xA; &lt;li&gt;新的服务端架构，极其优美&lt;/li&gt; &#xA; &lt;li&gt;内外网kcp网络，性能强劲，搭配软路由模块，可以防各种网络攻击&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;ET开发的商业mmo项目千古风流成功上线，64核128G内存的单服单物理机1.5W在线（实际线上策划为了生态限制为单服6000人同时在线，6000人的话cpu消耗约为30%）。为了堆栈行号正常，线上跑得是Debug版，如果使用Release版开启优化，性能还能翻一倍，达到单物理机3W在线！上线5个月来十分稳定。千古风流使用了ET框架从零开发，用时两年，这个开发速度可以说无人出其右。千古风流的成功上线证明了ET具备开发任何大型游戏的能力，开发速度，开发效率都令人叹为观止！千古风流使用到的客户端服务器技术：&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;动态副本跟分线，按需分配，用完回收&lt;/li&gt; &#xA; &lt;li&gt;分线合线，分线人数较少会把多条线合并。合线功能基本上其它mmo游戏很少见到&lt;/li&gt; &#xA; &lt;li&gt;客户端服务端场景无缝切换，也就是无缝大世界技术&lt;/li&gt; &#xA; &lt;li&gt;跨服副本，跨服战场&lt;/li&gt; &#xA; &lt;li&gt;前后端一体化，利用客户端代码开发服务器压测机器人，4台24核机器轻松模拟1W人做任务&lt;/li&gt; &#xA; &lt;li&gt;千古风流各种ai设计，使用ET的全新开发的ai框架，使ai开发简单到跟写ui一样简单&lt;/li&gt; &#xA; &lt;li&gt;测试用例框架，大部分重要系统，千古风流都写了测试用例，跟市面上的测试用例不同，每个千古风流的测试用例都是一个完整的游戏环境，针对协议级别，不需要搞各种接口去mock。写起来非常快速。&lt;/li&gt; &#xA; &lt;li&gt;九宫格的aoi实现，动态调整看见的玩家，降低服务器负载&lt;/li&gt; &#xA; &lt;li&gt;防攻击，千古风流开发了软路由功能，即使攻击也只能攻击到软路由，一旦被攻击，玩家客户端发现几秒钟无响应，即可动态切换到其它软路由，用户几乎无感知。整个过程客户端网络连接不断开，数据不丢失。&lt;/li&gt; &#xA; &lt;li&gt;还有很多很多，这里就不啰嗦了&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;ET的介绍：&lt;/h1&gt; &#xA;&lt;p&gt;ET是一个开源的游戏客户端（基于unity3d）服务端双端框架，服务端是使用C# .net core开发的分布式游戏服务端，其特点是开发效率高，性能强，双端共享逻辑代码，客户端服务端热更机制完善，同时支持可靠udp tcp websocket协议，支持服务端3D recast寻路等等&lt;/p&gt; &#xA;&lt;h1&gt;ET的功能：&lt;/h1&gt; &#xA;&lt;h3&gt;1.可用VS单步调试的分布式服务端，N变1&lt;/h3&gt; &#xA;&lt;p&gt;一般来说，分布式服务端要启动很多进程，一旦进程多了，单步调试就变得非常困难，导致服务端开发基本上靠打log来查找问题。平常开发游戏逻辑也得开启一大堆进程，不仅启动慢，而且查找问题及其不方便，要在一堆堆日志里面查问题，这感觉非常糟糕，这么多年也没人解决这个问题。ET框架使用了类似守望先锋的组件设计，所有服务端内容都拆成了一个个组件，启动时根据服务器类型挂载自己所需要的组件。这有点类似电脑，电脑都模块化的拆成了内存，CPU，主板等等零件，搭配不同的零件就能组装成一台不同的电脑，例如家用台式机需要内存，CPU，主板，显卡，显示器，硬盘。而公司用的服务器却不需要显示器和显卡，网吧的电脑可能不需要硬盘等。正因为这样的设计，ET框架可以将所有的服务器组件都挂在一个服务器进程上，那么这个服务器进程就有了所有服务器的功能，一个进程就可以作为整组分布式服务器使用。这也类似电脑，台式机有所有的电脑组件，那它也完全可以当作公司服务器使用，也可以当作网吧电脑。&lt;/p&gt; &#xA;&lt;h3&gt;2.随意可拆分功能的分布式服务端，1变N&lt;/h3&gt; &#xA;&lt;p&gt;分布式服务端要开发多种类型的服务器进程，比如Login server，gate server，battle server，chat server friend server等等一大堆各种server，传统开发方式需要预先知道当前的功能要放在哪个服务器上，当功能越来越多的时候，比如聊天功能之前在一个中心服务器上，之后需要拆出来单独做成一个服务器，这时会牵扯到大量迁移代码的工作，烦不胜烦。ET框架在平常开发的时候根本不太需要关心当前开发的这个功能会放在什么server上，只用一个进程进行开发，功能开发成组件的形式。发布的时候使用一份多进程的配置即可发布成多进程的形式，是不是很方便呢？随便你怎么拆分服务器。只需要修改极少的代码就可以进行拆分。不同的server挂上不同的组件就行了嘛！&lt;/p&gt; &#xA;&lt;h3&gt;3.跨平台的分布式服务端&lt;/h3&gt; &#xA;&lt;p&gt;ET框架使用C#做服务端，现在C#是完全可以跨平台的，在linux上安装.netcore，即可，不需要修改任何代码，就能跑起来。性能方面，现在.netcore的性能非常强，比lua，python，js什么快的多了。做游戏服务端完全不在话下。平常我们开发的时候用VS在windows上开发调试，发布的时候发布到linux上即可。ET框架还提供了一键同步工具，打开unity-&amp;gt;tools-&amp;gt;rsync同步，即可同步代码到linux上&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./Run.sh Config/StartConfig/192.168.12.188.txt &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;即可编译启动服务器。&lt;/p&gt; &#xA;&lt;h3&gt;4.提供协程支持&lt;/h3&gt; &#xA;&lt;p&gt;C#天生支持异步变同步语法 async和await，比lua，python的协程强大的多，新版python以及javascript语言甚至照搬了C#的协程语法。分布式服务端大量服务器之间的远程调用，没有异步语法的支持，开发将非常麻烦。所以java没有异步语法，做单服还行，不适合做大型分布式游戏服务端。例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;// 发送C2R_Ping并且等待响应消息R2C_Ping&#xA;R2C_Ping pong = await session.Call(new C2R_Ping()) as R2C_Ping;&#xA;Log.Debug(&#34;收到R2C_Ping&#34;);&#xA;&#xA;// 向mongodb查询一个id为1的Player，并且等待返回&#xA;Player player = await Game.Scene.GetComponent&amp;lt;DBProxyComponent&amp;gt;().Query&amp;lt;Player&amp;gt;(1);&#xA;Log.Debug($&#34;打印player name: {player.Name}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以看出，有了async await，所有的服务器间的异步操作将变得非常连贯，不用再拆成多段逻辑。大大简化了分布式服务器开发&lt;/p&gt; &#xA;&lt;h3&gt;5.提供类似erlang的actor消息机制&lt;/h3&gt; &#xA;&lt;p&gt;erlang语言一大优势就是位置透明的消息机制，用户完全不用关心对象在哪个进程，拿到id就可以对对象发送消息。ET框架也提供了actor消息机制，实体对象只需要挂上MailBoxComponent组件，这个实体对象就成了一个Actor，任何服务器只需要知道这个实体对象的id就可以向其发送消息，完全不用关心这个实体对象在哪个server，在哪台物理机器上。其实现原理也很简单，ET框架提供了一个位置服务器，所有挂载MailBoxComponent的实体对象都会将自己的id跟位置注册到这个位置服务器，其它服务器向这个实体对象发送消息的时候如果不知道这个实体对象的位置，会先去位置服务器查询，查询到位置再进行发送。&lt;/p&gt; &#xA;&lt;h3&gt;6.提供服务器不停服动态更新逻辑功能&lt;/h3&gt; &#xA;&lt;p&gt;热更是游戏服务器不可缺少的功能，ET框架使用的组件设计，可以做成守望先锋的设计，组件只有成员，无方法，将所有方法做成扩展方法放到热更dll中，运行时重新加载dll即可热更所有逻辑。&lt;/p&gt; &#xA;&lt;h3&gt;7.客户端使用C#热更新，热更新一键切换&lt;/h3&gt; &#xA;&lt;p&gt;可以使用csharp.lua或者ILRuntime稍加改造即可做客户端热更。再也不用使用狗屎lua了，客户端可以实现所有逻辑热更新，包括协议，config，ui等等。&lt;/p&gt; &#xA;&lt;h3&gt;8.客户端热重载&lt;/h3&gt; &#xA;&lt;p&gt;开发不用重启客户端即可修改客户端逻辑代码，开发极其方便&lt;/p&gt; &#xA;&lt;h3&gt;9.客户端服务端用同一种语言，并且共享代码&lt;/h3&gt; &#xA;&lt;p&gt;下载ET框架，打开服务端工程，可以看到服务端引用了客户端很多代码，通过引用客户端代码的方式实现了双端共享代码。例如客户端服务端之间的网络消息两边完全共用一个文件即可，添加一个消息只需要修改一遍。&lt;/p&gt; &#xA;&lt;h3&gt;10.KCP ENET TCP Websocket协议无缝切换&lt;/h3&gt; &#xA;&lt;p&gt;ET框架不但支持TCP，而且支持可靠的UDP协议（ENET跟KCP），ENet是英雄联盟所使用的网络库，其特点是快速，并且网络丢包的情况下性能也非常好，这个我们做过测试TCP在丢包5%的情况下，moba游戏就卡的不行了，但是使用ENet，丢包20%仍然不会感到卡。非常强大。框架还支持使用KCP协议，KCP也是可靠UDP协议，据说比ENET性能更好，使用kcp请注意，需要自己加心跳机制，否则20秒没收到包，服务端将断开连接。协议可以无缝切换。&lt;/p&gt; &#xA;&lt;h3&gt;11. 3D Recast寻路功能&lt;/h3&gt; &#xA;&lt;p&gt;可以Unity导出场景数据，给服务端做recast寻路。做MMO非常方便，demo演示了服务端3d寻路功能&lt;/p&gt; &#xA;&lt;h3&gt;12. 服务端支持repl，也可以动态执行一段新代码&lt;/h3&gt; &#xA;&lt;p&gt;这样就可以打印出进程中任何数据，大大简化了服务端查找问题的难度，开启repl方法，直接在console中输入repl回车即可进入repl模式&lt;/p&gt; &#xA;&lt;h3&gt;13.提供客户端机器人框架支持&lt;/h3&gt; &#xA;&lt;p&gt;几行代码即可创建机器人登录游戏。机器人压测轻而易举，机器人跟正常的玩家完全一样，上线前用机器人做好压测，大大降低上线崩溃几率&lt;/p&gt; &#xA;&lt;h3&gt;14.AI框架&lt;/h3&gt; &#xA;&lt;p&gt;ET的AI框架让AI编写比UI还简单&lt;/p&gt; &#xA;&lt;h3&gt;15.测试用例框架&lt;/h3&gt; &#xA;&lt;p&gt;跟市面上的测试用例不同，ET的测试用例都是一个完整的游戏环境，针对协议级别，不需要搞各种接口去mock。写起来非常快速&lt;/p&gt; &#xA;&lt;h3&gt;16.还有很多很多功能，我就不详细介绍了&lt;/h3&gt; &#xA;&lt;p&gt;a.及其方便检查CPU占用和内存泄漏检查，vs自带分析工具，不用再为性能和内存泄漏检查而烦恼&lt;br&gt; b.使用NLog库，打log及其方便，平常开发时，可以将所有服务器log打到一个文件中，再也不用一个个文件搜索log了&lt;br&gt; c.统一使用Mongodb的bson做序列化，消息和配置文件全部都是bson或者json，并且以后使用mongodb做数据库，再也不用做格式转换了。&lt;br&gt; d.提供一个同步工具&lt;/p&gt; &#xA;&lt;p&gt;ET框架是一个强大灵活的分布式服务端架构，完全可以满足绝大部分大型游戏需求。使用这套框架，客户端开发者就可以自己完成双端开发，节省大量人力物力，节省大量沟通时间。&lt;/p&gt; &#xA;&lt;p&gt;相关网站:&lt;br&gt; &lt;a href=&#34;https://et-framework.cn&#34;&gt;ET论坛&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;群友分享：&lt;br&gt; &lt;a href=&#34;https://github.com/DukeChiang/ET.git&#34;&gt;行为树与fgui分支(Duke Chiang开发维护)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lfzxb.top/&#34;&gt;ET学习笔记系列(烟雨迷离半世殇写)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://acgmart.com/&#34;&gt;图形渲染与ET学习笔记(咲夜詩写)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://www.cnblogs.com/fancybit/p/et1.html&#34;&gt;框架服务端运行流程&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://www.cnblogs.com/fancybit/p/et2.html&#34;&gt;ET启动配置&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://www.jianshu.com/p/f2ea0d26c7c1&#34;&gt;框架demo介绍&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://gad.qq.com/article/detail/35973&#34;&gt;linux部署&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;群友demo：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Viagi/LandlordsCore&#34;&gt;斗地主（客户端服务端）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/ECPS_admin/planc&#34;&gt;背包系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Acgmart/Sekia_TechDemo&#34;&gt;移动端渲染技术demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FlameskyDexive/Legends-Of-Heroes&#34;&gt;球球大作战(ET7.2)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;视频教程：&lt;br&gt; &lt;a href=&#34;https://edu.uwa4d.com/course-intro/1/375&#34;&gt;字母哥ET6.0教程&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://www.taikr.com/my/course/972&#34;&gt;肉饼老师主讲&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://edu.manew.com/course/796&#34;&gt;官剑铭主讲&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pan.baidu.com/s/1a5-j2R5QctZpC9n3sMC9QQ&#34;&gt;ET新手教程-初见主讲&lt;/a&gt; 密码: ru1j&lt;br&gt; &lt;a href=&#34;https://www.bilibili.com/video/av33280463/?redirectFrom=h5&#34;&gt;ET新手教程新版-初见主讲&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pan.baidu.com/s/1VUQbdd1Yio7ULFXwAv7X7A&#34;&gt;ET在Mac上运行指南-L主讲&lt;/a&gt; 密码: l3e3&lt;br&gt; &lt;a href=&#34;https://space.bilibili.com/33595745/favlist?fid=759596845&amp;amp;ftype=create&#34;&gt;ET框架系列教程-烟雨主讲-6.0版本&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.net core 游戏资源分享&lt;br&gt; &lt;a href=&#34;https://github.com/thangchung/awesome-dotnet-core&#34;&gt;各种dotnet core项目收集&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;讨论QQ群 : 474643097&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;支付宝捐赠&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/egametang/ET/raw/master/Book/donate.png&#34; alt=&#34;使用支付宝对该项目进行捐赠&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;友情链接&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Zonciu/Box2DSharp&#34;&gt;Box2DSharp&lt;/a&gt; box2d的C#移植版，性能很强&lt;br&gt; &lt;a href=&#34;https://github.com/xasset/xasset&#34;&gt;xasset&lt;/a&gt; 致力于为 Unity 项目提供了一套 精简稳健 的资源管理环境&lt;br&gt; &lt;a href=&#34;https://github.com/liangxiegame/QFramework&#34;&gt;QFramework&lt;/a&gt; Your first K.I.S.S Unity3d Framework&lt;br&gt; &lt;a href=&#34;https://github.com/zzjfengqing/ET-EUI&#34;&gt;ET UI框架&lt;/a&gt; 字母哥实现的UI框架，ET风格，各种事件分发&lt;br&gt; &lt;a href=&#34;https://github.com/focus-creative-games/luban&#34;&gt;Luban&lt;/a&gt; 适用于大中型项目的游戏配置解决方案&lt;br&gt; &lt;a href=&#34;https://github.com/LiShengYang-yiyi/YIUI/tree/YIUI-ET7.2&#34;&gt;ET-YIUI&lt;/a&gt; ETUI框架&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>NickeManarin/ScreenToGif</title>
    <updated>2024-04-01T02:00:49Z</updated>
    <id>tag:github.com,2024-04-01:/NickeManarin/ScreenToGif</id>
    <link href="https://github.com/NickeManarin/ScreenToGif" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎬 ScreenToGif allows you to record a selected area of your screen, edit and save it as a gif or video.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;screen recorder&#34; src=&#34;https://www.screentogif.com/logos/ms-icon-144x144.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/stargazers&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/NickeManarin/ScreenToGif.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/releases&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;All releases&#34; src=&#34;https://img.shields.io/github/downloads/NickeManarin/ScreenToGif/total.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://chocolatey.org/packages/screentogif&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;All Chocolatey releases&#34; src=&#34;https://img.shields.io/chocolatey/dt/screentogif.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;ScreenToGif 🎬 &lt;a href=&#34;http://www.screentogif.com/&#34; target=&#34;_blank&#34;&gt;screentogif.com&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;This tool allows you to record a selected area of your &lt;strong&gt;screen&lt;/strong&gt;, live feed from your &lt;strong&gt;webcam&lt;/strong&gt; or live drawings from a &lt;strong&gt;sketchboard&lt;/strong&gt;. Afterward, you can edit and save the animation as a gif, apng, video, psd or png image.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/releases&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;download&#34; src=&#34;https://www.screentogif.com/wiki/download-now.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.microsoft.com/en-us/p/screentogif/9n3sqk8pds8g&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;download Microsoft Store&#34; src=&#34;https://www.screentogif.com/wiki/download-store.png&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://chocolatey.org/packages/screentogif&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Download from Chocolatey&#34; src=&#34;https://www.screentogif.com/wiki/download-chocolatey.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;g-emoji ios-version=&#34;6.0&#34; fallback-src=&#34;https://assets-cdn.github.com/images/icons/emoji/unicode/26a0.png&#34; alias=&#34;warning&#34;&gt;&#xA;  ⚠️&#xA; &lt;/g-emoji&gt; Attention, it requires &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/6.0/runtime&#34;&gt;.NET 6 Desktop Runtime&lt;/a&gt; (or above). &#xA; &lt;g-emoji ios-version=&#34;6.0&#34; fallback-src=&#34;https://assets-cdn.github.com/images/icons/emoji/unicode/26a0.png&#34; alias=&#34;warning&#34;&gt;&#xA;  ⚠️&#xA; &lt;/g-emoji&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/releases/latest&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Latest GitHub release&#34; src=&#34;https://img.shields.io/github/release/nickemanarin/screentogif.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://chocolatey.org/packages/screentogif&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Latest Chocolatey release&#34; src=&#34;https://img.shields.io/chocolatey/v/screentogif.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/wiki/Help&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Documentation WIP&#34; src=&#34;https://img.shields.io/badge/Docs-WIP-red.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/issues&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/NickeManarin/ScreenToGif.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a style=&#34;text-decoration:none&#34; href=&#34;https://discord.gg/XgEqDHX&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/318260719680356352.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Would you like to help the project?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PayPal donation: &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=JCY2BGLULSWVJ&amp;amp;lc=US&amp;amp;item_name=ScreenToGif&amp;amp;item_number=screentogif&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-Paypal-fd8200.svg?sanitize=true&#34; alt=&#34;PayPal page&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Patreon subscription: &lt;a href=&#34;https://www.patreon.com/nicke&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/subscribe-Patreon-orange.svg?sanitize=true&#34; alt=&#34;Patreon subscription&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ko-fi donation: &lt;a href=&#34;https://ko-fi.com/B0B7Y5Z9&#34;&gt;&lt;img src=&#34;https://www.ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flattr subscription: &lt;a href=&#34;https://flattr.com/@NickeManarin/domain/screentogif.com&#34;&gt;https://flattr.com/@NickeManarin/domain/screentogif.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Steam wishlist: &lt;a href=&#34;http://steamcommunity.com/id/nickesm/wishlist&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-Steam-171a21.svg?sanitize=true&#34; alt=&#34;Steam wishlist&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GOG Galaxy wishlist: &lt;a href=&#34;https://www.gog.com/u/Nickesm/wishlist&#34;&gt;https://www.gog.com/u/Nickesm/wishlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Amazon wishlist: &lt;a href=&#34;https://www.amazon.com/hz/wishlist/ls/2S54SRWY2K8KF?ref_=wl_share&#34;&gt;https://www.amazon.com/hz/wishlist/ls/2S54SRWY2K8KF?ref_=wl_share&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Feedback (reporting bugs, ideas, etc) &lt;a href=&#34;https://twitter.com/NickeManarin&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-%40NickeManarin-blue.svg?sanitize=true&#34; alt=&#34;Author&#39;s Twitter&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif/raw/master/LOCALIZATION.md&#34;&gt;Anyone can still contribute to the localization of the app/website/installer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a review. :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Please, avoid selling this app as yours&lt;/h2&gt; I don&#39;t care if you copy the source code to use in your project, but please avoid simply changing the name and selling as your work. That&#39;s not why I&#39;m sharing the source code, at all. &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;start up&#34; src=&#34;https://www.screentogif.com/media/Recorder.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;start up&#34; src=&#34;https://www.screentogif.com/media/Startup.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;editor&#34; src=&#34;https://www.screentogif.com/media/Editor.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;option&#34; src=&#34;https://www.screentogif.com/media/Options.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;keystrokes&#34; src=&#34;https://www.screentogif.com/media/Keys.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Mentions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Website&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.chip.de/downloads/Screen-To-Gif_65993193.html&#34;&gt;Chip&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.softpedia.com/get/Multimedia/Graphic/Graphic-Others/Screen-to-Gif.shtml&#34;&gt;Softpedia&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.portablefreeware.com/index.php?id=2895&#34;&gt;PortableFreeware&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;The creator also distributes this app via these websites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chocolatey.org/packages/screentogif&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fosshub.com/ScreenToGif.html&#34;&gt;FOSSHUB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/p/screentogif/9n3sqk8pds8g&#34;&gt;Microsoft Store&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ResetXPDR/MSFS2020_AutoFPS</title>
    <updated>2024-04-01T02:00:49Z</updated>
    <id>tag:github.com,2024-04-01:/ResetXPDR/MSFS2020_AutoFPS</id>
    <link href="https://github.com/ResetXPDR/MSFS2020_AutoFPS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple utility for MSFS to automatically adjust key settings to improve performance and smoothness.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MSFS2020_AutoFPS&lt;/h1&gt; &#xA;&lt;p&gt;Based on muumimorko&#39;s idea and code in MSFS_AdaptiveLOD, as further developed by Fragtality in DynamicLOD and myself in DynamicLOD_ResetEdition.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This app aims to improve the MSFS user experience by automatically changing key MSFS settings that impact MSFS performance and smoothness the most. It has an easy to use UI and provides features such as:&lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic TLOD adjustment when in the air to achieve and maintain a target FPS,&lt;/li&gt; &#xA; &lt;li&gt;Improved target FPS tracking for all modes by having much smaller TLOD changes the closer you are to your target FPS, giving more consistent FPS for a better flight experience.&lt;/li&gt; &#xA; &lt;li&gt;A choice between VFR (GA) and IFR (Airliner) flight types, which changes the flight phases where the app prioritises FPS or TLOD (v0.4.2.9) or which defaults to settings suitable to each flight type and is fully customisable in Expert mode.&lt;/li&gt; &#xA; &lt;li&gt;Auto raising and lowering of the minimum TLOD option, depending on low altitude performance being either very favourable or poor respectively,&lt;/li&gt; &#xA; &lt;li&gt;Auto target FPS option, which is useful if you don&#39;t know what target FPS to choose or if your flight types are so varied that a single target FPS value is not always appropriate,&lt;/li&gt; &#xA; &lt;li&gt;Cloud quality decrease option for when FPS can&#39;t be achieved at the lowest desired TLOD,&lt;/li&gt; &#xA; &lt;li&gt;Automatic OLOD adjustment option based on an automatic or user-definable OLOD range and altitude band (AGL),&lt;/li&gt; &#xA; &lt;li&gt;Simultaneous PC, FG and VR mode compatibilty including correct FG FPS display and separate FPS targets for each mode,&lt;/li&gt; &#xA; &lt;li&gt;A greatly simplified non-expert default UI option that uses pre-defined settings for an automated experience suited to most user scenarios,&lt;/li&gt; &#xA; &lt;li&gt;Auto detection and protection from known similar apps already running or incompatibilities with newer MSFS versions, and&lt;/li&gt; &#xA; &lt;li&gt;Auto restoration of original MSFS settings changed by the app, recently enhanced to withstand MSFS CTDs.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Really, really important:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not even mention, let alone try to discuss, this app on the MSFS official forums, even in personal messages, as they have taken the view that this app modifies licenced data, regardless of how harmless the way in which the app does it, and is therefore a violation of their Terms of Service and Code of Conduct for that website. If you do so, your post/personal message will be flagged by moderators and you may get banned from the MSFS official forums. You have been warned!&lt;/li&gt; &#xA; &lt;li&gt;Notwithstanding, there is a new MSFS wishlist item requesting simconnect variables access to MSFS settings, which would allow me to make this app legitimate in MS/Abobo&#39;s eyes and expand the range of possibilities of what this app could do in future. Please vote for it &lt;a href=&#34;https://forums.flightsimulator.com/t/expose-tlod-olod-clouds-etc-via-simconnect-l-vars/634075&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Important:&lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This app directly accesses active MSFS memory locations while MSFS is running to read and set TLOD and cloud quality settings on the fly at a maximum rate of one read and, if required, change per setting per second. The app will first verify that the MSFS memory locations being used are still valid and if not, likely because of an MSFS version change, will attempt to find where they have been relocated. If it does find the new memory locations and they pass validation tests, the app will update itself automatically and will function as normal. If it can&#39;t find or validate MSFS memory locations at any time when starting up, the app will self-restrict to read only mode to prevent the app making changes to unknown MSFS memory locations.&lt;/li&gt; &#xA; &lt;li&gt;As such, I believe the app to be robust in its interaction with validated MSFS memory locations and to be responsible in disabling itself if it can&#39;t guarantee that. Nonetheless, this app is offered as is and no responsibility will be taken for unintended negative side effects. Use at your own risk!&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;I am new to this app/MSFS, or I don&#39;t care for all this technical jargon. What is the simplest way to use this app to make my MSFS experience better?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start the app before you load your flight,&lt;/li&gt; &#xA; &lt;li&gt;Leave Use Expert Settings unchecked,&lt;/li&gt; &#xA; &lt;li&gt;Pick what type of flight you are doing via the radio buttons ie. either VFR (GA aircraft) or IFR (airliners),&lt;/li&gt; &#xA; &lt;li&gt;Enter a realistic target FPS (or click on auto target FPS for the app to pick it for you),&lt;/li&gt; &#xA; &lt;li&gt;Click back on MSFS and wait until any FPS settle timer has finished (20 seconds max), then&lt;/li&gt; &#xA; &lt;li&gt;Go fly!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I am getting major stuttering, freezes or CTDs in MSFS using this app. What can I do to stop them?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By far the most common reason is users have enabled expert settings and have modified the default settings to be way beyond what their system is capable of, even without running the app.&lt;/li&gt; &#xA; &lt;li&gt;As such, the first step to resolve is to restore the app&#39;s default settings, which you can do by using the installer to uninstall (remove option) and reinstall, which will recreate your config file.&lt;/li&gt; &#xA; &lt;li&gt;Rerun the app and try non-expert mode with IFR flight type and Auto Target FPS checked.&lt;/li&gt; &#xA; &lt;li&gt;If this doesn&#39;t resolve it, try enabling expert options and reducing the FPS Sensitivity setting to 2, to allow smaller TLOD changes.&lt;/li&gt; &#xA; &lt;li&gt;(v0.4.2.9) If still not resolved, try the FPS Tolerance mode, which was the automation method in the original release version that had larger TLOD changes but they occurred less often, with a setting of 5.&lt;/li&gt; &#xA; &lt;li&gt;Finally, if still not resolved, raise an issue here on github and I will do my best to help you, provided you have completed all of the aforementioned steps first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;My default MSFS TLOD, OLOD and/or cloud settings are messed up and each time I try to change them back they get messed up again. How do I fix this?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You are likely trying to change these default MSFS settings while the app is still running and you are in an active flight, where the app will override any such changes you try to make.&lt;/li&gt; &#xA; &lt;li&gt;Either exit the app completely from the System Tray or be in the MSFS main menu (ie. NOT in a flight), then you can go to the MSFS settings screen and change your default MSFS settings to what you want and the app will restore these upon exiting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Which app should I use? DynamicLOD_ResetEdition or MSFS2020_AutoFPS?:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Essentially both apps are intended to give you better overall performance but with different priorities to achieve it that result in a slightly different experience. They both allow a lower TLOD down low and on the ground, when your viewing distance reduced anyway so the visual impact is minimal, and a higher TLOD when at higher altitude and not in close proximity to complex scenery or traffic. They also adjust OLOD and Cloud Quality but TLOD is usually the most important determiner of performance at these two extremes.&lt;/li&gt; &#xA; &lt;li&gt;Where they differ is that DynamicLOD provides user set tables for LOD changes at specific altitudes, giving the user precise control over when and where these changes take place such that they can optimise them to their particular flight activity they normally do, and can set a specific profile for each one. The price of such precise control is that the user must be intimately familiar with LODs to be able to tune a variety of settings in the app for the best outcome and this can be a bit daunting for more casual and non-technical users.&lt;/li&gt; &#xA; &lt;li&gt;Alternatively, AutoFPS seeks to automate these changes as much as possible based on a target FPS and a minimum and maximum LOD range within which to automatically adjust. This results in a much simpler and generally similarly acceptable user experience compared to DynamicLOD. Nonetheless, the automation algorithm does require FPS headroom to function correctly, so can conflict in cases where an FPS cap is being used, such as with Vsync or motion reprojection in VR. Additionally, AutoFPS tends to make constant small changes to TLOD, much more than DynamicLOD does, and this can induce stuttering on older hardware as it struggles to manage even small scenery changes. In these cases, the user would be better off using DynamicLOD in a more manually tuned approach.&lt;/li&gt; &#xA; &lt;li&gt;Both apps can be installed concurrently, but only one can be running at a time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;How does this app work for Frame Generation (FG) users?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The app does detect correct FG FPS when FG is enabled in MSFS, however FG is only active when MSFS is the focused window and becomes inactive when not, through your graphics driver not this app.&lt;/li&gt; &#xA; &lt;li&gt;To see correct FG FPS, use the app&#39;s &#34;On Top&#34; option to overlay this app over MSFS and give MSFS the focus.&lt;/li&gt; &#xA; &lt;li&gt;If FG is being incorrectly reported as enabled by the app, the likely reason is that either the FG mod had been installed and removed or you have disabled Hardware Accelerated Graphics Scheduling under Windows settings and the now the now greyed out MSFS FG setting may show that it is off but it is still set to on internally to MSFS. To fix, change the DLSSG line in your UserCfg.opt file to be DLSSG 0.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Why am I getting a dangerous/Unsafe program warning when trying to download or install?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This app is unsigned because I am a hobbyist and the cost of obtaining certification is prohibitive to me, so you may get a warning message of a potentially dangerous app when you download it in a web browser like Chrome or from your antivirus program, including Windows Defender.&lt;/li&gt; &#xA; &lt;li&gt;You can either trust this download, based on feedback you can easily find on Avsim and Youtube, make an exception in your browser and/or antivirus program for the download then run a virus scan and malware scan before you install just be sure, or just not install and use this app.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The Installer will install the following Software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET 7 Desktop Runtime (x64)&lt;/li&gt; &#xA; &lt;li&gt;MobiFlight Event/WASM Module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ResetXPDR/MSFS2020_AutoFPS/releases/latest&#34;&gt;Download here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Under Assests, the MSFS2020_AutoFPS-Installer-vXYZ.exe File)&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation / Update / Uninstall&lt;/h2&gt; &#xA;&lt;p&gt;Basically: Just run the Installer to either install, update or uninstall.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSFS2020_AutoFPS has to be stopped before installing.&lt;/li&gt; &#xA; &lt;li&gt;If the MobiFlight Module is not installed or outdated, MSFS also has to be stopped.&lt;/li&gt; &#xA; &lt;li&gt;If you have duplicate MobiFlight Modules installed, in either your official or community folders, the app may display 0 value Sim Values and otherwise not function. Remove the duplicate versions, rerun the app installer and it should now work.&lt;/li&gt; &#xA; &lt;li&gt;Do not run the Installer as Admin!&lt;/li&gt; &#xA; &lt;li&gt;If the installer will not run at all, Windows SmartScreen is potentially blocking it because the app is so new. The solution to try is: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Right-click on the Installer and select properties&lt;/li&gt; &#xA;   &lt;li&gt;Check the option &#34;Unblock&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Click on Apply and Ok to save the change&lt;/li&gt; &#xA;   &lt;li&gt;Then try to install it again&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you wish to retain your settings for an update version, do NOT uninstall first, as that deletes all app files, including the config file. Just run the installer, select update and your settings will be retained.&lt;/li&gt; &#xA; &lt;li&gt;For Auto-Start either your FSUIPC7.ini or EXE.xml (MSFS) is modified. The Installer does not create a Backup.&lt;/li&gt; &#xA; &lt;li&gt;The app may be blocked by Windows Security or your AV-Scanner, if so try to unblock or set an exception (for the whole Folder)&lt;/li&gt; &#xA; &lt;li&gt;The Installation-Location is fixed to %appdata%\MSFS2020_AutoFPS (your Users AppData\Roaming Folder) and can&#39;t be changed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Binary in %appdata%\MSFS2020_AutoFPS\bin&lt;/li&gt; &#xA;   &lt;li&gt;Logs in %appdata%\MSFS2020_AutoFPS\log&lt;/li&gt; &#xA;   &lt;li&gt;Config: %appdata%\MSFS2020_AutoFPS\MSFS2020_AutoFPS.config&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If after installing and running the app your simconnect always stays red, try downloading and installing a Microsoft official version of “Microsoft Visual C++ 2015 - 2022 Redistributable”, which may be missing from your Windows installation.&lt;/li&gt; &#xA; &lt;li&gt;If you get an &#34;MSFS compatibility test failed - app disabled.&#34; message there are three possible causes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;There is an issue with permissions and you may need to run the app as Administrator. This is by far the most likely cause and resolution.&lt;/li&gt; &#xA;   &lt;li&gt;You may have changed MSFS settings in your usercfg.opt file beyond what is possible to set in the MSFS settings menu. To rectify, go into MSFS settings at the main menu and reset to default (F12) the graphics settings for both PC and VR mode, then make all changes to MSFS within the MSFS settings menu.&lt;/li&gt; &#xA;   &lt;li&gt;A new version of MSFS has come out that has a different memory map to what the app expects, which has happened only once since MSFS 2020 was released, and the app can&#39;t auto adjust to the new memory location for MSFS settings. If so, I will likely be already aware of it and working on a solution, but if you may be one of the first to encounter it (eg. on an MSFS beta) then please do let me know.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you get a message when starting the app that you need to install .NET desktop runtime, manually download it from &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you get an exception &#39;System.IO.DirectoryNotFoundException&#39; during AutoStartExe (v0.4.2.9) or an error message saying &#34;Required EXE.xml file not found for AutoStartExe&#34; when trying to install with the autostart option for MSFS, it usually means that your MSFS installation is missing the required EXE.xml file in which to place the autostart entry. To resolve, you need to go to your MSFS root user directory (MS Store Version: &#34;C:\Users\YOUR_USERNAME\AppData\Local\Packages\Microsoft. FlightSimulator_8wekyb3d8bbwe\LocalCache\ or Steam Version: &#34;C:\Users\YOUR_USERNAME\AppData\Roaming\Microsoft Flight Simulator&#34;) and manually create an EXE.xml file and save it there. You can use the following EXE.xml template, inserting your Windows username where shown:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;Windows-1252&#34;?&amp;gt;&#xA;&amp;lt;SimBase.Document Type=&#34;Launch&#34; version=&#34;1,0&#34;&amp;gt;&#xA;  &amp;lt;Descr&amp;gt;Launch&amp;lt;/Descr&amp;gt;&#xA;  &amp;lt;Filename&amp;gt;EXE.xml&amp;lt;/Filename&amp;gt;&#xA;  &amp;lt;Disabled&amp;gt;False&amp;lt;/Disabled&amp;gt;&#xA;  &amp;lt;Launch.ManualLoad&amp;gt;False&amp;lt;/Launch.ManualLoad&amp;gt;&#xA;  &amp;lt;Launch.Addon&amp;gt;&#xA;    &amp;lt;Disabled&amp;gt;False&amp;lt;/Disabled&amp;gt;&#xA;    &amp;lt;ManualLoad&amp;gt;False&amp;lt;/ManualLoad&amp;gt;&#xA;    &amp;lt;Name&amp;gt;MSFS2020_AutoFPS&amp;lt;/Name&amp;gt;&#xA;    &amp;lt;Path&amp;gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Roaming\MSFS2020_AutoFPS\bin\MSFS2020_AutoFPS.exe&amp;lt;/Path&amp;gt;&#xA;  &amp;lt;/Launch.Addon&amp;gt;&#xA;&amp;lt;/SimBase.Document&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To uninstall, ensure you have completely exited the app (ie. it is not hiding still running in your SysTray), run the installer and select remove on the first window. This will remove all traces of the app, including the desktop icon, MSFS or FSUIPC autostart entries if you used them, and the entire app folder, including your configuration file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage / Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;General &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Starting manually: anytime, but preferably before MSFS or in the Main Menu. The app will stop itself when MSFS closes.&lt;/li&gt; &#xA;   &lt;li&gt;Closing the Window does not close the app, use the Context Menu of the SysTray Icon.&lt;/li&gt; &#xA;   &lt;li&gt;Clicking on the SysTray Icon opens the Window (again).&lt;/li&gt; &#xA;   &lt;li&gt;If you wish to have the app window always open to the SysTray, close the app and manually change the openWindow key state in the config file to false.&lt;/li&gt; &#xA;   &lt;li&gt;(v0.4.2.9) The app&#39;s window position will be remembered between sessions, except movements to it made while in VR due to window restoration issues. If there are issues with the window not displaying correctly on startup, as can happen when auto-starting the app through MSFS of FSUIPC, either don&#39;t use auto-start or manually disable this feature in the config file by setting the RememberWindowPos line to be false.&lt;/li&gt; &#xA;   &lt;li&gt;Runnning as Admin NOT usually required (BUT: It is required to be run under the same User/Elevation as MSFS).&lt;/li&gt; &#xA;   &lt;li&gt;Do not change TLOD, OLOD and Cloud Quality MSFS settings manually while in a flight with this app running as it will conflict with what the app is managing and they will not restore to what you set when you exit your flight. If you wish to change the defaults for these MSFS settings, you must do so either without this app running or, if it is, only while you are in the MSFS main menu (ie not in a flight).&lt;/li&gt; &#xA;   &lt;li&gt;If you wish to activate additional logging of settings changes and sim values, as currently happens automatically in test versions, you need to manually edit your config file and add a LogSimValues key, if it doesn&#39;t already exist, and set its value to true ie. &lt;code&gt;&amp;lt;add key=&#34;LogSimValues&#34; value=&#34;true&#34; /&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Connection Status &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Red values indicate not connected, green is connected.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sim Values &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Will not show valid values unless all three connections are green. n/a means not available right now.&lt;/li&gt; &#xA;   &lt;li&gt;Green means the sim value is at or better than target value being sought, red means at lowest level or worse than target value being sought, orange means TLOD or OLOD is auto adjusting, black is shown otherwise.&lt;/li&gt; &#xA;   &lt;li&gt;FPS shows the FPS for the current graphics mode averaged over 5 seconds which will smooth out any transient FPS spikes experienced when panning or loading new scenery or objects so that automated MSFS setting changes are minimised.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;General &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Status Message - Displays key system messages, such as: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Before loading a flight - whether a newer version of the app is available to download and install,&lt;/li&gt; &#xA;     &lt;li&gt;Loading in to a flight - whether MSFS memory integrity test have failed, and&lt;/li&gt; &#xA;     &lt;li&gt;Flight is loaded &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Shows detected DX version, Graphics Mode (PC, FG, or VR), app pause, FPS settling time, and/or app priority mode as applicable.&lt;/li&gt; &#xA;       &lt;li&gt;The FPS settling timer runs for up to 20 seconds to allow FPS to settle between pausing/unpausing, auto target FPS calibration, TLOD Min + transitions and VR/PC/FG mode transitions. This allows the FPS to stabilise before engaging automatic functions and should lead to much smaller TLOD changes when seeking the target FPS on such transitions.&lt;/li&gt; &#xA;       &lt;li&gt;App priority shows whether FPS or TLOD are the current automation priority. A + next to TLOD indicates that TLOD Min + has been activated and that a higher TLOD Min should be expected.&lt;/li&gt; &#xA;       &lt;li&gt;Bonus GPU load display if the optional GPU-Z companion app, downloadable separately &lt;a href=&#34;https://www.techpowerup.com/download/techpowerup-gpu-z/&#34;&gt;here&lt;/a&gt;, is installed and detected running when starting any flight session.&lt;/li&gt; &#xA;       &lt;li&gt;(v0.4.2.9) Auto pause will activate if in flight and either MSFS is in active pause or the MSFS settings menu is being accessed.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Target FPS - The most important setting in this app. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Set it to what FPS you want the app to target while running, noting that this value should be at the mid to lower end of what your system is capable of otherwise the app will be unlikely to achieve it.&lt;/li&gt; &#xA;     &lt;li&gt;There is a setting for each graphics mode (PC, FG and VR) (v0.4.2.9) and each flight mode (VFR and IFR), which you can only change while in those mode pairs. This is particularly useful if regularly switching between FG mode and VR mode in your flights as the FG FPS target can be significantly higher than the one for VR.&lt;/li&gt; &#xA;     &lt;li&gt;If using FG, the target FPS you set is your desired FG Active FPS, not the FG Inactive FPS you see when this app has the focus instead of MSFS.&lt;/li&gt; &#xA;     &lt;li&gt;If you use an FPS cap, or Vsync for the same purpose, you will need to set your target FPS to be a few FPS lower than that cap. This allows the automated TLOD increase logic to function properly because it needs FPS to get above the target FPS to activate an increase in TLOD. If doing so causes unacceptable tearing of the image on your monitor, or breaks motion reprojection if you use it with VR, then this app likely isn&#39;t suitable for you.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Auto Target FPS &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;When checked, a target FPS will automatically be calculated, following any initial FPS settling, when stationary on the ground or any time you are in the air.&lt;/li&gt; &#xA;     &lt;li&gt;Automatically recalulated if performance conditions are too low for the calculated target FPS, on the ground after arriving at a new destination, if you change graphics mode or if you uncheck then check the option again for a quick recalibration.&lt;/li&gt; &#xA;     &lt;li&gt;With IFR it will range from 95% of your current average FPS on the ground to 85% at or above 3000 ft, the latter being lower to give head room for Max TLOD.&lt;/li&gt; &#xA;     &lt;li&gt;With VFR it will be 5% less than each of the IFR percentages respectively to better suit the greater performance expectation with VFR flights.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;On Top &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows the app to overlay your MSFS session if desired, with MSFS having the focus.&lt;/li&gt; &#xA;     &lt;li&gt;Mainly useful for adjusting settings and seeing the outcome over the top of your flight as it progresses.&lt;/li&gt; &#xA;     &lt;li&gt;Should also satisfy single monitor users utilising the FG capability of MSFS as they now see the true FG FPS the app is reading when MSFS has the focus.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Flight type - VFR or IFR &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;(v0.4.2.9) In non-expert mode, VFR will use higher minimum and maximum TLODs and a lower TLOD base altitude than IFR to account for the greater performance expectation that GA flights in rural areas will have.&lt;/li&gt; &#xA;     &lt;li&gt;(v0.4.2.9) Expert mode will default to similar settings differences, however the settings for each flight type are fully customisable and will save to and restore from separate profiles for VFR and IFR.&lt;/li&gt; &#xA;     &lt;li&gt;(v0.4.2.9) On the ground, TLOD will be locked to either a pre-determined (non-expert) or user-selectable (expert) TLOD Min.&lt;/li&gt; &#xA;     &lt;li&gt;(v0.4.2.9) Once in the air and above either a pre-determined (non-expert) or user-selectable (expert) TLOD base altitude, TLOD will be allowed to change to the lower of either the schedule based on your TLODs, FPS sensitivity/tolerance and average descent rate settings or what your current performance dictates.&lt;/li&gt; &#xA;     &lt;li&gt;(v0.4.2.9) Once above a calculated altitude band above the the TLOD base altitude, the app priority will change from TLOD to FPS.&lt;/li&gt; &#xA;     &lt;li&gt;(v0.4.2.9) App behaviour is reversed on descent. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;VFR &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;TLOD will be locked any time you are below 100 ft or are on the ground, except if TLOD Min + is enabled and gets activated where it will be higher.&lt;/li&gt; &#xA;         &lt;li&gt;Once in the air above 100 ft, your TLOD will dynamically change to achieve your target FPS.&lt;/li&gt; &#xA;         &lt;li&gt;Once below 100 ft, your TLOD will lock to whatever it last was and will stay that way until you take off and climb above 100 ft.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;IFR &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;TLOD will be locked to either a pre-determined (non-expert) or user-selectable (expert) TLOD Min.&lt;/li&gt; &#xA;         &lt;li&gt;Once in the air and above either a pre-determined (non-expert) or user-selectable (expert) TLOD base altitude, TLOD will be allowed to change to the lower of either the schedule based on your TLODs, FPS sensitivity and average descent rate settings or what your current performance dictates.&lt;/li&gt; &#xA;         &lt;li&gt;On descent your TLOD will progressively work its way down to TLOD Min by the TLOD base altitude. As with VFR mode, TLOD will not change on the ground unless TLOD Min + enabled and activated.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Use Expert Options - When disabled allows the app to use default settings in conjuction with your chosen target FPS that should produce good automated FPS tracking, provided you have set a realistic FPS target within your system&#39;s performance capability. When enabled, the UI expands to show additional MSFS settings to adjust. If you do not understand these settings and their impact on MSFS performance and graphics quality, it is strongly recommended that you do not use these expert options and you should uncheck this option. When Use Expert Setting is unchecked, the following internal settings are used by the app: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Auto Target FPS - user selectable&lt;/li&gt; &#xA;     &lt;li&gt;FPS Sensitivity - 5%&lt;/li&gt; &#xA;     &lt;li&gt;VFR or IFR flight type - user selectable&lt;/li&gt; &#xA;     &lt;li&gt;Alt TLOD Base - VFR 100 ft, IFR 1000 ft&lt;/li&gt; &#xA;     &lt;li&gt;Avg Descent Rate - VFR 1000 fpm, IFR 2000 fpm&lt;/li&gt; &#xA;     &lt;li&gt;TLOD Minimum - VFR 100% of your current MSFS TLOD setting, IFR 50%&lt;/li&gt; &#xA;     &lt;li&gt;TLOD Maximum - VFR 300% of your current MSFS TLOD setting, IFR 200%&lt;/li&gt; &#xA;     &lt;li&gt;TLOD Min + - enabled&lt;/li&gt; &#xA;     &lt;li&gt;Decrease Cloud Quality - enabled&lt;/li&gt; &#xA;     &lt;li&gt;Cloud Recovery TLOD &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;2/5 between TLOD Minimum and TLOD Maximum or + 50 over TLOD Min, whichever is lower.&lt;/li&gt; &#xA;       &lt;li&gt;If excessive changing of cloud quality levels are detected, the app will automatically increase its calculated cloud recovery TLOD.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Auto OLOD - enabled and VFR 150% of your current MSFS OLOD setting, IFR 100%&lt;/li&gt; &#xA;     &lt;li&gt;Pause when MSFS loses focus - disabled, (v0.4.2.9) unless using FG then enabled&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Expert Settings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FPS Automation Method - FPS Sensitivity generally gives better results and hence is the default. Use FPS Tolerance if you experience stuttering issues. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;FPS Sensitivity (v0.4.2 and later) - smaller changes more often. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Determines how sensitive the app will be to the variance between your current and target FPS.&lt;/li&gt; &#xA;       &lt;li&gt;Also determines the largest TLOD step size you will see, being double the FPS sensitivity number.&lt;/li&gt; &#xA;       &lt;li&gt;The lower the setting the smaller the changes will be, which is useful if you are experiencing stuttering with the default value of 5. Vice versa for higher settings.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;FPS Tolerance (all versions except 0.4.2) - larger changes less often. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Determines how much variance from your target FPS must occur before the app will adjust MSFS settings to achieve the target FPS and what nominal magnitude those changes will be.&lt;/li&gt; &#xA;       &lt;li&gt;The lower the setting, the more reactive the app will be, the more MSFS settings changes will occur and the changes will be smaller.&lt;/li&gt; &#xA;       &lt;li&gt;TLOD changes are allowable on the ground in this mode with the VFR flight type, so be aware of potential ground texture tearing/flashing issues because of it.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Pause when MSFS loses focus &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Will stop LODs and, if applicable, cloud quality from changing while you are focused on another app and not MSFS.&lt;/li&gt; &#xA;     &lt;li&gt;Particularly useful for when using FG as the FG active and inactive frame rate can vary quite considerably and because FG is not always an exact doubling of non-FG FPS.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;TLOD Min with optional + &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Sets the minimum TLOD the automation algorithm will use.&lt;/li&gt; &#xA;     &lt;li&gt;When + is checked and your system is achieving 15% or greater FPS than your target FPS, then your TLOD Min will increase by 50 - giving you additional graphics quality.&lt;/li&gt; &#xA;     &lt;li&gt;TLOD Min + will only activate on the ground or when descending and transitioning from FPS to TLOD priority mode. Once activated on the ground, it will remain set so as not to tempt ground texture corruption occurring. On descent, if minimum performance can not be maintained for TLOD Min +, it will self-cancel before landing without any sudden TLOD changes.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;TLOD Max - Sets the maximum TLOD the automation algorithm will use.&lt;/li&gt; &#xA;   &lt;li&gt;Alt TLOD Base - Altitude (AGL) at or below which TLOD will be at TLOD Min.&lt;/li&gt; &#xA;   &lt;li&gt;Avg Descent Rate- Used in combination with FPS sensitivity to determine the altitude band in which TLOD will be interpolated between TLOD Min at the Alt TLOD base starting point and the lower of TLOD Max and the maximum TLOD your system can achieve while achieving at least your desired FPS target at a calculated top altitude. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;This band ensures that, if you descend at your set Avg Descent Rate or less, that the app can decrement TLOD from TLOD Max to TLOD Min by the Alt TLOD Base without exceeding the LOD Step rate associated with the FPS sensitivity level you have set.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Decrease Cloud Quality - When enabled, will reduce cloud quality by one level if TLOD has already auto reduced to TLOD Min and FPS is still below target FPS by more than the FPS tolerance.&lt;/li&gt; &#xA;   &lt;li&gt;Cloud Recovery TLOD with optional + &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The TLOD level required to cancel an active cloud quality reduction state and restore cloud quality back to its initial higher quality level.&lt;/li&gt; &#xA;     &lt;li&gt;Provides a TLOD buffer to account for the increased TLOD achieved by reducing cloud quality and will minimise the chance that cloud quality will constantly change down and up.&lt;/li&gt; &#xA;     &lt;li&gt;Ideally set to 50 TLOD or more above TLOD Min provided that the aforementioned conditions can be met.&lt;/li&gt; &#xA;     &lt;li&gt;When + is checked, Cloud Recovery TLOD becomes relative to TLOD Min instead of absolute.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Auto OLOD &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;When enabled, four user definable parameters relating to this feature will be revealed on the UI.&lt;/li&gt; &#xA;     &lt;li&gt;Rather than the automation being FPS based, which would cause contention with TLOD changes at the same time, OLOD will adjust based on an altitude band with a base and top level and with OLOD values defined for each of these altitudes.&lt;/li&gt; &#xA;     &lt;li&gt;The app will set OLOD @ Base at or below the Alt OLOD Base (AGL), set the OLOD @ Top at or above Alt OLOD Top (AGL) and interpolate in between. Note that OLOD @ Base can be higher, lower or the same value as the OLOD @ Top, depending on whether you want OLOD to decrease, increase or stay the same respectively as you ascend. &lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>