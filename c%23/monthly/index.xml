<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-01T02:34:50Z</updated>
  <subtitle>Monthly Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jasontaylordev/CleanArchitecture</title>
    <updated>2022-07-01T02:34:50Z</updated>
    <id>tag:github.com,2022-07-01:/jasontaylordev/CleanArchitecture</id>
    <link href="https://github.com/jasontaylordev/CleanArchitecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clean Architecture Solution Template for .NET 6&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;left&#34; width=&#34;116&#34; height=&#34;116&#34; src=&#34;https://raw.githubusercontent.com/jasontaylordev/CleanArchitecture/main/.github/icon.png&#34;&gt; &#xA;&lt;h1&gt;Clean Architecture Solution Template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/dotnet-deploy.yml&#34;&gt;&lt;img src=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/dotnet-deploy.yml/badge.svg?sanitize=true&#34; alt=&#34;.NET&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Clean.Architecture.Solution.Template?label=NuGet&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Clean.Architecture.Solution.Template?label=Downloads&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/p9YtBjfgGe&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/893301913662148658?label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/jasontaylordev?label=Follow&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;This is a solution template for creating a Single Page App (SPA) with Angular and ASP.NET Core following the principles of Clean Architecture. Create a new project based on this template by clicking the above &lt;strong&gt;Use this template&lt;/strong&gt; button or by installing and running the associated NuGet package (see Getting Started for full details).&lt;/p&gt; &#xA;&lt;h2&gt;Learn about Clean Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dK4Yb6-LxAk&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/dK4Yb6-LxAk/0.jpg&#34; alt=&#34;Clean Architecture with ASP.NET Core 3.0 • Jason Taylor • GOTO 2019&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-6.0&#34;&gt;ASP.NET Core 6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/ef/core/&#34;&gt;Entity Framework Core 6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/&#34;&gt;Angular 13&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbogard/MediatR&#34;&gt;MediatR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://automapper.org/&#34;&gt;AutoMapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fluentvalidation.net/&#34;&gt;FluentValidation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nunit.org/&#34;&gt;NUnit&lt;/a&gt;, &lt;a href=&#34;https://fluentassertions.com/&#34;&gt;FluentAssertions&lt;/a&gt;, &lt;a href=&#34;https://github.com/moq&#34;&gt;Moq&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/jbogard/Respawn&#34;&gt;Respawn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started is to install the &lt;a href=&#34;https://www.nuget.org/packages/Clean.Architecture.Solution.Template&#34;&gt;NuGet package&lt;/a&gt; and run &lt;code&gt;dotnet new ca-sln&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6 SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js LTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet new --install Clean.Architecture.Solution.Template&lt;/code&gt; to install the project template&lt;/li&gt; &#xA; &lt;li&gt;Create a folder for your solution and cd into it (the template will use it as project name)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet new ca-sln&lt;/code&gt; to create a new project&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;src/WebUI&lt;/code&gt; and launch the project using &lt;code&gt;dotnet run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check out my &lt;a href=&#34;https://jasontaylor.dev/clean-architecture-getting-started/&#34;&gt;blog post&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Database Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The template is configured to use an in-memory database by default. This ensures that all users will be able to run the solution without needing to set up additional infrastructure (e.g. SQL Server).&lt;/p&gt; &#xA;&lt;p&gt;If you would like to use SQL Server, you will need to update &lt;strong&gt;WebUI/appsettings.json&lt;/strong&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;UseInMemoryDatabase&#34;: false,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that the &lt;strong&gt;DefaultConnection&lt;/strong&gt; connection string within &lt;strong&gt;appsettings.json&lt;/strong&gt; points to a valid SQL Server instance.&lt;/p&gt; &#xA;&lt;p&gt;When you run the application the database will be automatically created (if necessary) and the latest migrations will be applied.&lt;/p&gt; &#xA;&lt;h3&gt;Database Migrations&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;code&gt;dotnet-ef&lt;/code&gt; for your migrations first ensure that &#34;UseInMemoryDatabase&#34; is disabled, as described within previous section. Then, add the following flags to your command (values assume you are executing from repository root)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--project src/Infrastructure&lt;/code&gt; (optional if in this folder)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--startup-project src/WebUI&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--output-dir Persistence/Migrations&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to add a new migration from the root folder:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dotnet ef migrations add &#34;SampleMigration&#34; --project src\Infrastructure --startup-project src\WebUI --output-dir Persistence\Migrations&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Domain&lt;/h3&gt; &#xA;&lt;p&gt;This will contain all entities, enums, exceptions, interfaces, types and logic specific to the domain layer.&lt;/p&gt; &#xA;&lt;h3&gt;Application&lt;/h3&gt; &#xA;&lt;p&gt;This layer contains all application logic. It is dependent on the domain layer, but has no dependencies on any other layer or project. This layer defines interfaces that are implemented by outside layers. For example, if the application need to access a notification service, a new interface would be added to application and an implementation would be created within infrastructure.&lt;/p&gt; &#xA;&lt;h3&gt;Infrastructure&lt;/h3&gt; &#xA;&lt;p&gt;This layer contains classes for accessing external resources such as file systems, web services, smtp, and so on. These classes should be based on interfaces defined within the application layer.&lt;/p&gt; &#xA;&lt;h3&gt;WebUI&lt;/h3&gt; &#xA;&lt;p&gt;This layer is a single page application based on Angular 13 and ASP.NET Core 6. This layer depends on both the Application and Infrastructure layers, however, the dependency on Infrastructure is only to support dependency injection. Therefore only &lt;em&gt;Startup.cs&lt;/em&gt; should reference Infrastructure.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you are having problems, please let us know by &lt;a href=&#34;https://github.com/jasontaylordev/CleanArchitecture/issues/new/choose&#34;&gt;raising a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed with the &lt;a href=&#34;https://raw.githubusercontent.com/jasontaylordev/CleanArchitecture/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JamesNK/Newtonsoft.Json</title>
    <updated>2022-07-01T02:34:50Z</updated>
    <id>tag:github.com,2022-07-01:/JamesNK/Newtonsoft.Json</id>
    <link href="https://github.com/JamesNK/Newtonsoft.Json" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Json.NET is a popular high-performance JSON framework for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/Doc/icons/logo.jpg&#34; alt=&#34;Logo&#34;&gt; Json.NET&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Newtonsoft.Json/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Newtonsoft.Json.svg?style=flat-square&#34; alt=&#34;NuGet version (Newtonsoft.Json)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/jamesnk/Public/_build/latest?definitionId=8&#34;&gt;&lt;img src=&#34;https://dev.azure.com/jamesnk/Public/_apis/build/status/JamesNK.Newtonsoft.Json?branchName=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.newtonsoft.com/json&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.newtonsoft.com/json/help&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Newtonsoft.Json&#34;&gt;NuGet Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json/releases&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/LICENSE.md&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/json.net&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>huiyadanli/RevokeMsgPatcher</title>
    <updated>2022-07-01T02:34:50Z</updated>
    <id>tag:github.com,2022-07-01:/huiyadanli/RevokeMsgPatcher</id>
    <link href="https://github.com/huiyadanli/RevokeMsgPatcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A hex editor for WeChat/QQ/TIM - PC版微信/QQ/TIM防撤回补丁（我已经看到了，撤回也没用了）&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a&gt;&lt;img width=&#34;100px&#34; src=&#34;https://raw.githubusercontent.com/huiyadanli/RevokeMsgPatcher/master/Images/logo.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.microsoft.com/download/details.aspx?id=30653&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-windows-lightgrey.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/huiyadanli/RevokeMsgPatcher/total.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/huiyadanli/RevokeMsgPatcher&#34;&gt; &lt;img src=&#34;https://img.shields.io/appveyor/ci/huiyadanli/RevokeMsgPatcher.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;👀微信/QQ/TIM防撤回补丁&lt;/h1&gt; &#xA;&lt;p&gt;适用于 Windows 下 PC 版微信/QQ/TIM的防撤回补丁。&lt;strong&gt;支持最新版微信/QQ/TIM&lt;/strong&gt;，其中微信能够选择安装多开功能。&lt;/p&gt; &#xA;&lt;img width=&#34;180px&#34; src=&#34;https://raw.githubusercontent.com/huiyadanli/RevokeMsgPatcher/master/Images/revoke.jpg&#34;&gt; &#xA;&lt;p&gt;下载地址： &lt;strong&gt;&lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/releases/download/1.5/RevokeMsgPatcher.v1.5.fix1.zip&#34;&gt;⚡️点我下载最新版本&lt;/a&gt;&lt;/strong&gt; | &lt;a href=&#34;https://wwn.lanzouf.com/b00ppm2pa&#34;&gt;☁备用下载-蓝奏云&lt;/a&gt; 密码:4ho8 | &lt;a href=&#34;https://pan.baidu.com/s/15ilr78t8F1-VW8eUZSkr_Q?pwd=3rrj&#34;&gt;☁备用下载-百度云&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;相关文档： &lt;strong&gt;&lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki/%E7%89%88%E6%9C%AC%E6%94%AF%E6%8C%81&#34;&gt;✔支持哪些版本&lt;/a&gt;&lt;/strong&gt; | &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;❓常见问题&lt;/a&gt; | &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki&#34;&gt;📖查看完整文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;原理与方法： &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki/%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E%E4%B8%8E%E5%A4%9A%E5%BC%80%E6%95%99%E7%A8%8B&#34;&gt;📗微信&lt;/a&gt; | &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki/QQ%E6%88%96TIM%E9%98%B2%E6%92%A4%E5%9B%9E%E6%95%99%E7%A8%8B&#34;&gt;📕QQ&lt;/a&gt; | &lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/wiki/QQ%E6%88%96TIM%E9%98%B2%E6%92%A4%E5%9B%9E%E6%95%99%E7%A8%8B&#34;&gt;📘TIM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;附带产物：&lt;a href=&#34;https://github.com/huiyadanli/RevokeMsgPatcher/tree/master/RevokeMsgPatcher.MultiInstance&#34;&gt;一个通用的微信多开工具&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📷截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huiyadanli/RevokeMsgPatcher/master/Images/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔨使用方法&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;首先，你的系统需要满足以下条件：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows 7 或更高版本，&lt;strong&gt;不支持XP&lt;/strong&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=42642&#34;&gt;.NET Framework 4.5.2&lt;/a&gt; 或更高版本。&lt;strong&gt;低于此版本在打开程序时可能无反应，或者直接报错&lt;/strong&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用本程序前，先关闭微信/QQ/TIM。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;以管理员身份运行本程序&lt;/strong&gt;，等待右下角获取最新的补丁信息。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;选择微信/QQ/TIM的安装路径。如果你用的安装版的微信/QQ/TIM，正常情况下本程序会自动从注册表中获取安装路径，绿色版需要手动选择路径。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;点击防撤回。界面可能会出现一段时间的无响应，请耐心等待。&lt;strong&gt;由于修改了微信的 WeChatWin.dll 文件、QQ/TIM的 IM.dll 文件，杀毒软件可能会弹出警告，放行即可。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;注意：微信/QQ/TIM更新之后要重新安装补丁！&lt;/p&gt; &#xA;&lt;h2&gt;❤Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/36huo/wechat_anti_revoke&#34;&gt;wechat_anti_revoke&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📄License&lt;/h2&gt; &#xA;&lt;p&gt;GPLv3&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huiyadanli/RevokeMsgPatcher/master/Images/give_a_star.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>