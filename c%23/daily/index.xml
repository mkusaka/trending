<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-03T02:17:53Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/semantic-kernel</title>
    <updated>2023-03-03T02:17:53Z</updated>
    <id>tag:github.com,2023-03-03:/microsoft/semantic-kernel</id>
    <link href="https://github.com/microsoft/semantic-kernel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci.yml/badge.svg?branch=main&#34; alt=&#34;dotnet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Semantic Kernel (SK)&lt;/strong&gt; is a lightweight SDK enabling integration of AI Large Language Models (LLMs) with conventional programming languages. The SK extensible programming model combines natural language &lt;strong&gt;semantic functions&lt;/strong&gt;, traditional code &lt;strong&gt;native functions&lt;/strong&gt;, and &lt;strong&gt;embeddings-based memory&lt;/strong&gt; unlocking new potential and adding value to applications with AI.&lt;/p&gt; &#xA;&lt;p&gt;SK supports &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PROMPT_TEMPLATE_LANGUAGE.md&#34;&gt;prompt templating&lt;/a&gt;, function chaining, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/EMBEDDINGS.md&#34;&gt;vectorized memory&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PLANNER.md&#34;&gt;intelligent planning&lt;/a&gt; capabilities out of the box.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/371009/221739773-cf43522f-c1e4-42f2-b73d-5ba84e21febb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Semantic Kernel is designed to support and encapsulate several design patterns from the latest in AI research, such that developers can infuse their applications with complex &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/SKILLS.md&#34;&gt;skills&lt;/a&gt; like &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PROMPT_TEMPLATE_LANGUAGE.md&#34;&gt;prompt&lt;/a&gt; chaining, recursive reasoning, summarization, zero/few-shot learning, contextual memory, long-term memory, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/EMBEDDINGS.md&#34;&gt;embeddings&lt;/a&gt;, semantic indexing, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PLANNER.md&#34;&gt;planning&lt;/a&gt;, and accessing external knowledge stores as well as your own data.&lt;/p&gt; &#xA;&lt;p&gt;By joining the SK community, you can build AI-first apps faster and have a front-row peek at how the SDK is being built. SK has been released as open-source so that more pioneering developers can join us in crafting the future of this landmark moment in the history of computing.&lt;/p&gt; &#xA;&lt;h2&gt;Samples ⚡&lt;/h2&gt; &#xA;&lt;p&gt;If you would like a quick overview about how Semantic Kernel can integrate with your app, start by cloning the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/microsoft/semantic-kernel.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and try these examples:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/chat-summary-webapp-react/README.md&#34;&gt;Simple chat summary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use ready-to-use skills and get those skills into your app easily.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/book-creator-webapp-react/README.md&#34;&gt;Book creator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use planner to deconstruct a complex goal and envision using the planner in your app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/apps/auth-api-webapp-react/README.md&#34;&gt;Authentication and APIs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a basic connector pattern to authenticate and connect to an API and imagine integrating external data into your app&#39;s LLM AI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a more hands-on overview, you can also run the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/notebooks/dotnet/Getting-Started-Notebook.ipynb&#34;&gt;Getting Started notebook&lt;/a&gt;, looking into the syntax, creating &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/GLOSSARY.md&#34;&gt;Semantic Functions&lt;/a&gt;, working with Memory, and see how the kernel works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will need an &lt;a href=&#34;https://openai.com/api/&#34;&gt;Open AI API Key&lt;/a&gt; or &lt;a href=&#34;https://learn.microsoft.com/azure/cognitive-services/openai/quickstart?pivots=rest-api&#34;&gt;Azure Open AI service key&lt;/a&gt; to get started.&lt;/li&gt; &#xA; &lt;li&gt;There are a few software requirements you may need to satisfy before running examples and notebooks: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/azure/azure-functions/functions-run-local&#34;&gt;Azure Functions Core Tools&lt;/a&gt; used for running the kernel as a local API, required by the web apps.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/getting-started/install&#34;&gt;Yarn&lt;/a&gt; used for installing web apps&#39; dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Semantic Kernel supports .NET Standard 2.1 and it&#39;s recommended using .NET 6+. However, some of the examples in the repository require &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;.NET 7&lt;/a&gt; and the VS Code &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode&#34;&gt;Polyglot extension&lt;/a&gt; to run the notebooks.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started with Semantic Kernel ⚡&lt;/h2&gt; &#xA;&lt;p&gt;Here is a quick example of how to use Semantic Kernel from a C# console app.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new project, targeting .NET 6 or newer, and add the &lt;code&gt;Microsoft.SemanticKernel&lt;/code&gt; nuget package:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet add package Microsoft.SemanticKernel --version &amp;lt;version number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.SemanticKernel/&#34;&gt;nuget.org&lt;/a&gt; for the latest version and more instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy and paste the following code into your project, with your Azure OpenAI key in hand (you can create one &lt;a href=&#34;https://learn.microsoft.com/azure/cognitive-services/openai/quickstart?pivots=rest-api&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using Microsoft.SemanticKernel;&#xA;using Microsoft.SemanticKernel.KernelExtensions;&#xA;&#xA;var kernel = Kernel.Builder.Build();&#xA;&#xA;kernel.Config.AddAzureOpenAICompletionBackend(&#xA;    &#34;davinci-backend&#34;,                   // Alias used by the kernel&#xA;    &#34;text-davinci-003&#34;,                  // Azure OpenAI *Deployment ID*&#xA;    &#34;https://contoso.openai.azure.com/&#34;, // Azure OpenAI *Endpoint*&#xA;    &#34;...your Azure OpenAI Key...&#34;        // Azure OpenAI *Key*&#xA;);&#xA;&#xA;string skPrompt = @&#34;&#xA;{{$input}}&#xA;&#xA;Give me the TLDR in 5 words.&#xA;&#34;;&#xA;&#xA;string textToSummarize = @&#34;&#xA;1) A robot may not injure a human being or, through inaction,&#xA;allow a human being to come to harm.&#xA;&#xA;2) A robot must obey orders given it by human beings except where&#xA;such orders would conflict with the First Law.&#xA;&#xA;3) A robot must protect its own existence as long as such protection&#xA;does not conflict with the First or Second Law.&#xA;&#34;;&#xA;&#xA;var tldrFunction = kernel.CreateSemanticFunction(skPrompt);&#xA;&#xA;var summary = await kernel.RunAsync(textToSummarize, tldrFunction);&#xA;&#xA;Console.WriteLine(summary);&#xA;&#xA;// Output =&amp;gt; Protect humans, follow orders, survive.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing and Community&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions and suggestions to SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; &#xA;&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;To learn more and get started, please read our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/CONTRIBUTING.md&#34;&gt;Contributing page&lt;/a&gt; and check some of our documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PROMPT_TEMPLATE_LANGUAGE.md&#34;&gt;SK Prompt Template Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/SKILLS.md&#34;&gt;SKills and Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/EMBEDDINGS.md&#34;&gt;Embeddings and Semantic Memory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/docs/PLANNER.md&#34;&gt;SK Planner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/samples/notebooks/dotnet/README.md&#34;&gt;SK Notebooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>felixse/FluentTerminal</title>
    <updated>2023-03-03T02:17:53Z</updated>
    <id>tag:github.com,2023-03-03:/felixse/FluentTerminal</id>
    <link href="https://github.com/felixse/FluentTerminal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Terminal Emulator based on UWP and web technologies.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;fluent terminal logo&#34; src=&#34;https://raw.githubusercontent.com/felixse/FluentTerminal/master/Icons/Icon_no_margin.png&#34; width=&#34;100px&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Fluent Terminal&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/felixse/FluentTerminal/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=FluentTerminal&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=FluentTerminal&amp;amp;metric=alert_status&#34; alt=&#34;SonarCloud&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/FluentTerminal&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/felixse/FluentTerminal/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/felixse/FluentTerminal/total.svg?label=Downloads&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/felixse/FluentTerminal/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/felixse/FluentTerminal.svg?label=Release&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/felixse/FluentTerminal/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/felixse/FluentTerminal?label=Contributors&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Terminal Emulator based on UWP and web technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/www.microsoft.com/store/apps/9p2krlmfxf9t?cid=storebadge&amp;amp;ocid=badge&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felixse/FluentTerminal/master/store-badge.png&#34; alt=&#34;Get it from Microsoft&#34; width=&#34;284px&#34; height=&#34;104px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Terminal for PowerShell, CMD, WSL or custom shells&lt;/li&gt; &#xA; &lt;li&gt;Built-in support for SSH and &lt;a href=&#34;https://mosh.org/&#34;&gt;Mosh&lt;/a&gt; connections&lt;/li&gt; &#xA; &lt;li&gt;Supports tabs and multiple windows&lt;/li&gt; &#xA; &lt;li&gt;Theming and appearance configuration&lt;/li&gt; &#xA; &lt;li&gt;Import/Export themes&lt;/li&gt; &#xA; &lt;li&gt;Import iTerm themes&lt;/li&gt; &#xA; &lt;li&gt;Fullscreen mode&lt;/li&gt; &#xA; &lt;li&gt;Editable keybindings&lt;/li&gt; &#xA; &lt;li&gt;Search function&lt;/li&gt; &#xA; &lt;li&gt;Configure shell profiles to quickly switch between different shells&lt;/li&gt; &#xA; &lt;li&gt;Explorer context menu integration (Installation script can be found &lt;a href=&#34;https://github.com/felixse/FluentTerminal/tree/master/Explorer%20Context%20Menu%20Integration&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;VsCode Extension (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Xherdi.fluent-terminal&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felixse/FluentTerminal/master/Screenshots/terminal.png&#34; alt=&#34;Terminal window&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/felixse/FluentTerminal/master/Screenshots/settings.png&#34; alt=&#34;Settings window&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Albanian&lt;/li&gt; &#xA; &lt;li&gt;Arabic&lt;/li&gt; &#xA; &lt;li&gt;Arabic (Iraq)&lt;/li&gt; &#xA; &lt;li&gt;Azerbaijani&lt;/li&gt; &#xA; &lt;li&gt;Bosnian&lt;/li&gt; &#xA; &lt;li&gt;Bulgarian&lt;/li&gt; &#xA; &lt;li&gt;Chinese (Simplified)&lt;/li&gt; &#xA; &lt;li&gt;Chinese (Traditional)&lt;/li&gt; &#xA; &lt;li&gt;Croatian&lt;/li&gt; &#xA; &lt;li&gt;Dutch&lt;/li&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;Esperanto&lt;/li&gt; &#xA; &lt;li&gt;French&lt;/li&gt; &#xA; &lt;li&gt;German&lt;/li&gt; &#xA; &lt;li&gt;Hebrew&lt;/li&gt; &#xA; &lt;li&gt;Hindi&lt;/li&gt; &#xA; &lt;li&gt;Hungarian&lt;/li&gt; &#xA; &lt;li&gt;Indonesian&lt;/li&gt; &#xA; &lt;li&gt;Italian&lt;/li&gt; &#xA; &lt;li&gt;Japanese&lt;/li&gt; &#xA; &lt;li&gt;Korean&lt;/li&gt; &#xA; &lt;li&gt;Persian&lt;/li&gt; &#xA; &lt;li&gt;Polish&lt;/li&gt; &#xA; &lt;li&gt;Portuguese&lt;/li&gt; &#xA; &lt;li&gt;Portuguese (Brazilian)&lt;/li&gt; &#xA; &lt;li&gt;Romanian&lt;/li&gt; &#xA; &lt;li&gt;Russian&lt;/li&gt; &#xA; &lt;li&gt;Serbian&lt;/li&gt; &#xA; &lt;li&gt;Slovenian&lt;/li&gt; &#xA; &lt;li&gt;Spanish&lt;/li&gt; &#xA; &lt;li&gt;Swedish&lt;/li&gt; &#xA; &lt;li&gt;Turkish&lt;/li&gt; &#xA; &lt;li&gt;Ukrainian&lt;/li&gt; &#xA; &lt;li&gt;Uzbek&lt;/li&gt; &#xA; &lt;li&gt;Vietnamese&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sign up to &lt;a href=&#34;https://poeditor.com/join/project/TfKNIt826z&#34;&gt;POEditor&lt;/a&gt; to help with existing translations or add a new language&lt;/p&gt; &#xA;&lt;h2&gt;How to install (as an end-user)&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to update to Fall Creators Update or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Microsoft Store&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for Fluent Terminal in the Microsoft Store App or click &lt;a href=&#34;https://www.microsoft.com/store/apps/9p2krlmfxf9t&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Chocolatey package manager installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;From an elevated/admin shell, execute &lt;code&gt;choco install fluent-terminal&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Scoop package manager installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Scoop&lt;/li&gt; &#xA; &lt;li&gt;Install 7zip and git (to add buckets): &lt;code&gt;scoop install 7zip git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;From an elevated/admin shell, execute&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt; scoop bucket add nonportable&#xA; scoop install fluent-terminal-np&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and extract the latest &lt;a href=&#34;https://github.com/felixse/FluentTerminal/releases&#34;&gt;release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Double click the *.appxbundle file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to set up a development environment&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/felixse/FluentTerminal/wiki/How-to-set-up-a-development-environment&#34;&gt;this Wiki page&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>