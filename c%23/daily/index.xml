<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-27T01:30:25Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FreyaHolmer/Mathfs</title>
    <updated>2022-12-27T01:30:25Z</updated>
    <id>tag:github.com,2022-12-27:/FreyaHolmer/Mathfs</id>
    <link href="https://github.com/FreyaHolmer/Mathfs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Expanded Math Functionality for Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mathfs&lt;/h1&gt; &#xA;&lt;p&gt;Freya&#39;s expanded math functionality for Unity!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is primarily a way for me to share the math functionality I write and use in my own personal projects&lt;/li&gt; &#xA; &lt;li&gt;I will recklessly edit and adapt things without too much thought into backwards compatibility&lt;/li&gt; &#xA; &lt;li&gt;Minimum Unity version is currently 2021.2 due to using newer C# version features. It may be possible to auto-downgrade through your IDE if necessary&lt;/li&gt; &#xA; &lt;li&gt;Commits with version tags should be relatively stable. Other commits may not be&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation instructions&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to install this library into your project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plain install&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone or &lt;a href=&#34;https://github.com/FreyaHolmer/Mathfs/archive/refs/heads/master.zip&#34;&gt;download&lt;/a&gt; this repository and put it somewhere in the Assets folder of your Unity project&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity Package Manager (UPM)&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add either of the the following lines to &lt;em&gt;Packages/manifest.json&lt;/em&gt;:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#34;com.acegikmo.mathfs&#34;: &#34;https://github.com/FreyaHolmer/Mathfs#0.1.0&#34;,&lt;/code&gt; if you want to target a specific version (recommended)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#34;com.acegikmo.mathfs&#34;: &#34;https://github.com/FreyaHolmer/Mathfs&#34;,&lt;/code&gt; if you want to pull the latest commit (potentially unstable)&lt;/li&gt; &#xA;   &lt;li&gt;More information about UPM and git &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-git.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://openupm.com&#34;&gt;OpenUPM&lt;/a&gt;&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After installing &lt;a href=&#34;https://github.com/openupm/openupm-cli&#34;&gt;openupm-cli&lt;/a&gt;, run the following command:&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;openupm add com.acegikmo.mathfs&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After installation you will be able to access the library in scripts by including the namespace &lt;code&gt;using Freya&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2D Intersection tests between all combinations of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ray&lt;/li&gt; &#xA;   &lt;li&gt;LineSegment&lt;/li&gt; &#xA;   &lt;li&gt;Line&lt;/li&gt; &#xA;   &lt;li&gt;Circle&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Curves &amp;amp; Splines &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;BÃ©zier (Quadratic, Cubic &amp;amp; Generalized)&lt;/li&gt; &#xA;   &lt;li&gt;Hermite&lt;/li&gt; &#xA;   &lt;li&gt;Catmull-Rom&lt;/li&gt; &#xA;   &lt;li&gt;B-Spline (Uniform Cubic &amp;amp; Generalized Non-Uniform)&lt;/li&gt; &#xA;   &lt;li&gt;NURBS (Non-Unifrom Rational B-Spline)&lt;/li&gt; &#xA;   &lt;li&gt;Trajectory (Cubic &amp;amp; Generalized)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Trajectory math &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GetDisplacement (point in trajectory), given gravity, angle, speed &amp;amp; time&lt;/li&gt; &#xA;   &lt;li&gt;GetLaunchSpeed, given gravity, angle &amp;amp; lateral distance&lt;/li&gt; &#xA;   &lt;li&gt;GetLaunchAngles, given gravity, speed &amp;amp; lateral distance&lt;/li&gt; &#xA;   &lt;li&gt;GetMaxRange, given gravity &amp;amp; speed&lt;/li&gt; &#xA;   &lt;li&gt;GetHeightPotential, given gravity, current height and speed&lt;/li&gt; &#xA;   &lt;li&gt;GetSpeedFromHeightPotential, given gravity, current height and height potential&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Triangle math &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Area / SignedArea, given three points or base and height&lt;/li&gt; &#xA;   &lt;li&gt;Contains check, given three triangle vertices and a point to test by&lt;/li&gt; &#xA;   &lt;li&gt;Right-angle trig functions to calculate Opposite/Adjacent/Hypotenuse/Angle&lt;/li&gt; &#xA;   &lt;li&gt;Incenter / Centroid&lt;/li&gt; &#xA;   &lt;li&gt;Incircle / Circumcircle&lt;/li&gt; &#xA;   &lt;li&gt;SmallestAngle&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Polygon math &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Area / SignedArea&lt;/li&gt; &#xA;   &lt;li&gt;IsClockwise&lt;/li&gt; &#xA;   &lt;li&gt;WindingNumber&lt;/li&gt; &#xA;   &lt;li&gt;Contains&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Circle math &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FromTwoPoints (get smallest circle passing through both points)&lt;/li&gt; &#xA;   &lt;li&gt;FromThreePoints (get unique circle passing through three points)&lt;/li&gt; &#xA;   &lt;li&gt;RadiusToArea / AreaToRadius&lt;/li&gt; &#xA;   &lt;li&gt;AreaToCircumference / CircumferenceToArea&lt;/li&gt; &#xA;   &lt;li&gt;RadiusToCircumference / CircumferenceToRadius&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2D Angle helpers (AngToDir, DirToAng...)&lt;/li&gt; &#xA; &lt;li&gt;2D Vector extension methods (Rotate90CCW/CW, Rotate, RotateAround...)&lt;/li&gt; &#xA; &lt;li&gt;Quadratic &amp;amp; Linear Root finders&lt;/li&gt; &#xA; &lt;li&gt;Remap functions&lt;/li&gt; &#xA; &lt;li&gt;Constants (Tau, Pi, Golden Ratio, e, sqrt2)&lt;/li&gt; &#xA; &lt;li&gt;Vector extension methods (WithMagnitude, ClampMagnitude(min,max)...)&lt;/li&gt; &#xA; &lt;li&gt;Expanded basic math operations to vectors (Clamp, Round, Abs...)&lt;/li&gt; &#xA; &lt;li&gt;Color extensions (WithAlpha, MultiplyRGB...)&lt;/li&gt; &#xA; &lt;li&gt;Smoothing functions (Smooth01, SmoothCos01...)&lt;/li&gt; &#xA; &lt;li&gt;Triangle Math helpers (SignedArea, Circumcenter, Incircle...)&lt;/li&gt; &#xA; &lt;li&gt;Circle Math helpers (Area, Circumference...)&lt;/li&gt; &#xA; &lt;li&gt;All functions use radians&lt;/li&gt; &#xA; &lt;li&gt;And more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changes&lt;/h2&gt; &#xA;&lt;p&gt;Mathfs.cs &lt;strong&gt;does not fully match Unity&#39;s Mathf.cs&lt;/strong&gt;, I&#39;ve made a few changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All angles are in radians, no methods use degrees&lt;/li&gt; &#xA; &lt;li&gt;Lerp and InverseLerp: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Unclamped by default&lt;/li&gt; &#xA;   &lt;li&gt;LerpClamped/InverseLerpClamped are now the special case functions/exceptions&lt;/li&gt; &#xA;   &lt;li&gt;Uses the more numerically stable evaluation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Smoothstep is removed in favor of the more explicit: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;LerpSmooth (which is how it was implemented) and&lt;/li&gt; &#xA;   &lt;li&gt;InverseLerpSmooth (which is how it is implemented everywhere but Unity&#39;s Mathf.cs)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Min/Max functions with arbitrary inputs/array input will throw on empty instead of returning 0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AssetRipper/AssetRipper</title>
    <updated>2022-12-27T01:30:25Z</updated>
    <id>tag:github.com,2022-12-27:/AssetRipper/AssetRipper</id>
    <link href="https://github.com/AssetRipper/AssetRipper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GUI Application to work with engine assets, asset bundles, and serialized files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AssetRipper&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AssetRipper/AssetRipper/raw/master/Media/Images/2D_Logo/AssetRipperLogoBackground.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AssetRipper/AssetRipper/master/Media/Images/2D_Logo/AssetRipperLogoBackground.png&#34; alt=&#34;AssetRipper Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AssetRipper/AssetRipper/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/AssetRipper/AssetRipper/total.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AssetRipper/AssetRipper/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/AssetRipper/AssetRipper/latest/total.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AssetRipper/AssetRipper/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/AssetRipper/AssetRipper&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://weblate.samboy.dev/engage/assetripper/&#34;&gt;&lt;img src=&#34;https://weblate.samboy.dev/widgets/assetripper/-/gui/svg-badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AssetRipper is a tool for extracting assets from serialized files (&lt;em&gt;CAB-&lt;/em&gt;*, &lt;em&gt;*.assets&lt;/em&gt;, &lt;em&gt;*.sharedAssets&lt;/em&gt;, etc.) and assets bundles (&lt;em&gt;*.unity3d&lt;/em&gt;, &lt;em&gt;*.bundle&lt;/em&gt;, etc.) and converting them into the native Unity engine format.&lt;/p&gt; &#xA;&lt;h1&gt;Donations&lt;/h1&gt; &#xA;&lt;p&gt;Thank you for considering to support me. I have normal expenses like food, electric, internet, and rent. Your donations help to ensure that I can continue to afford developing this project. Anyone with a positive lifetime contribution is entitled to the Donator role on the &lt;a href=&#34;https://discord.gg/XqXa53W2Yh&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/ds5678&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/ds5678&#34;&gt;Patreon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/ds5678&#34;&gt;Paypal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported Versions&lt;/h1&gt; &#xA;&lt;p&gt;Unity &lt;code&gt;3.4.0&lt;/code&gt; to &lt;code&gt;2022.2.X&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Release Schedule&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AssetRipper/AssetRipper/releases&#34;&gt;Releases&lt;/a&gt; are put out once a week, usually on either Sunday or Monday.&lt;/p&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://assetripper.github.io/AssetRipper/&#34;&gt;Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://assetripper.github.io/AssetRipper/articles/Downloads.html&#34;&gt;Downloads&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://assetripper.github.io/AssetRipper/articles/RoadMap.html&#34;&gt;Road Map&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Translations&lt;/h1&gt; &#xA;&lt;p&gt;We have a translation platform for those of you who speak another language to work on translating the GUI into your native language. You can get started at &lt;a href=&#34;https://weblate.samboy.dev/engage/assetripper/&#34;&gt;https://weblate.samboy.dev/engage/assetripper/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need to sign up to start translating to a new language, or you can suggest translations for an existing language without an account (but someone with an account will have to manually verify your suggestions). This will send an email to the address you provide. Be sure check your spam folder, as Gmail can sometimes put the emails there.&lt;/p&gt; &#xA;&lt;h1&gt;Discord &lt;a href=&#34;https://discord.gg/XqXa53W2Yh&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/867514400701153281?color=blue&amp;amp;label=AssetRipper&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The development of this project has a dedicated &lt;a href=&#34;https://discord.gg/XqXa53W2Yh&#34;&gt;Discord server&lt;/a&gt;. Feel free to come say hi. This is also an alternative location for people to post issues.&lt;/p&gt; &#xA;&lt;h1&gt;Legal Disclaimers&lt;/h1&gt; &#xA;&lt;p&gt;AssetRipper is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/AssetRipper/AssetRipper/master/License.md&#34;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that using or distributing the output from this software may be against copyright legislation in your jurisdiction. You are responsible for ensuring that you&#39;re not breaking any laws.&lt;/p&gt; &#xA;&lt;p&gt;The full list of licensed works can be found on the &lt;a href=&#34;https://assetripper.github.io/AssetRipper/articles/Credits.html&#34;&gt;Credits&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;This software is not sponsored by or affiliated with Unity Technologies or its affiliates. &#34;Unity&#34; is a registered trademark of Unity Technologies or its affiliates in the U.S. and elsewhere.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Revolutionary-Games/Thrive</title>
    <updated>2022-12-27T01:30:25Z</updated>
    <id>tag:github.com,2022-12-27:/Revolutionary-Games/Thrive</id>
    <link href="https://github.com/Revolutionary-Games/Thrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The main repository for the development of the evolution game Thrive.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Thrive&lt;/h1&gt; &#xA;&lt;p&gt;This is the code repository for Thrive. For more information, visit &lt;a href=&#34;https://revolutionarygamesstudio.com/&#34;&gt;Revolutionary Games&#39; Website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://dev.revolutionarygamesstudio.com/ci/1&#34;&gt;Build Status&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Patreon &lt;a href=&#34;https://www.patreon.com/thrivegame&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join-Patreon-orange.svg?sanitize=true&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/1779200/Thrive/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Thrive%20on%20Steam-blue&#34; alt=&#34;Thrive on Steam&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://revolutionarygames.itch.io/thrive&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Thrive%20on%20Itch.io-orange&#34; alt=&#34;Thrive on Itch.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://community.revolutionarygamesstudio.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Community%20Forums-%239cf&#34; alt=&#34;Community Forums&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://translate.revolutionarygamesstudio.com/engage/thrive/&#34;&gt; &lt;img src=&#34;https://translate.revolutionarygamesstudio.com/widgets/thrive/-/thrive-game/svg-badge.svg?sanitize=true&#34; alt=&#34;translation status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://wiki.revolutionarygamesstudio.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Developer%20Wiki-red&#34; alt=&#34;Developer Wiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/FZxDQ4H&#34;&gt;&lt;img src=&#34;https://discord.com/api/guilds/228300288023461893/widget.png&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://randomthrivefiles.b-cdn.net/screenshots/github_screenshot_1.png&#34; alt=&#34;game screenshot&#34; width=&#34;900px&#34;&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Repository structure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;assets: This folder contains all the assets such as models and other binaries. The big files in this folder use &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;Git LFS&lt;/a&gt; in order to keep this repository from bloating. You need to have Git LFS installed to get the files. Some better editable versions of the assets are stored in a separate &lt;a href=&#34;https://github.com/Revolutionary-Games/Thrive-Raw-Assets&#34;&gt;repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc&#34;&gt;doc: Documentation files.&lt;/a&gt; Contains style guide, engine overview and other useful documentation.&lt;/li&gt; &#xA; &lt;li&gt;simulation_parameters: Contains JSON files as well as C# constants for tweaking the game.&lt;/li&gt; &#xA; &lt;li&gt;scripts: Utility scripts for Thrive development&lt;/li&gt; &#xA; &lt;li&gt;src: The core of the game written in C# as well as Godot scenes.&lt;/li&gt; &#xA; &lt;li&gt;test: Contains tests that will ensure that core parts work correctly. These don&#39;t currently exist for the Godot version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;Depending on what you want to contribute, you need to take different steps to get your development environment set up.&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; first. If you need help please ask &lt;a href=&#34;https://community.revolutionarygamesstudio.com/c/dev-help&#34;&gt;on our forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also other useful documents in the &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc&#34;&gt;doc&lt;/a&gt; folder not mentioned here.&lt;/p&gt; &#xA;&lt;p&gt;If you have game development skills, you can apply to the team &lt;a href=&#34;https://revolutionarygamesstudio.com/application/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to translate the game to your language, you can find the relevant information &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/working_with_translations.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The planning board contains all issues and pull requests grouped by their priority and status. It can be found &lt;a href=&#34;https://github.com/orgs/Revolutionary-Games/projects/2&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://randomthrivefiles.b-cdn.net/screenshots/github_screenshot_2.png&#34; alt=&#34;game screenshot&#34; width=&#34;900px&#34;&gt; &#xA;&lt;h3&gt;Programmers&lt;/h3&gt; &#xA;&lt;p&gt;Thrive is written in C# with a few helper scripts written in ruby. In order to work on the C# you need to compile Thrive yourself. You can find instructions for how to do that in the &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/setup_instructions.md&#34;&gt;setup instructions&lt;/a&gt;. And if you&#39;ve never used Godot before please read &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/learning_godot.md&#34;&gt;learning Godot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/style_guide.md&#34; title=&#34;Styleguide&#34;&gt;styleguide&lt;/a&gt;, both for guidelines on code formatting and git usage.&lt;/p&gt; &#xA;&lt;p&gt;Binary files should be committed using &lt;a href=&#34;https://wiki.revolutionarygamesstudio.com/wiki/Git_LFS&#34;&gt;Git LFS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Modellers, texture and GUI artists, and Sound Engineers&lt;/h3&gt; &#xA;&lt;p&gt;To work on the art assets you will want to install Godot and work on the project files with it. Instructions for that are the same as for programmers: &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/setup_instructions.md&#34;&gt;setup instructions&lt;/a&gt;. And if you&#39;ve never used Godot before please read &lt;a href=&#34;https://raw.githubusercontent.com/Revolutionary-Games/Thrive/master/doc/learning_godot.md&#34;&gt;learning Godot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively some art assets can be worked on without having a working copy of the Godot project, but then you need to rely on other artists or programmers to put your assets in the game.&lt;/p&gt; &#xA;&lt;p&gt;You should familiarize yourself with the Godot &lt;a href=&#34;https://docs.huihoo.com/godotengine/godot-docs/godot/tutorials/asset_pipeline/_asset_pipeline.html&#34;&gt;Asset pipeline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To contribute assets you can contact a developer and provide that person with your assets and the developer can add the assets to the official repository. It will at a later time be possible to &lt;a href=&#34;https://wiki.revolutionarygamesstudio.com/wiki/Git_LFS&#34;&gt;commit&lt;/a&gt; to Git LFS server yourself, currently it is limited to only Thrive developers. Note that you must have Git LFS installed for this to work. Any artists on the team should preferrably modify the project in Godot themselves and commit the assets using &lt;a href=&#34;https://wiki.revolutionarygamesstudio.com/wiki/Git_LFS&#34;&gt;Git LFS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Extra note for modellers: There are extra instructions for how to import models here: &lt;a href=&#34;https://wiki.revolutionarygamesstudio.com/wiki/How_to_Import_Assets&#34; title=&#34;How to import assets&#34;&gt;import tool&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>