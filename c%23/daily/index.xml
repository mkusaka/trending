<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-19T01:30:31Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RHeavenStudio/HeavenStudio</title>
    <updated>2023-11-19T01:30:31Z</updated>
    <id>tag:github.com,2023-11-19:/RHeavenStudio/HeavenStudio</id>
    <link href="https://github.com/RHeavenStudio/HeavenStudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(WIP) Fully playable, open source recreation of every Rhythm Heaven minigame with a built in level editor.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;This project is still in development. There are NO public compiled releases (yet).&lt;/h2&gt; &#xA;&lt;h1&gt;Heaven Studio&lt;/h1&gt; &#xA;&lt;p&gt;(WIP) A tool to create playable Rhythm Heaven custom remixes, with many customization options.&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://discord.gg/2kdZ8kFyEN&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/945450048832040980?color=5865F2&amp;amp;label=Heaven%20Studio&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1NXxIeL4nsdjChrxAZTPpk20QOKEdQWGbXIhT4TclB6k/edit?usp=sharing&#34;&gt;Progress Spreadsheet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCAb3R-5qyXWOEj8B4vibhxQ&#34;&gt;YouTube Channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfu0p2ZjrfwwEvpLgJ4Hw-AAN3jh4QNSEk0U7mjDvwiIkoRAw/viewform?usp=pp_url&#34;&gt;Bug Report Form&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rheavenstudio.github.io/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43734252/212429715-1971929f-fee1-442f-8ba2-694e1732590a.png&#34; alt=&#34;prCapture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prebuilt Binaries&lt;/h2&gt; &#xA;&lt;p&gt;This project is still in development, so there are currently no release builds yet. GitHub Actions creates experimental builds on each commmit, but minimal support will be provided.&lt;/p&gt; &#xA;&lt;h3&gt;Release 1 alpha builds&lt;/h3&gt; &#xA;&lt;p&gt;These builds do not include some of the features from Nightly, instead focusing on stability. These builds will eventually culminate in the first stable release of Heaven Studio.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/release_1/StandaloneWindows64-build.zip&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/release_1/StandaloneLinux64-build.zip&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/release_1/StandaloneOSX-build.zip&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Nightly builds&lt;/h3&gt; &#xA;&lt;p&gt;These builds include experimental new features that will not be included in Release 1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/master/StandaloneWindows64-build.zip&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/master/StandaloneLinux64-build.zip&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/RHeavenStudio/HeavenStudio/workflows/build/master/StandaloneOSX-build.zip&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Important Notes:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MP3 audio with variable bitrate encoding may &lt;a href=&#34;https://github.com/RHeavenStudio/HeavenStudio/issues/490&#34;&gt;desync when seeking in the editor&lt;/a&gt;. Either use MP3s with constant bitrate encoding or use one of our other supported formats (OGG Vorbis, WAV...)&lt;/li&gt; &#xA; &lt;li&gt;On MacOS and Linux builds you may &lt;a href=&#34;https://github.com/RHeavenStudio/HeavenStudio/issues/72&#34;&gt;experience bugs with audio-related tasks&lt;/a&gt;, but in most cases Heaven Studio works perfectly.&lt;/li&gt; &#xA; &lt;li&gt;On MacOS you&#39;ll need to have Discord open in the background for now, there&#39;s a bug that causes the DiscordSDK library to crash when the rich presence is updated while Discord is not open in the background.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Self-Building&lt;/h2&gt; &#xA;&lt;p&gt;Heaven Studio is made in &lt;a href=&#34;https://unity.com/releases/editor/whats-new/2021.3.21&#34;&gt;Unity 2021.3.21&lt;/a&gt;, and programmed with &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Build Instructions: &lt;a href=&#34;https://github.com/megaminerjenny/HeavenStudio/raw/master/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt; (or the more maintained &lt;a href=&#34;https://rheavenstudio.github.io/docs-contributing/setup/introduction&#34;&gt;documentation page&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Other information&lt;/h2&gt; &#xA;&lt;p&gt;Rhythm Heaven is the intellectual property of Nintendo. This program is NOT endorsed nor sponsored in any way by Nintendo. All used properties of Nintendo (such as names, audio, graphics, etc.) in this software are not intended to maliciously infringe trademark rights. All other trademarks and assets are property of their respective owners. This is a community project and this is available for others to use according to the GPL-3.0 license, without charge.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>richlander/container-workshop</title>
    <updated>2023-11-19T01:30:31Z</updated>
    <id>tag:github.com,2023-11-19:/richlander/container-workshop</id>
    <link href="https://github.com/richlander/container-workshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documents fundamental .NET Container workflows&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;.NET 8 container workshop&lt;/h2&gt; &#xA;&lt;p&gt;The workshop details the fundamental workflows for using .NET with containers. It includes a variety of approaches and capabilities, such as &lt;a href=&#34;https://learn.microsoft.com/dotnet/core/docker/publish-as-container&#34;&gt;OCI image publish&lt;/a&gt;, registry push, Dockerfile, &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/improving-multiplatform-container-support/&#34;&gt;cross-compilation&lt;/a&gt;, and &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-6-is-now-in-ubuntu-2204/#net-in-chiseled-ubuntu-containers&#34;&gt;chiseled containers&lt;/a&gt;. OCI publish is used as the default approach.&lt;/p&gt; &#xA;&lt;p&gt;Instructions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/publish-oci.md&#34;&gt;Publish OCI images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/publish-oci-reference.md&#34;&gt;Publish OCI image publishing reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/aspnetcore.md&#34;&gt;ASP.NET Core web apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/dockerfile-samples.md&#34;&gt;Dockerfile samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/publish-in-sdk-container.md&#34;&gt;Publishing apps within an SDK container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/cross-compilation.md&#34;&gt;Cross-compilation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/push-to-registry.md&#34;&gt;Publishing to a registry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/richlander/container-workshop/main/super-sql-app/control-container-runtime.md&#34;&gt;Controlling how your containers run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maoni0.medium.com/dynamically-adapting-to-application-sizes-2d72fcb6f1ea&#34;&gt;Dynamically Adapting To Application Sizes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Find this repo&lt;/h2&gt; &#xA;&lt;p&gt;If you are using this repo in a talk, use this QR code to help people find the repo.&lt;/p&gt; &#xA;&lt;img width=&#34;311&#34; alt=&#34;QR code to repo&#34; src=&#34;https://github.com/richlander/container-workshop/assets/2608468/4067d47d-5ea3-460e-9062-0050c611ba53&#34;&gt; &#xA;&lt;h2&gt;Environment&lt;/h2&gt; &#xA;&lt;p&gt;The instructions assume:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&#34;&gt;.NET 8&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following environment was used for the examples.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dotnet --version&#xA;8.0.100&#xA;$ docker --version&#xA;Docker version 24.0.7, build afdd53b&#xA;$ cat /etc/os-release | head -n 1&#xA;PRETTY_NAME=&#34;Ubuntu 22.04.3 LTS&#34;&#xA;$ uname -a&#xA;Linux vancouver 6.2.0-35-generic #35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Oct  6 10:23:26 UTC 2 x86_64 x86_64 x86_64 GNU/Linux&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>