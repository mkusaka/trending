<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-15T01:24:25Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ulomaramma/JWTAuthenticationWebAPI</title>
    <updated>2024-03-15T01:24:25Z</updated>
    <id>tag:github.com,2024-03-15:/ulomaramma/JWTAuthenticationWebAPI</id>
    <link href="https://github.com/ulomaramma/JWTAuthenticationWebAPI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core JWT Authentication Web API&lt;/h1&gt; &#xA;&lt;p&gt;This project provides a comprehensive example of implementing JWT (JSON Web Tokens) authentication in an ASP.NET Core Web API, including the use of refresh tokens for maintaining user sessions securely. It&#39;s designed to demonstrate best practices for securing web APIs and includes Swagger integration for easy testing and documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Give It a Star! ‚≠ê&lt;/h2&gt; &#xA;&lt;p&gt;If you found this project helpful, give it a star to show appreciation and help other developers discover it&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#about-jwt-authentication&#34;&gt;About JWT Authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#using-refresh-tokens&#34;&gt;Using Refresh Tokens&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#testing-with-swagger&#34;&gt;Testing with Swagger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ulomaramma/JWTAuthenticationWebAPI/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;What things you need to install the software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6.0 SDK&lt;/a&gt; or later&lt;/li&gt; &#xA; &lt;li&gt;An IDE (Visual Studio, Visual Studio Code, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;A step-by-step installation guide that tell you how to get a development environment running:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ulomaramma/JWTAuthenticationWebAPI.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restore the .NET packages &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet restore&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the project &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet run&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;About JWT Authentication&lt;/h3&gt; &#xA;&lt;p&gt;JWT (JSON Web Token) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.&lt;/p&gt; &#xA;&lt;p&gt;In the context of web APIs, JWTs are used to authenticate requests made by clients. When a user logs in with their credentials, the server generates a JWT that encapsulates the user&#39;s identity and other relevant attributes. This token is then sent back to the client, which will use it to authenticate subsequent requests to the server. The server will verify the token&#39;s validity before fulfilling the request.&lt;/p&gt; &#xA;&lt;h3&gt;Using Refresh Tokens&lt;/h3&gt; &#xA;&lt;p&gt;A refresh token is a special kind of token used to obtain a renewed access token. This is necessary because JWT access tokens are typically set to expire after a short period for security reasons. However, constantly asking users to log in again after their access token expires would not provide a good user experience. This is where refresh tokens come into play.&lt;/p&gt; &#xA;&lt;p&gt;In this project, alongside the JWT access token, a refresh token is also issued to the client upon login. The refresh token has a longer lifespan and can be used to request new access tokens without requiring the user to re-authenticate with their credentials&lt;/p&gt; &#xA;&lt;h3&gt;Testing with Swagger&lt;/h3&gt; &#xA;&lt;p&gt;This project is configured with Swagger to test the API endpoints easily. To access the Swagger UI, navigate to &lt;a href=&#34;http://localhost:port/swagger&#34;&gt;http://localhost:port/swagger&lt;/a&gt; in your web browser after starting the project.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Your contributions are welcome! If you&#39;d like to improve the guide, add examples, or correct any mistakes, please feel free to fork the repository and submit a pull request. Any contributions you make are greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;Fork the Project&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create your Feature Branch (git checkout -b feature/AmazingFeature)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (git commit -m &#39;Add some AmazingFeature&#39;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (git push origin feature/AmazingFeature)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dbrizov/NaughtyCharacter</title>
    <updated>2024-03-15T01:24:25Z</updated>
    <id>tag:github.com,2024-03-15:/dbrizov/NaughtyCharacter</id>
    <link href="https://github.com/dbrizov/NaughtyCharacter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Third Person Controller for Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NaughtyCharacter&lt;/h1&gt; &#xA;&lt;p&gt;Third Person Controller for Unity. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dbrizov/dbrizov.github.io/raw/master/images/project-images/character-controller/naughty_character_camera_rotation.gif&#34; alt=&#34;gif&#34;&gt; &lt;img src=&#34;https://github.com/dbrizov/dbrizov.github.io/raw/master/images/project-images/character-controller/naughty_character_jump_inplace.gif&#34; alt=&#34;gif&#34;&gt; &lt;img src=&#34;https://github.com/dbrizov/dbrizov.github.io/raw/master/images/project-images/character-controller/naughty_character_jump_moving.gif&#34; alt=&#34;gif&#34;&gt; &lt;img src=&#34;https://github.com/dbrizov/dbrizov.github.io/raw/master/images/project-images/character-controller/naughty_character_jump_moving2.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Unity 2018.3.0 or later versions.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Controls&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Keyboard And Mouse&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Movement: &lt;strong&gt;WASD&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Camera: &lt;strong&gt;Mouse&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jump: &lt;strong&gt;Space&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;XBOX 360/ONE Controller&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Movement: &lt;strong&gt;Left Stick&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Camera: &lt;strong&gt;Right Stick&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jump: &lt;strong&gt;A&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2015 Denis Rizov&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>betwixt-labs/bebop</title>
    <updated>2024-03-15T01:24:25Z</updated>
    <id>tag:github.com,2024-03-15:/betwixt-labs/bebop</id>
    <link href="https://github.com/betwixt-labs/bebop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üé∑No ceremony, just code. Blazing fast, typesafe binary serialization.&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://bebop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./assets/header.jpg&#34;&gt; &#xA;  &lt;img alt=&#34;Bebop&#34; src=&#34;https://raw.githubusercontent.com/betwixt-labs/bebop/master/assets/header.jpg&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Bebop&lt;/h1&gt; &#xA; &lt;h3&gt;No ceremony, just code.&lt;br&gt; Blazing fast, typesafe binary serialization.&lt;/h3&gt; &#xA; &lt;a href=&#34;https://github.com/betwixt-labs/bebop/raw/main/LICENSE.txt&#34;&gt; &lt;img alt=&#34;Apache License&#34; src=&#34;https://img.shields.io/github/license/betwixt-labs/bebop&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/jVfz9sMPWv&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1102669305537110036?color=7389D8&amp;amp;label&amp;amp;logo=discord&amp;amp;logoColor=ffffff&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://twitter.com/andrewmd5&#34;&gt; &lt;img alt=&#34;Twitter&#34; src=&#34;https://img.shields.io/twitter/url.svg?label=%40andrewmd5&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fandrewmd5&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;Bebop is an insanely fast data interchange format. Think JSON, except binary. Or think Protocol Buffers, except faster with a better DevEx. In fact, in benchmarks, Bebop is 100 TIMES faster than Protocol Buffers and 1000 TIMES faster than JSON.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1297077/235745675-fc8a18e2-361f-4b7b-b9c9-47155e511b0a.png&#34; alt=&#34;P12CpmA&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bebop is designed to be a modern, developer-friendly, and high-performance alternative to existing serialization formats. It&#39;s a great fit for any application that needs to serialize data, especially in performance-critical scenarios.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get familiar with the schema language and see what the generated code looks like, try out the &lt;a href=&#34;https://play.bebop.sh/&#34;&gt;playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üßô‚Äç‚ôÇÔ∏è&amp;nbsp; Supports &lt;a href=&#34;https://docs.bebop.sh/guide/getting-started-typescript/&#34;&gt;Typescript&lt;/a&gt;, &lt;a href=&#34;https://docs.bebop.sh/guide/getting-started-csharp/&#34;&gt;C#&lt;/a&gt;, &lt;a href=&#34;https://docs.bebop.sh/guide/getting-started-rust/&#34;&gt;Rust&lt;/a&gt;, C++, and more.&lt;/li&gt; &#xA; &lt;li&gt;üêé&amp;nbsp; Snappy DX - integrate &lt;code&gt;bebopc&lt;/code&gt; into your project with ease. Language support available in &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=betwixt.bebop-lang&#34;&gt;VSCode&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;üçÉ&amp;nbsp; Light - Bebop has zero deps and a tiny runtime footprint. Generated code is tightly optimized.&lt;/li&gt; &#xA; &lt;li&gt;üåó&amp;nbsp; RPC - build efficent APIs with &lt;a href=&#34;https://docs.bebop.sh/tempo/&#34;&gt;Tempo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;‚òÅÔ∏è&amp;nbsp; Runs everywhere - browsers, serverless platforms, and on bare metal.&lt;/li&gt; &#xA; &lt;li&gt;üìö&amp;nbsp; Extendable - write extensions for the compiler &lt;a href=&#34;https://docs.bebop.sh/chords/what-are-chords/&#34;&gt;in any language&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;üëâ For more information check out the &lt;a href=&#34;https://docs.bebop.sh&#34;&gt;docs&lt;/a&gt;. üëà&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=u1UZHXB_r6g&#34;&gt;&lt;em&gt;See You Space Cowboy&lt;/em&gt;...&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>