<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-14T01:26:37Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>slyh/Cities2-Various-Mods</title>
    <updated>2023-11-14T01:26:37Z</updated>
    <id>tag:github.com,2023-11-14:/slyh/Cities2-Various-Mods</id>
    <link href="https://github.com/slyh/Cities2-Various-Mods" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of mods for Cities: Skylines II&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This repository contains mods that offer minor quality-of-life improvements over the base game of Cities: Skylines II.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer: These modifications are highly experimental. Your game may crash more frequently, and your save files could be corrupted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;This project has moved to BepInEx version 6, which is not compatible with the previous BepInEx version 5&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Suggestions wanted! What additional signal phases do you think should be included in the Traffic Lights Enhancement mod? Leave your opinion in the &lt;a href=&#34;https://github.com/slyh/Cities2-Various-Mods/discussions&#34;&gt;Discussions section&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mods&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Traffic Lights Enhancement &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set traffic lights to various predefined signaling modes&lt;/li&gt; &#xA;   &lt;li&gt;Guide available &lt;a href=&#34;https://github.com/slyh/Cities2-Various-Mods/tree/main/TrafficLightsEnhancement/README.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Compatible with version 1.0.13f1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Remove BepInEx 5 if you have that installed. Otherwise, proceed to step 2&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To remove BepInEx 5, you need to delete the &lt;code&gt;BepInEx&lt;/code&gt; folder, the &lt;code&gt;doorstop_config.ini&lt;/code&gt; file, and the &lt;code&gt;winhttp.dll&lt;/code&gt; file from your game&#39;s installation directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://builds.bepinex.dev/projects/bepinex_be&#34;&gt;BepInEx 6&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Download &lt;code&gt;BepInEx-Unity.Mono-win-x64-6.0.0-be.674+82077ec.zip&lt;/code&gt; (or a newer version), and unzip all of its contents into the game&#39;s installation directory, typically &lt;code&gt;C:/Program Files (x86)/Steam/steamapps/common/Cities Skylines II&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The installation directory should now have the &lt;code&gt;BepInEx&lt;/code&gt; folder, the &lt;code&gt;doorstop_config.ini&lt;/code&gt; file, and the &lt;code&gt;winhttp.dll&lt;/code&gt; file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the game once, then close it. You can close it when the main menu appears&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the mod you like from the &lt;a href=&#34;https://github.com/slyh/Cities2-Various-Mods/releases&#34;&gt;release page&lt;/a&gt;. Unzip it into the &lt;code&gt;Cities Skylines II/BepInEx/plugins&lt;/code&gt; folder&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch the game, mods should be loaded automatically&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/optimus-code/Cities2Modding&#34;&gt;Cities2Modding&lt;/a&gt;: Info dump / guides for Cities Skylines 2 modding&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BepInEx/BepInEx&#34;&gt;BepInEx&lt;/a&gt;: Unity / XNA game patcher and plugin framework&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pardeike/Harmony&#34;&gt;Harmony&lt;/a&gt;: A library for patching, replacing and decorating .NET and Mono methods during runtime&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>reversedrooms/FurinaImpact</title>
    <updated>2023-11-14T01:26:37Z</updated>
    <id>tag:github.com,2023-11-14:/reversedrooms/FurinaImpact</id>
    <link href="https://github.com/reversedrooms/FurinaImpact" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Server backend reimplementation for some anime game&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td valign=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/twitter/twemoji/raw/master/assets/svg/1f1fa-1f1f8.svg?sanitize=true&#34; width=&#34;16&#34;&gt; English&lt;/td&gt; &#xA;    &lt;td valign=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reversedrooms/FurinaImpact/master/docs/README_ja-JP.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/twitter/twemoji/d94f4cf793e6d5ca592aa00f58a88f6a4229ad43/assets/svg/1f1ef-1f1f5.svg?sanitize=true&#34; width=&#34;16&#34;&gt; 日本语&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td valign=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reversedrooms/FurinaImpact/master/docs/README_zh-CN.md&#34;&gt;&lt;img src=&#34;https://em-content.zobj.net/thumbs/120/twitter/351/flag-china_1f1e8-1f1f3.png&#34; width=&#34;16&#34;&gt; 简中&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td valign=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reversedrooms/FurinaImpact/master/docs/README_zh-TW.md&#34;&gt;&lt;img src=&#34;https://em-content.zobj.net/thumbs/120/twitter/351/flag-china_1f1e8-1f1f3.png&#34; width=&#34;16&#34;&gt; 繁中&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td valign=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reversedrooms/FurinaImpact/master/docs/README_ru-ru.md&#34;&gt;&lt;img src=&#34;https://github.com/twitter/twemoji/raw/master/assets/svg/1f1f7-1f1fa.svg?sanitize=true&#34; width=&#34;16&#34;&gt; Русский&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;FurinaImpact&lt;/h1&gt; &#xA;&lt;p&gt;Server backend reimplementation for some game.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;You can build it with .NET 7 SDK&lt;/p&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;p&gt;You can get resources in our &lt;a href=&#34;https://discord.gg/sHZuMpCpVw&#34;&gt;Discord Server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Put your resources to folder with FurinaImpact.Gameserver executable&lt;/li&gt; &#xA; &lt;li&gt;Launch FurinaImpact.SDK and FurinaImpact.Gameserver&lt;/li&gt; &#xA; &lt;li&gt;Server is running.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Connecting&lt;/h3&gt; &#xA;&lt;p&gt;For connecting to FurinaImpact, you can use FurinaImpact.Proxy. Just launch it and setup your system proxy settings. SDK requests will be redirected.&lt;/p&gt; &#xA;&lt;h3&gt;Any questions?&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to ask your questions in our &lt;a href=&#34;https://discord.gg/sHZuMpCpVw&#34;&gt;Discord Server&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ricardojoserf/WhoamiAlternatives</title>
    <updated>2023-11-14T01:26:37Z</updated>
    <id>tag:github.com,2023-11-14:/ricardojoserf/WhoamiAlternatives</id>
    <link href="https://github.com/ricardojoserf/WhoamiAlternatives" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Different methods to get current username without using whoami&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Alternatives to whoami&lt;/h1&gt; &#xA;&lt;p&gt;Some experiments to retrieve the current username without calling whoami.exe or similar binaries.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Method 1: PRTL_USER_PROCESS_PARAMETERS&lt;/h2&gt; &#xA;&lt;p&gt;Get the environment variables from the PEB structure and parse it to find the username.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationprocess&#34;&gt;NtQueryInformationProcess&lt;/a&gt; returns a &#34;PROCESS_BASIC_INFORMATION&#34; structure containing a pointer to the PEB base address.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The PEB structure contains a pointer &#34;ProcessParameters&#34; to a &lt;a href=&#34;https://www.geoffchappell.com/studies/windows/km/ntoskrnl/inc/api/pebteb/rtl_user_process_parameters.htm&#34;&gt;RTL_USER_PROCESS_PARAMETERS&lt;/a&gt; structure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From that structure you can get a pointer &#34;Environment&#34; to the environment variables and a pointer &#34;EnvironmentSize&#34; to the size of the environment variables.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reading the number of bytes indicated in &#34;EnvironmentSize&#34; from the address &#34;Environment&#34; as UNICODE text, parse the environment variables and print the one called &#34;USERNAME&#34;. If you want all the env variables, check &lt;a href=&#34;https://github.com/ricardojoserf/StealthyEnv&#34;&gt;this repository&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ricardojoserf/ricardojoserf.github.io/master/images/stealthyenv/Screenshot_0.png&#34; alt=&#34;esquema&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/Screenshot_1.png?raw=true&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Method 2: LookupAccountSid&lt;/h2&gt; &#xA;&lt;p&gt;Get access to a token, find the user&#39;s SID in string format and translate it using the function LookupAccountSid.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntopenprocesstoken&#34;&gt;NtOpenProcessToken&lt;/a&gt; creates an access token associated with the current process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntqueryinformationtoken&#34;&gt;NtQueryInformationToken&lt;/a&gt; gets information from the token we created, using the value &#34;tokenUser&#34; (1) in the field &#34;TOKEN_INFORMATION_CLASS&#34; we get information about the username which is stored in the pointer &#34;TokenInformation&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/sddl/nf-sddl-convertsidtostringsida&#34;&gt;ConvertSidToStringSid&lt;/a&gt; converts the username&#39;s SID in binary format to string format.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupaccountsida&#34;&gt;LookupAccountSid&lt;/a&gt; takes the SID in string format and returns the username.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/LookupAccountSid_esquema.png?raw=true&#34; alt=&#34;esquema&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/Screenshot_2.png?raw=true&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Method 3: LsaLookupSids&lt;/h2&gt; &#xA;&lt;p&gt;Get acccess to a token and a Policy object and get the username with the function LsaLookupSids.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Functions NtOpenProcessToken and NtQueryInformationToken are used like in method 2, return a pointer &#34;TokenInformation&#34; with the user&#39;s SID in binary format.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-lsaopenpolicy&#34;&gt;LsaOpenPolicy&lt;/a&gt; creates a handle to the Policy object in the current system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Function &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-lsalookupsids&#34;&gt;LsaLookupSids&lt;/a&gt; takes a pointer to the SID and returns an structure LSA_TRANSLATED_NAME containing the username.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/LsaLookupSids_esquema.drawio.png?raw=true&#34; alt=&#34;esquema&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/Screenshot_3.png?raw=true&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Method 4: NamedPipe&lt;/h2&gt; &#xA;&lt;p&gt;Create a named pipe and a secondary thread, write and read from the named pipe and get the username from the undocumented function NpGetUsername.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ricardojoserf/ricardojoserf.github.io/raw/master/images/whoamialternatives/NamedPipe_esquema.png?raw=true&#34; alt=&#34;esquema&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ricardojoserf/ricardojoserf.github.io/master/images/whoamialternatives/Screenshot_4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Method 5: ADSystemInfo&lt;/h2&gt; &#xA;&lt;p&gt;Get username if the computer is domain joined using the &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-cocreateinstance&#34;&gt;CoCreateInstance&lt;/a&gt; function as in &lt;a href=&#34;https://learn.microsoft.com/es-es/windows/win32/api/iads/nn-iads-iadsadsysteminfo&#34;&gt;MSDN example&lt;/a&gt;. It uses the class ADSystemInfoClass and the interfaces ADSystemInfo and IADsADSystemInfo from ActiveDS.dll, which are already in the project folder so you don&#39;t need the DLL.&lt;/p&gt; &#xA;&lt;p&gt;If there is no connection with the AD:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ricardojoserf/ricardojoserf.github.io/master/images/whoamialternatives/Screenshot_5.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If there is connection:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ricardojoserf/ricardojoserf.github.io/master/images/whoamialternatives/Screenshot_6.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/vxunderground&#34;&gt;vx-underground&#39;s Twitter account&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>