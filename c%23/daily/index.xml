<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-30T01:31:27Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AbkarinoMHM/PS4SysconTools</title>
    <updated>2023-06-30T01:31:27Z</updated>
    <id>tag:github.com,2023-06-30:/AbkarinoMHM/PS4SysconTools</id>
    <link href="https://github.com/AbkarinoMHM/PS4SysconTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PS4 Syscon Tools is a free solution that allow you to manipulate original PlayStation 4 Syscon chip (Renesas RL78/G13).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PS4 Syscon Tools By Abkarino &amp;amp; EgyCnq:&lt;/h1&gt; &#xA;&lt;p&gt;PS4 Syscon Tools is a free solution (software &amp;amp; hardware) that allow you to manipulate original PlayStation 4 Syscon chip (Renesas RL78/G13). It consists of 2 projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PS4 Syscon Tools (PC client to allow you to control your PS4 Syscon Flasher hardware).&lt;/li&gt; &#xA; &lt;li&gt;PS4 Syscon Flasher (Hardware flasher based currently on Teensy++ 2.0 - Teensy 4.0).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Syscon Flash Dumps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full (&amp;lt;50 sec).&lt;/li&gt; &#xA;   &lt;li&gt;Partial (dump any specific block or block range).&lt;/li&gt; &#xA;   &lt;li&gt;NVS/SNVS only.&lt;br&gt; Note : the read process here not use the infinty loop method that continue to dump the whole memory content and pass it to TOOL0 like some other tools we use more effecient way that can read immediately any block you want.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Syscon Flash Write:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full (&amp;lt;1.5 min).&lt;/li&gt; &#xA;   &lt;li&gt;Partial (write any specific block or block range).&lt;/li&gt; &#xA;   &lt;li&gt;NVS/SNVS only.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Syscon Flash erase:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full (&amp;lt;4.3 sec).&lt;/li&gt; &#xA;   &lt;li&gt;Partial (erase any specific block or block range).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable Syscon Debug mode:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Allow you to only connect 3 wires to read/write your syscon by enabling OCD flag.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note : The process done on the fly so no need to dump the entire syscon and apply the patch then rewrite like some other tools.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements:&lt;/h1&gt; &#xA;&lt;p&gt;What you will need ?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Teensy++ 2.0.&lt;/li&gt; &#xA; &lt;li&gt;(100 to 200)~ ohm resistor.&lt;/li&gt; &#xA; &lt;li&gt;wires.&lt;/li&gt; &#xA; &lt;li&gt;LQFP 64 - 100 Socket Adapter (Optional)&lt;/li&gt; &#xA; &lt;li&gt;Soldering skills&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Connection Digrams:&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to HW directory to check the wiring digram for your hardware.&lt;/p&gt; &#xA;&lt;h1&gt;Usage - Tutorial:&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to PS4 Syscon Tool Tutorial on the following link: &lt;a href=&#34;https://www.youtube.com/watch?v=Abu-M_z_I-c&amp;amp;t=11s&#34;&gt;https://www.youtube.com/watch?v=Abu-M_z_I-c&amp;amp;t=11s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Creadit:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;droogie (&lt;a href=&#34;https://twitter.com/droogie1xp&#34;&gt;https://twitter.com/droogie1xp&lt;/a&gt;): For early syscon investigations &amp;amp; identifying original Syscon chip arch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;fail0verflow (&lt;a href=&#34;https://twitter.com/fail0verflow&#34;&gt;https://twitter.com/fail0verflow&lt;/a&gt;): For initial Writeup on the syscon attack, actually without their blog we will not be able to do any syscon hacks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;wildcard (&lt;a href=&#34;https://twitter.com/VVildCard777&#34;&gt;https://twitter.com/VVildCard777&lt;/a&gt;): For first public implementation for the Syscon glitcher that allow us to dump our Syscon flash and also for helping us a lot during this project development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DarkNESmonk: For original SysGlitch for Arduino.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;For Updates and Release Info:&lt;/h1&gt; &#xA;&lt;p&gt;Please follow us on twitter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Abkarino (&lt;a href=&#34;https://twitter.com/AbkarinoMHM&#34;&gt;https://twitter.com/AbkarinoMHM&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;EgyCnq (&lt;a href=&#34;https://twitter.com/EgyCnq&#34;&gt;https://twitter.com/EgyCnq&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As well as subscribe to our Youtube channle for more info and tutorials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@AbkarinoMHM&#34;&gt;https://www.youtube.com/@AbkarinoMHM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>oqtane/oqtane.framework</title>
    <updated>2023-06-30T01:31:27Z</updated>
    <id>tag:github.com,2023-06-30:/oqtane/oqtane.framework</id>
    <link href="https://github.com/oqtane/oqtane.framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CMS &amp; Application Framework for Blazor &amp; .NET MAUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Latest Release&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v4.0.0&#34;&gt;4.0.0&lt;/a&gt; was released on June 26, 2023 and is a major framework upgrade to .NET 7. This release includes 104 pull requests by 5 different contributors, pushing the total number of project commits all-time over 3600. The Oqtane framework continues to evolve at a rapid pace to meet the needs of .NET developers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Foqtane%2Foqtane.framework%2Fmaster%2Fazuredeploy.json&#34;&gt;&lt;img src=&#34;https://aka.ms/deploytoazurebutton&#34; alt=&#34;Deploy to Azure&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Oqtane Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/oqtane.png?raw=true&#34; alt=&#34;Oqtane&#34; title=&#34;Oqtane&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Oqtane is an open source CMS and Application Framework that provides advanced functionality for developing web, mobile, and desktop applications on .NET. It leverages Blazor to compose a fully dynamic digital experience which can be hosted on Blazor Server, Blazor WebAssembly, or Blazor Hybrid (via .NET MAUI).&lt;/p&gt; &#xA;&lt;p&gt;Oqtane is being developed based on some fundamental principles which are outlined in the &lt;a href=&#34;https://www.oqtane.org/blog/!/20/oqtane-philosophy&#34;&gt;Oqtane Philosophy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this project is owned by the .NET Foundation and is governed by the &lt;strong&gt;&lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Contributor Covenant Code of Conduct&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using Version 4:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;strong&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/7.0&#34;&gt;.NET 7 SDK&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the latest edition (v17.0 or higher) of &lt;a href=&#34;https://visualstudio.microsoft.com/vs/preview/#download-preview&#34;&gt;Visual Studio 2022&lt;/a&gt; with the &lt;strong&gt;ASP.NET and web development&lt;/strong&gt; workload enabled. Oqtane works with ALL editions of Visual Studio from Community to Enterprise. If you wish to use LocalDB for development ( not a requirement as Oqtane supports SQLite, mySQL, and PostgreSQL ) you must also install the &lt;strong&gt;Data storage and processing&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;clone the Oqtane dev branch source code to your local system. Open the &lt;strong&gt;Oqtane.sln&lt;/strong&gt; solution file and Build the solution. Make sure you specify Oqtane.Server as the Startup Project and then Run the application.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installing an official release:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A detailed set of instructions for installing Oqtane on IIS is located here: &lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/542/installing-oqtane-on-iis&#34;&gt;Installing Oqtane on IIS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Instructions for upgrading Oqtane are located here: &lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/543/upgrading-oqtane&#34;&gt;Upgrading Oqtane&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Additional Instructions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have already installed a previous version of Oqtane and you wish to do a clean database install, simply reset the DefaultConnection value in the Oqtane.Server\appsettings.json file to &#34;&#34;. This will trigger a re-install when you run the application which will execute the database installation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to submit pull requests make sure you install the &lt;a href=&#34;https://visualstudio.github.com/&#34;&gt;Github Extension For Visual Studio&lt;/a&gt;. It is recommended you ignore any local changes you have made to the appsettings.json file before you submit a pull request. To automate this activity, open a command prompt and navigate to the /Oqtane.Server/ folder and enter the command &#34;git update-index --skip-worktree appsettings.json&#34;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Video Series&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are getting started with Oqtane, a &lt;a href=&#34;https://www.youtube.com/watch?v=JPfUZPlRRCE&amp;amp;list=PLYhXmd7yV0elLNLfQwZBUlM7ZSMYPTZ_f&#34;&gt;series of videos&lt;/a&gt; are available which explain how to install the product, interact with the user interface, and develop custom modules.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;There is a separate &lt;a href=&#34;https://github.com/oqtane/oqtane.docs&#34;&gt;Documentation repository&lt;/a&gt; which contains a variety of types of documentation for Oqtane, including API documentation that is auto generated using Docfx. The contents of the repository is published to Githib Pages and is available at &lt;a href=&#34;https://docs.oqtane.org/&#34;&gt;https://docs.oqtane.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;This project is open source, and therefore is a work in progress...&lt;/p&gt; &#xA;&lt;p&gt;Backlog (TBD)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Azure Autoscale support (ie. web farm)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Folder Providers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Generative AI Integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;5.0.0 (Q4 2023)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Migration to .NET 8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v4.0.0&#34;&gt;4.0.0&lt;/a&gt; ( June 26, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Migration to .NET 7&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improved JavaScript, CSS, and Meta support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Optimized Client Assembly Loading&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Routable Modules (ie. declarative configuration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Site Template improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; IEventSubscriber interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.4.3&#34;&gt;3.4.3&lt;/a&gt; ( May 3, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.4.2&#34;&gt;3.4.2&lt;/a&gt; ( Mar 29, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.4.1&#34;&gt;3.4.1&lt;/a&gt; ( Mar 13, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.4.0&#34;&gt;3.4.0&lt;/a&gt; ( Mar 12, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Permissions performance optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Connection string management improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; XML site map generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OIDC integration with User Profiles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.3.1&#34;&gt;3.3.1&lt;/a&gt; ( Jan 14, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.3.0&#34;&gt;3.3.0&lt;/a&gt; ( Jan 12, 2023 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic Authorization Policies&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Entity-Level Permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extended Module Permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.2.1&#34;&gt;3.2.1&lt;/a&gt; ( Oct 17, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Server Event System&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.2.0&#34;&gt;3.2.0&lt;/a&gt; ( Sep 13, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; .NET MAUI / Blazor Hybrid support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upgrade to Bootstrap 5.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.1.3&#34;&gt;3.1.3&lt;/a&gt; ( Jun 27, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.1.2&#34;&gt;3.1.2&lt;/a&gt; ( May 14, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.1.1&#34;&gt;3.1.1&lt;/a&gt; ( May 3, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stabilization improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.1.0&#34;&gt;3.1.0&lt;/a&gt; ( Apr 5, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User account lockout support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Two factor authentication support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Per-site configuration of password complexity, lockout criteria&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; External login support via OAuth2 / OpenID Connect&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for Single Sign On (SSO) via OpenID Connect&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; External client support via Jwt tokens&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Downstream API support via Jwt tokens&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CSS resource hierarchy support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Site structure/content migration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Event log notifications&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 404 page handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Property change component notifications&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for ES6 JavaScript modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.0.3&#34;&gt;3.0.3&lt;/a&gt; ( Feb 15, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Url fragment and anchor navigation support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Meta tag support in page head&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Html/Text content versioning support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.0.2&#34;&gt;3.0.2&lt;/a&gt; ( Jan 16, 2022 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Default alias specification, auto alias registration, redirect logic&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improvements to visitor tracking and url mapping&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scheduler enhancements for stop/start, weekly and one-time jobs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Purge job for daily housekeeping of event log and visitors&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Granular security filtering for Settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.0.1&#34;&gt;3.0.1&lt;/a&gt; ( Dec 12, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Url mapping for broken links, content migration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Visitor tracking for usage insights, personalization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User experience improvements in Page and Module management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v3.0.0&#34;&gt;3.0.0&lt;/a&gt; ( Nov 11, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Migration to .NET 6&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Blazor hosting model flexibility per site&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Blazor WebAssembly prerendering support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.3.1&#34;&gt;2.3.1&lt;/a&gt; ( Sep 27, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Complete UI migration to Bootstrap 5 and HTML5 form validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improve module/theme installation and add support for commercial extensions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Replace System.Drawing with ImageSharp&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Image resizing service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.2.0&#34;&gt;2.2.0&lt;/a&gt; ( Jul 6, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bootstrap 5 Upgrade&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Package Service integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Default and Shared Resource File inclusion&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Startup Error logging&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API Controller Validation and Logging&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.1.0&#34;&gt;2.1.0&lt;/a&gt; ( Jun 4, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cross Platform Database Support ( ie. LocalDB, SQL Server, SQLite, MySQL, PostgreSQL ) - see &lt;a href=&#34;https://github.com/oqtane/oqtane.framework/discussions/964&#34;&gt;#964&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Utilize EF Core Migrations - see &lt;a href=&#34;https://github.com/oqtane/oqtane.framework/discussions/964&#34;&gt;#964&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Public Content Folder support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-tenant Infrastructure improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User Authorization optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Consolidation of Package Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Blazor Server Pre-rendering&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Translation Package installation support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.0.2&#34;&gt;2.0.2&lt;/a&gt; ( Apr 19, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Assorted fixes and user experience improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.0.1&#34;&gt;2.0.1&lt;/a&gt; ( Feb 27, 2021 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Complete Static Localization of Admin UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v2.0.0&#34;&gt;2.0.0&lt;/a&gt; ( Nov 11, 2020 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Migration to .NET 5&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Static Localization ( ie. labels, help text, etc.. )&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improved JavaScript Reference Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Performance Optimizations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Developer Productivity Enhancements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oqtane/oqtane.framework/releases/tag/v1.0.0&#34;&gt;1.0.0&lt;/a&gt; ( May 19, 2020 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Migration to .NET Core 3.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-Tenant ( Shared Database &amp;amp; Isolated Database )&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modular Architecture&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Headless API with Swagger Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic Page Compositing Model / Site &amp;amp; Page Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authentication / User Management / Profile Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authorization / Roles Management / Granular Permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic Routing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extensibility via Custom Modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extensibility via Custom Themes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Event Logging / Audit Trail&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Folder / File Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Recycle Bin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scheduled Jobs ( Background Processing )&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Notifications / Email Delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Seamless Upgrade Experience&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Progressive Web Application Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JavaScript Lazy Loading&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic CSS/Lazy Loading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/7/announcing-oqtane-a-modular-application-framework-for-blazor&#34;&gt;POC&lt;/a&gt; ( May 9, 2019 )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Initial public release on GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; .NET Core 3.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;Oqtane was created by &lt;a href=&#34;https://www.linkedin.com/in/shaunbrucewalker/&#34;&gt;Shaun Walker&lt;/a&gt; and is inspired by the DotNetNuke web application framework. Initially created as a proof of concept, Oqtane is a native Blazor application written from the ground up using modern .NET Core technology and a Single Page Application (SPA) architecture. It is a modular application framework offering a fully dynamic page compositing model, multi-site support, designer friendly themes, and extensibility via third party modules.&lt;/p&gt; &#xA;&lt;h1&gt;Release Announcements&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/63/announcing-oqtane-4-0-for-net-7&#34;&gt;Oqtane 4.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/56/oqtane-3-4-0-released&#34;&gt;Oqtane 3.4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/54/oqtane-3-3-0-released&#34;&gt;Oqtane 3.3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/50/oqtane-3-2-for-net-maui-blazor-hybrid&#34;&gt;Oqtane 3.2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/blog/!/41/oqtane-3-1-released&#34;&gt;Oqtane 3.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/551/announcing-oqtane-30-for-net-6&#34;&gt;Oqtane 3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/549/oqtane-22-upgrades-to-bootstrap-5&#34;&gt;Oqtane 2.2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/548/oqtane-21-now-supports-multiple-databases&#34;&gt;Oqtane 2.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/544/announcing-oqtane-20-for-net-5&#34;&gt;Oqtane 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/540/announcing-oqtane-10-a-modular-application-framework-for-blazor&#34;&gt;Oqtane 1.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oqtane.org/Resources/Blog/PostId/520/announcing-oqtane-a-modular-application-framework-for-blazor&#34;&gt;Oqtane POC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Reference Implementations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://builtonblazor.net&#34;&gt;Built On Blazor!&lt;/a&gt; - a showcase of sites built on Blazor&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.dnfprojects.com&#34;&gt;.NET Foundation Project Trends&lt;/a&gt; - tracks the most active .NET Foundation open source projects based on GitHub activity&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The following diagram visualizes the client and server components in the Oqtane architecture.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/Architecture.png?raw=true&#34; alt=&#34;Architecture&#34; title=&#34;Oqtane Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Databases&lt;/h1&gt; &#xA;&lt;p&gt;As of version 2.1, Oqtane supports multiple relational database providers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/dev/screenshots/databases.png?raw=true&#34; alt=&#34;Databases&#34; title=&#34;Oqtane Databases&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Example Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;Install Wizard:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/Installer.png?raw=true&#34; alt=&#34;Installer&#34; title=&#34;Installer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default view after installation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot0.png?raw=true&#34; alt=&#34;Home&#34; title=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A seamless login flow utilizing .NET Core Identity services:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot1.png?raw=true&#34; alt=&#34;Login&#34; title=&#34;Login&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Main view for authorized users, allowing full management of modules and content:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot2.png?raw=true&#34; alt=&#34;Admin View&#34; title=&#34;Admin View&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Content editing user experience using modal dialog:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot3.png?raw=true&#34; alt=&#34;Edit Content&#34; title=&#34;Edit Content&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Context menu for managing specific module on page:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot4.png?raw=true&#34; alt=&#34;Manage Module&#34; title=&#34;Manage Module&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Control panel for adding, editing, and deleting pages as well as adding new modules to a page:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot5.png?raw=true&#34; alt=&#34;Manage Page&#34; title=&#34;Manage Page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Admin dashboard for accessing the various administrative features of the framework:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot6.png?raw=true&#34; alt=&#34;Admin Dashboard&#34; title=&#34;Admin Dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Responsive design mobile view:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/oqtane/framework/raw/master/screenshots/screenshot7.png?raw=true&#34; alt=&#34;Mobile View&#34; title=&#34;Mobile View&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet-state-machine/stateless</title>
    <updated>2023-06-30T01:31:27Z</updated>
    <id>tag:github.com,2023-06-30:/dotnet-state-machine/stateless</id>
    <link href="https://github.com/dotnet-state-machine/stateless" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple library for creating state machines in C# code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stateless &lt;a href=&#34;https://github.com/dotnet-state-machine/stateless/actions/workflows/BuildAndTestOnPullRequests.yml&#34;&gt;&lt;img src=&#34;https://github.com/dotnet-state-machine/stateless/actions/workflows/BuildAndTestOnPullRequests.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/stateless&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Stateless.svg?sanitize=true&#34; alt=&#34;NuGet Pre Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/dotnet-state-machine/stateless?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/dotnet-state-machine/stateless.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/dotnet-state-machine/stateless&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackoverflow.com/questions/tagged/stateless-state-machine&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-tag-orange.svg?sanitize=true&#34; alt=&#34;Stack Overflow&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create &lt;em&gt;state machines&lt;/em&gt; and lightweight &lt;em&gt;state machine-based workflows&lt;/em&gt; directly in .NET code:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var phoneCall = new StateMachine&amp;lt;State, Trigger&amp;gt;(State.OffHook);&#xA;&#xA;phoneCall.Configure(State.OffHook)&#xA;    .Permit(Trigger.CallDialled, State.Ringing);&#xA;&#xA;phoneCall.Configure(State.Connected)&#xA;    .OnEntry(t =&amp;gt; StartCallTimer())&#xA;    .OnExit(t =&amp;gt; StopCallTimer())&#xA;    .InternalTransition(Trigger.MuteMicrophone, t =&amp;gt; OnMute())&#xA;    .InternalTransition(Trigger.UnmuteMicrophone, t =&amp;gt; OnUnmute())&#xA;    .InternalTransition&amp;lt;int&amp;gt;(_setVolumeTrigger, (volume, t) =&amp;gt; OnSetVolume(volume))&#xA;    .Permit(Trigger.LeftMessage, State.OffHook)&#xA;    .Permit(Trigger.PlacedOnHold, State.OnHold);&#xA;&#xA;// ...&#xA;&#xA;phoneCall.Fire(Trigger.CallDialled);&#xA;Assert.AreEqual(State.Ringing, phoneCall.State);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This project, as well as the example above, was inspired by &lt;a href=&#34;http://simplestatemachine.codeplex.com/&#34;&gt;Simple State Machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Most standard state machine constructs are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generic support for states and triggers of any .NET type (numbers, strings, enums, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Hierarchical states&lt;/li&gt; &#xA; &lt;li&gt;Entry/exit actions for states&lt;/li&gt; &#xA; &lt;li&gt;Guard clauses to support conditional transitions&lt;/li&gt; &#xA; &lt;li&gt;Introspection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some useful extensions are also provided:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ability to store state externally (for example, in a property tracked by an ORM)&lt;/li&gt; &#xA; &lt;li&gt;Parameterised triggers&lt;/li&gt; &#xA; &lt;li&gt;Reentrant states&lt;/li&gt; &#xA; &lt;li&gt;Export to DOT graph&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hierarchical States&lt;/h3&gt; &#xA;&lt;p&gt;In the example below, the &lt;code&gt;OnHold&lt;/code&gt; state is a substate of the &lt;code&gt;Connected&lt;/code&gt; state. This means that an &lt;code&gt;OnHold&lt;/code&gt; call is still connected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;phoneCall.Configure(State.OnHold)&#xA;    .SubstateOf(State.Connected)&#xA;    .Permit(Trigger.TakenOffHold, State.Connected)&#xA;    .Permit(Trigger.PhoneHurledAgainstWall, State.PhoneDestroyed);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to the &lt;code&gt;StateMachine.State&lt;/code&gt; property, which will report the precise current state, an &lt;code&gt;IsInState(State)&lt;/code&gt; method is provided. &lt;code&gt;IsInState(State)&lt;/code&gt; will take substates into account, so that if the example above was in the &lt;code&gt;OnHold&lt;/code&gt; state, &lt;code&gt;IsInState(State.Connected)&lt;/code&gt; would also evaluate to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Entry/Exit actions&lt;/h3&gt; &#xA;&lt;p&gt;In the example, the &lt;code&gt;StartCallTimer()&lt;/code&gt; method will be executed when a call is connected. The &lt;code&gt;StopCallTimer()&lt;/code&gt; will be executed when call completes (by either hanging up or hurling the phone against the wall.)&lt;/p&gt; &#xA;&lt;p&gt;The call can move between the &lt;code&gt;Connected&lt;/code&gt; and &lt;code&gt;OnHold&lt;/code&gt; states without the &lt;code&gt;StartCallTimer()&lt;/code&gt; and &lt;code&gt;StopCallTimer()&lt;/code&gt; methods being called repeatedly because the &lt;code&gt;OnHold&lt;/code&gt; state is a substate of the &lt;code&gt;Connected&lt;/code&gt; state.&lt;/p&gt; &#xA;&lt;p&gt;Entry/Exit action handlers can be supplied with a parameter of type &lt;code&gt;Transition&lt;/code&gt; that describes the trigger, source and destination states.&lt;/p&gt; &#xA;&lt;h3&gt;Internal transitions&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes a trigger does needs to be handled, but the state shouldn&#39;t change. This is an internal transition. Use &lt;code&gt;InternalTransition&lt;/code&gt; for this.&lt;/p&gt; &#xA;&lt;h3&gt;Initial state transitions&lt;/h3&gt; &#xA;&lt;p&gt;A substate can be marked as initial state. When the state machine enters the super state it will also automatically enter the substate. This can be configured like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    sm.Configure(State.B)&#xA;        .InitialTransition(State.C);&#xA;&#xA;    sm.Configure(State.C)&#xA;        .SubstateOf(State.B);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Due to Stateless&#39; internal structure, it does not know when it is &#34;started&#34;. This makes it impossible to handle an initial transition in the traditional way. It is possible to work around this limitation by adding a dummy initial state, and then use Activate() to &#34;start&#34; the state machine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;    sm.Configure(InitialState)&#xA;        .OnActivate(() =&amp;gt; sm.Fire(LetsGo)))&#xA;        .Permit(LetsGo, StateA)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;External State Storage&lt;/h3&gt; &#xA;&lt;p&gt;Stateless is designed to be embedded in various application models. For example, some ORMs place requirements upon where mapped data may be stored, and UI frameworks often require state to be stored in special &#34;bindable&#34; properties. To this end, the &lt;code&gt;StateMachine&lt;/code&gt; constructor can accept function arguments that will be used to read and write the state values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var stateMachine = new StateMachine&amp;lt;State, Trigger&amp;gt;(&#xA;    () =&amp;gt; myState.Value,&#xA;    s =&amp;gt; myState.Value = s);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example the state machine will use the &lt;code&gt;myState&lt;/code&gt; object for state storage.&lt;/p&gt; &#xA;&lt;p&gt;Another example can be found in the JsonExample solution, located in the example folder.&lt;/p&gt; &#xA;&lt;h3&gt;Activation / Deactivation&lt;/h3&gt; &#xA;&lt;p&gt;It might be necessary to perform some code before storing the object state, and likewise when restoring the object state. Use &lt;code&gt;Deactivate&lt;/code&gt; and &lt;code&gt;Activate&lt;/code&gt; for this. Activation should only be called once before normal operation starts, and once before state storage.&lt;/p&gt; &#xA;&lt;h3&gt;Introspection&lt;/h3&gt; &#xA;&lt;p&gt;The state machine can provide a list of the triggers that can be successfully fired within the current state via the &lt;code&gt;StateMachine.PermittedTriggers&lt;/code&gt; property. Use &lt;code&gt;StateMachine.GetInfo()&lt;/code&gt; to retreive information about the state configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Guard Clauses&lt;/h3&gt; &#xA;&lt;p&gt;The state machine will choose between multiple transitions based on guard clauses, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;phoneCall.Configure(State.OffHook)&#xA;    .PermitIf(Trigger.CallDialled, State.Ringing, () =&amp;gt; IsValidNumber)&#xA;    .PermitIf(Trigger.CallDialled, State.Beeping, () =&amp;gt; !IsValidNumber);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Guard clauses within a state must be mutually exclusive (multiple guard clauses cannot be valid at the same time.) Substates can override transitions by respecifying them, however substates cannot disallow transitions that are allowed by the superstate.&lt;/p&gt; &#xA;&lt;p&gt;The guard clauses will be evaluated whenever a trigger is fired. Guards should therefore be made side effect free.&lt;/p&gt; &#xA;&lt;h3&gt;Parameterised Triggers&lt;/h3&gt; &#xA;&lt;p&gt;Strongly-typed parameters can be assigned to triggers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var assignTrigger = stateMachine.SetTriggerParameters&amp;lt;string&amp;gt;(Trigger.Assign);&#xA;&#xA;stateMachine.Configure(State.Assigned)&#xA;    .OnEntryFrom(assignTrigger, email =&amp;gt; OnAssigned(email));&#xA;&#xA;stateMachine.Fire(assignTrigger, &#34;joe@example.com&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Trigger parameters can be used to dynamically select the destination state using the &lt;code&gt;PermitDynamic()&lt;/code&gt; configuration method.&lt;/p&gt; &#xA;&lt;h3&gt;Ignored Transitions and Reentrant States&lt;/h3&gt; &#xA;&lt;p&gt;Firing a trigger that does not have an allowed transition associated with it will cause an exception to be thrown.&lt;/p&gt; &#xA;&lt;p&gt;To ignore triggers within certain states, use the &lt;code&gt;Ignore(TTrigger)&lt;/code&gt; directive:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;phoneCall.Configure(State.Connected)&#xA;    .Ignore(Trigger.CallDialled);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, a state can be marked reentrant so its entry and exit actions will fire even when transitioning from/to itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;stateMachine.Configure(State.Assigned)&#xA;    .PermitReentry(Trigger.Assigned)&#xA;    .OnEntry(() =&amp;gt; SendEmailToAssignee());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, triggers must be ignored explicitly. To override Stateless&#39;s default behaviour of throwing an exception when an unhandled trigger is fired, configure the state machine using the &lt;code&gt;OnUnhandledTrigger&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;stateMachine.OnUnhandledTrigger((state, trigger) =&amp;gt; { });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;State change notifications (events)&lt;/h3&gt; &#xA;&lt;p&gt;Stateless supports 2 types of state machine events:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;State transition&lt;/li&gt; &#xA; &lt;li&gt;State machine transition completed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;State transition&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;stateMachine.OnTransitioned((transition) =&amp;gt; { });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This event will be invoked every time the state machine changes state.&lt;/p&gt; &#xA;&lt;h4&gt;State machine transition completed&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;stateMachine.OnTransitionCompleted((transition) =&amp;gt; { });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This event will be invoked at the very end of the trigger handling, after the last entry action have been executed.&lt;/p&gt; &#xA;&lt;h3&gt;Export to DOT graph&lt;/h3&gt; &#xA;&lt;p&gt;It can be useful to visualize state machines on runtime. With this approach the code is the authoritative source and state diagrams are by-products which are always up to date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;phoneCall.Configure(State.OffHook)&#xA;    .PermitIf(Trigger.CallDialled, State.Ringing, IsValidNumber);&#xA;    &#xA;string graph = UmlDotGraph.Format(phoneCall.GetInfo());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;UmlDotGraph.Format()&lt;/code&gt; method returns a string representation of the state machine in the &lt;a href=&#34;https://en.wikipedia.org/wiki/DOT_(graph_description_language)&#34;&gt;DOT graph language&lt;/a&gt;, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dot&#34;&gt;digraph {&#xA;  OffHook -&amp;gt; Ringing [label=&#34;CallDialled [IsValidNumber]&#34;];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can then be rendered by tools that support the DOT graph language, such as the &lt;a href=&#34;http://www.graphviz.org/doc/info/command.html&#34;&gt;dot command line tool&lt;/a&gt; from &lt;a href=&#34;http://www.graphviz.org&#34;&gt;graphviz.org&lt;/a&gt; or &lt;a href=&#34;https://github.com/mdaines/viz.js&#34;&gt;viz.js&lt;/a&gt;. See &lt;a href=&#34;http://www.webgraphviz.com&#34;&gt;http://www.webgraphviz.com&lt;/a&gt; for instant gratification. Command line example: &lt;code&gt;dot -T pdf -o phoneCall.pdf phoneCall.dot&lt;/code&gt; to generate a PDF file.&lt;/p&gt; &#xA;&lt;h3&gt;Async triggers&lt;/h3&gt; &#xA;&lt;p&gt;On platforms that provide &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;, the &lt;code&gt;StateMachine&lt;/code&gt; supports &lt;code&gt;async&lt;/code&gt; entry/exit actions and so-on:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;stateMachine.Configure(State.Assigned)&#xA;    .OnEntryAsync(async () =&amp;gt; await SendEmailToAssignee());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asynchronous handlers must be registered using the &lt;code&gt;*Async()&lt;/code&gt; methods in these cases.&lt;/p&gt; &#xA;&lt;p&gt;To fire a trigger that invokes asynchronous actions, the &lt;code&gt;FireAsync()&lt;/code&gt; method must be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await stateMachine.FireAsync(Trigger.Assigned);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; while &lt;code&gt;StateMachine&lt;/code&gt; may be used &lt;em&gt;asynchronously&lt;/em&gt;, it remains single-threaded and may not be used &lt;em&gt;concurrently&lt;/em&gt; by multiple threads.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Features&lt;/h2&gt; &#xA;&lt;h3&gt;Retaining the SynchronizationContext&lt;/h3&gt; &#xA;&lt;p&gt;In specific situations where all handler methods must be invoked with the consumer&#39;s SynchronizationContext, set the &lt;em&gt;RetainSynchronizationContext&lt;/em&gt; property on creation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var stateMachine = new StateMachine&amp;lt;State, Trigger&amp;gt;(initialState)&#xA;{&#xA;    RetainSynchronizationContext = true&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting this is vital within a Microsoft Orleans Grain for example, which requires the SynchronizationContext in order to make calls to other Grains.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Stateless runs on .NET 4.0+ and practically all modern .NET platforms by targeting .NET Standard 1.0 and .NET Standard2.0. Visual Studio 2017 or later is required to build the solution.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to this project. Check &lt;a href=&#34;https://raw.githubusercontent.com/dotnet-state-machine/stateless/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Project Goals&lt;/h2&gt; &#xA;&lt;p&gt;This page is an almost-complete description of Stateless, and its explicit aim is to remain minimal.&lt;/p&gt; &#xA;&lt;p&gt;Please use the issue tracker or the if you&#39;d like to report problems or discuss features.&lt;/p&gt; &#xA;&lt;p&gt;(&lt;em&gt;Why the name? Stateless implements the set of rules regarding state transitions, but, at least when the delegate version of the constructor is used, doesn&#39;t maintain any internal state itself.&lt;/em&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>