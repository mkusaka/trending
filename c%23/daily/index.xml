<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-27T01:29:23Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dmcxblue/SharpBlackout</title>
    <updated>2023-08-27T01:29:23Z</updated>
    <id>tag:github.com,2023-08-27:/dmcxblue/SharpBlackout</id>
    <link href="https://github.com/dmcxblue/SharpBlackout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terminate AV/EDR leveraging BYOVD attack&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SharpBlackout&lt;/h1&gt; &#xA;&lt;p&gt;Terminate AV/EDR leveraging BYOVD attack&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: This project is for educational purposes only.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Sharpblackout is an adaptation of the &lt;a href=&#34;https://github.com/ZeroMemoryEx/Blackout&#34;&gt;@Blackout&lt;/a&gt; project originally developed in C++ by &lt;a href=&#34;https://github.com/ZeroMemoryEx/Blackout&#34;&gt;@ZeroMemoryEx&lt;/a&gt;, which consists of removing AV/EDRs using the gmer (BYOVD) driver.&lt;/p&gt; &#xA;&lt;p&gt;Just wanted to try making it in C#&lt;/p&gt; &#xA;&lt;p&gt;❗️ &lt;strong&gt;Important:&lt;/strong&gt; This requires Administrator privileges for it to work.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;Warning:&lt;/strong&gt; This might be buggy and not work to keep Defender or other programs terminated.&lt;/p&gt; &#xA;&lt;p&gt;All credit to the original author @ZeroMemoryEx.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dmcxblue/SharpBlackout/assets/41899653/25f1baa9-d177-43b0-a389-5888c955a217&#34; alt=&#34;Sharpblackout&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coverlet-coverage/coverlet</title>
    <updated>2023-08-27T01:29:23Z</updated>
    <id>tag:github.com,2023-08-27:/coverlet-coverage/coverlet</id>
    <link href="https://github.com/coverlet-coverage/coverlet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross platform code coverage for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coverlet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/tonerdo/coverlet/_build/latest?definitionId=5&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/tonerdo/coverlet/_apis/build/status/coverlet-coverage.coverlet?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/coverlet-coverage/coverlet/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Driver&lt;/th&gt; &#xA;   &lt;th&gt;Current version&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coverlet.collector&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.collector/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/coverlet.collector.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.collector/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/coverlet.collector.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coverlet.msbuild&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.msbuild/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/coverlet.msbuild.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.msbuild/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/coverlet.msbuild.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coverlet.console&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.console/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/coverlet.console.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/coverlet.console/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/coverlet.console.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Coverlet is a cross platform code coverage framework for .NET, with support for line, branch and method coverage. It works with .NET Framework on Windows and .NET Core on all supported platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Coverlet documentation reflect the current repository state of the features, not the released ones.&lt;/strong&gt; &lt;strong&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/Changelog.md&#34;&gt;changelog&lt;/a&gt; to understand if the documented feature you want to use has been officially released.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Main contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#quick-start&#34;&gt;QuickStart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#how-it-works&#34;&gt;How It Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/DriversFeatures.md&#34;&gt;Drivers features differences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#deterministic-build-support&#34;&gt;Deterministic build support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#known-issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#consume-nightly-build&#34;&gt;Consume nightly build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/Examples.md&#34;&gt;Feature samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#cake-add-in&#34;&gt;Cake Add-In&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/#visual-studio-add-in&#34;&gt;Visual Studio Add-In&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/Changelog.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/Roadmap.md&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Coverlet can be used through three different &lt;em&gt;drivers&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VSTest engine integration&lt;/li&gt; &#xA; &lt;li&gt;MSBuild task integration&lt;/li&gt; &#xA; &lt;li&gt;As a .NET Global tool (supports standalone integration tests)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Coverlet supports only SDK-style projects &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-project-sdk?view=vs-2019&#34;&gt;https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-project-sdk?view=vs-2019&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VSTest Integration (preferred due to &lt;a href=&#34;https://github.com/coverlet-coverage/coverlet/raw/master/Documentation/KnownIssues.md#1-vstest-stops-process-execution-earlydotnet-test&#34;&gt;known issue&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package coverlet.collector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;N.B. You &lt;strong&gt;MUST&lt;/strong&gt; add package only to test projects and if you create xunit test projects (&lt;code&gt;dotnet new xunit&lt;/code&gt;) you&#39;ll find the reference already present in &lt;code&gt;csproj&lt;/code&gt; file because Coverlet is the default coverage tool for every .NET Core and &amp;gt;= .NET 5 applications, you&#39;ve only to update to last version if needed.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Coverlet is integrated into the Visual Studio Test Platform as a &lt;a href=&#34;https://github.com/Microsoft/vstest-docs/raw/master/docs/extensions/datacollector.md&#34;&gt;data collector&lt;/a&gt;. To get coverage simply run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet test --collect:&#34;XPlat Code Coverage&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the above command is run, a &lt;code&gt;coverage.cobertura.xml&lt;/code&gt; file containing the results will be published to the &lt;code&gt;TestResults&lt;/code&gt; directory as an attachment.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/VSTestIntegration.md&#34;&gt;documentation&lt;/a&gt; for advanced usage.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;You need to be running .NET 6.0 SDK v6.0.316 or newer&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;You need to reference version 17.5.0 and above of Microsoft.NET.Test.Sdk&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;PackageReference Include=&#34;Microsoft.NET.Test.Sdk&#34; Version=&#34;17.5.0&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MSBuild Integration (suffers of possible &lt;a href=&#34;https://github.com/coverlet-coverage/coverlet/raw/master/Documentation/KnownIssues.md#1-vstest-stops-process-execution-earlydotnet-test&#34;&gt;known issue&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package coverlet.msbuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;N.B. You &lt;strong&gt;MUST&lt;/strong&gt; add package only to test projects&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Coverlet also integrates with the build system to run code coverage after tests. Enabling code coverage is as simple as setting the &lt;code&gt;CollectCoverage&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet test /p:CollectCoverage=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the above command is run, a &lt;code&gt;coverage.json&lt;/code&gt; file containing the results will be generated in the root directory of the test project. A summary of the results will also be displayed in the terminal.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/MSBuildIntegration.md&#34;&gt;documentation&lt;/a&gt; for advanced usage.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;Requires a runtime that support &lt;em&gt;.NET Standard 2.0 and above&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;.NET Global Tool (&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools&#34;&gt;guide&lt;/a&gt;, suffers from possible &lt;a href=&#34;https://github.com/coverlet-coverage/coverlet/raw/master/Documentation/KnownIssues.md#1-vstest-stops-process-execution-earlydotnet-test&#34;&gt;known issue&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet tool install --global coverlet.console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;coverlet&lt;/code&gt; tool is invoked by specifying the path to the assembly that contains the unit tests. You also need to specify the test runner and the arguments to pass to the test runner using the &lt;code&gt;--target&lt;/code&gt; and &lt;code&gt;--targetargs&lt;/code&gt; options respectively. The invocation of the test runner with the supplied arguments &lt;strong&gt;must not&lt;/strong&gt; involve a recompilation of the unit test assembly or no coverage result will be generated.&lt;/p&gt; &#xA;&lt;p&gt;The following example shows how to use the familiar &lt;code&gt;dotnet test&lt;/code&gt; toolchain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;coverlet /path/to/test-assembly.dll --target &#34;dotnet&#34; --targetargs &#34;test /path/to/test-project --no-build&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;--no-build&lt;/code&gt; flag is specified so that the &lt;code&gt;/path/to/test-assembly.dll&lt;/code&gt; assembly isn&#39;t rebuilt&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/GlobalTool.md&#34;&gt;documentation&lt;/a&gt; for advanced usage.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;.NET global tools rely on a .NET Core runtime installed on your machine &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#what-could-go-wrong&#34;&gt;https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#what-could-go-wrong&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.NET Coverlet global tool requires &lt;em&gt;.NET Core 2.2 and above&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;p&gt;Coverlet generates code coverage information by going through the following process:&lt;/p&gt; &#xA;&lt;h3&gt;Before Tests Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Locates the unit test assembly and selects all the referenced assemblies that have PDBs.&lt;/li&gt; &#xA; &lt;li&gt;Instruments the selected assemblies by inserting code to record sequence point hits to a temporary file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;After Tests Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Restore the original non-instrumented assembly files.&lt;/li&gt; &#xA; &lt;li&gt;Read the recorded hits information from the temporary file.&lt;/li&gt; &#xA; &lt;li&gt;Generate the coverage result from the hits information and write it to a file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deterministic build support&lt;/h2&gt; &#xA;&lt;p&gt;Coverlet supports coverage for deterministic builds. The solution at the moment is not optimal and need a workaround. Take a look at &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/DeterministicBuild.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Are you in trouble with some feature? Check on &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/Examples.md&#34;&gt;examples&lt;/a&gt;!&lt;/h2&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Unfortunately we have some known issues, check it &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/KnownIssues.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cake Add-In&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;a href=&#34;https://cakebuild.net&#34;&gt;Cake Build&lt;/a&gt; for your build script you can use the &lt;a href=&#34;https://github.com/Romanx/Cake.Coverlet&#34;&gt;Cake.Coverlet&lt;/a&gt; add-in to provide you extensions to dotnet test for passing Coverlet arguments in a strongly typed manner.&lt;/p&gt; &#xA;&lt;h2&gt;Visual Studio Add-In&lt;/h2&gt; &#xA;&lt;p&gt;If you want to visualize coverlet output inside Visual Studio while you code, you can use the following addins depending on your platform.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using Visual Studio on Windows, you can use the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=FortuneNgwenya.FineCodeCoverage&#34;&gt;Fine Code Coverage&lt;/a&gt; extension. Visualization is updated when you run unit tests inside Visual Studio.&lt;/p&gt; &#xA;&lt;h3&gt;Mac OS&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using Visual Studio for Mac, you can use the &lt;a href=&#34;https://github.com/ademanuele/VSMac-CodeCoverage&#34;&gt;VSMac-CodeCoverage&lt;/a&gt; extension.&lt;/p&gt; &#xA;&lt;h2&gt;Consume nightly build&lt;/h2&gt; &#xA;&lt;p&gt;We offer nightly build of master for all packages. See the &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/Documentation/ConsumeNightlyBuild.md&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Issues &amp;amp; Contributions&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug or have a feature request, please report them at this repository&#39;s issues section. See the &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING GUIDE&lt;/a&gt; for details on building and contributing to this project.&lt;/p&gt; &#xA;&lt;h2&gt;Coverlet Team&lt;/h2&gt; &#xA;&lt;p&gt;Author and owner&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tonerdo&#34;&gt;Toni Solarin-Sodara&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Co-maintainers&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daveMueller&#34;&gt;David Müller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bertk&#34;&gt;Bert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/petli&#34;&gt;Peter Liljenberg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MarcoRossignoli&#34;&gt;Marco Rossignoli&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Part of the code is based on work done by OpenCover team &lt;a href=&#34;https://github.com/OpenCover&#34;&gt;https://github.com/OpenCover&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/coverlet-coverage/coverlet/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Supported by the &lt;a href=&#34;https://dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>bhrugen/Bulky_MVC</title>
    <updated>2023-08-27T01:29:23Z</updated>
    <id>tag:github.com,2023-08-27:/bhrugen/Bulky_MVC</id>
    <link href="https://github.com/bhrugen/Bulky_MVC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>