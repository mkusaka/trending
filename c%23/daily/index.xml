<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-04T01:35:22Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FlaUI/FlaUI</title>
    <updated>2022-08-04T01:35:22Z</updated>
    <id>tag:github.com,2022-08-04:/FlaUI/FlaUI</id>
    <link href="https://github.com/FlaUI/FlaUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UI automation library for .Net&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FlaUI/FlaUI/master/FlaUI.png?raw=true&#34; alt=&#34;Alt text&#34; title=&#34;FlaUI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Badges&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;What&lt;/th&gt; &#xA;   &lt;th&gt;Badge&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Chat&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitter.im/FlaUI/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/FlaUI/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/FlaUI/Lobby&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Build&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/RomanBaeriswyl/flaui&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/mwd2o329cma50sxe?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Tests&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/RomanBaeriswyl/flaui/branch/master&#34;&gt;&lt;img src=&#34;http://flauschig.ch/batch.php?type=tests&amp;amp;account=RomanBaeriswyl&amp;amp;slug=flaui&amp;amp;branch=master&#34; alt=&#34;Test status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Libraries (NuGet)&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/FlaUI.Core&#34;&gt;&lt;img src=&#34;http://flauschig.ch/nubadge.php?id=FlaUI.Core&#34; alt=&#34;NuGet FlaUI.Core&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FlaUI.UIA2&#34;&gt;&lt;img src=&#34;http://flauschig.ch/nubadge.php?id=FlaUI.UIA2&#34; alt=&#34;NuGet FlaUI.UIA2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FlaUI.UIA3&#34;&gt;&lt;img src=&#34;http://flauschig.ch/nubadge.php?id=FlaUI.UIA3&#34; alt=&#34;NuGet FlaUI.UIA3&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;CI Artefacts&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/RomanBaeriswyl/flaui/build/artifacts&#34;&gt;FlaUI CI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;FlaUI is a .NET library which helps with automated UI testing of Windows applications (Win32, WinForms, WPF, Store Apps, ...).&lt;br&gt; It is based on native UI Automation libraries from Microsoft and therefore kind of a wrapper around them.&lt;br&gt; FlaUI wraps almost everything from the UI Automation libraries but also provides the native objects in case someone has a special need which is not covered (yet) by FlaUI.&lt;br&gt; Some ideas are copied from the UIAComWrapper project or TestStack.White but rewritten from scratch to have a clean codebase.&lt;/p&gt; &#xA;&lt;h3&gt;Sponsoring&lt;/h3&gt; &#xA;&lt;p&gt;If you appreciate my work, feel free to support me by &lt;a href=&#34;https://github.com/sponsors/Roemer&#34;&gt;sponsoring on github&lt;/a&gt; or with a one-time payment &lt;a href=&#34;https://paypal.me/rbaeriswyl&#34;&gt;over at PayPal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Why another library?&lt;/h3&gt; &#xA;&lt;p&gt;There are quite some automation solutions out there. Commercial ones like TestComplete, Ranorex, CodedUI just to name a few. And also free ones which are mainly TestStack.White.&lt;br&gt; All of them are based on what Microsoft provides. These are the UI Automation libraries. There are three versions of it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSAA &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MSAA is very obsolete and we&#39;ll skip this here (some like CodedUI still use it)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UIA2: Managed Library for native UI Automation API &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIA2 is managed only, which would be good for C# but it does not support newer features (like touch) and it also does not work well with WPF or even worse with Windows Store Apps.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UIA3: Com Library for native UI Automation API &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UIA3 is the newest of them all and works great for WPF / Windows Store Apps but unfortunately, it can have some bugs with WinForms applications (see &lt;a href=&#34;https://github.com/FlaUI/FlaUI/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;) which are not existent in UIA2.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So, the commercial solutions are mostly based on multiple of those and/or implement a lot of workaround code to fix those issues. TestStack.White has two versions, one for UIA2 and one for UIA3 but because of the old codebase, it&#39;s fairly hard to bring UIA3 to work. For this, it also uses an additional library, the UIAComWrapper which uses the same naming as the managed UIA2 and wraps the UIA3 com interop with them (one more source for errors). FlaUI now tries to provide an interface for UIA2 and UIA3 where the developer can choose, which version he wants to use. It should also provide a very clean and modern codebase so that collaboration and further development is as easy as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h5&gt;Installation&lt;/h5&gt; &#xA;&lt;p&gt;To use FlaUI, you need to reference the appropriate assemblies. So you should decide, if you want to use UIA2 or UIA3 and install the appropriate library from NuGet. You can of course always download the source and compile it yourself.&lt;/p&gt; &#xA;&lt;h5&gt;Usage in Code&lt;/h5&gt; &#xA;&lt;p&gt;The entry point is usually an application or the desktop so you get an automation element (like a the main window of the application). On this, you can then search sub-elements and interact with them. There is a helper class to launch, attach or close applications. Since the application is not related to any UIA library, you need to create the automation you want and use it to get your first element, which then is your entry point.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using FlaUI.UIA3;&#xA;&#xA;var app = FlaUI.Core.Application.Launch(&#34;notepad.exe&#34;);&#xA;using (var automation = new UIA3Automation())&#xA;{&#xA;&#x9;var window = app.GetMainWindow(automation);&#xA;&#x9;Console.WriteLine(window.Title);&#xA;&#x9;...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using FlaUI.Core.AutomationElements;&#xA;using FlaUI.UIA3;&#xA;&#xA;// Note: Works only pre-Windows 8 with the legacy calculator&#xA;var app = FlaUI.Core.Application.Launch(&#34;calc.exe&#34;);&#xA;using (var automation = new UIA3Automation())&#xA;{&#xA;&#x9;var window = app.GetMainWindow(automation);&#xA;&#x9;var button1 = window.FindFirstDescendant(cf =&amp;gt; cf.ByText(&#34;1&#34;))?.AsButton();&#xA;&#x9;button1?.Invoke();&#xA;&#x9;...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Further Resources&lt;/h3&gt; &#xA;&lt;h4&gt;YouTube Tutorials&lt;/h4&gt; &#xA;&lt;p&gt;Have a look at &lt;a href=&#34;https://www.youtube.com/channel/UCzFPWBdClpZ9afmmyhho4Rg&#34;&gt;H Y R Tutorials&lt;/a&gt;. This channel provides some videos to get you started with FlaUI.&lt;/p&gt; &#xA;&lt;h4&gt;FlaUI UITests&lt;/h4&gt; &#xA;&lt;p&gt;FlaUI itself contains quite some UI tests itself. Browse to the code of them &lt;a href=&#34;https://github.com/FlaUI/FlaUI/tree/master/src/FlaUI.Core.UITests&#34;&gt;here&lt;/a&gt; and look how they work.&lt;/p&gt; &#xA;&lt;h4&gt;Chat&lt;/h4&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://gitter.im/FlaUI/Lobby&#34;&gt;chat&lt;/a&gt; to ask your specific questions.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to fork FlaUI and send pull requests of your modifications.&lt;br&gt; You can also create issues if you find problems or have ideas on how to further improve FlaUI.&lt;/p&gt; &#xA;&lt;h3&gt;Donors and Sponsors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thank you Gehtsoft USA LLC for the generous donation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;h4&gt;JetBrains&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.jetbrains.com&#34;&gt;JetBrains&lt;/a&gt; for providing a free license of &lt;a href=&#34;https://www.jetbrains.com/resharper/&#34;&gt;ReSharper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;AppVeyor&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.appveyor.com&#34;&gt;AppVeyor&lt;/a&gt; for providing a free CI &lt;a href=&#34;https://ci.appveyor.com/project/RomanBaeriswyl/flaui&#34;&gt;build system for FlaUI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;TestStack.White&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to the creators and maintainers (especially to &lt;a href=&#34;https://github.com/JakeGinnivan&#34;&gt;@JakeGinnivan&lt;/a&gt; and &lt;a href=&#34;https://github.com/petmongrels&#34;&gt;@petmongrels&lt;/a&gt;) for their work and inspiration for this project.&lt;/p&gt; &#xA;&lt;h4&gt;Microsoft&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to Microsoft for providing great tools which made developing this project possible.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VerifyTests/Verify</title>
    <updated>2022-08-04T01:35:22Z</updated>
    <id>tag:github.com,2022-08-04:/VerifyTests/Verify</id>
    <link href="https://github.com/VerifyTests/Verify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Verify is a snapshot tool that simplifies the assertion of complex data models and documents.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/icon.png&#34; height=&#34;30px&#34;&gt; Verify&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/VerifyTests/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Verify-Discussions-yellow?svg=true&amp;amp;label=&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/SimonCropp/Verify&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/dpqylic0be7s9vnm/branch/main?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Verify.Xunit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Verify.Xunit.svg?label=Verify.Xunit&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Verify.NUnit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Verify.NUnit.svg?label=Verify.NUnit&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Verify.Expecto/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Verify.Expecto.svg?label=Verify.Expecto&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Verify.MSTest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Verify.MSTest.svg?label=Verify.MSTest&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Verify.ClipboardAccept/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Verify.MSTest.svg?label=Verify.ClipboardAccept&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Verify is a snapshot tool that simplifies the assertion of complex data models and documents.&lt;/p&gt; &#xA;&lt;p&gt;Verify is called on the test result during the assertion phase. It serializes that result and stores it in a file that matches the test name. On the next test execution, the result is again serialized and compared to the existing file. The test will fail if the two snapshots do not match: either the change is unexpected, or the reference snapshot needs to be updated to the new result.&lt;/p&gt; &#xA;&lt;h2&gt;NuGet packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Verify.Xunit/&#34;&gt;https://nuget.org/packages/Verify.Xunit/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Verify.NUnit/&#34;&gt;https://nuget.org/packages/Verify.NUnit/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Verify.Expecto/&#34;&gt;https://nuget.org/packages/Verify.Expecto/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Verify.MSTest/&#34;&gt;https://nuget.org/packages/Verify.MSTest/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Snapshot management&lt;/h2&gt; &#xA;&lt;p&gt;Accepting or declining a snapshot file is part of the core workflow of Verify. There are several ways to do this and the approach(s) selected is a personal preference.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the Windows Tray via &lt;a href=&#34;https://github.com/VerifyTests/DiffEngine/raw/main/docs/tray.md&#34;&gt;DiffEngineTray&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/17241-verify-support&#34;&gt;ReSharper test runner support&lt;/a&gt; (&lt;a href=&#34;https://github.com/matkoch/resharper-verify&#34;&gt;Source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/17240-verify-support&#34;&gt;Rider test runner support&lt;/a&gt; (&lt;a href=&#34;https://github.com/matkoch/resharper-verify&#34;&gt;Source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/clipboard.md&#34;&gt;Via the clipboard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Manually making the change in the &lt;a href=&#34;https://github.com/VerifyTests/DiffEngine#supported-tools&#34;&gt;launched diff tool&lt;/a&gt;. Either with a copy paste, or some tools have commands to automate this via a shortcut or a button.&lt;/li&gt; &#xA; &lt;li&gt;Manually on the file system. By renaming the &lt;code&gt;.received.&lt;/code&gt; file to &lt;code&gt;.verified.&lt;/code&gt;. This can be automated via a scripted to bulk accept all (by matching a pattern) &lt;code&gt;.received.&lt;/code&gt; files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;All examples use &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#implicitusings&#34;&gt;ImplicitUsings&lt;/a&gt;. Ensure the following is set to have examples compile correctly &lt;code&gt;&amp;lt;ImplicitUsings&amp;gt;enable&amp;lt;/ImplicitUsings&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Class being tested&lt;/h3&gt; &#xA;&lt;p&gt;Given a class to be tested:&lt;/p&gt; &#xA;&lt;!-- snippet: ClassBeingTested --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-classbeingtested&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public static class ClassBeingTested&#xA;{&#xA;    public static Person FindPerson() =&amp;gt;&#xA;        new()&#xA;        {&#xA;            Id = new(&#34;ebced679-45d3-4653-8791-3d969c4a986c&#34;),&#xA;            Title = Title.Mr,&#xA;            GivenNames = &#34;John&#34;,&#xA;            FamilyName = &#34;Smith&#34;,&#xA;            Spouse = &#34;Jill&#34;,&#xA;            Children = new()&#xA;            {&#xA;                &#34;Sam&#34;,&#xA;                &#34;Mary&#34;&#xA;            },&#xA;            Address = new()&#xA;            {&#xA;                Street = &#34;4 Puddle Lane&#34;,&#xA;                Country = &#34;USA&#34;&#xA;            }&#xA;        };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/TargetLibrary/ClassBeingTested.cs#L1-L26&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-classbeingtested&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;xUnit&lt;/h3&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://xunit.net/&#34;&gt;xUnit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- snippet: SampleTestXunit --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-sampletestxunit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[UsesVerify]&#xA;public class Sample&#xA;{&#xA;    [Fact]&#xA;    public Task Test()&#xA;    {&#xA;        var person = ClassBeingTested.FindPerson();&#xA;        return Verify(person);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Xunit.Tests/Snippets/Sample.cs#L1-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-sampletestxunit&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uGVogEltSkY&#34;&gt;Verify Xunit Intro&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NUnit&lt;/h3&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://nunit.org/&#34;&gt;NUnit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- snippet: SampleTestNUnit --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-sampletestnunit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[TestFixture]&#xA;public class Sample&#xA;{&#xA;    [Test]&#xA;    public Task Test()&#xA;    {&#xA;        var person = ClassBeingTested.FindPerson();&#xA;        return Verify(person);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.NUnit.Tests/Snippets/Sample.cs#L1-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-sampletestnunit&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Expecto&lt;/h3&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://github.com/haf/expecto&#34;&gt;Expecto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- snippet: SampleTestExpecto --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-sampletestexpecto&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;open Expecto&#xA;open VerifyTests&#xA;open VerifyExpecto&#xA;&#xA;[&amp;lt;Tests&amp;gt;]&#xA;let tests =&#xA;    testTask &#34;findPerson&#34; {&#xA;        let person = ClassBeingTested.FindPerson()&#xA;        do! Verifier.Verify(&#34;findPerson&#34;, person)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Expecto.FSharpTests/Tests.fs#L2-L13&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-sampletestexpecto&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;Caveats&lt;/h4&gt; &#xA;&lt;p&gt;Due to the nature of the Expecto implementation, the following APIs in Verify are not supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;settings.UseTypeName()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;settings.UseMethodName()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;settings.UseParameters()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;settings.UseTextForParameters()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead use a custom &lt;code&gt;name&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;h3&gt;MSTest&lt;/h3&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://github.com/Microsoft/testfx-docs&#34;&gt;MSTest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- snippet: SampleTestMSTest --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-sampletestmstest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[TestClass]&#xA;public class Sample :&#xA;    VerifyBase&#xA;{&#xA;    [TestMethod]&#xA;    public Task Test()&#xA;    {&#xA;        var person = ClassBeingTested.FindPerson();&#xA;        return Verify(person);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.MSTest.Tests/Snippets/Sample.cs#L3-L17&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-sampletestmstest&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Initial Verification&lt;/h3&gt; &#xA;&lt;p&gt;No existing &lt;code&gt;.verified.&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;run(Run test and&amp;lt;br/&amp;gt;create Received file)&#xA;failTest(Fail Test&amp;lt;br/&amp;gt;and show Diff)&#xA;closeDiff(Close Diff)&#xA;run--&amp;gt;failTest&#xA;shouldAccept{Accept ?}&#xA;failTest--&amp;gt;shouldAccept&#xA;accept(Move Received&amp;lt;br/&amp;gt;to Verified)&#xA;shouldAccept-- Yes --&amp;gt;accept&#xA;discard(Discard&amp;lt;br/&amp;gt;Received)&#xA;shouldAccept-- No --&amp;gt;discard&#xA;accept--&amp;gt;closeDiff&#xA;discard--&amp;gt;closeDiff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the test is initially run will fail. If a &lt;a href=&#34;https://github.com/VerifyTests/DiffEngine&#34;&gt;Diff Tool&lt;/a&gt; is detected it will display the diff.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/InitialDiff.png&#34; alt=&#34;InitialDiff&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To verify the result:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute the command from the &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/clipboard.md&#34;&gt;Clipboard&lt;/a&gt;, or&lt;/li&gt; &#xA; &lt;li&gt;Accept with &lt;a href=&#34;https://github.com/VerifyTests/DiffEngine/raw/master/docs/tray.md&#34;&gt;DiffEngineTray tool&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;Accept with &lt;a href=&#34;https://plugins.jetbrains.com/plugin/17241-verify-support&#34;&gt;ReSharper Addin&lt;/a&gt; or &lt;a href=&#34;https://plugins.jetbrains.com/plugin/17240-verify-support&#34;&gt;Rider Addin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the diff tool to accept the changes, or&lt;/li&gt; &#xA; &lt;li&gt;Manually copy the text to the new file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Verified result&lt;/h4&gt; &#xA;&lt;p&gt;This will result in the &lt;code&gt;Sample.Test.verified.txt&lt;/code&gt; being created:&lt;/p&gt; &#xA;&lt;!-- snippet: Verify.Xunit.Tests/Snippets/Sample.Test.verified.txt --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-Verify.Xunit.Tests/Snippets/Sample.Test.verified.txt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;{&#xA;  GivenNames: John,&#xA;  FamilyName: Smith,&#xA;  Spouse: Jill,&#xA;  Address: {&#xA;    Street: 4 Puddle Lane,&#xA;    Country: USA&#xA;  },&#xA;  Children: [&#xA;    Sam,&#xA;    Mary&#xA;  ],&#xA;  Id: Guid_1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Xunit.Tests/Snippets/Sample.Test.verified.txt#L1-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-Verify.Xunit.Tests/Snippets/Sample.Test.verified.txt&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Subsequent Verification&lt;/h3&gt; &#xA;&lt;p&gt;Existing &lt;code&gt;.verified.&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;run(Run test and&amp;lt;br/&amp;gt;create Received file)&#xA;closeDiff(Close Diff)&#xA;failTest(Fail Test&amp;lt;br/&amp;gt;and show Diff)&#xA;run--&amp;gt;isSame&#xA;shouldAccept{Accept ?}&#xA;failTest--&amp;gt;shouldAccept&#xA;accept(Move Received&amp;lt;br/&amp;gt;to Verified)&#xA;shouldAccept-- Yes --&amp;gt;accept&#xA;discard(Discard&amp;lt;br/&amp;gt;Received)&#xA;shouldAccept-- No --&amp;gt;discard&#xA;&#xA;isSame{Compare&amp;lt;br/&amp;gt;Verified +&amp;lt;br/&amp;gt;Received}&#xA;passTest(Pass Test and&amp;lt;br/&amp;gt;discard Received)&#xA;isSame-- Same --&amp;gt; passTest&#xA;isSame-- Different --&amp;gt; failTest&#xA;accept--&amp;gt;closeDiff&#xA;discard--&amp;gt;closeDiff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the implementation of &lt;code&gt;ClassBeingTested&lt;/code&gt; changes:&lt;/p&gt; &#xA;&lt;!-- snippet: ClassBeingTestedChanged --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-classbeingtestedchanged&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public static class ClassBeingTested&#xA;{&#xA;    public static Person FindPerson() =&amp;gt;&#xA;        new()&#xA;        {&#xA;            Id = new(&#34;ebced679-45d3-4653-8791-3d969c4a986c&#34;),&#xA;            Title = Title.Mr,&#xA;            // Middle name added&#xA;            GivenNames = &#34;John James&#34;,&#xA;            FamilyName = &#34;Smith&#34;,&#xA;            Spouse = &#34;Jill&#34;,&#xA;            Children = new()&#xA;            {&#xA;                &#34;Sam&#34;,&#xA;                &#34;Mary&#34;&#xA;            },&#xA;            Address = new()&#xA;            {&#xA;                // Address changed&#xA;                Street = &#34;64 Barnett Street&#34;,&#xA;                Country = &#34;USA&#34;&#xA;            }&#xA;        };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/TargetLibrary/ClassBeingTestedChanged.cs#L3-L30&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-classbeingtestedchanged&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;And the test is re run it will fail.&lt;/p&gt; &#xA;&lt;h4&gt;The &lt;a href=&#34;https://github.com/VerifyTests/DiffEngine&#34;&gt;Diff Tool&lt;/a&gt; will display the diff:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/SecondDiff.png&#34; alt=&#34;SecondDiff&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The same approach can be used to verify the results and the change to &lt;code&gt;Sample.Test.verified.txt&lt;/code&gt; is committed to source control along with the change to &lt;code&gt;ClassBeingTested&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VerifyJson&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;VerifyJson&lt;/code&gt; performs the following actions&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Convert to &lt;code&gt;JToken&lt;/code&gt; (if necessary).&lt;/li&gt; &#xA; &lt;li&gt;Apply &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/serializer-settings.md#ignore-member-by-name&#34;&gt;ignore member by name&lt;/a&gt; for keys.&lt;/li&gt; &#xA; &lt;li&gt;PrettyPrint the resulting text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- snippet: VerifyJson --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-verifyjson&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[Fact]&#xA;public Task VerifyJsonString()&#xA;{&#xA;    var json = &#34;{&#39;key&#39;: {&#39;msg&#39;: &#39;No action taken&#39;}}&#34;;&#xA;    return VerifyJson(json);&#xA;}&#xA;&#xA;[Fact]&#xA;public Task VerifyJsonStream()&#xA;{&#xA;    var json = &#34;{&#39;key&#39;: {&#39;msg&#39;: &#39;No action taken&#39;}}&#34;;&#xA;    var stream = new MemoryStream(Encoding.UTF8.GetBytes(json));&#xA;    return VerifyJson(stream);&#xA;}&#xA;&#xA;[Fact]&#xA;public Task StreamMember()&#xA;{&#xA;    var stream = new MemoryStream(Encoding.UTF8.GetBytes(&#34;value&#34;));&#xA;    return Verify(new{stream});&#xA;}&#xA;&#xA;[Fact]&#xA;public Task VerifyJsonJToken()&#xA;{&#xA;    var json = &#34;{&#39;key&#39;: {&#39;msg&#39;: &#39;No action taken&#39;}}&#34;;&#xA;    var target = JToken.Parse(json);&#xA;    return VerifyJson(target);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Tests/Serialization/SerializationTests.cs#L1918-L1950&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-verifyjson&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Results in:&lt;/p&gt; &#xA;&lt;!-- snippet: SerializationTests.VerifyJsonString.verified.txt --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-SerializationTests.VerifyJsonString.verified.txt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;{&#xA;  key: {&#xA;    msg: No action taken&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Tests/Serialization/SerializationTests.VerifyJsonString.verified.txt#L1-L5&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-SerializationTests.VerifyJsonString.verified.txt&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;Received and Verified&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;All &lt;code&gt;*.verified.*&lt;/code&gt; files should be committed to source control.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;All &lt;code&gt;*.received.*&lt;/code&gt; files should be excluded from source control.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Static settings&lt;/h2&gt; &#xA;&lt;p&gt;Most settings are available at the both global level and at the instance level.&lt;/p&gt; &#xA;&lt;p&gt;When modifying settings at the both global level it should be done using a Module Initializer:&lt;/p&gt; &#xA;&lt;!-- snippet: StaticSettings.cs --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-StaticSettings.cs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[UsesVerify]&#xA;public class StaticSettings&#xA;{&#xA;    [Fact]&#xA;    public Task Test() =&amp;gt;&#xA;        Verify(&#34;String to verify&#34;);&#xA;}&#xA;&#xA;public static class StaticSettingsUsage&#xA;{&#xA;    [ModuleInitializer]&#xA;    public static void Initialize() =&amp;gt;&#xA;        VerifierSettings.AddScrubber(_ =&amp;gt; _.Replace(&#34;String to verify&#34;, &#34;new value&#34;));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Tests/StaticSettings.cs#L1-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-StaticSettings.cs&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;VerifyResult&lt;/h2&gt; &#xA;&lt;p&gt;In some scenarios it can be helpful to get access to the resulting &lt;code&gt;*.verified.*&lt;/code&gt; files after a successful run. For example to do an explicit check for contains or not-contains in the resulting text. To allow this all Verify methods return a &lt;code&gt;VerifyResult&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- snippet: VerifyResult --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-verifyresult&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var result = await Verify(&#xA;    new&#xA;    {&#xA;        Property = &#34;Value To Check&#34;&#xA;    });&#xA;Assert.Contains(&#34;Value To Check&#34;, result.Text);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Tests/Tests.cs#L556-L565&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-verifyresult&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;If using &lt;code&gt;Verifier.Throws&lt;/code&gt;, the resulting &lt;code&gt;Exception&lt;/code&gt; will also be accessible&lt;/p&gt; &#xA;&lt;!-- snippet: ExceptionResult --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-exceptionresult&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var result = await Verifier.Throws(MethodThatThrows);&#xA;Assert.NotNull(result.Exception);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/src/Verify.Tests/Tests.cs#L573-L578&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#snippet-exceptionresult&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Verify follows &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;. The same applies for &lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/#extensions&#34;&gt;extensions to Verify&lt;/a&gt;. Small changes in the resulting snapshot files may be deployed in a minor version. As such nuget updates to &lt;code&gt;Verify.*&lt;/code&gt; should be done as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Updates all &lt;code&gt;Verify.*&lt;/code&gt;packages in isolation&lt;/li&gt; &#xA; &lt;li&gt;Re-run all tests.&lt;/li&gt; &#xA; &lt;li&gt;If there are changes, ensure they look correct given the release notes. If the changes do not look correct, raise an issue.&lt;/li&gt; &#xA; &lt;li&gt;Accept those changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Snapshot changes do not trigger a major version change to avoid causing &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_hell#Problems&#34;&gt;Diamond dependency&lt;/a&gt; issues for downstream extensions.&lt;/p&gt; &#xA;&lt;h2&gt;Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uGVogEltSkY&#34;&gt;Verify Xunit Intro (26 Apr 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZD5-51iCmU0&#34;&gt;OSS Power-Ups: Verify (14 Jul 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unhandledexceptionpodcast.com/posts/0029-snapshottesting/&#34;&gt;Unhandled Exception podcast: Snapshot Testing (26 Nov 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andrewlock.net/creating-a-source-generator-part-2-testing-an-incremental-generator-with-snapshot-testing/&#34;&gt;Testing an incremental generator with snapshot testing (14 Dec 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.danclarke.com/snapshot-testing-with-verify&#34;&gt;Snapshot Testing with Verify - Dan Clarke (10 Dec 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@niteshsinghal85/5-helpful-nuget-package-for-unit-testing-in-net-87c2e087c6d&#34;&gt;5 helpful Nuget package for Unit Testing in .NET (16 Oct 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mwHWPoKEmyY&amp;amp;t=515s&#34;&gt;5 open source .NET projects that deserve more attention (9 Sep 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wA7oJDyvn4c&amp;amp;t=1s&#34;&gt;Snapshot Testing in .NET with Verify - Dan Clarke (21 July 2022&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.AngleSharp&#34;&gt;Verify.AngleSharp&lt;/a&gt;: Html verification utilities via &lt;a href=&#34;https://github.com/AngleSharp/AngleSharp&#34;&gt;AngleSharp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.AspNetCore&#34;&gt;Verify.AspNetCore&lt;/a&gt;: Verification of AspNetCore bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Aspose&#34;&gt;Verify.Aspose&lt;/a&gt;: Verification of documents (pdf, docx, xslx, and pptx) via Aspose.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Blazor&#34;&gt;Verify.Blazor&lt;/a&gt;: Verification of &lt;a href=&#34;https://docs.microsoft.com/en-us/aspnet/core/blazor/#components&#34;&gt;Blazor Component&lt;/a&gt; via &lt;a href=&#34;https://bunit.egilhansen.com&#34;&gt;bunit&lt;/a&gt; or via raw Blazor rendering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Cosmos&#34;&gt;Verify.Cosmos&lt;/a&gt;: Verification of &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/cosmos-db/&#34;&gt;Azure CosmosDB&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.DiffPlex&#34;&gt;Verify.DiffPlex&lt;/a&gt;: Comparison of text via &lt;a href=&#34;https://github.com/mmanela/diffplex&#34;&gt;DiffPlex&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.DocNet&#34;&gt;Verify.DocNet&lt;/a&gt;: Verification of pdfs via &lt;a href=&#34;https://github.com/GowenGit/docnet&#34;&gt;DocNet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.EntityFramework&#34;&gt;Verify.EntityFramework&lt;/a&gt;: Verification of EntityFramework bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.FakeItEasy&#34;&gt;Verify.FakeItEasy&lt;/a&gt;: Verification of &lt;a href=&#34;https://fakeiteasy.github.io/&#34;&gt;FakeItEasy&lt;/a&gt; bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.HeadlessBrowsers&#34;&gt;Verify.HeadlessBrowsers&lt;/a&gt;: Verification of Web UIs using &lt;a href=&#34;https://github.com/microsoft/playwright-sharp&#34;&gt;Playwright&lt;/a&gt;, &lt;a href=&#34;https://github.com/hardkoded/puppeteer-sharp&#34;&gt;Puppeteer Sharp&lt;/a&gt;, or &lt;a href=&#34;https://www.selenium.dev&#34;&gt;Selenium&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Http&#34;&gt;Verify.Http&lt;/a&gt;: Verification of Http bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.ICSharpCode.Decompiler&#34;&gt;Verify.ICSharpCode.Decompiler&lt;/a&gt;: Comparison of assemblies and types via &lt;a href=&#34;https://github.com/icsharpcode/ILSpy/wiki/Getting-Started-With-ICSharpCode.Decompiler&#34;&gt;ICSharpCode.Decompiler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.ImageHash&#34;&gt;Verify.ImageHash&lt;/a&gt;: Comparison of images via &lt;a href=&#34;https://github.com/coenm/ImageHash&#34;&gt;ImageHash&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.ImageSharp.Compare&#34;&gt;Verify.ImageSharp.Compare&lt;/a&gt;: Verification and comparison of images via &lt;a href=&#34;https://github.com/Codeuctivity/ImageSharp.Compare&#34;&gt;Codeuctivity.ImageSharp.Compare&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.ImageMagick&#34;&gt;Verify.ImageMagick&lt;/a&gt;: Verification and comparison of images via &lt;a href=&#34;https://github.com/dlemstra/Magick.NET&#34;&gt;Magick.NET&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.ImageSharp&#34;&gt;Verify.ImageSharp&lt;/a&gt;: Verification of images via &lt;a href=&#34;https://github.com/SixLabors/ImageSharp&#34;&gt;ImageSharp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.MassTransit&#34;&gt;Verify.MassTransit&lt;/a&gt;: Support for MassTransit test helpers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.MicrosoftLogging&#34;&gt;Verify.MicrosoftLogging&lt;/a&gt;: Verify MicrosoftLogging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flcdrg/Verify.MongoDB&#34;&gt;Verify.MongoDB&lt;/a&gt;: Verification of &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Moq&#34;&gt;Verify.Moq&lt;/a&gt;: Verification of &lt;a href=&#34;https://github.com/moq/moq4&#34;&gt;Moq&lt;/a&gt; bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.NodaTime&#34;&gt;Verify.NodaTime&lt;/a&gt;: Support for &lt;a href=&#34;https://nodatime.org/&#34;&gt;NodaTime&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.NServiceBus&#34;&gt;Verify.NServiceBus&lt;/a&gt;: Verify NServiceBus Test Contexts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.NSubstitute&#34;&gt;Verify.NSubstitute&lt;/a&gt;: Support for &lt;a href=&#34;https://nsubstitute.github.io/&#34;&gt;NSubstitute&lt;/a&gt; types&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.PdfPig&#34;&gt;Verify.PdfPig&lt;/a&gt;: Verification of pdfs via &lt;a href=&#34;https://github.com/UglyToad/PdfPig&#34;&gt;PdfPig&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Phash&#34;&gt;Verify.Phash&lt;/a&gt;: Comparison of images via &lt;a href=&#34;https://github.com/pgrho/phash&#34;&gt;Phash&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Quibble&#34;&gt;Verify.Quibble&lt;/a&gt;: Comparison of objects via &lt;a href=&#34;https://github.com/nrkno/Quibble&#34;&gt;Quibble&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.QuestPDF&#34;&gt;Verify.QuestPDF&lt;/a&gt;: Verification of &lt;a href=&#34;https://www.questpdf.com/&#34;&gt;QuestPDF&lt;/a&gt; documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.RavenDb&#34;&gt;Verify.RavenDb&lt;/a&gt;: Verification of &lt;a href=&#34;https://ravendb.net&#34;&gt;RavenDb&lt;/a&gt; bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.SqlServer&#34;&gt;Verify.SqlServer&lt;/a&gt;: Verification of SqlServer bits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.SourceGenerators&#34;&gt;Verify.SourceGenerators&lt;/a&gt;: Verification of C# Source Generators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.WinForms&#34;&gt;Verify.WinForms&lt;/a&gt;: Verification of WinForms UIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Xamarin&#34;&gt;Verify.Xamarin&lt;/a&gt;: Verification of Xamarin UIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Xaml&#34;&gt;Verify.Xaml&lt;/a&gt;: Verification of Xaml UIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spectresystems/spectre.verify.extensions&#34;&gt;Spectre.Verify.Extensions&lt;/a&gt;: Add an attribute driven file naming convention to Verify.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/Verify.Syncfusion&#34;&gt;Verify.Syncfusion&lt;/a&gt;: Verification of documents (pdf, docx, xslx, and pptx) via &lt;a href=&#34;https://help.syncfusion.com/file-formats/introduction&#34;&gt;Syncfusion File Formats&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/clipboard.md&#34;&gt;Clipboard&lt;/a&gt; &#xA;  &lt;!-- include: doc-index. path: /docs/mdsource/doc-index.include.md --&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/compared-to-assertion.md&#34;&gt;Compared to assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/verify-options.md&#34;&gt;Verify options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/serializer-settings.md&#34;&gt;Serializer Settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/naming.md&#34;&gt;File naming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/parameterised.md&#34;&gt;Parameterised tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/named-tuples.md&#34;&gt;Named Tuples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/scrubbers.md&#34;&gt;Scrubbers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/DiffEngine&#34;&gt;Diff Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/DiffEngine/raw/master/docs/diff-tool.md&#34;&gt;Diff Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/DiffEngine/raw/master/docs/diff-tool.order.md&#34;&gt;Diff Tool Order&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VerifyTests/DiffEngine/raw/master/docs/diff-tool.custom.md&#34;&gt;Custom Diff Tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/anonymous-types.md&#34;&gt;Using anonymous types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/binary.md&#34;&gt;Verifying binary data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/build-server.md&#34;&gt;Build server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/comparer.md&#34;&gt;Comparers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/converter.md&#34;&gt;Converters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/fsharp.md&#34;&gt;FSharp Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VerifyTests/Verify/main/docs/compared-to-approvaltests.md&#34;&gt;Compared to ApprovalTests&lt;/a&gt; &#xA;  &lt;!-- endInclude --&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Icon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://thenounproject.com/term/helmet/9554/&#34;&gt;Helmet&lt;/a&gt; designed by &lt;a href=&#34;https://thenounproject.com/alterego&#34;&gt;Leonidas Ikonomou&lt;/a&gt; from &lt;a href=&#34;https://thenounproject.com&#34;&gt;The Noun Project&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/dotnet-api-docs</title>
    <updated>2022-08-04T01:35:22Z</updated>
    <id>tag:github.com,2022-08-04:/dotnet/dotnet-api-docs</id>
    <link href="https://github.com/dotnet/dotnet-api-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET API reference documentation (.NET 5+, .NET Core, .NET Framework)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET API Reference Docs&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains documentation for the .NET API reference. We track all work for this repository using &lt;a href=&#34;https://github.com/dotnet/dotnet-api-docs/issues&#34;&gt;GitHub issues&lt;/a&gt;. The documentation for APIs is built from the text and code snippets in this repo, and from the samples in the &lt;a href=&#34;https://github.com/dotnet/samples&#34;&gt;dotnet/samples&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;The repository for conceptual .NET documentation is the &lt;a href=&#34;https://github.com/dotnet/docs&#34;&gt;dotnet/docs repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>