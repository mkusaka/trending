<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T01:32:47Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>geel9/SteamAuth</title>
    <updated>2023-07-01T01:32:47Z</updated>
    <id>tag:github.com,2023-07-01:/geel9/SteamAuth</id>
    <link href="https://github.com/geel9/SteamAuth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C# library that provides vital Steam Mobile Authenticator functionality&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SteamAuth&lt;/h1&gt; &#xA;&lt;p&gt;A C# library that provides vital Steam Mobile Authenticator functionality. &lt;strong&gt;Looking for a desktop client to act as a Steam Mobile Authenticator? &lt;a href=&#34;https://github.com/Jessecar96/SteamDesktopAuthenticator&#34;&gt;Check out SteamDesktopAuthenticator&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Functionality&lt;/h1&gt; &#xA;&lt;p&gt;Currently, this library can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate login codes for a given Shared Secret&lt;/li&gt; &#xA; &lt;li&gt;Login to a user account&lt;/li&gt; &#xA; &lt;li&gt;Link and activate a new mobile authenticator to a user account after logging in&lt;/li&gt; &#xA; &lt;li&gt;Remove itself from an account&lt;/li&gt; &#xA; &lt;li&gt;Fetch, accept, and deny mobile confirmations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.newtonsoft.com/json&#34;&gt;Newtonsoft.Json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;To generate login codes if you already have a Shared Secret, simply instantiate a &lt;code&gt;SteamGuardAccount&lt;/code&gt; and set its &lt;code&gt;SharedSecret&lt;/code&gt;. Then call &lt;code&gt;SteamGuardAccount.GenerateSteamGuardCode()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add a mobile authenticator to a user, instantiate a &lt;code&gt;UserLogin&lt;/code&gt; instance which will allow you to login to the account. After logging in, instantiate an &lt;code&gt;AuthenticatorLinker&lt;/code&gt; and use &lt;code&gt;AuthenticatorLinker.AddAuthenticator()&lt;/code&gt; and &lt;code&gt;AuthenticatorLinker.FinalizeAddAuthenticator()&lt;/code&gt; to link a new authenticator. &lt;strong&gt;After calling AddAuthenticator(), and before calling FinalizeAddAuthenticator(), please save a JSON string of the &lt;code&gt;AuthenticatorLinker.LinkedAccount&lt;/code&gt;. This will contain everything you need to generate subsequent codes. Failing to do this will lock you out of your account.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To fetch mobile confirmations, call &lt;code&gt;SteamGuardAccount.FetchConfirmations()&lt;/code&gt;. You can then call &lt;code&gt;SteamGuardAccount.AcceptConfirmation&lt;/code&gt; and &lt;code&gt;SteamGuardAccount.DenyConfirmation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Upcoming Features&lt;/h1&gt; &#xA;&lt;p&gt;In order to be feature complete, this library will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Be better documented (feature!!)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dafny-lang/dafny</title>
    <updated>2023-07-01T01:32:47Z</updated>
    <id>tag:github.com,2023-07-01:/dafny-lang/dafny</id>
    <link href="https://github.com/dafny-lang/dafny" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dafny is a verification-aware programming language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dafny-lang/dafny/actions?query=workflow%3A%22Build+and+Test%22&#34;&gt;&lt;img src=&#34;https://github.com/dafny-lang/dafny/workflows/Build%20and%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build and Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/dafny-lang/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/dafny-lang/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dafny is a &lt;strong&gt;verification-ready programming language&lt;/strong&gt;. As you type in your program, Dafny&#39;s verifier constantly looks over your shoulder, flags any errors, shows you counterexamples, and congratulates you when your code matches your specifications. When you&#39;re done, Dafny can &lt;strong&gt;compile your code to C#, Go, Python, Java, or JavaScript&lt;/strong&gt; (more to come!), so it can integrate with your existing workflow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3601079/140799975-f3ac0925-10d9-4c14-b1a9-cd449854c6ae.gif&#34; alt=&#34;vs-code-dafny-2 0 0-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dafny will give you &lt;strong&gt;assurance that your code meets the specifications you write&lt;/strong&gt;, while letting you write both code and specifications in the Dafny programming language itself. Since verification is an integral part of development, it will thus &lt;strong&gt;reduce the risk of costly late-stage bugs&lt;/strong&gt; that are typically missed by testing.&lt;/p&gt; &#xA;&lt;p&gt;Dafny has support for common programming concepts such as &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#sec-class-types&#34;&gt;classes and trait inheritance&lt;/a&gt;, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#181-inductive-datatypes&#34;&gt;inductive datatypes&lt;/a&gt; that can have methods and are suitable for pattern matching, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#182-co-inductive-datatypes&#34;&gt;lazily unbounded datatypes&lt;/a&gt;, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#sec-subset-types&#34;&gt;subset types e.g. for bounded integers&lt;/a&gt;, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#sec-lambda-expressions&#34;&gt;lambdas&lt;/a&gt;, and &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#sec-collection-types&#34;&gt;immutable and mutable data structures&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dafny also offers an extensive toolbox for mathematical proofs, such as &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#sec-forall-statement&#34;&gt;unbounded and bounded quantifiers&lt;/a&gt;, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#1923-calc-statement&#34;&gt;calculational proofs&lt;/a&gt;, &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef#51-specification-clauses&#34;&gt;pre- and post-conditions, termination conditions, loop invariants, and read/write specifications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dafny-lang/dafny/master/docs/images/dafny-logo-230.png&#34; alt=&#34;Dafny&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This github site contains these materials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dafny-lang/dafny/releases&#34;&gt;binary downloads&lt;/a&gt; for Windows, macOS, GNU/Linux, and FreeBSD&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://github.com/dafny-lang/dafny/issues&#34;&gt;issue tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the wiki, including &lt;a href=&#34;https://github.com/dafny-lang/dafny/wiki/FAQ&#34;&gt;frequently asked questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Documentation about the dafny language and tools is located &lt;a href=&#34;https://dafny-lang.github.io/dafny&#34;&gt;here&lt;/a&gt;. A reference manual is available both &lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef&#34;&gt;online&lt;/a&gt; and as &lt;a href=&#34;https://github.com/dafny-lang/dafny/raw/master/docs/DafnyRef/out/DafnyRef.pdf&#34;&gt;pdf&lt;/a&gt;. (A LaTeX version can be produced if needed.)&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;You can ask questions about Dafny on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/dafny&#34;&gt;Stack Overflow&lt;/a&gt; or participate in general discussion on Dafny&#39;s &lt;a href=&#34;https://gitter.im/dafny-lang/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/dafny-lang/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Try Dafny&lt;/h1&gt; &#xA;&lt;p&gt;The easiest way to try out Dafny is to &lt;a href=&#34;https://github.com/dafny-lang/dafny/wiki/INSTALL#visual-studio-code&#34;&gt;install Dafny on your own machine in Visual Studio Code&lt;/a&gt; and follow along with the &lt;a href=&#34;https://dafny-lang.github.io/dafny/OnlineTutorial/guide&#34;&gt;Dafny tutorial&lt;/a&gt;. You can also &lt;a href=&#34;https://github.com/dafny-lang/dafny/wiki/INSTALL#install-the-binaries&#34;&gt;download and install&lt;/a&gt; the Dafny CLI if you prefer to work from the command line.&lt;/p&gt; &#xA;&lt;h1&gt;Read more&lt;/h1&gt; &#xA;&lt;p&gt;Here are some ways to get started with Dafny:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4-part course on the &lt;em&gt;Basics of specification and verification of code&lt;/em&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Lecture 0: &lt;a href=&#34;https://youtu.be/oLS_y842fMc&#34;&gt;Pre- and postconditions&lt;/a&gt; (19:08)&lt;/li&gt; &#xA;   &lt;li&gt;Lecture 1: &lt;a href=&#34;https://youtu.be/J0FGb6PyO_k&#34;&gt;Invariants&lt;/a&gt; (20:56)&lt;/li&gt; &#xA;   &lt;li&gt;Lecture 2: &lt;a href=&#34;https://youtu.be/-_tx3lk7yn4&#34;&gt;Binary search&lt;/a&gt; (21:14)&lt;/li&gt; &#xA;   &lt;li&gt;Lecture 3: &lt;a href=&#34;https://youtu.be/dQC5m-GZYbk&#34;&gt;Dutch National Flag algorithm&lt;/a&gt; (20:33)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;New overview article: &lt;a href=&#34;https://www.computer.org/csdl/mags/so/2017/06/mso2017060094-abs.html&#34;&gt;Accessible Software Verification with Dafny&lt;/a&gt;, IEEE Software, Nov/Dec 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dafny-lang.github.io/dafny/OnlineTutorial/guide&#34;&gt;Online tutorial&lt;/a&gt;, focusing mostly on simple imperative programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://leino.science/papers/krml233.pdf&#34;&gt;3-page tutorial notes&lt;/a&gt; with examples (ICSE 2013)&lt;/li&gt; &#xA; &lt;li&gt;Dafny &lt;a href=&#34;https://dafny-lang.github.io/dafny/QuickReference&#34;&gt;Quick Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Language reference for the &lt;a href=&#34;http://leino.science/papers/krml243.html&#34;&gt;Dafny type system&lt;/a&gt;, which also describes available expressions for each type&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1kz5_yqzhrEyXII96eCF1YoHZhnb_6dzv-K3u79bMMis/edit?pref=2&amp;amp;pli=1&#34;&gt;Cheatsheet&lt;/a&gt;: basic Dafny syntax on two pages&lt;/li&gt; &#xA; &lt;li&gt;Dafny Reference Manual [&lt;a href=&#34;https://dafny-lang.github.io/dafny/DafnyRef/DafnyRef&#34;&gt;html&lt;/a&gt;] [&lt;a href=&#34;https://github.com/dafny-lang/dafny/raw/master/docs/DafnyRef/out/DafnyRef.pdf&#34;&gt;pdf&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dafny-lang/libraries&#34;&gt;Dafny libraries&lt;/a&gt;, a standard library of useful Dafny functions and lemmas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://leino.science/dafny-power-user&#34;&gt;Dafny Power User&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Videos at &lt;a href=&#34;https://www.youtube.com/channel/UCP2eLEql4tROYmIYm5mA27A&#34;&gt;Verification Corner&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The language itself draws pieces of influence from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Euclid (from the mindset of a designing a language whose programs are to be verified),&lt;/li&gt; &#xA; &lt;li&gt;Eiffel (like the built-in contract features),&lt;/li&gt; &#xA; &lt;li&gt;CLU (like its iterators, and inspiration for the out-parameter syntax),&lt;/li&gt; &#xA; &lt;li&gt;Java, C#, and Scala (like the classes and traits, and syntax for functions),&lt;/li&gt; &#xA; &lt;li&gt;ML (like the module system, and its functions and inductive datatypes), and&lt;/li&gt; &#xA; &lt;li&gt;Coq and VeriFast (like the ability to include co-inductive datatypes and being able to write inductive and co-inductive proofs).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;External contributions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.doc.ic.ac.uk/~dcw/h2d.cgi&#34;&gt;Haskell-to-Dafny translator&lt;/a&gt;, by Duncan White&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mlr-msft/vim-loves-dafny&#34;&gt;Vim-loves-Dafny mode&lt;/a&gt; for vim, by Michael Lowell Roberts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boogie-org/boogie-friends&#34;&gt;Boogie-Friends Emacs mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Information and instructions for potential contributors are provided &lt;a href=&#34;https://raw.githubusercontent.com/dafny-lang/dafny/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Dafny itself is licensed under the MIT license. (See &lt;code&gt;LICENSE.txt&lt;/code&gt; in the root directory for details.) The subdirectory &lt;code&gt;Source/Dafny/Coco&lt;/code&gt; contains third party material; see &lt;code&gt;Source/Dafny/Coco/LICENSE.txt&lt;/code&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>werdhaihai/AtlasReaper</title>
    <updated>2023-07-01T01:32:47Z</updated>
    <id>tag:github.com,2023-07-01:/werdhaihai/AtlasReaper</id>
    <link href="https://github.com/werdhaihai/AtlasReaper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A command-line tool for reconnaissance and targeted write operations on Confluence and Jira instances.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AtlasReaper&lt;/h1&gt; &#xA;&lt;p&gt;AtlasReaper is a command-line tool developed for offensive security purposes, primarily focused on reconnaissance of Confluence and Jira. It also provides various features that can be helpful for tasks such as credential farming and social engineering. The tool is written in C#.&lt;/p&gt; &#xA;&lt;p&gt;Blog post: &lt;a href=&#34;https://medium.com/specter-ops-posts/sowing-chaos-and-reaping-rewards-in-confluence-and-jira-7a90ba33bf62&#34;&gt;Sowing Chaos and Reaping Rewards in Confluence and Jira&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;                                                   .@@@@&#xA;                                               @@@@@&#xA;                                            @@@@@   @@@@@@@&#xA;                                          @@@@@   @@@@@@@@@@@&#xA;                                         @@@@@  @@@@@@@@@@@@@@@&#xA;                                        @@@@,  @@@@        *@@@@&#xA;                                          @@@@ @@@  @@  @@@ .@@@&#xA;   _  _   _         ___                       @@@@@@@     @@@@@@&#xA;  /_\| |_| |__ _ __| _ \___ __ _ _ __  ___ _ _   @@   @@@@@@@@&#xA; / _ \  _| / _` (_-&amp;lt;   / -_) _` | &#39;_ \/ -_) &#39;_|  @@   @@@@@@@@&#xA;/_/ \_\__|_\__,_/__/_|_\___\__,_| .__/\___|_|    @@@@@@@@   &amp;amp;@&#xA;                                |_|             @@@@@@@@@@  @@&amp;amp;&#xA;                                                @@@@@@@@@@@@@@@@@&#xA;                                               @@@@@@@@@@@@@@@@. @@&#xA;                                                  @werdhaihai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;AtlasReaper uses commands, subcommands, and options. The format for executing commands is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;.\AtlasReaper.exe [command] [subcommand] [options]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;[command]&lt;/code&gt;, &lt;code&gt;[subcommand]&lt;/code&gt;, and &lt;code&gt;[options]&lt;/code&gt; with the appropriate values based on the action you want to perform. For more information about each command or subcommand, use the &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of available commands and subcommands:&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Each command has sub commands for interacting with the specific product.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Subcommands&lt;/h3&gt; &#xA;&lt;h4&gt;Confluence&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence attach&lt;/code&gt; - Attach a file to a page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence download&lt;/code&gt; - Download an attachment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence embed&lt;/code&gt; - Embed a 1x1 pixel image to perform farming attacks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence link&lt;/code&gt; - Add a link to a page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence listattachments&lt;/code&gt; - List attachments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence listpages&lt;/code&gt; - List pages in Confluence.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence listspaces&lt;/code&gt; - List spaces in Confluence.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence search&lt;/code&gt; - Search Confluence.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Jira&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;jira addcomment&lt;/code&gt; - Add a comment to an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira attach&lt;/code&gt; - Attach a file to an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira createissue&lt;/code&gt; - Create a new issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira download&lt;/code&gt; - Download attachment(s) from an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira listattachments&lt;/code&gt; - List attachments on an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira listissues&lt;/code&gt; - List issues in Jira.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira listprojects&lt;/code&gt; - List projects in Jira.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira listusers&lt;/code&gt; - List Atlassian users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira searchissues&lt;/code&gt; - Search issues in Jira.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Common Commands&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;help&lt;/code&gt; - Display more information on a specific command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here are a few examples of how to use AtlasReaper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Search for a keyword in Confluence with wildcard search:&lt;/p&gt; &lt;p&gt;&lt;code&gt;.\AtlasReaper.exe confluence search --query &#34;http*example.com*&#34; --url $url --cookie $cookie&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Attach a file to a page in Confluence:&lt;/p&gt; &lt;p&gt;&lt;code&gt;.\AtlasReaper.exe confluence attach --page-id &#34;12345&#34; --file &#34;C:\path\to\file.exe&#34; --url $url --cookie $cookie&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new issue in Jira:&lt;/p&gt; &lt;p&gt;&lt;code&gt;.\AtlasReaper.exe jira createissue --project &#34;PROJ&#34; --issue-type Task --message &#34;I can&#39;t access this link from my host&#34; --url $url --cookie $cookie&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;Confluence and Jira can be configured to allow anonymous access. You can check this by supplying omitting the -c/--cookie from the commands.&lt;/p&gt; &#xA;&lt;p&gt;In the event authentication is required, you can dump cookies from a user&#39;s browser with &lt;a href=&#34;&#34;&gt;SharpChrome&lt;/a&gt; or another similar tool.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;.\SharpChrome.exe cookies /showall&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look for any cookies scoped to the &lt;code&gt;*.atlassian.net&lt;/code&gt; named &lt;code&gt;cloud.session.token&lt;/code&gt; or &lt;code&gt;tenant.session.token&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Please note the following limitations of AtlasReaper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The tool has not been thoroughly tested in all environments, so it&#39;s possible to encounter crashes or unexpected behavior. Efforts have been made to minimize these issues, but caution is advised.&lt;/li&gt; &#xA; &lt;li&gt;AtlasReaper uses the &lt;code&gt;cloud.session.token&lt;/code&gt; or &lt;code&gt;tenant.session.token&lt;/code&gt; which can be obtained from a user&#39;s browser. Alternatively, it can use anonymous access if permitted. (API tokens or other auth is not currently supported)&lt;/li&gt; &#xA; &lt;li&gt;For write operations, the username associated with the user session token (or &#34;anonymous&#34;) will be listed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issues or have suggestions for improvements, please feel free to contribute by submitting a pull request or opening an issue in the &lt;a href=&#34;https://github.com/werdhaihai/AtlasReaper&#34;&gt;AtlasReaper repo&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>