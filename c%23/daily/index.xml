<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-29T01:30:56Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>night-moon-studio/Template</title>
    <updated>2023-04-29T01:30:56Z</updated>
    <id>tag:github.com,2023-04-29:/night-moon-studio/Template</id>
    <link href="https://github.com/night-moon-studio/Template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;欢迎使用 Night Moon Studio 的开源模板.&lt;/h2&gt; &#xA;&lt;p&gt;新一轮的需求搜集: &lt;a href=&#34;https://github.com/night-moon-studio/Template/issues/6&#34;&gt;https://github.com/night-moon-studio/Template/issues/6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;所有细微的配置请参考工程中的 [&lt;a href=&#34;https://github.com/night-moon-studio/Template/raw/main/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.txt&#34;&gt;使用说明.txt&lt;/a&gt;] 文档。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;文章导航&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/NMSLanX/p/17326728.html&#34;&gt;模板介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/NMSLanX/p/17328697.html&#34;&gt;项目及脚本介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/NMSLanX/p/17328924.html&#34;&gt;ISSUE 相关&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/NMSLanX/p/17328962.html&#34;&gt;PR 相关&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/NMSLanX/p/17329521.html&#34;&gt;发布相关&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;从0到发布(编写中)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;了解这款开源模板:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;模板目录结构清晰,允许 .NET 开源爱好者直接上手免费开发:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;单元测试: /test/ut/ 为存放单元测试工程的文件夹.&lt;/li&gt; &#xA;   &lt;li&gt;性能测试: /test/benchmark/ 为存放性能测试工程的文件夹.&lt;/li&gt; &#xA;   &lt;li&gt;样例文件夹: /samples/ 存放源码样例的文件夹.&lt;/li&gt; &#xA;   &lt;li&gt;源码文件夹: /src/ 存放源码工程的文件夹.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;实战配置:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;工程配置及管道配置吸取了大量的实战配置,满足大多数 .NET 开源开发者.&lt;/li&gt; &#xA;   &lt;li&gt;有详细的 [使用说明.txt] 教程指导开发者理解和完成配置.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;一些疑问:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;工程中为何没有文档网站搭建相关的内容?(答:暂时没有,建议文档与工程分开.)&lt;/li&gt; &#xA;   &lt;li&gt;我是否可以魔改这个模板?(答:可以,但更改目录结构可能破坏管道的一些功能，首先需要了解管道功能才可根据自己的需求定制模板.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;管道说明&lt;/h2&gt; &#xA;&lt;h3&gt;关键 Token 配置:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Apply Token(可创建永久的):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如果您的工程存放在个人账户下, 您需要申请一个私人 &lt;a href=&#34;https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;Token&lt;/a&gt; 来开放权限使用管道:&lt;/li&gt; &#xA;   &lt;li&gt;请创建 经典版(classic) Token 而不是 Fine-grained Token, 后者权限太低;&lt;/li&gt; &#xA;   &lt;li&gt;复制生成好的 Token 字符串, 在你的项目 Setting -&amp;gt; Secrets and variables -&amp;gt; Action 中创建变量:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;环境变量&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;REPO_GITHUB_TOKEN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;{{your token string}}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ISSUE 管道:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ISSUE 推荐:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;当一个 ISSUE 创建时，我们的推荐功能将发挥作用，挑选出最多 7 个与其相似的 ISSUE.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ISSUE 用户屏蔽:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;当您收到一些恶意的无用的令人困扰的 ISSUE 时，您只需为其添加一个 aaa-block-user 标签，即可在该库中屏蔽该发帖用户。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PR 管道:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;PR 检测 管道:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;单元测试:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;该管道将在用户向 dev** 提交 PR 后自动触发.&lt;/li&gt; &#xA;     &lt;li&gt;该管道执行三个平台的 UT 测试任务.&lt;/li&gt; &#xA;     &lt;li&gt;用户需要注意提交上来的代码是否有绕过 UT 测试.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;标签标记:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Label 标记将根据 labeler.yml 的配置对 PR 提交的代码进行标记.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;ISSUE关联:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;PR 标题将和指定的 ISSUE 进行比对，挑选出合适相似度的 ISSUE 进行关联.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PR 合并 管道:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;该管道将在成功合并 PR 后触发.&lt;/li&gt; &#xA;   &lt;li&gt;该管道将当前 PR 添加到 {Project_Name}_VNext 的计划中.&lt;/li&gt; &#xA;   &lt;li&gt;如果不存在 VNext 计划,将自动创建, 并归档当前 PR.&lt;/li&gt; &#xA;   &lt;li&gt;{Project_Name}_VNext 将在发版时自动归档.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;发布管道:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;发布管道将并行运行3个任务, 3个任务彼此之间互不影响, 如果其中执行出现意外, 可重复触发.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;打包任务:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;将在 CHANGELOG.md 提交时自动触发.&lt;/li&gt; &#xA;   &lt;li&gt;将扫描 CHANGELOG.md 最后一个版本信息.&lt;/li&gt; &#xA;   &lt;li&gt;将执行 ubuntu 环境的 UT 测试. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;1 是保证发布之前 UT 测试是通过的.&lt;/li&gt; &#xA;     &lt;li&gt;2 是生成代码覆盖率文件.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;如果用户配置了代码覆盖率的上传密钥(&lt;a href=&#34;https://app.codecov.io/gh/%7B%7Buser%7D%7D/%7B%7Bproject%7D%7D/settings),%E8%A6%86%E7%9B%96%E7%8E%87%E6%96%87%E4%BB%B6%E5%B0%86%E4%B8%8A%E4%BC%A0%E8%87%B3%5B%E7%BD%91%E7%AB%99%5D(https://app.codecov.io/gh&#34;&gt;https://app.codecov.io/gh/{{user}}/{{project}}/settings),覆盖率文件将上传至[网站](https://app.codecov.io/gh&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;然后执行 public 测试, 测试将匹配 CHANGELOG.md 以及 NUGET 网站中的包信息, 如果工程的打包信息合法,则进行打包.&lt;/li&gt; &#xA;   &lt;li&gt;如果用户配置了 NUGET 的上传密钥,覆盖率文件将上传至 NUGET.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Release 任务:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;将在 CHANGELOG.md 提交时自动触发.&lt;/li&gt; &#xA;   &lt;li&gt;扫描 CHANGELOG.md 最后一个版本信息.&lt;/li&gt; &#xA;   &lt;li&gt;如果不存在该版本信息的包,将自动以该版本信息发布 Release / Tag 包.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Project 归档任务:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;将在 CHANGELOG.md 提交时自动触发.&lt;/li&gt; &#xA;   &lt;li&gt;扫描 CHANGELOG.md 最后一个版本信息.&lt;/li&gt; &#xA;   &lt;li&gt;归档现有的 {{project}}_VNext 计划到 {{project}}_Release_v{{version}} 计划.&lt;/li&gt; &#xA;   &lt;li&gt;创建新的 {{project}}_VNext 计划.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;发布管道不一定都执行成功,如 NUGET 上已存在发布包, 则 NUGET 任务在二次触发时将执行失败.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;其他功能&lt;/h2&gt; &#xA;&lt;p&gt;这款模板除了实用的管道外还有其他功能：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;ISSUE 提问模板，您可以提一个 ISSUE 看看样例;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;依赖检测机器人&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;可以查看 project.yml 查看每个项目的依赖配置.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>