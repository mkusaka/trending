<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-05T01:28:33Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jumoog/intro-skipper</title>
    <updated>2024-08-05T01:28:33Z</updated>
    <id>tag:github.com,2024-08-05:/jumoog/intro-skipper</id>
    <link href="https://github.com/jumoog/intro-skipper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fingerprint audio to automatically detect and skip intro/credit sequences in Jellyfin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Intro Skipper (beta)&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;img alt=&#34;Plugin Banner&#34; src=&#34;https://raw.githubusercontent.com/jumoog/intro-skipper/master/images/logo.png&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; Analyzes the audio of television episodes to detect and skip over intros. &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/jumoog/intro-skipper/actions/workflows/codeql.yml&#34;&gt;&lt;img src=&#34;https://github.com/jumoog/intro-skipper/actions/workflows/codeql.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Jellyfin 10.8&lt;/h2&gt; &#xA;&lt;p&gt;ðŸ‘‰ðŸ‘‰ðŸ‘‰ &lt;a href=&#34;https://github.com/jumoog/intro-skipper/raw/10.8/README.md&#34;&gt;Jellyfin 10.8 Instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jellyfin 10.9.8 (or newer)&lt;/li&gt; &#xA; &lt;li&gt;Jellyfin&#39;s &lt;a href=&#34;https://github.com/jellyfin/jellyfin-ffmpeg&#34;&gt;fork&lt;/a&gt; of &lt;code&gt;ffmpeg&lt;/code&gt; must be installed, version &lt;code&gt;6.0.1-5&lt;/code&gt; or newer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;jellyfin/jellyfin&lt;/code&gt; 10.9.z container: preinstalled&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;linuxserver/jellyfin&lt;/code&gt; 10.9.z container: preinstalled&lt;/li&gt; &#xA;   &lt;li&gt;Debian Linux based native installs: provided by the &lt;code&gt;jellyfin-ffmpeg6&lt;/code&gt; package&lt;/li&gt; &#xA;   &lt;li&gt;MacOS native installs: build ffmpeg with chromaprint support (&lt;a href=&#34;https://raw.githubusercontent.com/jumoog/intro-skipper/master/#installation-macos&#34;&gt;instructions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Detection parameters&lt;/h2&gt; &#xA;&lt;p&gt;Show introductions will be detected if they are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Located within the first 25% of an episode or the first 10 minutes, whichever is smaller&lt;/li&gt; &#xA; &lt;li&gt;Between 15 seconds and 2 minutes long&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ending credits will be detected if they are shorter than 4 minutes.&lt;/p&gt; &#xA;&lt;p&gt;These parameters can be configured by opening the plugin settings&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1: Install the plugin&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add this plugin repository to your server: &lt;code&gt;https://raw.githubusercontent.com/jumoog/intro-skipper/master/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the Intro Skipper plugin from the General section&lt;/li&gt; &#xA; &lt;li&gt;Restart Jellyfin&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Step 2: Configure the plugin&lt;/h3&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;OPTIONAL: Enable automatic skipping or skip button &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Go to Dashboard -&amp;gt; Plugins -&amp;gt; Intro Skipper&lt;/li&gt; &#xA;   &lt;li&gt;Check &#34;Automatically skip intros&#34; or &#34;Show skip intro button&#34; and click Save&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go to Dashboard -&amp;gt; Scheduled Tasks -&amp;gt; Analyze Episodes and click the play button&lt;/li&gt; &#xA; &lt;li&gt;After a season has completed analyzing, play some episodes from it and observe the results &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Status updates are logged before analyzing each season of a show&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h4&gt;Scheduled tasks fail instantly&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Verify that Intro Skipper can detect ffmpeg with Chromaprint &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dashboard -&amp;gt; Plugins -&amp;gt; Intro Skipper -&amp;gt; Support Bundle Info&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Verify that ffmpeg is installed and detected by jellyfin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dashboard -&amp;gt; Playback -&amp;gt; FFmpeg path&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Verify that Chromaprint is enabled in ffmpeg (&lt;code&gt;--enable-chromaprint&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Skip button is not visible&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify you have successfully completed the scheduled task at least once&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clear your browser cache and reload the Jellyfin server webpage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fix any permission mismatches between the web folder and Jellyfin server&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Official Jellyfin Docker:&lt;/strong&gt; The container is being run as a non-root user while having been built as a root user, causing the web files to be owned by root. To solve this, you can remove any lines like &lt;code&gt;User: 1000:1000&lt;/code&gt;, etc. from the Jellyfin Docker Compose file.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;LinuxServer Docker Container:&lt;/strong&gt; Set an environment variable &lt;code&gt;DOCKER_MODS=ghcr.io/jumoog/intro-skipper&lt;/code&gt; to ensure the permissions are set correctly for the skip button:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  jellyfin:&#xA;    image: lscr.io/linuxserver/jellyfin:latest&#xA;    container_name: jellyfin&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Etc/UTC&#xA;      - DOCKER_MODS=ghcr.io/jumoog/intro-skipper&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hotio Docker Container:&lt;/strong&gt; For the Hotio Docker Container, you can find the detailed solution to permission issues in the linked GitHub discussion: &lt;a href=&#34;https://github.com/jumoog/intro-skipper/issues/198#issuecomment-2169737803&#34;&gt;Hotio Docker Container Issue Solution&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ubuntu/Debian:&lt;/strong&gt; Run the following command to fix the permissions on &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo chown jellyfin /usr/share/jellyfin/web/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that you might need to repeat this command after Jellyfin updates.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Locate &lt;code&gt;index.html&lt;/code&gt; in &lt;code&gt;C:\Program Files\Jellyfin\Server\jellyfin-web&lt;/code&gt; and modify the permissions for your user to Full Control. After making this change, restart Jellyfin.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;b&gt;Install from distro repositories -&lt;/b&gt; the jellyfin-server will execute as &lt;code&gt;jellyfin&lt;/code&gt; user while the web files will be owned by &lt;code&gt;root&lt;/code&gt;, &lt;code&gt;www-data&lt;/code&gt;, etc. This can &lt;i&gt;likely&lt;/i&gt; be fixed by adding the &lt;code&gt;jellyfin&lt;/code&gt; user (or whichever user executes the jellyfin server) to the same group that owns the jellyfin-web folders. &lt;strong&gt;You should only do this if they are owned by a group other than root&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The official Android TV app do not support the skip button. For this app, you will need to use the autoskip option. Please note that there is currently an &lt;a href=&#34;https://github.com/jumoog/intro-skipper/issues/168&#34;&gt;issue&lt;/a&gt; with autoskip not working because the apps never receive the seek command from Jellyfin.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation (MacOS)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build ffmpeg with chromaprint support using brew: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;macOS 12 or newer can install the &lt;a href=&#34;https://github.com/jellyfin/jellyfin-ffmpeg&#34;&gt;portable jellyfin-ffmpeg&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew uninstall --force --ignore-dependencies ffmpeg&#xA;brew install chromaprint amiaopensource/amiaos/decklinksdk&#xA;brew tap homebrew-ffmpeg/ffmpeg&#xA;brew install homebrew-ffmpeg/ffmpeg/ffmpeg --with-chromaprint&#xA;brew link --overwrite ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Open ~/.config/jellyfin/encoding.xml and add or edit the following lines &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Replace [FFMPEG_PATH] with the path returned by &lt;code&gt;whereis ffmpeg&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;EncoderAppPath&amp;gt;[FFMPEG_PATH]&amp;lt;/EncoderAppPath&amp;gt;&#xA;&amp;lt;EncoderAppPathDisplay&amp;gt;[FFMPEG_PATH]&amp;lt;/EncoderAppPathDisplay&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://raw.githubusercontent.com/jumoog/intro-skipper/master/#installation&#34;&gt;general installation instructions&lt;/a&gt; above&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation about how the API works can be found in &lt;a href=&#34;https://raw.githubusercontent.com/jumoog/intro-skipper/master/docs/api.md&#34;&gt;api.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0x90d/videoduplicatefinder</title>
    <updated>2024-08-05T01:28:33Z</updated>
    <id>tag:github.com,2024-08-05:/0x90d/videoduplicatefinder</id>
    <link href="https://github.com/0x90d/videoduplicatefinder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Video Duplicate Finder - Crossplatform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Video Duplicate Finder&lt;/h1&gt; &#xA;&lt;p&gt;Video Duplicate Finder is a cross-platform software to find duplicated video (and image) files on hard disk based on similiarity. That means unlike other duplicate finders this one does also finds duplicates which have a different resolution, frame rate and even watermarked.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-platform&lt;/li&gt; &#xA; &lt;li&gt;Fast scanning speed&lt;/li&gt; &#xA; &lt;li&gt;Ultra fast rescan&lt;/li&gt; &#xA; &lt;li&gt;Optional calling ffmpeg functions natively for even more speed&lt;/li&gt; &#xA; &lt;li&gt;Finds duplicate videos / images based on similarity&lt;/li&gt; &#xA; &lt;li&gt;Windows, Linux and MacOS GUI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Binaries&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/0x90d/videoduplicatefinder/releases/tag/3.0.x&#34;&gt;Daily build&lt;/a&gt; (You need to download FFmpeg and FFprobe yourself, see below! Please note the attachments of this release are automatically created and replaced on every new commit.)&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;h4&gt;FFmpeg &amp;amp; FFprobe:&lt;/h4&gt; &#xA;&lt;h4&gt;Windows user:&lt;/h4&gt; &#xA;&lt;p&gt;Get latest package from &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;https://ffmpeg.org/download.html&lt;/a&gt; I recommend the full (GPL) shared version. If you want to use native ffmpeg binding you &lt;strong&gt;must&lt;/strong&gt; use the shared version.&lt;/p&gt; &#xA;&lt;p&gt;Extract ffmpeg and ffprobe into the same directory of VDF.GUI.dll or into a sub folder called &lt;code&gt;bin&lt;/code&gt;. Or make sure it can be found in &lt;code&gt;PATH&lt;/code&gt; system environment variable&lt;/p&gt; &#xA;&lt;h4&gt;Linux user:&lt;/h4&gt; &#xA;&lt;p&gt;Installing ffmpeg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;sudo apt-get install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open terminal in VDF folder and execute &lt;code&gt;./VDF.GUI&lt;/code&gt; You may need to set execute permission first &lt;code&gt;sudo chmod 777 VDF.GUI&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;MacOS user:&lt;/h4&gt; &#xA;&lt;p&gt;Install ffmpeg / ffprobe using homebrew&lt;/p&gt; &#xA;&lt;p&gt;Open terminal in VDF folder and execute &lt;code&gt;./VDF.GUI&lt;/code&gt; or if you have .NET installed &lt;code&gt;dotnet VDF.GUI.dll&lt;/code&gt; You may get a permission error. Open system settings of your Mac, go to &lt;code&gt;Privacy &amp;amp; Security&lt;/code&gt; and then &lt;code&gt;Developer Tools&lt;/code&gt;. Now add &lt;code&gt;Terminal&lt;/code&gt; to the list.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots (slightly outdated)&lt;/h1&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/46010672/129763067-8855a538-4a4f-4831-ac42-938eae9343bd.png&#34; width=&#34;510&#34;&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Video Duplicate Finder is licensed under GPLv3&lt;/p&gt; &#xA;&lt;h1&gt;Credits / Third Party&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AvaloniaUI/Avalonia&#34;&gt;Avalonia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Actipro/Avalonia-Controls&#34;&gt;ActiPro Avalonia Controls (Free Edition)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ruslan-B/FFmpeg.AutoGen&#34;&gt;FFmpeg.AutoGen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/protobuf-net/protobuf-net&#34;&gt;protobuf-net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SixLabors/ImageSharp&#34;&gt;SixLabors.ImageSharp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET 7.x&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 2022 is recommended&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Committing&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a pull request for each addition or fix - do NOT merge them into one PR&lt;/li&gt; &#xA; &lt;li&gt;Unless it refers to an existing issue, write into your pull request what it does&lt;/li&gt; &#xA; &lt;li&gt;For larger PRs I recommend you create an issue for discussion first&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>