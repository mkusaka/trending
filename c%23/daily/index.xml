<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-14T01:28:09Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DotNetNext/SqlSugar</title>
    <updated>2023-12-14T01:28:09Z</updated>
    <id>tag:github.com,2023-12-14:/DotNetNext/SqlSugar</id>
    <link href="https://github.com/DotNetNext/SqlSugar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.Net aot ORM Fastest ORM Simple Easy Sqlite orm Oracle ORM Mysql Orm postgresql ORm SqlServer oRm 达梦 ORM 人大金仓 ORM 神通ORM C# ORM , C# ORM .NET ORM NET5 ORM .NET6 ORM ClickHouse orm QuestDb ,TDengine ORM,OceanBase orm,GaussDB orm ,Tidb orm Object/Relational Mapping&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&#34;https://www.donet5.com/Home/Doc&#34;&gt;&lt;font color=&#34;red&#34;&gt;中文&lt;/font&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;SqlSugar ORM&lt;/h2&gt; &#xA;&lt;p&gt;SqlSugar ORM is a library providing Object/Relational Mapping (ORM)&lt;/p&gt; &#xA;&lt;p&gt;An ORM framework from the future&lt;/p&gt; &#xA;&lt;p&gt;Using SqlSugar is very simple , And it&#39;s powerful.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use aot： &lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2574&#34;&gt;aot document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support database&lt;/h2&gt; &#xA;&lt;p&gt;MySql、SqlServer、Sqlite、Oracle 、 postgresql、达梦、&lt;/p&gt; &#xA;&lt;p&gt;人大金仓(国产推荐)、神通数据库、瀚高、Access 、OceanBase&lt;/p&gt; &#xA;&lt;p&gt;TDengine QuestDb Clickhouse MySqlConnector、华为 GaussDB&lt;/p&gt; &#xA;&lt;p&gt;南大通用 GBase、MariaDB、Tidb、Odbc、Percona Server,&lt;/p&gt; &#xA;&lt;p&gt;Amazon Aurora、Azure Database for MySQL、&lt;/p&gt; &#xA;&lt;p&gt;Google Cloud SQL for MySQL、custom database&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support Cross database query&lt;/li&gt; &#xA; &lt;li&gt;Support SqlServer、MySql、PgSql and Oracle insert bulkcopy&lt;/li&gt; &#xA; &lt;li&gt;Split table big data self-processing&lt;/li&gt; &#xA; &lt;li&gt;Support Multi-tenant, multi-library transactions&lt;/li&gt; &#xA; &lt;li&gt;Support CodeFirst data migration.&lt;/li&gt; &#xA; &lt;li&gt;Support Join query 、 Union all 、 Subquery&lt;/li&gt; &#xA; &lt;li&gt;Support Configure the query&lt;/li&gt; &#xA; &lt;li&gt;Support DbFirst import entity class from database, or use Generation Tool.&lt;/li&gt; &#xA; &lt;li&gt;Support one-to-many and many-to-many navigation properties&lt;/li&gt; &#xA; &lt;li&gt;Support MySql、SqlServer、Sqlite、Oracle 、 postgresql 、QuestDb、ClickHouse、达梦、人大金仓 、神通数据库、瀚高、MsAccess、华为GaussDB、GBase 8s、Odbc、Custom&lt;/li&gt; &#xA; &lt;li&gt;Support AOP 、 Diff Log 、 Query Filter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Other&lt;/th&gt; &#xA;   &lt;th&gt;Select&lt;/th&gt; &#xA;   &lt;th&gt;Insert&lt;/th&gt; &#xA;   &lt;th&gt;Update&lt;/th&gt; &#xA;   &lt;th&gt;Delete&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/donet5/SqlSugar/wiki/NUGET&#34;&gt;Nuget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1187&#34;&gt;Query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1193&#34;&gt; Insert &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1191&#34;&gt;Update&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1195&#34;&gt;Delete&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/donet5/SqlSugar/wiki/Create--database-operation-object&#34;&gt; Start guide&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1185&#34;&gt;Join query &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2422&#34;&gt;Insert without entity &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2423&#34;&gt;Update without entity&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2424&#34;&gt; Delete without entity &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2246&#34;&gt;Multiple databases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1188&#34;&gt;Include query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=2430&#34;&gt;Include Insert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=2432&#34;&gt;Include Update&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=2431&#34;&gt;Include Delete&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc&#34;&gt;&lt;font color=&#34;red&#34;&gt;中文文档&lt;/font&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2244&#34;&gt;Cross database query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2420&#34;&gt;Insert by json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2420&#34;&gt;Update by json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=2420&#34;&gt;Delete by json&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Feature characteristic&lt;/h2&gt; &#xA;&lt;h3&gt;Feature1 : Join query&lt;/h3&gt; &#xA;&lt;p&gt;Super simple query syntax&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var query  = db.Queryable&amp;lt;Order&amp;gt;()&#xA;            .LeftJoin&amp;lt;Custom&amp;gt;  ((o, cus) =&amp;gt; o.CustomId == cus.Id)&#xA;            .LeftJoin&amp;lt;OrderItem&amp;gt; ((o, cus, oritem ) =&amp;gt; o.Id == oritem.OrderId)&#xA;            .LeftJoin&amp;lt;OrderItem&amp;gt; ((o, cus, oritem , oritem2) =&amp;gt; o.Id == oritem2.OrderId)&#xA;            .Where(o =&amp;gt; o.Id == 1)  &#xA;            .Select((o, cus) =&amp;gt; new ViewOrder { Id = o.Id, CustomName = cus.Name })&#xA;            .ToList();   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT&#xA;  [o].[Id] AS [Id],&#xA;  [cus].[Name] AS [CustomName]&#xA;FROM&#xA;  [Order] o&#xA;  Left JOIN [Custom] cus ON ([o].[CustomId] = [cus].[Id])&#xA;  Left JOIN [OrderDetail] oritem ON ([o].[Id] = [oritem].[OrderId])&#xA;  Left JOIN [OrderDetail] oritem2 ON ([o].[Id] = [oritem2].[OrderId])&#xA;WHERE&#xA;  ([o].[Id] = @Id0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature2 :Include Query、Insert、Delete and Update&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//query  by nav&#xA;var list=db.Queryable&amp;lt;Test&amp;gt;()&#xA;           .Includes(x =&amp;gt; x.Provinces,x=&amp;gt;x.Citys ,x=&amp;gt;x.Street) //multi-level&#xA;           .Includes(x =&amp;gt; x.ClassInfo) &#xA;           .ToList();&#xA;           &#xA;//insert by nav&#xA; db.InsertNav(list) //Finer operation than EFCore&#39;s SaveChange&#xA;            .Include(z1 =&amp;gt; z1.SchoolA).ThenInclude(z1 =&amp;gt; z1.RoomList)//multi-level&#xA;            .Include(z1 =&amp;gt; z1.Books) &#xA;            .ExecuteCommand(); &#xA;            &#xA;//delete by nav               &#xA; db.DeleteNav&amp;lt;Student&amp;gt;(it=&amp;gt;it.Id==1) &#xA;            .Include(z1 =&amp;gt; z1.SchoolA) .ThenInclude(z1 =&amp;gt; z1.RoomList)//multi-level&#xA;            .Include(z1 =&amp;gt; z1.Books) &#xA;            .ExecuteCommand();  &#xA;            &#xA;//update by nav     &#xA; db.UpdateNav(list)&#xA;            .Include(z1 =&amp;gt; z1.SchoolA) .ThenInclude(z1 =&amp;gt; z1.RoomList)//multi-level&#xA;            .Include(z1 =&amp;gt; z1.Books) &#xA;            .ExecuteCommand();           &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature3 : Page query&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;&#xA; int pageIndex = 1; &#xA; int pageSize = 20;&#xA; int totalCount=0;&#xA; var page = db.Queryable&amp;lt;Student&amp;gt;().ToPageList(pageIndex, pageSize, ref totalCount);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature4 : Dynamic expression&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var names= new string [] { &#34;a&#34;,&#34;b&#34;};&#xA;Expressionable&amp;lt;Order&amp;gt; exp = new Expressionable&amp;lt;Order&amp;gt;();&#xA;foreach (var item in names)&#xA;{&#xA;    exp.Or(it =&amp;gt; it.Name.Contains(item.ToString()));&#xA;}&#xA;var list= db.Queryable&amp;lt;Order&amp;gt;().Where(exp.ToExpression()).ToList();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT [Id],[Name],[Price],[CreateTime],[CustomId]&#xA;       FROM [Order]  WHERE (&#xA;                     ([Name] like &#39;%&#39;+ CAST(@MethodConst0 AS NVARCHAR(MAX))+&#39;%&#39;) OR &#xA;                     ([Name] like &#39;%&#39;+ CAST(@MethodConst1 AS NVARCHAR(MAX))+&#39;%&#39;)&#xA;                    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature5 : Multi-tenant transaction&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//Creaate  database object&#xA;SqlSugarClient db = new SqlSugarClient(new List&amp;lt;ConnectionConfig&amp;gt;()&#xA;{&#xA;    new ConnectionConfig(){ ConfigId=&#34;0&#34;, DbType=DbType.SqlServer,  ConnectionString=Config.ConnectionString, IsAutoCloseConnection=true },&#xA;    new ConnectionConfig(){ ConfigId=&#34;1&#34;, DbType=DbType.MySql, ConnectionString=Config.ConnectionString4 ,IsAutoCloseConnection=true}&#xA;});&#xA;&#xA;&#xA;var mysqldb = db.GetConnection(&#34;1&#34;);//mysql db&#xA;var sqlServerdb = db.GetConnection(&#34;0&#34;);// sqlserver db&#xA; &#xA;db.BeginTran();&#xA;            mysqldb.Insertable(new Order()&#xA;            {&#xA;                CreateTime = DateTime.Now,&#xA;                CustomId = 1,&#xA;                Name = &#34;a&#34;,&#xA;                Price = 1&#xA;            }).ExecuteCommand();&#xA;            mysqldb.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;            sqlServerdb.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;&#xA;db.CommitTran();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature6 : Singleton Pattern&lt;/h3&gt; &#xA;&lt;p&gt;Implement transactions across methods&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-CS&#34;&gt;public static SqlSugarScope Db = new SqlSugarScope(new ConnectionConfig()&#xA; {&#xA;            DbType = SqlSugar.DbType.SqlServer,&#xA;            ConnectionString = Config.ConnectionString,&#xA;            IsAutoCloseConnection = true &#xA;  },&#xA;  db=&amp;gt; {&#xA;            db.Aop.OnLogExecuting = (s, p) =&amp;gt;&#xA;            {&#xA;                Console.WriteLine(s);&#xA;            };&#xA; });&#xA; &#xA; &#xA;  using (var tran = Db.UseTran())&#xA;  {&#xA;          &#xA;              &#xA;               new Test2().Insert(XX);&#xA;               new Test1().Insert(XX);&#xA;               ..... &#xA;                ....&#xA;                         &#xA;             tran.CommitTran(); &#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature7 : Query filter&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//set filter&#xA;db.QueryFilter.Add(new TableFilterItem&amp;lt;Order&amp;gt;(it =&amp;gt; it.Name.Contains(&#34;a&#34;)));  &#xA; &#xA;   &#xA;db.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;//SELECT [Id],[Name],[Price],[CreateTime],[CustomId] FROM [Order]  WHERE  ([Name] like &#39;%&#39;+@MethodConst0+&#39;%&#39;)  &#xA;&#xA;db.Queryable&amp;lt;OrderItem, Order&amp;gt;((i, o) =&amp;gt; i.OrderId == o.Id)&#xA;        .Where(i =&amp;gt; i.OrderId != 0)&#xA;        .Select(&#34;i.*&#34;).ToList();&#xA;//SELECT i.* FROM [OrderDetail] i  ,[Order]  o  WHERE ( [i].[OrderId] = [o].[Id] )  AND &#xA;//( [i].[OrderId] &amp;lt;&amp;gt; @OrderId0 )  AND  ([o].[Name] like &#39;%&#39;+@MethodConst1+&#39;%&#39;)&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature8 : Insert or update&lt;/h3&gt; &#xA;&lt;p&gt;insert or update&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;    var x = Db.Storageable(list2).ToStorage();  &#xA;    x.AsInsertable.ExecuteCommand();  &#xA;    x.AsUpdateable.ExecuteCommand();  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;insert into not exists&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var x = Db.Storageable(list).SplitInsert(it =&amp;gt; !it.Any()).ToStorage()&#xA;x.AsInsertable.ExecuteCommand(); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature9 ：Auto split table&lt;/h3&gt; &#xA;&lt;p&gt;Split entity&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[SplitTable(SplitType.Year)]//Table by year (the table supports year, quarter, month, week and day)&#xA;[SugarTable(&#34;SplitTestTable_{year}{month}{day}&#34;)] &#xA; public class SplitTestTable&#xA; {&#xA;     [SugarColumn(IsPrimaryKey =true)]&#xA;     public long Id { get; set; }&#xA; &#xA;     public string Name { get; set; }&#xA;     &#xA;     //When the sub-table field is inserted, which table will be inserted according to this field. &#xA;     //When it is updated and deleted, it can also be convenient to use this field to      &#xA;     //find out the related table &#xA;     [SplitField] &#xA;     public DateTime CreateTime { get; set; }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Split query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt; var lis2t = db.Queryable&amp;lt;OrderSpliteTest&amp;gt;()&#xA;.SplitTable(DateTime.Now.Date.AddYears(-1), DateTime.Now)&#xA;.ToPageList(1,2);　&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature10： Big data insert or update&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//Insert A million only takes a few seconds&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkCopy(GetList());&#xA; &#xA; &#xA;//update A million only takes a few seconds&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkUpdate(GetList());//A million only takes a few seconds完&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkUpdate(GetList(),new string[]{&#34;id&#34;},new string[]{&#34;name&#34;,&#34;time&#34;})//no primary key&#xA; &#xA;//if exists update, else  insert&#xA; var x= db.Storageable&amp;lt;Order&amp;gt;(data).ToStorage();&#xA;     x.BulkCopy();&#xA;     x.BulkUpdate(); &#xA;     &#xA;//set table name&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().AS(&#34;tableName&#34;).BulkCopy(GetList())&#xA; &#xA;//set page &#xA;db.Fastest&amp;lt;Order&amp;gt;().PageSize(300000).BulkCopy(insertObjs);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>micjahn/ZXing.Net</title>
    <updated>2023-12-14T01:28:09Z</updated>
    <id>tag:github.com,2023-12-14:/micjahn/ZXing.Net</id>
    <link href="https://github.com/micjahn/ZXing.Net" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.Net port of the original java-based barcode reader and generator library zxing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ZXing.Net&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/ZXing.Net/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/ZXing.Net.svg?sanitize=true&#34; alt=&#34;N|NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/MichaelJahn/zxing-net&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/49uvsxpw3ak9jtmm?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/micjahn/ZXing.Net/master/#donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%92%99-Donate%20%2F%20Support%20Us-blue.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/micjahn/ZXing.Net/master/Icons/logo.jpg&#34; alt=&#34;ZXing.Net.Mobile Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Description&lt;/h2&gt; &#xA;&lt;p&gt;A library which supports decoding and generating of barcodes (like QR Code, PDF 417, EAN, UPC, Aztec, Data Matrix, Codabar) within images.&lt;/p&gt; &#xA;&lt;p&gt;The project is a port of the java based barcode reader and generator library ZXing.&lt;br&gt; &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;https://github.com/zxing/zxing&lt;/a&gt;&lt;br&gt; It has been ported by hand with a lot of optimizations and improvements.&lt;/p&gt; &#xA;&lt;p&gt;The following barcodes are supported by the decoder: UPC-A, UPC-E, EAN-8, EAN-13, Code 39, Code 93, Code 128, ITF, Codabar, MSI, RSS-14 (all variants), QR Code, Data Matrix, Aztec and PDF-417. The encoder supports the following formats: UPC-A, EAN-8, EAN-13, Code 39, Code 128, ITF, Codabar, Plessey, MSI, QR Code, PDF-417, Aztec, Data Matrix&lt;/p&gt; &#xA;&lt;h4&gt;Assemblies are available for the following platforms:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.Net 2.0, 3.5, 4.x, 5.0, 6.0, 7.0&lt;/li&gt; &#xA; &lt;li&gt;Windows RT Class Library and Runtime Components (winmd)&lt;/li&gt; &#xA; &lt;li&gt;.NET Standard / .NET Core / UWP&lt;/li&gt; &#xA; &lt;li&gt;Portable Class Library&lt;/li&gt; &#xA; &lt;li&gt;Unity3D (.Net 2.0 built without System.Drawing reference)&lt;/li&gt; &#xA; &lt;li&gt;Xamarin.Android (formerly Mono for Android)&lt;/li&gt; &#xA; &lt;li&gt;bindings to Windows.Compatibility, CoreCompat.System.Drawing, ImageSharp, SkiaSharp, OpenCVSharp, Magick, Kinect V1 and V2, EmguCV, Eto.Forms, ZKWeb.System.Drawing&lt;/li&gt; &#xA; &lt;li&gt;support COM interop, can be used with VBA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;obsolete Assemblies are available for the following platforms up to release 0.16:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows Phone 7.0, 7.1 and 8.0&lt;/li&gt; &#xA; &lt;li&gt;Windows CE&lt;/li&gt; &#xA; &lt;li&gt;Silverlight 4 and 5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The library is available in the &lt;a href=&#34;https://github.com/micjahn/ZXing.Net/releases&#34;&gt;release section&lt;/a&gt; and as &lt;a href=&#34;https://www.nuget.org/packages/ZXing.Net/&#34;&gt;NuGet package&lt;/a&gt;, too.&lt;/p&gt; &#xA;&lt;h4&gt;Additional platform support without pre-built binaries&lt;/h4&gt; &#xA;&lt;p&gt;The library can be built for Xamarin.iOS (formerly MonoTouch). The project file and solution are available in the source code repository.&lt;/p&gt; &#xA;&lt;p&gt;A special version for the &lt;a href=&#34;http://www.microsoft.com/netmf/&#34;&gt;.Net Micro Framework&lt;/a&gt; can be found in a separate branch in the source code repository.&lt;/p&gt; &#xA;&lt;h4&gt;The following demo clients are available:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;decoder for the command line&lt;/li&gt; &#xA; &lt;li&gt;encoder for the command line&lt;/li&gt; &#xA; &lt;li&gt;Windows Forms demo (demonstrates decoding and encoding of static images and from a camera)&lt;/li&gt; &#xA; &lt;li&gt;Windows Service demo (demonstrates decoding of static images)&lt;/li&gt; &#xA; &lt;li&gt;Windows Presentation Framework demo (demonstrates decoding of static images)&lt;/li&gt; &#xA; &lt;li&gt;Windows RT demo (demonstrates decoding of static images)&lt;/li&gt; &#xA; &lt;li&gt;Windows Store App with HTML5/JS (demonstrates decoding of static images)&lt;/li&gt; &#xA; &lt;li&gt;Unity3D and Vuforia demo (demonstrates encoding of barcodes and decoding of images from a camera with &lt;a href=&#34;http://unity3d.com/&#34;&gt;Unity3D&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;EmguCV demo (demonstrates decoding of images from a camera and uses the &lt;a href=&#34;http://www.emgu.com/&#34;&gt;EmguCV framework&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;OpenCV demo (demonstrates decoding of images from a camera and uses the &lt;a href=&#34;https://github.com/shimat/opencvsharp/&#34;&gt;OpenCVSharp framework&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;AForge demo (demonstrates decoding of images from a camera and uses the &lt;a href=&#34;http://www.aforgenet.com/&#34;&gt;AForge framework&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to the team of the &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;zxing project&lt;/a&gt; for their great work. ZXing.Net would not be possible without your work!&lt;/p&gt; &#xA;&lt;h2&gt;Usage examples&lt;/h2&gt; &#xA;&lt;p&gt;The source code repository includes small examples for Windows Forms, Windows Phone and other project types. Obsolete examples are available for the following platforms in separate branches: 0.16:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Silverlight 4 and 5,&lt;/li&gt; &#xA; &lt;li&gt;Windows CE demo (demonstrates decoding of static images)&lt;/li&gt; &#xA; &lt;li&gt;Windows Phone demo (demonstrates decoding of static images and from a camera)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;small example decoding a barcode inside a bitmap (.Net 2.0/3.5/4.x)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// create a barcode reader instance&#xA;IBarcodeReader reader = new BarcodeReader();&#xA;// load a bitmap&#xA;var barcodeBitmap = (Bitmap)Image.FromFile(&#34;C:\\sample-barcode-image.png&#34;);&#xA;// detect and decode the barcode inside the bitmap&#xA;var result = reader.Decode(barcodeBitmap);&#xA;// do something with the result&#xA;if (result != null)&#xA;{&#xA;   txtDecoderType.Text = result.BarcodeFormat.ToString();&#xA;   txtDecoderContent.Text = result.Text;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;important notice for .Net Standard and .Net 5.0 and above target platforms&lt;/h4&gt; &#xA;&lt;p&gt;If you want to try the sample code above within a project which target .Net Standard or .Net 5.0 or higher then you have to add one of the additional nuget package for a specific image library: &lt;a href=&#34;https://www.nuget.org/packages?q=ZXing.Bindings&#34;&gt;https://www.nuget.org/packages?q=ZXing.Bindings&lt;/a&gt; The main package of ZXing.Net for such platforms only contains the core classes which are not dependent on a specific assembly for image formats.&lt;/p&gt; &#xA;&lt;h2&gt;Help wanted&lt;/h2&gt; &#xA;&lt;p&gt;All help is welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;You use the library? We would be happy if you give us a short note on the use of the library.&lt;/p&gt; &#xA;&lt;p&gt;You found a bug? Please create a new issue here or start a discussion about it if you are not sure.&lt;/p&gt; &#xA;&lt;p&gt;You use the library and you are not happy with it? Write us an email please or start a discussion about your problems with it. We will try to help you.&lt;/p&gt; &#xA;&lt;p&gt;And you can find me on &lt;a href=&#34;http://twitter.com/micjahn&#34;&gt;Twitter&lt;/a&gt;. &lt;a href=&#34;http://twitter.com/micjahn&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/espadrine.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;N|http://twitter.com/micjahn&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support it&lt;/h2&gt; &#xA;&lt;p&gt;If you find the project useful and you wish to support the future development feel free to support it with a donation.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=BYHN42UHPA86E&#34;&gt;&lt;img src=&#34;https://www.paypal.com/en_US/i/btn/btn_donateCC_LG_global.gif&#34; alt=&#34;N|Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Beside a donation patches, bug reports, feedback and other useful help are always welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. Become a sponsor and get your logo on our README on Github with a link to your site.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[&lt;a href=&#34;https://github.com/sponsors/micjahn&#34;&gt;Become a Github Sponsor&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;[&lt;a href=&#34;https://opencollective.com/zxingnet&#34;&gt;Become a Opencollective backer/sponsor&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donation WITHOUT money&lt;/h2&gt; &#xA;&lt;p&gt;It would be really, really great if you could support one of my social projects. You can support it WITHOUT paying money. You only have to go to the following url before you buy anything from a supported online shop (like Amazon or eBay):&lt;br&gt; &lt;a href=&#34;http://www.bildungsspender.de/kitadorfhain&#34;&gt;http://www.bildungsspender.de/kitadorfhain&lt;/a&gt;&lt;br&gt; Select you prefered online shop and go shopping like everytime. The online shop will pay a provision to our Kindergarten for your purchase. No extra costs for you. There are 85 thankful kids. (and one thankful developer of ZXing.Net ;) )&lt;/p&gt;</summary>
  </entry>
</feed>