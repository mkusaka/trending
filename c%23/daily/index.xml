<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-28T01:33:33Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/devhomegithubextension</title>
    <updated>2023-05-28T01:33:33Z</updated>
    <id>tag:github.com,2023-05-28:/microsoft/devhomegithubextension</id>
    <link href="https://github.com/microsoft/devhomegithubextension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/devhomegithubextension/raw/main/src/GithubPluginServer/Assets/StoreDisplay-150.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Welcome to the Dev Home GitHub Extension repo&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/devhomegithubextension&#34;&gt;Dev Home GitHub Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dev Home GitHub widgets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Related repositories include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/devhome&#34;&gt;Dev Home&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing and running Dev Home GitHub Extension&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Dev Home GitHub Extension requires Dev Home. Dev Home requires Windows 11 21H2 (build 22000) or later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Microsoft Store [Recommended]&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://aka.ms/devhome&#34;&gt;Dev Home from the Microsoft Store&lt;/a&gt; and the Dev Home GitHub Extension will automatically be installed on first launch of Dev Home. This allows you to always be on the latest version when we release new builds with automatic upgrades.&lt;/p&gt; &#xA;&lt;p&gt;This is our preferred method.&lt;/p&gt; &#xA;&lt;p&gt;You can also install the Dev Home GitHub Extension from its own &lt;a href=&#34;https://aka.ms/devhomegithubextension&#34;&gt;Microsoft Store listing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other install methods&lt;/h3&gt; &#xA;&lt;h4&gt;Via GitHub&lt;/h4&gt; &#xA;&lt;p&gt;For users who are unable to install the Dev Home GitHub Extension from the Microsoft Store, released builds can be manually downloaded from this repository&#39;s &lt;a href=&#34;https://github.com/microsoft/devhomegithubextension/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dev Home GitHub Extension overview&lt;/h2&gt; &#xA;&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt; &#xA;&lt;h3&gt;Widgets&lt;/h3&gt; &#xA;&lt;p&gt;The Dev Home GitHub Extension provides widgets for Dev Home&#39;s dashboard, which is built as a Windows widget renderer. These widgets are built using the Windows widget platform, which relies on Adaptive Cards.&lt;/p&gt; &#xA;&lt;h3&gt;Machine configuration repository recommendations&lt;/h3&gt; &#xA;&lt;p&gt;The machine configuration tool utilizes the Dev Home GitHub Extension to recommend repositories to clone, but isn&#39;t required to clone and install apps. The app installation tool is powered by winget.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for the Dev Home GitHub Extension can be found at &lt;a href=&#34;https://aka.ms/devhomedocs&#34;&gt;https://aka.ms/devhomedocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance the Dev Home GitHub Extension!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href=&#34;https://github.com/microsoft/devhomegithubextension/raw/main/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt; &#xA;&lt;h2&gt;Communicating with the team&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt; &#xA;&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed preexisting issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to ask a question that you feel doesn&#39;t warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kayla Cinnamon, Product Manager: &lt;a href=&#34;https://twitter.com/cinnamon_msft&#34;&gt;@cinnamon_msft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clint Rutkas, Senior Product Manager: &lt;a href=&#34;https://twitter.com/crutkas&#34;&gt;@crutkas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ujjwal Chadha, Developer: &lt;a href=&#34;https://twitter.com/ujjwalscript&#34;&gt;@ujjwalscript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer guidance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must be running Windows 11 21H2 (build &amp;gt;= 10.0.22000.0) to run Dev Home&lt;/li&gt; &#xA; &lt;li&gt;You must &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development&#34;&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the code&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Uninstall the Preview version of the Dev Home GitHub Extension (Dev Home has a hard time choosing which extension to use if two versions exist)&lt;/li&gt; &#xA; &lt;li&gt;Open the GITServices.sln in Visual Studio 2022 or later, and build from the IDE, or run build.ps1 from a Visual Studio command prompt.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OAuth App&lt;/h3&gt; &#xA;&lt;p&gt;Since secrets cannot be checked in to the repository, developers must create their own test OAuth app for local tests.&lt;/p&gt; &#xA;&lt;p&gt;Follow this link &lt;a href=&#34;https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app&lt;/a&gt; to create a Git OAuth app (with RedirectUri = &#34;devhome://oauth_redirect_uri/&#34;).&lt;/p&gt; &#xA;&lt;p&gt;The OAuth App ClientId and ClientSecret can be added as environment variables using the following instructions:&lt;/p&gt; &#xA;&lt;p&gt;How to set the environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;On an elevated cmd window:&#xA;    setx GITHUB_CLIENT_ID &#34;Your OAuth App&#39;s ClientId&#34; /m&#xA;    setx GITHUB_CLIENT_SECRET &#34;Your OAuth App&#39;s ClientSecret&#34; /m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>EdiWang/Moonglade</title>
    <updated>2023-05-28T01:33:33Z</updated>
    <id>tag:github.com,2023-05-28:/EdiWang/Moonglade</id>
    <link href="https://github.com/EdiWang/Moonglade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The .NET 7 blog system of https://edi.wang, runs on Microsoft Azure&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Moonglade Blog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/ediwang/Moonglade%20DevOps/_build/latest?definitionId=68&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ediwang/Edi-GitHub/_apis/build/status/EdiWang.Moonglade?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/EdiWang/Moonglade/actions/workflows/docker.yml&#34;&gt;&lt;img src=&#34;https://github.com/EdiWang/Moonglade/actions/workflows/docker.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker Linux x64&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/EdiWang/Moonglade/workflows/.NET%20Build%20Linux/badge.svg?sanitize=true&#34; alt=&#34;.NET Build Linux&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://dotnet.microsoft.com/&#34;&gt;.NET&lt;/a&gt; blog system of &lt;a href=&#34;https://edi.wang&#34;&gt;edi.wang&lt;/a&gt; that runs on &lt;a href=&#34;https://azure.microsoft.com/en-us/&#34;&gt;&lt;strong&gt;Microsoft Azure&lt;/strong&gt;&lt;/a&gt;. Designed for developers, enabling most common blogging features including posts, comments, categories, archive, tags and pages.&lt;/p&gt; &#xA;&lt;h2&gt;📦 Deployment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to use stable code from &lt;a href=&#34;https://github.com/EdiWang/Moonglade/releases&#34;&gt;Release&lt;/a&gt; rather than master branch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to enable HTTP/2 support on your web server.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;☁ Full Deploy on Azure (Recommend)&lt;/h3&gt; &#xA;&lt;p&gt;This is the way &lt;a href=&#34;https://edi.wang&#34;&gt;https://edi.wang&lt;/a&gt; is deployed, by taking advantage of as many Azure services as possible, the blog can run very fast and secure.&lt;/p&gt; &#xA;&lt;p&gt;This diagram shows a full Azure deployment for Moonglade for reference.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-blog.edi.wang/web-assets/ediwang-azure-arch-visio-nov2022.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🐋 Quick Deploy on Azure&lt;/h3&gt; &#xA;&lt;p&gt;Use automated deployment script to get your Moonglade up and running in 10 minutes, follow instructions &lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/Quick-Deploy-on-Azure&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🐧 Quick Deploy on Linux without Docker&lt;/h3&gt; &#xA;&lt;p&gt;To quickly get it running on a new Linux machine without Docker, follow instructions &lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/Quick-Install-on-Linux-Machine&#34;&gt;here&lt;/a&gt;. You can watch video tutorial &lt;a href=&#34;https://anduins-site.player.aiur.site/moonglade-install.mp4&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🐵 Development&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tools&lt;/th&gt; &#xA;   &lt;th&gt;Alternative&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio 2022 v17.4+&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; with &lt;a href=&#34;http://dot.net&#34;&gt;.NET 7.0 SDK&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/sql-server/sql-server-2022&#34;&gt;SQL Server 2022&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/sql-server-express-localdb?view=sql-server-ver16&amp;amp;WT.mc_id=AZ-MVP-5002809&#34;&gt;SQL Server LocalDB&lt;/a&gt;, PostgreSQL or MySQL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;💾 Setup Database&lt;/h3&gt; &#xA;&lt;p&gt;Moonglade supports three types of database. You can choose from SQL Server, PostgreSQL or MySQL.&lt;/p&gt; &#xA;&lt;h4&gt;SQL Server&lt;/h4&gt; &#xA;&lt;p&gt;Create a SQL Server 2022 database, e.g. &lt;code&gt;moonglade&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set the &lt;code&gt;MoongladeDatabase&lt;/code&gt; to your database connection string in &lt;code&gt;appsettings.Development.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;MoongladeDatabase&#34;: &#34;Server=(localdb)\\MSSQLLocalDB;Database=moonglade;Trusted_Connection=True;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;MySQL&lt;/h4&gt; &#xA;&lt;p&gt;Set &lt;code&gt;DatabaseType&lt;/code&gt; to &lt;code&gt;MySql&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;DatabaseType&#34;: &#34;MySql&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the &lt;code&gt;MoongladeDatabase&lt;/code&gt; to your database connection string in &lt;code&gt;appsettings.Development.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;MoongladeDatabase&#34;: &#34;Server=localhost;Port=3306;Database=moonglade;Uid=root;Pwd=******;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;PostgreSql&lt;/h4&gt; &#xA;&lt;p&gt;Set &lt;code&gt;DatabaseType&lt;/code&gt; to &lt;code&gt;PostgreSql&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;DatabaseType&#34;: &#34;PostgreSql&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the &lt;code&gt;MoongladeDatabase&lt;/code&gt; to your database connection string in &lt;code&gt;appsettings.Development.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;MoongladeDatabase&#34;: &#34;User ID=****;Password=****;Host=localhost;Port=5432;Database=****;Pooling=true;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🔨 Build Source&lt;/h3&gt; &#xA;&lt;p&gt;Build and run &lt;code&gt;./src/Moonglade.sln&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Admin: &lt;code&gt;https://localhost:1055/admin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default username: &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default password: &lt;code&gt;admin123&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚙ Configuration&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This section discuss system settings in &lt;strong&gt;appsettings.[env].json&lt;/strong&gt;. For blog settings, please use &#34;/admin/settings&#34; UI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;For production, it is strongly recommended to use Environment Variables over appsetting.json file.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🛡 Authentication&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/active-directory/&#34;&gt;Azure Active Directory&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/Use-Azure-Active-Directory-Authentication&#34;&gt;Wiki document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Local Account (Alternative)&lt;/h4&gt; &#xA;&lt;p&gt;Set &lt;code&gt;Authentication:Provider&lt;/code&gt; to &lt;code&gt;&#34;Local&#34;&lt;/code&gt;. You can manage accounts in &lt;code&gt;/admin/settings/account&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🖼 Image Storage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ImageStorage&lt;/code&gt; controls how blog post images are stored.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/storage/blobs/&#34;&gt;Azure Blob Storage&lt;/a&gt; (Preferred)&lt;/h4&gt; &#xA;&lt;p&gt;You need to create an &lt;a href=&#34;https://azure.microsoft.com/en-us/services/storage/blobs/&#34;&gt;&lt;strong&gt;Azure Blob Storage&lt;/strong&gt;&lt;/a&gt; with &lt;strong&gt;container level permission&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Provider&#34;: &#34;azurestorage&#34;&#xA;  &#34;AzureStorageSettings&#34;: {&#xA;    &#34;ConnectionString&#34;: &#34;YOUR CONNECTION STRING&#34;,&#xA;    &#34;ContainerName&#34;: &#34;YOUR CONTAINER NAME&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When configured the image storage to use Azure Blob, you can take advantage of CDN for your image resources. Just enable CDN in admin settings, the blog will get images from CDN.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://min.io/&#34;&gt;Minio Blob Storage&lt;/a&gt; (Free)&lt;/h4&gt; &#xA;&lt;p&gt;You need to hava an &lt;a href=&#34;https://docs.min.io/&#34;&gt;&lt;strong&gt;Minio Server&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;Provider&#34;: &#34;miniostorage&#34;&#xA;&#34;MinioStorageSettings&#34;: {&#xA;  &#34;EndPoint&#34;: &#34;Minio Server Endpoint(eg:localhost:9600)&#34;,&#xA;  &#34;AccessKey&#34;: &#34;Your Access Key&#34;,&#xA;  &#34;SecretKey&#34;: &#34;Your Secret Key&#34;,&#xA;  &#34;BucketName&#34;: &#34;Your BucketName&#34;,&#xA;  &#34;WithSSL&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://qiniu.com/&#34;&gt;Qiniu Blob Storage&lt;/a&gt; (Almost free)&lt;/h4&gt; &#xA;&lt;p&gt;You need to hava an Qiniu cloud account, and use &lt;a href=&#34;https://www.qiniu.com/products/kodo&#34;&gt;Kodo&lt;/a&gt; storage service.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;Provider&#34;: &#34;qiniustorage&#34;&#xA;&#34;QiniuStorageSettings&#34;: {&#xA;  &#34;EndPoint&#34;: &#34;Your Custom Domain&#34;,&#xA;  &#34;AccessKey&#34;: &#34;Your Access Key&#34;,&#xA;  &#34;SecretKey&#34;: &#34;Your Secret Key&#34;,&#xA;  &#34;BucketName&#34;: &#34;Your BucketName&#34;,&#xA;  &#34;WithSSL&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;File System (Not Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;You can also choose File System for image storage if you don&#39;t have a cloud option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Provider&#34;: &#34;filesystem&#34;,&#xA;  &#34;FileSystemPath&#34;: &#34;C:\\UploadedImages&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🤬 Comment Moderator&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/Comment-Moderator-Settings&#34;&gt;Comment Moderator Settings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📧 Email Notification&lt;/h3&gt; &#xA;&lt;p&gt;If you need email notification for new comments, new replies and pingbacks, you have to setup the &lt;a href=&#34;https://github.com/EdiWang/Moonglade.Notification&#34;&gt;Moonglade.Notification Azure Function&lt;/a&gt; first, and then enable notification in admin portal.&lt;/p&gt; &#xA;&lt;h3&gt;🔩 Others&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/System-Settings&#34;&gt;System Settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdiWang/Moonglade/wiki/Security-Headers-(CSP,-XSS,-etc.)&#34;&gt;Security Headers (CSP, XSS, etc.)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎉 Blog Protocols or Standards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Atom&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OPML&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Open Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pingback&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reader View&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; FOAF&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RSD&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MetaWeblog (Basic Support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dublin Core Metadata (Basic Support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; BlogML - Under triage&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; APML - Not planned&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Trackback - Not planned&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🐼 Example Blogs&lt;/h2&gt; &#xA;&lt;p&gt;There are a few individuals already setup thier blogs using Moonglade on Azure (Global or China), Alibaba Cloud, Tencent Cloud, etc.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zchwei.com/&#34;&gt;zchwei&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yycoding.xyz/&#34;&gt;yycoding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.51azure.cloud/&#34;&gt;51azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuangkh.com/&#34;&gt;Zhuangkh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.stackable.cn/&#34;&gt;HueiFeng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lesliewxj.com/&#34;&gt;Leslie Wang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://allenmasters.com&#34;&gt;AllenMasters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxu.dev/&#34;&gt;Hao&#39;s House&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://saschamanns.de/&#34;&gt;Sascha.Manns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Just Submit PR or issue if you want your blog to be listed here&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/extensions</title>
    <updated>2023-05-28T01:33:33Z</updated>
    <id>tag:github.com,2023-05-28:/dotnet/extensions</id>
    <link href="https://github.com/dotnet/extensions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET APIs for commonly used programming patterns and utilities, such as dependency injection, logging, and configuration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Enriched Capabilities&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a suite of libraries that provide facilities commonly needed when creating production-ready applications. Initially developed to support high-scale and high-availability services within Microsoft, such as Microsoft Teams, these libraries deliver functionality that can help make applications more efficient, more robust, and more manageable.&lt;/p&gt; &#xA;&lt;p&gt;The code in this repo is preliminary and will be released in stable form with .NET 8&lt;/p&gt; &#xA;&lt;p&gt;The major functional areas this repo addresses are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compliance: Mechanisms to help manage application data according to privacy regulations and policies, which includes a data annotation framework, supporting analyzers, audit report generation, and telemetry redaction.&lt;/li&gt; &#xA; &lt;li&gt;Diagnostics: Provides a set of APIs that can be used to gather and report diagnostic information about the health of a service.&lt;/li&gt; &#xA; &lt;li&gt;Contextual Options: Extends the .NET Options model to enable experimentations in production.&lt;/li&gt; &#xA; &lt;li&gt;Resilience: Builds on top of the popular Polly library to provide sophisticated resilience pipelines along with support for chaos engineering to make applications robust to transient errors.&lt;/li&gt; &#xA; &lt;li&gt;Telemetry: Sophisticated telemetry facilities provide enhanced logging, metering, tracing, and latency measuring functionality.&lt;/li&gt; &#xA; &lt;li&gt;AspNetCore extensions: Provides different middlewares and extensions that can be used to build high-performance and high-availability ASP.NET Core services.&lt;/li&gt; &#xA; &lt;li&gt;Cloud Abstractions: A growing set of abstractions representing common cloud-native service types, making it possible to write applications that can work across multiple cloud providers with relative ease.&lt;/li&gt; &#xA; &lt;li&gt;Static Analysis: Provides a set of Roslyn analyzers that can be used to enforce best practices and coding standards.&lt;/li&gt; &#xA; &lt;li&gt;Testing: Dramatically simplifies testing around common .NET abstractions such as ILogger and the TimeProvider.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/internal/_build/latest?definitionId=1223&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/internal/_apis/build/status/r9/dotnet-r9?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/extensions/labels/help%20wanted&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dotnet/extensions/help%20wanted?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=help%20wanted&#34; alt=&#34;Help Wanted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How can I contribute?&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/extensions/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; explains what kinds of contributions we welcome&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/extensions/main/docs/building.md&#34;&gt;Build instructions&lt;/a&gt; explains how to build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/extensions/main/SECURITY.md&#34;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also see info about related &lt;a href=&#34;https://www.microsoft.com/msrc/bounty-dot-net-core&#34;&gt;Microsoft .NET Core and ASP.NET Core Bug Bounty Program&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://source.dot.net&#34;&gt;.NET Core source index&lt;/a&gt; / &lt;a href=&#34;https://referencesource.microsoft.com&#34;&gt;.NET Framework source index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/api&#34;&gt;API Reference docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apisof.net&#34;&gt;.NET API Catalog&lt;/a&gt; (incl. APIs from daily builds and API usage info)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-api-docs/wiki&#34;&gt;API docs writing guidelines&lt;/a&gt; - useful when writing /// comments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;.NET Discord Server&lt;/a&gt; - a place to discuss the development of .NET and its ecosystem&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;This project is a &lt;a href=&#34;https://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/dotnet&#34;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/aspnet/core&#34;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&#34;https://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;https://www.dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;General .NET OSS discussions: &lt;a href=&#34;https://github.com/dotnet-foundation/Home/discussions&#34;&gt;.NET Foundation Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;.NET (including the runtime repo) is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/extensions/main/LICENSE.TXT&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
</feed>