<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-22T01:35:06Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/WinAppDriver</title>
    <updated>2022-06-22T01:35:06Z</updated>
    <id>tag:github.com,2022-06-22:/microsoft/WinAppDriver</id>
    <link href="https://github.com/microsoft/WinAppDriver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Application Driver&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Windows Application Driver&lt;/h2&gt; &#xA;&lt;p&gt;Windows Application Driver (WinAppDriver) is a service to support Selenium-like UI Test Automation on Windows Applications. This service supports testing &lt;strong&gt;Universal Windows Platform (UWP)&lt;/strong&gt;, &lt;strong&gt;Windows Forms (WinForms)&lt;/strong&gt;, &lt;strong&gt;Windows Presentation Foundation (WPF)&lt;/strong&gt;, and &lt;strong&gt;Classic Windows (Win32)&lt;/strong&gt; apps on &lt;strong&gt;Windows 10 PCs&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install &amp;amp; Run WinAppDriver&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download Windows Application Driver installer from &lt;a href=&#34;https://github.com/Microsoft/WinAppDriver/releases&#34;&gt;https://github.com/Microsoft/WinAppDriver/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the installer on a Windows 10 machine where your application under test is installed and will be tested&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development&#34;&gt;Developer Mode&lt;/a&gt; in Windows settings&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;WinAppDriver.exe&lt;/code&gt; from the installation directory (E.g. &lt;code&gt;C:\Program Files (x86)\Windows Application Driver&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Windows Application Driver will then be running on the test machine listening to requests on the default IP address and port (&lt;code&gt;127.0.0.1:4723&lt;/code&gt;). You can then run any of our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Tests/&#34;&gt;Tests&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Samples&#34;&gt;Samples&lt;/a&gt;. &lt;code&gt;WinAppDriver.exe&lt;/code&gt; can be configured to listen to a different IP address and port as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;WinAppDriver.exe 4727&#xA;WinAppDriver.exe 10.0.0.10 4725&#xA;WinAppDriver.exe 10.0.0.10 4723/wd/hub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You must run &lt;code&gt;WinAppDriver.exe&lt;/code&gt; as &lt;strong&gt;administrator&lt;/strong&gt; to listen to a different IP address and port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Write an Automation Script&lt;/h3&gt; &#xA;&lt;p&gt;Now that you&#39;ve successfully installed WinAppDriver, you can get started with &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/AuthoringTestScripts.md&#34;&gt;authoring your first automation script&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Supported APIs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/SupportedAPIs.md&#34;&gt;here&lt;/a&gt; for a list of supported APIs by WinAppDriver. API support may differ from Appium and other counterparts.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ &amp;amp; Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Additional documentation on WinAppDriver and related topics can be found under &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/&#34;&gt;/Docs/&lt;/a&gt;, such as the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/FAQ.md&#34;&gt;Frequently Asked Questions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/FAQ.md#general-development--best-practices&#34;&gt;General Development &amp;amp; Best Practices&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/UsingAppium.md&#34;&gt;Using with Appium&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/CI_AzureDevOps.md&#34;&gt;Running WinAppDriver in CI (with Azure Pipelines)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/UsingUIRecorder.md&#34;&gt;Using UI Recorder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/AuthoringTestScripts.md&#34;&gt;Authoring Test Scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/SeleniumGrid.md&#34;&gt;Using the Selenium Grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/RunningOnRemoteMachine.md&#34;&gt;Running On a Remote Machine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository Content&lt;/h2&gt; &#xA;&lt;p&gt;This repository includes the following content:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/WinAppDriver/tree/master/Samples&#34;&gt;Samples&lt;/a&gt; - used to showcase various commands and operations such as opening applications, finding elements, clicking elements, typing keystrokes, reading texts, etc; and can be run against built-in Windows 10 applications such as &lt;strong&gt;Alarms &amp;amp; Clock&lt;/strong&gt;, &lt;strong&gt;Calculator&lt;/strong&gt;, and &lt;strong&gt;Notepad&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/WinAppDriver/tree/master/Tests&#34;&gt;Tests&lt;/a&gt; - used to verify the functionality of &lt;strong&gt;Windows Application Driver&lt;/strong&gt; itself. The tests cover each API endpoints extensively and also against all basic UI control scenario, and demonstrate how to invoke certain command in C#. In addition, they show how to interact with some more complex UI elements such as &lt;strong&gt;DatePicker&lt;/strong&gt;, &lt;strong&gt;SplitViewPane&lt;/strong&gt;, &lt;strong&gt;Slider&lt;/strong&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/WinAppDriver/tree/master/Tools/UIRecorder&#34;&gt;UI Recorder&lt;/a&gt; - standalone tool that aims to provide users a simpler way of creating automaton scripts by recording UI events performed by the user and generating XPath queries and C# code on the fly. Read more about it on our &lt;a href=&#34;https://github.com/Microsoft/WinAppDriver/wiki/WinAppDriver-UI-Recorder&#34;&gt;Wiki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/WinAppDriver/master/Docs/&#34;&gt;Docs&lt;/a&gt; - subdirectory hosting WinAppDriver related documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Vote on New Features&lt;/h2&gt; &#xA;&lt;p&gt;Add your feature request in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/issues/&#34;&gt;issues&lt;/a&gt; or &lt;span&gt;üëç&lt;/span&gt; (+1) existing issues labeled as &lt;strong&gt;Enhancement&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/aspnetcore</title>
    <updated>2022-06-22T01:35:06Z</updated>
    <id>tag:github.com,2022-06-22:/dotnet/aspnetcore</id>
    <link href="https://github.com/dotnet/aspnetcore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&#34; alt=&#34;.NET Foundation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dotnet/aspnetcore?color=%230b0&amp;amp;style=flat-square&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dotnet/aspnetcore/help%20wanted?color=%232EA043&amp;amp;label=help%20wanted&amp;amp;style=flat-square&#34; alt=&#34;Help Wanted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dotnet/aspnetcore/good%20first%20issue?color=%23512BD4&amp;amp;label=good%20first%20issue&amp;amp;style=flat-square&#34; alt=&#34;Good First Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/dotnet-discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ASP.NET Core&lt;/h1&gt; &#xA;&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud based internet connected applications, such as web apps, IoT apps and mobile backends. ASP.NET Core apps run on &lt;a href=&#34;https://dot.net&#34;&gt;.NET Core&lt;/a&gt;, a free, cross-platform and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac and Linux. &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/&#34;&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/getting-started&#34;&gt;Getting Started&lt;/a&gt; instructions in the &lt;a href=&#34;https://docs.microsoft.com/aspnet/index&#34;&gt;ASP.NET Core docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also check out the &lt;a href=&#34;https://www.microsoft.com/net&#34;&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/dotnet/aspnetcore/raw/main/docs/TriageProcess.md&#34;&gt;Triage Process&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt; &#xA;&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations, and make pull-requests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/DailyBuilds.md&#34;&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow along with the development of ASP.NET Core: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://live.asp.net&#34;&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live to YouTube. You can view past standups in the linked playlist.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aka.ms/aspnet/roadmap&#34;&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/BuildFromSource.md&#34;&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting security issues and bugs&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://technet.microsoft.com/en-us/security/ff852094.aspx&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;These are some other repos for related projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aspnet/Docs&#34;&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/&#34;&gt;https://docs.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/efcore&#34;&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/runtime&#34;&gt;Runtime&lt;/a&gt; - cross-platform runtime for cloud, mobile, desktop, and IoT apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/razor-compiler&#34;&gt;Razor Compiler&lt;/a&gt; - the parser and the C# code generator for the Razor syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/razor-tooling&#34;&gt;Razor Tooling&lt;/a&gt; - tools for working on Razor ASP.NET Core apps using &lt;a href=&#34;https://visualstudio.com&#34;&gt;Visual Studio&lt;/a&gt;, &lt;a href=&#34;https://visualstudio.microsoft.com/vs/mac/&#34;&gt;Visual Studio for Mac&lt;/a&gt;, and &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CODE-OF-CONDUCT.md&#34;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hartmark/minimal-api-sample</title>
    <updated>2022-06-22T01:35:06Z</updated>
    <id>tag:github.com,2022-06-22:/hartmark/minimal-api-sample</id>
    <link href="https://github.com/hartmark/minimal-api-sample" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample on how to structure minimal APIs that got introduced in .NET 6&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Simple demo service that uses minimal API. I felt that all demos I found online was a bit lacking on the real-world usage of minimal API and how to structure it.&lt;/p&gt; &#xA;&lt;p&gt;The application is meant to showcase how to setup a simple service using minimal API.&lt;/p&gt; &#xA;&lt;p&gt;It uses JWT for authenticating the calls and FluentValidation for validating requests.&lt;/p&gt; &#xA;&lt;p&gt;All operations are tested with xunit-tests using testserver.&lt;/p&gt; &#xA;&lt;p&gt;The main reason of why to post this repo was to have a more complete solution that showcases how to successfully use minimal API in your solution.&lt;/p&gt; &#xA;&lt;h1&gt;Structure&lt;/h1&gt; &#xA;&lt;p&gt;The service showcases a simple &#34;login&#34; endpoint to get a valid JWT. The users are for now hardcoded in the UserRepository class.&lt;/p&gt; &#xA;&lt;p&gt;Note that the keys for the signing the JWT is generated on startup so old tokens from an old run won&#39;t work.&lt;/p&gt; &#xA;&lt;p&gt;There are two roles and the user &#34;harre&#34; has write permissions so all operations that does writing, and &#34;noob&#34; has only read permissions.&lt;/p&gt; &#xA;&lt;p&gt;The service persist the data just in memory and is gone when the server restarts.&lt;/p&gt;</summary>
  </entry>
</feed>