<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-09T01:29:04Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PKBeam/AMWin-RP</title>
    <updated>2024-10-09T01:29:04Z</updated>
    <id>tag:github.com,2024-10-09:/PKBeam/AMWin-RP</id>
    <link href="https://github.com/PKBeam/AMWin-RP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Discord Rich Presence client for Apple Music&#39;s native Windows app.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AMWin-RP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads-pre/PKBeam/AMWin-RP/total&#34; alt=&#34;GitHub release (latest by date including pre-releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads-pre/PKBeam/AMWin-RP/latest/total&#34; alt=&#34;GitHub release (latest by date including pre-releases)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Discord Rich Presence client for Apple Music&#39;s native Windows app.&lt;br&gt; Last.FM scrobbling is also supported!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PKBeam/AMWin-RP/raw/master/README-JA.md&#34;&gt;Êó•Êú¨Ë™û (Japanese README)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PKBeam/AMWin-RP/assets/18737124/dcc7dfa6-5504-4556-b62a-ab67cb0b0951&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PKBeam/AMWin-RP/assets/18737124/34e87ee6-b30a-4d1c-9fe2-70af0d7bd7f8&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Releases can be found &lt;a href=&#34;https://github.com/PKBeam/AMWin-RP/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: AMWin-RP will run on Windows 10 21H1 or later, but the Apple Music app requires at least Windows 10 22H2.&lt;/p&gt; &#xA;&lt;h3&gt;Which release do I use?&lt;/h3&gt; &#xA;&lt;p&gt;There are two release files: the standard one and one marked as &lt;code&gt;NoRuntime&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If in doubt, use the unlabelled release (i.e. the one without &lt;code&gt;NoRuntime&lt;/code&gt;).&lt;br&gt; This version works universally, but is larger in size because it bundles the components of .NET that are needed for the app to run.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;NoRuntime&lt;/code&gt; release is much smaller, but requires you to have the &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&#34;&gt;.NET 8.0 runtime&lt;/a&gt; installed.&lt;br&gt; If you don&#39;t have this runtime installed, the program will prompt you to do it when it opens.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You need the &lt;a href=&#34;https://apps.microsoft.com/detail/9PFHDD62MXS1&#34;&gt;Microsoft store version&lt;/a&gt; of Apple Music to use AMWin-RP.&lt;br&gt; There is no support for iTunes, Apple Music via WSA or any other third-party players.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AMWin-RP runs in the background, minimised to the system tray.&lt;/li&gt; &#xA; &lt;li&gt;Double clicking on the tray icon brings up the settings window. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;From here you can adjust individual settings such as run on startup, scrobbling and song detection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The app can be closed by right-clicking on the tray icon and selecting &#34;Exit&#34;.&lt;/li&gt; &#xA; &lt;li&gt;By default, the Apple Music app must be open and currently playing music (i.e. not paused) in order for the rich presence to show.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Before creating a new issue, please make sure your problem does not fall under an existing issue.&lt;br&gt; If you are reporting a problem, please attach any relevant &lt;code&gt;.log&lt;/code&gt; files (found in &lt;code&gt;C:\Users\your_username_here\AppData\Local\AMWin-RichPresence&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Before posting, please double-check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The problem isn&#39;t already covered by an existing open or closed issue.&lt;/li&gt; &#xA; &lt;li&gt;You have RP display enabled in Discord (Settings &amp;gt; Activity Settings &amp;gt; Activity Privacy &amp;gt; Actvity Status).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scrobbling&lt;/h2&gt; &#xA;&lt;h3&gt;Last.FM&lt;/h3&gt; &#xA;&lt;p&gt;You will need your own API Key and API Secret from Last.FM.&lt;br&gt; To generate one, go to &lt;a href=&#34;https://www.last.fm/api&#34;&gt;https://www.last.fm/api&lt;/a&gt; and select &#34;Get an API Account.&#34;&lt;br&gt; Enter these in the settings menu with your Last.FM username and password.&lt;/p&gt; &#xA;&lt;p&gt;The Last.FM password is stored in &lt;a href=&#34;https://support.microsoft.com/en-us/windows/accessing-credential-manager-1b5c916a-6a16-889f-8581-fc16e8165ac0&#34;&gt;Windows Credentials Manager&lt;/a&gt; under your local Windows account.&lt;/p&gt; &#xA;&lt;p&gt;This Scrobbler implementation does not support offline Scrobbles, which means any songs you listen to while not connected to the Internet will be lost.&lt;/p&gt; &#xA;&lt;h3&gt;ListenBrainz&lt;/h3&gt; &#xA;&lt;p&gt;You can scrobble to ListenBrainz by adding your user token in the settings.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Technical details ahead ‚ö†Ô∏è&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;The biggest challenge here is being able to extract song information out of the Apple Music app.&lt;/p&gt; &#xA;&lt;p&gt;This is achieved using Microsoft&#39;s &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/winauto/windows-automation-api-overview&#34;&gt;UI Automation API&lt;/a&gt; via the FlaUI library, which lets us access UI elements of any window on the user&#39;s desktop.&lt;/p&gt; &#xA;&lt;p&gt;The general process is this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We look for the AppleMusic.exe process.&lt;/li&gt; &#xA; &lt;li&gt;We get the window belonging to that process.&lt;/li&gt; &#xA; &lt;li&gt;We then navigate to known UI controls that hold the info we&#39;re after (e.g. song name).&lt;/li&gt; &#xA; &lt;li&gt;We extract this information and send it to the part of the program that handles the Discord RPC.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The other problem is getting the song&#39;s cover art.&lt;/p&gt; &#xA;&lt;p&gt;(It&#39;s not well documented, but Discord RPC now lets you specify arbitrary images by sending the image URL in place of the assets key.)&lt;/p&gt; &#xA;&lt;p&gt;We can&#39;t use UI Automation to get the image being displayed in the window (as far as I know). Instead we send an HTTP request to the Last.FM or Apple Music website, where we try to search for the song and grab the cover image URL from there.&lt;br&gt; It&#39;s not ideal but gives us what we&#39;re looking for most of the time.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/dev-proxy</title>
    <updated>2024-10-09T01:29:04Z</updated>
    <id>tag:github.com,2024-10-09:/microsoft/dev-proxy</id>
    <link href="https://github.com/microsoft/dev-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dev Proxy is an API simulator that helps you effortlessly test your app beyond the happy path.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img alt=&#34;Dev Proxy&#34; src=&#34;https://raw.githubusercontent.com/microsoft/dev-proxy/main/samples/img/devproxy.png&#34; width=&#34;125&#34;&gt; &lt;br&gt;Dev Proxy&lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; Test the untestable &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://aka.ms/devproxy/download&#34;&gt; &lt;img alt=&#34;Download Now&#34; src=&#34;https://img.shields.io/badge/download-now-green?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://aka.ms/devproxy/discord&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/badge/discord-chat-green?style=for-the-badge&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dev-proxy/main/#get-started&#34;&gt;Get started&lt;/a&gt; | &lt;a href=&#34;https://aka.ms/devproxy/docs&#34;&gt;Documentation&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dev-proxy/main/#example&#34;&gt;Example&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dev-proxy/main/#features&#34;&gt;Features&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dev-proxy/main/#trademarks&#34;&gt;Trademarks&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;details class=&#34;details-reset border rounded-2&#34; open&gt; &#xA; &lt;summary class=&#34;px-3 py-2&#34;&gt; &#xA;  &lt;svg aria-hidden=&#34;true&#34; height=&#34;16&#34; viewbox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; data-view-component=&#34;true&#34; class=&#34;octicon octicon-device-camera-video&#34;&gt; &#xA;   &lt;path d=&#34;M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 2.1v-5.85l-3.5 2.1Z&#34;&gt;&lt;/path&gt; &#xA;  &lt;/svg&gt; &lt;span aria-label=&#34;&#34; class=&#34;m-1&#34;&gt;üìΩÔ∏è Simulate throttling using Dev Proxy&lt;/span&gt; &lt;span class=&#34;dropdown-caret&#34;&gt;&lt;/span&gt; &lt;/summary&gt; &#xA; &lt;video src=&#34;https://user-images.githubusercontent.com/11563347/249426565-412849a4-15bb-446d-acd8-40b9d64ef8bc.mp4&#34; data-canonical-src=&#34;https://user-images.githubusercontent.com/11563347/249426565-412849a4-15bb-446d-acd8-40b9d64ef8bc.mp4&#34; controls=&#34;controls&#34; muted class=&#34;d-block rounded-bottom-2 border-top width-fit&#34; style=&#34;max-height:640px; min-height: 200px&#34;&gt; &#xA; &lt;/video&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dev Proxy is a command line tool for simulating APIs for testing apps.&lt;/p&gt; &#xA;&lt;p&gt;It aims to provide a better way to test applications.&lt;/p&gt; &#xA;&lt;p&gt;Use the proxy to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simulate errors&lt;/li&gt; &#xA; &lt;li&gt;simulate API behaviours&lt;/li&gt; &#xA; &lt;li&gt;mock responses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Identify and fix issues in your code before they reach production.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;Begin with our &lt;a href=&#34;https://learn.microsoft.com/microsoft-cloud/dev/dev-proxy/get-started/&#34;&gt;tutorial&lt;/a&gt;. It will guide you through the installation process and running the proxy for the first time.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Fail requests (with a 50% chance) and respond with &lt;code&gt;429 Too Many Requests&lt;/code&gt; or &lt;code&gt;503 Service Unavailable&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;devproxy --failure-rate 50 --no-mocks --allowed-errors 429 503&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run on any OS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows&lt;/li&gt; &#xA;   &lt;li&gt;macOS&lt;/li&gt; &#xA;   &lt;li&gt;Linux&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;intercept requests from Microsoft Graph and other APIs&lt;/li&gt; &#xA; &lt;li&gt;simulate errors&lt;/li&gt; &#xA; &lt;li&gt;simulate throttling&lt;/li&gt; &#xA; &lt;li&gt;simulate rate-limiting&lt;/li&gt; &#xA; &lt;li&gt;mock responses&lt;/li&gt; &#xA; &lt;li&gt;mock error responses&lt;/li&gt; &#xA; &lt;li&gt;define wildcard paths to serve mocked responses&lt;/li&gt; &#xA; &lt;li&gt;mock responses of different types (JSON, binary, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$select&lt;/code&gt; guidance to improve performance&lt;/li&gt; &#xA; &lt;li&gt;caching guidance to improve performance&lt;/li&gt; &#xA; &lt;li&gt;OData paging guidance&lt;/li&gt; &#xA; &lt;li&gt;client-request-id header guidance&lt;/li&gt; &#xA; &lt;li&gt;non-production beta endpoint guidance for Microsoft Graph&lt;/li&gt; &#xA; &lt;li&gt;configure proxy to your needs, by setting: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;failure rate&lt;/li&gt; &#xA;   &lt;li&gt;port&lt;/li&gt; &#xA;   &lt;li&gt;whether to use mock responses or not&lt;/li&gt; &#xA;   &lt;li&gt;URLs to intercept traffic&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;record proxy activity&lt;/li&gt; &#xA; &lt;li&gt;get proxy activity summary report&lt;/li&gt; &#xA; &lt;li&gt;detect minimal Microsoft Graph API permissions&lt;/li&gt; &#xA; &lt;li&gt;check for excessive Microsoft Graph API permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft‚Äôs Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party‚Äôs policies.&lt;/p&gt; &#xA;&lt;h2&gt;A Microsoft Hackathon 2022 Project&lt;/h2&gt; &#xA;&lt;p&gt;The initial build of this project was completed in the week of 5-9 September 2022 by Waldek Mastykarz, Gavin Barron and Garry Trinder&lt;/p&gt;</summary>
  </entry>
</feed>