<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-05T01:31:39Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OPCFoundation/UA-.NETStandard</title>
    <updated>2022-11-05T01:31:39Z</updated>
    <id>tag:github.com,2022-11-05:/OPCFoundation/UA-.NETStandard</id>
    <link href="https://github.com/OPCFoundation/UA-.NETStandard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OPC Unified Architecture .NET Standard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official OPC UA .NET Standard Stack from the OPC Foundation&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This OPC UA reference implementation is targeting the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/net-standard&#34;&gt;.NET Standard&lt;/a&gt; specification.&lt;/p&gt; &#xA;&lt;p&gt;.NET Standard allows to develop apps that run on all common platforms available today, including Linux, iOS, Android (via Xamarin) and Windows 7/8/8.1/10/11 (including embedded/IoT editions) without requiring platform-specific modifications.&lt;/p&gt; &#xA;&lt;p&gt;One of the reference implementations inside this project has been certified for compliance through an OPC Foundation Certification Test Lab to prove its high quality. Fixes and enhancements since the certification process have been tested and verified for compliance using the latest Compliance Test Tool (CTT).&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, cloud applications and services (such as ASP.NET, DNX, Azure Websites, Azure Webjobs, Azure Nano Server and Azure Service Fabric) are also supported.&lt;/p&gt; &#xA;&lt;p&gt;More samples based on the official &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&#34;&gt;Nuget&lt;/a&gt; packages can be found in the &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard-Samples&#34;&gt;OPC UA .NET Standard Samples&lt;/a&gt; repository. For development there is also a &lt;a href=&#34;https://opcfoundation.visualstudio.com/opcua-netstandard/_packaging?_a=feed&amp;amp;feed=opcua-preview%40Local&#34;&gt;preview Nuget feed&lt;/a&gt; available. For local testing a &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&#34;&gt;Docker container of the Reference Server&lt;/a&gt; is available for preview and release builds.&lt;/p&gt; &#xA;&lt;h2&gt;For more information and license terms, see &lt;a href=&#34;http://opcfoundation.github.io/UA-.NETStandard&#34;&gt;here&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;h3&gt;Features included&lt;/h3&gt; &#xA;&lt;h4&gt;Core and Libraries&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully ported Core OPC UA Stack and Libraries (Client, Server, Configuration, Complex Types &amp;amp; GDS assemblies).&lt;/li&gt; &#xA; &lt;li&gt;Reference sample Server and Client.&lt;/li&gt; &#xA; &lt;li&gt;X.509 &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&#34;&gt;Certificate&lt;/a&gt; support for client and server authentication.&lt;/li&gt; &#xA; &lt;li&gt;SHA-2 support (up to SHA512) including security profile Basic256Sha256, Aes128Sha256RsaOaep and Aes256Sha256RsaPss for configurations with high security needs.&lt;/li&gt; &#xA; &lt;li&gt;Anonymous, username and X.509 certificate user authentication.&lt;/li&gt; &#xA; &lt;li&gt;UA-TCP &amp;amp; HTTPS transports (client and server).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ReverseConnect.md&#34;&gt;Reverse Connect&lt;/a&gt; for the UA-TCP transport (client and server).&lt;/li&gt; &#xA; &lt;li&gt;Folder &amp;amp; OS-level (X509Store) &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&#34;&gt;Certificate Stores&lt;/a&gt; with &lt;em&gt;Global Discovery Server&lt;/em&gt; and &lt;em&gt;Server Push&lt;/em&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;Sessions and Subscriptions.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/PubSub.md&#34;&gt;PubSub&lt;/a&gt; library with samples.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;New in 1.4.368&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Improved support for &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Logging.md&#34;&gt;Logging&lt;/a&gt; with &lt;code&gt;ILogger&lt;/code&gt; and &lt;code&gt;EventSource&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Support for custom certificate stores with refactored &lt;code&gt;ICertificateStore&lt;/code&gt; and &lt;code&gt;CertificateStoreType&lt;/code&gt; interface.&lt;/li&gt; &#xA; &lt;li&gt;Client and Server support for &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/TransferSubscription.md&#34;&gt;TransferSubscriptions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;How to use &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&#34;&gt;Container support&lt;/a&gt; with reference server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Samples and Nuget packages&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OPC UA &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ReferenceServer&#34;&gt;Reference Server&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ReferenceClient&#34;&gt;Reference Client&lt;/a&gt; for .NET Framework.&lt;/li&gt; &#xA; &lt;li&gt;OPC UA &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferenceServer&#34;&gt;Console Reference Server&lt;/a&gt; for .NET Core. A Linux Container of the latest builds is available &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard/pkgs/container/uanetstandard%2Frefserver&#34;&gt;here&lt;/a&gt;. See also &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&#34;&gt;Container support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The OPC UA &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ReferenceServer/README.md&#34;&gt;Reference Server&lt;/a&gt; has been certified for compliance through an OPC Foundation Certification Test Lab. Fixes and enhancements since the certification process have been tested and verified for compliance using the &lt;a href=&#34;https://opcfoundation.org/developer-tools/certification-test-tools/opc-ua-compliance-test-tool-uactt/&#34;&gt;Compliance Test Tool (CTT)&lt;/a&gt;. All releases are verified for compliance with the latest official Compliance Test Tool by the maintainers.&lt;/li&gt; &#xA; &lt;li&gt;OPC UA &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferencePublisher/README.md&#34;&gt;Console Reference Publisher&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferenceSubscriber/README.md&#34;&gt;Console Reference Subscriber&lt;/a&gt; for .NET Core and .NET Framework.&lt;/li&gt; &#xA; &lt;li&gt;An official OPC UA &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&#34;&gt;Nuget&lt;/a&gt; package of the core, client, server and configuration libraries is available for integration in .NET projects. Note: The package has been split into &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Core/&#34;&gt;Core&lt;/a&gt;, &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Client/&#34;&gt;Client&lt;/a&gt; and &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Server/&#34;&gt;Server&lt;/a&gt; packages to reduce the dependencies in projects where only client or server is needed. The &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Bindings.Https/&#34;&gt;https binding&lt;/a&gt; is now a seperate optional package.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://opcfoundation.visualstudio.com/opcua-netstandard/_packaging?_a=feed&amp;amp;feed=opcua-preview%40Local&#34;&gt;preview Nuget feed&lt;/a&gt; is available from Azure Devops.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Information&lt;/h2&gt; &#xA;&lt;h3&gt;General Project Info&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/OPCFoundation/UA-.NETStandard&#34; alt=&#34;Github top language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/OPCFoundation/UA-.NETStandard?style=flat&#34; alt=&#34;Github stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/OPCFoundation/UA-.NETStandard?style=flat&#34; alt=&#34;Github forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/OPCFoundation/UA-.NETStandard?style=flat&#34; alt=&#34;Github size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/OPCFoundation/UA-.NETStandard?style=flat&#34; alt=&#34;Github release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/OPCFoundation.NetStandard.Opc.Ua&#34; alt=&#34;Nuget Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build Status&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opcfoundation.visualstudio.com/opcua-netstandard/_build/latest?definitionId=14&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://opcfoundation.visualstudio.com/opcua-netstandard/_apis/build/status/OPCFoundation.UA-.NETStandard?branchName=master&#34; alt=&#34;Azure DevOps&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/buildandtest.yml&#34;&gt;&lt;img src=&#34;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/buildandtest.yml/badge.svg?sanitize=true&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/opcfoundation-org/ua-netstandardlibrary&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/build/opcfoundation-org/ua-netstandardlibrary/master?label=Appveyor&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code Quality&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opcfoundation.visualstudio.com/opcua-netstandard/_test/analytics?definitionId=14&amp;amp;contextType=build&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/opcfoundation/opcua-netstandard/14?style=plastic&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/OPCFoundation/UA-.NETStandard&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/OPCFoundation/UA-.NETStandard/branch/master/graph/badge.svg?token=vDf5AnilUt&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;All the tools you need for .NET Standard come with the .NET Core tools. See &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/articles/core/getting-started&#34;&gt;Get started with .NET Core&lt;/a&gt; for what you need.&lt;/p&gt; &#xA;&lt;h2&gt;How to build and run the reference samples in Visual Studio on Windows&lt;/h2&gt; &#xA;&lt;p&gt;Note: Since .NET Core 2.1 is end of life,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VS 2017 has only limited support for .NET 4.6.2.&lt;/li&gt; &#xA; &lt;li&gt;VS 2019 is fully supported with .NET 4.6.2 and up to .NET Core 3.1 (LTS).&lt;/li&gt; &#xA; &lt;li&gt;VS 2022 is the current supported version, including .NET 6.0.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the UA Reference.sln solution file using Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;Choose a project in the Solution Explorer and set it with a right click as &lt;code&gt;Startup Project&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;F5&lt;/code&gt; to build and execute the sample.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to build and run the console samples on Windows, Linux and iOS&lt;/h2&gt; &#xA;&lt;p&gt;This section describes how to run the &lt;strong&gt;ConsoleReferenceServer&lt;/strong&gt; sample application.&lt;/p&gt; &#xA;&lt;p&gt;Please follow instructions in this &lt;a href=&#34;https://aka.ms/dotnetcoregs&#34;&gt;article&lt;/a&gt; to setup the dotnet command line environment for your platform. As of today .NET Core SDK 3.1 is required for Visual Studio 2019 and .NET SDK 6.0 is required for Visual Studio 2022.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Once the &lt;code&gt;dotnet&lt;/code&gt; command is available, navigate to the root folder in your local copy of the repository and execute &lt;code&gt;dotnet restore &#39;UA Reference.sln&#39;&lt;/code&gt;. This command calls into NuGet to restore the tree of dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Start the server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a command prompt.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the folder &lt;strong&gt;Applications/ConsoleReferenceServer&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To run the server sample type &lt;code&gt;dotnet run --project ConsoleReferenceServer.csproj -a&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The server is now running and waiting for connections.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Remarks&lt;/h2&gt; &#xA;&lt;h3&gt;Self signed certificates for the sample applications&lt;/h3&gt; &#xA;&lt;p&gt;All required application certificates for OPC UA are created at the first start of each application in a directory or OS-level certificate store and remain in use until deleted from the store. Please read &lt;a href=&#34;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&#34;&gt;Certificates&lt;/a&gt; for more information about certificates and stores&lt;/p&gt; &#xA;&lt;h3&gt;Local Discovery Server&lt;/h3&gt; &#xA;&lt;p&gt;By default all sample applications are configured to register with a Local Discovery Server (LDS). A reference implementation of a LDS for Windows can be downloaded &lt;a href=&#34;https://opcfoundation.org/developer-tools/developer-kits-unified-architecture/local-discovery-server-lds&#34;&gt;here&lt;/a&gt;. To setup trust with the LDS the certificates need to be exchanged or registration will fail.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We strongly encourage community participation and contribution to this project. First, please fork the repository and commit your changes there. Once happy with your changes you can generate a &#39;pull request&#39;.&lt;/p&gt; &#xA;&lt;p&gt;You must agree to the contributor license agreement before we can accept your changes. The CLA and &#34;I AGREE&#34; button is automatically displayed when you perform the pull request. You can preview CLA &lt;a href=&#34;https://opcfoundation.org/license/cla/ContributorLicenseAgreementv1.0.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mattpannella/pocket-updater-utility</title>
    <updated>2022-11-05T01:31:39Z</updated>
    <id>tag:github.com,2022-11-05:/mattpannella/pocket-updater-utility</id>
    <link href="https://github.com/mattpannella/pocket-updater-utility" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Analogue Pocket Updater Utility&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Oh Hi&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mattpannella/pocket-updater-utility/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/mattpannella/pocket-updater-utility?label=Current%20Release&#34; alt=&#34;Current Release&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/mattpannella/pocket-updater-utility/latest/total?label=Downloads&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://www.paypal.com/donate/?business=YEERX89E75HQ8&amp;amp;no_recurring=1&amp;amp;currency_code=USD&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A free utility for updating the openFPGA cores, and firmware, on your Analogue Pocket. The update process will check for pocket firmware updates, openfpga core updates, and install any required BIOS files and arcade ROMS. You&#39;re on your own when it comes to console ROMs.&lt;/p&gt; &#xA;&lt;p&gt;A complete list of available cores can also be found here: &lt;a href=&#34;https://joshcampbell191.github.io/openfpga-cores-inventory/analogue-pocket&#34;&gt;https://joshcampbell191.github.io/openfpga-cores-inventory/analogue-pocket&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;To run the updater, all you need to do is put the executable file for your platform (windows, mac os, or linux) in the root of your sd card and run the program.&lt;/p&gt; &#xA;&lt;h4&gt;Advanced Usage&lt;/h4&gt; &#xA;&lt;p&gt;The updater currently accepts 4 command line parameters. I will probably add more options in the future&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; -p, --path      Absolute path to install location&#xA; -a, --all       Extract all release assets, instead of just ones containing openFPGA cores.&#xA; -c, --coreselector    Run the core selector.&#xA; -f, --platformsfolder   Preserve the Platforms folder, so customizations aren&#39;t overwritten by updates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;example: &lt;code&gt;/path/to/pocket_updater -a -p /path/to/sdcard/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Core Selector&lt;/h4&gt; &#xA;&lt;p&gt;On your first run it will prompt you to select the cores you want tracked. After that initial run, you can always run this again by setting core_selector to true in the settings json file, or if running from the cli you can use the paramater -c&lt;/p&gt; &#xA;&lt;h4&gt;Allow pre-release cores&lt;/h4&gt; &#xA;&lt;p&gt;You can edit your &lt;code&gt;pocket_updater_settings.json&lt;/code&gt; file and set the &lt;code&gt;allowPrerelease&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; for any core want to download, even though it&#39;s still pre-release&lt;/p&gt; &#xA;&lt;h4&gt;Disable Firmware Downloading&lt;/h4&gt; &#xA;&lt;p&gt;Set &lt;code&gt;config.download_firmware&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your settings file&lt;/p&gt; &#xA;&lt;h4&gt;Disable Asset Downloading&lt;/h4&gt; &#xA;&lt;p&gt;Set &lt;code&gt;config.download_assets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your settings file, if you&#39;d like to supply your own BIOS and arcade rom files&lt;/p&gt; &#xA;&lt;h4&gt;Preserve Platforms Folder Customizations&lt;/h4&gt; &#xA;&lt;p&gt;If you have any customizations to the Platforms folder, you can use this option to preserve them during the update process. Set &lt;code&gt;config.preserve_platforms_folder&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your settings file, or use &lt;code&gt;-f&lt;/code&gt; as a command line parameter&lt;/p&gt; &#xA;&lt;h4&gt;Github Personal Access Token&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re running up against the rate limit on the github api, you can provide your personal access token to the updater via the settings. Edit your local copy of &lt;code&gt;pocket_updater_settings.json&lt;/code&gt; and put your token in &lt;code&gt;config.github_token&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;p&gt;If you run the update process and get a message like &lt;code&gt;Error in framework RS: bridge not responding&lt;/code&gt; when running a core, try to run the updater in a local folder on your pc, and then copy the files over to the sd card afterwards. I&#39;m not entirely sure what the issue is, but I&#39;ve seen it reported a bunch of times now and running the updater locally seems to help.&lt;/p&gt; &#xA;&lt;h2&gt;Submitting new cores&lt;/h2&gt; &#xA;&lt;p&gt;You can submit new cores here &lt;a href=&#34;https://github.com/joshcampbell191/openfpga-cores-inventory&#34;&gt;https://github.com/joshcampbell191/openfpga-cores-inventory&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/neil-morrison44&#34;&gt;neil-morrison44&lt;/a&gt;. This is a port built on top of the work originally done by him here &lt;a href=&#34;https://gist.github.com/neil-morrison44/34fbb18de90cd9a32ca5bdafb2a812b8&#34;&gt;https://gist.github.com/neil-morrison44/34fbb18de90cd9a32ca5bdafb2a812b8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://github.com/RetroDriven/&#34;&gt;RetroDriven&lt;/a&gt; for maintaining the arcade rom archive.&lt;/p&gt; &#xA;&lt;p&gt;And if you&#39;re looking for something with a few more features and a user interface, check out this updater. &lt;a href=&#34;https://github.com/RetroDriven/Pocket_Updater&#34;&gt;https://github.com/RetroDriven/Pocket_Updater&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>duplicati/duplicati</title>
    <updated>2022-11-05T01:31:39Z</updated>
    <id>tag:github.com,2022-11-05:/duplicati/duplicati</id>
    <link href="https://github.com/duplicati/duplicati" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Store securely encrypted backups in the cloud!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Duplicati&lt;/h1&gt; &#xA;&lt;p&gt;Store securely encrypted backups on cloud storage services!&lt;/p&gt; &#xA;&lt;!--&#xA;These are currently not working ...&#xA;[![Issue Stats](http://www.issuestats.com/github/duplicati/duplicati/badge/pr)](http://www.issuestats.com/github/duplicati/duplicati/)&#xA;[![Issue Stats](http://www.issuestats.com/github/duplicati/duplicati/badge/issue)](http://www.issuestats.com/github/duplicati/duplicati/)&#xA;--&gt; &#xA;&lt;!--&#xA;Removed Gitter&#xA;[![Join the chat at https://gitter.im/duplicati/Lobby](https://badges.gitter.im/duplicati/Lobby.svg)](https://gitter.im/duplicati/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/duplicati/duplicati/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/duplicati/duplicati/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/duplicati/duplicati&#34;&gt;&lt;img src=&#34;https://travis-ci.org/duplicati/duplicati.svg?branch=master&#34; alt=&#34;Build Status on Travis-CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/kenkendk/duplicati/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/h8s5nau9mn311hq0/branch/master?svg=true&#34; alt=&#34;Build status on AppVeyor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bountysource.com/teams/duplicati?tracker_ids=4870652&amp;amp;utm_medium=shield&amp;amp;utm_campaign=TRACKER_BADGE&#34;&gt;&lt;img src=&#34;https://www.bountysource.com/badge/tracker?tracker_id=4870652&#34; alt=&#34;Bountysource&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/duplicati/duplicati?branch=HEAD&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/duplicati/duplicati/badge.svg?branch=HEAD&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/duplicati/duplicati/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/duplicati/duplicati.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Duplicati is a free, open source, backup client that securely stores encrypted, incremental, compressed backups on cloud storage services and remote file servers. It works with:&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp; &lt;em&gt;Amazon S3, &lt;a href=&#34;https://www.idrive.com/e2/duplicati&#34; title=&#34;Using Duplicati with IDrive e2&#34;&gt;IDrive e2&lt;/a&gt;, &lt;a href=&#34;https://www.backblaze.com/blog/duplicati-backups-cloud-storage/&#34; title=&#34;Duplicati with Backblaze B2 Cloud Storage&#34;&gt;Backblaze (B2)&lt;/a&gt;, Box, Dropbox, FTP, Google Cloud and Drive, HubiC, MEGA, Microsoft Azure and OneDrive, Rackspace Cloud Files, OpenStack Storage (Swift), Sia, Storj DCS, SSH (SFTP), WebDAV, Tencent Cloud Object Storage (COS), &lt;a href=&#34;https://duplicati.readthedocs.io/en/latest/01-introduction/#supported-backends&#34;&gt;and more!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Duplicati is licensed under LGPL and available for Windows, OSX and Linux (.NET 4.7.1+ or Mono 5.10.0+ required).&lt;/p&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;The latest version of Duplicati is a beta version for the Duplicati 2.0 release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.duplicati.com/download&#34;&gt;Click here to download the latest Duplicati 2.0 beta release.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The beta release will automatically notify you of updates and allows you to upgrade with a single click (or command in the terminal). For even more &lt;a href=&#34;https://github.com/duplicati/duplicati/releases&#34;&gt;bleeding edge access, check the latest releases&lt;/a&gt; or choose another update channel in the UI or on the commandline.&lt;/p&gt; &#xA;&lt;p&gt;All releases are GPG signed with the public key &lt;a href=&#34;https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0xC20E90473DAC703D&#34;&gt;3DAC703D&lt;/a&gt;. The latest signature file and latest ASCII signature file are also available from &lt;a href=&#34;https://github.com/duplicati/duplicati/releases&#34;&gt;the Duplicati download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;Duplicati is supported by an &lt;a href=&#34;https://forum.duplicati.com&#34;&gt;active community and you can reach them via our forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We have a great &lt;a href=&#34;https://docs.duplicati.com&#34;&gt;Duplicati manual&lt;/a&gt; that you can also &lt;a href=&#34;https://github.com/kees-z/DuplicatiDocs&#34;&gt;contribute to&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Duplicati uses AES-256 encryption (or GNU Privacy Guard) to secure all data before it is uploaded.&lt;/li&gt; &#xA; &lt;li&gt;Duplicati uploads a full backup initially and stores smaller, incremental updates afterwards to save bandwidth and storage space.&lt;/li&gt; &#xA; &lt;li&gt;A scheduler keeps backups up-to-date automatically.&lt;/li&gt; &#xA; &lt;li&gt;Integrated updater notifies you when a new release is out&lt;/li&gt; &#xA; &lt;li&gt;Encrypted backup files are transferred to targets like FTP, Cloudfiles, WebDAV, SSH (SFTP), Amazon S3 and others.&lt;/li&gt; &#xA; &lt;li&gt;Duplicati allows backups of folders, document types like e.g. documents or images, or custom filter rules.&lt;/li&gt; &#xA; &lt;li&gt;Duplicati is available as application with an easy-to-use user interface and as command line tool.&lt;/li&gt; &#xA; &lt;li&gt;Duplicati can make proper backups of opened or locked files using the Volume Snapshot Service (VSS) under Windows or the Logical Volume Manager (LVM) under Linux. This allows Duplicati to back up the Microsoft Outlook PST file while Outlook is running.&lt;/li&gt; &#xA; &lt;li&gt;Filters, deletion rules, transfer and bandwidth options, etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Why use Duplicati?&lt;/h1&gt; &#xA;&lt;p&gt;Keep your data safe, store it far away, update your backup regularly! This is a simple rule but many backup solutions do not achieve that today. But Duplicati does!&lt;/p&gt; &#xA;&lt;p&gt;Keep your data safe! Bad guys on the Internet seem to look for interesting data everywhere. But people do not want to see any of their private data revealed anywhere. Duplicati provides strong encryption to make sure that your data looks like garbage to others. With a well chosen password your backup files will be more safe on a public webserver than your unencrypted files at home.&lt;/p&gt; &#xA;&lt;p&gt;Store your backup far away! The best backup is useless when it is destroyed together with its original data. Just assume that a fire destroys your office - would your backup survive? Duplicati stores backups on various remote file servers and it supports incremental backups so that only changed parts need to be transferred. This makes it easy to use a destination far away from the original data.&lt;/p&gt; &#xA;&lt;p&gt;Backup regularly! The worst case is that your backup is outdated simply because someone forgot to make a backup at the right time. Duplicati has a built-in scheduler, so that it&#39;s easy to have a regular, up-to-date backup. Furthermore, Duplicati uses file compression and is able to store incremental backups to save storage space and bandwidth.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;Contributing Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;We use GitHub for bug tracking. Please search the existing issues for your bug and create a new one if the issue is not yet tracked: &lt;a href=&#34;https://github.com/duplicati/duplicati/issues&#34;&gt;https://github.com/duplicati/duplicati/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Translations&lt;/h2&gt; &#xA;&lt;p&gt;Interested in helping to translate duplicati? Help is always welcome at transifex: &lt;a href=&#34;https://www.transifex.com/duplicati/duplicati/dashboard/&#34;&gt;https://www.transifex.com/duplicati/duplicati/dashboard/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Code&lt;/h2&gt; &#xA;&lt;p&gt;Instructions on how to setup your development environment and build duplicati can be found in the &lt;a href=&#34;https://github.com/duplicati/duplicati/wiki/How-to-build-from-source&#34;&gt;wiki&lt;/a&gt;. Pull requests fixing bugs or improving duplicati in another way are appreciated.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for an issue to fix, try looking at one of the &lt;a href=&#34;https://github.com/duplicati/duplicati/issues?q=is%3Aissue+is%3Aopen+label%3A%22minor+change%22&#34;&gt;minor change&lt;/a&gt; issues. If you are most used to web development, have a look at the &lt;a href=&#34;https://github.com/duplicati/duplicati/issues?q=is%3Aissue+is%3Aopen+label%3A%22UI%22&#34;&gt;issues marked UI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all our existing contributors: &lt;a href=&#34;https://github.com/duplicati/duplicati/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/contributors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/duplicati#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/duplicati#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/duplicati#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/duplicati/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/duplicati/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/duplicati/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>