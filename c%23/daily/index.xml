<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-09T01:30:55Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>morelinq/MoreLINQ</title>
    <updated>2023-04-09T01:30:55Z</updated>
    <id>tag:github.com,2023-04-09:/morelinq/MoreLINQ</id>
    <link href="https://github.com/morelinq/MoreLINQ" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extensions to LINQ to Objects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MoreLINQ&lt;/h1&gt; &#xA;&lt;p&gt;LINQ to Objects is missing a few desirable features.&lt;/p&gt; &#xA;&lt;p&gt;This project enhances LINQ to Objects with extra methods, in a manner which keeps to the spirit of LINQ.&lt;/p&gt; &#xA;&lt;p&gt;MoreLINQ is available for download and installation as &lt;a href=&#34;https://www.nuget.org/packages/morelinq/&#34;&gt;NuGet packages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for the stable and beta releases can be found at &lt;a href=&#34;https://morelinq.github.io/&#34;&gt;morelinq.github.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;MoreLINQ can be used in one of two ways. The simplest is to just import the &lt;code&gt;MoreLinq&lt;/code&gt; namespace and all extension methods become instantly available for you to use on the types they extend (typically some instantiation of &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;). In some very rare instances, however, doing so can cause conflicts with other libraries you may be using that incidentally also extend the same type with an identically named method and signature. This happened with MoreLINQ, for example, when Microsoft .NET Framework 4.0 introduced &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.zip#System_Linq_Enumerable_Zip__3_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Func___0___1___2__&#34;&gt;&lt;code&gt;Zip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://morelinq.github.io/1.x/ref/api/html/M_MoreLinq_MoreEnumerable_Zip__3.htm&#34;&gt;MoreLINQ already had one&lt;/a&gt;. Starting with version 3.0 of MoreLINQ, you can reduce the potential for present (or even future) conflicts by individually importing just the extension methods you need using the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/articles/csharp/whats-new/csharp-6#using-static&#34;&gt;static imports feature introduced in C# 6&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;using static MoreLinq.Extensions.LagExtension;&#xA;using static MoreLinq.Extensions.LeadExtension;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example above, only the &lt;a href=&#34;https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lag.htm&#34;&gt;&lt;code&gt;Lag&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lead.htm&#34;&gt;&lt;code&gt;Lead&lt;/code&gt;&lt;/a&gt; extension methods will be available in scope.&lt;/p&gt; &#xA;&lt;p&gt;Apart from extension methods, MoreLINQ also offers regular static method that &lt;em&gt;generate&lt;/em&gt; (instead of operating on) sequences, like &lt;code&gt;Unfold&lt;/code&gt;, &lt;code&gt;Random&lt;/code&gt;, &lt;code&gt;Sequence&lt;/code&gt; and others. If you want to use these while statically importing other individual extension methods, you can do so via aliasing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;using static MoreLinq.Extensions.LagExtension;&#xA;using static MoreLinq.Extensions.LeadExtension;&#xA;using MoreEnumerable = MoreLinq.MoreEnumerable;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example above, &lt;a href=&#34;https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lag.htm&#34;&gt;&lt;code&gt;Lag&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lead.htm&#34;&gt;&lt;code&gt;Lead&lt;/code&gt;&lt;/a&gt; will be available as extension methods as well as all the regular static methods on &lt;code&gt;MoreEnumerable&lt;/code&gt; but &lt;em&gt;without&lt;/em&gt; any of the extension methods offered by &lt;code&gt;MoreEnumerable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Run either &lt;code&gt;build.cmd&lt;/code&gt; if building on Windows or &lt;code&gt;build.sh&lt;/code&gt; if building on macOS or a &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/core/install/linux&#34;&gt;Linux distribution supported by .NET&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some code in the project is generated using &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates&#34;&gt;T4&lt;/a&gt; templates. To regenerate the code from modified templates, run &lt;code&gt;MoreLinq\tt.cmd&lt;/code&gt; (Windows) or &lt;code&gt;MoreLinq/tt.sh&lt;/code&gt; depending on your platform.&lt;/p&gt; &#xA;&lt;p&gt;Building the documentation is supported on Windows only and requires &lt;a href=&#34;https://github.com/EWSoftware/SHFB/releases/tag/v2022.12.30.0&#34;&gt;Sandcastle Help File Builder (SHFB)&lt;/a&gt;. Executing &lt;code&gt;builddocs.cmd&lt;/code&gt; generates the documentation in the &lt;code&gt;docs/api&lt;/code&gt; directory. It can be browsed locally using any HTTP server of static files, like &lt;a href=&#34;https://www.nuget.org/packages/dotnet-serve&#34;&gt;dotnet-serve&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Operators&lt;/h2&gt; &#xA;&lt;h3&gt;Acquire&lt;/h3&gt; &#xA;&lt;p&gt;Ensures that a source sequence of disposable objects are all acquired successfully. If the acquisition of any one fails then those successfully acquired till that point are disposed.&lt;/p&gt; &#xA;&lt;h3&gt;Aggregate&lt;/h3&gt; &#xA;&lt;p&gt;Applies multiple accumulators sequentially in a single pass over a sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 7 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;AggregateRight&lt;/h3&gt; &#xA;&lt;p&gt;Applies a right-associative accumulator function over a sequence. This operator is the right-associative version of the Aggregate LINQ operator.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Append&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence consisting of the head element and the given tail elements.&lt;/p&gt; &#xA;&lt;h3&gt;Assert&lt;/h3&gt; &#xA;&lt;p&gt;Asserts that all elements of a sequence meet a given condition otherwise throws an exception.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;AssertCount&lt;/h3&gt; &#xA;&lt;p&gt;Asserts that a source sequence contains a given count of elements.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;AtLeast&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether or not the number of elements in the sequence is greater than or equal to the given integer.&lt;/p&gt; &#xA;&lt;h3&gt;AtMost&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether or not the number of elements in the sequence is lesser than or equal to the given integer.&lt;/p&gt; &#xA;&lt;h3&gt;Backsert&lt;/h3&gt; &#xA;&lt;p&gt;Inserts the elements of a sequence into another sequence at a specified index from the tail of the sequence, where zero always represents the last position, one represents the second-last element, two represents the third-last element and so on.&lt;/p&gt; &#xA;&lt;h3&gt;Batch&lt;/h3&gt; &#xA;&lt;p&gt;Batches the source sequence into sized buckets.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads, 2 of which are experimental.&lt;/p&gt; &#xA;&lt;h3&gt;Cartesian&lt;/h3&gt; &#xA;&lt;p&gt;Returns the Cartesian product of two or more sequences by combining each element from the sequences and applying a user-defined projection to the set.&lt;/p&gt; &#xA;&lt;p&gt;This method has 7 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Choose&lt;/h3&gt; &#xA;&lt;p&gt;Applies a function to each element of the source sequence and returns a new sequence of result elements for source elements where the function returns a couple (2-tuple) having a &lt;code&gt;true&lt;/code&gt; as its first element and result as the second.&lt;/p&gt; &#xA;&lt;h3&gt;CompareCount&lt;/h3&gt; &#xA;&lt;p&gt;Compares two sequences and returns an integer that indicates whether the first sequence has fewer, the same or more elements than the second sequence.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;del&gt;Concat&lt;/del&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence consisting of the head element and the given tail elements.&lt;/p&gt; &#xA;&lt;p&gt;This method is obsolete and will be removed in a future version. Use &lt;code&gt;Append&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;Consume&lt;/h3&gt; &#xA;&lt;p&gt;Completely consumes the given sequence. This method uses immediate execution, and doesn&#39;t store any data during execution&lt;/p&gt; &#xA;&lt;h3&gt;CountBetween&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether or not the number of elements in the sequence is between an inclusive range of minimum and maximum integers.&lt;/p&gt; &#xA;&lt;h3&gt;CountBy&lt;/h3&gt; &#xA;&lt;p&gt;Applies a key-generating function to each element of a sequence and returns a sequence of unique keys and their number of occurrences in the original sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;CountDown&lt;/h3&gt; &#xA;&lt;p&gt;Provides a countdown counter for a given count of elements at the tail of the sequence where zero always represents the last element, one represents the second-last element, two represents the third-last element and so on.&lt;/p&gt; &#xA;&lt;h3&gt;DistinctBy&lt;/h3&gt; &#xA;&lt;p&gt;Returns all distinct elements of the given source, where &#34;distinctness&#34; is determined via a projection and the default equality comparer for the projected type.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;EndsWith&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether the end of the first sequence is equivalent to the second sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;EquiZip&lt;/h3&gt; &#xA;&lt;p&gt;Returns a projection of tuples, where each tuple contains the N-th element from each of the argument sequences. An exception is thrown if the input sequences are of different lengths.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Exactly&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether or not the number of elements in the sequence is equals to the given integer.&lt;/p&gt; &#xA;&lt;h3&gt;ExceptBy&lt;/h3&gt; &#xA;&lt;p&gt;Returns the set of elements in the first sequence which aren&#39;t in the second sequence, according to a given key selector.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Exclude&lt;/h3&gt; &#xA;&lt;p&gt;Excludes elements from a sequence starting at a given index&lt;/p&gt; &#xA;&lt;h3&gt;FallbackIfEmpty&lt;/h3&gt; &#xA;&lt;p&gt;Returns the elements of a sequence and falls back to another if the original sequence is empty.&lt;/p&gt; &#xA;&lt;p&gt;This method has 6 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;FillBackward&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence with each null reference or value in the source replaced with the following non-null reference or value in that sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;FillForward&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence with each null reference or value in the source replaced with the previous non-null reference or value seen in that sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Flatten&lt;/h3&gt; &#xA;&lt;p&gt;Flattens a sequence containing arbitrarily-nested sequences.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Fold&lt;/h3&gt; &#xA;&lt;p&gt;Returns the result of applying a function to a sequence with 1 to 16 elements.&lt;/p&gt; &#xA;&lt;p&gt;This method has 16 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ForEach&lt;/h3&gt; &#xA;&lt;p&gt;Immediately executes the given action on each element in the source sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;From&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence containing the values resulting from invoking (in order) each function in the source sequence of functions.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;FullGroupJoin&lt;/h3&gt; &#xA;&lt;p&gt;Performs a Full Group Join between the and sequences.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;FullJoin&lt;/h3&gt; &#xA;&lt;p&gt;Performs a full outer join between two sequences.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Generate&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of values consecutively generated by a generator function&lt;/p&gt; &#xA;&lt;h3&gt;GenerateByIndex&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of values based on indexes&lt;/p&gt; &#xA;&lt;h3&gt;GroupAdjacent&lt;/h3&gt; &#xA;&lt;p&gt;Groups the adjacent elements of a sequence according to a specified key selector function.&lt;/p&gt; &#xA;&lt;p&gt;This method has 6 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;del&gt;Incremental&lt;/del&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Incremental&lt;/code&gt; was redundant with &lt;code&gt;Pairwise&lt;/code&gt; and so deprecated since version &lt;a href=&#34;https://github.com/morelinq/MoreLINQ/releases/tag/v2.1.0&#34;&gt;2.1&lt;/a&gt;. It was eventually removed in version &lt;a href=&#34;https://github.com/morelinq/MoreLINQ/releases/tag/v3.0.0&#34;&gt;3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Index&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of where the key is the zero-based index of the value in the source sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;IndexBy&lt;/h3&gt; &#xA;&lt;p&gt;Applies a key-generating function to each element of a sequence and returns a sequence that contains the elements of the original sequence as well its key and index inside the group of its key. An additional argument specifies a comparer to use for testing equivalence of keys.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Insert&lt;/h3&gt; &#xA;&lt;p&gt;Inserts the elements of a sequence into another sequence at a specified index.&lt;/p&gt; &#xA;&lt;h3&gt;Interleave&lt;/h3&gt; &#xA;&lt;p&gt;Interleaves the elements of two or more sequences into a single sequence, skipping sequences as they are consumed.&lt;/p&gt; &#xA;&lt;h3&gt;Lag&lt;/h3&gt; &#xA;&lt;p&gt;Produces a projection of a sequence by evaluating pairs of elements separated by a negative offset.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Lead&lt;/h3&gt; &#xA;&lt;p&gt;Produces a projection of a sequence by evaluating pairs of elements separated by a positive offset.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;LeftJoin&lt;/h3&gt; &#xA;&lt;p&gt;Performs a left outer join between two sequences.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;MaxBy&lt;/h3&gt; &#xA;&lt;p&gt;Returns the maxima (maximal elements) of the given sequence, based on the given projection.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;MinBy&lt;/h3&gt; &#xA;&lt;p&gt;Returns the minima (minimal elements) of the given sequence, based on the given projection.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Move&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence with a range of elements in the source sequence moved to a new offset.&lt;/p&gt; &#xA;&lt;h3&gt;OrderBy&lt;/h3&gt; &#xA;&lt;p&gt;Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;OrderedMerge&lt;/h3&gt; &#xA;&lt;p&gt;Merges two ordered sequences into one. Where the elements equal in both sequences, the element from the first sequence is returned in the resulting sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 7 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Pad&lt;/h3&gt; &#xA;&lt;p&gt;Pads a sequence with default values if it is narrower (shorter in length) than a given width.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;PadStart&lt;/h3&gt; &#xA;&lt;p&gt;Pads a sequence with default values in the beginning if it is narrower (shorter in length) than a given width.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Pairwise&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence resulting from applying a function to each element in the source sequence and its predecessor, with the exception of the first element which is only returned as the predecessor of the second element&lt;/p&gt; &#xA;&lt;h3&gt;PartialSort&lt;/h3&gt; &#xA;&lt;p&gt;Combines &lt;code&gt;OrderBy&lt;/code&gt; (where element is key) and &lt;code&gt;Take&lt;/code&gt; in a single operation.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;PartialSortBy&lt;/h3&gt; &#xA;&lt;p&gt;Combines &lt;code&gt;OrderBy&lt;/code&gt; and &lt;code&gt;Take&lt;/code&gt; in a single operation.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Partition&lt;/h3&gt; &#xA;&lt;p&gt;Partitions a sequence by a predicate, or a grouping by Boolean keys or up to 3 sets of keys.&lt;/p&gt; &#xA;&lt;p&gt;This method has 10 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Permutations&lt;/h3&gt; &#xA;&lt;p&gt;Generates a sequence of lists that represent the permutations of the original sequence&lt;/p&gt; &#xA;&lt;h3&gt;Pipe&lt;/h3&gt; &#xA;&lt;p&gt;Executes the given action on each element in the source sequence and yields it&lt;/p&gt; &#xA;&lt;h3&gt;Prepend&lt;/h3&gt; &#xA;&lt;p&gt;Prepends a single value to a sequence&lt;/p&gt; &#xA;&lt;h3&gt;PreScan&lt;/h3&gt; &#xA;&lt;p&gt;Performs a pre-scan (exclusive prefix sum) on a sequence of elements&lt;/p&gt; &#xA;&lt;h3&gt;Random&lt;/h3&gt; &#xA;&lt;p&gt;Returns an infinite sequence of random integers using the standard .NET random number generator.&lt;/p&gt; &#xA;&lt;p&gt;This method has 6 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;RandomDouble&lt;/h3&gt; &#xA;&lt;p&gt;Returns an infinite sequence of random double values between 0.0 and 1.0.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;RandomSubset&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of a specified size of random elements from the original sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Rank&lt;/h3&gt; &#xA;&lt;p&gt;Ranks each item in the sequence in descending ordering using a default comparer.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;RankBy&lt;/h3&gt; &#xA;&lt;p&gt;Ranks each item in the sequence in descending ordering by a specified key using a default comparer.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Repeat&lt;/h3&gt; &#xA;&lt;p&gt;Repeats the sequence indefinitely or a specific number of times.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Return&lt;/h3&gt; &#xA;&lt;p&gt;Returns a single-element sequence containing the item provided.&lt;/p&gt; &#xA;&lt;h3&gt;RightJoin&lt;/h3&gt; &#xA;&lt;p&gt;Performs a right outer join between two sequences.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;RunLengthEncode&lt;/h3&gt; &#xA;&lt;p&gt;Run-length encodes a sequence by converting consecutive instances of the same element into a &lt;code&gt;KeyValuePair&amp;lt;T, int&amp;gt;&lt;/code&gt; representing the item and its occurrence count.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Scan&lt;/h3&gt; &#xA;&lt;p&gt;Peforms a scan (inclusive prefix sum) on a sequence of elements.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ScanBy&lt;/h3&gt; &#xA;&lt;p&gt;Applies an accumulator function over sequence element keys, returning the keys along with intermediate accumulator states.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ScanRight&lt;/h3&gt; &#xA;&lt;p&gt;Peforms a right-associative scan (inclusive prefix) on a sequence of elements. This operator is the right-associative version of the Scan operator.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Segment&lt;/h3&gt; &#xA;&lt;p&gt;Divides a sequence into multiple sequences by using a segment detector based on the original sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Sequence&lt;/h3&gt; &#xA;&lt;p&gt;Generates a sequence of integral numbers within the (inclusive) specified range.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Shuffle&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of elements in random order from the original sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;SkipLast&lt;/h3&gt; &#xA;&lt;p&gt;Bypasses a specified number of elements at the end of the sequence.&lt;/p&gt; &#xA;&lt;h3&gt;SkipUntil&lt;/h3&gt; &#xA;&lt;p&gt;Skips items from the input sequence until the given predicate returns true when applied to the current source item; that item will be the last skipped&lt;/p&gt; &#xA;&lt;h3&gt;Slice&lt;/h3&gt; &#xA;&lt;p&gt;Extracts elements from a sequence at a particular zero-based starting index&lt;/p&gt; &#xA;&lt;h3&gt;SortedMerge&lt;/h3&gt; &#xA;&lt;p&gt;Merges two or more sequences that are in a common order (either ascending or descending) into a single sequence that preserves that order.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Split&lt;/h3&gt; &#xA;&lt;p&gt;Splits the source sequence by a separator.&lt;/p&gt; &#xA;&lt;p&gt;This method has 12 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;StartsWith&lt;/h3&gt; &#xA;&lt;p&gt;Determines whether the beginning of the first sequence is equivalent to the second sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Subsets&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence of representing all of the subsets of any size that are part of the original sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;TagFirstLast&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence resulting from applying a function to each element in the source sequence with additional parameters indicating whether the element is the first and/or last of the sequence&lt;/p&gt; &#xA;&lt;h3&gt;TakeEvery&lt;/h3&gt; &#xA;&lt;p&gt;Returns every N-th element of a source sequence&lt;/p&gt; &#xA;&lt;h3&gt;TakeLast&lt;/h3&gt; &#xA;&lt;p&gt;Returns a specified number of contiguous elements from the end of a sequence&lt;/p&gt; &#xA;&lt;h3&gt;TakeUntil&lt;/h3&gt; &#xA;&lt;p&gt;Returns items from the input sequence until the given predicate returns true when applied to the current source item; that item will be the last returned&lt;/p&gt; &#xA;&lt;h3&gt;ThenBy&lt;/h3&gt; &#xA;&lt;p&gt;Performs a subsequent ordering of elements in a sequence in a particular direction (ascending, descending) according to a key.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToArrayByIndex&lt;/h3&gt; &#xA;&lt;p&gt;Creates an array from an IEnumerable&#xA; &lt;t&gt;&#xA;   where a function is used to determine the index at which an element will be placed in the array.&#xA; &lt;/t&gt;&lt;/p&gt; &#xA;&lt;p&gt;This method has 6 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToDataTable&lt;/h3&gt; &#xA;&lt;p&gt;Appends elements in the sequence as rows of a given object with a set of lambda expressions specifying which members (property or field) of each element in the sequence will supply the column values.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToDelimitedString&lt;/h3&gt; &#xA;&lt;p&gt;Creates a delimited string from a sequence of values. The delimiter used depends on the current culture of the executing thread.&lt;/p&gt; &#xA;&lt;p&gt;This method has 15 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToDictionary&lt;/h3&gt; &#xA;&lt;p&gt;Creates a &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2&#34;&gt;dictionary&lt;/a&gt; from a sequence of &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.KeyValuePair-2&#34;&gt;key-value pair&lt;/a&gt; elements or tuples of 2.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToHashSet&lt;/h3&gt; &#xA;&lt;p&gt;Returns a &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1&#34;&gt;hash-set&lt;/a&gt; of the source items using the default equality comparer for the type.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ToLookup&lt;/h3&gt; &#xA;&lt;p&gt;Creates a &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.linq.lookup-2&#34;&gt;lookup&lt;/a&gt; from a sequence of &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.KeyValuePair-2&#34;&gt;key-value pair&lt;/a&gt; elements or tuples of 2.&lt;/p&gt; &#xA;&lt;p&gt;This method has 4 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Transpose&lt;/h3&gt; &#xA;&lt;p&gt;Transposes the rows of a sequence into columns.&lt;/p&gt; &#xA;&lt;h3&gt;TraverseBreadthFirst&lt;/h3&gt; &#xA;&lt;p&gt;Traverses a tree in a breadth-first fashion, starting at a root node and using a user-defined function to get the children at each node of the tree.&lt;/p&gt; &#xA;&lt;h3&gt;TraverseDepthFirst&lt;/h3&gt; &#xA;&lt;p&gt;Traverses a tree in a depth-first fashion, starting at a root node and using a user-defined function to get the children at each node of the tree.&lt;/p&gt; &#xA;&lt;h3&gt;Trace&lt;/h3&gt; &#xA;&lt;p&gt;Traces the elements of a source sequence for diagnostics.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Unfold&lt;/h3&gt; &#xA;&lt;p&gt;Returns a sequence generated by applying a state to the generator function, and from its result, determines if the sequence should have a next element and its value, and the next state in the recursive call.&lt;/p&gt; &#xA;&lt;h3&gt;Window&lt;/h3&gt; &#xA;&lt;p&gt;Processes a sequence into a series of subsequences representing a windowed subset of the original&lt;/p&gt; &#xA;&lt;h3&gt;&lt;del&gt;Windowed&lt;/del&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Processes a sequence into a series of subsequences representing a windowed subset of the original&lt;/p&gt; &#xA;&lt;p&gt;This method is obsolete and will be removed in a future version. Use &lt;code&gt;Window&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;WindowLeft&lt;/h3&gt; &#xA;&lt;p&gt;Creates a left-aligned sliding window over the source sequence of a given size.&lt;/p&gt; &#xA;&lt;h3&gt;WindowRight&lt;/h3&gt; &#xA;&lt;p&gt;Creates a right-aligned sliding window over the source sequence of a given size.&lt;/p&gt; &#xA;&lt;h3&gt;ZipLongest&lt;/h3&gt; &#xA;&lt;p&gt;Returns a projection of tuples, where each tuple contains the N-th element from each of the argument sequences. The resulting sequence will always be as long as the longest of input sequences where the default value of each of the shorter sequence element types is used for padding.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;ZipShortest&lt;/h3&gt; &#xA;&lt;p&gt;Returns a projection of tuples, where each tuple contains the N-th element from each of the argument sequences. The resulting sequence is as short as the shortest input sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 3 overloads.&lt;/p&gt; &#xA;&lt;h2&gt;Experimental Operators&lt;/h2&gt; &#xA;&lt;p&gt;THESE METHODS ARE EXPERIMENTAL. THEY MAY BE UNSTABLE AND UNTESTED. THEY MAY BE REMOVED FROM A FUTURE MAJOR OR MINOR RELEASE AND POSSIBLY WITHOUT NOTICE. USE THEM AT YOUR OWN RISK. THE METHODS ARE PUBLISHED FOR FIELD EXPERIMENTATION TO SOLICIT FEEDBACK ON THEIR UTILITY AND DESIGN/IMPLEMENTATION DEFECTS.&lt;/p&gt; &#xA;&lt;p&gt;Use of experimental methods requires importing the &lt;code&gt;MoreLinq.Experimental&lt;/code&gt; namespace.&lt;/p&gt; &#xA;&lt;h3&gt;Aggregate&lt;/h3&gt; &#xA;&lt;p&gt;Applies multiple accumulator queries sequentially in a single pass over a sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 8 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;Await&lt;/h3&gt; &#xA;&lt;p&gt;Creates a sequence query that streams the result of each task in the source sequence as it completes asynchronously.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;AwaitCompletion&lt;/h3&gt; &#xA;&lt;p&gt;Awaits completion of all asynchronous evaluations irrespective of whether they succeed or fail. An additional argument specifies a function that projects the final result given the source item and completed task.&lt;/p&gt; &#xA;&lt;h3&gt;Memoize&lt;/h3&gt; &#xA;&lt;p&gt;Creates a sequence that lazily caches the source as it is iterated for the first time, reusing the cache thereafter for future re-iterations. If the source is already cached or buffered then it is returned verbatim.&lt;/p&gt; &#xA;&lt;h3&gt;Merge&lt;/h3&gt; &#xA;&lt;p&gt;Concurrently merges all the elements of multiple asynchronous streams into a single asynchronous stream. An overload with an additional parameter specifies the maximum concurrent operations that may be in flight at any give time.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt; &#xA;&lt;h3&gt;TrySingle&lt;/h3&gt; &#xA;&lt;p&gt;Returns the only element of a sequence that has just one element. If the sequence has zero or multiple elements, then returns a user-defined value that indicates the cardinality of the result sequence.&lt;/p&gt; &#xA;&lt;p&gt;This method has 2 overloads.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LocalizeLimbusCompany/LocalizeLimbusCompany</title>
    <updated>2023-04-09T01:30:55Z</updated>
    <id>tag:github.com,2023-04-09:/LocalizeLimbusCompany/LocalizeLimbusCompany</id>
    <link href="https://github.com/LocalizeLimbusCompany/LocalizeLimbusCompany" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个给边狱公司LimbusCompany应用汉化的模组&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;安装&lt;a href=&#34;https://raw.githubusercontent.com/LocalizeLimbusCompany/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/LocalizeLimbusCompany/LocalizeLimbusCompany/total.svg?label=%E4%B8%8B%E8%BD%BD&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LocalizeLimbusCompany/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/LocalizeLimbusCompany/LocalizeLimbusCompany.svg?label=%E6%9C%80%E6%96%B0%E7%89%88&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/LocalizeLimbusCompany/LocalizeLimbusCompany/latest/total.svg?label=%E4%B8%8B%E8%BD%BD&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;0. 安装&lt;a href=&#34;https://dotnet.microsoft.com/zh-cn/download/dotnet/thank-you/sdk-6.0.406-windows-x64-installer&#34;&gt;.NET 6.0 SDK&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;1. 安装模组框架&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;从&lt;a href=&#34;https://github.com/LavaGang/MelonLoader&#34;&gt;MelonLoader&lt;/a&gt;下载v0.6.1或更高版本的模组框架&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在Steam主界面右键游戏点击管理 浏览本地文件夹 将压缩包内所有东西&lt;strong&gt;不 要 新 建 文 件 夹&lt;/strong&gt;的解压到上述弹出的文件夹中&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 安装字体文件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从&lt;a href=&#34;https://raw.githubusercontent.com/LLC_ChineseFontAsset&#34;&gt;LLC_ChineseFontAsset&lt;/a&gt; 或者 &lt;a href=&#34;https://wwlf.lanzoue.com/ioxNe0rocb0f&#34;&gt;蓝奏云镜像&lt;/a&gt;密码:6fxw下载字体文件 后解压到上述文件夹中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. 安装汉化&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;从&lt;a href=&#34;https://raw.githubusercontent.com/LocalizeLimbusCompany/releases&#34;&gt;最新版&lt;/a&gt;下载全量包 后解压到上述文件夹中&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你知道&lt;strong&gt;自己在做什么&lt;/strong&gt;，可以下载增量更新或git变动文件覆盖至相应文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LocalizeLimbusCompany/actions/workflows/dev.yml&#34;&gt;最新开发版&lt;/a&gt; 总是最新的&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LocalizeLimbusCompany/actions/workflows/beta.yml&#34;&gt;最新预览版&lt;/a&gt; 每周三自动更新&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;我是谁?我在哪?我要干什么?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_MOD_Installer/releases&#34;&gt;适用于看不懂上面的安装&amp;amp;更新程序&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;to do list&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;体验优化：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UI响应优化，修复弱智的等半秒设计 0%&lt;/li&gt; &#xA;   &lt;li&gt;主线界面优化，主线自动展开并跟随最新进度 0%&lt;/li&gt; &#xA;   &lt;li&gt;增加关卡收藏/上一次作战功能 0%&lt;/li&gt; &#xA;   &lt;li&gt;在战斗中始终显示&#34;快速分配剩余骰子&#34;/记忆&#34;敌方攻击目标&#34;按钮的状态 0%&lt;/li&gt; &#xA;   &lt;li&gt;更多热键 0%&lt;/li&gt; &#xA;   &lt;li&gt;事件自动跳过 0%&lt;/li&gt; &#xA;   &lt;li&gt;镜牢人格ego跟随编队 0%&lt;/li&gt; &#xA;   &lt;li&gt;下载/载入目录迁移 0%&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;增加错误弹窗，用于更好的Debug 10% by Bright&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修复字体大小不正常问题 20% by Bright 10% by 茜&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;将所有服务器响应改到本地，使边狱公司成为一个单机游戏 0%&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;相关项目&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_ChineseFontAsset&#34;&gt;LLC_ChineseFontAsset&lt;/a&gt;中文字体&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_MOD_Installer&#34;&gt;LLC_MOD_Installer&lt;/a&gt;模组傻瓜安装更新程序&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_GAME_V1.1.0_Raw&#34;&gt;LLC_GAME_V1.1.0_Raw&lt;/a&gt;边狱公司游戏未加密版本的存档&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_ChineseLocalize&#34;&gt;LLC_ChineseLocalize&lt;/a&gt;中文翻译 汉化组的最新进展&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLC_Readme&#34;&gt;LLC_Readme&lt;/a&gt;模组公告&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/kkr223/limbusTranslator&#34;&gt;填充辅助程序&lt;/a&gt;让翻译者更方便的填充汉化程序&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>