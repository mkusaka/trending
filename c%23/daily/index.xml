<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-30T01:30:16Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>justinpbarnett/unity-mcp</title>
    <updated>2025-06-30T01:30:16Z</updated>
    <id>tag:github.com,2025-06-30:/justinpbarnett/unity-mcp</id>
    <link href="https://github.com/justinpbarnett/unity-mcp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Unity MCP server that allows MCP clients like Claude Desktop or Cursor to perform Unity Editor actions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity MCP ‚ú®&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Connect your Unity Editor to LLMs using the Model Context Protocol.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unity MCP acts as a bridge, allowing AI assistants (like Claude, Cursor) to interact directly with your Unity Editor via a local &lt;strong&gt;MCP (Model Context Protocol) Client&lt;/strong&gt;. Give your LLM tools to manage assets, control scenes, edit scripts, and automate tasks within Unity.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&#xA; &lt;picture&gt;&#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/justinpbarnett/unity-mcp/assets/11047284/c279675a-dd58-406b-9613-5b16b5c6bb63&#34;&gt;&#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://github.com/justinpbarnett/unity-mcp/assets/11047284/b54f891d-961b-4048-a9c4-3af46e2a52fc&#34;&gt;&#xA;  &lt;img alt=&#34;UnityMCP Workflow&#34; width=&#34;100%&#34; style=&#34;max-width: 600px; display: block; margin-left: auto; margin-right: auto;&#34;&gt;&#xA; &lt;/picture&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Key Features üöÄ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;üó£Ô∏è Natural Language Control:&lt;/strong&gt; Instruct your LLM to perform Unity tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üõ†Ô∏è Powerful Tools:&lt;/strong&gt; Manage assets, scenes, materials, scripts, and editor functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ü§ñ Automation:&lt;/strong&gt; Automate repetitive Unity workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üß© Extensible:&lt;/strong&gt; Designed to work with various MCP Clients.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Expand for Available Tools...&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Your LLM can use functions like:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;read_console&lt;/code&gt;: Gets messages from or clears the console.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_script&lt;/code&gt;: Manages C# scripts (create, read, update, delete).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_editor&lt;/code&gt;: Controls and queries the editor&#39;s state and settings.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_scene&lt;/code&gt;: Manages scenes (load, save, create, get hierarchy, etc.).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_asset&lt;/code&gt;: Performs asset operations (import, create, modify, delete, etc.).&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;manage_gameobject&lt;/code&gt;: Manages GameObjects: create, modify, delete, find, and component operations.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;execute_menu_item&lt;/code&gt;: Executes a menu item via its path (e.g., &#34;File/Save Project&#34;).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How It Works ü§î&lt;/h2&gt; &#xA;&lt;p&gt;Unity MCP connects your tools using two components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity MCP Bridge:&lt;/strong&gt; A Unity package running inside the Editor. (Installed via Package Manager).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity MCP Server:&lt;/strong&gt; A Python server that runs locally, communicating between the Unity Bridge and your MCP Client. (Installed manually).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Flow:&lt;/strong&gt; &lt;code&gt;[Your LLM via MCP Client] &amp;lt;-&amp;gt; [Unity MCP Server (Python)] &amp;lt;-&amp;gt; [Unity MCP Bridge (Unity Editor)]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The setup is constantly improving as we update the package. Check back if you randomly start to run into issues.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Click to view required software...&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Git CLI:&lt;/strong&gt; For cloning the server code. &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Download Git&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Python:&lt;/strong&gt; Version 3.12 or newer. &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Download Python&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Unity Hub &amp;amp; Editor:&lt;/strong&gt; Version 2020.3 LTS or newer. &lt;a href=&#34;https://unity.com/download&#34;&gt;Download Unity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;uv (Python package manager):&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install uv&#xA;# Or see: https://docs.astral.sh/uv/getting-started/installation/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;An MCP Client:&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.cursor.com/en/downloads&#34;&gt;Cursor&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;em&gt;(Others may work with manual config)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Step 1: Install the Unity Package (Bridge)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Unity project.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt; -&amp;gt; &lt;code&gt;Add package from git URL...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enter: &lt;pre&gt;&lt;code&gt;https://github.com/justinpbarnett/unity-mcp.git?path=/UnityMcpBridge&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The MCP Server should automatically be installed onto your machine as a result of this process.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Step 2: Configure Your MCP Client&lt;/h3&gt; &#xA;&lt;p&gt;Connect your MCP Client (Claude, Cursor, etc.) to the Python server you installed in Step 1.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option A: Auto-Configure (Recommended for Claude/Cursor)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Unity, go to &lt;code&gt;Window &amp;gt; Unity MCP&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Auto Configure Claude&lt;/code&gt; or &lt;code&gt;Auto Configure Cursor&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Look for a green status indicator üü¢ and &#34;Connected&#34;. &lt;em&gt;(This attempts to modify the MCP Client&#39;s config file automatically)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option B: Manual Configuration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If Auto-Configure fails or you use a different client:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Find your MCP Client&#39;s configuration file.&lt;/strong&gt; (Check client documentation). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Claude Example (macOS):&lt;/em&gt; &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Claude Example (Windows):&lt;/em&gt; &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edit the file&lt;/strong&gt; to add/update the &lt;code&gt;mcpServers&lt;/code&gt; section, using the &lt;em&gt;exact&lt;/em&gt; paths from Step 1.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Click for OS-Specific JSON Configuration Snippets...&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\UnityMCP\\UnityMcpServer\\src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Remember to replace YOUR_USERNAME and use double backslashes \)&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;/usr/local/bin/UnityMCP/UnityMcpServer/src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Replace YOUR_USERNAME if using ~/bin)&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;UnityMCP&#34;: {&#xA;      &#34;command&#34;: &#34;uv&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--directory&#34;,&#xA;        &#34;/home/YOUR_USERNAME/bin/UnityMCP/UnityMcpServer/src&#34;,&#xA;        &#34;server.py&#34;&#xA;      ]&#xA;    }&#xA;    // ... other servers might be here ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Replace YOUR_USERNAME)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage ‚ñ∂Ô∏è&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open your Unity Project.&lt;/strong&gt; The Unity MCP Bridge (package) should connect automatically. Check status via Window &amp;gt; Unity MCP.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start your MCP Client&lt;/strong&gt; (Claude, Cursor, etc.). It should automatically launch the Unity MCP Server (Python) using the configuration from Installation Step 3.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interact!&lt;/strong&gt; Unity tools should now be available in your MCP Client.&lt;/p&gt; &lt;p&gt;Example Prompt: &lt;code&gt;Create a 3D player controller.&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing ü§ù&lt;/h2&gt; &#xA;&lt;p&gt;Help make Unity MCP better!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fork&lt;/strong&gt; the main repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a branch&lt;/strong&gt; (&lt;code&gt;feature/your-idea&lt;/code&gt; or &lt;code&gt;bugfix/your-fix&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Make changes.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; (feat: Add cool new feature).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Push&lt;/strong&gt; your branch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open a Pull Request&lt;/strong&gt; against the master branch.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Troubleshooting ‚ùì&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Click to view common issues and fixes...&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unity Bridge Not Running/Connecting:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Ensure Unity Editor is open.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Check the status window: Window &amp;gt; Unity MCP.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Restart Unity.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Client Not Connecting / Server Not Starting:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify Server Path:&lt;/strong&gt; Double-check the --directory path in your MCP Client&#39;s JSON config. It must exactly match the location where you cloned the UnityMCP repository in Installation Step 1 (e.g., .../Programs/UnityMCP/UnityMcpServer/src).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify uv:&lt;/strong&gt; Make sure uv is installed and working (pip show uv).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Manually:&lt;/strong&gt; Try running the server directly from the terminal to see errors: &lt;code&gt;# Navigate to the src directory first! cd /path/to/your/UnityMCP/UnityMcpServer/src uv run server.py&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Permissions (macOS/Linux):&lt;/strong&gt; If you installed the server in a system location like /usr/local/bin, ensure the user running the MCP client has permission to execute uv and access files there. Installing in ~/bin might be easier.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Auto-Configure Failed:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Use the Manual Configuration steps. Auto-configure might lack permissions to write to the MCP client&#39;s config file.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Still stuck? &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fgithub.com%2Fjustinpbarnett%2Funity-mcp%2Fissues&#34;&gt;Open an Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License üìú&lt;/h2&gt; &#xA;&lt;p&gt;MIT License. See &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fgithub.com%2Fjustinpbarnett%2Funity-mcp%2Fblob%2Fmaster%2FLICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contact üëã&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;X/Twitter:&lt;/strong&gt; &lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fx.com%2Fjustinpbarnett&#34;&gt;@justinpbarnett&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Acknowledgments üôè&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the contributors and the Unity team.&lt;/p&gt;</summary>
  </entry>
</feed>