<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-29T01:28:35Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SonarSource/sonar-dotnet</title>
    <updated>2024-06-29T01:28:35Z</updated>
    <id>tag:github.com,2024-06-29:/SonarSource/sonar-dotnet</id>
    <link href="https://github.com/SonarSource/sonar-dotnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code analyzer for C# and VB.NET projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Code Quality and Security for C# and VB.NET&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/sonarsource/DotNetTeam%20Project/_build/latest?definitionId=77&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/sonarsource/DotNetTeam%20Project/_apis/build/status/Sonar.Net?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Product&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Quality Gate&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Coverage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Analyzer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=sonaranalyzer-dotnet&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=sonaranalyzer-dotnet&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sonarcloud.io/component_measures?id=sonaranalyzer-dotnet&amp;amp;metric=coverage&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=sonaranalyzer-dotnet&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Plugin&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=org.sonarsource.dotnet%3Asonar-dotnet&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.sonarsource.dotnet%3Asonar-dotnet&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sonarcloud.io/component_measures?id=org.sonarsource.dotnet%3Asonar-dotnet&amp;amp;metric=coverage&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.sonarsource.dotnet%3Asonar-dotnet&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34;&gt;Static analysis&lt;/a&gt; of C# and VB.NET languages in &lt;a href=&#34;https://www.sonarsource.com/products/sonarqube&#34;&gt;SonarQube&lt;/a&gt;, &lt;a href=&#34;https://www.sonarsource.com/products/sonarcloud&#34;&gt;SonarCloud&lt;/a&gt; and &lt;a href=&#34;https://www.sonarsource.com/products/sonarlint&#34;&gt;SonarLint&lt;/a&gt; code quality and security products. These Roslyn analyzers allow you to produce &lt;a href=&#34;https://www.sonarsource.com/solutions/clean-code/&#34;&gt;Clean Code&lt;/a&gt; that is safe, reliable, and maintainable by helping you find and correct bugs, vulnerabilities, and code smells in your codebase.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rules.sonarsource.com/csharp&#34;&gt;460+ C# rules&lt;/a&gt; and &lt;a href=&#34;https://rules.sonarsource.com/vbnet&#34;&gt;210+ VB.â€‹NET rules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Metrics (cognitive complexity, duplications, number of lines, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Import of &lt;a href=&#34;https://community.sonarsource.com/t/9871&#34;&gt;test coverage reports&lt;/a&gt; from Visual Studio Code Coverage, dotCover, OpenCover, Coverlet, Altcover.&lt;/li&gt; &#xA; &lt;li&gt;Import of third-party Roslyn Analyzers results&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://github.com/SonarSource/sonarqube-roslyn-sdk&#34;&gt;custom rules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful public resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redirect.sonarsource.com/plugins/csharp.html&#34;&gt;Project homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/issues.md&#34;&gt;Issue tracking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rules.sonarsource.com/csharp&#34;&gt;C# rules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rules.sonarsource.com/vbnet&#34;&gt;VB.Net rules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Nuget.org packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/SonarAnalyzer.CSharp/&#34;&gt;SonarAnalyzer.CSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/SonarAnalyzer.VisualBasic/&#34;&gt;SonarAnalyzer.VisualBasic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integration with SonarQube and SonarCloud&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redirect.sonarsource.com/doc/install-configure-scanner-msbuild.html&#34;&gt;Analyze projects with SonarScanner for .NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.sonarsource.com/t/9871&#34;&gt;Importing code coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.sonarsource.com/t/4725&#34;&gt;SonarQube and the code coverage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Do you have a question or feedback?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contact us on &lt;a href=&#34;https://community.sonarsource.com/&#34;&gt;our Community Forum&lt;/a&gt; to provide feedback, ask for help, and request new rules or features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SonarSource/sonar-dotnet/issues/new/choose&#34;&gt;Create a GitHub Issue&lt;/a&gt; if you&#39;ve found a bug, False-Positive or False-Negative.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/contributing-analyzer.md&#34;&gt;Building, testing and debugging the .NET analyzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/contributing-plugin.md&#34;&gt;Building, testing and debugging the Java plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/regenerate-lock-files.md&#34;&gt;How to re-generate NuGet lock files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/scripts/rspec/README.md&#34;&gt;Using the rspec.ps1 script&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways you can contribute to the &lt;code&gt;sonar-dotnet&lt;/code&gt; project. When contributing, please respect our &lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/code-of-conduct.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Join the discussions&lt;/h3&gt; &#xA;&lt;p&gt;One of the easiest ways to contribute is to share your feedback with us (see &lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/#do-you-have-a-question-or-feedback&#34;&gt;give feedback&lt;/a&gt;) and also answer questions from &lt;a href=&#34;https://community.sonarsource.com/&#34;&gt;our community forum&lt;/a&gt;. You can also monitor the activity on this repository (opened issues, opened PRs) to get more acquainted with what we do.&lt;/p&gt; &#xA;&lt;h3&gt;Pull Request (PR)&lt;/h3&gt; &#xA;&lt;p&gt;If you want to fix &lt;a href=&#34;https://github.com/SonarSource/sonar-dotnet/issues&#34;&gt;an issue&lt;/a&gt;, please read the &lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/#get-started&#34;&gt;Get started&lt;/a&gt; pages first and make sure that you follow &lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/coding-style.md&#34;&gt;our coding style&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before submitting the PR, make sure &lt;a href=&#34;https://raw.githubusercontent.com/SonarSource/sonar-dotnet/master/docs/contributing-analyzer.md#running-unit-tests&#34;&gt;all tests&lt;/a&gt; are passing (all checks must be green).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We suggest you do not pick issues with the &lt;code&gt;Area: CFG&lt;/code&gt; label &lt;em&gt;(they are difficult, can have many side effects and are less likely to be accepted)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;We suggest you do not implement new rules unless they are already specified for C# and/or VB.NET on our &lt;a href=&#34;https://jira.sonarsource.com/projects/RSPEC&#34;&gt;rules repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Our CI does not get automatically triggered on the PRs from external contributors. A member of our team will review the code and trigger the CI on demand by adding a comment on the PR (see &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=azure-devops&amp;amp;tabs=yaml#comment-triggers&#34;&gt;Azure Pipelines Comment triggers docs&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/azp run Sonar.Net&lt;/code&gt; - It will run the full pipeline, including plugin tests and promotion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Join us&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to work on this project full-time, &lt;a href=&#34;https://www.sonarsource.com/company/jobs/static-code-analyzer-cs-developer&#34;&gt;we are hiring!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Rules&lt;/h2&gt; &#xA;&lt;p&gt;To request new rules, Contact us on &lt;a href=&#34;https://community.sonarsource.com/c/suggestions/&#34;&gt;our Community Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have an idea for a rule but you are not sure that everyone needs it, you can implement your own Roslyn analyzer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can start with &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/tutorials/how-to-write-csharp-analyzer-code-fix&#34;&gt;this tutorial from Microsoft&lt;/a&gt; to write an analyzer.&lt;/li&gt; &#xA; &lt;li&gt;All Roslyn-based issues are picked up by the &lt;a href=&#34;https://redirect.sonarsource.com/doc/install-configure-scanner-msbuild.html&#34;&gt;SonarScanner for .NET&lt;/a&gt; and pushed to SonarQube / SonarCloud as external issues.&lt;/li&gt; &#xA; &lt;li&gt;Also check out &lt;a href=&#34;https://github.com/SonarSource-VisualStudio/sonarqube-roslyn-sdk&#34;&gt;SonarQube Roslyn SDK&lt;/a&gt; to embed your Roslyn analyzer in a SonarQube plugin, if you want to manage your rules from SonarQube.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuring Rules&lt;/h2&gt; &#xA;&lt;h3&gt;SonarQube / SonarCloud and SonarLint in Connected Mode&lt;/h3&gt; &#xA;&lt;p&gt;Open the rule in SonarQube / SonarCloud, scroll down, and (in case the rule has parameters), you can configure the parameters for each Quality Profile the rule is part of.&lt;/p&gt; &#xA;&lt;p&gt;Use SonarLint Connected Mode to connect to SonarQube and SonarCloud.&lt;/p&gt; &#xA;&lt;h3&gt;SonarLint&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way is to configure a Quality Profile in SonarCloud.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a dummy repository and analyze it in SonarCloud (it&#39;s free for open-source).&lt;/li&gt; &#xA; &lt;li&gt;Configure the Quality Profile in SonarCloud for the project you created.&lt;/li&gt; &#xA; &lt;li&gt;Then connect SonarLint to that project, and it will download the configuration (ruleset and SonarLint.xml files) locally and update your project based on the Quality Profile.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Standalone NuGet&lt;/h3&gt; &#xA;&lt;p&gt;The rules from standalone NuGet packages can be enabled or disabled in the same way as the other analyzers based on Roslyn, by using the &lt;code&gt;.globalconfig&lt;/code&gt; or &lt;code&gt;.editorconfig&lt;/code&gt; files. See: &lt;a href=&#34;https://learn.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022#set-rule-severity-in-an-editorconfig-file&#34;&gt;https://learn.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022#set-rule-severity-in-an-editorconfig-file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the rules are parameterized, the parameter values can be changed using &lt;code&gt;SonarLint.xml&lt;/code&gt; additional files.&lt;/p&gt; &#xA;&lt;p&gt;The first step is to create a new file, named &lt;code&gt;SonarLint.xml&lt;/code&gt;, that has the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;&#xA;&amp;lt;AnalysisInput xmlns:xsd=&#34;http://www.w3.org/2001/XMLSchema&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt;&#xA;  &amp;lt;Settings&amp;gt;&#xA;    &amp;lt;Setting&amp;gt;&#xA;      &amp;lt;Key&amp;gt;sonar.cs.analyzeGeneratedCode&amp;lt;/Key&amp;gt;&#xA;      &amp;lt;Value&amp;gt;false&amp;lt;/Value&amp;gt;&#xA;    &amp;lt;/Setting&amp;gt;&#xA;  &amp;lt;/Settings&amp;gt;&#xA;  &amp;lt;Rules&amp;gt;&#xA;    &amp;lt;Rule&amp;gt;&#xA;      &amp;lt;Key&amp;gt;S107&amp;lt;/Key&amp;gt;&#xA;      &amp;lt;Parameters&amp;gt;&#xA;        &amp;lt;Parameter&amp;gt;&#xA;          &amp;lt;Key&amp;gt;max&amp;lt;/Key&amp;gt;&#xA;          &amp;lt;Value&amp;gt;2&amp;lt;/Value&amp;gt;&#xA;        &amp;lt;/Parameter&amp;gt;&#xA;      &amp;lt;/Parameters&amp;gt;&#xA;    &amp;lt;/Rule&amp;gt;&#xA;  &amp;lt;/Rules&amp;gt;&#xA;&amp;lt;/AnalysisInput&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, update the projects to include this additional file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;ItemGroup&amp;gt;&#xA;  &amp;lt;AdditionalFiles Include=&#34;SonarLint.xml&#34; /&amp;gt;&#xA;&amp;lt;/ItemGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Internal resources&lt;/h2&gt; &#xA;&lt;h3&gt;Build configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SonarSource/re-ci-images&#34;&gt;VM Images repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SonarSource/dotnet-infra/raw/main/src/dotnet_infra/constructs/asg.py&#34;&gt;Provisioning repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sonarsource.visualstudio.com/DotNetTeam%20Project/_build?definitionId=77&amp;amp;_a=summary&#34;&gt;Azure Pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SonarSource/peachee-languages/tree/dotnet&#34;&gt;Peachee configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2014-2024 SonarSource.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/lgpl.txt&#34;&gt;GNU Lesser General Public License, Version 3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>