<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-13T01:29:31Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/arrow-adbc</title>
    <updated>2024-10-13T01:29:31Z</updated>
    <id>tag:github.com,2024-10-13:/apache/arrow-adbc</id>
    <link href="https://github.com/apache/arrow-adbc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Database connectivity API standard and libraries for Apache Arrow&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADBC: Arrow Database Connectivity&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/arrow-adbc/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ADBC is an API standard (version 1.0.0) for database access libraries (&#34;drivers&#34;) in C, Go, and Java that uses Arrow for result sets and query parameters. Instead of writing code to convert to and from Arrow data for each individual database, applications can build against the ADBC APIs, and link against drivers that implement the standard. Additionally, a JDBC/ODBC-style driver manager is provided. This also implements the ADBC APIs, but dynamically loads drivers and dispatches calls to them.&lt;/p&gt; &#xA;&lt;p&gt;Like JDBC/ODBC, the goal is to provide a generic API for multiple databases. ADBC, however, is focused on bulk columnar data retrieval and ingestion through an Arrow-based API rather than attempting to replace JDBC/ODBC in all use cases. Hence, ADBC is complementary to those existing standards.&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;a href=&#34;https://arrow.apache.org/docs/format/FlightSql.html&#34;&gt;Arrow Flight SQL&lt;/a&gt;, ADBC is an Arrow-based way to work with databases. However, Flight SQL is a &lt;em&gt;protocol&lt;/em&gt; defining a wire format and network transport as opposed to an &lt;em&gt;API specification&lt;/em&gt;. Flight SQL requires a database to specifically implement support for it, while ADBC is a client API specification for wrapping existing database protocols which could be Arrow-native or not. Together, ADBC and Flight SQL offer a fully Arrow-native solution for clients and database vendors.&lt;/p&gt; &#xA;&lt;p&gt;For more about ADBC, see the &lt;a href=&#34;https://arrow.apache.org/blog/2023/01/05/introducing-arrow-adbc/&#34;&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;ADBC versions the API standard and the implementing libraries separately.&lt;/p&gt; &#xA;&lt;p&gt;The API standard (version 1.0.0) is considered stable, but enhancements may be made.&lt;/p&gt; &#xA;&lt;p&gt;Libraries are under development. For more details, see the &lt;a href=&#34;https://arrow.apache.org/adbc/main/driver/status.html&#34;&gt;documentation&lt;/a&gt;, or read the &lt;a href=&#34;https://raw.githubusercontent.com/apache/arrow-adbc/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://arrow.apache.org/adbc/main/driver/installation.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The core API definitions can be read in &lt;code&gt;adbc.h&lt;/code&gt;. User documentation can be found at &lt;a href=&#34;https://arrow.apache.org/adbc&#34;&gt;https://arrow.apache.org/adbc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For detailed instructions on how to build the various ADBC libraries, see &lt;a href=&#34;https://raw.githubusercontent.com/apache/arrow-adbc/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>