<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-03T01:31:23Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>builtbybel/Debloos</title>
    <updated>2023-02-03T01:31:23Z</updated>
    <id>tag:github.com,2023-02-03:/builtbybel/Debloos</id>
    <link href="https://github.com/builtbybel/Debloos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Universal Debloater for Windows 11&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Debloos (Debloat OS)&lt;/h1&gt; &#xA;&lt;h3&gt;Universal Debloater and PC Manager for Windows 11&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57478606/215881364-ffdf1e71-92c9-4639-b02e-dccb986ee9f9.png&#34; alt=&#34;Debloos_vPno998xF1&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Download initial release here &lt;a href=&#34;https://github.com/builtbybel/Debloos/releases&#34;&gt;https://github.com/builtbybel/Debloos/releases&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Windows 11 has a gazillion toggles and settings options. And general users donâ€™t know where to find most of these features, what to make of them, and which setting to enable or disable. &lt;strong&gt;Debloos&lt;/strong&gt; streamlines and houses all the essential settings under one app and allows you to disable and remove unnecessary features with just a simple click.&lt;/p&gt; &#xA;&lt;p&gt;It comes with a few modules that will be expanded over time, similar to &lt;a href=&#34;https://github.com/builtbybel/ThisIsWin11&#34;&gt;ThisIsWin11&lt;/a&gt;. &lt;em&gt;Debloos may also replace the &lt;a href=&#34;https://github.com/builtbybel/ThisIsWin11&#34;&gt;ThisIsWin11&lt;/a&gt; app sooner or later and serve as a universal app debloater.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Via the link in the lower right corner &lt;strong&gt;&#34;I want to set up Windows 11 for the first time&#34;&lt;/strong&gt;, you can call a &lt;strong&gt;Windows 11 Setup/Assistant&lt;/strong&gt; and customize your system step by step and debloat it.&lt;/li&gt; &#xA; &lt;li&gt;It features a &lt;strong&gt;BloatFinder app&lt;/strong&gt;, which allows you to remove pre-installed apps automatically or the manual way.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;WinModder app&lt;/strong&gt; allows you to apply code snippets based on PowerShell and community scripts.&lt;/li&gt; &#xA; &lt;li&gt;Next to this the app installer &lt;strong&gt;InstaPackage&lt;/strong&gt; is integrated, which allows you to install some of the most important apps with a click and in bulk.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/builtbybel/Debloos/raw/main/assets/debloos.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information to come.. ðŸŒƒ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sshnet/SSH.NET</title>
    <updated>2023-02-03T01:31:23Z</updated>
    <id>tag:github.com,2023-02-03:/sshnet/SSH.NET</id>
    <link href="https://github.com/sshnet/SSH.NET" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SSH.NET is a Secure Shell (SSH) library for .NET, optimized for parallelism.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sshnet/SSH.NET/develop/images/logo/png/SS-NET-icon-h50.png&#34; alt=&#34;Logo&#34;&gt; SSH.NET&lt;/h1&gt; &#xA;&lt;p&gt;SSH.NET is a Secure Shell (SSH-2) library for .NET, optimized for parallelism.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/SSH.NET&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/SSH.NET.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/SSH.NET&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SSH.NET.svg?sanitize=true&#34; alt=&#34;NuGet download count&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/api/projects/status/ih77qu6tap3o92gu/branch/develop&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/ih77qu6tap3o92gu/branch/develop?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This project was inspired by &lt;strong&gt;Sharp.SSH&lt;/strong&gt; library which was ported from java and it seems like was not supported for quite some time. This library is a complete rewrite, without any third party dependencies, using parallelism to achieve the best performance possible.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;There is MSDN-style class documentation in a .chm file for each release, which you can find in the Assets section of the &lt;a href=&#34;https://github.com/sshnet/SSH.NET/releases/latest&#34;&gt;latest release&lt;/a&gt; page. Please note that you will need to &lt;a href=&#34;https://support.microsoft.com/en-us/help/2021383/some-chm-files-may-not-render-properly-on-windows-vista-and-windows-7&#34;&gt;right-click and &#34;unblock&#34;&lt;/a&gt; the CHM file after you download it.&lt;/p&gt; &#xA;&lt;p&gt;Currently (4/18/2020), the documentation is very sparse. Fortunately, there are a large number of tests in &lt;a href=&#34;https://github.com/sshnet/SSH.NET/tree/develop/src/Renci.SshNet.Tests&#34;&gt;Renci.SshNet.Tests&lt;/a&gt; that demonstrate usage with working code.&lt;/p&gt; &#xA;&lt;p&gt;If the test for the functionality you would like to see documented is not complete, then you are cordially invited to read the source, Luke, and highly encouraged to generate a pull request for the implementation of the missing test once you figure things out. ðŸ¤“&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execution of SSH command using both synchronous and asynchronous methods&lt;/li&gt; &#xA; &lt;li&gt;Return command execution exit status and other information&lt;/li&gt; &#xA; &lt;li&gt;Provide SFTP functionality for both synchronous and asynchronous operations&lt;/li&gt; &#xA; &lt;li&gt;Provides SCP functionality&lt;/li&gt; &#xA; &lt;li&gt;Provide status report for upload and download sftp operations to allow accurate progress bar implementation&lt;/li&gt; &#xA; &lt;li&gt;Remote, dynamic and local port forwarding&lt;/li&gt; &#xA; &lt;li&gt;Shell/Terminal implementation&lt;/li&gt; &#xA; &lt;li&gt;Specify key file pass phrase&lt;/li&gt; &#xA; &lt;li&gt;Use multiple key files to authenticate&lt;/li&gt; &#xA; &lt;li&gt;Supports publickey, password and keyboard-interactive authentication methods&lt;/li&gt; &#xA; &lt;li&gt;Supports two-factor or higher authentication&lt;/li&gt; &#xA; &lt;li&gt;Supports SOCKS4, SOCKS5 and HTTP Proxy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Encryption Method&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following encryption methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;aes256-ctr&lt;/li&gt; &#xA; &lt;li&gt;3des-cbc&lt;/li&gt; &#xA; &lt;li&gt;aes128-cbc&lt;/li&gt; &#xA; &lt;li&gt;aes192-cbc&lt;/li&gt; &#xA; &lt;li&gt;aes256-cbc&lt;/li&gt; &#xA; &lt;li&gt;blowfish-cbc&lt;/li&gt; &#xA; &lt;li&gt;twofish-cbc&lt;/li&gt; &#xA; &lt;li&gt;twofish192-cbc&lt;/li&gt; &#xA; &lt;li&gt;twofish128-cbc&lt;/li&gt; &#xA; &lt;li&gt;twofish256-cbc&lt;/li&gt; &#xA; &lt;li&gt;arcfour&lt;/li&gt; &#xA; &lt;li&gt;arcfour128&lt;/li&gt; &#xA; &lt;li&gt;arcfour256&lt;/li&gt; &#xA; &lt;li&gt;cast128-cbc&lt;/li&gt; &#xA; &lt;li&gt;aes128-ctr&lt;/li&gt; &#xA; &lt;li&gt;aes192-ctr&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Exchange Method&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following key exchange methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;curve25519-sha256&lt;/li&gt; &#xA; &lt;li&gt;curve25519-sha256&lt;span&gt;&lt;/span&gt;@libssh.org&lt;/li&gt; &#xA; &lt;li&gt;ecdh-sha2-nistp256&lt;/li&gt; &#xA; &lt;li&gt;ecdh-sha2-nistp384&lt;/li&gt; &#xA; &lt;li&gt;ecdh-sha2-nistp521&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group-exchange-sha256&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group-exchange-sha1&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group16-sha512&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group14-sha256&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group14-sha1&lt;/li&gt; &#xA; &lt;li&gt;diffie-hellman-group1-sha1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Public Key Authentication&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following private key formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RSA in OpenSSL PEM and ssh.com format&lt;/li&gt; &#xA; &lt;li&gt;DSA in OpenSSL PEM and ssh.com format&lt;/li&gt; &#xA; &lt;li&gt;ECDSA 256/384/521 in OpenSSL PEM format&lt;/li&gt; &#xA; &lt;li&gt;ECDSA 256/384/521, ED25519 and RSA in OpenSSH key format&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Private keys can be encrypted using one of the following cipher methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DES-EDE3-CBC&lt;/li&gt; &#xA; &lt;li&gt;DES-EDE3-CFB&lt;/li&gt; &#xA; &lt;li&gt;DES-CBC&lt;/li&gt; &#xA; &lt;li&gt;AES-128-CBC&lt;/li&gt; &#xA; &lt;li&gt;AES-192-CBC&lt;/li&gt; &#xA; &lt;li&gt;AES-256-CBC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Host Key Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following host key algorithms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ssh-ed25519&lt;/li&gt; &#xA; &lt;li&gt;ecdsa-sha2-nistp256&lt;/li&gt; &#xA; &lt;li&gt;ecdsa-sha2-nistp384&lt;/li&gt; &#xA; &lt;li&gt;ecdsa-sha2-nistp521&lt;/li&gt; &#xA; &lt;li&gt;ssh-rsa&lt;/li&gt; &#xA; &lt;li&gt;ssh-dss&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Message Authentication Code&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following MAC algorithms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;hmac-md5&lt;/li&gt; &#xA; &lt;li&gt;hmac-md5-96&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha1&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha1-96&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha2-256&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha2-256-96&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha2-512&lt;/li&gt; &#xA; &lt;li&gt;hmac-sha2-512-96&lt;/li&gt; &#xA; &lt;li&gt;hmac-ripemd160&lt;/li&gt; &#xA; &lt;li&gt;hmac-ripemd160&lt;span&gt;&lt;/span&gt;@openssh.com&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Framework Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;SSH.NET&lt;/strong&gt; supports the following target frameworks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET Framework 3.5&lt;/li&gt; &#xA; &lt;li&gt;.NET Framework 4.0 (and higher)&lt;/li&gt; &#xA; &lt;li&gt;.NET Standard 1.3&lt;/li&gt; &#xA; &lt;li&gt;.NET Standard 2.0&lt;/li&gt; &#xA; &lt;li&gt;Silverlight 4&lt;/li&gt; &#xA; &lt;li&gt;Silverlight 5&lt;/li&gt; &#xA; &lt;li&gt;Windows Phone 7.1&lt;/li&gt; &#xA; &lt;li&gt;Windows Phone 8.0&lt;/li&gt; &#xA; &lt;li&gt;Universal Windows Platform 10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Multi-factor authentication&lt;/h3&gt; &#xA;&lt;p&gt;Establish a SFTP connection using both password and public-key authentication:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var connectionInfo = new ConnectionInfo(&#34;sftp.foo.com&#34;,&#xA;                                        &#34;guest&#34;,&#xA;                                        new PasswordAuthenticationMethod(&#34;guest&#34;, &#34;pwd&#34;),&#xA;                                        new PrivateKeyAuthenticationMethod(&#34;rsa.key&#34;));&#xA;using (var client = new SftpClient(connectionInfo))&#xA;{&#xA;    client.Connect();&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verify host identify&lt;/h3&gt; &#xA;&lt;p&gt;Establish a SSH connection using user name and password, and reject the connection if the fingerprint of the server does not match the expected fingerprint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;byte[] expectedFingerPrint = new byte[] {&#xA;                                            0x66, 0x31, 0xaf, 0x00, 0x54, 0xb9, 0x87, 0x31,&#xA;                                            0xff, 0x58, 0x1c, 0x31, 0xb1, 0xa2, 0x4c, 0x6b&#xA;                                        };&#xA;&#xA;using (var client = new SshClient(&#34;sftp.foo.com&#34;, &#34;guest&#34;, &#34;pwd&#34;))&#xA;{&#xA;    client.HostKeyReceived += (sender, e) =&amp;gt;&#xA;        {&#xA;            if (expectedFingerPrint.Length == e.FingerPrint.Length)&#xA;            {&#xA;                for (var i = 0; i &amp;lt; expectedFingerPrint.Length; i++)&#xA;                {&#xA;                    if (expectedFingerPrint[i] != e.FingerPrint[i])&#xA;                    {&#xA;                        e.CanTrust = false;&#xA;                        break;&#xA;                    }&#xA;                }&#xA;            }&#xA;            else&#xA;            {&#xA;                e.CanTrust = false;&#xA;            }&#xA;        };&#xA;    client.Connect();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building SSH.NET&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Software&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;net35&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;net40&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;netstandard1.3&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;netstandard2.0&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;sl4&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;sl5&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;wp71&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;wp8&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;uap10.0&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows Phone SDK 8.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 2012 Update 5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 2015 Update 3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 2017&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 2019&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supporting SSH.NET&lt;/h2&gt; &#xA;&lt;p&gt;Do you or your company rely on &lt;strong&gt;SSH.NET&lt;/strong&gt; in your projects? If you want to encourage us to keep on going and show us that you appreciate our work, please consider becoming a &lt;a href=&#34;https://github.com/sponsors/sshnet&#34;&gt;sponsor&lt;/a&gt; through GitHub Sponsors.&lt;/p&gt;</summary>
  </entry>
</feed>