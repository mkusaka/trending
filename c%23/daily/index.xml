<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-01T01:31:02Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Fragtality/DynamicLOD</title>
    <updated>2024-01-01T01:31:02Z</updated>
    <id>tag:github.com,2024-01-01:/Fragtality/DynamicLOD</id>
    <link href="https://github.com/Fragtality/DynamicLOD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DynamicLOD&lt;/h1&gt; &#xA;&lt;p&gt;Based on muumimorko&#39;s Idea and Code in MSFS_AdaptiveLOD.&lt;br&gt; It just a small Test / Proof-of-Concept if MSFS Performance could be improved when dynamically changing the TLOD (and OLOD) based on the current AGL.&lt;br&gt;&lt;br&gt; That being said, DynamicLOD is not meant to be a &#34;User facing&#34; Tool - I can&#39;t recommend using it. It actively modifies the Memory of MSFS (basically it works like any &#34;Cheat Trainer&#34;). It likely &lt;strong&gt;violates the Usage Terms&lt;/strong&gt; and can be treated as &lt;strong&gt;potential ban-worthy&lt;/strong&gt; Behavior. It is like Cheating in a FPS.&lt;br&gt;I&#39;m not in anyway responsible for (or interested in) any Problems you&#39;re facing using something you should not use. There will be zero Support and I&#39;m not interested in any Suggestions.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know how to use it, don&#39;t comprehend what it does and the possible Consequences of that: &lt;strong&gt;DO NOT USE IT&lt;/strong&gt;. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The Installer will install the following Software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET 7 Desktop Runtime (x64)&lt;/li&gt; &#xA; &lt;li&gt;MobiFlight Event/WASM Module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Fragtality/DynamicLOD/releases/latest&#34;&gt;Download here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Under Assests, the DynamicLOD-Installer-vXYZ.exe File)&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation / Update&lt;/h2&gt; &#xA;&lt;p&gt;Basically: Just run the Installer.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DynamicLOD has to be stopped before installing.&lt;/li&gt; &#xA; &lt;li&gt;If the MobiFlight Module is not installed or outdated, MSFS also has to be stopped.&lt;/li&gt; &#xA; &lt;li&gt;If you upgrade from Version 0.3.0 or below, delete your old Installation manually (it is no longer needed).&lt;/li&gt; &#xA; &lt;li&gt;From Version 0.3.0 onwards, your Configuration is &lt;em&gt;not&lt;/em&gt; be resetted after Updating.&lt;/li&gt; &#xA; &lt;li&gt;Do not copy over a Configuration from a Version below 0.3.0&lt;/li&gt; &#xA; &lt;li&gt;Do not run the Installer as Admin!&lt;/li&gt; &#xA; &lt;li&gt;For Auto-Start either your FSUIPC7.ini or EXE.xml (MSFS) is modified. The Installer does not create a Backup.&lt;/li&gt; &#xA; &lt;li&gt;It may be blocked by Windows Security or your AV-Scanner, try if unblocking and/or setting an Exception helps (for the whole Folder)&lt;/li&gt; &#xA; &lt;li&gt;The Installation-Location is fixed to %appdata%\DynamicLOD (your Users AppData\Roaming Folder) and can not be changed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Binary in %appdata%\DynamicLOD\bin&lt;/li&gt; &#xA;   &lt;li&gt;Logs in %appdata%\DynamicLOD\log&lt;/li&gt; &#xA;   &lt;li&gt;Config: %appdata%\DynamicLOD\DynamicLOD.config&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage / Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Starting manually: before MSFS or in the Main Menu. It will stop itself when MSFS closes.&lt;/li&gt; &#xA; &lt;li&gt;Closing the Window does not close the Program, use the Context Menu of the SysTray Icon.&lt;/li&gt; &#xA; &lt;li&gt;Clicking on the SysTray Icon opens the Window (again).&lt;/li&gt; &#xA; &lt;li&gt;Runnning as Admin NOT required (BUT: It is required to be run under the same User/Elevation as MSFS).&lt;/li&gt; &#xA; &lt;li&gt;You can have (exactly) three different Sets/Profiles for the AGL/LOD Pairs to switch between (manually but dynamically).&lt;/li&gt; &#xA; &lt;li&gt;For VR Support you have to mark the Profile with &#34;VR Profile&#34;.&lt;/li&gt; &#xA; &lt;li&gt;There is no automatic Detection if VR is active: you have to manually switch between Profiles.&lt;/li&gt; &#xA; &lt;li&gt;The first Pair with AGL 0 can not be deleted. The AGL can not be changed. Only the xLOD.&lt;/li&gt; &#xA; &lt;li&gt;Additional Pairs can be added at any AGL and xLOD desired. Pairs will always be sorted by AGL.&lt;/li&gt; &#xA; &lt;li&gt;Plus is Add, Minus is Remove, S is Set (Change). Remove and Set require to double-click the Pair first.&lt;/li&gt; &#xA; &lt;li&gt;A Pair is selected (and the configured xLOD applied) when the current AGL is above the configured AGL. If the current AGL goes below the configured AGL, the next lower Pair will be selected.&lt;/li&gt; &#xA; &lt;li&gt;A new Pair is only selected in Accordance to the VS Trend - i.e. a lower Pair won&#39;t be selected if you&#39;re actually Climbing (only the next higer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Less is more&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fewer Increments/Decrements are better. Of reasonable Step-Size (roughly in the Range of 25-75).&lt;/li&gt; &#xA;   &lt;li&gt;Some Time in between Changes is better.&lt;/li&gt; &#xA;   &lt;li&gt;Don&#39;t overdo it with extreme low or high xLOD Values. A xLOD of 100 is reasonable fine on Ground, 200-ish is reasonable fine in Air.&lt;/li&gt; &#xA;   &lt;li&gt;Tune your AGL/LOD Pairs to the desired Performance (which is more than just FPS).&lt;/li&gt; &#xA;   &lt;li&gt;FPS Adaption is just &lt;em&gt;one temporary&lt;/em&gt; Adjustment on the current AGL/xLOD Pair to fight some special/rare Situations.&lt;/li&gt; &#xA;   &lt;li&gt;Forcing the Sim to (un)load Objects in rapid Succession defeats the Goal to reduce Stutters. It is &lt;em&gt;not&lt;/em&gt; about FPS.&lt;/li&gt; &#xA;   &lt;li&gt;Smooth Transitions lead to smoother Experiences.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rest should be self-explanatory. And if it is not: You are using something you really should not use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>builtbybel/WhatsPC</title>
    <updated>2024-01-01T01:31:02Z</updated>
    <id>tag:github.com,2024-01-01:/builtbybel/WhatsPC</id>
    <link href="https://github.com/builtbybel/WhatsPC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;What to do with your Toaster?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What to do with your Toaster?&lt;/h1&gt; &#xA;&lt;p&gt;This started as a fun application to inform some colleagues that they shouldn&#39;t throw away their Windows PC. A fresh install can be sufficient and often even work wonders. If you add a little boost here and there in the form of an SSD, the PC might not need to be discarded at all. Currently, some are already dealing with the end-of-life of Windows 10 in October 2025 and the question of how much electronic waste will be generated. For a better feeling, I have now packaged a wealth of information and system checks into an app (hosted in a WebView2/Chromium control) that analyzes the system and provides tips and hints regarding its health status. &lt;strong&gt;This might help prevent someone from throwing away their PC and instead consider other uses for it.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The tool essentially employs Chromium as the frontend and utilizes C# in the backend. Perhaps, this could even be the foundation for something more significant â€“ a tool for efficiently and straightforwardly assessing the system&#39;s health. It aims to present information to the average user in understandable language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/builtbybel/WhatsPC/assets/57478606/988188e9-1b34-4369-a662-274fe51385db&#34; alt=&#34;WhatsPC_dNY5CsRMq8&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BunyaPineTree/LethalCompany_ModelReplacementAPI</title>
    <updated>2024-01-01T01:31:02Z</updated>
    <id>tag:github.com,2024-01-01:/BunyaPineTree/LethalCompany_ModelReplacementAPI</id>
    <link href="https://github.com/BunyaPineTree/LethalCompany_ModelReplacementAPI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LethalCompany_ModelReplacementAPI&lt;/h1&gt; &#xA;&lt;p&gt;Helps the user create model replacement mods in Lethal Company. &lt;a href=&#34;https://github.com/BunyaPineTree/LethalCompany_ModelReplacementAPI/wiki&#34;&gt;See the wiki&lt;/a&gt; for more info. Developers &lt;a href=&#34;https://github.com/BunyaPineTree/LethalCompany_ModelReplacementSDK&#34;&gt;see the SDK repo(in progress)&lt;/a&gt; if you want to contribute to its development.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A unity package manager based workflow to simplify model replacement and assetbundle creation.&lt;/li&gt; &#xA; &lt;li&gt;A skin registry that allows the user to set specific skin names to specific models, default models replacements, or override that entirely and make all players the same model. It is also possible to except a model replacement from the registry entirely, and implement your own logic.&lt;/li&gt; &#xA; &lt;li&gt;Native support for &lt;a href=&#34;https://github.com/naelstrof/UnityJigglePhysics&#34;&gt;UnityJigglePhysics&lt;/a&gt; as a free and highly functional method to implement bone physics into your model without needing to struggle with Assembly Definitions.&lt;/li&gt; &#xA; &lt;li&gt;Seemingly client side&lt;/li&gt; &#xA; &lt;li&gt;More Company cosmetic support&lt;/li&gt; &#xA; &lt;li&gt;TooManyEmotes, MoreEmotes, TooManyEmotes support&lt;/li&gt; &#xA; &lt;li&gt;MirrorDecor, 3rdPerson, LCThirdPerson, Recording Camera support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;This mod maps the bone rotations from the base game character model to the unity Humanoid Avatar Definition, and then from your model&#39;s humanoid avatar to the underlying bones. A result of this is that you do not need to make custom animations, but the result will not be as high quality as if you did and made your model replacement mod from scratch. Players with an active model replacement are given a &lt;code&gt;BodyReplacement&lt;/code&gt; component derived from &lt;code&gt;BodyReplacementBase&lt;/code&gt;, which on each call of &lt;code&gt;Update()&lt;/code&gt; sets your model replacement&#39;s bone rotations via the above method. The mod maker can set which skins activate any given &lt;code&gt;BodyReplacement&lt;/code&gt; with the skin registry.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the Miku example project for a demonstration on how your registered model replacement can make use of bepinex configs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ragdoll behaves strangely at times&lt;/li&gt; &#xA; &lt;li&gt;Blood decals are not currently visible on the ragdoll replacement.&lt;/li&gt; &#xA; &lt;li&gt;Dying at the company may make the dead individual respawn without a model, but it may also return at a later point in time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Unknown issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And a special thanks to mina, linkoid, notnotnotswipez, naelstrof and everybody else who has been a huge help.&lt;/p&gt;</summary>
  </entry>
</feed>