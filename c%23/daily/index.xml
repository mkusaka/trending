<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-06T01:23:50Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chenxuuu/llcom</title>
    <updated>2024-03-06T01:23:50Z</updated>
    <id>tag:github.com,2024-03-06:/chenxuuu/llcom</id>
    <link href="https://github.com/chenxuuu/llcom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🛠功能强大的串口工具。支持Lua自动化处理、串口调试、串口监听、串口曲线、TCP测试、MQTT测试、编码转换、乱码恢复等功能&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LLCOM&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/README_EN.md&#34;&gt;English readme click here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/llcom/llcom.ico&#34; alt=&#34;icon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/chenxuuu/llcom&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/telji5j8r0v5001c?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?label=license&amp;amp;message=Apache+2&amp;amp;color=blue&#34; alt=&#34;MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/archive/master.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/chenxuuu/llcom.svg?sanitize=true&#34; alt=&#34;code-size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;可运行lua脚本的高自由度串口调试工具。使用交流群：&lt;code&gt;931546484&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p&gt;从微软商店安装：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/www.microsoft.com/store/apps/9PMPB0233S0S?cid=storebadge&amp;amp;ocid=badge&#34;&gt;&lt;img src=&#34;https://developer.microsoft.com/store/badges/images/Chinese_Simplified_get-it-from-MS.png&#34; alt=&#34;Chinese badge&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;exe便携版：&lt;a href=&#34;https://llcom.papapoi.com/llcom.zip&#34;&gt;国内用户点我下载&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CI快照版：&lt;a href=&#34;https://ci.appveyor.com/project/chenxuuu/llcom/build/artifacts&#34;&gt;Appveyor Artifacts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;所有正式版本：&lt;a href=&#34;https://github.com/chenxuuu/llcom/releases/latest&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能列表&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;其他串口调试功能具有的功能&lt;/li&gt; &#xA; &lt;li&gt;收发日志清晰明了，可同时显示HEX值与实际字符串&lt;/li&gt; &#xA; &lt;li&gt;自动保存串口与Lua脚本日志，并附带时间&lt;/li&gt; &#xA; &lt;li&gt;串口断开后，如果再次连接，会自动重连&lt;/li&gt; &#xA; &lt;li&gt;发送的数据可被用户自定义的Lua脚本提前处理&lt;/li&gt; &#xA; &lt;li&gt;右侧快捷发送栏，快捷发送条目数量不限制&lt;/li&gt; &#xA; &lt;li&gt;右侧快捷发送栏，支持10页数据，互相独立&lt;/li&gt; &#xA; &lt;li&gt;可独立运行Lua脚本，并拥有定时器与协程任务特性（移植自&lt;a href=&#34;http://wiki.openluat.com/doc/luatFramework/&#34;&gt;合宙Luat Task架构&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;可选文字编码格式&lt;/li&gt; &#xA; &lt;li&gt;终端功能，直接敲键盘发送数据（包含ctrl+字母键）&lt;/li&gt; &#xA; &lt;li&gt;可单独隐藏发送数据&lt;/li&gt; &#xA; &lt;li&gt;集成TCP、UDP、SSL测试服务端/客户端功能，并且支持IPV6&lt;/li&gt; &#xA; &lt;li&gt;集成各种编码互转功能&lt;/li&gt; &#xA; &lt;li&gt;集成乱码恢复功能&lt;/li&gt; &#xA; &lt;li&gt;集成mqtt测试功能&lt;/li&gt; &#xA; &lt;li&gt;集成串口监听功能，可监听其他软件的串口通信数据&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/image/screen.png&#34; alt=&#34;screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/image/screen3.png&#34; alt=&#34;screen3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/image/screen2.jpg&#34; alt=&#34;screen2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特色功能示范&lt;/h2&gt; &#xA;&lt;h3&gt;使用Lua脚本提前处理待发送的数据&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;结尾加上换行回车&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return uartData..&#34;\r\n&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;发送16进制数据&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return uartData:fromHex()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此脚本可将形如&lt;code&gt;30313233&lt;/code&gt;发送数据，处理为&lt;code&gt;0123&lt;/code&gt;的结果&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;更多玩法等你发现&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;json = require(&#34;JSON&#34;)&#xA;t = uartData:split(&#34;,&#34;)&#xA;return json:encode({&#xA;    key1 = t[1],&#xA;    key2 = t[2],&#xA;    key3 = t[3],&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此脚本可将形如&lt;code&gt;a,b,c&lt;/code&gt;发送数据，处理为&lt;code&gt;{&#34;key1&#34;:&#34;a&#34;,&#34;key2&#34;:&#34;b&#34;,&#34;key3&#34;:&#34;c&#34;}&lt;/code&gt;的结果&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;此处理脚本，同样对右侧快捷发送区域有效。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;独立的Lua脚本自动处理串口收发&lt;/h3&gt; &#xA;&lt;p&gt;右侧的Lua脚本调试区域，可直接运行你写的串口测试脚本，如软件自带的：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;--注册串口接收函数&#xA;uartReceive = function (data)&#xA;    log.info(&#34;uartReceive&#34;,data)&#xA;    sys.publish(&#34;UART&#34;,data)--发布消息&#xA;end&#xA;&#xA;--新建任务，等待接收到消息再继续运行&#xA;sys.taskInit(function()&#xA;    while true do&#xA;        local _,udata = sys.waitUntil(&#34;UART&#34;)--等待消息&#xA;        log.info(&#34;task waitUntil&#34;,udata)&#xA;        local sendResult = apiSendUartData(&#34;ok!&#34;)--发送串口消息&#xA;        log.info(&#34;uart send&#34;,sendResult)&#xA;    end&#xA;end)&#xA;&#xA;--新建任务，每休眠1000ms继续一次&#xA;sys.taskInit(function()&#xA;    while true do&#xA;        sys.wait(1000)--等待1000ms&#xA;        log.info(&#34;task wait&#34;,os.time())&#xA;    end&#xA;end)&#xA;&#xA;--1000ms循环定时器&#xA;sys.timerLoopStart(log.info,1000,&#34;timer test&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;甚至你可以利用xlua框架的特性，调用C#接口完成任何你想做的事情&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;request = CS.System.Net.WebRequest.Create(&#34;http://example.com&#34;)&#xA;request.ContentType = &#34;text/html;charset=UTF-8&#34;;&#xA;request.Timeout = 5000;--超时时间&#xA;request.UserAgent = &#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36 Vivaldi/2.2.1388.37&#34;;&#xA;&#xA;response = request:GetResponse():GetResponseStream()&#xA;&#xA;myStreamReader = CS.System.IO.StreamReader(response, CS.System.Text.Encoding.UTF8);&#xA;&#xA;print(myStreamReader:ReadToEnd())--打印获取的body内容&#xA;&#xA;myStreamReader:Close()&#xA;response:Close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用此功能，你可以完成大部分的自动化串口调试操作。&lt;/p&gt; &#xA;&lt;h2&gt;接口文档&lt;/h2&gt; &#xA;&lt;p&gt;接口文档可以在&lt;a href=&#34;https://github.com/chenxuuu/llcom/raw/master/LuaApi.md&#34;&gt;这个页面&lt;/a&gt;查看&lt;/p&gt; &#xA;&lt;h2&gt;已知问题与待添加的功能（请大家反馈，谢谢！）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;bug：某些条件下（比如Air720重启），COM口消失后不会被释放，导致无法再次开启该COM口，只能重启软件（&lt;a href=&#34;https://github.com/dotnet/corefx/issues/39464&#34;&gt;.net 框架的bug，微软的人在看了&lt;/a&gt;）&lt;/del&gt;（已解决 #2f26e68）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开源&lt;/h2&gt; &#xA;&lt;p&gt;如果各位大佬不觉得麻烦的话，欢迎对本项目进行pr或直接重构。&lt;/p&gt; &#xA;&lt;p&gt;本项目在前期只是为了实现功能，代码相当零散，所以不太适合阅读我的源码进行学习，等我有空的时候会重构代码。&lt;/p&gt; &#xA;&lt;p&gt;本项目采用Apache 2.0协议，如有借用，请保留指向该项目的链接。&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/whc2001&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/16266909?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;whc2001&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/chenxuuu/llcom/commits?author=whc2001&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/issues?q=author%3Awhc2001&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.chenxublog.com/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/10357394?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chenxuuu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/#projectManagement-chenxuuu&#34; title=&#34;Project Management&#34;&gt;📆&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/neomissing&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/22003930?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;neomissing&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/#ideas-neomissing&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RYLF&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/28991981?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RuoYun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/chenxuuu/llcom/issues?q=author%3ARYLF&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.diycms.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13432299?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;王龙&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/#ideas-wanglong126&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/issues?q=author%3Awanglong126&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/commits?author=wanglong126&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linhongz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/49241612?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;linhongz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/#ideas-linhongz&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://github.com/chenxuuu/llcom/issues?q=author%3Alinhongz&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;htts://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;h2&gt;特别感谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=LLCOM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chenxuuu/llcom/master/image/icon-resharper.svg?sanitize=true&#34; alt=&#34;icon-resharper&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Stormrider31/Storm-Breakers</title>
    <updated>2024-03-06T01:23:50Z</updated>
    <id>tag:github.com,2024-03-06:/Stormrider31/Storm-Breakers</id>
    <link href="https://github.com/Stormrider31/Storm-Breakers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An epic ocean simulation (Unity 2021+ URP)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Welcome to the Storm Breakers repository !&lt;/p&gt; &#xA;&lt;p&gt;Storm Breakers is an Unity package to make epic ocean simulation, featuring a unique wave model, realistic breaking waves with visual, audio and physical effect, an extra-documented buoyancy physics adjustable for any gameplay, a scalable splash visual effect synchronized to procedural audio, and a dynamically textured water with realistic rendering.&lt;/p&gt; &#xA;&lt;p&gt;I developed it myself full time for a year and sold it in the Unity Asset Store as a self entrepreneur. Now this period of self entrepreneur is over and I’m back to a regular job, so I can’t maintain and update the asset anymore and this is why I open source the package !&lt;/p&gt; &#xA;&lt;p&gt;In the repository you’ll find the manual to start with. You’ll need Unity 2021+ with URP and VFX graph package installed to use Storm Breakers. For support you can contact me by email to &lt;a href=&#34;mailto:lysandre.creations@gmail.com&#34;&gt;lysandre.creations@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Online version of the manual : &lt;a href=&#34;https://drive.google.com/file/d/1A5XbOAvHWfiMiMZtGxcHmCtJ-5Q6_i2Q/view?usp=sharing&#34;&gt;https://drive.google.com/file/d/1A5XbOAvHWfiMiMZtGxcHmCtJ-5Q6_i2Q/view?usp=sharing&lt;/a&gt; Playable demo : &lt;a href=&#34;https://the-storm-rider.itch.io/storm-breakers-shoreline&#34;&gt;https://the-storm-rider.itch.io/storm-breakers-shoreline&lt;/a&gt; &lt;a href=&#34;https://the-storm-rider.itch.io/storm-breakers-demos&#34;&gt;https://the-storm-rider.itch.io/storm-breakers-demos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is under Creative Commons license, you are welcome to commit modification and improve Storm Breakers !&lt;/p&gt;</summary>
  </entry>
</feed>