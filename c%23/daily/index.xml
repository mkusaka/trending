<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-16T01:22:23Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Vietsens/hisnguonmo</title>
    <updated>2024-03-16T01:22:23Z</updated>
    <id>tag:github.com,2024-03-16:/Vietsens/hisnguonmo</id>
    <link href="https://github.com/Vietsens/hisnguonmo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;His nguồn mở&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hisnguonmo&lt;/h1&gt; &#xA;&lt;p&gt;His nguồn mở&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>oleg-shilo/wixsharp</title>
    <updated>2024-03-16T01:22:23Z</updated>
    <id>tag:github.com,2024-03-16:/oleg-shilo/wixsharp</id>
    <link href="https://github.com/oleg-shilo/wixsharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Framework for building a complete MSI or WiX source code by using script files written with C# syntax.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://stand-with-ukraine.pp.ua&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stand_with-ukraine-ffd700.svg?labelColor=0057b7&#34; alt=&#34;stand with Ukraine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/oleg-shilo/wixsharp&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/jruj9dmf2dwjn5p3?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/WixSharp/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/WixSharp.svg?style=flat-square&#34; alt=&#34;NuGet version (WixSharp)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cs-script.net/cs-script/Donation.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cs-script.net/cs-script/Donation.html&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://github.com/oleg-shilo/wixsharp/raw/master/Documentation/wiki_images/wixsharp_logo.png&#34; alt=&#34;&#34; style=&#34;float:right&#34;&gt; &#xA;&lt;h1&gt;Wix# (WixSharp) - managed interface for WiX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Framework for building a complete MSI or WiX source code by using script files written with the C# syntax.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;In July 2014 Wix# was migrated to CodePlex &lt;a href=&#34;https://wixsharp.codeplex.com/&#34;&gt;Wix#&lt;/a&gt; and re-released under MIT license. It was subsequently migrated from CodePlex to GitHub. You can still find old releases and some useful content from the past discussions on CodePlex.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Description&lt;/h2&gt; &#xA;&lt;p&gt;Wix# (WixSharp) is a member of the &lt;a href=&#34;https://www.cs-script.net/&#34;&gt;CS-Script&lt;/a&gt; family. Wix# allows building a complete MSI or WiX source code by executing script files written with the plain C# syntax. Wix# engine uses a C# class structure to mimic WiX entities and their relationships to produce a valid deployment model.&lt;/p&gt; &#xA;&lt;p&gt;Wix# answers many MSI authoring challenges. It solves the common MSI/WiX authoring limitations in a very elegant yet unorthodox way. Wix# follows the steps of other &lt;a href=&#34;http://en.wikipedia.org/wiki/Source-to-source_compiler&#34;&gt;transcompilers&lt;/a&gt; like Script#, CoffeeScript or GWT by using source code of a more manageable syntax (C# in this case) to produce the desired source code of a less manageable syntax (WiX). A &#34;more manageable syntax&#34; in this context means less verbose and more readable code, better compile-time error checking and availability of more advanced tools.&lt;/p&gt; &#xA;&lt;p&gt;Wix# also removes the necessity to develop MSI sub-modules (Custom Actions) in a completely different language (e.g. C++) by allowing both the components and behaviour to be defined in the same language (C#). This also allows homogeneous, simplified and more consistent source code structure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Overview&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are planning to use Wix# on Linux you may find this &lt;a href=&#34;https://github.com/oleg-shilo/wixsharp/wiki/WixSharp-on-Linux&#34;&gt;article&lt;/a&gt; useful. Please note that Wix# builds MSI deployment packages and while MSI can be built on Linux it cannot be run on Linux as MSI is a pure Windows technology.&lt;/p&gt; &#xA;&lt;p&gt;Please note that WixSharp NuGet packages are targeting .NET Framework only. This is because WiX does not support integration with any other .NET flavours but .NET Framework only.&lt;/p&gt; &#xA;&lt;p&gt;You can find the instructions on how to author MSI setups with WixSharp in the &lt;a href=&#34;https://github.com/oleg-shilo/wixsharp/wiki&#34;&gt;Documentation&lt;/a&gt; section. And this section only highlights some of the available features.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;You can use Visual Studio console application project and NuGet package as the starting point.&lt;/em&gt; &lt;img src=&#34;https://github.com/oleg-shilo/wixsharp/raw/master/Documentation/wiki_images/nuget.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Alternatively you can install &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/4e093ce7-be66-40ed-ab16-61a1186c530e&#34;&gt;&#34;WixSharp Project Templates&#34;&lt;/a&gt; Visual Studio extension. Read more about the Wix# VS templates &lt;a href=&#34;https://github.com/oleg-shilo/wixsharp/wiki/VS2013-%E2%80%93-2015-Templates&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Wix# allows a very simple and expressive deployment definition. This is an example of a simple Wix# script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;using System;&#xA;using WixSharp;&#xA; &#xA;class Script&#xA;{&#xA;    static public void Main(string[] args)&#xA;    {&#xA;        var project = new Project(&#34;MyProduct&#34;,&#xA;                          new Dir(@&#34;%ProgramFiles%\My Company\My Product&#34;,&#xA;                              new File(@&#34;Files\Docs\Manual.txt&#34;),&#xA;                              new File(@&#34;Files\Bin\MyApp.exe&#34;)));&#xA; &#xA;        project.GUID = new Guid(&#34;6f330b47-2577-43ad-9095-1861ba25889b&#34;);&#xA; &#xA;        Compiler.BuildMsi(project);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One of the most intriguing features of Wix# is the ability to define/implement managed Custom Actions directly in the script file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;using System;&#xA;using System.Windows.Forms;&#xA;using WixSharp;&#xA;using Microsoft.Deployment.WindowsInstaller;&#xA; &#xA;class Script&#xA;{&#xA;    static public void Main(string[] args)&#xA;    {&#xA;        var project = new Project(&#34;CustomActionTest&#34;,&#xA;                          new Dir(@&#34;%ProgramFiles%\My Company\My Product&#34;,&#xA;                              new DirFiles(@&#34;Release\Bin\*.*&#34;)),&#xA;                          new ManagedAction(CustomActions.MyAction));&#xA; &#xA;        BuildMsi(project);&#xA;    }&#xA;}&#xA; &#xA;public class CustomActions&#xA;{&#xA;    [CustomAction]&#xA;    public static ActionResult MyAction(Session session)&#xA;    {&#xA;        MessageBox.Show(&#34;Hello World!&#34;, &#34;Embedded Managed CA&#34;);&#xA;        session.Log(&#34;Begin MyAction Hello World&#34;);&#xA; &#xA;        return ActionResult.Success;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another important feature is the support for custom UI including WPF external UI: &lt;img src=&#34;https://github.com/oleg-shilo/wixsharp/raw/master/Documentation/wiki_images/wpf_ui.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/oleg-shilo/wixsharp/tree/master/Source/src/WixSharp.Samples/Wix%23%20Samples&#34;&gt;Samples Folder&lt;/a&gt; an extensive collection of Wix# samples covering the following development scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio integration including &lt;a href=&#34;https://www.nuget.org/packages/WixSharp/&#34;&gt;NuGet&lt;/a&gt; packages and VS2013/2015 &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/4e093ce7-be66-40ed-ab16-61a1186c530e&#34;&gt;project templates extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Installing file(s) into Program Files directory&lt;/li&gt; &#xA; &lt;li&gt;Changing installation directory&lt;/li&gt; &#xA; &lt;li&gt;Installing shortcuts to installed files&lt;/li&gt; &#xA; &lt;li&gt;Conditional installations&lt;/li&gt; &#xA; &lt;li&gt;Installing Windows service&lt;/li&gt; &#xA; &lt;li&gt;Installing IIS Web site&lt;/li&gt; &#xA; &lt;li&gt;Modifying app config file as a post-install action (Deferred actions)&lt;/li&gt; &#xA; &lt;li&gt;Installing &#34;Uninstall Product&#34; shortcut into &#34;Program Menu&#34; directory&lt;/li&gt; &#xA; &lt;li&gt;Installing registry key&lt;/li&gt; &#xA; &lt;li&gt;Showing custom licence file during the installation&lt;/li&gt; &#xA; &lt;li&gt;Launching installed application after/during the installation with Custom Action&lt;/li&gt; &#xA; &lt;li&gt;Executing VBScript Custom Action&lt;/li&gt; &#xA; &lt;li&gt;Executing Managed (C#) Custom Action&lt;/li&gt; &#xA; &lt;li&gt;Executing conditional actions&lt;/li&gt; &#xA; &lt;li&gt;Targeting x64 OSs&lt;/li&gt; &#xA; &lt;li&gt;Registering assembly in GAC&lt;/li&gt; &#xA; &lt;li&gt;File Type registration&lt;/li&gt; &#xA; &lt;li&gt;Setting/Reading MSI properties during the installation&lt;/li&gt; &#xA; &lt;li&gt;Run setup with no/minimal/full UI&lt;/li&gt; &#xA; &lt;li&gt;Localization&lt;/li&gt; &#xA; &lt;li&gt;Major Upgrade deployment&lt;/li&gt; &#xA; &lt;li&gt;Authoring and using MergeModules&lt;/li&gt; &#xA; &lt;li&gt;Pre-install registry search&lt;/li&gt; &#xA; &lt;li&gt;Customization of setup dialogs images&lt;/li&gt; &#xA; &lt;li&gt;Rebooting OS after the installation&lt;/li&gt; &#xA; &lt;li&gt;Building MSI with and without Visual Studio&lt;/li&gt; &#xA; &lt;li&gt;Simplified Managed bootstrapper for UI based deployments&lt;/li&gt; &#xA; &lt;li&gt;Simple Native bootstrapper&lt;/li&gt; &#xA; &lt;li&gt;Custom MSI dialogs&lt;/li&gt; &#xA; &lt;li&gt;Custom WinForms dialogs&lt;/li&gt; &#xA; &lt;li&gt;Custom external UI&lt;/li&gt; &#xA; &lt;li&gt;Console setup application&lt;/li&gt; &#xA; &lt;li&gt;WinForm setup application&lt;/li&gt; &#xA; &lt;li&gt;WPF setup application&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AIDotNet/fast-wiki</title>
    <updated>2024-03-16T01:22:23Z</updated>
    <id>tag:github.com,2024-03-16:/AIDotNet/fast-wiki</id>
    <link href="https://github.com/AIDotNet/fast-wiki" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于.NET8+React+LobeUI实现的企业级智能客服知识库&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FastWiki&lt;/h1&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;本项目是一个高性能、基于最新技术栈的知识库系统，专为大规模信息检索和智能搜索设计。利用微软Semantic Kernel进行深度学习和自然语言处理，结合.NET 8和MasaBlazor于react并存框架，后台采用MasaFramework，实现了一个高效、易用、可扩展的智能向量搜索平台。我们的目标是提供一个能够理解和处理复杂查询的智能搜索解决方案，帮助用户快速准确地获取所需信息。&lt;/p&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端框架：react+lobeUI+ts&lt;/li&gt; &#xA; &lt;li&gt;后端框架：MasaFramework 基于 .NET 8&lt;/li&gt; &#xA; &lt;li&gt;向量搜索引擎：使用 PostgreSQL 的向量插件，优化搜索性能&lt;/li&gt; &#xA; &lt;li&gt;深度学习与NLP：微软Semantic Kernel，提升搜索的语义理解能力&lt;/li&gt; &#xA; &lt;li&gt;许可证：Apache-2.0，鼓励社区贡献和使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;智能搜索：借助Semantic Kernel的深度学习和自然语言处理技术，能够理解复杂查询，提供精准的搜索结果。&lt;/li&gt; &#xA; &lt;li&gt;高性能：通过pgsql的向量插件优化向量搜索性能，确保即使在大数据量下也能快速响应。&lt;/li&gt; &#xA; &lt;li&gt;现代化前端：使用react+lobeUI前端框架，提供响应式设计和用户友好的界面。&lt;/li&gt; &#xA; &lt;li&gt;强大的后端：基于最新的.NET 8和MasaFramework，确保了代码的高效性和可维护性。&lt;/li&gt; &#xA; &lt;li&gt;开源和社区驱动：采用Apache-2.0许可证，鼓励开发者和企业使用和贡献。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;先决条件&lt;/h3&gt; &#xA;&lt;p&gt;确保你已经安装了.NET 8 SDK和PostgreSQL数据库，并且配置了相应的环境。&lt;/p&gt; &#xA;&lt;h3&gt;安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆仓库：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/239573049/fast-wiki.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;安装依赖项：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;在项目根目录下执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd src/Service/FastWiki.Service&#xA;dotnet restore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;数据库配置：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;确保你的PostgreSQL数据库运行正常，并且创建了必要的数据库。根据你的配置修改&lt;code&gt;appsettings.json&lt;/code&gt;中的数据库连接字符串。&lt;/p&gt; &#xA;&lt;h3&gt;运行&lt;/h3&gt; &#xA;&lt;p&gt;在项目根目录下执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这将启动后端服务。对于前端部分，请参照MasaBlazor文档，进行相应的构建和启动步骤。&lt;/p&gt; &#xA;&lt;p&gt;默认账号密码：admin Aa123456&lt;/p&gt; &#xA;&lt;h2&gt;环境变量参数&lt;/h2&gt; &#xA;&lt;p&gt;FastWikiService环境变量参数：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QUANTIZE_MAX_TASK：量化任务的最大并发数，默认为3&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_CHAT_ENDPOINT：OpenAI API的地址&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_CHAT_EMBEDDING_ENDPOINT： Embedding API的地址&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_CHAT_TOKEN： OpenAI API的Token&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_CHAT_MODEL： 对话的模型，默认gpt-3.5-turbo&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_EMBEDDING_MODEL： Embedding的模型，默认text-embedding-3-small&lt;/li&gt; &#xA; &lt;li&gt;OPENAI_EMBEDDING_TOKEN: Embedding的Token, 默认为空，为空则使用对话的Token&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术交流&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AIDotNet/fast-wiki/master/img/wechat.png&#34; alt=&#34;群聊二维码&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;贡献指南&lt;/h2&gt; &#xA;&lt;p&gt;我们欢迎所有形式的贡献，无论是功能请求、bug报告、代码提交、文档或是其他类型的支持。请参阅&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;了解如何开始。&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;本项目采用Apache-2.0许可证。详情请见&lt;a href=&#34;https://raw.githubusercontent.com/AIDotNet/fast-wiki/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;文件。&lt;/p&gt;</summary>
  </entry>
</feed>