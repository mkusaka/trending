<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-14T01:31:25Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kwsch/PKHeX.Mobile</title>
    <updated>2022-11-14T01:31:25Z</updated>
    <id>tag:github.com,2022-11-14:/kwsch/PKHeX.Mobile</id>
    <link href="https://github.com/kwsch/PKHeX.Mobile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pokémon save editor for Android and iOS!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PKHeX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pokémon core series save editor for Mobile Devices (Android/iOS), programmed in &lt;a href=&#34;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&#34;&gt;C#&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Supports the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save files (&#34;main&#34;, *.sav, *.dsv, *.dat, *.gci, *.bin)&lt;/li&gt; &#xA; &lt;li&gt;Individual Pokémon entity files (.pk*, *.ck3, *.xk3, *.bk4, *.pb7)&lt;/li&gt; &#xA; &lt;li&gt;Transferring from one generation to another, converting formats along the way.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Data is displayed in a view which can be edited and saved.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We do not support or condone cheating at the expense of others. Do not use significantly hacked Pokémon in battle or in trades with those who are unaware hacked Pokémon are in use.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;PKHeX.Mobile is a Xamarin Forms application which requires &lt;a href=&#34;https://docs.microsoft.com/en-us/xamarin/xamarin-forms/release-notes/4.0/4.0.0&#34;&gt;Xamarin Forms 4.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Customized Xamarin UI controls are provided by &lt;a href=&#34;https://www.syncfusion.com/products/communitylicense&#34;&gt;Syncfusion&lt;/a&gt; (community license).&lt;/p&gt; &#xA;&lt;p&gt;Android/iOS operating system version requirements TBD.&lt;/p&gt; &#xA;&lt;p&gt;Having trouble building the app? Be sure to hit Clean &amp;amp; Rebuild All before trying to deploy to your device.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;TBD&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Build-&amp;gt;Clean Solution, Build-&amp;gt;Rebuild All, Build-&amp;gt;Deploy&lt;/p&gt; &#xA;&lt;p&gt;On your device, manually grant the permissions required (storage, camera) so that files can be written &amp;amp; the QR scanning can be performed without issue.&lt;/p&gt; &#xA;&lt;p&gt;Once you have granted the app permissions, you can run it!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unity-Technologies/com.unity.demoteam.mesh-to-sdf</title>
    <updated>2022-11-14T01:31:25Z</updated>
    <id>tag:github.com,2022-11-14:/Unity-Technologies/com.unity.demoteam.mesh-to-sdf</id>
    <link href="https://github.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A light and fast real-time SDF generator, primarily for animated characters. The dynamic SDF can be used for all sorts of VFX. Also enables hair-to-character collisions in the new hair package.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Package: com.unity.demoteam.mesh-to-sdf&lt;/h1&gt; &#xA;&lt;p&gt;A real-time Signed Distance Field generator. Use a Mesh or a dynamically deforming SkinnedMesh as input to generate a 3D SDF texture every frame.&lt;/p&gt; &#xA;&lt;p&gt;The SDF can be used by the VFX Graph, the Hair system, and other effects relying on SDFs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf/main/Documentation~/images/mesh-to-sdf-skinned.png&#34; alt=&#34;mesh-to-sdf&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The generator is real-time - to achieve better performance, it sacrifices robustness and the ability to handle large meshes. Typical resolutions would be a 5-8k triangle mesh in a 16^3-64^3 voxel volume. If your mesh is much larger or messy (holes, spiky shapes, etc.), it&#39;s best to use a cleaner low-res proxy mesh instead. Note that the SDF generator shipping with the VFX Graph has a more robust handling of larger or messy meshes, but it&#39;s slower.&lt;/p&gt; &#xA;&lt;p&gt;The generator works by first splatting distances into voxels in a small area around each triangle, then using either a linear flood or jump flood to fill the rest of the volume.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Tested with a 32^3 voxel volume, 5k triangle mesh&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;jump flood: RTX3090 0.22ms&lt;/li&gt; &#xA; &lt;li&gt;linear flood, 8 iterations: RTX3090 0.18ms, RTX2080Super 0.21ms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unity 2021.2+ (mesh buffer access in compute shaders)&lt;/li&gt; &#xA; &lt;li&gt;Compute shaders supported on target platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-ui-giturl.html&#34;&gt;&lt;em&gt;Add package from git URL&lt;/em&gt;&lt;/a&gt; (in the Package Manager):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;https://github.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;Declare the package as a git dependency in &lt;code&gt;Packages/manifest.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;dependencies&#34;: {&#xA;    &#34;com.unity.demoteam.mesh-to-sdf&#34;: &#34;https://github.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf.git&#34;,&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf/main/Documentation~/index.md&#34;&gt;Quickstart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Samples included with the package show basic setup and are described in the doc above.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/robcupisz/mesh-to-sdf-examples&#34;&gt;mesh-to-sdf examples&lt;/a&gt; project is a vfx demo, with the dynamic SDFs driving VFX Graph effects and a raymarching shader:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6276154/201238758-cc87ec4a-a65a-4cb2-b3cc-123576ab9ea2.mov&#34;&gt;https://user-images.githubusercontent.com/6276154/201238758-cc87ec4a-a65a-4cb2-b3cc-123576ab9ea2.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;The core functionality of the generator (initial splatting of distances around mesh faces) uses the implementation from &lt;a href=&#34;https://github.com/GPUOpen-Effects/TressFX&#34;&gt;TressFX&lt;/a&gt; published by AMD under the MIT license. Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/com.unity.demoteam.mesh-to-sdf/main/Documentation~/index.md#limitations-and-known-issues&#34;&gt;Limitations and known issues&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>