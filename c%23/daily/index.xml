<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-07T01:32:10Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ErikEJ/EFCorePowerTools</title>
    <updated>2023-03-07T01:32:10Z</updated>
    <id>tag:github.com,2023-03-07:/ErikEJ/EFCorePowerTools</id>
    <link href="https://github.com/ErikEJ/EFCorePowerTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Entity Framework Core Power Tools - reverse engineering, migrations and model visualization for EF Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EF Core Power Tools&lt;/h1&gt; &#xA;&lt;p&gt;Reverse engineering, model visualization and migrations UI for EF Core. For Visual Studio 2022.&lt;/p&gt; &#xA;&lt;p&gt;Aims to lower the bar for getting started with EF Core, by providing GUI based assistance with reverse engineering of an existing database, creating migrations and visualizing your DbContext model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerTools&#34;&gt;&lt;img src=&#34;http://vsmarketplacebadge.apphb.com/version/ErikEJ.EFCorePowerTools.svg?sanitize=true&#34; alt=&#34;Visual Studio Marketplace&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerTools&amp;amp;ssr=false#review-details&#34;&gt;&lt;img src=&#34;http://vsmarketplacebadge.apphb.com/rating-short/ErikEJ.EFCorePowerTools.svg?sanitize=true&#34; alt=&#34;Visual Studio Marketplace Rating&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://vsmarketplacebadge.apphb.com/installs-short/ErikEJ.EFCorePowerTools.svg?sanitize=true&#34; alt=&#34;Visual Studio Marketplace Downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ErikEJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ErikEJ.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/wiki/Reverse-Engineering-Quick-Start&#34;&gt;Quick Start and 10 minute intro video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/uph-AGyOd8c&#34;&gt;Demo video - Introduction&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/uph-AGyOd8c&#34; title=&#34;Demo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/uph-AGyOd8c/2.jpg&#34; alt=&#34;Demo at .NET Conf&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/3-Izu_qLDqY&#34;&gt;Demo video - Advanced features&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/3-Izu_qLDqY&#34; title=&#34;Demo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/3-Izu_qLDqY/1.jpg&#34; alt=&#34;Demo at EF Core Community Standup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://erikej.github.io/EFCorePowerTools/index.html&#34;&gt;EF Core Power Tools presentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://erikej.github.io/SqlCeToolbox/&#34;&gt;My tools and utilities for embedded database development&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The tool and GitHub based support is free, but I would be very grateful for a &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerTools&amp;amp;ssr=false#review-details&#34;&gt;rating or review here&lt;/a&gt;, and I also appreciate &lt;a href=&#34;https://github.com/sponsors/ErikEJ&#34;&gt;sponsorships&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/wiki/Reverse-Engineering-Quick-Start&#34;&gt;Reverse Engineering Quick Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/wiki&#34;&gt;User guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/wiki/Release-notes&#34;&gt;Release notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Downloads/builds&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;.NET Framework 4.8 or later is required. For EF Core reverse engineering, .NET Core 3.1 or .NET 6.0 x64 runtime must be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest version of the Visual Studio extension from &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerTools&#34;&gt;Visual Studio MarketPlace&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or simply install from the Extensions dialog in Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;I have also published &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerPack&#34;&gt;EF Core Power Pack&lt;/a&gt; which includes some helpful DDEX providers as well as EF Core Power Tools.&lt;/p&gt; &#xA;&lt;h2&gt;Daily build&lt;/h2&gt; &#xA;&lt;p&gt;You can download the daily build from &lt;a href=&#34;https://www.vsixgallery.com/extension/f4c4712c-ceae-4803-8e52-0e2049d5de9f&#34;&gt;Open VSIX Gallery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ensure you always have the latest daily build (if you are brave) by installing &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=MadsKristensen.VSIXGallery-nightlybuilds&#34;&gt;this extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related NuGet packages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/raw/master/src/GUI/ErikEJ.EntityFrameworkCore.DgmlBuilder/readme.md&#34;&gt;ErikEJ.EntityFrameworkCore.DgmlBuilder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Adds the AsDgml() extension method to any derived DbContext. The method will create a DGML graph of your DbContext Model, that you can then view in the Visual Studio DGML viewer&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/raw/master/src/GUI/ErikEJ.EntityFrameworkCore.SqlServer.Dacpac/readme.md&#34;&gt;ErikEJ.EntityFrameworkCore.SqlServer.Dacpac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reverse engineer a SQL Server .dacpac with the EF Core tooling&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/raw/master/src/GUI/ErikEJ.EntityFrameworkCore.SqlServer.SqlQuery/readme.md&#34;&gt;ErikEJ.EntityFrameworkCore.SqlServer.SqlQuery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Materialize abritary classes and scalar values from EF Core using raw SQL&lt;/p&gt; &#xA;&lt;h1&gt;How do I contribute&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter a bug or have a feature request, please use the &lt;a href=&#34;https://github.com/ErikEJ/EFCorePowerTools/issues/new&#34;&gt;Issue Tracker&lt;/a&gt;. The project is also open for pull requests following &lt;a href=&#34;https://github.com/dotnet/aspnetcore/raw/master/CONTRIBUTING.md#identifying-the-scale&#34;&gt;standard pull request guidelines&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building and debugging&lt;/h1&gt; &#xA;&lt;p&gt;To build and debug, run latest version of Visual Studio as Administrator with the &#34;Visual Studio extension development workload&#34; installed. Make EFCorePowerTools the startup project, and ensure your build configuration is Debug, AnyCPU.&lt;/p&gt; &#xA;&lt;h1&gt;Smoke testing changes to reverse engineering&lt;/h1&gt; &#xA;&lt;p&gt;You can smoke test changes to reverse engineering. Launch one of the efreveng console apps in the debugger using the name of a file in the TestFiles folder as parameter.&lt;/p&gt; &#xA;&lt;p&gt;In the ScaffoldingTester solution there are scripts to populate Northwind and Chinook databases with the required objects.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MrOkiDoki/BattleBit-Community-Server-API</title>
    <updated>2023-03-07T01:32:10Z</updated>
    <id>tag:github.com,2023-03-07:/MrOkiDoki/BattleBit-Community-Server-API</id>
    <link href="https://github.com/MrOkiDoki/BattleBit-Community-Server-API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The server/client for community servers API.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>vrm-c/UniVRM</title>
    <updated>2023-03-07T01:32:10Z</updated>
    <id>tag:github.com,2023-03-07:/vrm-c/UniVRM</id>
    <link href="https://github.com/vrm-c/UniVRM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UniVRM is a gltf-based VRM format implementation for Unity. English is here https://vrm.dev/en/ . 日本語 はこちら https://vrm.dev/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniVRM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/vrm-c/UniVRM?color=green&#34; alt=&#34;GitHub latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vrm-c/UniVRM/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/vrm-c/UniVRM&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The standard implementation of 3D Avatar file format &lt;a href=&#34;https://vrm-consortium.org/en/&#34;&gt;VRM&lt;/a&gt; for &lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VRM is an extension of &lt;a href=&#34;https://www.khronos.org/gltf/&#34;&gt;glTF 2.0&lt;/a&gt;, so this library also support glTF 2.0 files.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;UniVRM supports the &lt;a href=&#34;https://github.com/vrm-c/vrm-specification&#34;&gt;VRM 1.0 specification&lt;/a&gt; and the &lt;a href=&#34;https://registry.khronos.org/glTF/&#34;&gt;glTF 2.0 specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM can import/export following supported file types at both runtime and editor.&lt;/p&gt; &#xA;&lt;h3&gt;Supported file types&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VRM 1.0 (.vrm)&lt;/li&gt; &#xA; &lt;li&gt;VRM 0.x (.vrm)&lt;/li&gt; &#xA; &lt;li&gt;glTF 2.0 (.glb | .gltf | .zip)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Import features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can import supported file types at both runtime and editor.&lt;/li&gt; &#xA; &lt;li&gt;Support for async/await importing at runtime.&lt;/li&gt; &#xA; &lt;li&gt;Support for Migration VRM 0.x files into VRM 1.0 files.&lt;/li&gt; &#xA; &lt;li&gt;Support for ScriptedImporter for VRM 1.0 and glTF 2.0.&lt;/li&gt; &#xA; &lt;li&gt;You can import glTF&#39;s PBR materials into Unity Built-in RP&#39;s Standard materials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Export features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can export supported file types at both runtime and editor.&lt;/li&gt; &#xA; &lt;li&gt;You can export Unity Built-in RP&#39;s Standard materials into glTF&#39;s PBR materials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Environments&lt;/h2&gt; &#xA;&lt;p&gt;The latest UniVRM supports Unity 2020.3 LTS or later.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM supports scripting backends both .NET and IL2CPP.&lt;/p&gt; &#xA;&lt;p&gt;UniVRM supports the following building target platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standalone (Windows/Mac/Linux)&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;WebGL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The other platforms maybe work but they are not tested.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/vrm-c/UniVRM?color=green&#34; alt=&#34;GitHub latest release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can install UniVRM using the UnityPackage or the UPM Package.&lt;/p&gt; &#xA;&lt;h3&gt;UnityPackage&lt;/h3&gt; &#xA;&lt;p&gt;From the &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;latest release&lt;/a&gt;, you can download the &lt;code&gt;.unitypackage&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For import/export VRM 1.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;VRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You can also download sample projects as &lt;strong&gt;VRM_Samples-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export VRM 0.x &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;UniVRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You can also download sample projects as &lt;strong&gt;UniVRM_Samples-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export glTF 2.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can download &lt;strong&gt;VRM-0.XXX.X-YYYY.unitypackage&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UPM Package&lt;/h3&gt; &#xA;&lt;p&gt;From the &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/latest&#34;&gt;latest release&lt;/a&gt;, you can find UPM package urls.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For import/export VRM 1.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrm&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export VRM 0.x &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.univrm&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For import/export glTF 2.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to install all of the following UPM packages: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.vrmshaders&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;com.vrmc.gltf&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can install these UPM packages via &lt;code&gt;Package Manager&lt;/code&gt; -&amp;gt; &lt;code&gt;+&lt;/code&gt; -&amp;gt; &lt;code&gt;Add package from git URL...&lt;/code&gt; in UnityEditor.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vrm.dev/en/vrm/index.html&#34;&gt;https://vrm.dev/en/vrm/index.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For developers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vrm-c.github.io/UniVRM/en/&#34;&gt;https://vrm-c.github.io/UniVRM/en/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vrm-c/UniVRM/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>