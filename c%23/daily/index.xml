<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-10T01:27:44Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>digitalinnovationone/trilha-net-fundamentos-desafio</title>
    <updated>2024-01-10T01:27:44Z</updated>
    <id>tag:github.com,2024-01-10:/digitalinnovationone/trilha-net-fundamentos-desafio</id>
    <link href="https://github.com/digitalinnovationone/trilha-net-fundamentos-desafio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Desafio de projeto .NET Fundamentos - DIO&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DIO - Trilha .NET - Fundamentos&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.dio.me&#34;&gt;www.dio.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Desafio de projeto&lt;/h2&gt; &#xA;&lt;p&gt;Para este desafio, você precisará usar seus conhecimentos adquiridos no módulo de fundamentos, da trilha .NET da DIO.&lt;/p&gt; &#xA;&lt;h2&gt;Contexto&lt;/h2&gt; &#xA;&lt;p&gt;Você foi contratado para construir um sistema para um estacionamento, que será usado para gerenciar os veículos estacionados e realizar suas operações, como por exemplo adicionar um veículo, remover um veículo (e exibir o valor cobrado durante o período) e listar os veículos.&lt;/p&gt; &#xA;&lt;h2&gt;Proposta&lt;/h2&gt; &#xA;&lt;p&gt;Você precisará construir uma classe chamada &#34;Estacionamento&#34;, conforme o diagrama abaixo: &lt;img src=&#34;https://raw.githubusercontent.com/digitalinnovationone/trilha-net-fundamentos-desafio/main/diagrama_classe_estacionamento.png&#34; alt=&#34;Diagrama de classe estacionamento&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A classe contém três variáveis, sendo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;precoInicial&lt;/strong&gt;: Tipo decimal. É o preço cobrado para deixar seu veículo estacionado.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;precoPorHora&lt;/strong&gt;: Tipo decimal. É o preço por hora que o veículo permanecer estacionado.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;veiculos&lt;/strong&gt;: É uma lista de string, representando uma coleção de veículos estacionados. Contém apenas a placa do veículo.&lt;/p&gt; &#xA;&lt;p&gt;A classe contém três métodos, sendo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AdicionarVeiculo&lt;/strong&gt;: Método responsável por receber uma placa digitada pelo usuário e guardar na variável &lt;strong&gt;veiculos&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;RemoverVeiculo&lt;/strong&gt;: Método responsável por verificar se um determinado veículo está estacionado, e caso positivo, irá pedir a quantidade de horas que ele permaneceu no estacionamento. Após isso, realiza o seguinte cálculo: &lt;strong&gt;precoInicial&lt;/strong&gt; * &lt;strong&gt;precoPorHora&lt;/strong&gt;, exibindo para o usuário.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ListarVeiculos&lt;/strong&gt;: Lista todos os veículos presentes atualmente no estacionamento. Caso não haja nenhum, exibir a mensagem &#34;Não há veículos estacionados&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Por último, deverá ser feito um menu interativo com as seguintes ações implementadas:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cadastrar veículo&lt;/li&gt; &#xA; &lt;li&gt;Remover veículo&lt;/li&gt; &#xA; &lt;li&gt;Listar veículos&lt;/li&gt; &#xA; &lt;li&gt;Encerrar&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Solução&lt;/h2&gt; &#xA;&lt;p&gt;O código está pela metade, e você deverá dar continuidade obedecendo as regras descritas acima, para que no final, tenhamos um programa funcional. Procure pela palavra comentada &#34;TODO&#34; no código, em seguida, implemente conforme as regras acima.&lt;/p&gt;</summary>
  </entry>
</feed>