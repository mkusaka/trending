<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-18T01:25:40Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bbradson/Performance-Fish</title>
    <updated>2024-04-18T01:25:40Z</updated>
    <id>tag:github.com,2024-04-18:/bbradson/Performance-Fish</id>
    <link href="https://github.com/bbradson/Performance-Fish" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Performance Mod for RimWorld&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Performance Fish&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bbradson/Performance-Fish/main/About/Preview.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Performance Mod for Rimworld.&lt;br&gt; Requires &lt;a href=&#34;https://github.com/Zetrith/Prepatcher&#34;&gt;Prepatcher&lt;/a&gt; and &lt;a href=&#34;https://github.com/bbradson/Fishery&#34;&gt;Fishery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Performance Fish attempts to improve overall framerates and tick times by patching various methods for improved efficiency, while keeping functionality identical. Designed to be used alongside other performance mods, like RocketMan, and intended to be compatible with very large modlists. Most patches become more impactful as the game progresses further into the lategame.&lt;/p&gt; &#xA;&lt;p&gt;A settings menu includes short descriptions for every patch, and each of them can be freely toggled in there. They get entirely unpatched in a disabled state, immediately. Nothing is stored in savefiles of specific game-sessions, ensuring that no errors get thrown when removing this mod.&lt;br&gt; Special patches exist to add new entries and features to Dub&#39;s Performance Analyzer, including a right-click function allowing to profile overrides of functions.&lt;/p&gt; &#xA;&lt;p&gt;Almost all mods, including Combat Extended, Multiplayer, Vanilla Expanded, RocketMan and Performance Optimizer, are compatible.&lt;/p&gt; &#xA;&lt;p&gt;RimThreaded, RimWorld Rick, Oskar Obnoxious, No Laggy Beds and Better GC are currently marked as incompatible.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under &lt;a href=&#34;https://tldrlegal.com/license/mozilla-public-license-2.0-(mpl-2)&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leap71/PicoGK</title>
    <updated>2024-04-18T01:25:40Z</updated>
    <id>tag:github.com,2024-04-18:/leap71/PicoGK</id>
    <link href="https://github.com/leap71/PicoGK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PicoGK is a compact and robust geometry kernel for Computational Engineering&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leap71/PicoGK/main/Documentation/images/PicoGK.jpg&#34; alt=&#34;PicoGK&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Welcome to PicoGK&lt;/h1&gt; &#xA;&lt;p&gt;PicoGK (&#34;peacock&#34;) is a compact, robust, and fast geometry kernel for Computational Engineering.&lt;/p&gt; &#xA;&lt;p&gt;PicoGK was developed by &lt;a href=&#34;https://github.com/LinKayser&#34;&gt;Lin Kayser&lt;/a&gt;, and is maintained by &lt;a href=&#34;https://raw.githubusercontent.com/leap71/PicoGK/main/www.leap71.com&#34;&gt;LEAP 71&lt;/a&gt;. PicoGK is open-sourced under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please visit &lt;a href=&#34;https://PicoGK.org&#34;&gt;https://PicoGK.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We believe that &lt;a href=&#34;https://leap71.com/computationalengineering/&#34;&gt;Computational Engineering&lt;/a&gt; will profoundly change the way we design physical objects in the years to come. But it needs a neutral, transparent and free and open-source platform in order to be adopted widely.&lt;/p&gt; &#xA;&lt;p&gt;By developing and maintaining PicoGK, we hope to make a contribution to accelerate the progress of invention.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;To get started with PicoGK, please jump over to the &lt;a href=&#34;https://raw.githubusercontent.com/leap71/PicoGK/main/Documentation/README.md&#34;&gt;documentation&lt;/a&gt;&lt;/strong&gt; and &lt;a href=&#34;https://github.com/leap71/PicoGK/releases&#34;&gt;install the latest PicoGK release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To understand what can be done with PicoGK, what other modules we have, we recommend checking out the &lt;a href=&#34;https://github.com/leap71&#34;&gt;LEAP 71 Github Overview Page&lt;/a&gt; â€” this page also has pointers to articles about the fundamentals of Computational Engineering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leap71/PicoGK/main/Documentation/images/9CF66413-8BA1-4E18-9BA7-F5254235B44A.jpeg&#34; alt=&#34;9CF66413-8BA1-4E18-9BA7-F5254235B44A&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;On the shoulders of giants&lt;/h2&gt; &#xA;&lt;p&gt;We are indebted to other Open-Source projects, without which writing PicoGK would have been an impossible task. Most notably we use the Academy Software Foundation&#39;s &lt;a href=&#34;https://www.openvdb.org/&#34;&gt;OpenVDB library&lt;/a&gt;, which provides the majority of the functionality neccessary to build a robust geometry kernel. In many ways, PicoGK is a thin-yet-powerful layer of functionality on top of OpenVDB.&lt;/p&gt; &#xA;&lt;p&gt;The PicoGK viewer relies on the &lt;a href=&#34;https://www.glfw.org/&#34;&gt;GLFW library&lt;/a&gt;, for simple cross-platform OpenGL user interface functionality.&lt;/p&gt; &#xA;&lt;h2&gt;PicoGK structure&lt;/h2&gt; &#xA;&lt;p&gt;PicoGK consists of two modules.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;PicoGK&lt;/strong&gt;, which is the C#-based project that you have currently open, and&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;PicoGKRuntime&lt;/strong&gt;, a C++-based runtime library, which is in a &lt;a href=&#34;https://github.com/leap71/PicoGKRuntime&#34;&gt;separate GitHub project&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;PicoGK&lt;/strong&gt; provides an framework based on &lt;a href=&#34;https://dotnet.microsoft.com/en-us/languages/csharp&#34;&gt;Microsoft&#39;s open-source C# language&lt;/a&gt;. It depends on PicoGKRuntime for the heavy lifting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PicoGKRuntime&lt;/strong&gt; exposes a minimal &#34;extern C&#34; interface, which can be implemented by other geometry kernels, including commercial ones.&lt;/p&gt; &#xA;&lt;p&gt;We encourage other software vendors to support the PicoGKRuntime API and release commercial alternatives to our open-source project. PicoGK was developed as a reliable common interface that you, the engineer, can always rely on as a free and universally available platform to fall back on when creating your own intellectual property.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PicoGK&lt;/strong&gt;, the C# code, which you have open right now, provides rich functionality based on the PicoGKRuntime interface. It makes it as simple as possible to build computational geometry.&lt;/p&gt; &#xA;&lt;p&gt;You will, however, ususally not use PicoGK directly to build Computational Engineering Models. We encourage you to look at our other open-source project, the &lt;a href=&#34;https://github.com/leap71/LEAP71_ShapeKernel&#34;&gt;LEAP 71 ShapeKernel&lt;/a&gt;, which was written by Josefine Lissner, and forms the basis of all objects we create at LEAP 71 and uses PicoGK as the foundation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/leap71/PicoGK/main/Documentation/README.md&#34;&gt;Please head over to our documentation, for how to get started with PicoGK.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0xced/Chisel</title>
    <updated>2024-04-18T01:25:40Z</updated>
    <id>tag:github.com,2024-04-18:/0xced/Chisel</id>
    <link href="https://github.com/0xced/Chisel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remove unwanted dependencies from your dotnet projects&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/0xced/Chisel/main/resources/icon.svg?sanitize=true&#34; alt=&#34;Chisel icon&#34; width=&#34;64&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chisel&lt;/strong&gt; provides a way to remove unwanted dependencies from your dotnet projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Chisel/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Chisel.svg?label=NuGet&amp;amp;logo=NuGet&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/0xced/Chisel/actions/workflows/continuous-integration.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/0xced/Chisel/continuous-integration.yml?branch=main&amp;amp;label=Continuous%20Integration&amp;amp;logo=GitHub&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chisel was born because some database drivers can&#39;t resist taking dependencies on cloud libraries. The &lt;a href=&#34;https://www.nuget.org/packages/MongoDB.Driver&#34;&gt;MongoDB driver&lt;/a&gt; depends on the ASW SDK for authentication with Identity and Access Management (IAM) and &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.SqlClient&#34;&gt;Microsoft&#39;s SQL Server driver&lt;/a&gt; depends on the Azure SDK for authentication with the Microsoft identity platform (formerly Azure AD).&lt;/p&gt; &#xA;&lt;p&gt;Users have asked for separate NuGet packages for both MongoDB (&lt;a href=&#34;https://jira.mongodb.org/browse/CSHARP-4635&#34;&gt;issue #4635&lt;/a&gt;) and SqlClient (&lt;a href=&#34;https://github.com/dotnet/SqlClient/issues/1108&#34;&gt;issue #1108&lt;/a&gt;) but as of &lt;code&gt;MongoDB.Driver&lt;/code&gt; 2.24.0 and &lt;code&gt;Microsoft.Data.SqlClient&lt;/code&gt; 5.2.0 the cloud dependencies are unavoidable, even if MongoDB or SQL Server is used on premises (where cloud authentication is obviously not needed).&lt;/p&gt; &#xA;&lt;p&gt;Enter Chisel to remove those dependencies and save some precious megabytes.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Add the &lt;a href=&#34;https://www.nuget.org/packages/Chisel/&#34;&gt;Chisel&lt;/a&gt; NuGet package to your project using the NuGet Package Manager or run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Chisel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While Chisel&#39;s main purpose is removing unwanted dependencies from existing NuGet packages, it provides another great feature: a graph of your project&#39;s dependencies. After adding Chisel, a &lt;a href=&#34;https://mermaid.js.org&#34;&gt;Mermaid&lt;/a&gt; (or &lt;a href=&#34;https://graphviz.org&#34;&gt;Graphviz&lt;/a&gt;) graph is written in the intermediate output path (aka the &lt;code&gt;obj&lt;/code&gt; directory).&lt;/p&gt; &#xA;&lt;p&gt;For a project referencing &lt;code&gt;Hangfire.PostgreSql&lt;/code&gt; and &lt;code&gt;Npgsql.EntityFrameworkCore.PostgreSQL&lt;/code&gt; the graph would look like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;&#xA;classDef default fill:aquamarine,stroke:#009061,color:#333333&#xA;&#xA;Hangfire.Core --&amp;gt; Newtonsoft.Json&#xA;Hangfire.PostgreSql --&amp;gt; Dapper&#xA;Hangfire.PostgreSql --&amp;gt; Hangfire.Core&#xA;Hangfire.PostgreSql --&amp;gt; Npgsql&#xA;Microsoft.EntityFrameworkCore --&amp;gt; Microsoft.EntityFrameworkCore.Abstractions&#xA;Microsoft.EntityFrameworkCore --&amp;gt; Microsoft.Extensions.Caching.Memory&#xA;Microsoft.EntityFrameworkCore --&amp;gt; Microsoft.Extensions.Logging&#xA;Microsoft.EntityFrameworkCore.Relational --&amp;gt; Microsoft.EntityFrameworkCore&#xA;Microsoft.EntityFrameworkCore.Relational --&amp;gt; Microsoft.Extensions.Configuration.Abstractions&#xA;Microsoft.Extensions.Caching.Abstractions --&amp;gt; Microsoft.Extensions.Primitives&#xA;Microsoft.Extensions.Caching.Memory --&amp;gt; Microsoft.Extensions.Caching.Abstractions&#xA;Microsoft.Extensions.Caching.Memory --&amp;gt; Microsoft.Extensions.DependencyInjection.Abstractions&#xA;Microsoft.Extensions.Caching.Memory --&amp;gt; Microsoft.Extensions.Logging.Abstractions&#xA;Microsoft.Extensions.Caching.Memory --&amp;gt; Microsoft.Extensions.Options&#xA;Microsoft.Extensions.Caching.Memory --&amp;gt; Microsoft.Extensions.Primitives&#xA;Microsoft.Extensions.Configuration.Abstractions --&amp;gt; Microsoft.Extensions.Primitives&#xA;Microsoft.Extensions.DependencyInjection --&amp;gt; Microsoft.Extensions.DependencyInjection.Abstractions&#xA;Microsoft.Extensions.Logging --&amp;gt; Microsoft.Extensions.DependencyInjection&#xA;Microsoft.Extensions.Logging --&amp;gt; Microsoft.Extensions.Logging.Abstractions&#xA;Microsoft.Extensions.Logging --&amp;gt; Microsoft.Extensions.Options&#xA;Microsoft.Extensions.Logging.Abstractions --&amp;gt; Microsoft.Extensions.DependencyInjection.Abstractions&#xA;Microsoft.Extensions.Options --&amp;gt; Microsoft.Extensions.DependencyInjection.Abstractions&#xA;Microsoft.Extensions.Options --&amp;gt; Microsoft.Extensions.Primitives&#xA;Npgsql --&amp;gt; Microsoft.Extensions.Logging.Abstractions&#xA;Npgsql.EntityFrameworkCore.PostgreSQL --&amp;gt; Microsoft.EntityFrameworkCore&#xA;Npgsql.EntityFrameworkCore.PostgreSQL --&amp;gt; Microsoft.EntityFrameworkCore.Abstractions&#xA;Npgsql.EntityFrameworkCore.PostgreSQL --&amp;gt; Microsoft.EntityFrameworkCore.Relational&#xA;Npgsql.EntityFrameworkCore.PostgreSQL --&amp;gt; Npgsql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mermaid graphs can be used directly in &lt;a href=&#34;https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/&#34;&gt;markdown files on GitHub&lt;/a&gt; and are rendered as graphs, just like the one just above. Or they can also be edited, previewed and shared with the &lt;a href=&#34;https://mermaid.live/&#34;&gt;Mermaid live editor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Graphviz (DOT) files can be written instead by setting the &lt;code&gt;ChiselGraphName&lt;/code&gt; property to a name that ends with &lt;code&gt;.gv&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&#xA;  &amp;lt;ChiselGraphName&amp;gt;$(MSBuildProjectName).Chisel.gv&amp;lt;/ChiselGraphName&amp;gt;&#xA;&amp;lt;/PropertyGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Graphviz files can be visualized and shared online with &lt;a href=&#34;https://edotor.net&#34;&gt;Edotor&lt;/a&gt; or locally with the excellent &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=tintinweb.graphviz-interactive-preview&#34;&gt;Graphviz Interactive Preview&lt;/a&gt; extension for Visual Studio Code.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; While this technique has been sucessfully tested with the MongDB driver and the SQL Server driver, removing dependencies from a package might lead to exceptions at runtime. Make sure to properly test your application.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Removing the AWS SDK from &lt;code&gt;MongoDB.Driver&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;After adding the &lt;code&gt;Chisel&lt;/code&gt; package to your project, tell it to remove the &lt;code&gt;AWSSDK.SecurityToken&lt;/code&gt; dependency with the &lt;code&gt;ChiselPackage&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&#xA;  &amp;lt;ChiselPackage&amp;gt;AWSSDK.SecurityToken&amp;lt;/ChiselPackage&amp;gt;&#xA;&amp;lt;/PropertyGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specifying the &lt;em&gt;direct&lt;/em&gt; dependencies is enough. Looking at the produced graph confirms that Chisel figured out the transitive dependencies by itself (there&#39;s only &lt;code&gt;AWSSDK.Core&lt;/code&gt; in this scenario).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;&#xA;classDef default fill:aquamarine,stroke:#009061,color:#333333&#xA;classDef removed fill:lightcoral,stroke:#A42A2A&#xA;&#xA;AWSSDK.SecurityToken/3.7.100.14 --&amp;gt; AWSSDK.Core/3.7.100.14&#xA;DnsClient/1.6.1 --&amp;gt; Microsoft.Win32.Registry/5.0.0&#xA;Microsoft.Extensions.Logging.Abstractions/8.0.1 --&amp;gt; Microsoft.Extensions.DependencyInjection.Abstractions/8.0.1&#xA;Microsoft.Win32.Registry/5.0.0 --&amp;gt; System.Security.AccessControl/5.0.0&#xA;Microsoft.Win32.Registry/5.0.0 --&amp;gt; System.Security.Principal.Windows/5.0.0&#xA;MongoDB.Bson/2.24.0 --&amp;gt; System.Runtime.CompilerServices.Unsafe/6.0.0&#xA;MongoDB.Driver/2.24.0 --&amp;gt; Microsoft.Extensions.Logging.Abstractions/8.0.1&#xA;MongoDB.Driver/2.24.0 --&amp;gt; MongoDB.Bson/2.24.0&#xA;MongoDB.Driver/2.24.0 --&amp;gt; MongoDB.Driver.Core/2.24.0&#xA;MongoDB.Driver/2.24.0 --&amp;gt; MongoDB.Libmongocrypt/1.8.2&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; AWSSDK.SecurityToken/3.7.100.14&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; DnsClient/1.6.1&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; Microsoft.Extensions.Logging.Abstractions/8.0.1&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; MongoDB.Bson/2.24.0&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; MongoDB.Libmongocrypt/1.8.2&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; SharpCompress/0.30.1&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; Snappier/1.0.0&#xA;MongoDB.Driver.Core/2.24.0 --&amp;gt; ZstdSharp.Port/0.7.3&#xA;System.Security.AccessControl/5.0.0 --&amp;gt; System.Security.Principal.Windows/5.0.0&#xA;&#xA;class AWSSDK.Core/3.7.100.14 removed&#xA;class AWSSDK.SecurityToken/3.7.100.14 removed&#xA;class DnsClient/1.6.1 default&#xA;class Microsoft.Extensions.DependencyInjection.Abstractions/8.0.1 default&#xA;class Microsoft.Extensions.Logging.Abstractions/8.0.1 default&#xA;class Microsoft.Win32.Registry/5.0.0 default&#xA;class MongoDB.Bson/2.24.0 default&#xA;class MongoDB.Driver/2.24.0 default&#xA;class MongoDB.Driver.Core/2.24.0 default&#xA;class MongoDB.Libmongocrypt/1.8.2 default&#xA;class SharpCompress/0.30.1 default&#xA;class Snappier/1.0.0 default&#xA;class System.Runtime.CompilerServices.Unsafe/6.0.0 default&#xA;class System.Security.AccessControl/5.0.0 default&#xA;class System.Security.Principal.Windows/5.0.0 default&#xA;class ZstdSharp.Port/0.7.3 default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, both &lt;code&gt;AWSSDK.Core.dll&lt;/code&gt; and &lt;code&gt;AWSSDK.SecurityToken.dll&lt;/code&gt; have disappeared from the build output.&lt;/p&gt; &#xA;&lt;p&gt;As long as the &lt;a href=&#34;https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/authentication/#std-label-csharp-mongodb-aws&#34;&gt;MONGODB-AWS authentication mechanism&lt;/a&gt; is not used everything will work fine. See the &lt;code&gt;MongoDbSample&lt;/code&gt; project in the &lt;code&gt;samples&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Removing the Azure SDK from &lt;code&gt;Microsoft.Data.SqlClient&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Getting rid of the Azure/Microsoft Identity bits requires defining three packages to remove plus an additional trick. In the previous example, &lt;code&gt;&amp;lt;ChiselPackage&amp;gt;&lt;/code&gt; was used as an MSBuild property. Here, it&#39;s used as an MSBuild item (i.e. with the &lt;code&gt;Include&lt;/code&gt; attribute) to specify multiple packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;ItemGroup&amp;gt;&#xA;  &amp;lt;ChiselPackage Include=&#34;Azure.Identity&#34; /&amp;gt;&#xA;  &amp;lt;ChiselPackage Include=&#34;Microsoft.IdentityModel.JsonWebTokens&#34; /&amp;gt;&#xA;  &amp;lt;ChiselPackage Include=&#34;Microsoft.IdentityModel.Protocols.OpenIdConnect&#34; /&amp;gt;&#xA;&amp;lt;/ItemGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As with the MongoDB driver, specifying the three &lt;em&gt;direct&lt;/em&gt; dependencies is enough. We can see in the produced graph that the &lt;code&gt;Microsoft.Identity*&lt;/code&gt; libraries have many transitive dependencies which are also removed (in red).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;&#xA;classDef default fill:aquamarine,stroke:#009061,color:#333333&#xA;classDef project fill:skyblue,stroke:#05587C&#xA;classDef removed fill:lightcoral,stroke:#A42A2A&#xA;&#xA;Azure.Core --&amp;gt; Microsoft.Bcl.AsyncInterfaces&#xA;Azure.Core --&amp;gt; System.Diagnostics.DiagnosticSource&#xA;Azure.Core --&amp;gt; System.Memory.Data&#xA;Azure.Core --&amp;gt; System.Text.Encodings.Web&#xA;Azure.Core --&amp;gt; System.Text.Json&#xA;Azure.Identity --&amp;gt; Azure.Core&#xA;Azure.Identity --&amp;gt; Microsoft.Identity.Client&#xA;Azure.Identity --&amp;gt; Microsoft.Identity.Client.Extensions.Msal&#xA;Azure.Identity --&amp;gt; System.Security.Cryptography.ProtectedData&#xA;Azure.Identity --&amp;gt; System.Text.Json&#xA;Microsoft.Data.SqlClient --&amp;gt; Azure.Identity&#xA;Microsoft.Data.SqlClient --&amp;gt; Microsoft.Identity.Client&#xA;Microsoft.Data.SqlClient --&amp;gt; Microsoft.IdentityModel.JsonWebTokens&#xA;Microsoft.Data.SqlClient --&amp;gt; Microsoft.IdentityModel.Protocols.OpenIdConnect&#xA;Microsoft.Data.SqlClient --&amp;gt; Microsoft.SqlServer.Server&#xA;Microsoft.Data.SqlClient --&amp;gt; System.Configuration.ConfigurationManager&#xA;Microsoft.Data.SqlClient --&amp;gt; System.Runtime.Caching&#xA;Microsoft.Identity.Client.Extensions.Msal --&amp;gt; Microsoft.Identity.Client&#xA;Microsoft.Identity.Client.Extensions.Msal --&amp;gt; System.IO.FileSystem.AccessControl&#xA;Microsoft.Identity.Client.Extensions.Msal --&amp;gt; System.Security.Cryptography.ProtectedData&#xA;Microsoft.IdentityModel.JsonWebTokens --&amp;gt; Microsoft.IdentityModel.Tokens&#xA;Microsoft.IdentityModel.JsonWebTokens --&amp;gt; System.Text.Encodings.Web&#xA;Microsoft.IdentityModel.JsonWebTokens --&amp;gt; System.Text.Json&#xA;Microsoft.IdentityModel.Logging --&amp;gt; Microsoft.IdentityModel.Abstractions&#xA;Microsoft.IdentityModel.Protocols --&amp;gt; Microsoft.IdentityModel.Logging&#xA;Microsoft.IdentityModel.Protocols --&amp;gt; Microsoft.IdentityModel.Tokens&#xA;Microsoft.IdentityModel.Protocols.OpenIdConnect --&amp;gt; Microsoft.IdentityModel.Protocols&#xA;Microsoft.IdentityModel.Protocols.OpenIdConnect --&amp;gt; System.IdentityModel.Tokens.Jwt&#xA;Microsoft.IdentityModel.Tokens --&amp;gt; Microsoft.IdentityModel.Logging&#xA;Microsoft.IdentityModel.Tokens --&amp;gt; System.Security.Cryptography.Cng&#xA;System.Configuration.ConfigurationManager --&amp;gt; System.Diagnostics.EventLog&#xA;System.Configuration.ConfigurationManager --&amp;gt; System.Security.Cryptography.ProtectedData&#xA;System.Diagnostics.DiagnosticSource --&amp;gt; System.Runtime.CompilerServices.Unsafe&#xA;System.IdentityModel.Tokens.Jwt --&amp;gt; Microsoft.IdentityModel.JsonWebTokens&#xA;System.IdentityModel.Tokens.Jwt --&amp;gt; Microsoft.IdentityModel.Tokens&#xA;System.IO.FileSystem.AccessControl --&amp;gt; System.Security.AccessControl&#xA;System.IO.FileSystem.AccessControl --&amp;gt; System.Security.Principal.Windows&#xA;System.Memory.Data --&amp;gt; System.Text.Encodings.Web&#xA;System.Memory.Data --&amp;gt; System.Text.Json&#xA;System.Runtime.Caching --&amp;gt; System.Configuration.ConfigurationManager&#xA;System.Security.AccessControl --&amp;gt; System.Security.Principal.Windows&#xA;&#xA;class Azure.Core removed&#xA;class Azure.Identity removed&#xA;class Microsoft.Bcl.AsyncInterfaces removed&#xA;class Microsoft.Data.SqlClient default&#xA;class Microsoft.Identity.Client project&#xA;class Microsoft.Identity.Client.Extensions.Msal removed&#xA;class Microsoft.IdentityModel.Abstractions removed&#xA;class Microsoft.IdentityModel.JsonWebTokens removed&#xA;class Microsoft.IdentityModel.Logging removed&#xA;class Microsoft.IdentityModel.Protocols removed&#xA;class Microsoft.IdentityModel.Protocols.OpenIdConnect removed&#xA;class Microsoft.IdentityModel.Tokens removed&#xA;class Microsoft.SqlServer.Server default&#xA;class System.Configuration.ConfigurationManager default&#xA;class System.Diagnostics.DiagnosticSource removed&#xA;class System.Diagnostics.EventLog default&#xA;class System.IdentityModel.Tokens.Jwt removed&#xA;class System.IO.FileSystem.AccessControl removed&#xA;class System.Memory.Data removed&#xA;class System.Runtime.Caching default&#xA;class System.Runtime.CompilerServices.Unsafe removed&#xA;class System.Security.AccessControl removed&#xA;class System.Security.Cryptography.Cng removed&#xA;class System.Security.Cryptography.ProtectedData default&#xA;class System.Security.Principal.Windows removed&#xA;class System.Text.Encodings.Web removed&#xA;class System.Text.Json removed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice how &lt;code&gt;Microsoft.Identity.Client&lt;/code&gt; is in blue (meaning it&#39;s a project reference instead of a package reference). That&#39;s because the &lt;code&gt;Microsoft.Identity.Client&lt;/code&gt; package can&#39;t be easily removed, else the following exception would be thrown at runtime when opening a connection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;System.TypeInitializationException: The type initializer for &#39;Microsoft.Data.SqlClient.SqlAuthenticationProviderManager&#39; threw an exception.&#xA; ---&amp;gt; System.IO.FileNotFoundException: Could not load file or assembly &#39;Microsoft.Identity.Client, Version=4.56.0.0, Culture=neutral, PublicKeyToken=0a613f4dd989e8ae&#39;. The system cannot find the file specified.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But it&#39;s possible to workaround this problem! Since the &lt;code&gt;Microsoft.Identity.Client&lt;/code&gt; dll is required, we can create one with the absolute minimum required for the &lt;code&gt;SqlAuthenticationProviderManager&lt;/code&gt; class to be happy.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a project named &lt;code&gt;Microsoft.Identity.Client&lt;/code&gt; with the following content (also available in the &lt;code&gt;samples&lt;/code&gt; directory):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;Project Sdk=&#34;Microsoft.NET.Sdk&#34;&amp;gt;&#xA;&#xA;  &amp;lt;PropertyGroup&amp;gt;&#xA;    &amp;lt;TargetFramework&amp;gt;netstandard2.0&amp;lt;/TargetFramework&amp;gt;&#xA;    &amp;lt;DebugType&amp;gt;none&amp;lt;/DebugType&amp;gt;&#xA;    &amp;lt;Version&amp;gt;4.56.0&amp;lt;/Version&amp;gt;&#xA;    &amp;lt;SignAssembly&amp;gt;true&amp;lt;/SignAssembly&amp;gt;&#xA;    &amp;lt;AssemblyOriginatorKeyFile&amp;gt;$(BaseIntermediateOutputPath)MSAL.snk&amp;lt;/AssemblyOriginatorKeyFile&amp;gt;&#xA;  &amp;lt;/PropertyGroup&amp;gt;&#xA;&#xA;  &amp;lt;Target Name=&#34;DownloadMsalKey&#34; BeforeTargets=&#34;ResolveKeySource&#34; Condition=&#34;!Exists($(AssemblyOriginatorKeyFile))&#34;&amp;gt;&#xA;    &amp;lt;DownloadFile SourceUrl=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/raw/$(Version)/build/MSAL.snk&#34; DestinationFolder=&#34;$(BaseIntermediateOutputPath)&#34; /&amp;gt;&#xA;  &amp;lt;/Target&amp;gt;&#xA;&#xA;&amp;lt;/Project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add a single C# file with the following content:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;namespace Microsoft.Identity.Client&#xA;{&#xA;    public class DeviceCodeResult&#xA;    {&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Add a reference in your project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;ItemGroup&amp;gt;&#xA;  &amp;lt;ProjectReference Include=&#34;../Microsoft.Identity.Client/Microsoft.Identity.Client.csproj&#34; /&amp;gt;&#xA;&amp;lt;/ItemGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s enough for the dotnet build system to pick the &lt;strong&gt;project&lt;/strong&gt; reference instead of the &lt;strong&gt;package&lt;/strong&gt; reference of the same name, thus reducing the size of &lt;code&gt;Microsoft.Identity.Client.dll&lt;/code&gt; from 1 MB to 5 KB.&lt;/p&gt; &#xA;&lt;p&gt;On macOS, removing the Azure authentication libraries and its dependencies reduces the size of the dlls from 6 MB down to 2.8 MB. In other words, the Azure librarires are responsible fore more than 50% of the size of the &lt;code&gt;Microsoft.Data.SqlClient&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;%%{ init: { &#39;theme&#39;: &#39;base&#39;, &#39;themeVariables&#39;: { &#39;pie1&#39;: &#39;lightcoral&#39;, &#39;pie2&#39;: &#39;aquamarine&#39; } } }%%&#xA;pie title Microsoft.Data.SqlClient composition&#xA;  &#34;Azure/authentication libraries&#34; : 3.217&#xA;  &#34;SqlClient core libraries&#34; : 2.764&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Have a look at the &lt;code&gt;SqlClientSample&lt;/code&gt; project in the &lt;code&gt;samples&lt;/code&gt; directory for a concrete example.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;p&gt;Here are all the MSBuild properties and items supported by Chisel.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselEnabled&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;defaults to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to completely disable Chisel, set the &lt;code&gt;ChiselEnabled&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt;. This can be useful for building on the command line with &lt;code&gt;dotnet build -p:ChiselEnabled=false&lt;/code&gt; for example.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselGraphName&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;defaults to &lt;code&gt;$(MSBuildProjectName).Chisel.mermaid&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the name of the dependency graph file. A Mermaid file will be written if it ends with either &lt;code&gt;.mmd&lt;/code&gt; or &lt;code&gt;.mermaid&lt;/code&gt;, otherwise a Graphviz (DOT) file will be written. To completely disable the graph feature, use &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&#xA;  &amp;lt;ChiselGraphName&amp;gt;none&amp;lt;/ChiselGraphName&amp;gt;&#xA;&amp;lt;/PropertyGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the file name must not include a path separator.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselGraphAlias&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;no default value&lt;/p&gt; &#xA;&lt;p&gt;Setting the &lt;code&gt;ChiselGraphAlias&lt;/code&gt; property adds an alias (link) under the project. This is useful to see the graph directly into the IDE. A very good combination with the Rider &lt;a href=&#34;https://plugins.jetbrains.com/plugin/20146-mermaid&#34;&gt;Mermaid plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0xced/Chisel/main/resources/ChiselGraphAlias.png&#34; alt=&#34;Screenshot of the SqlClientSample project with the Mermaid graph&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&#xA;  &amp;lt;ChiselGraphAlias&amp;gt;Chisel\SqlClientSample.mermaid&amp;lt;/ChiselGraphAlias&amp;gt;&#xA;&amp;lt;/PropertyGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselGraphDirection&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;defaults to &lt;code&gt;LeftToRight&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This defines how the dependency graph is laid out. Possible values are &lt;code&gt;LeftToRight&lt;/code&gt; and &lt;code&gt;TopToBottom&lt;/code&gt;. Except for shallow graphs, left to right usually produces a more readable graph.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselGraphIncludeVersions&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;defaults to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Controls whether the dependency graph nodes are named &lt;code&gt;{package}&lt;/code&gt; or &lt;code&gt;{package}/{version}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example with &lt;code&gt;ChiselGraphIncludeVersions&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;Serilog.Sinks.File --&amp;gt; Serilog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with &lt;code&gt;ChiselGraphIncludeVersions&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;Serilog.Sinks.File/5.0.0 --&amp;gt; Serilog/2.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;ChiselGraphIgnore&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;On real projects, the dependency graph may become huge. Adding packages to &lt;code&gt;ChiselGraphIgnore&lt;/code&gt; will remove them from the dependency graph, thus reducing the overall size and increasing readability in other areas.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;ItemGroup&amp;gt;&#xA;  &amp;lt;ChiselGraphIgnore Include=&#34;Microsoft.Extensions.Configuration&#34; /&amp;gt;&#xA;  &amp;lt;ChiselGraphIgnore Include=&#34;Microsoft.Extensions.DependencyInjection&#34; /&amp;gt;&#xA;  &amp;lt;ChiselGraphIgnore Include=&#34;Microsoft.Extensions.Hosting&#34; /&amp;gt;&#xA;&amp;lt;/ItemGroup&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>