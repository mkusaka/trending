<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-29T01:35:35Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/Power-Fx</title>
    <updated>2022-07-29T01:35:35Z</updated>
    <id>tag:github.com,2022-07-29:/microsoft/Power-Fx</id>
    <link href="https://github.com/microsoft/Power-Fx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Power Fx low-code programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Power Fx&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/Power-Fx/main/docs/media/root/hello-world.png&#34; alt=&#34;simple formula using Notify to produce a &amp;quot;Hello, World!&amp;quot; message&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft Power Fx is a low-code general purpose programming language based on spreadsheet-like formulas. It is a strongly typed, declarative, and functional language, with imperative logic and state management available as needed.&lt;/p&gt; &#xA;&lt;p&gt;Power Fx started with Power Apps canvas apps and that is where &lt;a href=&#34;https://powerapps.microsoft.com/en-us/&#34;&gt;you can experience it now&lt;/a&gt;. We are in the process of extracting the language from that product so that we can use it in more Microsoft Power Platform products and make it available here for you to use. That&#39;s going to take some time and we will report on our progress here and on the &lt;a href=&#34;https://powerapps.microsoft.com/en-us/blog/&#34;&gt;Power Apps blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A start on the language documentation is &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/Power-Fx/main/docs/overview.md&#34;&gt;available in the docs folder&lt;/a&gt;. As with the implementation, it is being extracted from the Power Apps documentation and generalized and that too is going to take some time.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;For those new to Power-Fx, this video should answer many of your questions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube-nocookie.com/embed/ik6k89WNjuk&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/ik6k89WNjuk/0.jpg&#34; alt=&#34;Power-Fx — The low code programming language for everyone&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;   &lt;th&gt;Coverage Status&lt;/th&gt; &#xA;   &lt;th&gt;Test Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Main&lt;/td&gt; &#xA;   &lt;td&gt;0.2.* Preview Builds&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/FuseLabs/SDK_v4/_build/latest?definitionId=1410&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/FuseLabs/SDK_v4/_apis/build/status/PowerFx/PowerFx-signed?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coveralls.io/github/microsoft/Power-Fx?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/microsoft/Power-Fx/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fuselabs.visualstudio.com/SDK_v4/_build/latest?definitionId=1469&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://fuselabs.visualstudio.com/SDK_v4/_apis/build/status/PowerFx/PowerFx-PR?branchName=main&#34; alt=&#34;Tests Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Released Package&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.PowerFx.Core&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.PowerFx.Core/&#34;&gt;&lt;img src=&#34;https://buildstats.info/nuget/Microsoft.PowerFx.Core?includePreReleases=true&amp;amp;dWidth=70&#34; alt=&#34;BotBuilder Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.PowerFx.Core.Tests&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.PowerFx.Interpreter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.PowerFx.Interpreter/&#34;&gt;&lt;img src=&#34;https://buildstats.info/nuget/Microsoft.PowerFx.Interpreter?includePreReleases=true&amp;amp;dWidth=70&#34; alt=&#34;BotBuilder Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.PowerFx.Transport.Attributes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.PowerFx.Transport.Attributes/&#34;&gt;&lt;img src=&#34;https://buildstats.info/nuget/Microsoft.PowerFx.Transport.Attributes?includePreReleases=true&amp;amp;dWidth=70&#34; alt=&#34;BotBuilder Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Daily Builds&lt;/h2&gt; &#xA;&lt;p&gt;Daily builds of the Power Fx packages are published to Azure Artifacts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://dev.azure.com/ConversationalAI/BotFramework/_packaging?_a=feed&amp;amp;feed=SDK&#34;&gt;Azure Artifacts daily feed&lt;/a&gt; carries the most recent packages. To consume them, specify this package source: &lt;code&gt;https://pkgs.dev.azure.com/ConversationalAI/BotFramework/_packaging/SDK/nuget/v3/index.json&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For detailed instructions &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/Power-Fx/main/dailyBuilds.md&#34;&gt;visit this page&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;There are samples demonstrating how to consume Power Fx at: &lt;a href=&#34;https://github.com/microsoft/power-fx-host-samples&#34;&gt;https://github.com/microsoft/power-fx-host-samples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also see usage examples in the &lt;a href=&#34;https://github.com/microsoft/Power-Fx/tree/main/src/tests&#34;&gt;unit tests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dockersamples/example-voting-app</title>
    <updated>2022-07-29T01:35:35Z</updated>
    <id>tag:github.com,2022-07-29:/dockersamples/example-voting-app</id>
    <link href="https://github.com/dockersamples/example-voting-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Example Docker Compose app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Example Voting App&lt;/h1&gt; &#xA;&lt;p&gt;A simple distributed application running across multiple Docker containers.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt; for Mac or Windows. &lt;a href=&#34;https://docs.docker.com/compose&#34;&gt;Docker Compose&lt;/a&gt; will be automatically installed. On Linux, make sure you have the latest version of &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Linux Containers&lt;/h2&gt; &#xA;&lt;p&gt;The Linux stack uses Python, Node.js, .NET Core (or optionally Java), with Redis for messaging and Postgres for storage.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re using &lt;a href=&#34;https://store.docker.com/editions/community/docker-ce-desktop-windows&#34;&gt;Docker Desktop on Windows&lt;/a&gt;, you can run the Linux version by &lt;a href=&#34;https://docs.docker.com/docker-for-windows/#switch-between-windows-and-linux-containers&#34;&gt;switching to Linux containers&lt;/a&gt;, or run the Windows containers version.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run in this directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app will be running at &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;, and the results will be at &lt;a href=&#34;http://localhost:5001&#34;&gt;http://localhost:5001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternately, if you want to run it on a &lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;, first make sure you have a swarm. If you don&#39;t, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker swarm init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have your swarm, in this directory run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker stack deploy --compose-file docker-stack.yml vote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Windows Containers&lt;/h2&gt; &#xA;&lt;p&gt;An alternative version of the app uses Windows containers based on Nano Server. This stack runs on .NET Core, using &lt;a href=&#34;https://nats.io&#34;&gt;NATS&lt;/a&gt; for messaging and &lt;a href=&#34;https://github.com/pingcap/tidb&#34;&gt;TiDB&lt;/a&gt; for storage.&lt;/p&gt; &#xA;&lt;p&gt;You can build from source using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-windows.yml build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the app using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-windows.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or in a Windows swarm, run &lt;code&gt;docker stack deploy -c docker-stack-windows.yml vote&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The app will be running at &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;, and the results will be at &lt;a href=&#34;http://localhost:5001&#34;&gt;http://localhost:5001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run the app in Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;The folder k8s-specifications contains the yaml specifications of the Voting App&#39;s services.&lt;/p&gt; &#xA;&lt;p&gt;First create the vote namespace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl create namespace vote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following command to create the deployments and services objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl create -f k8s-specifications/&#xA;deployment &#34;db&#34; created&#xA;service &#34;db&#34; created&#xA;deployment &#34;redis&#34; created&#xA;service &#34;redis&#34; created&#xA;deployment &#34;result&#34; created&#xA;service &#34;result&#34; created&#xA;deployment &#34;vote&#34; created&#xA;service &#34;vote&#34; created&#xA;deployment &#34;worker&#34; created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The vote interface is then available on port 31000 on each host of the cluster, the result one is available on port 31001.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/architecture.png&#34; alt=&#34;Architecture diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A front-end web app in &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/vote&#34;&gt;Python&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/vote/dotnet&#34;&gt;ASP.NET Core&lt;/a&gt; which lets you vote between two options&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://hub.docker.com/_/redis/&#34;&gt;Redis&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/_/nats/&#34;&gt;NATS&lt;/a&gt; queue which collects new votes&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/worker/src/Worker&#34;&gt;.NET Core&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/worker/src/main&#34;&gt;Java&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/worker/dotnet&#34;&gt;.NET Core 2.1&lt;/a&gt; worker which consumes votes and stores them in…&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://hub.docker.com/_/postgres/&#34;&gt;Postgres&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/r/dockersamples/tidb/tags/&#34;&gt;TiDB&lt;/a&gt; database backed by a Docker volume&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/result&#34;&gt;Node.js&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/dockersamples/example-voting-app/master/result/dotnet&#34;&gt;ASP.NET Core SignalR&lt;/a&gt; webapp which shows the results of the voting in real time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;The voting application only accepts one vote per client. It does not register votes if a vote has already been submitted from a client.&lt;/p&gt; &#xA;&lt;p&gt;This isn&#39;t an example of a properly architected perfectly designed distributed app... it&#39;s just a simple example of the various types of pieces and languages you might see (queues, persistent data, etc), and how to deal with them in Docker at a basic level.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>miroslavpejic85/p2p</title>
    <updated>2022-07-29T01:35:35Z</updated>
    <id>tag:github.com,2022-07-29:/miroslavpejic85/p2p</id>
    <link href="https://github.com/miroslavpejic85/p2p" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🖥️ P2P Remote Desktop - Portable, No Configuration or Installation Needed.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/ico/p2p.ico&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;P2P Remote Desktop&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Remote Desktop P2P based - Portable, No Configuration or Installation Needed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile and Open &lt;code&gt;p2p.exe&lt;/code&gt; as admin in 2 different PC&#39;s.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/img/p2p-exe.png&#34; alt=&#34;p2p-exe&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;My Lan or Wan IP&lt;/code&gt; and communicate it to other peer and vice versa.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/img/p2p-connection.png&#34; alt=&#34;p2p-connection&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The 2 peers have now the 2 endpoint to connect to, so press on both &lt;code&gt;Connect&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The 2 peers now are able to &lt;code&gt;sent messages&lt;/code&gt; or take the &lt;code&gt;Remote Desktop Control&lt;/code&gt; between them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/img/p2p-remote-desktop.png&#34; alt=&#34;p2p-remote-desktop&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;It&#39;s use &lt;a href=&#34;https://en.wikipedia.org/wiki/UDP-based_Data_Transfer_Protocol&#34;&gt;UDT protocol&lt;/a&gt; and thanks to &lt;code&gt;rendezvous&lt;/code&gt; connection, it should be able to &lt;code&gt;bypass most firewall rules&lt;/code&gt;, like a small concept of &lt;code&gt;TeamViewer&lt;/code&gt; at 0 cost!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/img/p2p-logic.png&#34; alt=&#34;p2p-logic&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;The app doesn&#39;t have a &lt;code&gt;digital signature&lt;/code&gt; being an open source project, it may be detected as a &lt;code&gt;false positive&lt;/code&gt; by AVs. When you compile it from the source code, just add the project in the exception. Thank you for understanding.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and greatly appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miroslavpejic85/p2p/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?style=for-the-badge&amp;amp;logo=AdGuard&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/mirotalk/p2p-remote-desktop-portable&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>