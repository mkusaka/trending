<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T01:30:59Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DragoQCC/HardHatC2</title>
    <updated>2023-04-01T01:30:59Z</updated>
    <id>tag:github.com,2023-04-01:/DragoQCC/HardHatC2</id>
    <link href="https://github.com/DragoQCC/HardHatC2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A c# Command &amp; Control framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HardHat C2&lt;/h1&gt; &#xA;&lt;h2&gt;A cross-platform, collaborative, Command &amp;amp; Control framework written in C#, designed for red teaming and ease of use.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15575425/228551034-e07df233-63f6-41a2-8b94-6eb840859e82.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;HardHat is a multiplayer c# .NET-based command and control framework. Designed to aid in red team engagements and penetration testing. HardHat aims to improve the quality of life factors during engagements by providing an easy-to-use but still robust C2 framework.&lt;br&gt; It contains three primary components, an ASP.NET teamserver, a blazor .NET client, and c# based implants.&lt;/p&gt; &#xA;&lt;h1&gt;Release Tracking&lt;/h1&gt; &#xA;&lt;p&gt;Alpha Release - 3/29/23 NOTE: HardHat is in Alpha release; it will have bugs, missing features, and unexpected things will happen. Thank you for trying it, and please report back any issues or missing features so they can be addressed.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/npW2yy7JFK&#34;&gt;Discord&lt;/a&gt; Join the community to talk about HardHat C2, Programming, Red teaming and general cyber security things The discord community is also a great way to request help, submit new features, stay up to date on the latest additions, and submit bugs.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Teamserver &amp;amp; Client&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Per-operator accounts with account tiers to allow customized access control and features, including view-only guest modes, team-lead opsec approval(WIP), and admin accounts for general operation management.&lt;/li&gt; &#xA; &lt;li&gt;Managers (Listeners)&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Payload Generation (Exe, Dll, shellcode, PowerShell command)&lt;/li&gt; &#xA; &lt;li&gt;Creation &amp;amp; editing of C2 profiles on the fly in the client&lt;/li&gt; &#xA; &lt;li&gt;Customization of payload generation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sleep time/jitter&lt;/li&gt; &#xA;   &lt;li&gt;kill date&lt;/li&gt; &#xA;   &lt;li&gt;working hours&lt;/li&gt; &#xA;   &lt;li&gt;type (Exe, Dll, Shellcode, ps command)&lt;/li&gt; &#xA;   &lt;li&gt;Included commands(WIP)&lt;/li&gt; &#xA;   &lt;li&gt;option to run confuser&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;File upload &amp;amp; Downloads&lt;/li&gt; &#xA; &lt;li&gt;Graph View&lt;/li&gt; &#xA; &lt;li&gt;File Browser GUI&lt;/li&gt; &#xA; &lt;li&gt;Event Log&lt;/li&gt; &#xA; &lt;li&gt;JSON logging for events &amp;amp; tasks&lt;/li&gt; &#xA; &lt;li&gt;Loot tracking (Creds, downloads)&lt;/li&gt; &#xA; &lt;li&gt;IOC tracing&lt;/li&gt; &#xA; &lt;li&gt;Pivot proxies (SOCKS 4a, Port forwards)&lt;/li&gt; &#xA; &lt;li&gt;Cred store&lt;/li&gt; &#xA; &lt;li&gt;Autocomplete command history&lt;/li&gt; &#xA; &lt;li&gt;Detailed help command&lt;/li&gt; &#xA; &lt;li&gt;Interactive bash terminal command if the client is on linux or powershell on windows, this allows automatic parsing and logging of terminal commands like proxychains&lt;/li&gt; &#xA; &lt;li&gt;Persistent database storage of teamserver items (User accounts, Managers, Engineers, Events, tasks, creds, downloads, uploads, etc. )&lt;/li&gt; &#xA; &lt;li&gt;Recon Entity Tracking (track info about users/devices, random metadata as needed)&lt;/li&gt; &#xA; &lt;li&gt;Shared files for some commands (see teamserver page for details)&lt;/li&gt; &#xA; &lt;li&gt;tab-based interact window for command issuing&lt;/li&gt; &#xA; &lt;li&gt;table-based output option for some commands like ls, ps, etc.&lt;/li&gt; &#xA; &lt;li&gt;Auto parsing of output from seatbelt to create &#34;recon entities&#34; and fill entries to reference back to later easily&lt;/li&gt; &#xA; &lt;li&gt;Dark and Light ðŸ¤® theme&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15575425/228551170-cd455c24-3541-47ec-ad85-dcb84ce64075.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/15575425/228551467-750a5a3a-dcff-4290-968e-7b18598e74b6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Engineers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;c# .net framework implant for windows devices, currently only CLR/.NET 4 support&lt;/li&gt; &#xA; &lt;li&gt;atm only one implant, but looking to add others&lt;/li&gt; &#xA; &lt;li&gt;It can be generated as EXE, DLL, shellcode, or PowerShell stager&lt;/li&gt; &#xA; &lt;li&gt;Rc4 encryption of payload memory &amp;amp; heap when sleeping (Exe / DLL only)&lt;/li&gt; &#xA; &lt;li&gt;AES encryption of all network communication&lt;/li&gt; &#xA; &lt;li&gt;ConfuserEx integration for obfuscation&lt;/li&gt; &#xA; &lt;li&gt;HTTP, HTTPS, TCP, SMB communication &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;TCP &amp;amp; SMB can work P2P in a bind or reverse setups&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Unique per implant key generated at compile time&lt;/li&gt; &#xA; &lt;li&gt;multiple callback URI&#39;s depending on the C2 profile&lt;/li&gt; &#xA; &lt;li&gt;P/Invoke &amp;amp; D/Invoke integration for windows API calls&lt;/li&gt; &#xA; &lt;li&gt;SOCKS 4a support&lt;/li&gt; &#xA; &lt;li&gt;Reverse Port Forward &amp;amp; Port Forwards&lt;/li&gt; &#xA; &lt;li&gt;All commands run as async cancellable jobs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Option to run commands sync if desired&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Inline assembly execution &amp;amp; inline shellcode execution&lt;/li&gt; &#xA; &lt;li&gt;DLL Injection&lt;/li&gt; &#xA; &lt;li&gt;Execute assembly &amp;amp; Mimikatz integration&lt;/li&gt; &#xA; &lt;li&gt;Mimikatz is not built into the implant but is pushed when specific commands are issued&lt;/li&gt; &#xA; &lt;li&gt;Various localhost &amp;amp; network enumeration tools&lt;/li&gt; &#xA; &lt;li&gt;Token manipulation commands &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Steal Token Mask(WIP)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Lateral Movement Commands&lt;/li&gt; &#xA; &lt;li&gt;Jump (psexec, wmi, wmi-ps, winrm, dcom)&lt;/li&gt; &#xA; &lt;li&gt;Remote Execution (WIP)&lt;/li&gt; &#xA; &lt;li&gt;AMSI &amp;amp; ETW Patching&lt;/li&gt; &#xA; &lt;li&gt;Unmanaged Powershell&lt;/li&gt; &#xA; &lt;li&gt;Script Store (can load multiple scripts at once if needed)&lt;/li&gt; &#xA; &lt;li&gt;Spawn &amp;amp; Inject &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Spawn-to is configurable&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;run, shell &amp;amp; execute &lt;img src=&#34;https://user-images.githubusercontent.com/15575425/228551103-0f1fe1f5-9b2d-42f9-a22d-f929f17b3b93.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;documentation can be found at &lt;a href=&#34;https://docs.hardhat-c2.net/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation of the &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;.net 7 SDK&lt;/a&gt; from Microsoft&lt;/li&gt; &#xA; &lt;li&gt;Once installed, the teamserver and client are started with dotnet run&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Teamserver&lt;/h3&gt; &#xA;&lt;p&gt;To configure the team server&#39;s starting address (where clients will connect), edit the HardHatC2\TeamServer\Properties\LaunchSettings.json changing the &#34;applicationUrl&#34;: &#34;&lt;a href=&#34;https://127.0.0.1:5000&#34;&gt;https://127.0.0.1:5000&lt;/a&gt;&#34; to the desired location and port. start the teamserver with dotnet run from its top-level folder ../HrdHatC2/Teamserver/&lt;/p&gt; &#xA;&lt;h3&gt;HardHat Client&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When starting the client to set the target teamserver location, include it in the command line dotnet run &lt;a href=&#34;https://127.0.0.1:5000&#34;&gt;https://127.0.0.1:5000&lt;/a&gt; for example&lt;/li&gt; &#xA; &lt;li&gt;open a web browser and navigate to &lt;a href=&#34;https://localhost:7096/&#34;&gt;https://localhost:7096/&lt;/a&gt; if this works, you should see the login page&lt;/li&gt; &#xA; &lt;li&gt;Log in with the HardHat_Admin user (Password is printed on first TeamServer startup)&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the settings page &amp;amp; create a new user if successful, a message should appear, then you may log in with that account to access the full client&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Contributions &amp;amp; Bug Reports&lt;/h1&gt; &#xA;&lt;p&gt;Code contributions are welcome feel free to submit feature requests, pull requests or send me your ideas on discord.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mixandjam/ThePathless-Gameplay</title>
    <updated>2023-04-01T01:30:59Z</updated>
    <id>tag:github.com,2023-04-01:/mixandjam/ThePathless-Gameplay</id>
    <link href="https://github.com/mixandjam/ThePathless-Gameplay" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Recreating the basic gameplay from The Pathless&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;400px&#34; src=&#34;http://mixandjam.com/wp-content/uploads/2019/11/git.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;The Pathless Basic Gameplay | Mix and Jam&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;900px&#34; src=&#34;http://mixandjam.com/wp-content/uploads/2023/03/path.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;This is the official respository for the episode &lt;b&gt;#31&lt;/b&gt; of the &lt;a href=&#34;https://www.youtube.com/c/MixAndJam&#34;&gt;Mix and Jam Youtube Channel&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unity ver. 2022.2 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the project&lt;/h3&gt; &#xA;&lt;p&gt;After cloning or downloading the repository, open the root project folder in unity and press the Play button.&lt;/p&gt; &#xA;&lt;p&gt;You can see a running demo of the project in &lt;a href=&#34;https://youtu.be/xzFsbQEqFdg&#34;&gt;this video&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Built With&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dotween.demigiant.com/&#34;&gt;DOTween&lt;/a&gt; - DOTween is a fast, efficient, fully type-safe object-oriented animation engine for Unity, optimized for C# users, free and open-source, with tons of advanced features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Game Development&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AndrÃ© Cardoso&lt;/strong&gt; - &lt;a href=&#34;https://github.com/cardosoandre&#34;&gt;Github&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://twitter.com/andre_mc&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/andre_mc.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SlimeNull/OpenGptChat</title>
    <updated>2023-04-01T01:30:59Z</updated>
    <id>tag:github.com,2023-04-01:/SlimeNull/OpenGptChat</id>
    <link href="https://github.com/SlimeNull/OpenGptChat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple OpenAI Chat completion GUI&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;OpenGptChat&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SlimeNull/OpenGptChat/main/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/EN-US-blue&#34; alt=&#34;EN-US&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/SlimeNull/OpenGptChat/main/README_ZH-HANS.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%B8%AD%E6%96%87-%E7%AE%80%E4%BD%93-red&#34; alt=&#34;ZH-HANS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/SlimeNull/OpenGptChat/main/README_ZH-HANT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%B8%AD%E6%96%87-%E7%B9%81%E4%BD%93-red&#34; alt=&#34;ZH-HANT&#34;&gt;&lt;/a&gt; / &lt;a href=&#34;https://github.com/SlimeNull/OpenGptChat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/SlimeNull/OpenGptChat&#34; alt=&#34;release date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SlimeNull/OpenGptChat/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/SlimeNull/OpenGptChat?style=flat&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;A simple chat client based on &lt;a href=&#34;https://platform.openai.com/docs/guides/chat&#34;&gt;Open AI Chat completion API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SlimeNull/OpenGptChat/main/assets/preview3.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Real-time response. By using HTTP Stream, the program can display every character on the screen as soon as the server responds, without waiting for the entire response to complete.&lt;/li&gt; &#xA; &lt;li&gt;Multiple sessions. You can create multiple sessions on the left side of the program, each with its own chat content, which are independent of each other and can be switched freely.&lt;/li&gt; &#xA; &lt;li&gt;Multiple languages. When you first start the program, it will detect your system language. If it is a supported language, the program will automatically switch to the corresponding language. You can also manually switch in the settings.&lt;/li&gt; &#xA; &lt;li&gt;Hot updates. The configuration information you change in the settings page will take effect immediately in the program, without the need to save the configuration and restart the program, including the &#34;always on top&#34; option and language settings.&lt;/li&gt; &#xA; &lt;li&gt;Hotkeys. As a convenient tool, OpenGptChat provides hotkeys for hiding and restoring. They are respectively &#34;Ctrl+H&#34; and &#34;Ctrl+Shift+H&#34;. You can invoke the program anywhere.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest version in &#34;Releases&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Create a folder and move &#34;OpenGptChat.exe&#34; into it.&lt;/li&gt; &#xA; &lt;li&gt;Open &#34;OpenGptChat.exe&#34;, it will automatically generate the configuration and database files in the same location.&lt;/li&gt; &#xA; &lt;li&gt;Go to the settings page and set your own &#34;API Key&#34;, or you can also customize the &#34;System Message&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Sit back, relax, and enjoy the fun brought by &#34;OpenGptChat&#34;!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tip: You can use &#34;Ctrl + Enter&#34; to send messages in the text box.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;What is API Key&lt;/h2&gt; &#xA;&lt;p&gt;The OpenAI API uses API keys for authentication. Visit your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;API Keys&lt;/a&gt; page to retrieve the API key you&#39;ll use in your requests. Usually, the API key is a secret and do not share it with others.&lt;/p&gt; &#xA;&lt;h2&gt;What you can learn?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Learn &lt;strong&gt;Binding&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt;, &lt;strong&gt;Template&lt;/strong&gt;, &lt;strong&gt;Style&lt;/strong&gt;, &lt;strong&gt;Trigger&lt;/strong&gt;, &lt;strong&gt;Animation&lt;/strong&gt; in WPF.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;LiteDB&lt;/code&gt; to save data without SQL.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;CommunityToolkit.Mvvm&lt;/code&gt; in WPF project.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;Microsoft.Extensions.Hosting&lt;/code&gt; for DependencyInjection, Configuration.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;Hardcodet.NotifyIcon.Wpf&lt;/code&gt; to create a notify icon in WPF applciation.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;Microsoft.Xaml.Behaviors.Wpf&lt;/code&gt; to add more operation functions in WPF application.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;EleCho.GlobalHotkey.Windows.Wpf&lt;/code&gt; to handle global hotkey in WPF applciation.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>