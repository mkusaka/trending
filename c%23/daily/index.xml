<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-02T01:32:08Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>5cover/WinClean</title>
    <updated>2022-12-02T01:32:08Z</updated>
    <id>tag:github.com,2022-12-02:/5cover/WinClean</id>
    <link href="https://github.com/5cover/WinClean" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows optimization and debloating utility.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.codefactor.io/repository/github/5cover/winclean&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/5cover/winclean/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/5cover/WinClean/master/README.fr.md&#34;&gt;Français&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;WinClean&lt;/h1&gt; &#xA;&lt;p&gt;Windows performance optimization and debloating utility, accessible to the average user as well as system administrators.&lt;/p&gt; &#xA;&lt;p&gt;Improve Windows performance in a few clicks, as Windows becomes more and more resource-intensive and unoptimized.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/5cover/WinClean/img/MainWindow.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;del&gt;Yet Another PC Optimizer Scam&lt;/del&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;em&gt;Batch&lt;/em&gt;, &lt;em&gt;PowerShell&lt;/em&gt;, and &lt;em&gt;Registry Editor&lt;/em&gt; scripts directly from the GUI.&lt;/li&gt; &#xA; &lt;li&gt;Add custom scripts to futher clean the system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Specs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET 6&lt;/li&gt; &#xA; &lt;li&gt;WPF&lt;/li&gt; &#xA; &lt;li&gt;Created with Visual Studio 2022&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to request new features and report bugs.&lt;/p&gt; &#xA;&lt;p&gt;You can also submit scripts to add in the Issues section.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kwsch/pkNX</title>
    <updated>2022-12-02T01:32:08Z</updated>
    <id>tag:github.com,2022-12-02:/kwsch/pkNX</id>
    <link href="https://github.com/kwsch/pkNX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pokémon (Nintendo Switch) ROM Editor &amp; Randomizer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pkNX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;pkNX: A package of Pokémon (Nintendo Switch) ROM Editing Tools, programmed in &lt;a href=&#34;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&#34;&gt;C#&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Similar to &lt;a href=&#34;https://github.com/kwsch/pk3ds&#34;&gt;pk3DS&lt;/a&gt; for the Nintendo 3DS, pkNX provides an editing environment to manipulate game binary assets such as stats, learnsets, trainers, and more!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/lSYWN4m.png&#34; alt=&#34;Main Window&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest version &lt;a href=&#34;https://dev.azure.com/project-pokemon/pkNX/_build?view=runs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(click on latest run at the top, then click Artifacts - published, and download the folder) &lt;img src=&#34;https://user-images.githubusercontent.com/60387522/193828925-2c5f3142-f8cb-4daa-af49-9663919ec9bf.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/60387522/193829124-02db4dfa-2e61-421c-a5fd-129552df8aca.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: To run the app it is required to have the &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/6.0&#34;&gt;.NET Desktop Runtime&lt;/a&gt; installed&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/60387522/197339943-630c03c6-1dde-4528-8e78-75e0e0152749.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Supports the following games:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Let&#39;s Go, Pikachu! / Let&#39;s Go, Eevee!&lt;/li&gt; &#xA; &lt;li&gt;Sword / Shield&lt;/li&gt; &#xA; &lt;li&gt;Legends Arceus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Sword and Shield, pkNX operates under the assumption that your dumped ROM includes the Ver. 1.3.0 patch.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Editors can be launched from the program&#39;s main window after opening a dumped &amp;amp; unpacked ROM.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To lessen read/write lag, data is only saved when the user cleanly quits the program.&lt;/li&gt; &#xA; &lt;li&gt;Edited files do not overwrite the original dumped file; instead, they are redirected to a &#34;patch folder&#34; for easy use with layeredFS.&lt;/li&gt; &#xA; &lt;li&gt;When the program requests to read a set of files, it will first check to see if an edited version exists, and if not, falls back to the original dump file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With custom firmware, layeredFS functionality will selectively redirect file loading to files that are present in the patch folder, removing the need to rebuild a custom ROM.&lt;/p&gt; &#xA;&lt;p&gt;pkNX also provides some utility to extract from supported container types, e.g. &lt;code&gt;gfpak&lt;/code&gt;. Simply drag &amp;amp; drop a container (or many) into the main window, and pkNX will unpack all files to a new folder.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;pkNX is a Windows Forms application which requires &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/6.0&#34;&gt;.NET 6&lt;/a&gt; for Windows.&lt;/p&gt; &#xA;&lt;p&gt;The executable can be built with any compiler that supports C# 10.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;pkNX&#39;s shiny sprite collection is taken from &lt;a href=&#34;https://github.com/msikma/pokesprite&#34;&gt;pokesprite&lt;/a&gt;, which is licensed under &lt;a href=&#34;https://github.com/msikma/pokesprite/raw/master/LICENSE&#34;&gt;the MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jfrog/project-examples</title>
    <updated>2022-12-02T01:32:08Z</updated>
    <id>tag:github.com,2022-12-02:/jfrog/project-examples</id>
    <link href="https://github.com/jfrog/project-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Small projects in universal build ecosystems to configure CI and Artifactory&lt;/p&gt;&lt;hr&gt;&lt;p&gt;The JFrog Platform is an enterprise-ready automated end-to-end DevOps platform, ideal for managing all of your software releases from code to production. This repository includes sample projects, which can help you get started using the JFrog Platform.&lt;/p&gt;</summary>
  </entry>
</feed>