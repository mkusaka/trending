<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-15T01:35:29Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>restsharp/RestSharp</title>
    <updated>2022-10-15T01:35:29Z</updated>
    <id>tag:github.com,2022-10-15:/restsharp/RestSharp</id>
    <link href="https://github.com/restsharp/RestSharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple REST and HTTP API Client for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RestSharp - Simple .NET REST Client&lt;/h1&gt; &#xA;&lt;p&gt;RestSharp is a lightweight HTTP client library. It&#39;s a wrapper around &lt;code&gt;HttpClient&lt;/code&gt;, not a full-fledged client on its own.&lt;/p&gt; &#xA;&lt;p&gt;What RestSharp adds to &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default parameters of any kind, not just headers&lt;/li&gt; &#xA; &lt;li&gt;Add a parameter of any kind to requests, like query, URL segment, header, cookie, or body&lt;/li&gt; &#xA; &lt;li&gt;Multiple ways to add a request body, including JSON, XML, and form data&lt;/li&gt; &#xA; &lt;li&gt;Built-in serialization and deserilization of JSON and XML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RestSharp vNext&lt;/h2&gt; &#xA;&lt;p&gt;Finally, RestSharp has moved to &lt;code&gt;HttpClient&lt;/code&gt;. We also deprecated the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SimpleJson in favour of &lt;code&gt;System.Text.Json.JsonSerialzer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IRestClient&lt;/code&gt;, &lt;code&gt;IRestRequest&lt;/code&gt;, and &lt;code&gt;IRestResponse&lt;/code&gt; in favour of implementing classes&lt;/li&gt; &#xA; &lt;li&gt;Everything &lt;code&gt;Http&lt;/code&gt; and &lt;code&gt;IHttp&lt;/code&gt; as those are just wrappers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most of the client and some of the request options are now in &lt;code&gt;RestClientOptions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://restsharp.dev/v107&#34;&gt;v107+ docs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;span&gt;ðŸ’¥&lt;/span&gt; Interfaces rage!&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Before you start to rage in public about interfaces that are useful for unit-testing HTTP calls,&lt;br&gt;please read &lt;a href=&#34;https://restsharp.dev/v107/#mocking&#34;&gt;this page&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Builds and Packages&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/restsharp/RestSharp/actions?query=workflow%3A%22Build+and+deploy%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/restsharp/RestSharp/Build%20and%20deploy&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Nuget&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;downloads&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/RestSharp&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;preview&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/RestSharp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;RestSharp is an open-source project with a single maintainer. Do not expect your issue to be resolved unless it concerns a large group of RestSharp users. The best way to resolve your issue is to fix it yourself. Fork the repository and submit a pull request. You can also motivate the maintainer by sponsoring this project.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute&lt;/h3&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/restsharp/RestSharp/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on the process for reporting issues and submitting pull requests.&lt;/p&gt; &#xA;&lt;h3&gt;Get help&lt;/h3&gt; &#xA;&lt;p&gt;Read the docs: &lt;a href=&#34;https://restsharp.dev&#34;&gt;Official Site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ask a question on StackOverflow with the tag &lt;code&gt;restsharp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find RestSharp on Twitter: &lt;a href=&#34;https://twitter.com/RestSharp&#34;&gt;@RestSharp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;.NET Foundation&lt;/h3&gt; &#xA;&lt;p&gt;This project is supported by the &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/restsharp/RestSharp/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/RestSharp/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/RestSharp&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/RestSharp/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/RestSharp/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/RestSharp/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/RestSharp/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License: Apache License 2.0&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>LibreHardwareMonitor/LibreHardwareMonitor</title>
    <updated>2022-10-15T01:35:29Z</updated>
    <id>tag:github.com,2022-10-15:/LibreHardwareMonitor/LibreHardwareMonitor</id>
    <link href="https://github.com/LibreHardwareMonitor/LibreHardwareMonitor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Libre Hardware Monitor, home of the fork of Open Hardware Monitor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LibreHardwareMonitor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/LibreHardwareMonitor/LibreHardwareMonitor&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/LibreHardwareMonitorLib/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/LibreHardwareMonitorLib&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/LibreHardwareMonitorLib/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/LibreHardwareMonitorLib?label=nuget-pre&#34; alt=&#34;Nuget (with prereleases)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/LibreHardwareMonitorLib/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/LibreHardwareMonitorLib?label=nuget-downloads&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Libre Hardware Monitor, a fork of Open Hardware Monitor, is free software that can monitor the temperature sensors, fan speeds, voltages, load and clock speeds of your computer.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s included?&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;.NET&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitor&lt;/strong&gt; &lt;br&gt; Windows Forms based application that presents all data in a graphical interface&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.7.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&#34;&gt;&lt;img src=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitorLib&lt;/strong&gt; &lt;br&gt; Library that allows you to use all features in your own application&lt;/td&gt; &#xA;   &lt;td&gt;.NET Framework 4.7.2 and .NET 6.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&#34;&gt;&lt;img src=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What can it do?&lt;/h2&gt; &#xA;&lt;p&gt;You can read information from devices such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Motherboards&lt;/li&gt; &#xA; &lt;li&gt;Intel and AMD processors&lt;/li&gt; &#xA; &lt;li&gt;NVIDIA and AMD graphics cards&lt;/li&gt; &#xA; &lt;li&gt;HDD, SSD and NVMe hard drives&lt;/li&gt; &#xA; &lt;li&gt;Network cards&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Where can I download it?&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest release &lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Nightly builds&lt;/h3&gt; &#xA;&lt;p&gt;If you have a &lt;strong&gt;GitHub&lt;/strong&gt; account, you can download nightly builds &lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&#34;&gt;here&lt;/a&gt;. Otherwise, you can download the &lt;em&gt;latest&lt;/em&gt; nightly build &lt;a href=&#34;https://nightly.link/LibreHardwareMonitor/LibreHardwareMonitor/workflows/master/master/LibreHardwareMonitor-net472.zip&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How can I help improve it?&lt;/h2&gt; &#xA;&lt;p&gt;The LibreHardwareMonitor team welcomes feedback and contributions!&lt;br&gt; You can check if it works properly on your motherboard. For many manufacturers, the way of reading data differs a bit, so if you notice any inaccuracies, please send us a pull request. If you have any suggestions or improvements, don&#39;t hesitate to create an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Developer information&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Integrate the library in own application&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;a href=&#34;https://www.nuget.org/packages/LibreHardwareMonitorLib/&#34;&gt;LibreHardwareMonitorLib&lt;/a&gt; NuGet package to your application.&lt;/li&gt; &#xA; &lt;li&gt;Use the sample code below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sample code&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public class UpdateVisitor : IVisitor&#xA;{&#xA;    public void VisitComputer(IComputer computer)&#xA;    {&#xA;        computer.Traverse(this);&#xA;    }&#xA;    public void VisitHardware(IHardware hardware)&#xA;    {&#xA;        hardware.Update();&#xA;        foreach (IHardware subHardware in hardware.SubHardware) subHardware.Accept(this);&#xA;    }&#xA;    public void VisitSensor(ISensor sensor) { }&#xA;    public void VisitParameter(IParameter parameter) { }&#xA;}&#xA;&#xA;public void Monitor()&#xA;{&#xA;    Computer computer = new Computer&#xA;    {&#xA;        IsCpuEnabled = true,&#xA;        IsGpuEnabled = true,&#xA;        IsMemoryEnabled = true,&#xA;        IsMotherboardEnabled = true,&#xA;        IsControllerEnabled = true,&#xA;        IsNetworkEnabled = true,&#xA;        IsStorageEnabled = true&#xA;    };&#xA;&#xA;    computer.Open();&#xA;    computer.Accept(new UpdateVisitor());&#xA;&#xA;    foreach (IHardware hardware in computer.Hardware)&#xA;    {&#xA;        Console.WriteLine(&#34;Hardware: {0}&#34;, hardware.Name);&#xA;        &#xA;        foreach (IHardware subhardware in hardware.SubHardware)&#xA;        {&#xA;            Console.WriteLine(&#34;\tSubhardware: {0}&#34;, subhardware.Name);&#xA;            &#xA;            foreach (ISensor sensor in subhardware.Sensors)&#xA;            {&#xA;                Console.WriteLine(&#34;\t\tSensor: {0}, value: {1}&#34;, sensor.Name, sensor.Value);&#xA;            }&#xA;        }&#xA;&#xA;        foreach (ISensor sensor in hardware.Sensors)&#xA;        {&#xA;            Console.WriteLine(&#34;\tSensor: {0}, value: {1}&#34;, sensor.Name, sensor.Value);&#xA;        }&#xA;    }&#xA;    &#xA;    computer.Close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LibreHardwareMonitor is free and open source software licensed under MPL 2.0. You can use it in private and commercial projects. Keep in mind that you must include a copy of the license in your project.&lt;/p&gt;</summary>
  </entry>
</feed>