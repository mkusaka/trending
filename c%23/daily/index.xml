<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-09T01:31:33Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>p-org/P</title>
    <updated>2023-01-09T01:31:33Z</updated>
    <id>tag:github.com,2023-01-09:/p-org/P</id>
    <link href="https://github.com/p-org/P" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The P programming language.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/p-org/P/master/Icon/icon.png&#34; width=&#34;20%&#34;&gt; &#xA; &lt;h2&gt;Formal Modeling and Analysis of Distributed (Event-Driven) Systems &lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/P/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/p.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/p-org/P/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/p-org/P/workflows/CI%20on%20Windows/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action (CI on Windows)&#34;&gt; &lt;img src=&#34;https://github.com/p-org/P/workflows/CI%20on%20Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action (CI on Ubuntu)&#34;&gt; &lt;img src=&#34;https://github.com/p-org/P/workflows/CI%20on%20MacOS/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action (CI on MacOS)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;: Distributed systems are notoriously hard to get right. Programming these systems is challenging because of the need to reason about correctness in the presence of myriad possible interleaving of messages and failures. Unsurprisingly, it is common for service teams to uncover correctness bugs after deployment. Formal methods can play an important role in addressing this challenge!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;P Overview:&lt;/strong&gt; P is a state machine based programming language for formally modeling and specifying complex distributed systems. P allows programmers to model their system design as a collection of communicating state machines. P supports several backend analysis engines (based on automated reasoning techniques like model checking and symbolic execution) to check that the distributed system modeled in P satisfy the desired correctness specifications.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following talk provides an overview of P, its impact in Academia and Industry, and answers the main question that gets asked most of the times by service teams and developers: &lt;strong&gt;&#34;why do formal modeling?&#34;&lt;/strong&gt;: &lt;a href=&#34;https://www.youtube.com/watch?v=5YjsSDDWFDY&#34;&gt;(P @ StrangeLoop) Formal Modeling and Analysis of Distributed Systems (Finding Critical Bugs Early!!)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=5YjsSDDWFDY&#34;&gt; &lt;img src=&#34;https://img.youtube.com/vi/5YjsSDDWFDY/0.jpg&#34; style=&#34;width:40%;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;: P is currently being used extensively inside Amazon (AWS) for analysis of complex distributed systems. For example, Amazon S3 used P to formally reason about the core distributed protocols involved in its strong consistency launch. Teams across AWS are now using P for thinking and reasoning about their systems formally. P is also being used for programming safe robotics systems in Academia. P was first used to implement and validate the USB device driver stack that ships with Microsoft Windows 8 and Windows Phone.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Experience and lessons learned&lt;/strong&gt;: In our experience of using P inside AWS, Academia, and Microsoft. We have observed that P has helped developers in three critical ways: (1) &lt;strong&gt;P as a thinking tool&lt;/strong&gt;: Writing formal specifications in P forces developers to think about their system design rigorously, and in turn helped in bridging gaps in their understanding of the system. A large fraction of the bugs can be eliminated in the process of writing specifications itself! (2) &lt;strong&gt;P as a bug finder&lt;/strong&gt;: Model checking helped find corner case bugs in system design that were missed by stress and integration testing. (3) &lt;strong&gt;P helped boost developer velocity&lt;/strong&gt;: After the initial overhead of creating the formal models, future updates and feature additions could be rolled out faster as these non-trivial changes are rigorously validated before implementation.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;✨&lt;/span&gt; &lt;strong&gt;&lt;em&gt;Programming concurrent, distributed systems is fun but challenging, however, a pinch of programming language design with a dash of automated reasoning can go a long way in addressing the challenge and amplify the fun!.&lt;/em&gt;&lt;/strong&gt; &lt;span&gt;✨&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Let the fun begin!&lt;/h2&gt; &#xA;&lt;p&gt;You can find most of the information about the P framework on: &lt;strong&gt;&lt;a href=&#34;http://p-org.github.io/P/&#34;&gt;http://p-org.github.io/P/&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://p-org.github.io/P/whatisP/&#34;&gt;What is P?&lt;/a&gt;, &lt;a href=&#34;http://p-org.github.io/P/getstarted/install/&#34;&gt;Getting Started&lt;/a&gt;, &lt;a href=&#34;http://p-org.github.io/P/tutsoutline/&#34;&gt;Tutorials&lt;/a&gt;, &lt;a href=&#34;http://p-org.github.io/P/casestudies/&#34;&gt;Case Studies&lt;/a&gt; and related &lt;a href=&#34;http://p-org.github.io/P/publications/&#34;&gt;Research Publications&lt;/a&gt;. If you have any further questions, please feel free to create an &lt;a href=&#34;https://github.com/p-org/P/issues&#34;&gt;issue&lt;/a&gt;, ask on &lt;a href=&#34;https://github.com/p-org/P/discussions&#34;&gt;discussions&lt;/a&gt;, or &lt;a href=&#34;mailto:ankushdesai@gmail.com&#34;&gt;email us&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;P has always been a collaborative project between industry and academia (since 2013) &lt;span&gt;🥁&lt;/span&gt;. The P team welcomes contributions and suggestions from all of you!! &lt;span&gt;👊&lt;/span&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/p-org/P/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>LegacyGwent/LegacyGwent</title>
    <updated>2023-01-09T01:31:33Z</updated>
    <id>tag:github.com,2023-01-09:/LegacyGwent/LegacyGwent</id>
    <link href="https://github.com/LegacyGwent/LegacyGwent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;复刻巫师之昆特牌的内测版本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;巫师之昆特牌 怀旧版 LegacyGwent&lt;/h1&gt; &#xA;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/LegacyGwent/LegacyGwent/master/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;版权说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目基于巫师之昆特牌（回归初心前版本）进行复刻。所有美术资源皆由原版客户端提取，版权归原版版权方所有。本作仅限学习与交流使用，不得作商业用途。&lt;/li&gt; &#xA; &lt;li&gt;本项目程序代码部分为作者原创，与原作毫无关系，现以GPL许可证向社区开源，欢迎参与。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目状况&lt;/h2&gt; &#xA;&lt;p&gt;本项目主要分为两个版本：&lt;code&gt;master&lt;/code&gt; 和 &lt;code&gt;diy&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mater&lt;/code&gt;版本在&lt;code&gt;master&lt;/code&gt;分支维护，为回归初心前巫师之昆特牌的完整复刻，目标与原作一致(大约是2018年6月份的版本)。 你可以在 &lt;a href=&#34;https://github.com/LegacyGwent/LegacyGwent/releases/tag/v0.1.0.5&#34;&gt;这里&lt;/a&gt; 下载。相关网站是&lt;a href=&#34;http://legacygwent.com:5000/&#34;&gt;LegacyGwent&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;diy&lt;/code&gt;版本在&lt;code&gt;diy&lt;/code&gt;分支维护，是在&lt;code&gt;master&lt;/code&gt;版本的基础上继续进行的社区开发版本，增加了先后手平衡，部分老卡调整，以及部分新卡。 你可以在 &lt;a href=&#34;https://github.com/LegacyGwent/LegacyGwent/releases/&#34;&gt;这里&lt;/a&gt; 下载最新版本。相关网址是&lt;a href=&#34;http://legacygwent.com:5005/&#34;&gt;DiyGwent&lt;/a&gt;。目前的开发主要在&lt;code&gt;diy&lt;/code&gt;版本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;欢迎贡献&lt;/h2&gt; &#xA;&lt;p&gt;目前缺少开发人员，欢迎 Pull Request，Issue，Discussion！活跃的贡献者将会加入作者名单。&lt;/p&gt; &#xA;&lt;h3&gt;Pull Request&lt;/h3&gt; &#xA;&lt;p&gt;具体的贡献方法可以看 &lt;a href=&#34;https://raw.githubusercontent.com/LegacyGwent/LegacyGwent/master/.github/CONTRIBUTING.md&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;Issue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LegacyGwent/LegacyGwent/issues&#34;&gt;Issue&lt;/a&gt;区可以用来提交Bug、要求新功能、讨论卡牌新增以及改动等。Discussion区开放后可能会将卡牌相关内容迁移至Discussion。&lt;/p&gt; &#xA;&lt;h2&gt;开发环境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;服务端项目：.NET Core 3.1, Mongodb 4.2&lt;/li&gt; &#xA; &lt;li&gt;客户端项目：Unity 2019.4.1f1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发计划&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LegacyGwent/LegacyGwent/projects&#34;&gt;GitHub Projects&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;关于作者&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目发起人及主要作者：&lt;a href=&#34;https://github.com/DeusSeuca&#34;&gt;怜昕&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;技术选型与支持：&lt;a href=&#34;https://github.com/AlseinX&#34;&gt;Alsein&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;玩家社区&lt;/h2&gt; &#xA;&lt;p&gt;QQ群：&lt;img src=&#34;https://github.com/DeusSeuca/Cynthia.Card/raw/master/assets/group.png&#34; alt=&#34;qq group&#34;&gt; Discord: &lt;a href=&#34;https://discord.gg/VevbzbVEVa&#34;&gt;邀请链接&lt;/a&gt; 开黑啦: &lt;a href=&#34;https://kaihei.co/TWGPsQ&#34;&gt;邀请链接&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Regalis11/Barotrauma</title>
    <updated>2023-01-09T01:31:33Z</updated>
    <id>tag:github.com,2023-01-09:/Regalis11/Barotrauma</id>
    <link href="https://github.com/Regalis11/Barotrauma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A 2D online multiplayer game taking place in a submarine travelling through the icy depths of Jupiter&#39;s moon Europa.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Barotrauma&lt;/h1&gt; &#xA;&lt;p&gt;Copyright © FakeFish Ltd 2017-2022&lt;/p&gt; &#xA;&lt;p&gt;Before downloading the source code, please read the &lt;a href=&#34;https://raw.githubusercontent.com/Regalis11/Barotrauma/master/EULA.txt&#34;&gt;EULA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a question or an issue to report, please check our &lt;a href=&#34;https://github.com/Regalis11/Barotrauma/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in working on the code, either to develop mods or to contribute something to the repository, you will also find instructions in the &lt;a href=&#34;https://github.com/Regalis11/Barotrauma/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Official Website:&lt;/strong&gt; &lt;a href=&#34;http://www.barotraumagame.com&#34;&gt;www.barotraumagame.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steam Forums:&lt;/strong&gt; &lt;a href=&#34;https://steamcommunity.com/app/602960/discussions/&#34;&gt;https://steamcommunity.com/app/602960/discussions/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discord:&lt;/strong&gt; &lt;a href=&#34;https://discordapp.com/invite/undertow&#34;&gt;https://discordapp.com/invite/undertow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wiki:&lt;/strong&gt; &lt;a href=&#34;https://barotraumagame.com/wiki/Main_Page&#34;&gt;https://barotraumagame.com/wiki/Main_Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisities:&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/vs/community/&#34;&gt;Visual Studio&lt;/a&gt; with C# 10 support (VS 2022 or later recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/install/linux&#34;&gt;.NET 6 SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/vs/mac/&#34;&gt;Visual Studio 2022 for Mac&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>