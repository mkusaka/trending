<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-21T01:29:16Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kangyu-california/PersistentWindows</title>
    <updated>2025-03-21T01:29:16Z</updated>
    <id>tag:github.com,2025-03-21:/kangyu-california/PersistentWindows</id>
    <link href="https://github.com/kangyu-california/PersistentWindows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fork of http://www.ninjacrab.com/persistent-windows/ with windows 10 update&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PersistentWindows&lt;/h1&gt; &#xA;&lt;p&gt;This project addresses a long-standing &lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/windows_10-hardware/windows-10-multiple-display-windows-are-moved-and/2b9d5a18-45cc-4c50-b16e-fd95dbf27ff3?page=1&amp;amp;auth=1&#34;&gt;issue&lt;/a&gt; in Windows 7, 10, and 11, where windows get repositioned after events such as the system waking up, external monitor connections or disconnections, changes in monitor resolution (e.g., exiting full-screen gaming), or during RDP reconnections. The code was forked from &lt;a href=&#34;http://www.ninjacrab.com/persistent-windows/&#34;&gt;ninjacrab.com/persistent-windows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Original Description&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What is PersistentWindows?&lt;/p&gt; &#xA; &lt;p&gt;A poorly named utility that persists window positions and size when the monitor display count/resolution adjusts and restores back to its previous settings.&lt;/p&gt; &#xA; &lt;p&gt;For those of you with multi-monitors running on a mixture of DisplayPort and any other connection, you can run this tool and not have to worry about re-arranging when all is back to normal.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto restore: Keeps track of window position changes, and automatically restores the desktop layout, including the taskbar position, to the last matching monitor setup.&lt;/li&gt; &#xA; &lt;li&gt;Supports remote desktop sessions with multiple display configurations.&lt;/li&gt; &#xA; &lt;li&gt;Capture windows to disk: manually saves desktop layout capture to hard drive in liteDB format, so that closed windows can be restored to corresponding virtual desktop after PC reboot.&lt;/li&gt; &#xA; &lt;li&gt;Capture snapshot: manually saves desktop layout to ram. The window Z-order is preserved in the snapshot. Up to 36 snapshots ([0-9a-z]) can be taken for each display configuration.&lt;/li&gt; &#xA; &lt;li&gt;Automatically persists the location history of all windows (alive and closed) to hard drive in xml format, so that manual-restore-point (aka snapshot) and auto-restore-point will continue to function smoothly upon app upgrade/restart, even after PC reboot.&lt;/li&gt; &#xA; &lt;li&gt;Webpage commander to improve the efficiency of web browsing for all major web browsers using one-letter commands like in vi editor.&lt;/li&gt; &#xA; &lt;li&gt;Efficient window switching between foreground and background dual positions.&lt;/li&gt; &#xA; &lt;li&gt;Pause/resume auto restore.&lt;/li&gt; &#xA; &lt;li&gt;Automatic upgrade support.&lt;/li&gt; &#xA; &lt;li&gt;For more Features and Commands, take a look at the &lt;a href=&#34;https://www.github.com/kangyu-california/PersistentWindows/blob/master/Help.md&#34;&gt;Quick Help page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the latest PersistentWindows*.zip file from the &lt;a href=&#34;https://github.com/kangyu-california/PersistentWindows/releases&#34;&gt;Releases&lt;/a&gt; page&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file into any directory.&lt;/li&gt; &#xA; &lt;li&gt;You can remove the version number from the folder name, because when the program is updated to newer versions, the folder remains the same&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: the program can be run from any directory, but the program saves its data in &lt;em&gt;C:\Users\[User]\AppData\Local\PersistentWindows&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;For PersistentWindows to be able to restore windows with elevated privileges (for tools like Task Manager or Event Viewer), it needs to be run with Administrator privileges.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;To set up PersistentWindows to automatically start at user login:&lt;/h3&gt; &#xA;&lt;p&gt;This can be done by creating a task in &lt;strong&gt;Task Scheduler&lt;/strong&gt;, or by adding a shortcut to the &lt;strong&gt;Startup Folder&lt;/strong&gt; (shell:startup).&lt;/p&gt; &#xA;&lt;p&gt;Choose &lt;strong&gt;one&lt;/strong&gt; of the three options:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Task Scheduler (Windows 10/11)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;em&gt;auto_start_pw.bat&lt;/em&gt; file (preferably as administrator) to create a task in the Task Scheduler. &lt;img src=&#34;https://github.com/kangyu-california/PersistentWindows/assets/59128756/e323086a-8373-4e8a-b439-3c7087550cb0&#34; alt=&#34;auto_start_pw as administrator&#34; width=&#34;400&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Task Scheduler (Windows 7/10/11)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a pw.bat file in the installation folder with following content&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  start &#34;&#34; /B &#34;%~dp0PersistentWindows.exe&#34; -splash=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch a DOS window (cmd.exe) with admin privileges, goto (cd) the PW installation folder, and run the following command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;schtasks /create /sc onlogon /tn &#34;StartPersistentWindows&#34; /f /tr &#34;&#39;%~dp0pw.bat&#39;&#34; /rl HIGHEST&#xA;REM Override High DPI Scaling&#xA;REG ADD &#34;HKCU\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers&#34; /v &#34;%~dp0PersistentWindows.exe&#34; /t REG_SZ /d &#34;~ HIGHDPIAWARE&#34; /f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Startup Folder (Windows 7/10/11)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a shortcut in the startup folder:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Win&amp;nbsp;+&amp;nbsp;R&lt;/code&gt;, type&amp;nbsp;&lt;code&gt;shell:startup&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Create a shortcut to &lt;em&gt;PersistentWindows.exe&lt;/em&gt; and place it in the Startup folder&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Administrator Privileges:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;instead of a shortcut, create a .vb file (you can call it &lt;em&gt;PersistentWindows as Administrator.vb&lt;/em&gt;) and add this to it: &lt;pre&gt;&lt;code&gt;Set objShell = CreateObject(&#34;Shell.Application&#34;)&#xA;objShell.ShellExecute &#34;C:\path\to\PersistentWindows.exe&#34;, &#34;&#34;, &#34;&#34;, &#34;runas&#34;, 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;replace in the script the path to the &lt;em&gt;PersistentWindows.exe&lt;/em&gt; file (the location where the PersistentWindows folder was saved)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;br&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: It is possible for set shortcuts to be run as administrator, through the shortcut properties menu. However, this doesnâ€™t work when opening the shortcut through the Startup folder, which is why we use this workaround with the .vb script&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;PersistentWindows.exe&lt;/code&gt; (preferably as administrator). Note that this app has no main window and its icon is hidden in the System Tray area on the taskbar by default.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To have the icon always appear on the taskbar, flip on the PersistentWindows item in the taskbar settings.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kangyu-california/PersistentWindows/master/showicon.png&#34; alt=&#34;taskbar setting&#34; width=&#34;400&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Right click the PersistentWindows icon to show the menu, where the capture and restore actions can be selected. &lt;img src=&#34;https://github.com/kangyu-california/PersistentWindows/assets/59128756/6a196d75-7d86-4bd3-8873-4a4d65cb3c30&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To restore the taskbar position, avoid moving mouse when the icon turns red.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When software upgrades are available, a notice will show up in the menu.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy Statement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PersistentWindows performs its duty by collecting following information: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;window position&lt;/li&gt; &#xA;   &lt;li&gt;window size&lt;/li&gt; &#xA;   &lt;li&gt;window Z-order&lt;/li&gt; &#xA;   &lt;li&gt;window caption text&lt;/li&gt; &#xA;   &lt;li&gt;window class name&lt;/li&gt; &#xA;   &lt;li&gt;process id and command line of the window&lt;/li&gt; &#xA;   &lt;li&gt;Ctrl, Alt, Shift key strokes when clicking or moving a window&lt;/li&gt; &#xA;   &lt;li&gt;Ctrl, Alt, Shift key strokes when selecting PersistentWindows menu items&lt;/li&gt; &#xA;   &lt;li&gt;key-stroke events when interacting with the PersistentWindows icon on taskbar&lt;/li&gt; &#xA;   &lt;li&gt;key-stroke events (only as webpage command shortcut), mouse click/scroll events and cursor position/shape in web browser when webpage commander window is activated (Alt + W)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The history of keyboard/mouse events is typically erased 1 second after received&lt;/li&gt; &#xA; &lt;li&gt;Window information history is kept in ram or on the hard drive in LiteDB file format, waiting to be recalled by auto/manual restore&lt;/li&gt; &#xA; &lt;li&gt;PersistentWindows periodically checks the github repository for software version upgrades. This can be disabled in the options menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;PersistentWindows may malfunction on fractionally scaled display (such as 125%, 150% etc), it is strongly suggested to override the high DPI scaling property of PersistentWindows.exe to &#34;Application&#34; via Properties-&amp;gt;Compatibility-&amp;gt;Change high DPI settings dialog from explorer, user needs to capture windows to disk immediately after relaunching PW w/ the new DPI setting. &lt;img src=&#34;https://github.com/kangyu-california/PersistentWindows/assets/59128756/d410aa87-4552-42da-b7a4-e9d7ab1947b1&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PersistentWindows can get stuck in a &#34;busy&#34; state (with a red icon in the System Tray) during a restore if one of the windows becomes unresponsive. You may find out the culprit window in Task Manager using &#34;Analyze wait chain&#34;. The unresponsive app might need an immediate hot-upgrade, or need to be killed to let PersistentWindows proceed&lt;/p&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/59128756/184041561-5389f540-c61a-4ee7-90ff-f9f725ba3682.png&#34; alt=&#34;image&#34; width=&#34;500&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/59128756/187988981-b2564618-2724-4e1e-a718-cd0786a4251e.png&#34; alt=&#34;wait chain&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tips To Digest Before Reporting A Bug or Enhancement Request&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;PersistentWindows provides a rich set of command line options for customization, check out &lt;a href=&#34;https://www.github.com/kangyu-california/PersistentWindows/blob/master/Help.md&#34;&gt;Quick Help page&lt;/a&gt; for a complete list of available options. &lt;a href=&#34;https://github.com/kangyu-california/PersistentWindows/discussions/313&#34;&gt;how to customize command line options&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The window Z-order can be restored in addition to the two-dimentional layout. This feature is enabled for manual snapshot restore only. To turn on Z-order fix for automatic restore, run PersistentWindows with -fix_zorder=1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To help me diagnose a bug, please run Event Viewer, locate the &#34;Windows Logs&#34; -&amp;gt; &#34;Application&#34; section, then search for Event ID 9990 and 9999, and copy-paste the content of these events to the new issue report, as shown in the following example &lt;img src=&#34;https://user-images.githubusercontent.com/59128756/190280503-a96ce57f-a6f0-4aad-9748-221bbb4f9207.png&#34; alt=&#34;image&#34; width=&#34;800&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If there are too many events to report, click &#34;Filter current log&#34; from the Action panel in Event Viewer, choose all 9990 and 9999 events in last hour, then click &#34;Save Filtered Log File As&#34;, select &#34;Text (*.txt)&#34; format, and attach the saved events file to the bug report&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kangyu-california/PersistentWindows/assets/59128756/ce4ee2e7-8662-4eb5-9a49-cbe53d30f911&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>