<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:28:30Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>setchi/FancyScrollView</title>
    <updated>2024-01-28T01:28:30Z</updated>
    <id>tag:github.com,2024-01-28:/setchi/FancyScrollView</id>
    <link href="https://github.com/setchi/FancyScrollView" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[Unity] Scroll view component that can implement highly flexible animations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FancyScrollView&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/setchi/FancyScrollView/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&amp;amp;cacheSeconds=2592000&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://setchi.jp/FancyScrollView/demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-WebGL-orange.svg?style=flat&amp;amp;logo=google-chrome&amp;amp;logoColor=white&amp;amp;cacheSeconds=2592000&#34; alt=&#34;WebGL Demo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-Documentation-ff69b4.svg?style=flat&amp;amp;logo=c-sharp&amp;amp;cacheSeconds=2592000&#34; alt=&#34;API Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://openupm.com/packages/jp.setchi.fancyscrollview/&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/jp.setchi.fancyscrollview?label=openupm&amp;amp;registry_uri=https://package.openupm.com&amp;amp;style=flat&#34; alt=&#34;openupm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://translate.google.com/translate?sl=ja&amp;amp;tl=en&amp;amp;u=https://github.com/setchi/FancyScrollView&#34;&gt;English&lt;/a&gt; (by Google Translate)&lt;/p&gt; &#xA;&lt;p&gt;高度に柔軟なアニメーションを実装できる汎用の ScrollView コンポーネントです。 無限スクロールもサポートしています。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/69004520-d2b36b80-0957-11ea-8277-06bfd3e8f033.gif&#34; width=&#34;320&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/70638335-0b571400-1c7c-11ea-8701-a0d1ae0cb7e3.gif&#34; width=&#34;320&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/59548448-a3549900-8f8a-11e9-9a27-b04f1410a7b5.gif&#34; width=&#34;320&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/59548462-b8c9c300-8f8a-11e9-8985-5f1c2e610309.gif&#34; width=&#34;320&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/59550410-7f528100-8fa5-11e9-8f1b-41e59b645571.gif&#34; width=&#34;320&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8326814/59550411-7f528100-8fa5-11e9-8bfb-bd42da47f7a0.gif&#34; width=&#34;320&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unity3d.com/get-unity/download/archive&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/unity-2019.4+-black.svg?style=flat&amp;amp;logo=unity&amp;amp;cacheSeconds=2592000&#34; alt=&#34;Unity 2019.4+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.unity3d.com/2018.3/Documentation/Manual/ScriptingRuntimeUpgrade.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET-4.x-blueviolet.svg?style=flat&amp;amp;cacheSeconds=2592000&#34; alt=&#34;.NET 4.x Scripting Runtime&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Unity Asset Store&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://assetstore.unity.com/packages/tools/gui/fancyscrollview-96530&#34;&gt;Unity Asset Store&lt;/a&gt; から購入して、さらなる開発のサポートを検討してください。&lt;/p&gt; &#xA;&lt;h3&gt;OpenUPM&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openupm.com/&#34;&gt;OpenUPM&lt;/a&gt; レジストリからパッケージを Unity Project に追加します。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openupm add jp.setchi.fancyscrollview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unity Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;プロジェクトディレクトリの &lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.package-manager-ui@1.8/manual/index.html#project-manifests&#34;&gt;&lt;code&gt;Packages/manifest.json&lt;/code&gt;&lt;/a&gt; ファイルにリポジトリへの参照を追加します。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;dependencies&#34;: {&#xA;    &#34;jp.setchi.fancyscrollview&#34;: &#34;https://github.com/setchi/FancyScrollView.git#upm&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;自由にスクロールアニメーションを実装できます&lt;/h3&gt; &#xA;&lt;p&gt;FancyScrollView はスクロール位置を更新するとき、ビューポート範囲の正規化された位置を各セルに渡します。セル側では &lt;code&gt;0.0&lt;/code&gt; ~ &lt;code&gt;1.0&lt;/code&gt; の値に基づいてスクロール中の位置や見た目を&lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyCell-2.html#FancyScrollView_FancyCell_2_UpdatePosition_System_Single_&#34;&gt;セル自身で制御&lt;/a&gt;します。サンプルでは Animator や数式を使用してスクロール中の動きを実装しています。&lt;/p&gt; &#xA;&lt;h3&gt;データ件数が多くても軽快に動作します&lt;/h3&gt; &#xA;&lt;p&gt;表示に必要なセル数のみが生成され、セルは再利用されます。 &lt;a href=&#34;https://setchi.jp/FancyScrollView/demo/&#34;&gt;Demo&lt;/a&gt; で実際にデータ件数を増やしながら動作を確認できます。 &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyScrollRect-2.html&#34;&gt;FancyScrollRect&lt;/a&gt; および &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyGridView-2.html&#34;&gt;FancyGridView&lt;/a&gt; では、&lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyScrollRect-2.html#FancyScrollView_FancyScrollRect_2_reuseCellMarginCount&#34;&gt;スクロール中にセルが再利用されるまでの余白&lt;/a&gt;も指定できます。&lt;/p&gt; &#xA;&lt;h3&gt;セルとスクロールビュー間で自由にメッセージのやりとりができます&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Context&lt;/code&gt; 経由で、セルがクリックされたことをスクロールビューで検知したり、スクロールビューからセルに指示を出す処理がシンプルに実装できます。実装例（&lt;a href=&#34;https://github.com/setchi/FancyScrollView/tree/master/Assets/FancyScrollView/Examples/Sources/02_FocusOn&#34;&gt;Examples/02_FocusOn&lt;/a&gt;）が含まれていますので、参考にしてください。&lt;/p&gt; &#xA;&lt;h3&gt;特定のセルにスクロールやジャンプができます&lt;/h3&gt; &#xA;&lt;p&gt;移動にかける秒数や Easing の指定もできます。詳しくは &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.html&#34;&gt;API Documentation&lt;/a&gt; の &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.Scroller.html#FancyScrollView_Scroller_ScrollTo_System_Single_System_Single_EasingCore_Ease_System_Action_&#34;&gt;Class Scroller&lt;/a&gt; を参照してください。&lt;/p&gt; &#xA;&lt;h3&gt;スクロールの挙動を細かく設定できます&lt;/h3&gt; &#xA;&lt;p&gt;慣性の有無、減速率などスクロールに関する挙動の設定ができます。詳しくは &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.html&#34;&gt;API Documentation&lt;/a&gt; の &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.Scroller.html&#34;&gt;Class Scroller&lt;/a&gt; を参照してください。&lt;/p&gt; &#xA;&lt;h3&gt;スナップをサポートしています&lt;/h3&gt; &#xA;&lt;p&gt;スナップを有効にすると、スクロールが止まる直前に最寄りのセルへ移動します。スナップがはじまる速度のしきい値、移動にかける秒数、 Easing を指定できます。&lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyScrollRect-2.html&#34;&gt;FancyScrollRect&lt;/a&gt; および &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyGridView-2.html&#34;&gt;FancyGridView&lt;/a&gt; はスナップをサポートしていません。&lt;/p&gt; &#xA;&lt;h3&gt;無限スクロールをサポートしています&lt;/h3&gt; &#xA;&lt;p&gt;Inspector で下記の設定をすることで無限スクロールを実装できます。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;FancyScrollView&lt;/code&gt; の &lt;code&gt;Loop&lt;/code&gt; をオンにするとセルが循環し、先頭のセルの前に末尾のセル、末尾のセルの後に先頭のセルが並ぶようになります。&lt;/li&gt; &#xA; &lt;li&gt;サンプルで使用されている &lt;code&gt;Scroller&lt;/code&gt; を使うときは、 &lt;code&gt;Movement Type&lt;/code&gt; を &lt;code&gt;Unrestricted&lt;/code&gt; に設定することで、スクロール範囲が無制限になります。 1. と組み合わせることで無限スクロールを実現できます。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;実装例（&lt;a href=&#34;https://github.com/setchi/FancyScrollView/tree/master/Assets/FancyScrollView/Examples&#34;&gt;Examples/03_InfiniteScroll&lt;/a&gt;）が含まれていますので、こちらも参考にしてください。&lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyScrollRect-2.html&#34;&gt;FancyScrollRect&lt;/a&gt; および &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.FancyGridView-2.html&#34;&gt;FancyGridView&lt;/a&gt; は無限スクロールをサポートしていません。&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://setchi.jp/FancyScrollView/demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-WebGL-orange.svg?style=flat&amp;amp;logo=google-chrome&amp;amp;logoColor=white&amp;amp;cacheSeconds=2592000&#34; alt=&#34;WebGL Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/setchi/FancyScrollView/tree/master/Assets/FancyScrollView/Examples&#34;&gt;FancyScrollView/Examples&lt;/a&gt; を参照してください。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;01_Basic&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;最もシンプルな構成の実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;02_FocusOn&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ボタンで左右のセルにフォーカスする実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;03_InfiniteScroll&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;無限スクロールの実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;04_Metaball&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;シェーダーを使用したメタボールの実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;05_Voronoi&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;シェーダーを使用したボロノイの実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;06_LoopTabBar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;タブで画面を切り替える実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;07_ScrollRect&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;スクロールバー付きの &lt;code&gt;ScrollRect&lt;/code&gt; スタイルの実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;08_GridView&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;グリッドレイアウトの実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;09_LoadTexture&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;テクスチャをロードして表示する実装例です。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;もっともシンプルな構成では、&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;セルにデータを渡すためのオブジェクト&lt;/li&gt; &#xA; &lt;li&gt;セル&lt;/li&gt; &#xA; &lt;li&gt;スクロールビュー&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;の実装が必要です。&lt;/p&gt; &#xA;&lt;h3&gt;Implementation&lt;/h3&gt; &#xA;&lt;p&gt;セルにデータを渡すためのオブジェクトを定義します。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;class ItemData&#xA;{&#xA;    public string Message { get; }&#xA;&#xA;    public ItemData(string message)&#xA;    {&#xA;        Message = message;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;FancyCell&amp;lt;TItemData&amp;gt;&lt;/code&gt; を継承して自分のセルを実装します。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using UnityEngine;&#xA;using UnityEngine.UI;&#xA;using FancyScrollView;&#xA;&#xA;class MyCell : FancyCell&amp;lt;ItemData&amp;gt;&#xA;{&#xA;    [SerializeField] Text message = default;&#xA;&#xA;    public override void UpdateContent(ItemData itemData)&#xA;    {&#xA;        message.text = itemData.Message;&#xA;    }&#xA;&#xA;    public override void UpdatePosition(float position)&#xA;    {&#xA;        // position は 0.0 ~ 1.0 の値です&#xA;        // position に基づいてスクロールの外観を自由に制御できます&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;FancyScrollView&amp;lt;TItemData&amp;gt;&lt;/code&gt; を継承して自分のスクロールビューを実装します。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using UnityEngine;&#xA;using System.Linq;&#xA;using FancyScrollView;&#xA;&#xA;class MyScrollView : FancyScrollView&amp;lt;ItemData&amp;gt;&#xA;{&#xA;    [SerializeField] Scroller scroller = default;&#xA;    [SerializeField] GameObject cellPrefab = default;&#xA;&#xA;    protected override GameObject CellPrefab =&amp;gt; cellPrefab;&#xA;&#xA;    void Start()&#xA;    {&#xA;        scroller.OnValueChanged(base.UpdatePosition);&#xA;    }&#xA;&#xA;    public void UpdateData(IList&amp;lt;ItemData&amp;gt; items)&#xA;    {&#xA;        base.UpdateContents(items);&#xA;        scroller.SetTotalCount(items.Count);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;スクロールビューにデータを流し込みます。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using UnityEngine;&#xA;using System.Linq;&#xA;&#xA;class EntryPoint : MonoBehaviour&#xA;{&#xA;    [SerializeField] MyScrollView myScrollView = default;&#xA;&#xA;    void Start()&#xA;    {&#xA;        var items = Enumerable.Range(0, 20)&#xA;            .Select(i =&amp;gt; new ItemData($&#34;Cell {i}&#34;))&#xA;            .ToArray();&#xA;&#xA;        myScrollView.UpdateData(items);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;その他の詳細は &lt;a href=&#34;https://github.com/setchi/FancyScrollView/tree/master/Assets/FancyScrollView/Examples&#34;&gt;Examples&lt;/a&gt; および &lt;a href=&#34;https://setchi.jp/FancyScrollView/api/FancyScrollView.html&#34;&gt;API Documentation&lt;/a&gt; を参照してください。&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/setchi&#34;&gt;setchi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/setchi/FancyScrollView/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/testfx</title>
    <updated>2024-01-28T01:28:30Z</updated>
    <id>tag:github.com,2024-01-28:/microsoft/testfx</id>
    <link href="https://github.com/microsoft/testfx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MSTest framework and adapter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Test Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/microsoft/testfx/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/microsoft/testfx.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/testfx&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/microsoft/testfx&#34; alt=&#34;GitHub repo size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/testfx/issues?q=is%3Aissue+is%3Aopened&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/testfx.svg?sanitize=true&#34; alt=&#34;GitHub issues-opened&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/testfx/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/microsoft/testfx.svg?sanitize=true&#34; alt=&#34;GitHub issues-closed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/testfx/pulls?q=is%3Aissue+is%3Aopened&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/microsoft/testfx.svg?sanitize=true&#34; alt=&#34;GitHub pulls-opened&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/testfx/pulls?q=is%3Apr+is%3Aclosed+is%3Amerged&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-search/microsoft/testfx?label=merged%20pull%20requests&amp;amp;query=is%3Apr%20is%3Aclosed%20is%3Amerged&amp;amp;color=darkviolet&#34; alt=&#34;GitHub pulls-merged&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/testfx/graphs/contributors/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/microsoft/testfx.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/testfx/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/microsoft/testfx&#34; alt=&#34;Commit Activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=209&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng-public/public/_apis/build/status/Microsoft/testfx/microsoft.testfx?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the MSTest repository (starting from v2), home of the Microsoft Test Framework and Adapter. MSTest is currently in use in a variety of scenarios including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in the relevant in-box unit test project templates (Visual Studio 2017 Preview 4 onwards)&lt;/li&gt; &#xA; &lt;li&gt;in the Create Unit Tests wizard (Visual Studio 2017 Preview 4 onwards)&lt;/li&gt; &#xA; &lt;li&gt;in the&amp;nbsp;Create IntelliTest wizard (Visual Studio 2017 Preview 4 onwards)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is a fully supported, open source and cross-platform implementation of the MSTest test framework with which to write tests targeting .NET Framework, .NET Core and ASP.NET Core on Windows, Linux, and Mac.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/testfx/main/docs/README.md&#34;&gt;Documentation&lt;/a&gt; for full documentation about how to contribute, build, test MSTest. This documentation also contains information about history, context and supported or unsupported features.&lt;/p&gt; &#xA;&lt;h2&gt;NuGet packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stable version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Preview version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Dogfood version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSTest&lt;/td&gt; &#xA;   &lt;td&gt;This package is a meta package that simplifies referencing all recommended MSTest packages.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/mstest.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/mstest.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest/versions&#34;&gt;Azure Artifacts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSTest.TestFramework&lt;/td&gt; &#xA;   &lt;td&gt;This package includes the libraries for writing tests with MSTest. To ensure discovery and execution of your tests, install the `MSTest.TestAdapter`` package.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.TestFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/mstest.testframework.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.TestFramework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/mstest.testframework.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest.TestFramework/versions&#34;&gt;Azure Artifacts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSTest.TestAdapter&lt;/td&gt; &#xA;   &lt;td&gt;This package includes the adapter logic to discover and run tests. For access to the testing framework, install the &lt;code&gt;MSTest.TestFramework&lt;/code&gt; package.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.TestAdapter/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/mstest.testadapter.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.TestAdapter/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/mstest.testadapter.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest.TestAdapter/versions&#34;&gt;Azure Artifacts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSTest.Analyzers&lt;/td&gt; &#xA;   &lt;td&gt;This package includes code analyzers and code fixes for MSTest.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.Analyzers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/mstest.analyzers.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nuget.org/packages/MSTest.Analyzers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/mstest.analyzers.svg?style=flat&#34; alt=&#34;#&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest.Analyzers/versions&#34;&gt;Azure Artifacts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MSTest is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/testfx/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The LICENSE and ThirdPartyNotices in any downloaded archives are authoritative.&lt;/p&gt;</summary>
  </entry>
</feed>