<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:32:17Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Eimaen/JustAsPlanned</title>
    <updated>2023-07-02T01:32:17Z</updated>
    <id>tag:github.com,2023-07-02:/Eimaen/JustAsPlanned</id>
    <link href="https://github.com/Eimaen/JustAsPlanned" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Muse Dash DLC unlocking meme for Steam version. Maybe you shouldn&#39;t pay for pixel Reimu?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JustAsPlanned&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Muse Dash (Steam, x64) DLC unlocker.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=Van+Darkholme&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=dungeonci&amp;amp;message=master&amp;amp;color=purple&#34; alt=&#34;DungeonCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/jz7XnfDE7j&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1070816148838420561?label=discord&amp;amp;logo=discord&amp;amp;logoColor=fff&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get the &lt;code&gt;.exe&lt;/code&gt; binary (build the code or download from &lt;a href=&#34;https://github.com/Eimaen/JustAsPlanned/releases&#34;&gt;releases&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you have a steam version of the game, steam client should be running.&lt;/li&gt; &#xA; &lt;li&gt;Run the app.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t have a steam copy of the game, start Muse Dash when required.&lt;/li&gt; &#xA; &lt;li&gt;Wait for the app to patch Muse Dash. It&#39;ll be closed automatically.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Eimaen/JustAsPlanned/master/screenshot.png&#34; alt=&#34;I shot my screen for this&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Videos&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t get it, check usage videos below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pjx6BY-UI6Y&#34;&gt;video tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thank the dev&lt;/h2&gt; &#xA;&lt;p&gt;Everybody likes Github stars, I&#39;m not an exception. If this code was helpful, please consider starring the repo :3&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;Something doesn&#39;t work? Try &lt;a href=&#34;https://github.com/Eimaen/JustAsPlannedMelon&#34;&gt;JustAsPlannedMelon&lt;/a&gt; mod for MelonLoader!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat</title>
    <updated>2023-07-02T01:32:17Z</updated>
    <id>tag:github.com,2023-07-02:/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat</id>
    <link href="https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;可能是全网最完整的 C# 版微信 SDK，封装全部已知的微信 API，包含微信公众平台（订阅号+服务号+小程序+小游戏+小商店+视频号）、微信开放平台、微信商户平台（微信支付+微企付）、企业微信、微信广告平台、微信智能对话开放平台等模块，可跨平台。持续随官方更新，欢迎 Star / Fork。QQ 交流群 875580418。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SKIT.FlurlHttpClient.Wechat&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat&#34;&gt;&lt;img src=&#34;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/badge/star.svg?title=Stars&#34; alt=&#34;Gitee Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat&#34;&gt;&lt;img src=&#34;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/badge/fork.svg?title=Forks&#34; alt=&#34;Gitee Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat?logo=github&amp;amp;label=Stars&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat?logo=github&amp;amp;label=Forks&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat&#34;&gt;&lt;img src=&#34;https://visitor-badge.laobi.icu/badge?page_id=fudiwei.DotNetCore.SKIT.FlurlHttpClient.Wechat&amp;amp;title=Visitors&#34; alt=&#34;Visitors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mit-license.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat?label=License&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;基于 &lt;code&gt;Flurl.Http&lt;/code&gt; 的微信 HTTP API SDK，目前已包含公众平台、开放平台、商户平台、企业微信、广告平台、对话开放平台等模块。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;更多 SKIT.FlurlHttpClient 系列开发工具包请&lt;a href=&#34;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient&#34;&gt;点此查看&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基于 &lt;code&gt;Flurl.Http&lt;/code&gt;，可与 &lt;code&gt;IHttpClientFactory&lt;/code&gt; 集成。&lt;/li&gt; &#xA; &lt;li&gt;支持 .NET Framework 4.6.1+、.NET Standard 2.0+、.NET Core 2.0+、.NET 5+。&lt;/li&gt; &#xA; &lt;li&gt;支持 Windows / Linux / macOS 多平台部署。&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;code&gt;System.Text.Json&lt;/code&gt;（默认）和 &lt;code&gt;Newtonsoft.Json&lt;/code&gt; 两种序列化方式。&lt;/li&gt; &#xA; &lt;li&gt;强类型接口模型。&lt;/li&gt; &#xA; &lt;li&gt;全异步式编程。&lt;/li&gt; &#xA; &lt;li&gt;提供 SourceLink 调试符号文件。&lt;/li&gt; &#xA; &lt;li&gt;完整、完善、完全的微信 HTTP API 封装。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;模块&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;NuGet&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;其他&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;公众平台（公众号、小程序、视频号） &lt;br&gt; + 开放平台模块&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Api&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.Api.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Api&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.Api.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatApi/README.md&#34;&gt;开发文档&lt;/a&gt;｜&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatApi/Sample.md&#34;&gt;示例项目&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;商户平台（微信支付）模块 &lt;br&gt; （针对 v3 版接口）&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayV3&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.TenpayV3.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayV3&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.TenpayV3.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatTenpayV3/README.md&#34;&gt;开发文档&lt;/a&gt;｜&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatTenpayV3/Sample.md&#34;&gt;示例项目&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;商户平台（微信支付）模块 &lt;br&gt; （针对 v2 版接口）&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayV2&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.TenpayV2.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayV2&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.TenpayV2.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatTenpayV2/README.md&#34;&gt;开发文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;企业微信（企业号）模块&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Work&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.Work.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Work&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.Work.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatWork/README.md&#34;&gt;开发文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;广告平台（广点通）模块&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Ads&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.Ads.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.Ads&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.Ads.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatAds/README.md&#34;&gt;开发文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;对话开放平台（微信智能对话）模块&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.OpenAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.OpenAI.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.OpenAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.OpenAI.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatOpenAI/README.md&#34;&gt;开发文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;腾讯微企付模块&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayBusiness&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SKIT.FlurlHttpClient.Wechat.TenpayBusiness.svg?label=NuGet&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/SKIT.FlurlHttpClient.Wechat.TenpayBusiness&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/SKIT.FlurlHttpClient.Wechat.TenpayBusiness.svg?sanitize=true&amp;amp;label=Downloads&#34; alt=&#34;NuGet Download&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/docs/WechatTenpayBusiness/README.md&#34;&gt;开发文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Q &amp;amp; A&lt;/h2&gt; &#xA;&lt;h3&gt;1. 为什么要“造轮子”？&lt;/h3&gt; &#xA;&lt;p&gt;这都 2021 年了，官方本身提供的示例代码还只能运行在 .NET Framework on Windows 上；就连 RSA 签名这么基础的东西都没有人封装（确切地说是因为 RSA 有很多种分块模式和填充模式，网上能找到的往往只封装了其中一种，但却未必符合微信的要求）；全网很难找到一个封装微信 API 尽可能全的 .NET SDK，开源的项目有不少，但作者能坚持下去的不多。&lt;/p&gt; &#xA;&lt;p&gt;于是萌生了自己封装一个库的想法，打算解决这几个痛点，同时也是推广一下微软官方的 &lt;code&gt;System.Text.Json&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;2. &lt;code&gt;Flurl.Http&lt;/code&gt; 是什么？&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flurl.dev/&#34;&gt;&lt;code&gt;Flurl.Http&lt;/code&gt;&lt;/a&gt; 是一个轻量级 HTTP 库，是 .NET 中最受欢迎扩展库之一，在 NuGet 上的累计下载量超过 1700 万、日均下载量超过 6 千、GitHub 2.6k Stars（数据统计截至 2021-06-01）。&lt;/p&gt; &#xA;&lt;p&gt;与另一个流行的 HTTP 库 &lt;a href=&#34;https://restsharp.dev/&#34;&gt;&lt;code&gt;RestSharp&lt;/code&gt;&lt;/a&gt; 相比，&lt;code&gt;Flurl.Http&lt;/code&gt; 底层基于 &lt;code&gt;System.Net.Http.HttpClient&lt;/code&gt;，而 &lt;code&gt;RestSharp&lt;/code&gt; 底层则基于 &lt;code&gt;System.Net.HttpWebRequest&lt;/code&gt;，前者在多核多线程环境下的性能基准测试中表现要远优于后者，同时也是微软官方目前推荐的 HTTP 客户端方案。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注：微软官方关于 &lt;code&gt;System.Net.HttpWebRequest&lt;/code&gt; 与 &lt;code&gt;System.Net.Http.HttpClient&lt;/code&gt; 的说明：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.net.httpwebrequest#remarks&#34;&gt;《Microsoft Docs - HttpWebRequest 类（Systen.Net）》&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.net.http.httpclient#httpclient-and-net-core&#34;&gt;《Microsoft Docs - HttpClient 类（Systen.Net.Http）》&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. 本库与盛派微信 SDK（Senparc.Weixin）有什么区别？&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注：&lt;a href=&#34;https://github.com/JeffreySu/WeiXinMPSDK&#34;&gt;盛派微信 SDK&lt;/a&gt; 是由苏震巍先生发起的国内知名的 .NET 开源项目。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本库专注于 API 本身的封装，捎带提供了一些用于加解密、序列化的工具类，使用起来更加灵活，不限任何框架或项目类型；盛派微信 SDK 提供了大而全的功能，与 MVC / WebAPI 深度集成。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本库的接口模型遵循的是微软官方推荐的 C# 属性命名方式（帕斯卡命名法）；盛派微信 SDK 提供的是微信接口本身的命名方式（蛇形命名法和驼峰命名法混杂）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本库封装了目前微信官方提供的几乎所有 API（极个别不支持的已在各模块文档中列出具体原因）；盛派微信 SDK 只提供了常用的 API。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. 为什么不支持 .NET Framework 4.0 / .NET Framework 4.5？&lt;/h3&gt; &#xA;&lt;p&gt;直接原因是本项目的依赖库最低支持到 .NET Framework 4.6.1。&lt;/p&gt; &#xA;&lt;p&gt;间接原因是为了支持跨平台的 .NET Standard 2.0，只能兼容到 .NET Framework 4.6.1。&lt;/p&gt; &#xA;&lt;p&gt;根本原因是微软官方已于 2016 年 1 月 12 日终止了对 .NET Framework 4.6.1 以下版本的技术支持（详情请阅读&lt;a href=&#34;https://docs.microsoft.com/zh-cn/lifecycle/faq/dotnet-framework&#34;&gt;官方公告&lt;/a&gt;）。也就是说，微软已经不再为此提供安全更新，在大部分技术合规要求中这一点都是扣分项，所以建议各位开发者目标框架能升级就升级。&lt;/p&gt; &#xA;&lt;h3&gt;5. 看了源码，发现模型定义里很多同样的代码是复制粘贴的，为什么不使用面向对象中的继承？&lt;/h3&gt; &#xA;&lt;p&gt;关于这点得吐槽微信提供的 API 了，很显然微信内部也是很多个 Team 在共同开发，每个 Team、甚至每个人的字段命名风格、约束条件、接口规则都大相径庭。就连微信支付虽然 v3 版 API 号称是 “RESTful” 的，却也没个统一标准。&lt;/p&gt; &#xA;&lt;p&gt;举个例子，以分页查询为例，看似字段相同，都由 &lt;em&gt;offset&lt;/em&gt;、&lt;em&gt;cursor&lt;/em&gt;、&lt;em&gt;page&lt;/em&gt;、&lt;em&gt;limit&lt;/em&gt; + &lt;em&gt;data&lt;/em&gt;、&lt;em&gt;total_count&lt;/em&gt;、&lt;em&gt;next_cursor&lt;/em&gt; 这几个字段构成，但某些接口的 &lt;em&gt;offset&lt;/em&gt;、&lt;em&gt;cursor&lt;/em&gt;、&lt;em&gt;page&lt;/em&gt;、&lt;em&gt;limit&lt;/em&gt; 字段是可选参数，某些却是必填项；某些 &lt;em&gt;page&lt;/em&gt; 值从 &lt;code&gt;0&lt;/code&gt; 起始，某些却是从 &lt;code&gt;1&lt;/code&gt; 起始；某些接口的 &lt;em&gt;data&lt;/em&gt;、&lt;em&gt;total_count&lt;/em&gt;、&lt;em&gt;next_cursor&lt;/em&gt; 字段一定会返回，某些却是一定不返回，某些只在特定条件下返回。一共十几个分页查询的接口，却有七八种分页的数据结构，这种情况下很难抽象出一个公共的基类出来。&lt;/p&gt; &#xA;&lt;p&gt;除此之外，同样一个东西在不同接口里竟然拼法不一样；同样是表示数组有的是 JSON、有的却是字符串；诸如此类“奇葩”的情况很多很多。&lt;/p&gt; &#xA;&lt;p&gt;本项目已经尽可能在条件允许的范围内抽象出了一些公共基类、并封装了各种奇怪场景下的自定义 JsonConverter。&lt;/p&gt; &#xA;&lt;h3&gt;6. 所有 API 都经过了测试吗？&lt;/h3&gt; &#xA;&lt;p&gt;由于微信的产品业务线众多，很多业务也需要前置条件才能继续，截至目前本项目已封装超过 2000 余个 API，虽然同时也编写了若干单元测试用例，但与数量庞大的 API 相比仍远远不够。&lt;/p&gt; &#xA;&lt;p&gt;本项目严格按照微信官方提供的开发文档进行封装，并利用自动化工具保证封装结果的正确。但微信的文档本身质量很低，所以存在错误在所难免。&lt;/p&gt; &#xA;&lt;p&gt;因为微信更新 API 很频繁，对于微信支付或企业微信这种有提供官方更新日志的，本项目会定期查阅更新；其他平台经常会悄悄地更新一波、让所有人懵逼。如果你在使用中遇到了因接口或模型定义错误而产生的问题，欢迎提出 Issue。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;使用案例&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;项目名称&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;项目简介&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;项目地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CoreShop&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;核心商城系统：支持可视化布局的 .NET 商城系统。&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://gitee.com/CoreUnion/CoreShop&#34;&gt;&lt;img src=&#34;https://gitee.com/CoreUnion/CoreShop/badge/star.svg?title=Stars&#34; alt=&#34;Gitee Stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Admin.NET&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;通用权限开发框架：整合最新技术，模块插件式开发，前后端分离，开箱即用。&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://gitee.com/zuohuaijun/Admin.NET&#34;&gt;&lt;img src=&#34;https://gitee.com/zuohuaijun/Admin.NET/badge/star.svg?title=Stars&#34; alt=&#34;Gitee Stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;注：以上案例均来自第三方，本项目不对其项目做任何保证，仅作列举展示。如果你有项目也使用了本库、希望加到案例列表中，可以在 Issue 中提出。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;参与贡献&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub Repo：&lt;a href=&#34;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat.git&#34;&gt;https://github.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat.git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitee Repo：&lt;a href=&#34;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat.git&#34;&gt;https://gitee.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat.git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;以上仓库地址同步更新，均可接受 Issue 或 Pull Request。&lt;/p&gt; &#xA;&lt;p&gt;如何参与贡献请参阅 &lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;p&gt;详细更新说明请参阅 &lt;a href=&#34;https://raw.githubusercontent.com/fudiwei/DotNetCore.SKIT.FlurlHttpClient.Wechat/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SunnyDesignor/PowerfulWindSlickedBackHairCS-LX_Improve</title>
    <updated>2023-07-02T01:32:17Z</updated>
    <id>tag:github.com,2023-07-02:/SunnyDesignor/PowerfulWindSlickedBackHairCS-LX_Improve</id>
    <link href="https://github.com/SunnyDesignor/PowerfulWindSlickedBackHairCS-LX_Improve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PowerfulWindSlickedBackHair CS-LX Improve&lt;/h1&gt; &#xA;&lt;h2&gt;强 风 大 窗 口&lt;/h2&gt; &#xA;&lt;p&gt;b站刷到的视频，感觉有意思，程序原作者说源码不小心搞丢了，好在可以反编译，这是反编译完成的项目&lt;/p&gt; &#xA;&lt;p&gt;除了反编译还进行了以下改进：&lt;/p&gt; &#xA;&lt;h4&gt;1、字体加入资源文件，解决系统没有安装相应字体，导致字幕变成默认宋体&lt;/h4&gt; &#xA;&lt;h4&gt;2、删除exe.config，只要有安装framework 4.7.2或以上就能正常运行，一般win10或以上自带不用再安装&lt;/h4&gt; &#xA;&lt;h4&gt;3、打开程序时，自动最小化其他窗口&lt;/h4&gt; &#xA;&lt;h4&gt;4、现在整个桌面也会随背景变色，效果更好（开了第三方壁纸软件可能变不了）&lt;/h4&gt; &#xA;&lt;p&gt;还有一些其他小变动。 如果音画不同步，可以调offset.txt的数值，第一个数值默认17，数值越大窗口速率越快，第二个数值默认0，调整声音提前播放毫秒数。&lt;/p&gt; &#xA;&lt;h3&gt;使用方法&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有些来访问的观众第一次用GitHub，这里简单介绍一下如何使用&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;点绿色按钮Code，再点download zip下载，这个步骤所有github项目通用&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/SunnyDesignor/PowerfulWindSlickedBackHairCS-LX_Improve/assets/50539661/db85914c-2f22-4f28-bd46-24406e6507eb&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;解压下载完的zip，找到bin/Debug/目录下的exe双击运行即可开启狂风&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;B站视频：&lt;a href=&#34;https://www.bilibili.com/video/BV1Kz4y1p7sz&#34;&gt;https://www.bilibili.com/video/BV1Kz4y1p7sz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;原作者：&lt;a href=&#34;https://github.com/CS-LX&#34;&gt;https://github.com/CS-LX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;反编译重建/改进：&lt;a href=&#34;https://space.bilibili.com/286746249&#34;&gt;https://space.bilibili.com/286746249&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>