<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-16T01:30:45Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lilxyzw/lilAvatarUtils</title>
    <updated>2023-03-16T01:30:45Z</updated>
    <id>tag:github.com,2023-03-16:/lilxyzw/lilAvatarUtils</id>
    <link href="https://github.com/lilxyzw/lilAvatarUtils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilities for avatar modification.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lilAvatarUtils&lt;/h1&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Please install by &lt;strong&gt;one&lt;/strong&gt; of the following methods.&lt;/p&gt; &#xA;&lt;h3&gt;Unitypackage&lt;/h3&gt; &#xA;&lt;p&gt;Download the unitypackage from &lt;a href=&#34;https://github.com/lilxyzw/lilAvatarUtils/releases&#34;&gt;releases&lt;/a&gt; and import it in Unity.&lt;/p&gt; &#xA;&lt;h3&gt;UPM&lt;/h3&gt; &#xA;&lt;p&gt;Import the following Git URL in UPM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/lilxyzw/lilAvatarUtils.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;VPM CLI&lt;/h3&gt; &#xA;&lt;p&gt;Add my &lt;a href=&#34;https://github.com/lilxyzw/vpm-repos&#34;&gt;repos&lt;/a&gt; and type the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vpm add package jp.lilxyzw.avatar-utils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Window&lt;/h2&gt; &#xA;&lt;p&gt;Opening a window from &lt;code&gt;Window/_lil/AvatarUtils&lt;/code&gt;, and set the avatar to display assets.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;   &lt;th&gt;Operation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sort&lt;/td&gt; &#xA;   &lt;td&gt;Left click labels&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Toggle visibility&lt;/td&gt; &#xA;   &lt;td&gt;Right click labels&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resize&lt;/td&gt; &#xA;   &lt;td&gt;Left click the edge of labels&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search&lt;/td&gt; &#xA;   &lt;td&gt;Changing the fields below the labels&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filter&lt;/td&gt; &#xA;   &lt;td&gt;Checking the leftmost check box&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Asset properties can sometimes be edited. After changing properties, you can press &lt;code&gt;Apply&lt;/code&gt; to apply the change, or &lt;code&gt;Revert&lt;/code&gt; to revert to the previous value.&lt;/p&gt; &#xA;&lt;h3&gt;Textures&lt;/h3&gt; &#xA;&lt;p&gt;Textures used in the avatar. Open the foldout to see materials that reference textures, press &lt;code&gt;Remove references&lt;/code&gt; to remove all references.&lt;/p&gt; &#xA;&lt;h3&gt;Materials&lt;/h3&gt; &#xA;&lt;p&gt;Materials used by the avatar. After changing materials, you can press &lt;code&gt;Apply&lt;/code&gt; to replace materials. Open the foldout to see the &lt;code&gt;Renderer&lt;/code&gt;s and &lt;code&gt;AnimationClip&lt;/code&gt;s that reference textures.&lt;/p&gt; &#xA;&lt;h3&gt;Renderers&lt;/h3&gt; &#xA;&lt;p&gt;Renderers in the avatar.&lt;/p&gt; &#xA;&lt;h3&gt;PhysBones&lt;/h3&gt; &#xA;&lt;p&gt;PhysBones in the avatar.&lt;/p&gt; &#xA;&lt;h3&gt;Lighting&lt;/h3&gt; &#xA;&lt;p&gt;This tab is for checking avatar lighting. You can also see what it looks like when the shader is blocked by VRChat&#39;s safety.&lt;/p&gt; &#xA;&lt;h3&gt;Utils&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clean up Materials&lt;/td&gt; &#xA;   &lt;td&gt;Remove unused properties and shader keywords from materials&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clean up AnimatorControllers&lt;/td&gt; &#xA;   &lt;td&gt;Remove unused sub assets from AnimatorControllers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove Missing Components&lt;/td&gt; &#xA;   &lt;td&gt;Remove components that have no scripts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>atteneder/glTFast</title>
    <updated>2023-03-16T01:30:45Z</updated>
    <id>tag:github.com,2023-03-16:/atteneder/glTFast</id>
    <link href="https://github.com/atteneder/glTFast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Efficient glTF 3D import / export package for Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;glTFast for Unity&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/Images/unity-gltf-logos.png&#34; alt=&#34;Unity and glTF logos side by side&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openupm.com/packages/com.atteneder.gltfast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/com.atteneder.gltfast?label=openupm&amp;amp;registry_uri=https://package.openupm.com&#34; alt=&#34;openupm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/atteneder/glTFast/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/atteneder/glTFast&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/atteneder/glTFast/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/atteneder/glTFast&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/Images/badge_linecoverage.svg?sanitize=true&#34; alt=&#34;Code coverage result&#34; title=&#34;Code coverage result badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;glTFast&lt;/em&gt; enables use of &lt;a href=&#34;https://www.khronos.org/gltf&#34;&gt;glTF™ (GL Transmission Format)&lt;/a&gt; asset files in &lt;a href=&#34;https://unity.com&#34;&gt;Unity&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It focuses on speed, memory efficiency and a small build footprint while also providing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://www.khronos.org/registry/glTF/specs/2.0/glTF-2.0.html&#34;&gt;glTF 2.0 specification&lt;/a&gt; compliance&lt;/li&gt; &#xA; &lt;li&gt;Ease of use&lt;/li&gt; &#xA; &lt;li&gt;Robustness and Stability&lt;/li&gt; &#xA; &lt;li&gt;Customization and extensibility for advanced users&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/atteneder/glTFastDemo&#34;&gt;demo project&lt;/a&gt; and try the &lt;a href=&#34;https://gltf.pixel.engineer&#34;&gt;WebGL Demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;glTFast&lt;/em&gt; supports the full &lt;a href=&#34;https://www.khronos.org/registry/glTF/specs/2.0/glTF-2.0.html&#34;&gt;glTF 2.0 specification&lt;/a&gt; and many extensions. It works with Universal, High Definition and the Built-In Render Pipelines on all platforms.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/features.md&#34;&gt;comprehensive list of supported features and extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Workflows&lt;/h3&gt; &#xA;&lt;p&gt;There are four use-cases for glTF within Unity&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ImportRuntime.md&#34;&gt;Runtime Import/Loading&lt;/a&gt; in games/applications&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ImportEditor.md&#34;&gt;Editor Import&lt;/a&gt; (i.e. import assets at design-time)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ExportRuntime.md&#34;&gt;Runtime Export&lt;/a&gt; (save and share dynamic, user-generated 3D content)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ExportEditor.md&#34;&gt;Editor Export&lt;/a&gt; (Unity as glTF authoring tool)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/index.md#workflows&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/Images/Unity-glTF-workflows.png&#34; alt=&#34;Schematic diagram of the four glTF workflows&#34; title=&#34;The four glTF workflows&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about the workflows in the &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/index.md#workflows&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install is to download and open the &lt;a href=&#34;https://package-installer.glitch.me/v1/installer/OpenUPM/com.atteneder.gltfast?registry=https%3A%2F%2Fpackage.openupm.com&amp;amp;scope=com.atteneder&#34;&gt;Installer Package&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It runs a script that installs &lt;em&gt;glTFast&lt;/em&gt; via a &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-scoped.html&#34;&gt;scoped registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards &lt;em&gt;glTFast&lt;/em&gt; and further, optional packages are listed in the &lt;em&gt;Package Manager&lt;/em&gt; (under &lt;em&gt;My Registries&lt;/em&gt;) and can be installed and updated from there.&lt;/p&gt; &#xA;&lt;h3&gt;Optional Packages&lt;/h3&gt; &#xA;&lt;p&gt;There are some related package that improve &lt;em&gt;glTFast&lt;/em&gt; by extending its feature set.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atteneder/DracoUnity&#34;&gt;Draco 3D Data Compression Unity Package&lt;/a&gt; (provides support for &lt;a href=&#34;https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression&#34;&gt;KHR_draco_mesh_compression&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atteneder/KtxUnity&#34;&gt;KTX/Basis Texture Unity Package&lt;/a&gt; (provides support for &lt;a href=&#34;https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu&#34;&gt;KHR_texture_basisu&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.meshopt.decompress@0.1/manual/index.html&#34;&gt;&lt;em&gt;meshoptimizer decompression for Unity&lt;/em&gt;&lt;/a&gt; (provides support for &lt;a href=&#34;https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Vendor/EXT_meshopt_compression&#34;&gt;EXT_meshopt_compression&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;glTFast&lt;/em&gt; 5.x requires Unity 2019.3 or newer. For older Unity versions see &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/gltfast-1.md&#34;&gt;Legacy Installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can load a glTF asset from an URL or a file path.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime Loading via Component&lt;/h3&gt; &#xA;&lt;p&gt;Add a &lt;code&gt;GltfAsset&lt;/code&gt; component to a GameObject.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/Images/gltfasset_component.png&#34; alt=&#34;GltfAsset component&#34; title=&#34;Inspector showing a GltfAsset component added to a GameObject&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Runtime Loading via Script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;var gltf = gameObject.AddComponent&amp;lt;GLTFast.GltfAsset&amp;gt;();&#xA;gltf.url = &#34;https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/Duck/glTF/Duck.gltf&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ImportRuntime.md#runtime-loading-via-script&#34;&gt;Runtime Loading via Script&lt;/a&gt; in the documentation for more details and instructions how to &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ImportRuntime.md#customize-loading-behavior&#34;&gt;customize the loading behaviour&lt;/a&gt; via script.&lt;/p&gt; &#xA;&lt;h3&gt;Editor Import&lt;/h3&gt; &#xA;&lt;p&gt;Move or copy &lt;em&gt;glTF&lt;/em&gt; files into your project&#39;s &lt;em&gt;Assets&lt;/em&gt; folder, similar to other 3D formats:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/Images/import.gif&#34; alt=&#34;Editor Import&#34; title=&#34;Video showing glTF files being copied into the Assets folder and imported&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;glTFast&lt;/em&gt; will import them to native Unity prefabs and add them to the asset database.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ImportEditor.md&#34;&gt;Editor Import&lt;/a&gt; in the documentation for details.&lt;/p&gt; &#xA;&lt;h3&gt;Editor Export&lt;/h3&gt; &#xA;&lt;p&gt;The main menu has a couple of &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ExportEditor.md#export-from-the-main-menu&#34;&gt;entries for glTF export&lt;/a&gt; under &lt;code&gt;File &amp;gt; Export&lt;/code&gt; and glTFs can also be created &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ExportEditor.md#export-via-script&#34;&gt;via script&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Materials and Shader Variants&lt;/h3&gt; &#xA;&lt;p&gt;❗ IMPORTANT ❗&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;glTFast&lt;/em&gt; uses custom shader graphs that you &lt;strong&gt;have&lt;/strong&gt; to include in builds in order to make materials work. If materials are fine in the Unity Editor but not in builds, chances are some shaders (or variants) are missing.&lt;/p&gt; &#xA;&lt;p&gt;Read the section &lt;em&gt;Materials and Shader Variants&lt;/em&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/atteneder/glTFast/main/Documentation~/ProjectSetup.md#materials-and-shader-variants&#34;&gt;Documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;p&gt;Contributions in the form of ideas, comments, critique, bug reports, pull requests are highly appreciated. Feel free to get in contact if you consider using or improving &lt;em&gt;glTFast&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unity.com&#34;&gt;Unity Technologies&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.embibe.com&#34;&gt;Embibe&lt;/a&gt; for sponsoring the development of skin support! ❤️&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2020-2022 Andreas Atteneder, All Rights Reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use files in this repository except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Unity&lt;/em&gt; is a registered trademark of &lt;a href=&#34;https://unity.com&#34;&gt;Unity Technologies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Khronos®&lt;/em&gt; is a registered trademark and &lt;em&gt;glTF™&lt;/em&gt; is a trademark of &lt;a href=&#34;https://www.khronos.org&#34;&gt;The Khronos Group Inc&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>