<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-05T01:28:23Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>markjprice/cs12dotnet8</title>
    <updated>2023-12-05T01:28:23Z</updated>
    <id>tag:github.com,2023-12-05:/markjprice/cs12dotnet8</id>
    <link href="https://github.com/markjprice/cs12dotnet8" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for the Packt Publishing book titled &#34;C# 12 and .NET 8 - Modern Cross-Platform Development Fundamentals&#34; by Mark J. Price&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/errata/README.md&#34;&gt;Common Mistakes, Improvements, and Errata aka list of corrections&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;C# 12 and .NET 8 - Modern Cross-Platform Development Fundamentals, Eighth Edition&lt;/h1&gt; &#xA;&lt;p&gt;Repository for the Packt Publishing book titled &#34;C# 12 and .NET 8 - Modern Cross-Platform Development Fundamentals&#34; by Mark J. Price&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;What&#39;s new in this edition?&lt;/strong&gt; You can read a &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/whats-new-in-book.md&#34;&gt;detailed list of changes&lt;/a&gt; between the 7th and 8th editions. You can also read a set of very short articles I wrote about what&#39;s new in C# 12 and .NET 8: &lt;a href=&#34;https://www.linkedin.com/in/markjamesprice/recent-activity/articles/&#34;&gt;https://www.linkedin.com/in/markjamesprice/recent-activity/articles/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you have purchased the paperback or Kindle edition, then you can request a free PDF copy at the following link: &lt;a href=&#34;https://packt.link/free-ebook/9781837635870&#34;&gt;https://packt.link/free-ebook/9781837635870&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join the Packt community on Discord: &lt;a href=&#34;https://packt.link/csharp12dotnet8&#34;&gt;https://packt.link/csharp12dotnet8&lt;/a&gt;. After accepting the Discord invite, find the channel for this book named &lt;strong&gt;csharp12-dotnet8&lt;/strong&gt;: &lt;a href=&#34;https://discord.com/channels/963343534323269662/1166069438865473697&#34;&gt;https://discord.com/channels/963343534323269662/1166069438865473697&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For questions about book pricing, distribution, and so on, please contact the publisher Packt at the following email address: &lt;a href=&#34;mailto:customercare@packt.com&#34;&gt;customercare@packt.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;My author page on Amazon: &lt;a href=&#34;https://www.amazon.com/Mark-J-Price/e/B071DW3QGN/&#34;&gt;https://www.amazon.com/Mark-J-Price/e/B071DW3QGN/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;All of my books on Packt&#39;s website: &lt;a href=&#34;https://subscription.packtpub.com/search?query=mark+j.+price&#34;&gt;https://subscription.packtpub.com/search?query=mark+j.+price&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;My author page on Goodreads: &lt;a href=&#34;https://www.goodreads.com/author/show/14224500.Mark_J_Price&#34;&gt;https://www.goodreads.com/author/show/14224500.Mark_J_Price&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Write an Amazon review for this book: &lt;a href=&#34;https://packt.link/r/1837635870&#34;&gt;https://packt.link/r/1837635870&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chapters and code solutions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chapter 1 Hello C#, Welcome .NET! &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter01&#34;&gt;code/Chapter01&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chapter 2 Speaking C#: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter02&#34;&gt;code/Chapter02&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 3 Controlling Flow, Converting Types, and Handling Exceptions: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter03&#34;&gt;code/Chapter03&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 4 Writing, Debugging, and Testing Functions: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter04&#34;&gt;code/Chapter04&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 5 Building Your Own Types with Object-Oriented Programming: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter05&#34;&gt;code/Chapter05&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 6 Implementing Interfaces and Inheriting Classes: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter06&#34;&gt;code/Chapter06&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Libraries&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chapter 7 Packaging and Distributing .NET Types: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter07&#34;&gt;code/Chapter07&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 8 Working with Common .NET Types: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter08&#34;&gt;code/Chapter08&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 9 Working with Files, Streams, and Serialization: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter09&#34;&gt;code/Chapter09&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 10 Working with Data Using Entity Framework Core: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter10&#34;&gt;code/Chapter10&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 11 Querying and Manipulating Data Using LINQ: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/Chapter11&#34;&gt;code/Chapter11&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;ASP.NET Core web development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chapter 12 Introducing Web Development Using ASP.NET Core: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/PracticalApps&#34;&gt;code/PracticalApps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 13 Building Websites Using ASP.NET Core Razor Pages: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/PracticalApps/Northwind.Web&#34;&gt;code/PracticalApps/Northwind.Web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Online: Building Websites Using the Model-View-Controller Pattern: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/PracticalApps/Northwind.Mvc&#34;&gt;code/PracticalApps/Northwind.Mvc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 14 Building and Consuming Web Services: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/PracticalApps/Northwind.WebApi&#34;&gt;code/PracticalApps/Northwind.WebApi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 15 Building User Interface Components Using Blazor: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code/PracticalApps/Northwind.Blazor&#34;&gt;code/PracticalApps/Northwind.Blazor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code solutions for Visual Studio 2022 and Visual Studio Code&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/ch01-solution-folders.md&#34;&gt;Figures for all of the code solution folders&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Visual Studio Code now has an extension named &lt;strong&gt;C# Dev Kit&lt;/strong&gt; that includes a solution explorer so it can better work with Visual Studio 2022 solution files. Visual Studio 2022 for Windows, Visual Studio 2022 for Mac, and Visual Studio Code + C# Dev Kit can now use the same code solution files and projects for each chapter, found here: &lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/code&#34;&gt;/code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Visual Studio Code:&lt;/strong&gt; To use the chapter solution files with Visual Studio Code, install the &lt;strong&gt;C# Dev Kit&lt;/strong&gt; extension. Then in Visual Studio Code, open the &lt;code&gt;ChapterNN&lt;/code&gt; folder that contains a &lt;code&gt;ChapterNN.sln&lt;/code&gt; solution file and wait for the &lt;strong&gt;SOLUTION EXPLORER&lt;/strong&gt; pane to appear at the bottom of the &lt;strong&gt;EXPLORER&lt;/strong&gt;. You can drag and drop to reorder the panes to put &lt;strong&gt;SOLUTION EXPLORER&lt;/strong&gt; at the top. Learn more about C# Dev Kit at the following link: &lt;a href=&#34;https://devblogs.microsoft.com/visualstudio/announcing-csharp-dev-kit-for-visual-studio-code/&#34;&gt;https://devblogs.microsoft.com/visualstudio/announcing-csharp-dev-kit-for-visual-studio-code/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; If you use both Visual Studio 2022 and Visual Studio Code to open these solutions, be aware that the build process can conflict. This is because Visual Studio 2022 has its own non-standard build server that is different from the standard build server used by .NET SDK CLI. My recommendation is to only have a solution open in one code editor at any time. You should also clean the solutions between opening in different code editors. For example, after closing the solution in one code editor, I delete the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;obj&lt;/code&gt; folders before then opening in a different code editor.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Companion Book&lt;/h2&gt; &#xA;&lt;p&gt;I have written a companion book titled, &lt;em&gt;&lt;a href=&#34;https://github.com/markjprice/apps-services-net8&#34;&gt;Apps and Services with .NET 8&lt;/a&gt;&lt;/em&gt;, that is designed to follow on from where this book ends. You can also jump to related chapters in the second book to go deeper in topics of interest to go beyond the fundamentals, as shown in the following diagram:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/assets/B19586_17_03.png&#34; alt=&#34;Relationships between companion book chapters&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/assets/B19586_01_Pillars.png&#34; alt=&#34;Pillars of the .NET 8 Trilogy&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bonus content&lt;/h2&gt; &#xA;&lt;p&gt;The MVC chapter, appendix, and color figures are available to download as PDFs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/B19586_Online_Chapter.pdf&#34;&gt;Online Chapter - Building Websites Using the Model-View-Controller Pattern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/B19586_Appendix.pdf&#34;&gt;Appendix A, Answers to the Test Your Knowledge Questions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://static.packt-cdn.com/downloads/9781837635870_ColorImages.pdf&#34;&gt;Color images of the screenshots/diagrams used in this book&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Important&lt;/h2&gt; &#xA;&lt;p&gt;Corrections for typos and other mistakes and improvements like refactoring code. Useful links to other related material.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/command-lines.md&#34;&gt;Command-Lines&lt;/a&gt; page lists all commands as a single line that can be copied and pasted to make it easier to enter commands at the prompt.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/book-links.md&#34;&gt;Book Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/errata/README.md&#34;&gt;Common Mistakes, Improvements, and Errata aka list of corrections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markjprice/cs12dotnet8/main/docs/dotnet9.md&#34;&gt;Eighth edition&#39;s support for .NET 9&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Microsoft Certifications&lt;/h2&gt; &#xA;&lt;p&gt;Announcing the New Foundational C# Certification with freeCodeCamp: &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/announcing-foundational-csharp-certification/&#34;&gt;https://devblogs.microsoft.com/dotnet/announcing-foundational-csharp-certification/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft used to have professional exams and certifications for developers that covered skills like C# and ASP.NET. Sadly, they have retired them all. These days, the only developer-adjacent exams and certifications are for Azure or Power Platform, as you can see from the certification poster: &lt;a href=&#34;https://aka.ms/traincertposter&#34;&gt;https://aka.ms/traincertposter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft .NET community support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/platform/community&#34;&gt;.NET Developer Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techcommunity.microsoft.com/t5/net/ct-p/dotnet&#34;&gt;.NET Tech Community Forums for topic discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/answers/products/dotnet&#34;&gt;Q&amp;amp;A for .NET to get your questions answered&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/answers/topics/dotnet-csharp.html&#34;&gt;Technical questions about the C# programming language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://authors.packtpub.com/reviewers/&#34;&gt;If you&#39;d like to apply to be a reviewer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Interviews with me&lt;/h2&gt; &#xA;&lt;p&gt;Podcast interviews with me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnetcore.show/episode-117-our-perspectives-on-the-future-of-net-with-mark-j-price/&#34;&gt;The .NET Core Podcast - March 3, 2023&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jesseliberty.com/2022/12/10/mark-price-on-c-11-fixed/&#34;&gt;Yet Another Podcast with Jesse Liberty - December 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnetcore.show/episode-91-c-sharp-10-and-dotnet-6-with-mark-j-price/&#34;&gt;The .NET Core Podcast - February 4, 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jesseliberty.com/2021/05/16/mark-price-on-c9-and-net-6/&#34;&gt;Yet Another Podcast with Jesse Liberty - May 2021&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnetcore.show/episode-44-learning-net-core-with-mark-j-price/&#34;&gt;The .NET Core Podcast - February 7, 2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jesseliberty.com/2020/02/23/mark-price-c-net-core/&#34;&gt;Yet Another Podcast with Jesse Liberty - February 2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soundcloud.com/packt-podcasts/csharp-8-dotnet-core-3-the-evolution-of-the-microsoft-ecosystem&#34;&gt;Packt Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Written interviews with me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/book-interview-mark-price/?itm_source=infoq&amp;amp;itm_campaign=user_page&amp;amp;itm_medium=link&#34;&gt;C# 9 and .NET 5: Book Review and Q&amp;amp;A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.episerver.com/articles/q-and-a-with-mark-price&#34;&gt;Q&amp;amp;A with Episerver&#39;s Mark J. Price, author of C# 9 and .NET 5 - Modern Cross-Platform Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DaXcess/lethalcompany-vr-plugin</title>
    <updated>2023-12-05T01:28:23Z</updated>
    <id>tag:github.com,2023-12-05:/DaXcess/lethalcompany-vr-plugin</id>
    <link href="https://github.com/DaXcess/lethalcompany-vr-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collecting Scrap in VR&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚠️⚠️ NOT READY YET ⚠️⚠️&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The existence of this GitHub repository does not mean a working mod already exists, it&#39;s just non-functional source code at this time&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Lethal Company VR Mod&lt;/h1&gt; &#xA;&lt;p&gt;Collecting Scrap in VR&lt;/p&gt; &#xA;&lt;h2&gt;HDRP&lt;/h2&gt; &#xA;&lt;p&gt;HDRP out here really ruining our day. Check to see if we can apply performance upgrades using DLSS/FSR to allow the game to be playable in VR.&lt;/p&gt; &#xA;&lt;p&gt;Such a shame that this game uses HDRP it really seems like that wasn&#39;t necessary.&lt;/p&gt; &#xA;&lt;h2&gt;Motion Controls&lt;/h2&gt; &#xA;&lt;p&gt;Motion controls are currently being worked on in a seperate plugin which does not have a repository.&lt;/p&gt; &#xA;&lt;p&gt;Once enough advancements have been made on that front the code will be merged into this repo.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Complete controller support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Get the correct FOV based on the headset being used. It looks like Unity somehow knows this already, just gotta figure out how to extract it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Build a working XRRig (or feasible alternative), that correctly applies player rotation based on head rotation&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Maybe hand movement based on controller movement? Would be cool for flashlights and stuff. Will have to check how item pickup/interactions will work though.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Fix the item pickup/interact raycasting (currently still requires mouse input, even though it looks like nothing is happening)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Fix non-player cameras (spectating, ship leaving after death, etc)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Correctly display HUD by moving them to World Position and updating it&#39;s position/rotation based on HMD&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Check if we can prepare for a possible Il2Cpp version of the game. Currently the method patching transpilers will not work if the game were to be converted to Il2Cpp.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;(Optional) Controller haptics (e.g. vibrate when a Giant takes a step, when low health, when damaged, when in a panicked state etc).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Be able to interact with the terminal, either via Virtual Keyboard (must be custom made as this mod avoids explicitly using SteamVR in favor of complete OpenXR support) or some other custom UI that has some presets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Probably a whole lot more, expect this list to be updated frequently&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Helpful tools and documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sinai-dev/UnityExplorer&#34;&gt;Unity Explorer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.8/manual/index.html&#34;&gt;Unity OpenXR Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/xr_input.html&#34;&gt;Unity XR Inputs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.khronos.org/OpenXR/specs/1.0/html/xrspec.html&#34;&gt;OpenXR 1.0 Specification&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>