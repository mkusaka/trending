<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-28T01:30:53Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>torchgm/RoundedTB</title>
    <updated>2022-11-28T01:30:53Z</updated>
    <id>tag:github.com,2022-11-28:/torchgm/RoundedTB</id>
    <link href="https://github.com/torchgm/RoundedTB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Add margins, rounded corners and segments to your taskbars!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/272509873479221249/891555515799318568/unknown.png&#34; alt=&#34;RoundedTB&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RoundedTB&lt;/h1&gt; &#xA;&lt;h4&gt;Add margins, rounded corners and segments to your taskbars!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/31840547/134795141-76349eaf-12da-40f8-b2a0-d7b7c268d152.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How do I get it?&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to download RoundedTB is from the &lt;a href=&#34;https://www.microsoft.com/store/productId/9MTFTXSJ9M7F&#34;&gt;Microsoft Store&lt;/a&gt;. You can also download the latest version from the Releases tab, unzip it and run &lt;code&gt;RoundedTB.exe&lt;/code&gt;. If you&#39;re a madman, you can compile it yourself or check out the latest &lt;a href=&#34;https://nightly.link/torchgm/RoundedTB/workflows/ci/master/rtb-artifacts.zip&#34;&gt;Canary build&lt;/a&gt; (note these can be very unfinished, buggy and unstable).&lt;/p&gt; &#xA;&lt;h2&gt;To use&lt;/h2&gt; &#xA;&lt;h3&gt;Basic options&lt;/h3&gt; &#xA;&lt;p&gt;The simplest way to use RoundedTB is by simply entering a margin and corner radius.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Margin&lt;/strong&gt; - controls how many pixels to remove from each side of the taskbar, creating a margin around it that you can see and click through.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Corner Radius&lt;/strong&gt; - adjusts how round the corners of the taskbar should be.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced options&lt;/h3&gt; &#xA;&lt;p&gt;The advanced options allow for further customisation, at the cost of some user-friendliness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent Margins&lt;/strong&gt; - in the advanced settings, a &lt;kbd&gt;...&lt;/kbd&gt; button appears on the margin box. Click it to enable independent margins, which allow you to specify the margin for each side of the taskbar. You can also use negative values to hide the rounded corners for some sides, allowing you to &#34;attach&#34; the taskbar to different sides of the monitor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Mode (Windows 11)&lt;/strong&gt; - dynamic mode automatically resizes the taskbars to accommodate the number of icons in it, making the taskbar behave similarly to macOS&#39; Dock.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Split Mode (Windows 10)&lt;/strong&gt; - split mode is a simplified version of dynamic mode for Windows 10. Due to a more limited taskbar, dynamically resizing the taskbar isn&#39;t possible. However after some setup, split mode allows you to separate the taskbar from the system tray and resize it at will. I admit it&#39;s certainly not as cool as dynamic mode but for now it&#39;s better than nothing ðŸ¥º. For info on setting up, see the bottom of this readme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show System Tray&lt;/strong&gt; - this toggles whether or not the system tray, clock etc. is displayed in dynamic/split mode. It can be toggled at any time by pressing &lt;kbd&gt;Win&lt;/kbd&gt;+&lt;kbd&gt;F2&lt;/kbd&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TranslucentTB Compatibility&lt;/strong&gt; - due to a bug in Windows, apps that alter the composition of the taskbar don&#39;t allow RoundedTB&#39;s changes to show up automatically. Whilst I&#39;m currently not aware of a fix, I&#39;ve worked closely with &lt;a href=&#34;https://github.com/sylveon&#34;&gt;Sylveon&lt;/a&gt; to enable some level of compatibility between &lt;a href=&#34;https://github.com/TranslucentTB/TranslucentTB&#34;&gt;TranslucentTB&lt;/a&gt; and RoundedTB. This is experimental and &lt;em&gt;will&lt;/em&gt; flicker slightly. It requires TranslucentTB version 2021.5 to function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;About RoundedTB&lt;/strong&gt; - provides information about the current version of RoundedTB. The &#34;Debug&#34; section lets you open the config and log files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto-hiding is still incredibly experimental and may lead to a lot of flickering, especially with TranslucentTB compatibility or dynamic/split mode enabled. (&lt;a href=&#34;https://github.com/torchgm/RoundedTB/issues/36&#34;&gt;#36&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Rounded corners are not antialiased due to a Windows limitation. (&lt;a href=&#34;https://github.com/torchgm/RoundedTB/issues/4&#34;&gt;#4&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dynamic mode won&#39;t hide the left side of the taskbar if the taskbar alignment has never been changed. This can be worked around by changing the alignment to Left and back to Center. (&lt;a href=&#34;https://github.com/torchgm/RoundedTB/issues/98&#34;&gt;#98&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dynamic mode/split mode only work correctly when the taskbar is horizontal at the top/bottom of the screen.&lt;/li&gt; &#xA; &lt;li&gt;Split mode on Windows 10 only supports the main taskbar, secondary taskbars will not be split.&lt;/li&gt; &#xA; &lt;li&gt;When using dynamic mode, the taskbar may occasionally become too large, too small or not update. This can usually be fixed by moving a window to or from that monitor or briefly changing the taskbar alignment. These issues will be reduced in upcoming updates, don&#39;t worry! I just need to refactor a lot of code first.&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with taskbar mods outside of TranslucentTB version 2021.5 is not currently guaranteed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other info&lt;/h2&gt; &#xA;&lt;p&gt;RoundedTB is just a hobby of mine, and I&#39;m certainly not an expert in this field, so I&#39;m really sorry if you encounter a bug! If anything breaks catastrophically, press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Esc&lt;/kbd&gt; to open Task Manager, end RoundedTB and then restart Explorer. At worst, just reboot your PC. RoundedTB makes no permanent changes (though it will run on startup if you enable it from the tray icon), so restarting should clear any issues.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to let me know about any bugs by filing an issue so I can look into it. Alternatively if you want to discuss RoundedTB, get some insider sneak-peeks, need some assistance or just want to see what I&#39;m up to, then feel free to join the &lt;a href=&#34;https://discord.gg/wYQJd8VGSB&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring split mode on Windows 10&lt;/h3&gt; &#xA;&lt;p&gt;Split mode has a couple of limitations and requires a small amount of setup to get working properly.&lt;/p&gt; &#xA;&lt;h4&gt;Limitations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Split mode doesn&#39;t resize itself automatically. This feature will be coming to RoundedTB for Windows 10 in the future.&lt;/li&gt; &#xA; &lt;li&gt;Toolbars are not compatible with split mode currently, and will need to be disabled apart from one. This is because toolbars are used to mark the &#34;empty&#34; space on the taskbar.&lt;/li&gt; &#xA; &lt;li&gt;Split mode only works when the taskbar is horizontal at the top or bottom of the screen, and on the primary monitor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Right-click the taskbar and disable &#34;Lock the taskbar&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Right-click it again and turn off any existing toolbars.&lt;/li&gt; &#xA; &lt;li&gt;Right-click a third time, select Toolbars &amp;gt; Desktop.&lt;/li&gt; &#xA; &lt;li&gt;Use the small &lt;kbd&gt;||&lt;/kbd&gt; handle to resize the taskbar as you please.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Watch the following video for a guide on setting up split mode:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/31840547/134795022-1312d011-40f2-4641-8c8d-3d6c0e752747.mp4&#34;&gt;https://user-images.githubusercontent.com/31840547/134795022-1312d011-40f2-4641-8c8d-3d6c0e752747.mp4&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>architdate/PKHeX-Plugins</title>
    <updated>2022-11-28T01:30:53Z</updated>
    <id>tag:github.com,2022-11-28:/architdate/PKHeX-Plugins</id>
    <link href="https://github.com/architdate/PKHeX-Plugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugins for PKHeX&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;This project uses &lt;code&gt;PKHeX.Core&lt;/code&gt; and PKHeX&#39;s &lt;code&gt;IPlugin&lt;/code&gt; interface to add enhancements to the PKHeX program, namely &lt;strong&gt;Auto&lt;/strong&gt;mated &lt;strong&gt;Mod&lt;/strong&gt;ifications to simplify creation of legal PokÃ©mon. Please refer to the &lt;a href=&#34;https://github.com/architdate/PKHeX-Plugins/wiki&#34;&gt;Wiki&lt;/a&gt; for more information regarding the functionalities provided by this project. Most queries are answered on the wiki!&lt;/p&gt; &#xA;&lt;p&gt;This project is owned by &lt;a href=&#34;https://github.com/architdate&#34;&gt;@architdate&lt;/a&gt; (Discord: thecommondude#8240) and &lt;a href=&#34;https://github.com/kwsch&#34;&gt;@kwsch&lt;/a&gt; (Discord: Kurt#6024).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pKuElH0hWWA&#34;&gt;Feature Demonstration Video&lt;/a&gt; by AAron#2420.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;This project requires an IDE that supports compiling .NET based code (Ideally .NET 4.6+). Recommended IDE is Visual Studio 2022.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Regular Builds&lt;/strong&gt;&lt;br&gt; Regular builds will usually succeed unless there are changes that are incompatible with the NuGet &lt;a href=&#34;https://www.nuget.org/packages/PKHeX.Core&#34;&gt;PKHeX.Core&lt;/a&gt; package dependency specified in the &lt;code&gt;.csproj&lt;/code&gt; files of the projects. If building fails, use the bleeding edge method instead.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the PKHeX-Plugins repository using: &lt;code&gt;$ git clone https://github.com/architdate/PKHeX-Plugins.git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Right-click on the solution and click &lt;code&gt;Rebuild All&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;These DLLs should be placed into a &lt;code&gt;plugins&lt;/code&gt; directory where the PKHeX executable is. You may also combine these DLL files using ILMerge. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The compiled DLLs for AutoLegality will be in the &lt;code&gt;AutoLegalityMod/bin/Release/net46&lt;/code&gt; directory: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;AutoModPlugins.dll&lt;/li&gt; &#xA;     &lt;li&gt;LibUsbDotNet.LibUsbDotNet.dll&lt;/li&gt; &#xA;     &lt;li&gt;NtrSharp.dll&lt;/li&gt; &#xA;     &lt;li&gt;PKHeX.Core.AutoMod.dll&lt;/li&gt; &#xA;     &lt;li&gt;PKHeX.Core.Enhancements.dll&lt;/li&gt; &#xA;     &lt;li&gt;PKHeX.Core.Injection.dll&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;If you want to use QRPlugins, you will need additional DLLs from &lt;code&gt;QRPlugins/bin/Release/net46&lt;/code&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;BouncyCastle.CryptoExt.dll&lt;/li&gt; &#xA;     &lt;li&gt;QRCoder.dll&lt;/li&gt; &#xA;     &lt;li&gt;QRPlugins.dll&lt;/li&gt; &#xA;     &lt;li&gt;zxing.dll&lt;/li&gt; &#xA;     &lt;li&gt;zxing.presentation.dll&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bleeding Edge Builds&lt;/strong&gt;&lt;br&gt; Use this build method only if the regular builds fail. The AppVeyor CI will always use the bleeding edge build method. More details regarding this can be seen in the &lt;a href=&#34;https://github.com/architdate/PKHeX-Plugins/raw/master/appveyor.yml&#34;&gt;appveyor.yml&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the PKHeX repository using: &lt;code&gt;$ git clone https://github.com/kwsch/PKHeX.git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone the PKHeX-Plugins repository using: &lt;code&gt;$ git clone https://github.com/architdate/PKHeX-Plugins.git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open the PKHeX solution, change your environment to &lt;code&gt;Release&lt;/code&gt;, right-click on the &lt;code&gt;PKHeX.Core&lt;/code&gt; project, and click &lt;code&gt;Rebuild&lt;/code&gt; to build the project.&lt;/li&gt; &#xA; &lt;li&gt;Open the PKHeX-Plugins solution and right-click to &lt;code&gt;Restore NuGet Packages&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Next, replace the most recent NuGet packages with the newly-built &lt;code&gt;PKHeX.Core.dll&lt;/code&gt; files. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy the &lt;code&gt;PKHeX.Core.dll&lt;/code&gt; file located in &lt;code&gt;PKHeX.Core/bin/Release/net46&lt;/code&gt; the following folders: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;C:/Users/%USERNAME%/.nuget/packages/pkhex.core/YY.MM.DD/lib/net46&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Copy the &lt;code&gt;PKHeX.Core.dll&lt;/code&gt; file located in &lt;code&gt;PKHeX.Core/bin/Release/netstandard2.0&lt;/code&gt; to the following folders: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;C:/Users/%USERNAME%/.nuget/packages/pkhex.core/YY.MM.DD/lib/netstandard2.0&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Right click the PKHeX-Plugins solution and &lt;code&gt;Rebuild All&lt;/code&gt;. This should build the mod with the latest &lt;code&gt;PKHeX.Core&lt;/code&gt; version so that it can be used with the latest commit of PKHeX.&lt;/li&gt; &#xA; &lt;li&gt;The compiled DLLs will be in the same location as with the regular builds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use the plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a folder named &lt;code&gt;plugins&lt;/code&gt; in the same directory as PKHeX.exe.&lt;/li&gt; &#xA; &lt;li&gt;Put the compiled plugins from this project in the &lt;code&gt;plugins&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Start PKHeX.exe.&lt;/li&gt; &#xA; &lt;li&gt;The plugins should be available for use in &lt;code&gt;Tools &amp;gt; Auto Legality Mod&lt;/code&gt; drop-down menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support Server&lt;/h2&gt; &#xA;&lt;p&gt;Come join the dedicated Discord server for this mod! Ask questions, give suggestions, get help, or just hang out. Don&#39;t be shy, we don&#39;t bite:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/tDMvSRv&#34;&gt;&lt;img src=&#34;https://canary.discordapp.com/api/guilds/401014193211441153/widget.png?style=banner2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute to the repository, you can submit a pull request to the repository. Try to follow a format similar to the current codebase. All contributions are greatly appreciated! If you would like to discuss possible contributions without using GitHub, please contact us on the support server above.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Repository Owners&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/architdate&#34;&gt;architdate (thecommondude)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kwsch&#34;&gt;kwsch (Kaphotics)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Credit must be given where due...&lt;/strong&gt; This project would not be as amazing without the help of the following people who have helped me since the original &lt;a href=&#34;https://github.com/architdate/PKHeX-Auto-Legality-Mod&#34;&gt;Auto-Legality-Mod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kwsch&#34;&gt;@kwsch&lt;/a&gt; for providing the IPlugin interface in PKHeX, which allows loading of this project&#39;s Plugin DLL files. Also for the support provided in the support server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berichan&#34;&gt;@berichan&lt;/a&gt; for adding USB-Botbase support to LiveHeX.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soopercool101&#34;&gt;@soopercool101&lt;/a&gt; for many improvements to Smogon StrategyDex imports and various other fixes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lusamine&#34;&gt;@Lusamine&lt;/a&gt; for all the help with stress testing the code with wacky sets!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ReignOfComputer&#34;&gt;@ReignOfComputer&lt;/a&gt; for the sets found in &lt;a href=&#34;https://github.com/ReignOfComputer/RoCs-PC&#34;&gt;RoCs-PC&lt;/a&gt; which are used for unit testing.&lt;/li&gt; &#xA; &lt;li&gt;TORNADO for help with test cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rino6357&#34;&gt;@Rino6357&lt;/a&gt; and &lt;a href=&#34;https://github.com/crzyc&#34;&gt;@crzyc&lt;/a&gt; for initial help with the Wiki.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hp3721&#34;&gt;@hp3721&lt;/a&gt; for help with adding localization based on PKHeX&#39;s implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bappsack&#34;&gt;@Bappsack&lt;/a&gt; for his help on Discord in voice chats!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chenzw95&#34;&gt;@chenzw95&lt;/a&gt; for help with integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BernardoGiordano&#34;&gt;@BernardoGiordano&lt;/a&gt; for many ideas on improving speed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olliz0r&#34;&gt;@olliz0r&lt;/a&gt; for developing and maintaining &lt;code&gt;sys-botbase&lt;/code&gt; as well which is necessary for LiveHeX to work.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SteveCookTU&#34;&gt;@SteveCookTU&lt;/a&gt; and &lt;a href=&#34;https://github.com/olliz0r&#34;&gt;@olliz0r&lt;/a&gt; for &lt;a href=&#34;https://github.com/olliz0r/Ledybot/tree/master/LedyLib&#34;&gt;LedyLib&lt;/a&gt; from which a lot of the NTR processing code is liberally referenced.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fishguy6564&#34;&gt;@fishguy6564&lt;/a&gt; for creating &lt;code&gt;USB-Botbase&lt;/code&gt; (by extending sys-botbase).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flaticon.com/&#34;&gt;FlatIcon&lt;/a&gt; for their icons. Author credits (Those Icons, Pixel perfect).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectpokemon/&#34;&gt;Project PokÃ©mon&lt;/a&gt; for their Mystery Gift Event Gallery.&lt;/li&gt; &#xA; &lt;li&gt;And all the countless users who have helped improve this project with ideas and suggestions!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>FastEndpoints/FastEndpoints</title>
    <updated>2022-11-28T01:30:53Z</updated>
    <id>tag:github.com,2022-11-28:/FastEndpoints/FastEndpoints</id>
    <link href="https://github.com/FastEndpoints/FastEndpoints" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A light-weight REST API development framework for ASP.Net 6 and newer.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dj-nitehawk/FastEndpoints/raw/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dj-nitehawk/FastEndpoints?color=blue&amp;amp;label=license&amp;amp;logo=Github&amp;amp;style=flat-square&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FastEndpoints&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/FastEndpoints?label=version&amp;amp;logo=NuGet&amp;amp;style=flat-square&#34; alt=&#34;nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/RyanGunner/FastEndpoints/_build/latest?definitionId=7&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/RyanGunner/FastEndpoints/7?color=blue&amp;amp;label=tests&amp;amp;logo=Azure%20DevOps&amp;amp;style=flat-square&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FastEndpoints&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/FastEndpoints?color=blue&amp;amp;label=downloads&amp;amp;logo=NuGet&amp;amp;style=flat-square&#34; alt=&#34;nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yQZ4uvfF2E&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/933662816458645504?color=blue&amp;amp;label=discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;em&gt;ASP.NET Minimal APIs Made Easy...&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;strong&gt;FastEndpoints&lt;/strong&gt; is a developer friendly alternative to Minimal APIs &amp;amp; MVC&lt;/h2&gt; &#xA;&lt;p&gt;It nudges you towards the &lt;strong&gt;&lt;a href=&#34;https://deviq.com/design-patterns/repr-design-pattern&#34;&gt;REPR Design Pattern (Request-Endpoint-Response)&lt;/a&gt;&lt;/strong&gt; for convenient &amp;amp; maintainable endpoint creation with virtually no boilerplate.&lt;/p&gt; &#xA;&lt;p&gt;Performance is on par with Minimal APIs. It&#39;s faster, uses less memory and does around &lt;strong&gt;&lt;a href=&#34;https://fast-endpoints.com/benchmarks&#34;&gt;35k more requests per second&lt;/a&gt;&lt;/strong&gt; than a MVC Controller in our benchmarks.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation: &lt;a href=&#34;https://fast-endpoints.com&#34;&gt;https://fast-endpoints.com&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Please visit the official website for detailed documentation...&lt;/p&gt;</summary>
  </entry>
</feed>