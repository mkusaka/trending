<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-02T01:31:44Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnetcore/FreeSql</title>
    <updated>2023-03-02T01:31:44Z</updated>
    <id>tag:github.com,2023-03-02:/dotnetcore/FreeSql</id>
    <link href="https://github.com/dotnetcore/FreeSql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶Ñ .NET orm, C# orm, VB.NET orm, Mysql orm, Postgresql orm, SqlServer orm, Oracle orm, Sqlite orm, Firebird orm, ËææÊ¢¶ orm, ‰∫∫Â§ßÈáë‰ªì orm, Á•ûÈÄö orm, Áø∞È´ò orm, ÂçóÂ§ßÈÄöÁî® orm, ÂõΩ‰∫ß orm, Clickhouse orm, QuestDB orm, MsAccess orm.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; ü¶Ñ FreeSql &lt;/h1&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;FreeSql is a powerful O/RM component, supports .NET Core 2.1+, .NET Framework 4.0+, and Xamarin.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/member%20project%20of-NCC-9e20c9.svg?sanitize=true&#34; alt=&#34;Member project of .NET Core Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/FreeSql&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/FreeSql.svg?style=flat-square&#34; alt=&#34;nuget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/stats/packages/FreeSql?groupby=Version&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/FreeSql.svg?style=flat-square&#34; alt=&#34;stats&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dotnetcore/FreeSql/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/dotnetcore/FreeSql/master/README.zh-CN.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üõ† Support CodeFirst data migration.&lt;/li&gt; &#xA; &lt;li&gt;üíª Support DbFirst import entity class from database, or use &lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/DbFirst&#34;&gt;Generation Tool&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;‚õ≥ Support advanced type mapping, such as PostgreSQL array type, etc.&lt;/li&gt; &#xA; &lt;li&gt;üå≤ Support expression functions, and customizable analysis.&lt;/li&gt; &#xA; &lt;li&gt;üèÅ Support one-to-many and many-to-many navigation properties, include and lazy loading.&lt;/li&gt; &#xA; &lt;li&gt;üìÉ Support Read/Write separation, Splitting Table/Database, Global filters, Optimistic and pessimistic locker.&lt;/li&gt; &#xA; &lt;li&gt;üå≥ Support MySql/SqlServer/PostgreSQL/Oracle/Sqlite/Firebird/ËææÊ¢¶/‰∫∫Â§ßÈáë‰ªì/Á•ûËàüÈÄöÁî®/ÂçóÂ§ßÈÄöÁî®/Áø∞È´ò/ClickHouse/QuestDB/MsAccess, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;QQ GroupsÔºö&lt;strong&gt;561616019(available)&lt;/strong&gt;„ÄÅ4336577(full)„ÄÅ8578575(full)„ÄÅ52508226(full)&lt;/p&gt; &#xA;&lt;h2&gt;üìö Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.cnblogs.com/FreeSql/p/11531300.html&#34;&gt;Get started&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Query-Data&#34;&gt;Select&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Update-Data&#34;&gt;Update&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Insert-Data&#34;&gt;Insert&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Delete-Data&#34;&gt;Delete&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;FAQ&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e8%a1%a8%e8%be%be%e5%bc%8f%e5%87%bd%e6%95%b0&#34;&gt;Expression&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/CodeFirst&#34;&gt;CodeFirst&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/2881099/FreeSql/wiki/DbFirst&#34;&gt;DbFirst&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e8%bf%87%e6%bb%a4%e5%99%a8&#34;&gt;Filters&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/2881099/FreeSql/wiki/AOP&#34;&gt;AOP&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Repository-layer&#34;&gt;Repository&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Unit-of-Work&#34;&gt;UnitOfWork&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/DbContext&#34;&gt;DbContext&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/2881099/FreeSql/wiki/ADO&#34;&gt;ADO&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb&#34;&gt;Read/Write&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e5%88%86%e8%a1%a8%e5%88%86%e5%ba%93&#34;&gt;Splitting Table&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%E9%AA%9A%E6%93%8D%E4%BD%9C&#34;&gt;Hide tech&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e6%9b%b4%e6%96%b0%e6%97%a5%e5%bf%97&#34;&gt;&lt;em&gt;Update Notes&lt;/em&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please select a development mode:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use FreeSql, keep the original usage.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/Repository&#34;&gt;FreeSql.Repository&lt;/a&gt;, Repository + UnitOfWork.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/DbContext&#34;&gt;FreeSql.DbContext&lt;/a&gt;, Like efcore.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/dotnetcore/FreeSql/tree/master/Examples/base_entity&#34;&gt;FreeSql.BaseEntity&lt;/a&gt;, Simple mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Some open source projects that use FreeSql:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhontai/Admin.Core&#34;&gt;Zhontai.net Management System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luoyunchong/lin-cms-dotnetcore&#34;&gt;A simple CMS implemented by .NET5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/dotnetcore/FreeSql/raw/master/functions13.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Quick start&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dotnet add package FreeSql.Provider.Sqlite&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;static IFreeSql fsql = new FreeSql.FreeSqlBuilder()&#xA;  .UseConnectionString(FreeSql.DataType.Sqlite, @&#34;Data Source=document.db&#34;)&#xA;  .UseAutoSyncStructure(true) //automatically synchronize the entity structure to the database&#xA;  .Build(); //be sure to define as singleton mode&#xA;&#xA;class Song {&#xA;  [Column(IsIdentity = true)]&#xA;  public int Id { get; set; }&#xA;  public string Title { get; set; }&#xA;  public string Url { get; set; }&#xA;  public DateTime CreateTime { get; set; }&#xA;  &#xA;  public ICollection&amp;lt;Tag&amp;gt; Tags { get; set; }&#xA;}&#xA;class Song_tag {&#xA;  public int Song_id { get; set; }&#xA;  public Song Song { get; set; }&#xA;  &#xA;  public int Tag_id { get; set; }&#xA;  public Tag Tag { get; set; }&#xA;}&#xA;class Tag {&#xA;  [Column(IsIdentity = true)]&#xA;  public int Id { get; set; }&#xA;  public string Name { get; set; }&#xA;  &#xA;  public int? Parent_id { get; set; }&#xA;  public Tag Parent { get; set; }&#xA;  &#xA;  public ICollection&amp;lt;Song&amp;gt; Songs { get; set; }&#xA;  public ICollection&amp;lt;Tag&amp;gt; Tags { get; set; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üîé Query&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;//OneToOne„ÄÅManyToOne&#xA;fsql.Select&amp;lt;Tag&amp;gt;().Where(a =&amp;gt; a.Parent.Parent.Name == &#34;English&#34;).ToList();&#xA;&#xA;//OneToMany&#xA;fsql.Select&amp;lt;Tag&amp;gt;().IncludeMany(a =&amp;gt; a.Tags, then =&amp;gt; then.Where(sub =&amp;gt; sub.Name == &#34;foo&#34;)).ToList();&#xA;&#xA;//ManyToMany&#xA;fsql.Select&amp;lt;Song&amp;gt;()&#xA;  .IncludeMany(a =&amp;gt; a.Tags, then =&amp;gt; then.Where(sub =&amp;gt; sub.Name == &#34;foo&#34;))&#xA;  .Where(s =&amp;gt; s.Tags.Any(t =&amp;gt; t.Name == &#34;Chinese&#34;))&#xA;  .ToList();&#xA;&#xA;//Other&#xA;fsql.Select&amp;lt;YourType&amp;gt;()&#xA;  .Where(a =&amp;gt; a.IsDelete == 0)&#xA;  .WhereIf(keyword != null, a =&amp;gt; a.UserName.Contains(keyword))&#xA;  .WhereIf(role_id &amp;gt; 0, a =&amp;gt; a.RoleId == role_id)&#xA;  .Where(a =&amp;gt; a.Nodes.Any(t =&amp;gt; t.Parent.Id == t.UserId))&#xA;  .Count(out var total)&#xA;  .Page(page, size)&#xA;  .OrderByDescending(a =&amp;gt; a.Id)&#xA;  .ToList()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e6%9f%a5%e8%af%a2&#34;&gt;More..&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;fsql.Select&amp;lt;Song&amp;gt;().Where(a =&amp;gt; new[] { 1, 2, 3 }.Contains(a.Id)).ToList();&#xA;&#xA;fsql.Select&amp;lt;Song&amp;gt;().Where(a =&amp;gt; a.CreateTime.Date == DateTime.Today).ToList();&#xA;&#xA;fsql.Select&amp;lt;Song&amp;gt;().OrderBy(a =&amp;gt; Guid.NewGuid()).Limit(10).ToList();&#xA;&#xA;fsql.Select&amp;lt;Song&amp;gt;().ToList(a =&amp;gt; new&#xA;{&#xA;    a.Id,&#xA;    Tags = fsql.Select&amp;lt;Tag&amp;gt;().ToList(),&#xA;    SongTags = fsql.Select&amp;lt;SongTag&amp;gt;().Where(b =&amp;gt; b.TopicId == a.Id).ToList()&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e8%a1%a8%e8%be%be%e5%bc%8f%e5%87%bd%e6%95%b0&#34;&gt;More..&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üöÅ Repository&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dotnet add package FreeSql.Repository&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;[Transactional]&#xA;public void Add() {&#xA;  var repo = ioc.GetService&amp;lt;BaseRepository&amp;lt;Tag&amp;gt;&amp;gt;();&#xA;  repo.DbContextOptions.EnableCascadeSave = true;&#xA;&#xA;  var item = new Tag {&#xA;    Name = &#34;testaddsublist&#34;,&#xA;    Tags = new[] {&#xA;      new Tag { Name = &#34;sub1&#34; },&#xA;      new Tag { Name = &#34;sub2&#34; }&#xA;    }&#xA;  };&#xA;  repo.Insert(item);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reference: &lt;a href=&#34;https://github.com/dotnetcore/FreeSql/issues/289&#34;&gt;Use &lt;code&gt;TransactionalAttribute&lt;/code&gt; and &lt;code&gt;UnitOfWorkManager&lt;/code&gt; in ASP.NET Core to Achieve the &lt;em&gt;Multiple Transaction Propagation&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üí™ Performance&lt;/h2&gt; &#xA;&lt;p&gt;FreeSql Query &amp;amp; Dapper Query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Elapsed: 00:00:00.6733199; Query Entity Counts: 131072; ORM: Dapper&#xA;&#xA;Elapsed: 00:00:00.4554230; Query Tuple Counts: 131072; ORM: Dapper&#xA;&#xA;Elapsed: 00:00:00.6846146; Query Dynamic Counts: 131072; ORM: Dapper&#xA;&#xA;Elapsed: 00:00:00.6818111; Query Entity Counts: 131072; ORM: FreeSql*&#xA;&#xA;Elapsed: 00:00:00.6060042; Query Tuple Counts: 131072; ORM: FreeSql*&#xA;&#xA;Elapsed: 00:00:00.4211323; Query ToList&amp;lt;Tuple&amp;gt; Counts: 131072; ORM: FreeSql*&#xA;&#xA;Elapsed: 00:00:01.0236285; Query Dynamic Counts: 131072; ORM: FreeSql*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;FreeSql ToList &amp;amp; Dapper Query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Elapsed: 00:00:00.6707125; ToList Entity Counts: 131072; ORM: FreeSql*&#xA;&#xA;Elapsed: 00:00:00.6495301; Query Entity Counts: 131072; ORM: Dapper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/FreeSql/wiki/%e6%80%a7%e8%83%bd&#34;&gt;More..&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üëØ Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://contributors-img.web.app/image?repo=dotnetcore/FreeSql&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=dotnetcore/FreeSql&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;And other friends who made important suggestions for this project, they include:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/systemhejiyong&#34;&gt;systemhejiyong&lt;/a&gt;, &lt;a href=&#34;https://github.com/LambertW&#34;&gt;LambertW&lt;/a&gt;, &lt;a href=&#34;https://github.com/mypeng1985&#34;&gt;mypeng1985&lt;/a&gt;, &lt;a href=&#34;https://github.com/stulzq&#34;&gt;stulzq&lt;/a&gt;, &lt;a href=&#34;https://github.com/movingsam&#34;&gt;movingsam&lt;/a&gt;, &lt;a href=&#34;https://github.com/ALer-R&#34;&gt;ALer-R&lt;/a&gt;, &lt;a href=&#34;https://github.com/zouql&#34;&gt;zouql&lt;/a&gt;, Ê∑±Âú≥|ÂáâËå∂, &lt;a href=&#34;https://github.com/densen2014&#34;&gt;densen2014&lt;/a&gt;, &lt;a href=&#34;https://github.com/LiaoLiaoWuJu&#34;&gt;LiaoLiaoWuJu&lt;/a&gt;, &lt;a href=&#34;https://github.com/hd2y&#34;&gt;hd2y&lt;/a&gt;, &lt;a href=&#34;https://github.com/tky753&#34;&gt;tky753&lt;/a&gt;, &lt;a href=&#34;https://github.com/feijie999&#34;&gt;feijie999&lt;/a&gt;, constantine, &lt;a href=&#34;https://github.com/JohnZhou2020&#34;&gt;JohnZhou2020&lt;/a&gt;, &lt;a href=&#34;https://github.com/mafeng8&#34;&gt;mafeng8&lt;/a&gt;, &lt;a href=&#34;https://github.com/VicBilibily&#34;&gt;VicBilibily&lt;/a&gt;, &lt;a href=&#34;https://github.com/sgf&#34;&gt;Soar&lt;/a&gt;, &lt;a href=&#34;https://github.com/quzhen91&#34;&gt;quzhen91&lt;/a&gt;, homejun, &lt;a href=&#34;https://github.com/d4ilys&#34;&gt;d4ilys&lt;/a&gt; etc.&lt;/p&gt; &#xA;&lt;h2&gt;üíï Donation&lt;/h2&gt; &#xA;&lt;p&gt;L*y 58ÂÖÉ„ÄÅËä±Ëä± 88ÂÖÉ„ÄÅÈ∫¶ÂÖúÂæà‰πñ 50ÂÖÉ„ÄÅÁΩëÁªúÊù•ËÄÖ 2000ÂÖÉ„ÄÅJohn 99.99ÂÖÉ„ÄÅalex 666ÂÖÉ„ÄÅbacongao 36ÂÖÉ„ÄÅÊó†Âêç 100ÂÖÉ„ÄÅEternity 188ÂÖÉ„ÄÅÊó†Âêç 10ÂÖÉ„ÄÅ‚åí.Helper~..oO 66ÂÖÉ„ÄÅ‰π†ÊÉØ‰∏éË¢´‰π†ÊÉØ 100ÂÖÉ„ÄÅÊó†Âêç 100ÂÖÉ„ÄÅËî°ÊòìÂñã 88.88ÂÖÉ„ÄÅ‰∏≠ËÆØÁßëÊäÄ 1000ÂÖÉ„ÄÅGood Good Work 24ÂÖÉ„ÄÅÁÇΩÁÑ∞ 6.6ÂÖÉ„ÄÅNothing 100ÂÖÉ„ÄÅÂÖ∞Â∑ûÂ§©ÊìéËµµ 500ÂÖÉ„ÄÅÂìàÂà©Ë∑Ø‰∫ö 300ÂÖÉ„ÄÅ Êó†Âêç 100ÂÖÉ„ÄÅËõ∞‰ºè 99.99ÂÖÉ„ÄÅTCYM 66.66ÂÖÉ„ÄÅMOTA 5ÂÖÉ„ÄÅLDZXG 30ÂÖÉ„ÄÅNear 30ÂÖÉ„ÄÅÂª∫ÁàΩ 66ÂÖÉ„ÄÅÊó†Âêç 200ÂÖÉ„ÄÅLambertWu 100ÂÖÉ„ÄÅÊó†Âêç 18.88ÂÖÉ„ÄÅ‰πåÈæô 50ÂÖÉ„ÄÅÊó†Âêç 100ÂÖÉ„ÄÅÈô≥ÊÄºÊÄº 66.66ÂÖÉ„ÄÅÈô≥ÊÄºÊÄº 66.66ÂÖÉ„ÄÅ‰∏ÅÊ∑Æ 100ÂÖÉ„ÄÅÊùé‰ºüÂùö-ExcelÂÇ¨ÂåñÂâÇ 100ÂÖÉ„ÄÅÁôΩÁãê 6.66ÂÖÉ„ÄÅÂ•πÂæÆÁ¨ëÁöÑËÑ∏y 30ÂÖÉ„ÄÅEternity¬≤¬∫¬≤¬π 588ÂÖÉ„ÄÅÂ§úÂΩíÊü¥Èó® 88ÂÖÉ„ÄÅËî°ÊòìÂñã 666.66ÂÖÉ„ÄÅ *Á§º 10ÂÖÉ„ÄÅlitrpa 88ÂÖÉ„ÄÅAlax CHOW 200ÂÖÉ„ÄÅDaily 66ÂÖÉ„ÄÅk*t 66ÂÖÉ„ÄÅËìù 100ÂÖÉ„ÄÅ*Ëèú 10ÂÖÉ„ÄÅÁîüÂëΩÂ¶ÇÊ≠å 1000ÂÖÉ„ÄÅÂ±±È∏° 88ÂÖÉ„ÄÅÂπ≥Âá° 100ÂÖÉ„ÄÅÂ§ßÊ†ë 1000ÂÖÉ„ÄÅËΩØËΩØÁöÑÊØõÊØõËô´ 66.66ÂÖÉ„ÄÅÈóÆÂç∑Êòü 2000ÂÖÉ„ÄÅ‰∏é‰Ω†Êó†ÂÖ≥ 5000ÂÖÉ&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thank you for your donation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/FreeSql/gallery/image/338860.html&#34;&gt;Alipay&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/FreeSql/gallery/image/338859.html&#34;&gt;WeChat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üóÑ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnetcore/FreeSql/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucasg/Dependencies</title>
    <updated>2023-03-02T01:31:44Z</updated>
    <id>tag:github.com,2023-03-02:/lucasg/Dependencies</id>
    <link href="https://github.com/lucasg/Dependencies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A rewrite of the old legacy software &#34;depends.exe&#34; in C# for Windows devs to troubleshoot dll load dependencies issues.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dependencies - An open-source modern Dependency Walker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/lucasg/dependencies&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/wtr5v8ksndbkkqxg?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip&#34;&gt;Download here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release_.without.peview.exe.zip&#34;&gt;(If you&#39;re running an AV, use this download instead)&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;NB : due to &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ffkc918h.aspx&#34;&gt;limitations on /clr compilation&lt;/a&gt;, &lt;code&gt;Dependencies&lt;/code&gt; needs &lt;a href=&#34;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&#34;&gt;Visual C++ Redistributable&lt;/a&gt; installed to run properly.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Usage Exemple&#34; src=&#34;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/UsageExemple.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; is a rewrite of the legacy software &lt;a href=&#34;http://www.dependencywalker.com/&#34;&gt;Dependency Walker&lt;/a&gt; which was shipped along Windows SDKs, but whose development stopped around 2006. &lt;code&gt;Dependencies&lt;/code&gt; can help Windows developers troubleshooting their dll load dependencies issues.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip&#34;&gt;v1.11&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;lots of bugfixes and incremental improvements&lt;/li&gt; &#xA;   &lt;li&gt;covid pandemic&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.10/Dependencies_x64_Release.zip&#34;&gt;v1.10&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;lots of bugfixes and incremental improvements&lt;/li&gt; &#xA;   &lt;li&gt;support of Windows 8.1 apisets parsing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.9/Dependencies_x64_Release.zip&#34;&gt;v1.9&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Display imports and exports the way Depends.exe does.&lt;/li&gt; &#xA;   &lt;li&gt;Added user customization for search folders and working directory&lt;/li&gt; &#xA;   &lt;li&gt;Added LLVM demangler to availables symbol demangling&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Wow64 FsRedirection bugs&lt;/li&gt; &#xA;   &lt;li&gt;F5 can now refresh the analysis&lt;/li&gt; &#xA;   &lt;li&gt;Added CLR assembly dependencies enumeration&lt;/li&gt; &#xA;   &lt;li&gt;Added a packaging option without Peview.exe (which triggers some AV).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.8/Dependencies_x64_Release.zip&#34;&gt;v1.8&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add x86/x64 variants for Dependencies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.7/Dependencies.zip&#34;&gt;v1.7&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add CLI tool &#34;dependencies.exe&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.6/Dependencies.zip&#34;&gt;v1.6&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add appx packaging&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.5/Dependencies.zip&#34;&gt;v1.5&lt;/a&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support of Sxs parsing&lt;/li&gt; &#xA;   &lt;li&gt;Support of api set schema parsing&lt;/li&gt; &#xA;   &lt;li&gt;API and Modules list can be filtered&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasg/Dependencies/releases/download/v1.0/Dependencies.zip&#34;&gt;v1.0&lt;/a&gt; -- Initial release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; is currently shipped as two binaries (no installer present) : &lt;code&gt;Dependencies.exe&lt;/code&gt; as a CLI tool and &lt;code&gt;DependenciesGui.exe&lt;/code&gt; for its GUI counterpart (see screenshot). Just click on one of the release numbers above (preferably the latest), download and uncompress the archive and run &lt;code&gt;DependenciesGui.exe&lt;/code&gt;. Since the binary is not signed, &lt;code&gt;SmartScreen&lt;/code&gt; might scream at runtime. &lt;code&gt;Dependencies&lt;/code&gt; also bundle &lt;code&gt;ClrPhTester.exe&lt;/code&gt;, a dumpbin-like executable used to test for non-regressions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Dependencies&lt;/code&gt; currently does not recursively resolve child imports when parsing a new PE since it can be really memory-hungry to do so ( it can over a GB even for &#34;simple&#34; PEs ). This behavior can be overridden (app-wide) via a property located in &#34;Options-&amp;gt;Properties-&amp;gt;Tree build behaviour&#34;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;User options&#34; src=&#34;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/UserOptions.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Tree build behaviours available :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ChildOnly&lt;/code&gt; (default) : only process PE child imports and nothing beyond.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RecursiveOnlyOnDirectImports&lt;/code&gt; : do not process delayload dlls.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Recursive&lt;/code&gt; : Full recursive analysis. You better have time and RAM on your hands if you activate this setting :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Yes that&#39;s 7 GB of RAM being consumed. I&#39;m impressed the application didn&#39;t even crash&#34; src=&#34;https://raw.githubusercontent.com/lucasg/Dependencies/master/screenshots/RamEater.PNG&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;At the moment, &lt;code&gt;Dependencies&lt;/code&gt; recreates features and &#34;features&#34; of &lt;code&gt;depends.exe&lt;/code&gt;, which means :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only direct, forwarded and delay load dependencies are supported. Dynamic loading via &lt;code&gt;LoadLibrary&lt;/code&gt; are not supported (and probably won&#39;t ever be).&lt;/li&gt; &#xA; &lt;li&gt;Support of api set schema redirection since 1.5&lt;/li&gt; &#xA; &lt;li&gt;Checks between Api Imports and Exports.&lt;/li&gt; &#xA; &lt;li&gt;Minimal support of sxs private manifests search only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Building is pretty straightforward. The only caveat is you need to select the &#34;Debug&#34; or &#34;Release&#34; configuration and &#34;x64&#34; or &#34;x86&#34; platform which may not be the default.&lt;/p&gt; &#xA;&lt;h2&gt;Credits and licensing&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/processhacker2/processhacker&#34;&gt;ProcessHacker2&lt;/a&gt; for : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;phlib&lt;/code&gt;, which does the heavy lifting for processing PE informations.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;peview&lt;/code&gt;, a powerful and lightweight PE informations viewer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ButchersBoy/Dragablz&#34;&gt;Dragablz&lt;/a&gt; a C#/XAML library which implement dockable and dragable UI elements, and can recreate the &lt;a href=&#34;https://en.wikipedia.org/wiki/Multiple_document_interface&#34;&gt;MDI programming model&lt;/a&gt; in &lt;code&gt;WPF&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;@aionescu, @zodiacon and Quarkslab for their public infos on ApiSets schema.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thomaslevesque.com&#34;&gt;Thomas levesque&#39;s blog&lt;/a&gt; which pretty much solved all my &lt;code&gt;WPF&lt;/code&gt; programming issues. His &lt;a href=&#34;http://www.thomaslevesque.com/2009/08/04/wpf-automatically-sort-a-gridview-continued/&#34;&gt;&lt;code&gt;AutoGridSort&lt;/code&gt;&lt;/a&gt; is used in this project&lt;/li&gt; &#xA; &lt;li&gt;Venkatesh Mookkan &lt;a href=&#34;https://www.codeproject.com/Articles/170095/WPF-Custom-Control-FilterControl-for-ListBox-ListV&#34;&gt;for it&#39;s &lt;code&gt;FilterControl&lt;/code&gt; for ListView used in this project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nico/demumble&#34;&gt;demumble&lt;/a&gt; for demangling GCC symbols on Windows&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>