<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-26T01:36:26Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skydevil88/XboxDownload</title>
    <updated>2022-06-26T01:36:26Z</updated>
    <id>tag:github.com,2022-06-26:/skydevil88/XboxDownload</id>
    <link href="https://github.com/skydevil88/XboxDownload" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xbox下载助手，支持Xbox、微软商店、PSN、NS、EA Desktop &amp; Origin、战网国际服、Epic 下载加速。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xbox下载助手&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skydevil88/XboxDownload/master/README_OpenWrt.md&#34;&gt;OpenWrt 域名跳转加速&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本软件提速原理，把 Xbox 下载链接 assets1.xboxlive.com 跳转到 assets1.xboxlive.cn 上，锁定在国内服务器下载，解决使用国际域名下载速度过慢问题，并且能同时支持微软商店、PSN、NS、EA Desktop &amp;amp; Origin、战网国际服、Epic 加速。&lt;/p&gt; &#xA;&lt;p&gt;下载链接&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;百度网盘: https://pan.baidu.com/s/1ZqBvWjpGYZXBL8WaitMLCQ 提取码：q3cp &#xA;天翼云盘: https://cloud.189.cn/t/JJvY3aZvyyM3 提取码：7oqc &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydevil88/XboxDownload/master/doc/Pc01.png&#34; alt=&#34;图1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydevil88/XboxDownload/master/doc/Pc02.png&#34; alt=&#34;图2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydevil88/XboxDownload/master/doc/About.png&#34; alt=&#34;About&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tModLoader/tModLoader</title>
    <updated>2022-06-26T01:36:26Z</updated>
    <id>tag:github.com,2022-06-26:/tModLoader/tModLoader</id>
    <link href="https://github.com/tModLoader/tModLoader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A mod to make and play Terraria mods. Supports Terraria 1.4 (and earlier) installations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tModLoader, a Terraria modding API &lt;a href=&#34;https://travis-ci.org/tModLoader/tModLoader&#34;&gt;&lt;img src=&#34;https://travis-ci.org/tModLoader/tModLoader.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tmodloader.net/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/103110554649894912.svg?style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;tModLoader (TML) is an open-source, community-driven, modification and expansion of the Terraria game that makes it possible to make and play mods. TML expands your Terraria adventures with new content to explore created by the Terraria community! TML allows players to create and play Terraria mods and is designed in such a way so that you can play alone or together with friends, with one mod or with multiple mods: choose to play however you like! It is however required that all your friends also install TML if you want to play together; vanilla users can&#39;t play with TML users. Find the instructions below to learn how to install TML.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the code on this GitHub repository will be ahead of the current released version.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/kdcROYP.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Want to play or create mods? Or do you want to contribute to tModLoader perhaps? Click the text that applies to you.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://store.steampowered.com/app/1281930/tModLoader/&#34;&gt;Get tModLoader on Steam&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-players&#34;&gt;I am a &lt;strong&gt;player&lt;/strong&gt;&lt;/a&gt; (Play mods)&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-developers&#34;&gt;I am a &lt;strong&gt;developer&lt;/strong&gt;&lt;/a&gt; (Create mods)&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-contributors&#34;&gt;I am a &lt;strong&gt;contributor&lt;/strong&gt;&lt;/a&gt; (Help create tModLoader)&lt;/h3&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;First and foremost, TML is largely a community endeavor: built by the community; used by the community. Without all the contributions people in the community have made over the years, TML would not be in the state it is in. TML is a free-to-use modification of the game and will stay that way. However, if you would like to buy us a coffee, or maybe even multiple, you can choose to pledge some money to support us financially. We&#39;d like to kindly express once again that TML was not created to create a profit. All of the core team members continue their best efforts to improve and maintain TML despite their real-life obligations, free of charge or any request from the community.&lt;/p&gt; &#xA;&lt;p&gt;The preferred method of supporting the core team is by &lt;a href=&#34;https://www.patreon.com/tmodloader&#34;&gt;choosing a pledge through Patreon&lt;/a&gt;. All of the money donated this way is equally shared amongst the core members to those who wish to receive part of it. This truly is the right way to support us financially if you want to do so. By becoming a patron you can receive a special role on our Discord server if desired. You should be able to couple your Discord account to your Patreon account and automatically receive your role.&lt;/p&gt; &#xA;&lt;p&gt;If you do not want to use a Patreon subscription, you should contact one of the core team members through the Discord server to find an appropriate method of supporting us. Thanks again!&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contact us or TML users, it&#39;s best to join our &lt;a href=&#34;https://tmodloader.net/discord&#34;&gt;Discord server&lt;/a&gt;. To use Discord you will need to register a new account on &lt;a href=&#34;https://discordapp.com/&#34;&gt;their website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Core team&lt;/h3&gt; &#xA;&lt;p&gt;TML is largely created and maintained by a core team of contributors: &lt;strong&gt;Blushiemagic&lt;/strong&gt;, &lt;strong&gt;Chicken-Bones&lt;/strong&gt;, &lt;strong&gt;Jopojelly&lt;/strong&gt;, &lt;strong&gt;Jofairden&lt;/strong&gt;, &lt;strong&gt;Mirsario&lt;/strong&gt; and &lt;strong&gt;Solxanich&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project exists in its current state thanks to all the people who have contributed:&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/tModLoader/tModLoader/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=tModLoader/tModLoader&amp;amp;max=900&amp;amp;columns=20&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TML is licensed under the &lt;a href=&#34;https://github.com/tModLoader/tModLoader/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>homuler/MediaPipeUnityPlugin</title>
    <updated>2022-06-26T01:36:26Z</updated>
    <id>tag:github.com,2022-06-26:/homuler/MediaPipeUnityPlugin</id>
    <link href="https://github.com/homuler/MediaPipeUnityPlugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unity plugin to run MediaPipe graphs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaPipe Unity Plugin&lt;/h1&gt; &#xA;&lt;p&gt;This is a Unity (2021.3.3f1) &lt;a href=&#34;https://docs.unity3d.com/Manual/NativePlugins.html&#34;&gt;Native Plugin&lt;/a&gt; to use &lt;a href=&#34;https://github.com/google/mediapipe&#34;&gt;MediaPipe&lt;/a&gt; (0.8.10).&lt;/p&gt; &#xA;&lt;p&gt;The goal of this project is to port the MediaPipe API (C++) &lt;em&gt;one by one&lt;/em&gt; to C# so that it can be called from Unity.&lt;br&gt; This approach may sacrifice performance when you need to call multiple APIs in a loop, but it gives you the flexibility to use MediaPipe instead.&lt;/p&gt; &#xA;&lt;p&gt;With this plugin, you can&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write MediaPipe code in C#.&lt;/li&gt; &#xA; &lt;li&gt;Run MediaPipe&#39;s official solution on Unity.&lt;/li&gt; &#xA; &lt;li&gt;Run your custom &lt;code&gt;Calculator&lt;/code&gt; and &lt;code&gt;CalculatorGraph&lt;/code&gt; on Unity. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;⚠&lt;/span&gt; Depending on the type of input/output, you may need to write C++ code.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;😸&lt;/span&gt; Hello World!&lt;/h2&gt; &#xA;&lt;p&gt;Here is a Hello World! example.&lt;br&gt; Compare it with &lt;a href=&#34;https://github.com/google/mediapipe/raw/cf101e62a9d49a51be76836b2b8e5ba5c06b5da0/mediapipe/examples/desktop/hello_world/hello_world.cc&#34;&gt;the official code&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using Mediapipe;&#xA;using UnityEngine;&#xA;&#xA;public sealed class HelloWorld : MonoBehaviour&#xA;{&#xA;    private const string _ConfigText = @&#34;&#xA;input_stream: &#34;&#34;in&#34;&#34;&#xA;output_stream: &#34;&#34;out&#34;&#34;&#xA;node {&#xA;  calculator: &#34;&#34;PassThroughCalculator&#34;&#34;&#xA;  input_stream: &#34;&#34;in&#34;&#34;&#xA;  output_stream: &#34;&#34;out1&#34;&#34;&#xA;}&#xA;node {&#xA;  calculator: &#34;&#34;PassThroughCalculator&#34;&#34;&#xA;  input_stream: &#34;&#34;out1&#34;&#34;&#xA;  output_stream: &#34;&#34;out&#34;&#34;&#xA;}&#xA;&#34;;&#xA;&#xA;    private void Start()&#xA;    {&#xA;        var graph = new CalculatorGraph(_ConfigText);&#xA;        var poller = graph.AddOutputStreamPoller&amp;lt;string&amp;gt;(&#34;out&#34;).Value();&#xA;        graph.StartRun().AssertOk();&#xA;&#xA;        for (var i = 0; i &amp;lt; 10; i++)&#xA;        {&#xA;            graph.AddPacketToInputStream(&#34;in&#34;, new StringPacket(&#34;Hello World!&#34;, new Timestamp(i))).AssertOk();&#xA;        }&#xA;&#xA;        graph.CloseInputStream(&#34;in&#34;).AssertOk();&#xA;        var packet = new StringPacket();&#xA;&#xA;        while (poller.Next(packet))&#xA;        {&#xA;            Debug.Log(packet.Get());&#xA;        }&#xA;        graph.WaitUntilDone().AssertOk();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed usage, see &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/API-Overview&#34;&gt;the API Overview&lt;/a&gt; page or the tutorial on &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/Getting-Started&#34;&gt;the Getting Started page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🛠&lt;/span&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;This repository does not contain required libraries (e.g. &lt;code&gt;libmediapipe_c.so&lt;/code&gt;, &lt;code&gt;Google.Protobuf.dll&lt;/code&gt;, etc), so you &lt;strong&gt;need to build them&lt;/strong&gt; first.&lt;br&gt; For step-by-step guide, please refer to the &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki/Installation-Guide&#34;&gt;Installation Guide&lt;/a&gt; in Wiki.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; libraries that can be built differ depending on your environment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; GPU mode is not supported on macOS and Windows.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Editor&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (ARM64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (x86_64)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;WebGL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (AMD64) [^1]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Intel Mac&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;M1 Mac [^2]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows 10/11 (AMD64) [^3]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;[^1]: Tested on Arch Linux. [^2]: Experimental, because MediaPipe does not support M1 Mac. [^3]: Running MediaPipe on Windows is &lt;a href=&#34;https://google.github.io/mediapipe/getting_started/install.html#installing-on-windows&#34;&gt;experimental&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🍽&lt;/span&gt; Try sample app&lt;/h2&gt; &#xA;&lt;h3&gt;Example Solutions&lt;/h3&gt; &#xA;&lt;p&gt;Here is a list of &lt;a href=&#34;https://google.github.io/mediapipe/solutions/solutions.html&#34;&gt;solutions&lt;/a&gt; that you can try in the sample app.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;🔔&lt;/span&gt; The graphs you can run are not limited to the ones in this list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (GPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (CPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS (CPU)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (CPU)&lt;/th&gt; &#xA;   &lt;th&gt;WebGL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Face Detection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Face Mesh&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Iris&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hands&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pose&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Holistic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Selfie Segmentation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hair Segmentation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Object Detection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Box Tracking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Instant Motion Tracking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Objectron&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;KNIFT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;UnityEditor&lt;/h3&gt; &#xA;&lt;p&gt;Select &lt;code&gt;Mediapipe/Samples/Scenes/Start Scene&lt;/code&gt; and play.&lt;/p&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve built native libraries for CPU (i.e. &lt;code&gt;--desktop cpu&lt;/code&gt;), select &lt;code&gt;CPU&lt;/code&gt; for inference mode from the Inspector Window. &lt;img src=&#34;https://user-images.githubusercontent.com/4690128/134795568-156f3d41-b46e-477f-a487-d04c99300c33.png&#34; alt=&#34;preferable-inference-mode&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Android, iOS&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you select &lt;code&gt;GPU&lt;/code&gt; for inference mode before building the app, because &lt;code&gt;CPU&lt;/code&gt; inference mode is not supported currently.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; Wiki&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/wiki&#34;&gt;https://github.com/homuler/MediaPipeUnityPlugin/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that some files are distributed under other licenses.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MediaPipe (&lt;a href=&#34;https://github.com/google/mediapipe/raw/e6c19885c6d3c6f410c730952aeed2852790d306/LICENSE&#34;&gt;Apache Licence 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;emscripten (&lt;a href=&#34;https://github.com/emscripten-core/emscripten/raw/7c873832e933e86855f5ef5f7c6438f0e457c94e/LICENSE&#34;&gt;MIT&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;third_party/mediapipe_emscripten_patch.diff&lt;/code&gt; contains code copied from emscripten&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FontAwesome (&lt;a href=&#34;https://github.com/FortAwesome/Font-Awesome/raw/7cbd7f9951be31f9d06b6ac97739a700320b9130/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Sample scenes use Font Awesome fonts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/homuler/MediaPipeUnityPlugin/raw/master/Third%20Party%20Notices.md&#34;&gt;Third Party Notices.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>