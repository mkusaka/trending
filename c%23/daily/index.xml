<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-16T01:35:39Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nxrighthere/UnrealCLR</title>
    <updated>2022-07-16T01:35:39Z</updated>
    <id>tag:github.com,2022-07-16:/nxrighthere/UnrealCLR</id>
    <link href="https://github.com/nxrighthere/UnrealCLR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unreal Engine .NET 6 integration&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/c6Zn7SE.png&#34; alt=&#34;alt logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;UnrealCLR is a plugin which natively integrates .NET host into the Unreal Engine with the Common Language Runtime for direct execution of managed code to build a game/application logic using the full power of C# 10.0, F# 6.0, and .NET facilities with engine API. The project is aimed at stability, performance, and maintainability.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/raw/master/API/UnrealEngine-Framework.md&#34;&gt;API reference&lt;/a&gt; | &lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/raw/master/MANUAL.md&#34;&gt;Manual&lt;/a&gt; | &lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/discussions&#34;&gt;Community&lt;/a&gt; | &lt;a href=&#34;https://github.com/users/nxrighthere/projects/5?fullscreen=true&#34;&gt;Roadmap&lt;/a&gt; | &lt;a href=&#34;mailto:nxrighthere@gmail.com&#34;&gt;Contact&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Host loading, integration, and management during the lifetime of the engine&lt;/li&gt; &#xA; &lt;li&gt;Dynamic loading, unloading, isolation, and dependency resolving of user assemblies at runtime&lt;/li&gt; &#xA; &lt;li&gt;On-the-fly access and execution of managed functionality through blueprints&lt;/li&gt; &#xA; &lt;li&gt;Runtime exceptions handling and tracing&lt;/li&gt; &#xA; &lt;li&gt;Continuously evolving framework for access to the engine API from managed code written in idiomatic C#&lt;/li&gt; &#xA; &lt;li&gt;High-performance interoperability through optimized code and utilization of blittable data types&lt;/li&gt; &#xA; &lt;li&gt;Support of .NET facilities including hardware-accelerated math with transparent re-mapping to vector types of the engine&lt;/li&gt; &#xA; &lt;li&gt;Support of .NET tools for debugging and profiling such as &lt;a href=&#34;https://www.jetbrains.com/products.html#lang=csharp&#34;&gt;JetBrains&lt;/a&gt; product line, &lt;a href=&#34;https://github.com/0xd4d/dnSpy&#34;&gt;dnSpy&lt;/a&gt; debugger, and &lt;a href=&#34;https://github.com/natemcmaster/dotnet-tools&#34;&gt;others&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full independence from the compilation pipeline of assemblies with support of &lt;a href=&#34;https://www.nuget.org&#34;&gt;NuGet&lt;/a&gt; packages, analyzers, and generators&lt;/li&gt; &#xA; &lt;li&gt;Automatic project packaging for standalone distribution&lt;/li&gt; &#xA; &lt;li&gt;Carefully handcrafted source code for best maintainability and performance&lt;/li&gt; &#xA; &lt;li&gt;Extensive unit testing to ensure the robustness and consistency&lt;/li&gt; &#xA; &lt;li&gt;Distributed as a plugin and doesn&#39;t require rebuilding the engine&lt;/li&gt; &#xA; &lt;li&gt;Documented source code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The plugin is available for Windows, Linux, and macOS (x64).&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Rageware/Images/raw/master/epic-megagrants.png&#34; alt=&#34;megagrant&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unreal Engine 4.25.4 or higher&lt;/li&gt; &#xA; &lt;li&gt;A native &lt;a href=&#34;https://docs.unrealengine.com/en-US/Programming/Development/VisualStudioSetup/index.html#runtheunrealenginepre-requisiteinstaller&#34;&gt;compilation toolchain&lt;/a&gt; with platform-specific dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;.NET 6 SDK 6.0.101&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Auto&lt;/h3&gt; &#xA;&lt;h4&gt;Compilation&lt;/h4&gt; &#xA;&lt;p&gt;Create a new or use an existing Unreal Engine C++ or blueprints project. Clone the repository or download a desirable version from the &lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/releases&#34;&gt;releases&lt;/a&gt; section. Navigate to &lt;code&gt;Install&lt;/code&gt; folder, and run &lt;code&gt;dotnet run&lt;/code&gt; command. Follow the installation instructions. Open the project after the installation process is complete.&lt;/p&gt; &#xA;&lt;h4&gt;Upgrading&lt;/h4&gt; &#xA;&lt;p&gt;Make sure that the Unreal Engine is not running. Re-run the installation process. Recompile custom code with an updated framework.&lt;/p&gt; &#xA;&lt;h4&gt;Command-line options&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;--project-path &amp;lt;path&amp;gt;&lt;/code&gt; Sets a path to an Unreal Engine project&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;--compile-tests &amp;lt;true/false&amp;gt;&lt;/code&gt; Indicates whether tests should be compiled&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;--overwrite-files&lt;/code&gt; Indicates whether all previous files of the plugin and content of tests should be overwritten&lt;/p&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;h4&gt;Compilation&lt;/h4&gt; &#xA;&lt;h5&gt;Plugin&lt;/h5&gt; &#xA;&lt;p&gt;Create a new or use an existing Unreal Engine C++ or blueprints project. Clone the repository or download a desirable version from the &lt;a href=&#34;https://github.com/nxrighthere/UnrealCLR/releases&#34;&gt;releases&lt;/a&gt; section. Copy the content of the &lt;code&gt;Source/Native&lt;/code&gt; folder to &lt;code&gt;%Project%/Plugins/UnrealCLR&lt;/code&gt; directory. Compile the managed runtime from &lt;code&gt;Source/Managed/Runtime&lt;/code&gt; folder by running the following command: &lt;code&gt;dotnet publish --configuration Release --framework net6.0 --output &#34;%Project%/Plugins/UnrealCLR/Managed&#34;&lt;/code&gt;. Restart Unreal Engine, open the project, and build the plugin.&lt;/p&gt; &#xA;&lt;h5&gt;Tests&lt;/h5&gt; &#xA;&lt;p&gt;To quickly start testing, open a project with the plugin in Unreal Engine, copy all folders from the &lt;code&gt;Content&lt;/code&gt; of the repository to &lt;code&gt;%Project%/Content&lt;/code&gt; directory, and wait until they loaded in the Content Browser. Compile the managed assemblies from &lt;code&gt;Source/Managed/Tests&lt;/code&gt; folder by running the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet publish &#34;../Framework&#34; --configuration Release --framework net6.0&#xA;dotnet publish --configuration Release --framework net6.0 --output &#34;%Project%/Managed/Tests&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Upgrading&lt;/h4&gt; &#xA;&lt;p&gt;Make sure that the Unreal Engine is not running. Delete the plugin folder from a project, and repeat all steps from the compilation section. Recompile custom code with an updated framework.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;h3&gt;Plugin&lt;/h3&gt; &#xA;&lt;p&gt;The plugin is automatically loaded at startup. To make sure that it&#39;s initialized open the console window from &lt;code&gt;Window -&amp;gt; Developer Tools -&amp;gt; Output Log&lt;/code&gt;, find &lt;code&gt;UnrealCLR&lt;/code&gt; logs using the search input.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Open the scene with tests in the editor and enter the play mode. To switch a test, navigate to &lt;code&gt;Blueprints -&amp;gt; Open Level Blueprint&lt;/code&gt;, select the &lt;code&gt;Test Systems&lt;/code&gt; enumeration on the left panel, and change default value on the right panel.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Design and architecture&lt;/h3&gt; &#xA;&lt;p&gt;UnrealCLR is designed to be flexible and extensible. The plugin is transparently managing core functionality of the runtime, binding and caching the engine API for managed environment. The programmer has full control over execution flow through code and blueprints that allow to dynamically weave native events of the engine and its objects with managed logic. There&#39;s no hidden states or obscured order of execution behind the lifecycle of scripts.&lt;/p&gt; &#xA;&lt;h3&gt;Assemblies management&lt;/h3&gt; &#xA;&lt;p&gt;At runtime, UnrealCLR loading managed assemblies into a cached isolated context. It allows dynamically replace assemblies after unloading them from memory, therefore the programmer can work with code without restarting the editor for continuous development. The compilation pipeline is entirely up to a developer, it can be organized in any desirable way without any limitations and with full support of &lt;a href=&#34;https://www.nuget.org&#34;&gt;NuGet&lt;/a&gt; packages.&lt;/p&gt; &#xA;&lt;h3&gt;Engine application program interface&lt;/h3&gt; &#xA;&lt;p&gt;The plugin and framework are evolving all the time to utilize as much power of the Unreal Engine as possible. It&#39;s crucial to have a feature-rich API. The system is created with high-performance in mind but without trading safety. The vast majority of code is written and verified by hand to prevent any unexpected behaviors at runtime and to ensure stability.&lt;/p&gt; &#xA;&lt;h3&gt;Powerful tooling&lt;/h3&gt; &#xA;&lt;p&gt;Use your favorite IDE and &lt;a href=&#34;https://github.com/natemcmaster/dotnet-tools&#34;&gt;.NET tools&lt;/a&gt; that can be attached to the process of the engine just as to a regular .NET application for profiling and debugging. It&#39;s very convenient and works out of the box without any external effort. Analyze performance, monitor CPU usage and memory consumption, debug execution, take full control over the code. Explore new possibilities and extend your toolset in no time.&lt;/p&gt; &#xA;&lt;h2&gt;Essentials&lt;/h2&gt; &#xA;&lt;h3&gt;Exceptions&lt;/h3&gt; &#xA;&lt;p&gt;The runtime redirects all unhandled exceptions to log files, the console window, and on-screen messages of the engine, however, it&#39;s highly recommended to use &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/exceptions/how-to-use-the-try-catch-block-to-catch-exceptions&#34;&gt;try-catch&lt;/a&gt; blocks in C# to override redirections with custom handlers. It&#39;s necessary to have an attached debugger to properly trace exceptions in the editor or standalone. Use &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/options&#34;&gt;option types&lt;/a&gt; in F# to avoid exceptions altogether.&lt;/p&gt; &#xA;&lt;h3&gt;Memory management&lt;/h3&gt; &#xA;&lt;p&gt;Unreal Engine, as well as .NET runtime, utilizes a garbage collector for memory management. The framework is designed with consistency in mind to prevent crashes and validate memory transparently for a programmer, no matter how objects were created and freed: with C++, C#, F#, or blueprints.&lt;/p&gt; &#xA;&lt;h3&gt;Hot reload&lt;/h3&gt; &#xA;&lt;p&gt;The plugin is independent of the compilation routine of user assemblies. It&#39;s loading assemblies from &lt;code&gt;%Project%/Managed&lt;/code&gt; folder and resolving dependencies at runtime after entering/leaving the play mode. The framework of the plugin with the engine API is automatically recognized and loaded as a dependency.&lt;/p&gt; &#xA;&lt;h3&gt;Ecosystem compatibility&lt;/h3&gt; &#xA;&lt;p&gt;The framework replicates the class hierarchy of the engine with full interoperability support. Any external C++ code, blueprints, and plugins are compatible and extensible with UnrealCLR by design through the engine API. The plugin integrated into the engine&#39;s building pipeline and ready for distribution of self-contained applications.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/natemcmaster&#34;&gt;@natemcmaster&lt;/a&gt; for a great .NET library that simplifies dynamic loading of assemblies.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://github.com/Doraku&#34;&gt;@Doraku&lt;/a&gt; for an amazing documentation generator and rapid improvement of it.&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;These wonderful people make open-source better:&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://github.com/Rageware/Supporters/raw/master/unrealclr-supporters.png&#34; alt=&#34;supporters&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vis2k/Mirror</title>
    <updated>2022-07-16T01:35:39Z</updated>
    <id>tag:github.com,2022-07-16:/vis2k/Mirror</id>
    <link href="https://github.com/vis2k/Mirror" rel="alternate"></link>
    <summary type="html">&lt;p&gt;#1 Open Source Unity Networking Library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/119120944-6db26780-ba5f-11eb-9cdd-fc8500207f4d.png&#34; alt=&#34;Mirror Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://assetstore.unity.com/packages/tools/network/mirror-129321&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/asset_store-brightgreen.svg?sanitize=true&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mirror-networking.gitbook.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mirror-networking.com/showcase/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/showcase-brightgreen.svg?sanitize=true&#34; alt=&#34;Showcase&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mirror-networking.gitbook.io/docs/community-guides/video-tutorials&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/video_tutorial-brightgreen.svg?sanitize=true&#34; alt=&#34;Video Tutorials&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forum.unity.com/threads/mirror-networking-for-unity-aka-hlapi-community-edition.425437/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-brightgreen.svg?sanitize=true&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/vis2k73562/hlapi-community-edition/branch/mirror&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/vis2k73562/hlapi-community-edition/Mirror.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discordapp.com/invite/N9QVxbM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/343440455738064897.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vis2k/Mirror/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/vis2k/Mirror.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vis2k/Mirror/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-brightgreen.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://trello.com/b/fgAE7Tud&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/roadmap-blue.svg?sanitize=true&#34; alt=&#34;Roadmap&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It&#39;s only the dreamers who ever move mountains.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/119117854-3e4e2b80-ba5c-11eb-8236-ce6cfd2b6b07.png&#34; title=&#34;Original Concept Art for Games that made us dream. Copyright Blizzard, Blizzard, Riot Games, Joymax in that order.&#34;&gt; &#xA;&lt;h2&gt;Mirror&lt;/h2&gt; &#xA;&lt;p&gt;Mirror is a &lt;strong&gt;high level&lt;/strong&gt; Networking library for &lt;strong&gt;Unity 2019/2020 LTS&lt;/strong&gt;, compatible with different &lt;strong&gt;low level&lt;/strong&gt; &lt;a href=&#34;https://github.com/vis2k/Mirror#low-level-transports&#34;&gt;Transports&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mirror is for indie games &amp;amp; small &lt;a href=&#34;https://www.youtube.com/watch?v=mDCNff1S9ZU&#34;&gt;MMOs&lt;/a&gt;, made by the developers of &lt;a href=&#34;https://assetstore.unity.com/packages/templates/systems/ummorpg-components-edition-159401&#34;&gt;uMMORPG&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=D_f_MntrLVE&#34;&gt;Cubica&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mirror is optimized for &lt;strong&gt;ease of use&lt;/strong&gt; &amp;amp; &lt;strong&gt;probability of success&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We needed a networking library that allows us to &lt;strong&gt;&lt;a href=&#34;https://mirror-networking.com/showcase/&#34;&gt;launch our games&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;survive the next decade&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mirror is &lt;strong&gt;&lt;a href=&#34;https://mirror-networking.gitbook.io/docs/general/tests&#34;&gt;stable&lt;/a&gt;&lt;/strong&gt; &amp;amp; &lt;strong&gt;&lt;a href=&#34;https://www.oculus.com/experiences/quest/2564158073609422/&#34;&gt;production&lt;/a&gt;&lt;/strong&gt; ready.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Free &amp;amp; Open&lt;/h2&gt; &#xA;&lt;p&gt;Mirror is &lt;strong&gt;free &amp;amp; open source&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code: MIT licensed.&lt;/li&gt; &#xA; &lt;li&gt;Dedicated Servers: &lt;a href=&#34;https://mirror-networking.gitbook.io/docs/guides/server-hosting&#34;&gt;Anywhere&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Player Hosted: &lt;a href=&#34;https://github.com/FakeByte/EpicOnlineTransport&#34;&gt;Free Epic Relay&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We need Mirror for our own games, which is why we will never charge anything.&lt;/p&gt; &#xA;&lt;p&gt;Funded only by &lt;a href=&#34;https://github.com/sponsors/vis2k&#34;&gt;Donations&lt;/a&gt; from our &lt;a href=&#34;https://discordapp.com/invite/N9QVxbM&#34;&gt;fantastic community&lt;/a&gt; of over 10,000 people.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Server &amp;amp; Client&lt;/strong&gt; are &lt;strong&gt;ONE project&lt;/strong&gt; in order to achieve an order of magnitude gain in productivity.&lt;/p&gt; &#xA;&lt;p&gt;Making multiplayer games this way is fun &amp;amp; easy. Instead of MonoBehaviour, Mirror provides &lt;strong&gt;NetworkBehaviour&lt;/strong&gt; components with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Server]&lt;/strong&gt; / &lt;strong&gt;[Client]&lt;/strong&gt; tags for server-only / client-only code&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Command]&lt;/strong&gt; for Client-&amp;gt;Server function calls (e.g. UseItem)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[ClientRpc]&lt;/strong&gt; / &lt;strong&gt;[TargetRpc]&lt;/strong&gt; for Server-&amp;gt;Client function calls (e.g. AddChatMessage)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[SyncVar]&lt;/strong&gt; / SyncList to automatically synchronize variables from Server-&amp;gt;Client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Get &lt;strong&gt;Unity 2020 LTS&lt;/strong&gt;, download &lt;a href=&#34;https://assetstore.unity.com/packages/tools/network/mirror-129321&#34;&gt;Mirror on the Asset Store&lt;/a&gt;, open one of the examples &amp;amp; press Play!&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://mirror-networking.gitbook.io/&#34;&gt;Documentation&lt;/a&gt; to learn how it all works.&lt;/p&gt; &#xA;&lt;p&gt;If you are migrating from UNET, then please check out our &lt;a href=&#34;https://mirror-networking.gitbook.io/docs/general/migration-guide&#34;&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Made with Mirror&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.populationonevr.com/&#34;&gt;Population: ONE&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.populationonevr.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178141286-9494c3a8-a4a5-4b06-af2b-b05b66162201.png&#34; alt=&#34;Population: ONE&#34;&gt;&lt;/a&gt; The &lt;a href=&#34;https://www.bigboxvr.com/&#34;&gt;BigBoxVR&lt;/a&gt; team started using Mirror in February 2019 for what eventually became one of the most popular Oculus Rift games.&lt;/p&gt; &#xA;&lt;p&gt;In addition to &lt;a href=&#34;https://github.com/sponsors/vis2k&#34;&gt;24/7 support&lt;/a&gt; from the Mirror team, BigBoxVR also hired one of our engineers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Population: ONE&lt;/strong&gt; was recently &lt;a href=&#34;https://uploadvr.com/population-one-facebook-bigbox-acquire/&#34;&gt;acquired by Facebook&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.nimoyd.com/&#34;&gt;Nimoyd&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nimoyd.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178142672-340bac2c-628a-4610-bbf1-8f718cb5b033.jpg&#34; alt=&#34;nimoyd_smaller&#34;&gt;&lt;/a&gt; Nudge Nudge Games&#39; first title: the colorful, post-apocalyptic open world sandbox game &lt;a href=&#34;https://store.steampowered.com/app/1313210/Nimoyd__Survival_Sandbox/&#34;&gt;Nimoyd&lt;/a&gt; is being developed with Mirror.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Soon to be released for PC &amp;amp; mobile!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.glimpse-luna.com/&#34;&gt;A Glimpse of Luna&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.glimpse-luna.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178148229-5b619655-055a-4583-a1d3-18455bde631f.jpg&#34; alt=&#34;a glimpse of luna&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.glimpse-luna.com/&#34;&gt;A Glimpse of Luna&lt;/a&gt; - a tactical multiplayer card battle game with the most beautiful concept art &amp;amp; soundtrack.&lt;/p&gt; &#xA;&lt;p&gt;Made with Mirror by two brothers with &lt;a href=&#34;https://www.youtube.com/watch?v=5J2wj8l4pFA&amp;amp;start=12&#34;&gt;no prior game development&lt;/a&gt; experience.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://inferna.net/&#34;&gt;Inferna&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://inferna.net/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178148768-5ba9ea5b-bcf1-4ace-ad7e-591f2185cbd5.jpg&#34; alt=&#34;Inferna MMORPG&#34;&gt;&lt;/a&gt; One of the first MMORPGs made with Mirror, released in 2019.&lt;/p&gt; &#xA;&lt;p&gt;An open world experience with over 1000 CCU during its peak, spread across multiple server instances.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.samutale.com/&#34;&gt;Samutale&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.samutale.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178149040-b54e0fa1-3c41-4925-8428-efd0526f8d44.jpg&#34; alt=&#34;samutale&#34;&gt;&lt;/a&gt; A sandbox survival samurai MMORPG, originally released in September 2016.&lt;/p&gt; &#xA;&lt;p&gt;Later on, the Netherlands based Maple Media switched their netcode to Mirror.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://store.steampowered.com/app/1823300/Untamed_Isles/&#34;&gt;Untamed Isles&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/1823300/Untamed_Isles/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178143679-1c325b54-0938-4e84-97b6-b59db62a51e7.jpg&#34; alt=&#34;Untamed Isles&#34;&gt;&lt;/a&gt; The turn based, monster taming &lt;strong&gt;MMORPG&lt;/strong&gt; &lt;a href=&#34;https://store.steampowered.com/app/1823300/Untamed_Isles/&#34;&gt;Untamed Isles&lt;/a&gt; is currently being developed by &lt;a href=&#34;https://untamedisles.com/about/&#34;&gt;Phat Loot Studios&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After their successful &lt;a href=&#34;https://www.kickstarter.com/projects/untamedisles/untamed-isles&#34;&gt;Kickstarter&lt;/a&gt;, the New Zealand based studio is aiming for a 2022 release date.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&amp;amp;gl=US&#34;&gt;Zooba&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&amp;amp;gl=US&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178141846-60805ad5-5a6e-4840-8744-5194756c2a6d.jpg&#34; alt=&#34;Zooba&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wildlifestudios.com/&#34;&gt;Wildlife Studio&#39;s&lt;/a&gt; hit Zooba made it to rank #5 of the largest battle royal shooters in the U.S. mobile market.&lt;/p&gt; &#xA;&lt;p&gt;The game has over &lt;strong&gt;50 million&lt;/strong&gt; downloads on &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&amp;amp;gl=US&#34;&gt;Google Play&lt;/a&gt;, with Wildlife Studios as one of the top 10 largest mobile gaming companies in the world.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://scpslgame.com/&#34;&gt;SCP: Secret Laboratory&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scpslgame.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178142224-413b3455-cdff-472e-b918-4246631af12f.jpg&#34; alt=&#34;scp - secret laboratory_smaller&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://store.steampowered.com/developer/NWStudios/about/&#34;&gt;Northwood Studios&#39;&lt;/a&gt; first title: the multiplayer horror game SCP: Secret Laboratory was one of Mirror&#39;s early adopters.&lt;/p&gt; &#xA;&lt;p&gt;Released in December 2017, today it has more than &lt;strong&gt;140,000&lt;/strong&gt; reviews on &lt;a href=&#34;https://store.steampowered.com/app/700330/SCP_Secret_Laboratory/?curator_clanid=33782778&#34;&gt;Steam&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://naicaonline.com/&#34;&gt;Naïca Online&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://naicaonline.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178147710-8ed83bbd-1bce-4e14-8465-edfb40af7c7f.png&#34; alt=&#34;Naica Online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://naicaonline.com/&#34;&gt;Naïca&lt;/a&gt; is a beautiful, free to play 2D pixel art MMORPG.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://naicaonline.com/en/news/view/1&#34;&gt;France based team&lt;/a&gt; was one of Mirror&#39;s early adopters, releasing their first public beta in November 2020.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://laurum.online/&#34;&gt;Laurum Online&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://laurum.online/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178149616-3852d198-6fc9-44d5-9f63-da4e52f5546a.jpg&#34; alt=&#34;Laurum Online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.project7.project7beta&#34;&gt;Laurum Online&lt;/a&gt; - a 2D retro mobile MMORPG with over 500,000 downloads on Google Play.&lt;/p&gt; &#xA;&lt;h3&gt;And many more...&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/719200/The_Wall/&#34;&gt;&lt;img src=&#34;https://cdn.akamai.steamstatic.com/steam/apps/719200/header.jpg?t=1588105839&#34; height=&#34;100&#34; title=&#34;The wall&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://store.steampowered.com/app/535630/One_More_Night/&#34;&gt;&lt;img src=&#34;https://cdn.akamai.steamstatic.com/steam/apps/535630/header.jpg?t=1584831320&#34; height=&#34;100&#34; title=&#34;One more night&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://i.ytimg.com/vi/D_f_MntrLVE/maxresdefault.jpg&#34; height=&#34;100&#34; title=&#34;Block story&#34;&gt; &lt;a href=&#34;https://nightz.io&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/130729336-9c4e95d9-69bc-4410-b894-b2677159a472.jpg&#34; height=&#34;100&#34; title=&#34;Nightz.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://store.steampowered.com/app/1016030/Wawa_United/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/162982300-c29d89bc-210a-43ef-8cce-6e5555bb09bc.png&#34; height=&#34;100&#34; title=&#34;Wawa united&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://store.steampowered.com/app/1745640/MACE_Mapinguaris_Temple/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/166089837-bbecf190-0f06-4c88-910d-1ce87e2f171d.png&#34; title=&#34;MACE&#34; height=&#34;100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.adversator.com//&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/178641128-37dc270c-bedf-4891-8284-33573d1776b9.jpg&#34; title=&#34;Adversator&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mirror LTS (Long Term Support)&lt;/h2&gt; &#xA;&lt;p&gt;If you use Mirror in production, consider Mirror LTS!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt; only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistent API&lt;/strong&gt;: update any time, without any breaking features.&lt;/li&gt; &#xA; &lt;li&gt;Lives along side &lt;strong&gt;Unity 2019&lt;/strong&gt; LTS.&lt;/li&gt; &#xA; &lt;li&gt;Supported from Sept. 2021 to Sept 2022, depending on feedback.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mirror V46 LTS&lt;/strong&gt; is available to all &lt;a href=&#34;https://github.com/sponsors/vis2k&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All sponsors are invited to the &lt;a href=&#34;https://github.com/MirrorNetworking/Mirror-46-LTS&#34;&gt;Mirror V46 LTS Repository&lt;/a&gt; automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Low Level Transports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(built in) &lt;a href=&#34;https://github.com/vis2k/kcp2k&#34;&gt;KCP&lt;/a&gt;: reliable UDP&lt;/li&gt; &#xA; &lt;li&gt;(built in) &lt;a href=&#34;https://github.com/vis2k/Telepathy&#34;&gt;Telepathy&lt;/a&gt;: TCP&lt;/li&gt; &#xA; &lt;li&gt;(built in) &lt;a href=&#34;https://github.com/MirrorNetworking/SimpleWebTransport&#34;&gt;Websockets&lt;/a&gt;: Websockets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SoftwareGuy/Ignorance/&#34;&gt;Ignorance&lt;/a&gt;: ENET UDP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MirrorNetworking/LiteNetLibTransport/&#34;&gt;LiteNetLib&lt;/a&gt; UDP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chykary/FizzySteamworks/&#34;&gt;FizzySteam&lt;/a&gt;: SteamNetwork&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chykary/FizzyFacepunch/&#34;&gt;FizzyFacepunch&lt;/a&gt;: SteamNetwork&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FakeByte/EpicOnlineTransport&#34;&gt;Epic Relay&lt;/a&gt;: Epic Online Services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Squaresweets/BubbleTransport&#34;&gt;Bubble&lt;/a&gt;: Apple GameCenter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Derek-R-S/Light-Reflective-Mirror&#34;&gt;Light Reflective Mirror&lt;/a&gt;: Self-Hosted Relay&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hyferg/MirrorOculusP2P&#34;&gt;Oculus P2P&lt;/a&gt;: Oculus Platform Service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/mDCNff1S9ZU&#34;&gt;uMMORPG 480 CCU&lt;/a&gt; (worst case)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1GMxcWAz3ePt3RioK8k4erpVSpujMkYje4scOuPwM8Ug/edit?usp=sharing&#34;&gt;Jesus&#39; Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development &amp;amp; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Mirror is used &lt;strong&gt;in production&lt;/strong&gt; by everything from small indie projects to million dollar funded games that will run for a decade or more.&lt;/p&gt; &#xA;&lt;p&gt;Therefore it is important for us to follow the &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS principle&lt;/a&gt; in order for our games to survive, so that we can still fix networking bugs 10 years from now if needed.&lt;/p&gt; &#xA;&lt;h1&gt;Bug Bounty&lt;/h1&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/16416509/110572995-718b5900-8195-11eb-802c-235c82a03bf7.png&#34; height=&#34;150&#34;&gt; &#xA;&lt;p&gt;A lot of projects use Mirror in production. If you found a critical bug / exploit in Mirror core, please reach out to us in private. Depending on the severity of the exploit, we offer $50 - $500 for now. Rewards based on Mirror&#39;s &lt;a href=&#34;https://github.com/sponsors/vis2k&#34;&gt;donations&lt;/a&gt;, capped at amount of donations we received that month.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Specifically we are looking for:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ways to crash a Mirror server&lt;/li&gt; &#xA; &lt;li&gt;Ways to exploit a Mirror server&lt;/li&gt; &#xA; &lt;li&gt;Ways to leave a Mirror server in undefined state&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are &lt;strong&gt;not&lt;/strong&gt; looking for DOS/DDOS attacks. The exploit should be possible with just a couple of network packets, and it should be reproducible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Credits / past findings / fixes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2020, fholm: fuzzing ConnectMessage to stop further connects [&lt;a href=&#34;https://github.com/vis2k/Mirror/pull/2397&#34;&gt;#2397&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mbdavid/LiteDB</title>
    <updated>2022-07-16T01:35:39Z</updated>
    <id>tag:github.com,2022-07-16:/mbdavid/LiteDB</id>
    <link href="https://github.com/mbdavid/LiteDB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LiteDB - A .NET NoSQL Document Store in a single data file - https://www.litedb.org&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiteDB - A .NET NoSQL Document Store in a single data file&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/mbdavid/LiteDB?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/mbdavid/LiteDB.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/mbdavid/LiteDB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/mbdavid/litedb&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/sfe8he0vik18m033?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/mbdavid/LiteDB&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mbdavid/LiteDB.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;LiteDB is a small, fast and lightweight .NET NoSQL embedded database.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Serverless NoSQL Document Store&lt;/li&gt; &#xA; &lt;li&gt;Simple API, similar to MongoDB&lt;/li&gt; &#xA; &lt;li&gt;100% C# code for .NET 4.5 / NETStandard 1.3/2.0 in a single DLL (less than 450kb)&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe&lt;/li&gt; &#xA; &lt;li&gt;ACID with full transaction support&lt;/li&gt; &#xA; &lt;li&gt;Data recovery after write failure (WAL log file)&lt;/li&gt; &#xA; &lt;li&gt;Datafile encryption using DES (AES) cryptography&lt;/li&gt; &#xA; &lt;li&gt;Map your POCO classes to &lt;code&gt;BsonDocument&lt;/code&gt; using attributes or fluent mapper API&lt;/li&gt; &#xA; &lt;li&gt;Store files and stream data (like GridFS in MongoDB)&lt;/li&gt; &#xA; &lt;li&gt;Single data file storage (like SQLite)&lt;/li&gt; &#xA; &lt;li&gt;Index document fields for fast search&lt;/li&gt; &#xA; &lt;li&gt;LINQ support for queries&lt;/li&gt; &#xA; &lt;li&gt;SQL-Like commands to access/transform data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mbdavid/LiteDB.Studio&#34;&gt;LiteDB Studio&lt;/a&gt; - Nice UI for data access&lt;/li&gt; &#xA; &lt;li&gt;Open source and free for everyone - including commercial use&lt;/li&gt; &#xA; &lt;li&gt;Install from NuGet: &lt;code&gt;Install-Package LiteDB&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;New v5&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New storage engine&lt;/li&gt; &#xA; &lt;li&gt;No locks for &lt;code&gt;read&lt;/code&gt; operations (multiple readers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Write&lt;/code&gt; locks per collection (multiple writers)&lt;/li&gt; &#xA; &lt;li&gt;Internal/System collections&lt;/li&gt; &#xA; &lt;li&gt;New &lt;code&gt;SQL-Like Syntax&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;New query engine (support projection, sort, filter, query)&lt;/li&gt; &#xA; &lt;li&gt;Partial document load (root level)&lt;/li&gt; &#xA; &lt;li&gt;and much, much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lite.Studio&lt;/h2&gt; &#xA;&lt;p&gt;New UI to manage and visualize your database:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/61465032cd9df0ccb7c0ff4a2d4f1cf772cdaa14/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f454f58564b7674583041412d6c64793f666f726d61743d6a7067266e616d653d6d656469756d&#34; alt=&#34;LiteDB.Studio&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://github.com/mbdavid/LiteDB/wiki&#34;&gt;the Wiki&lt;/a&gt; for full documentation. For simplified chinese version, &lt;a href=&#34;https://github.com/lidanger/LiteDB.wiki_Translation_zh-cn&#34;&gt;check here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LiteDB Community&lt;/h2&gt; &#xA;&lt;p&gt;Help LiteDB grow its user community by answering this &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSc4cNG7wyLKXXcOLIt7Ea4TlXCG6s-51_EfHPu2p5WZ2dIx7A/viewform?usp=sf_link&#34;&gt;simple survey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use LiteDB&lt;/h2&gt; &#xA;&lt;p&gt;A quick example for storing and searching documents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;// Create your POCO class&#xA;public class Customer&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Name { get; set; }&#xA;    public int Age { get; set; }&#xA;    public string[] Phones { get; set; }&#xA;    public bool IsActive { get; set; }&#xA;}&#xA;&#xA;// Open database (or create if doesn&#39;t exist)&#xA;using(var db = new LiteDatabase(@&#34;MyData.db&#34;))&#xA;{&#xA;    // Get customer collection&#xA;    var col = db.GetCollection&amp;lt;Customer&amp;gt;(&#34;customers&#34;);&#xA;&#xA;    // Create your new customer instance&#xA;    var customer = new Customer&#xA;    { &#xA;        Name = &#34;John Doe&#34;, &#xA;        Phones = new string[] { &#34;8000-0000&#34;, &#34;9000-0000&#34; }, &#xA;        Age = 39,&#xA;        IsActive = true&#xA;    };&#xA;&#xA;    // Create unique index in Name field&#xA;    col.EnsureIndex(x =&amp;gt; x.Name, true);&#xA;&#xA;    // Insert new customer document (Id will be auto-incremented)&#xA;    col.Insert(customer);&#xA;&#xA;    // Update a document inside a collection&#xA;    customer.Name = &#34;Joana Doe&#34;;&#xA;&#xA;    col.Update(customer);&#xA;&#xA;    // Use LINQ to query documents (with no index)&#xA;    var results = col.Find(x =&amp;gt; x.Age &amp;gt; 20);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using fluent mapper and cross document reference for more complex data models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;// DbRef to cross references&#xA;public class Order&#xA;{&#xA;    public ObjectId Id { get; set; }&#xA;    public DateTime OrderDate { get; set; }&#xA;    public Address ShippingAddress { get; set; }&#xA;    public Customer Customer { get; set; }&#xA;    public List&amp;lt;Product&amp;gt; Products { get; set; }&#xA;}        &#xA;&#xA;// Re-use mapper from global instance&#xA;var mapper = BsonMapper.Global;&#xA;&#xA;// &#34;Products&#34; and &#34;Customer&#34; are from other collections (not embedded document)&#xA;mapper.Entity&amp;lt;Order&amp;gt;()&#xA;    .DbRef(x =&amp;gt; x.Customer, &#34;customers&#34;)   // 1 to 1/0 reference&#xA;    .DbRef(x =&amp;gt; x.Products, &#34;products&#34;)    // 1 to Many reference&#xA;    .Field(x =&amp;gt; x.ShippingAddress, &#34;addr&#34;); // Embedded sub document&#xA;            &#xA;using(var db = new LiteDatabase(&#34;MyOrderDatafile.db&#34;))&#xA;{&#xA;    var orders = db.GetCollection&amp;lt;Order&amp;gt;(&#34;orders&#34;);&#xA;        &#xA;    // When query Order, includes references&#xA;    var query = orders&#xA;        .Include(x =&amp;gt; x.Customer)&#xA;        .Include(x =&amp;gt; x.Products) // 1 to many reference&#xA;        .Find(x =&amp;gt; x.OrderDate &amp;lt;= DateTime.Now);&#xA;&#xA;    // Each instance of Order will load Customer/Products references&#xA;    foreach(var order in query)&#xA;    {&#xA;        var name = order.Customer.Name;&#xA;        ...&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Where to use?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Desktop/local small applications&lt;/li&gt; &#xA; &lt;li&gt;Application file format&lt;/li&gt; &#xA; &lt;li&gt;Small web sites/applications&lt;/li&gt; &#xA; &lt;li&gt;One database &lt;strong&gt;per account/user&lt;/strong&gt; data store&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GUI viewer tool: &lt;a href=&#34;https://github.com/falahati/LiteDBViewer&#34;&gt;https://github.com/falahati/LiteDBViewer&lt;/a&gt; (v4)&lt;/li&gt; &#xA; &lt;li&gt;A GUI editor tool: &lt;a href=&#34;https://github.com/JosefNemec/LiteDbExplorer&#34;&gt;https://github.com/JosefNemec/LiteDbExplorer&lt;/a&gt; (v4)&lt;/li&gt; &#xA; &lt;li&gt;Lucene.NET directory: &lt;a href=&#34;https://github.com/sheryever/LiteDBDirectory&#34;&gt;https://github.com/sheryever/LiteDBDirectory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LINQPad support: &lt;a href=&#34;https://github.com/adospace/litedbpad&#34;&gt;https://github.com/adospace/litedbpad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;F# Support: &lt;a href=&#34;https://github.com/Zaid-Ajaj/LiteDB.FSharp&#34;&gt;https://github.com/Zaid-Ajaj/LiteDB.FSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UltraLiteDB (for Unity or IOT): &lt;a href=&#34;https://github.com/rejemy/UltraLiteDB&#34;&gt;https://github.com/rejemy/UltraLiteDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Change details for each release are documented in the &lt;a href=&#34;https://github.com/mbdavid/LiteDB/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code Signing&lt;/h2&gt; &#xA;&lt;p&gt;LiteDB is digitally signed courtesy of &lt;a href=&#34;https://www.signpath.io&#34;&gt;SignPath&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.signpath.io&#34;&gt; &lt;img src=&#34;https://about.signpath.io/assets/logo_signpath_500.png&#34; width=&#34;150&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>