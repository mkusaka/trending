<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-22T01:32:24Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zkSNACKs/WalletWasabi</title>
    <updated>2023-02-22T01:32:24Z</updated>
    <id>tag:github.com,2023-02-22:/zkSNACKs/WalletWasabi</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source, non-custodial, privacy preserving Bitcoin wallet for Windows, Linux, and Mac.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://wasabiwallet.io&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/51679301/169354261-c894bac0-27f2-4a29-8470-a7519963a4b5.jpg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; An open-source, non-custodial, privacy-focused Bitcoin wallet for desktop. &lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://wasabiwallet.io&#34;&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://docs.wasabiwallet.io/&#34;&gt; Documentation &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://docs.wasabiwallet.io/building-wasabi/TechnicalOverview.html#v-general-wallet-features&#34;&gt; API &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/zkSNACKs/WalletWasabi/discussions/5185&#34;&gt; Support &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/c/WasabiWallet&#34;&gt; YouTube &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/zkSNACKs/WalletWasabi/raw/master/PGP.txt&#34;&gt; PGP &lt;/a&gt;  &lt;br&gt; &lt;br&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Code Quality&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Windows Tests&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Linux Tests&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;macOS Tests&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Continuous Delivery&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Deterministic builds&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;License&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.codefactor.io/repository/github/zksnacks/walletwasabi&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/zksnacks/walletwasabi/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=3&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Windows?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=1&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Linux?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=2&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Osx?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_build/latest?definitionId=12&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.ContinuousDelivery?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_build/latest?definitionId=13&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.DeterministicBuild?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/zkSNACKs/WalletWasabi/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/zkSNACKs/WalletWasabi.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &lt;br&gt; &lt;/h3&gt;&#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/zkSNACKs/WalletWasabi/releases&#34;&gt;Download Wasabi&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zkSNACKs/WalletWasabi/master/WalletWasabi.Backend/wwwroot/img/screenshots/webpage_ui_compilation-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Build From Source Code&lt;/h1&gt; &#xA;&lt;h3&gt;Get The Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get Git: &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get .NET 7.0 SDK: &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;https://dotnet.microsoft.com/download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optionally disable .NET&#39;s telemetry by executing in the terminal &lt;code&gt;export DOTNET_CLI_TELEMETRY_OPTOUT=1&lt;/code&gt; on Linux and macOS or &lt;code&gt;setx DOTNET_CLI_TELEMETRY_OPTOUT 1&lt;/code&gt; on Windows.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Get Wasabi&lt;/h3&gt; &#xA;&lt;p&gt;Clone &amp;amp; Restore &amp;amp; Build&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 --single-branch --branch=master https://github.com/zkSNACKs/WalletWasabi.git&#xA;cd WalletWasabi/WalletWasabi.Fluent.Desktop&#xA;dotnet build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Wasabi&lt;/h3&gt; &#xA;&lt;p&gt;Run Wasabi with &lt;code&gt;dotnet run&lt;/code&gt; from the &lt;code&gt;WalletWasabi.Fluent.Desktop&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Update Wasabi&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git pull&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dotnetcore/DotnetSpider</title>
    <updated>2023-02-22T01:32:24Z</updated>
    <id>tag:github.com,2023-02-22:/dotnetcore/DotnetSpider</id>
    <link href="https://github.com/dotnetcore/DotnetSpider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DotnetSpider, a .NET standard web crawling library. It is lightweight, efficient and fast high-level web crawling &amp; scraping framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DotnetSpider&lt;/h1&gt; &#xA;&lt;p&gt;免责申明：本框架是为了帮助开发人员简化开发流程、提高开发效率，请勿使用此框架做任何违法国家法律的事情，使用者所做任何事情也与本框架的作者无关。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/zlzforever/DotnetSpider/_build/latest?definitionId=3&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/zlzforever/DotnetSpider/_apis/build/status/dotnetcore.DotnetSpider?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/DotnetSpider&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/DotnetSpider.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnetcore&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/member%20project%20of-NCC-9e20c9.svg?sanitize=true&#34; alt=&#34;Member project of .NET Core Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnetcore/DotnetSpider/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dotnetcore/DotnetSpider.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DotnetSpider, a .NET Standard web crawling library. It is a lightweight, efficient, and fast high-level web crawling &amp;amp; scraping framework.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get the latest beta packages, you should add the myget feed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;add key=&#34;myget.org&#34; value=&#34;https://www.myget.org/F/zlzforever/api/v3/index.json&#34; protocolVersion=&#34;3&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DESIGN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dotnetcore/DotnetSpider/raw/master/images/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E7%B3%BB%E7%BB%9F.png?raw=true&#34; alt=&#34;DESIGN IMAGE&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DEVELOP ENVIROMENT&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Visual Studio 2017 (15.3 or later) or Jetbrains Rider&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/net/download/windows&#34;&gt;.NET Core 2.2 or later&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MySql&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker run --name mysql -d -p 3306:3306 --restart always -e MYSQL_ROOT_PASSWORD=1qazZAQ! mysql:5.7&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redis (option)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker run --name redis -d -p 6379:6379 --restart always redis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SqlServer&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker run --name sqlserver -d -p 1433:1433 --restart always  -e &#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=1qazZAQ!&#39; mcr.microsoft.com/mssql/server:2017-latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PostgreSQL (option)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker run --name postgres -d  -p 5432:5432 --restart always -e POSTGRES_PASSWORD=1qazZAQ! postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoDb (option)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker run --name mongo -d -p 27017:27017 --restart always mongo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RabbitMQ&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d --restart always --name rabbimq -p 4369:4369 -p 5671-5672:5671-5672 -p 25672:25672 -p 15671-15672:15671-15672 \&#xA;       -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password \&#xA;       rabbitmq:3-management&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker remote api for mac&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d  --restart always --name socat -v /var/run/docker.sock:/var/run/docker.sock -p 2376:2375 bobrik/socat TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HBase&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d --restart always --name hbase -p 20550:8080 -p 8085:8085 -p 9090:9090 -p 9095:9095 -p 16010:16010 dajobe/hbase&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;MORE DOCUMENTS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/DotnetSpider/wiki&#34;&gt;https://github.com/dotnetcore/DotnetSpider/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SAMPLES&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Please see the Project DotnetSpider.Sample in the solution.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BASE USAGE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zlzforever/DotnetSpider/raw/master/src/DotnetSpider.Sample/samples/BaseUsage.cs&#34;&gt;Base usage Codes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ADDITIONAL USAGE: Configurable Entity Spider&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zlzforever/DotnetSpider/raw/master/src/DotnetSpider.Sample/samples/EntitySpider.cs&#34;&gt;View complete Codes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class EntitySpider : Spider&#xA;{&#xA;    public EntitySpider(IOptions&amp;lt;SpiderOptions&amp;gt; options, SpiderServices services, ILogger&amp;lt;Spider&amp;gt; logger) : base(&#xA;        options, services, logger)&#xA;    {&#xA;    }&#xA;&#xA;    #region Nested type: CnblogsEntry&#xA;&#xA;    [Schema(&#34;cnblogs&#34;, &#34;news&#34;)]&#xA;    [EntitySelector(Expression = &#34;.//div[@class=&#39;news_block&#39;]&#34;, Type = SelectorType.XPath)]&#xA;    [GlobalValueSelector(Expression = &#34;.//a[@class=&#39;current&#39;]&#34;, Name = &#34;类别&#34;, Type = SelectorType.XPath)]&#xA;    [FollowRequestSelector(XPaths = new[]&#xA;    {&#xA;        &#34;//div[@class=&#39;pager&#39;]&#34;&#xA;    })]&#xA;    public class CnblogsEntry : EntityBase&amp;lt;CnblogsEntry&amp;gt;&#xA;    {&#xA;        public int Id { get; set; }&#xA;&#xA;        [Required]&#xA;        [StringLength(200)]&#xA;        [ValueSelector(Expression = &#34;类别&#34;, Type = SelectorType.Environment)]&#xA;        public string Category { get; set; }&#xA;&#xA;        [Required]&#xA;        [StringLength(200)]&#xA;        [ValueSelector(Expression = &#34;网站&#34;, Type = SelectorType.Environment)]&#xA;        public string WebSite { get; set; }&#xA;&#xA;        [StringLength(200)]&#xA;        [ValueSelector(Expression = &#34;//title&#34;)]&#xA;        [ReplaceFormatter(NewValue = &#34;&#34;, OldValue = &#34; - 博客园&#34;)]&#xA;        public string Title { get; set; }&#xA;&#xA;        [StringLength(40)]&#xA;        [ValueSelector(Expression = &#34;GUID&#34;, Type = SelectorType.Environment)]&#xA;        public string Guid { get; set; }&#xA;&#xA;        [ValueSelector(Expression = &#34;.//h2[@class=&#39;news_entry&#39;]/a&#34;)]&#xA;        public string News { get; set; }&#xA;&#xA;        [ValueSelector(Expression = &#34;.//h2[@class=&#39;news_entry&#39;]/a/@href&#34;)]&#xA;        public string Url { get; set; }&#xA;&#xA;        [ValueSelector(Expression = &#34;.//div[@class=&#39;entry_summary&#39;]&#34;)]&#xA;        public string PlainText { get; set; }&#xA;&#xA;        [ValueSelector(Expression = &#34;DATETIME&#34;, Type = SelectorType.Environment)]&#xA;        public DateTime CreationTime { get; set; }&#xA;&#xA;        protected override void Configure()&#xA;        {&#xA;            HasIndex(x =&amp;gt; x.Title);&#xA;            HasIndex(x =&amp;gt; new&#xA;            {&#xA;                x.WebSite,&#xA;                x.Guid&#xA;            }, true);&#xA;        }&#xA;    }&#xA;&#xA;    #endregion&#xA;&#xA;    public static async Task RunAsync()&#xA;    {&#xA;        var builder = Builder.CreateDefaultBuilder&amp;lt;EntitySpider&amp;gt;();&#xA;        builder.UseSerilog();&#xA;        builder.UseQueueDistinctBfsScheduler&amp;lt;HashSetDuplicateRemover&amp;gt;();&#xA;        await builder.Build()&#xA;            .RunAsync();&#xA;    }&#xA;&#xA;    protected override async Task InitializeAsync(CancellationToken stoppingToken)&#xA;    {&#xA;        AddDataFlow(new DataParser&amp;lt;CnblogsEntry&amp;gt;());&#xA;        AddDataFlow(GetDefaultStorage());&#xA;        await AddRequestsAsync(new Request(&#34;https://news.cnblogs.com/n/page/1/&#34;, new Dictionary&amp;lt;string, string&amp;gt;&#xA;        {&#xA;            {&#xA;                &#34;网站&#34;, &#34;博客园&#34;&#xA;            }&#xA;        }), new Request(&#34;https://news.cnblogs.com/n/page/2/&#34;, new Dictionary&amp;lt;string, string&amp;gt;&#xA;        {&#xA;            {&#xA;                &#34;网站&#34;, &#34;博客园&#34;&#xA;            }&#xA;        }));&#xA;    }&#xA;&#xA;    protected override (string Id, string Name) GetIdAndName()&#xA;    {&#xA;        return (ObjectId.NewId.ToString(), &#34;博客园&#34;);&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Distributed spider&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/DotnetSpider/wiki/3-Distributed-Spider&#34;&gt;Read this document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Puppeteer downloader&lt;/h4&gt; &#xA;&lt;p&gt;Coming soon&lt;/p&gt; &#xA;&lt;h3&gt;NOTICE&lt;/h3&gt; &#xA;&lt;h4&gt;when you use redis scheduler, please update your redis config:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;timeout 0&#xA;tcp-keepalive 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bert.RateLimiters&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MessagePack&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Newtonsoft.Json&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dapper&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HtmlAgilityPack&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ZCJ.HashedWheelTimer&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;murmurhash&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serilog.AspNetCore&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serilog.Sinks.Console&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serilog.Sinks.RollingFile&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serilog.Sinks.PeriodicBatching&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB.Driver&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySqlConnector&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AutoMapper.Extensions.Microsoft.DependencyInjection&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker.DotNet&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BuildBundlerMinifier&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pomelo.EntityFrameworkCore.MySql&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quartz.AspNetCore&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quartz.AspNetCore.MySqlConnector&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Npgsql&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL License&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RabbitMQ.Client&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Polly&lt;/td&gt; &#xA;   &lt;td&gt;BSD 3-C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;AREAS FOR IMPROVEMENTS&lt;/h3&gt; &#xA;&lt;p&gt;QQ Group: 477731655 Email: &lt;a href=&#34;mailto:zlzforever@163.com&#34;&gt;zlzforever@163.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>builtbybel/BloatyNosy</title>
    <updated>2023-02-22T01:32:24Z</updated>
    <id>tag:github.com,2023-02-22:/builtbybel/BloatyNosy</id>
    <link href="https://github.com/builtbybel/BloatyNosy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next Gen-Debloat App for Windows 11&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bloaty &#39;Nosy (Bloaty &amp;amp; Nosy)&lt;/h1&gt; &#xA;&lt;h3&gt;Universal Debloater and PC Manager for the most up-to-date version of the Redmond OS (Windows 11)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/builtbybel/BloatyNosy/raw/main/assets/bloatynosy.png?raw=true&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Download here (early stable) &lt;a href=&#34;https://github.com/builtbybel/BloatyNosy/releases&#34;&gt;https://github.com/builtbybel/BloatyNosy/releases&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Windows 11 has a gazillion toggles and settings options. And general users don’t know where to find most of these features, what to make of them, and which setting to enable or disable. &lt;strong&gt;BloatyNosy&lt;/strong&gt; streamlines and houses all the essential settings under one app and allows you to disable and remove unnecessary features with just a simple click.&lt;/p&gt; &#xA;&lt;p&gt;It comes with a few modules that will be expanded over time, similar to &lt;a href=&#34;https://github.com/builtbybel/ThisIsWin11&#34;&gt;ThisIsWin11&lt;/a&gt;. &lt;em&gt;BloatyNosy may also replace the &lt;a href=&#34;https://github.com/builtbybel/ThisIsWin11&#34;&gt;ThisIsWin11&lt;/a&gt; app sooner or later and serve as a universal app debloater.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Via the link in the lower right corner &lt;strong&gt;&#34;I want to set up Windows 11 for the first time&#34;&lt;/strong&gt;, you can call a &lt;strong&gt;Windows 11 Setup/Assistant&lt;/strong&gt; and customize your system step by step and debloat it.&lt;/li&gt; &#xA; &lt;li&gt;You can skip the assistant and let the app module on the main page handle the analysis entirely. It will check and fix a tons of unnecessary components and creating a debloated Windows 11.&lt;/li&gt; &#xA; &lt;li&gt;It features a &lt;strong&gt;BloatFinder app&lt;/strong&gt;, which allows you to remove pre-installed apps automatically or the manual way.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;WinModder app&lt;/strong&gt; allows you to apply code snippets based on PowerShell and community scripts.&lt;/li&gt; &#xA; &lt;li&gt;Next to this the app installer &lt;strong&gt;InstaPackage&lt;/strong&gt; is integrated, which allows you to install some of the most important apps with a click and in bulk.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More infos here &lt;a href=&#34;https://www.builtbybel.com/blog/about-bloatynosy&#34;&gt;https://www.builtbybel.com/blog/about-bloatynosy&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>