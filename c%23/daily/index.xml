<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-09T01:30:41Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Richasy/Bili.Copilot</title>
    <updated>2023-08-09T01:30:41Z</updated>
    <id>tag:github.com,2023-08-09:/Richasy/Bili.Copilot</id>
    <link href="https://github.com/Richasy/Bili.Copilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;哔哩哔哩用户的个人助理&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Richasy/Bili.Copilot/master/assets/StoreLogo.png&#34; width=&#34;48px&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;哔哩助理&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Richasy/Bili.Copilot/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Richasy/Bili.Copilot&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/Richasy/Bili.Copilot&#34; alt=&#34;GitHub Release Date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Richasy/Bili.Copilot/total&#34; alt=&#34;GitHub All Releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Richasy/Bili.Copilot?style=flat&#34; alt=&#34;GitHub stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Richasy/Bili.Copilot&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;哔哩助理&lt;/code&gt; 是 &lt;a href=&#34;https://www.bilibili.com&#34;&gt;哔哩哔哩&lt;/a&gt; 的第三方桌面应用，适用于 Windows 11.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;#概述&#34;&gt;概述&lt;/a&gt; &amp;nbsp;•&amp;nbsp; &lt;a href=&#34;#安装&#34;&gt;安装&lt;/a&gt; &amp;nbsp;•&amp;nbsp; &lt;a href=&#34;#使用&#34;&gt;使用&lt;/a&gt; &amp;nbsp;•&amp;nbsp; &lt;a href=&#34;#模块&#34;&gt;模块&lt;/a&gt; &amp;nbsp;•&amp;nbsp; &lt;a href=&#34;#数据收集&#34;&gt;数据收集&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;概述&lt;/h2&gt; &#xA;&lt;p&gt;哔哩助理在 &lt;a href=&#34;https://github.com/Richasy/Bili.Uwp&#34;&gt;哔哩&lt;/a&gt; 的基础上通过 Windows App SDK 进行了重构，并通过 &lt;a href=&#34;https://github.com/Richasy/FantasyCopilot&#34;&gt;小幻助理&lt;/a&gt; 提供了 AI 功能.&lt;/p&gt; &#xA;&lt;p&gt;哔哩助理将以更开放的态度进行开发，借助社区力量，共同构建一个有意思的 UGC 客户端。&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开系统设置，依次选择 &lt;code&gt;系统&lt;/code&gt; -&amp;gt; &lt;code&gt;开发者选项&lt;/code&gt;，打开 &lt;code&gt;开发人员模式&lt;/code&gt;。滚动到页面底部，展开 &lt;code&gt;PowerShell&lt;/code&gt; 区块，开启 &lt;code&gt;更改执行策略...&lt;/code&gt; 选项&lt;/li&gt; &#xA; &lt;li&gt;打开 &lt;a href=&#34;https://github.com/Richasy/Bili.Copilot/releases&#34;&gt;Release&lt;/a&gt; 页面&lt;/li&gt; &#xA; &lt;li&gt;在最新版本的 &lt;strong&gt;Assets&lt;/strong&gt; 中找到应用包下载。命名格式为：&lt;code&gt;Bili.Copilot_{version}.zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;下载应用包后解压，右键单击文件夹中的 &lt;code&gt;install.ps1&lt;/code&gt; 脚本，选择 &lt;code&gt;使用 PowerShell 运行&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如果你不是第一次安装哔哩助理，那么直接双击后缀为 &lt;code&gt;msix&lt;/code&gt; 的安装文件即可更新或安装&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;h3&gt;常规&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;哔哩助理保留了常用的B站功能，但在开始使用前，你必须扫码登录自己的B站账户&lt;/li&gt; &#xA; &lt;li&gt;对于 ARM64 设备，如果你使用 Win11，可以直接下载 x64 安装包使用&lt;/li&gt; &#xA; &lt;li&gt;对于 Windows 10 设备，未来会逐步放弃支持&lt;/li&gt; &#xA; &lt;li&gt;应用主窗口大小固定，不可调整。其它子窗口如播放窗口、图片窗口等则可以自由调整。&lt;/li&gt; &#xA; &lt;li&gt;应用采用卡片式设计，对于卡片，右键单击也许会有惊喜&lt;/li&gt; &#xA; &lt;li&gt;其他的懒得写了，自己把玩吧&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;播放器&lt;/h3&gt; &#xA;&lt;p&gt;哔哩助理放弃了原生的 MediaPlayer 播放解决方案，因为在哔哩中验证了该方案并不能取得非常好的效果，特别是在面对哔哩哔哩这种流媒体时总有掣肘。&lt;/p&gt; &#xA;&lt;p&gt;于是在哔哩助理中使用了基于 ffmpeg 的 &lt;a href=&#34;https://github.com/SuRGeoNix/Flyleaf&#34;&gt;Flyleaf&lt;/a&gt; 作为播放器，并根据实际情况进行了代码优化。&lt;/p&gt; &#xA;&lt;p&gt;在播放同一条 4K 120fps 的视频时，哔哩、哔哩哔哩和哔哩助理的资源占用如下：&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Richasy/Bili.Copilot/master/assets/4k120compare.png&#34; style=&#34;max-width:600px&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;测试视频：&lt;a href=&#34;https://www.bilibili.com/video/BV14X4y1m7CQ&#34;&gt;【4K 120帧 Hi-Res】一首《スパークル(火花）》，能否让你回想起她的名字&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;以上测试很不严谨，结果仅供参考&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AI&lt;/h3&gt; &#xA;&lt;p&gt;哔哩助理本身不提供 AI 接口，AI 功能的实现依赖于我的另一个应用 &lt;a href=&#34;https://github.com/Richasy/FantasyCopilot&#34;&gt;小幻助理&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;所以如果你想要使用哔哩助理的 AI 功能，你需要先安装小幻助理，然后添加模型相关的配置。&lt;/p&gt; &#xA;&lt;p&gt;在哔哩助理内，提供了两种连接方式：&lt;code&gt;应用服务&lt;/code&gt; 与 &lt;code&gt;协议启动&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;应用服务可以在不启动小幻助理的情况下获取数据，但仅支持 Azure Open AI 和 Open AI。&lt;/p&gt; &#xA;&lt;p&gt;协议启动就是把需要总结的内容发送给小幻助理，在小幻助理中显示内容。这种方式支持自定义连接器，但是用户体验没有应用服务好。&lt;/p&gt; &#xA;&lt;p&gt;所以请根据自己的情况选择合适的连接方式。&lt;/p&gt; &#xA;&lt;h2&gt;模块&lt;/h2&gt; &#xA;&lt;p&gt;哔哩助理集成了多个功能模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SuRGeoNix/Flyleaf&#34;&gt;Flyleaf&lt;/a&gt;&lt;/p&gt; &lt;p&gt;一个基于 ffmpeg 的播放器，内建了截图和录屏的支持，做了非常棒的工作！由于哔哩助理播放的内容较为特殊，我需要对代码进行微调，所以应用内部使用的是派生版本。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nilaoda/BBDown&#34;&gt;BBDown&lt;/a&gt;&lt;/p&gt; &lt;p&gt;一个用于哔哩哔哩视频下载的命令行工具，效果很好。在迁移到 WinAppSDK 后，哔哩助理简化了 BBDown 的调用，如果你的设备安装了 BBDown，可以直接点击视频内的下载按钮进行下载。视频内容会被下载至视频文件夹的 &lt;code&gt;哔哩下载&lt;/code&gt; 目录中。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Richasy/FantasyCopilot&#34;&gt;小幻助理&lt;/a&gt;&lt;/p&gt; &lt;p&gt;我制作的 AI 应用，支持 Azure Open AI 与 Open AI 及几乎所有大模型（理论上），哔哩助理的 AI 功能将由小幻助理提供支持。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;哔哩助理也许会在未来集成更多的功能模块。&lt;/p&gt; &#xA;&lt;h2&gt;应用截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Richasy/Bili.Copilot/master/assets/screenshot.png&#34; alt=&#34;截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;数据收集&lt;/h2&gt; &#xA;&lt;p&gt;哔哩助理是个人练手作品，开发者承诺不会采集用户的隐私数据，同时不会将该应用用于商业用途。&lt;/p&gt; &#xA;&lt;p&gt;哔哩助理添加了 AppCenter 作为数据遥测工具，此举是为了了解一些功能的使用情况，以便后期有针对性地进行调整，采集的数据不包含任何个人隐私信息。&lt;/p&gt; &#xA;&lt;p&gt;你可以在 &lt;a href=&#34;https://raw.githubusercontent.com/Richasy/Bili.Copilot/master/src/App/TraceLogger.cs&#34;&gt;TraceLogger.cs&lt;/a&gt; 中查看用于遥测的采集内容。&lt;/p&gt; &#xA;&lt;p&gt;应用在运行时会记录错误，这些错误通常保存在本地日志中，只有遇到未捕获的错误及应用崩溃才会将这部分数据上传至 AppCenter 供开发者分析。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>icsharpcode/SharpZipLib</title>
    <updated>2023-08-09T01:30:41Z</updated>
    <id>tag:github.com,2023-08-09:/icsharpcode/SharpZipLib</id>
    <link href="https://github.com/icsharpcode/SharpZipLib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;#ziplib is a Zip, GZip, Tar and BZip2 library written entirely in C# for the .NET platform.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SharpZipLib &lt;a href=&#34;https://github.com/icsharpcode/SharpZipLib/actions/workflows/build-test.yml&#34;&gt;&lt;img src=&#34;https://github.com/icsharpcode/SharpZipLib/actions/workflows/build-test.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/SharpZipLib/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/SharpZipLib.svg?sanitize=true&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://openupm.com/packages/org.icsharpcode.sharpziplib/&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/org.icsharpcode.sharpziplib?label=openupm&amp;amp;registry_uri=https://package.openupm.com&#34; alt=&#34;openupm&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;SharpZipLib (#ziplib, formerly NZipLib) is a compression library that supports Zip files using both stored and deflate compression methods, PKZIP 2.0 style and AES encryption, tar with GNU long filename extensions, GZip, zlib and raw deflate, as well as BZip2. Zip64 is supported while Deflate64 is not yet supported. It is implemented as an assembly (installable in the GAC), and thus can easily be incorporated into other projects (in any .NET language). The creator of SharpZipLib put it this way: &#34;I&#39;ve ported the zip library over to C# because I needed gzip/zip compression and I didn&#39;t want to use libzip.dll or something like this. I want all in pure C#.&#34;&lt;/p&gt; &#xA;&lt;p&gt;SharpZipLib was originally ported from the &lt;a href=&#34;http://www.gnu.org/software/classpath/&#34;&gt;GNU Classpath&lt;/a&gt; java.util.zip library for use with &lt;a href=&#34;http://www.icsharpcode.net/OpenSource/SD&#34;&gt;SharpDevelop&lt;/a&gt;, which needed gzip/zip compression. bzip2 compression and tar archiving were added later due to popular demand.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;http://icsharpcode.github.io/SharpZipLib/&#34;&gt;SharpZipLib homepage&lt;/a&gt; has precompiled libraries available for download, &lt;a href=&#34;https://icsharpcode.github.io/SharpZipLib/help/api/index.html&#34;&gt;API documentation&lt;/a&gt;, &lt;a href=&#34;https://github.com/icsharpcode/SharpZipLib/wiki/Release-History&#34;&gt;release history&lt;/a&gt;, samples and more.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is now released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;. Please see &lt;a href=&#34;https://github.com/icsharpcode/SharpZipLib/issues/103&#34;&gt;issue #103&lt;/a&gt; for more information on the relicensing effort.&lt;/p&gt; &#xA;&lt;p&gt;Previous versions were released under the &lt;a href=&#34;http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GNU General Public License, version 2&lt;/a&gt; with an &lt;a href=&#34;http://www.gnu.org/software/classpath/license.html&#34;&gt;exception&lt;/a&gt; which allowed linking with non-GPL programs.&lt;/p&gt; &#xA;&lt;h2&gt;Namespace layout&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Module&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Namespace&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BZip2 implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.BZip2.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Checksum implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Checksum.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Core utilities / interfaces&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Core.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Encryption implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Encryption.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;GZip implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.GZip.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LZW implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Lzw.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Tar implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Tar.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ZIP implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Zip.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inflater/Deflater&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Zip.Compression.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inflater/Deflater streams&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ICSharpCode.SharpZipLib.Zip.Compression.Streams.*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;SharpZipLib was initially developed by &lt;a href=&#34;http://www.icsharpcode.net/pub/relations/krueger.aspx&#34;&gt;Mike Krüger&lt;/a&gt;. Past maintainers are John Reilly, David Pierson and Neil McNeight.&lt;/p&gt; &#xA;&lt;p&gt;And thanks to all the people that contributed features, bug fixes and issue reports.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rnwood/smtp4dev</title>
    <updated>2023-08-09T01:30:41Z</updated>
    <id>tag:github.com,2023-08-09:/rnwood/smtp4dev</id>
    <link href="https://github.com/rnwood/smtp4dev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;smtp4dev - the fake smtp email server for development and testing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rnwood/smtp4dev/master/Rnwood.Smtp4dev/ClientApp/public/logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;smtp4dev - the fake SMTP email server for development and testing.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A dummy SMTP server for Windows, Linux, Mac OS-X (and maybe elsewhere where .NET Core is available). Lets you test your application without spamming your real customers and without needing to set up a complicated real email server with a special configuration. Messages received in smtp4dev can be viewed and inspected.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you&#39;re looking for the older v2 Windows GUI version. &lt;a href=&#34;https://github.com/rnwood/smtp4dev/releases/tag/v2.0.10&#34;&gt;Grab it here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a style=&#34;float: right&#34; href=&#34;https://www.patreon.com/bePatron?u=38204828&#34; data-patreon-widget-type=&#34;become-patron-button&#34;&gt;&lt;img alt=&#34;Become a Patreon&#34; src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a style=&#34;float: right&#34; href=&#34;https://www.paypal.me/rnwood&#34;&gt;&lt;img alt=&#34;Donate&#34; src=&#34;https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_pp_142x27.png&#34;&gt;&lt;/a&gt; &lt;em&gt;If you find smtp4dev useful, please consider supporting further development by making a donation&lt;/em&gt; .&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rnwood/smtp4dev/wiki/Installation&#34;&gt;Installation Instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rnwood/smtp4dev/wiki/Configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rnwood/smtp4dev/wiki/Configuring-Clients&#34;&gt;Configuring your programs to send mails to smtp4dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rnwood/smtp4dev/master/screenshot1.png&#34; alt=&#34;Screenshot 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rnwood/smtp4dev/master/screenshot2.png&#34; alt=&#34;Screenshot 2&#34;&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Frnwood%2Fsmtp4dev?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Frnwood%2Fsmtp4dev.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Frnwood%2Fsmtp4dev?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Frnwood%2Fsmtp4dev.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>