<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-02T01:32:22Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Pryaxis/TShock</title>
    <updated>2022-10-02T01:32:22Z</updated>
    <id>tag:github.com,2022-10-02:/Pryaxis/TShock</id>
    <link href="https://github.com/Pryaxis/TShock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;☕️⚡️TShock provides Terraria servers with server-side characters, anti-cheat, and community management tools.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://tshock.co/newlogo.png&#34; alt=&#34;TShock for Terraria&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://ci.appveyor.com/project/hakusaro/tshock&#34;&gt; &lt;img src=&#34;https://ci.appveyor.com/api/projects/status/chhe61q227lqdlg1?svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/actions&#34;&gt; &lt;img src=&#34;https://github.com/Pryaxis/TShock/workflows/Build%20Server/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square&#34; alt=&#34;All contributors&#34;&gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/raw/general-devel/README_cn.md&#34;&gt;查看中文版&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;TShock is a toolbox for Terraria servers and communities. That toolbox is jam packed with anti-cheat tools, server-side characters, groups, permissions, item bans, tons of commands, and limitless potential. It&#39;s one of a kind.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download: &lt;a href=&#34;https://github.com/TShock/TShock/releases&#34;&gt;official&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#experimental-downloads&#34;&gt;experimental&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Download: &lt;a href=&#34;https://github.com/Pryaxis/plugins&#34;&gt;plugins and tools&lt;/a&gt; that work with TShock, TSAPI, and Terraria.&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://tshock.readme.io/&#34;&gt;the documentation&lt;/a&gt; to quickly get up to speed.&lt;/li&gt; &#xA; &lt;li&gt;Join &lt;a href=&#34;https://discord.gg/Cav9nYX&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use the ancient &lt;a href=&#34;https://tshock.co/xf/index.php?resources/&#34;&gt;old forums&lt;/a&gt; to find old stuff.&lt;/li&gt; &#xA; &lt;li&gt;Talk on &lt;a href=&#34;https://github.com/Pryaxis/TShock/discussions&#34;&gt;GitHub discussions&lt;/a&gt; to ask for help, chat, and other things. This is the best way to get help if Discord isn&#39;t your thing.&lt;/li&gt; &#xA; &lt;li&gt;For news, follow &lt;a href=&#34;https://twitter.com/Pryaxis&#34;&gt;@Pryaxis&lt;/a&gt; on Twitter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#new-to-tshock&#34;&gt;New to TShock?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#experimental-downloads&#34;&gt;Experimental Downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#developers-guide&#34;&gt;Developer&#39;s Guide&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#building&#34;&gt;Building&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-windows&#34;&gt;On Windows&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#the-terraria-server-api&#34;&gt;The Terraria Server API&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#tshock&#34;&gt;TShock&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-macos&#34;&gt;On macOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-linux&#34;&gt;On Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-unix&#34;&gt;On Unix&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#the-terraria-server-api-1&#34;&gt;The Terraria Server API&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#tshock-1&#34;&gt;TShock&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#working-with-terraria&#34;&gt;Working with Terraria&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;New to TShock?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;These instructions assume Windows. If you&#39;re setting up on Linux or macOS, please refer to &lt;a href=&#34;https://tshock.readme.io/docs/getting-started&#34;&gt;the in-depth guide&lt;/a&gt; (and don&#39;t forget to install the &lt;em&gt;latest version&lt;/em&gt; of &lt;code&gt;mono-complete&lt;/code&gt; on Linux).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download &lt;a href=&#34;https://github.com/TShock/TShock/releases&#34;&gt;the latest stable version&lt;/a&gt; and &lt;code&gt;unzip&lt;/code&gt; the folder using your favorite unzip tool. Make sure that all of the files in the zip get into one folder. This is where your server will be stored. The file structure looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   GeoIP.dat&#xA;   Newtonsoft.Json.dll&#xA;   OTAPI.dll&#xA;   ServerPlugins\&#xA;   |------BCrypt.Net.dll&#xA;   |------HttpServer.dll&#xA;   |------Mono.Data.Sqlite.dll&#xA;   |------MySql.Data.dll&#xA;   |------TShockAPI.dll&#xA;   TerrariaServer.exe&#xA;   sqlite3.dll&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start &lt;code&gt;TerrariaServer.exe&lt;/code&gt; and TShock will boot. Answer the startup questions, and you should be ready to roll. In the background, TShock made some folders for you. We&#39;ll come back to those later.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Startup Terraria. Connect to a &lt;code&gt;multiplayer&lt;/code&gt; server via IP and enter &lt;code&gt;localhost&lt;/code&gt; if you&#39;re doing this on your local computer. If you&#39;re doing it on another computer, you need its IP address.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look at the server console for the &lt;em&gt;setup code&lt;/em&gt;. Type &lt;code&gt;/setup [code]&lt;/code&gt; (example: &lt;code&gt;/setup 12345&lt;/code&gt;), then a space, then the code you see in the console in your game chat. Instead of chatting, you&#39;ll run a command on the server. This one makes you temporary admin. All commands are prefixed with &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;!&lt;/code&gt; (to make them silent).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the in-game command &lt;code&gt;/user add [account name] [password] owner&lt;/code&gt; (example: &lt;code&gt;/user add shank lovely-ashes owner&lt;/code&gt;) to create an account. This gives you owner rights on your server, which you can configure more to your liking later.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Login to your newly created account with &lt;code&gt;/login [account name] [password]&lt;/code&gt; (example: &lt;code&gt;/login shank grilled-cheese&lt;/code&gt;). You should see a login success message.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Turn off the setup system with &lt;code&gt;/setup&lt;/code&gt; and your server is setup for initial use. TShock also created several files inside a new &lt;code&gt;tshock&lt;/code&gt; folder. These files include &lt;code&gt;config.json&lt;/code&gt; (our big configuration file), &lt;code&gt;sscconfig.json&lt;/code&gt; (the server side characters configuration file), and &lt;code&gt;tshock.sqlite&lt;/code&gt;. Don&#39;t lose your &lt;code&gt;tshock.sqlite&lt;/code&gt; or you&#39;ll have to re-setup TShock.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can now &lt;a href=&#34;https://tshock.readme.io/docs/config-settings&#34;&gt;customize your configuration&lt;/a&gt;, build groups, ban items, and install more plugins.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Experimental Downloads&lt;/h2&gt; &#xA;&lt;p&gt;To download experimental versions of TShock, you have two real options: AppVeyor builds or GitHub builds. You can also get archived Travis CI builds. Fair warning though: experimental versions of TShock are point-in-time releases that are not technically supported by us. If you have to report an issue, please make it clear which commit or branch you downloaded your build from, which service, and the build number if applicable.&lt;/p&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://ci.appveyor.com/project/hakusaro/tshock/&#34;&gt;AppVeyor&lt;/a&gt;, click on history, find the build you want, click on the commit message, and then click on the artifacts tab. You can download either the debug or the release build. AppVeyor only keeps builds back 6 months though.&lt;/p&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://github.com/Pryaxis/TShock/&#34;&gt;GitHub&lt;/a&gt;, click on the actions tab, then click on &#34;build server&#34; on the commit or branch you want. If it was successful, you can download either the experimental release or debug artifacts.&lt;/p&gt; &#xA;&lt;p&gt;These instructions are also available as a &lt;a href=&#34;https://streamable.com/i9mfh9&#34;&gt;video tutorial on Streamable&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developer&#39;s Guide&lt;/h2&gt; &#xA;&lt;p&gt;Whether you want to contribute to TShock by sending a pull request, customize it to suit your own elvish desires, or want to build your own plugin, this is the best starting point. By the end of this, you&#39;ll be able to build TShock from source, start to finish. More than that, though, you&#39;ll know how to start on the path of becoming an expert TShock developer.&lt;/p&gt; &#xA;&lt;p&gt;But first, you need some background.&lt;/p&gt; &#xA;&lt;h3&gt;Background&lt;/h3&gt; &#xA;&lt;p&gt;Terraria is a C# application written on the .NET framework using the XNA game framework. TShock is a mod for Terraria&#39;s server, which is also written in C# on the .NET framework. Some might compare TShock to hMod in the Minecraft world (the precursor to Bukkit and its server, CraftBukkit). This is a good comparison to make in how the underlying build process works. When the project started, TShock was injected directly into the decompiled source code for Terraria. Unlike Minecraft, Terraria is not obfuscated, which means that many variable names and inner workings are sanely-named out of the box. Now, TShock uses advanced techniques to operate.&lt;/p&gt; &#xA;&lt;p&gt;TShock is, first and foremost, a plugin written for the server variant of the Terraria API, an unofficial construct originally built by &lt;code&gt;bladecoding&lt;/code&gt;. &lt;code&gt;TShock&lt;/code&gt; has been colloquially used to refer to both the plugin as well as the server and plugin together. Similarly, the Terraria API&#39;s client version was abandoned long ago, and development of the &lt;code&gt;Server&lt;/code&gt; API led to the abbreviation &lt;code&gt;TSAPI&lt;/code&gt;, for &lt;code&gt;Terraria Server API&lt;/code&gt;. The plugin &lt;code&gt;TShock&lt;/code&gt; is executed by the &lt;a href=&#34;https://github.com/Pryaxis/TerrariaAPI-Server&#34;&gt;Terraria Server API&lt;/a&gt;, which is in turn bound to the &lt;code&gt;Open Terraria API&lt;/code&gt;, more commonly &lt;code&gt;OTAPI&lt;/code&gt;. The &lt;a href=&#34;https://github.com/DeathCradle/Open-Terraria-API&#34;&gt;Open Terraria API&lt;/a&gt; is maintained by &lt;a href=&#34;https://github.com/DeathCradle&#34;&gt;DeathCradle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now, the way that &lt;code&gt;TShock&lt;/code&gt; runs on &lt;code&gt;TSAPI&lt;/code&gt; through &lt;code&gt;OTAPI&lt;/code&gt; can be summarized as the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The Open Terraria API deeply integrates with Terraria by modifying the official server&#39;s binary directly. This is done through rewriting the Terraria bytecode, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Common_Intermediate_Language&#34;&gt;CIL code&lt;/a&gt;, using a patching tool designed by DeathCradle and tools from the Mono project. For &lt;code&gt;TSAPI&lt;/code&gt;, additional modifications are done to support TSAPI specific features. This done through the &lt;code&gt;TShock Mintaka Patcher&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;Terraria Server API&lt;/code&gt; uses hooks provided by &lt;code&gt;OTAPI&lt;/code&gt; to provide higher level hooks as well as legacy hooks for existing TSAPI applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TShock&lt;/code&gt; is executed by &lt;code&gt;TSAPI&lt;/code&gt;, uses hooks provided by both &lt;code&gt;TSAPI&lt;/code&gt; and &lt;code&gt;OTAPI&lt;/code&gt;, and provides even higher level hooks and support tools to other &lt;code&gt;TSAPI&lt;/code&gt; plugins.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;With all of this in mind, the primary goal when compiling TShock is to remember that only the second and third layers are required to be interacted with. The first layer, &lt;code&gt;OTAPI&lt;/code&gt;, is provided pre-compiled through NuGet. The second layer, &lt;code&gt;TSAPI&lt;/code&gt;, is provided in the &lt;code&gt;TShock&lt;/code&gt; repository through a git submodule. Its primary home is the &lt;a href=&#34;https://github.com/Pryaxis/TerrariaAPI-Server&#34;&gt;Terraria Server API repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s get started.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;You need to get the source code. Using git, &lt;a href=&#34;https://help.github.com/articles/cloning-a-repository/&#34;&gt;clone this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The next set of instructions are the technical details to setup both the Terraria Server API and TShock. More importantly, the Terraria API steps here are written under the assumption that you are building TShock primarily. Before you start, you need to &lt;strong&gt;initialize the git submodules&lt;/strong&gt; and then &lt;strong&gt;update them&lt;/strong&gt;. You need to use the following commands to do this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;      $ git submodule init&#xA;      $ git submodule update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;a href=&#34;https://desktop.github.com&#34;&gt;GitHub Desktop&lt;/a&gt;, you need to perform additional steps. After cloning the TShock repository, go to the &lt;code&gt;Repository&lt;/code&gt; menu and select &lt;code&gt;Open in Command Prompt&lt;/code&gt;. If you don&#39;t have Git (not GitHub Desktop) installed, you can follow the prompts to to install Git for your command line. Once Git is installed, use this same process to get to the command prompt. Then, run the above commands.&lt;/p&gt; &#xA;&lt;h4&gt;On Windows&lt;/h4&gt; &#xA;&lt;p&gt;On Windows, you need to install &lt;a href=&#34;https://www.visualstudio.com/downloads/&#34;&gt;Visual Studio Community Edition&lt;/a&gt; or a better (more expensive) version of Visual Studio.&lt;/p&gt; &#xA;&lt;h5&gt;The Terraria Server API&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;TShock.4.OTAPI.sln&lt;/code&gt; solution in the &lt;code&gt;TerrariaServerAPI&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the &lt;code&gt;TShock.Modifications.Bootstrapper&lt;/code&gt; project as the StartUp project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the solution in either debug or release mode, depending on your preference. NuGet will automatically fetch the appropriate packages as a result of its magical powers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hit the &#34;Start&#34; button in Visual Studio to run the &lt;code&gt;TShock Mintaka Bootstrapper&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Watch the output window and make sure that a non-zero number of modifications ran. When it completes, you have successfully bootstrapped &lt;code&gt;TShock Mintaka&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the &lt;code&gt;TerrariaServerAPI&lt;/code&gt; project as the StartUp project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the solution in either debug or release mode, depending on your preference.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Close &lt;code&gt;TShock.4.OTAPI.sln&lt;/code&gt; in Visual Studio.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You need to re-run the patcher any time &lt;code&gt;OTAPI&lt;/code&gt; updates. You need to rebuild &lt;code&gt;TerrariaServerAPI&lt;/code&gt; any time that the submodule in &lt;code&gt;TShock&lt;/code&gt; gets changed, if you&#39;re doing this from inside the TShock repo. You also need to update the submodules (&lt;code&gt;git submodule update&lt;/code&gt;) if they&#39;re out of date on a pull too.&lt;/p&gt; &#xA;&lt;h5&gt;TShock&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;TShock.sln&lt;/code&gt; solution in the root of the repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the solution. It should correctly download NuGet packages automatically and build against the aforementioned &lt;code&gt;TerrariaServerAPI&lt;/code&gt; project you just built.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;On macOS&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; if you haven&#39;t already.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install mono:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ brew install mono&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify that mono is available:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ mono --version&#xA;&#xA;   Mono JIT compiler version 5.0.1.1 (2017-02/5077205 Sun Sep 17 18:29:46 BST 2017)&#xA;   ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Proceed to the &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-unix&#34;&gt;unix build steps&lt;/a&gt; to continue.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;On Linux&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; just install mono from your package manager unless told to do so. If you do and it&#39;s out of date, you probably won&#39;t be able to successfully develop for TShock.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the &lt;a href=&#34;http://www.mono-project.com/download/&#34;&gt;official install instructions for mono&lt;/a&gt;. &lt;strong&gt;DO&lt;/strong&gt; install &lt;code&gt;mono-complete&lt;/code&gt; or you&#39;re missing components.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Proceed to the &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#on-unix&#34;&gt;unix build steps&lt;/a&gt; to continue.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;On Unix&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You need to get NuGet. Download the latest &lt;code&gt;nuget.exe&lt;/code&gt; from &lt;a href=&#34;https://www.nuget.org/downloads&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make a &lt;code&gt;~/bin&lt;/code&gt; folder if you don&#39;t have one. Then, put &lt;code&gt;nuget.exe&lt;/code&gt; inside it.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ mkdir ~/bin/&#xA;   $ cp ~/downloads/nuget.exe ~/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set an environment variable to store if you plan to build in debug or release.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ export BUILD_MODE=Debug&#xA;&#xA;   or&#xA;&#xA;   $ export BUILD_MODE=Release&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;The Terraria Server API&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Perform a NuGet restore in the directory above &lt;code&gt;TerrariaServerAPI&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ mono ~/bin/nuget.exe restore ./TerrariaServerAPI/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the &lt;code&gt;TShock.4.OTAPI.sln&lt;/code&gt; solution the configuration you chose:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ xbuild ./TerrariaServerAPI/TShock.4.OTAPI.sln /p:Configuration=$BUILD_MODE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;TShock Mintaka Bootstrapper&lt;/code&gt; with the TShock modifications. If you don&#39;t use &lt;code&gt;/bin/bash&lt;/code&gt; as your primary shell, you might want to temporarily switch to it, or the bootstrapper may fail.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ cd ./TerrariaServerAPI/TShock.Modifications.Bootstrapper/bin/$BUILD_MODE/&#xA;   $ mono TShock.Modifications.Bootstrapper.exe -in=OTAPI.dll \&#xA;         -mod=../../../TShock.Modifications.**/bin/$BUILD_MODE/TShock.Modifications.*.dll \&#xA;         -o=Output/OTAPI.dll&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify that non-zero modifications ran successfully. Then, build the Terraria Server API executable.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ cd ../../../../&#xA;   $ xbuild ./TerrariaServerAPI/TerrariaServerAPI/TerrariaServerAPI.csproj \&#xA;         /p:Configuration=$BUILD_MODE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You need to re-run the patcher any time &lt;code&gt;OTAPI&lt;/code&gt; updates. You need to rebuild &lt;code&gt;TerrariaServerAPI&lt;/code&gt; any time that the submodule in &lt;code&gt;TShock&lt;/code&gt; gets changed, if you&#39;re doing this from inside the TShock repo. You also need to update the submodules (&lt;code&gt;git submodule update&lt;/code&gt;) if they&#39;re out of date on a pull too.&lt;/p&gt; &#xA;&lt;h5&gt;TShock&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Perform a NuGet restore in the folder that contains &lt;code&gt;TShock.sln&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ mono ~/bin/nuget.exe restore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build TShock in the &lt;code&gt;BUILD_MODE&lt;/code&gt; you set earlier.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ xbuild ./TShock.sln /p:Configuration=$BUILD_MODE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You&#39;re done!&lt;/p&gt; &#xA;&lt;h3&gt;Working with Terraria&lt;/h3&gt; &#xA;&lt;p&gt;Working with Terraria in TShock and in other Terraria Server API plugins is different from most other APIs. Due to the nature of how OTAPI works, you have direct access to all public fields in the &lt;code&gt;Terraria&lt;/code&gt; namespace. This means that you can access Terraria member methods directly. TShock and other plugins do this quite often, mostly to modify the game world, send data, and receive data. Calls to &lt;code&gt;Main&lt;/code&gt; are one such example of direct access to Terraria. This is the equivalent to &lt;code&gt;net.minecraft.server&lt;/code&gt; (NMS) calls in CraftBukkit.&lt;/p&gt; &#xA;&lt;p&gt;You might find yourself wondering where these fields are. Pryaxis provides the decompiled &lt;a href=&#34;https://github.com/pryaxis/Sources&#34;&gt;Sources&lt;/a&gt; to Terraria&#39;s server, updated with each release. Note that these decompiled servers do not re-compile. The process of fixing the decompiles has proven to be nearly impossible in a reasonable timeframe with the modern Terraria Server.&lt;/p&gt; &#xA;&lt;p&gt;Finally, you may be interested in developing other Terraria Server API plugins. The &lt;a href=&#34;https://github.com/TShockResources&#34;&gt;TShockResources&lt;/a&gt; organization has several plugins you can look at and build on. TShock is itself a plugin, and most plugins are open source. This gives you ample room to figure out where to go next.&lt;/p&gt; &#xA;&lt;p&gt;Need help? Join us on &lt;a href=&#34;https://t.me/pryaxis&#34;&gt;Telegram&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/Cav9nYX&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;By participating in the TShock for Terraria community, all members will adhere to maintaining decorum with respect to all humans, in and out of the community. Members will not engage in discussion that inappropriately disparages or marginalizes any group of people or any individual. Members will not attempt to further or advance an agenda to the point of being overbearing or close minded (such as through spreading FUD). Members will not abuse services provided to them and will follow the guidance of community leaders on a situational basis about what abuse consists of. Members will adhere to United States and international law. If members notice a violation of this code of conduct, they will not engage but will instead contact the leadership team on either the forums or Discord.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Do not attempt to circumvent or bypass the code of conduct by using clever logic or reasoning (e.g., insulting Facepunch members, because they weren&#39;t directly mentioned here).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Note: This list is out of date. All contributors &lt;a href=&#34;https://github.com/Pryaxis/TShock/graphs/contributors&#34;&gt;listed on the GitHub graph&lt;/a&gt; should be listed here.&lt;/p&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://avikav.net&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/18518861?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AviKav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/issues?q=author%3AAviKav&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=AviKav&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tshock.co&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/3332657?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rodrigo Rente&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=AxisKriel&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#projectManagement-AxisKriel&#34; title=&#34;Project Management&#34;&gt;📆&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=AxisKriel&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sgkoi.dev&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/9637711?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stargazing Koishi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=sgkoishi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#infra-sgkoishi&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AxeelAnder&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/25691207?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Axeel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=AxeelAnder&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Pryaxis/TShock/general-devel/#projectManagement-AxeelAnder&#34; title=&#34;Project Management&#34;&gt;📆&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://aurora-gaming.org/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/58985873?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrikkk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Patrikkk&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Patrikkk&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Patrikkk&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.nathaneaston.com/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10368650?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nathan Easton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=ndragon798&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Ristellise&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/7894419?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shinon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Ristellise&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Ristellise&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Ristellise&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Retrograde-i486&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/65242258?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Retrograde-i486&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=Retrograde-i486&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://colinbohn.me&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1351268?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Colin Bohn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=ColinBohn&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mrshroomy&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/52048952?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mrshroomy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=mrshroomy&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/agentsparrow&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/16114336?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;agentsparrow&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Pryaxis/TShock/commits?author=agentsparrow&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Dec0ne/KrbRelayUp</title>
    <updated>2022-10-02T01:32:22Z</updated>
    <id>tag:github.com,2022-10-02:/Dec0ne/KrbRelayUp</id>
    <link href="https://github.com/Dec0ne/KrbRelayUp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KrbRelayUp - a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced (the default settings).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KrbRelayUp&lt;/h1&gt; &#xA;&lt;p&gt;Simple wrapper around some of the features of &lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt; and &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt; (and a few other honorable mentions in the acknowledgements section) in order to streamline the abuse of the following attack primitive:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;(Optional) New machine account creation (&lt;a href=&#34;https://github.com/Kevin-Robertson/Powermad/raw/master/Powermad.ps1&#34;&gt;New-MachineAccount&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Local machine account auth coercion (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Kerberos relay to LDAP (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Add RBCD privs and obtain privileged ST to local machine (&lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using said ST to authenticate to local Service Manager and create a new service as NT/SYSTEM. (&lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;SCMUACBypass&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is essentially a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced (the default settings).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; &lt;a href=&#34;https://gist.github.com/tothi/bf6c59d6de5d0c9710f23dae5750c4b9&#34;&gt;Here&lt;/a&gt; is an excellent writeup by &lt;a href=&#34;https://twitter.com/an0n_r0&#34;&gt;@an0n_r0&lt;/a&gt; on how to perform this attack manually (using the &lt;strong&gt;original tools&lt;/strong&gt; for this attack path: &lt;a href=&#34;https://github.com/Kevin-Robertson/Powermad&#34;&gt;PowerMad&lt;/a&gt;/&lt;a href=&#34;https://github.com/Kevin-Robertson/Sharpmad&#34;&gt;SharpMad&lt;/a&gt;, &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;, &lt;a href=&#34;https://github.com/GhostPack/Rubeus&#34;&gt;Rubeus&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;SCMUACBypass&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Update - Shadow Credentials Support&lt;/h3&gt; &#xA;&lt;p&gt;I added some features to support this attack primitive using shadow credentials. Note this eliminates the need for adding (or owning) another machine account.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: &lt;em&gt;this attack method bypasses the Protected Users (or &#39;Account is sensitive and cannot be delegated&#39;) mitigation due to the S4U2Self abuse.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Local machine account auth coercion (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Kerberos relay to LDAP (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Generate new KeyCredential and add it to the local machine account&#39;s &#39;msDS-KeyCredentialLink&#39; attribute. (&lt;a href=&#34;https://github.com/eladshamir/Whisker&#34;&gt;Whisker&lt;/a&gt; and &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using said KeyCredential to obtain a TGT for the local machine account via PKInit. (&lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using the TGT to obtain privileged ST to local machine via S4U2Self and TGSSUB. (&lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using said ST to authenticate to local Service Manager and create a new service as NT/SYSTEM. (&lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;SCMUACBypass&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; &lt;a href=&#34;https://icyguider.github.io/2022/05/19/NoFix-LPE-Using-KrbRelay-With-Shadow-Credentials.html&#34;&gt;Here&lt;/a&gt; is an excellent writeup by &lt;a href=&#34;https://twitter.com/icyguider&#34;&gt;@icyguider&lt;/a&gt; on how to perform the ShadowCred method of this attack manually (using the &lt;strong&gt;original tools&lt;/strong&gt; for this attack path: &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;, &lt;a href=&#34;https://github.com/GhostPack/Rubeus&#34;&gt;Rubeus&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;SCMUACBypass&lt;/a&gt;) along with the usage of &lt;a href=&#34;https://github.com/icyguider/Nimcrypt2&#34;&gt;NimCrypt2&lt;/a&gt; to pack the various tools and evade some detection by defensive mechanism.&lt;/p&gt; &#xA;&lt;h3&gt;Update - ADCS Web Enrollment Support&lt;/h3&gt; &#xA;&lt;p&gt;I added support for relaying Machine KRB auth to ADCS Web Enrollment (instead of LDAP). This eliminates the requirement of LDAP Signing not to be enforced in the domain since this attack does not relay to LDAP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: &lt;em&gt;this attack method bypasses the Protected Users (or &#39;Account is sensitive and cannot be delegated&#39;) mitigation due to the S4U2Self abuse.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Local machine account auth coercion (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Kerberos relay to ADCS (HTTP) (&lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt; and &lt;a href=&#34;https://github.com/bats3c/ADCSPwn/&#34;&gt;ADCSPwn&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Generate certificate request on behalf of the local machine account, submit it to ADCS Web Enrollment and finally retreive the certificate for the local machine account (&lt;a href=&#34;https://github.com/bats3c/ADCSPwn/&#34;&gt;ADCSPwn&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using said certificate to obtain a TGT for the local machine account via PKInit. (&lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using the TGT to obtain privileged ST to local machine via S4U2Self and TGSSUB. (&lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using said ST to authenticate to local Service Manager and create a new service as NT/SYSTEM. (&lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;SCMUACBypass&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;KrbRelayUp - Relaying you to SYSTEM&#xA;&#xA;FULL: Perform full attack chain. Options are identical to RELAY. Tool must be on disk.&#xA;&#xA;RELAY: First phase of the attack. Will Coerce Kerberos auth from local machine account, relay it to LDAP and create a control primitive over the local machine using RBCD or SHADOWCRED.&#xA;Usage: KrbRelayUp.exe relay -d FQDN -cn COMPUTERNAME [-c] [-cp PASSWORD | -ch NTHASH]&#xA;&#xA;    -m   (--Method)                   Abuse method to use in after a successful relay to LDAP &amp;lt;rbcd/shadowcred&amp;gt; (default=rbcd)&#xA;    -p   (--Port)                     Port for Com Server (default=12345)&#xA;    -cls (--Clsid)                    CLSID to use for coercing Kerberos auth from local machine account (default=90f18417-f0f1-484e-9d3c-59dceee5dbd8)&#xA;&#xA;    # RBCD Method:&#xA;    -c   (--CreateNewComputerAccount) Create new computer account for RBCD. Will use the current authenticated user.&#xA;    -cn  (--ComputerName)             Name of attacker owned computer account for RBCD. (default=KRBRELAYUP$)&#xA;    -cp  (--ComputerPassword)         Password of computer account for RBCD. (default=RANDOM [if -c is enabled])&#xA;&#xA;    # SHADOWCRED Method:&#xA;    -f   (--ForceShadowCred)          Clear the msDS-KeyCredentialLink attribute of the attacked computer account before adding our new shadow credentials. (Optional)&#xA;&#xA;    # ADCS Method:&#xA;    -ca  (--CAEndpoint)               CA endpoint FQDN (default = same as DC)&#xA;    -https                            Connect to CA endpoint over secure HTTPS instead of HTTP)&#xA;    -cet (--CertificateTemplate)      Certificate template to request for (default=Machine)&#xA;&#xA;&#xA;SPAWN: Second phase of the attack. Will use the appropriate control primitive to obtain a Kerberos Service Ticket and will use it to create a new service running as SYSTEM.&#xA;Usage: KrbRelayUp.exe spawn -d FQDN -cn COMPUTERNAME [-cp PASSWORD | -ch NTHASH] &amp;lt;-i USERTOIMPERSONATE&amp;gt;&#xA;&#xA;    -m   (--Method)                   Abuse method used in RELAY phase &amp;lt;rbcd/shadowcred&amp;gt; (default=rbcd)&#xA;    -i   (--Impersonate)              User to impersonate. should be a local administrator in the target computer. (default=Administrator)&#xA;    -s   (--ServiceName)              Name of the service to be created. (default=KrbSCM)&#xA;    -sc  (--ServiceCommand)           Service command [binPath]. (default = spawn cmd.exe as SYSTEM)&#xA;&#xA;    # RBCD Method:&#xA;    -cn  (--ComputerName)             Name of attacker owned computer account for RBCD. (default=KRBRELAYUP$)&#xA;    -cp  (--ComputerPassword)         Password of computer account for RBCD. (either -cp or -ch must be specified)&#xA;    -ch  (--ComputerPasswordHash)     Password NT hash of computer account for RBCD. (either -cp or -ch must be specified)&#xA;&#xA;    # SHADOWCRED | ADCS Method:&#xA;    -ce  (--Certificate)              Base64 encoded certificate or path to certificate file&#xA;    -cep (--CertificatePassword)      Certificate password (if applicable)&#xA;&#xA;&#xA;KRBSCM: Will use the currently loaded Kerberos Service Ticket to create a new service running as SYSTEM.&#xA;Usage: KrbRelayUp.exe krbscm &amp;lt;-s SERVICENAME&amp;gt; &amp;lt;-sc SERVICECOMMANDLINE&amp;gt;&#xA;&#xA;    -s  (--ServiceName)              Name of the service to be created. (default=KrbSCM)&#xA;    -sc (--ServiceCommand)           Service command [binPath]. (default = spawn cmd.exe as SYSTEM)&#xA;&#xA;&#xA;General Options:&#xA;    -d  (--Domain)                   FQDN of domain. (Optional)&#xA;    -dc (--DomainController)         FQDN of domain controller. (Optional)&#xA;    -ssl                             Use LDAP over SSL. (Optional)&#xA;    -n                               Use CreateNetOnly (needs to be on disk) instead of PTT when importing ST (enabled if using FULL mode)&#xA;    -v  (--Verbose)                  Show verbose output. (Optional)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Dec0ne/KrbRelayUp/main/Images/example_rbcd.png&#34; alt=&#34;example&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Dec0ne/KrbRelayUp/main/Images/example_shadowcred.png&#34; alt=&#34;example&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Dec0ne/KrbRelayUp/main/Images/example_adcs.png&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code refactoring and cleanup!!!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add ShadowCred attack as a RELAY method&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add TGTDELEG attack in SPAWN method to be used in Network Service-&amp;gt;SYSTEM scenarios (potatoes alternative)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fix the issue I&#39;m having trying to combine the RELAY and SPAWN methods into one run so it can be used as one complete command. Probably has something to do with the fact that both RELAY and SPAWN functionalities rely on hooks during the initialization of the COM Server (Once RELAY initializes its COM Server the SPAWN can&#39;t re-initialize it to place its hooks as well)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mitigation &amp;amp; Detection&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enforce LDAP Signing and LDAP Channel Binding to mitigate the relay of the machine account KRB auth to LDAP. This can be configured via the &#34;Domain Controller: LDAP server signing requirements&#34; GPO. (Thank you &lt;a href=&#34;https://twitter.com/wdormann&#34;&gt;Will Dormann&lt;/a&gt; for your &lt;a href=&#34;https://twitter.com/wdormann/status/1518999885550440451&#34;&gt;tweet&lt;/a&gt; on this matter)&lt;/li&gt; &#xA; &lt;li&gt;Make the attack requirements harder to obtain by setting the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/adschema/a-ms-ds-machineaccountquota&#34;&gt;MS-DS-Machine-Account-Quota attribute&lt;/a&gt; in AD to &lt;strong&gt;0&lt;/strong&gt;, thus removing the ability of any user to add a new machine account to the domain. This is a dangerous default setting in AD - make sure you change it.&lt;/li&gt; &#xA; &lt;li&gt;Setting the flag &#34;Account is sensitive and cannot be delegated&#34; on all admin accounts (or put them in protected users) would make it so there is no account with the privileges required that can be delegated in order to complete the attack path. (Thanks to &lt;a href=&#34;https://twitter.com/cfalta&#34;&gt;Christoph Falta&lt;/a&gt; for this &lt;a href=&#34;https://twitter.com/cfalta/status/1519309206230339585&#34;&gt;tweet&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Mitigation for ADCS Relay - Enforcing the use of TLS on the &lt;em&gt;&lt;strong&gt;certsrv&lt;/strong&gt;&lt;/em&gt; site and enabling &lt;em&gt;&lt;strong&gt;Extended Protection for Authentication (EPA)&lt;/strong&gt;&lt;/em&gt; in IIS will prevent the relay to ADCS. (Thanks to &lt;a href=&#34;https://twitter.com/wdormann&#34;&gt;Will Dormann&lt;/a&gt; for pointing that out in his &lt;a href=&#34;https://twitter.com/wdormann/status/1528944331922583552&#34;&gt;tweet&lt;/a&gt;, this also was mentioned in &lt;a href=&#34;https://twitter.com/_dirkjan&#34;&gt;Dirk-jan Mollema&lt;/a&gt; post on &lt;a href=&#34;https://dirkjanm.io/relaying-kerberos-over-dns-with-krbrelayx-and-mitm6/&#34;&gt;Relaying Kerberos over DNS using krbrelayx and mitm6&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Resources for possible monitoring and detection rules: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tsale/Sigma_rules/raw/main/windows_exploitation/KrbRelayUp.yml&#34;&gt;https://github.com/tsale/Sigma_rules/blob/main/windows_exploitation/KrbRelayUp.yml&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/Kostastsale&#34;&gt;@Kostastsale&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/SBousseaden/status/1518976397364056071&#34;&gt;https://twitter.com/SBousseaden/status/1518976397364056071&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/SBousseaden&#34;&gt;@SBousseaden&lt;/a&gt;). Mainly the rule about authentication to Service Manager via Kerberos from 127.0.0.1, Great Work!.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/posts/john-dwyer-xforce_threathunting-threatdetection-blueteam-activity-6924739962131140608-py45/&#34;&gt;https://www.linkedin.com/posts/john-dwyer-xforce_threathunting-threatdetection-blueteam-activity-6924739962131140608-py45/&lt;/a&gt; (&lt;a href=&#34;https://www.linkedin.com/in/john-dwyer-xforce/&#34;&gt;John Dwyer&lt;/a&gt; &lt;a href=&#34;https://twitter.com/TactiKoolSec&#34;&gt;@TactiKoolSec&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/cyb3rops/status/1519241598311321601&#34;&gt;https://twitter.com/cyb3rops/status/1519241598311321601&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/cyb3rops&#34;&gt;@cyb3rops&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/tiraniddo&#34;&gt;James Forshaw&lt;/a&gt; for his research on &lt;a href=&#34;https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html&#34;&gt;Kerberos relaying&lt;/a&gt; and for figuring out how to &lt;a href=&#34;https://gist.github.com/tyranid/c24cfd1bd141d14d4925043ee7e03c82&#34;&gt;use Kerberos Service Tickets for LOCAL authentication to Service Manager&lt;/a&gt; which was the missing piece of the puzzle in order to make this attack primitive &lt;strong&gt;local only&lt;/strong&gt; (before that, we had to export the ST to a remote machine in order to use it and gain privileged access to our target machine). Also for his &lt;a href=&#34;https://github.com/Kevin-Robertson/Powermad/raw/master/Powermad.ps1&#34;&gt;New-MachineAccount&lt;/a&gt; functionality which was used in this project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/cube0x0&#34;&gt;Cube0x0&lt;/a&gt; This project wouldn&#39;t exist without his amazing work on &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt; - a lot of code was taken from there and it made me gain a deeper understanding on how Kerberos Relaying works (I really recommend going through the code for anyone who wish to understand the concept better).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/elad_shamir&#34;&gt;Elad Shamir&lt;/a&gt; for his research on &lt;a href=&#34;https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab&#34;&gt;Shadow Credentials&lt;/a&gt; and his awsome tool &lt;a href=&#34;https://github.com/eladshamir/Whisker&#34;&gt;Whisker&lt;/a&gt; - parts of his code (and of course &lt;a href=&#34;https://twitter.com/cube0x0&#34;&gt;cube0x0&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/cube0x0/KrbRelay&#34;&gt;KrbRelay&lt;/a&gt; code) was used to add support for the Shadow Credentials attack in this tool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;Will Schroeder&lt;/a&gt; and everyone who contributed to &lt;a href=&#34;https://github.com/GhostPack/Rubeus/&#34;&gt;Rubeus&lt;/a&gt; which we all know and love. Basically all the RBCD-S4U functionality was taken from there. Also, for &lt;a href=&#34;https://github.com/GhostPack/Certify&#34;&gt;Certify&lt;/a&gt; and the &lt;a href=&#34;https://specterops.io/assets/resources/Certified_Pre-Owned.pdf&#34;&gt;Certified Pre-Owned whitepaper&lt;/a&gt; (credits goes to &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;Lee Christensen&lt;/a&gt; as well) which was used when adding the ADCS Web Enrollment Relay option.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/_batsec_&#34;&gt;batsec&lt;/a&gt; and everyone who contributed to &lt;a href=&#34;https://github.com/bats3c/ADCSPwn/&#34;&gt;ADCSPwn&lt;/a&gt;. A lot of code related to the ADCS Web Enrollment Relay option was taken from this awesome tool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mgrafnetter&#34;&gt;Michael Grafnetter&lt;/a&gt; for his tool &lt;a href=&#34;https://github.com/MichaelGrafnetter/DSInternals&#34;&gt;DSInternals&lt;/a&gt; which was used here to help with the Shadow Credentials functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Orange-Cyberdefense&#34;&gt;Orange-Cyberdefense&lt;/a&gt; for their work on &lt;a href=&#34;https://github.com/Orange-Cyberdefense/GOAD&#34;&gt;GOAD&lt;/a&gt;, the Active Directory research lab I am using which you can see in the demo video and images.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>