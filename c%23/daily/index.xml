<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-30T01:31:01Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Code52/carnac</title>
    <updated>2023-01-30T01:31:01Z</updated>
    <id>tag:github.com,2023-01-30:/Code52/carnac</id>
    <link href="https://github.com/Code52/carnac" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A utility to give some insight into how you use your keyboard&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Carnac the Magnificent Keyboard Utility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/Code52/carnac?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Code52/carnac&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A keyboard logging and presentation utility for presentations, screencasts, and to help you become a better keyboard user.&lt;/p&gt; &#xA;&lt;h3&gt;Build Status&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/shiftkey/carnac&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/qorhqwc2favf18r4?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can install the latest version of Carnac via &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps&#34;&gt;cinst carnac&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can grab the latest zip file from &lt;a href=&#34;https://github.com/Code52/carnac/releases/latest&#34;&gt;here&lt;/a&gt;, unpack it and run &lt;code&gt;Setup.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Carnac requires .NET 4.5.2 to work - you can install that from &lt;a href=&#34;https://www.microsoft.com/en-au/download/details.aspx?id=42643&#34;&gt;here&lt;/a&gt; if you don&#39;t have it already.&lt;/p&gt; &#xA;&lt;h3&gt;Updating&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;code&gt;Squirrel.Windows&lt;/code&gt; to update your &lt;code&gt;carnac&lt;/code&gt; application.&lt;/p&gt; &#xA;&lt;p&gt;The application will check for updates in the background, if a new version has been released, it will automatically install the new version and once you restart &lt;code&gt;carnac&lt;/code&gt; you will be up-to-date.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enabling silent mode&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to stop &lt;code&gt;Carnac&lt;/code&gt; from recording certain key strokes, you can enter &lt;em&gt;silent mode&lt;/em&gt; by pressing &lt;code&gt;Ctrl+Alt+P&lt;/code&gt;. To exit &lt;em&gt;silent mode&lt;/em&gt; you simply press &lt;code&gt;Ctrl+Alt+P&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Getting started with Git and GitHub&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://help.github.com/win-set-up-git/&#34;&gt;Setting up Git for Windows and connecting to GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://help.github.com/fork-a-repo/&#34;&gt;Forking a GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rogerdudler.github.com/git-guide/&#34;&gt;The simple guide to GIT guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Code52/carnac/issues&#34;&gt;Open an issue&lt;/a&gt; if you encounter a bug or have a suggestion for improvements/features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you&#39;re familiar with Git and GitHub, clone the repository and run the &lt;code&gt;.\build.cmd&lt;/code&gt; script to compile the code and run all the unit tests. You can use this script to test your changes quickly.&lt;/p&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;p&gt;This blog series covers a series of refactorings which have recently happened in Carnac to make better use of Rx. If you are learning Rx and want to be shown through Carnac&#39;s codebase then this blog series may help you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jake.ginnivan.net/blog/carnac-improvements/part-1/&#34;&gt;Part 1 - Refactoring the InterceptKeys class &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://jake.ginnivan.net/blog/carnac-improvements/part-2/&#34;&gt;Part 2 - Refactoring the MessageProvider class&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://jake.ginnivan.net/blog/carnac-improvements/part-3/&#34;&gt;Part 3 - Introducing the MessageController class&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GhostPack/Seatbelt</title>
    <updated>2023-01-30T01:31:01Z</updated>
    <id>tag:github.com,2023-01-30:/GhostPack/Seatbelt</id>
    <link href="https://github.com/GhostPack/Seatbelt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Seatbelt is a C# project that performs a number of security oriented host-survey &#34;safety checks&#34; relevant from both offensive and defensive security perspectives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Seatbelt&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Seatbelt is a C# project that performs a number of security oriented host-survey &#34;safety checks&#34; relevant from both offensive and defensive security perspectives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/andrewchiles&#34;&gt;@andrewchiles&lt;/a&gt;&#39; &lt;a href=&#34;https://github.com/threatexpress/red-team-scripts/raw/master/HostEnum.ps1&#34;&gt;HostEnum.ps1&lt;/a&gt; script and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/leechristensen/Random/raw/master/PowerShellScripts/Get-HostProfile.ps1&#34;&gt;Get-HostProfile.ps1&lt;/a&gt; provided inspiration for many of the artifacts to collect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;@harmj0y&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt; are the primary authors of this implementation.&lt;/p&gt; &#xA;&lt;p&gt;Seatbelt is licensed under the BSD 3-Clause license.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#seatbelt&#34;&gt;Seatbelt&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-line-usage&#34;&gt;Command Line Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-groups&#34;&gt;Command Groups&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#system&#34;&gt;system&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#user&#34;&gt;user&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#misc&#34;&gt;misc&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#additional-command-groups&#34;&gt;Additional Command Groups&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#command-arguments&#34;&gt;Command Arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#output&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#remote-enumeration&#34;&gt;Remote Enumeration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#building-your-own-modules&#34;&gt;Building Your Own Modules&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#compile-instructions&#34;&gt;Compile Instructions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/#acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command Line Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&#xA;                        %&amp;amp;&amp;amp;@@@&amp;amp;&amp;amp;&#xA;                        &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;%%%,                       #&amp;amp;&amp;amp;@@@@@@%%%%%%###############%&#xA;                        &amp;amp;%&amp;amp;   %&amp;amp;%%                        &amp;amp;////(((&amp;amp;%%%%%#%################//((((###%%%%%%%%%%%%%%%&#xA;%%%%%%%%%%%######%%%#%%####%  &amp;amp;%%**#                      @////(((&amp;amp;%%%%%%######################(((((((((((((((((((&#xA;#%#%%%%%%%#######%#%%#######  %&amp;amp;%,,,,,,,,,,,,,,,,         @////(((&amp;amp;%%%%%#%#####################(((((((((((((((((((&#xA;#%#%%%%%%#####%%#%#%%#######  %%%,,,,,,  ,,.   ,,         @////(((&amp;amp;%%%%%%%######################(#(((#(#((((((((((&#xA;#####%%%####################  &amp;amp;%%......  ...   ..         @////(((&amp;amp;%%%%%%%###############%######((#(#(####((((((((&#xA;#######%##########%#########  %%%......  ...   ..         @////(((&amp;amp;%%%%%#########################(#(#######((#####&#xA;###%##%%####################  &amp;amp;%%...............          @////(((&amp;amp;%%%%%%%%##############%#######(#########((#####&#xA;#####%######################  %%%..                       @////(((&amp;amp;%%%%%%%################&#xA;                        &amp;amp;%&amp;amp;   %%%%%      Seatbelt         %////(((&amp;amp;%%%%%%%%#############*&#xA;                        &amp;amp;%%&amp;amp;&amp;amp;&amp;amp;%%%%%        v1.2.0         ,(((&amp;amp;%%%%%%%%%%%%%%%%%,&#xA;                         #%%%%##,&#xA;&#xA;&#xA;Available commands (+ means remote usage is supported):&#xA;&#xA;    + AMSIProviders          - Providers registered for AMSI&#xA;    + AntiVirus              - Registered antivirus (via WMI)&#xA;    + AppLocker              - AppLocker settings, if installed&#xA;      ARPTable               - Lists the current ARP table and adapter information (equivalent to arp -a)&#xA;      AuditPolicies          - Enumerates classic and advanced audit policy settings&#xA;    + AuditPolicyRegistry    - Audit settings via the registry&#xA;    + AutoRuns               - Auto run executables/scripts/programs&#xA;      Certificates           - Finds user and machine personal certificate files&#xA;      CertificateThumbprints - Finds thumbprints for all certificate store certs on the systen&#xA;    + ChromiumBookmarks      - Parses any found Chrome/Edge/Brave/Opera bookmark files&#xA;    + ChromiumHistory        - Parses any found Chrome/Edge/Brave/Opera history files&#xA;    + ChromiumPresence       - Checks if interesting Chrome/Edge/Brave/Opera files exist&#xA;    + CloudCredentials       - AWS/Google/Azure/Bluemix cloud credential files&#xA;    + CloudSyncProviders     - All configured Office 365 endpoints (tenants and teamsites) which are synchronised by OneDrive.&#xA;      CredEnum               - Enumerates the current user&#39;s saved credentials using CredEnumerate()&#xA;    + CredGuard              - CredentialGuard configuration&#xA;      dir                    - Lists files/folders. By default, lists users&#39; downloads, documents, and desktop folders (arguments == [directory] [maxDepth] [regex] [boolIgnoreErrors]&#xA;    + DNSCache               - DNS cache entries (via WMI)&#xA;    + DotNet                 - DotNet versions&#xA;    + DpapiMasterKeys        - List DPAPI master keys&#xA;      Dsregcmd               - Return Tenant information - Replacement for Dsregcmd /status&#xA;      EnvironmentPath        - Current environment %PATH$ folders and SDDL information&#xA;    + EnvironmentVariables   - Current environment variables&#xA;    + ExplicitLogonEvents    - Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days.&#xA;      ExplorerMRUs           - Explorer most recently used files (last 7 days, argument == last X days)&#xA;    + ExplorerRunCommands    - Recent Explorer &#34;run&#34; commands&#xA;      FileInfo               - Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s)&#xA;    + FileZilla              - FileZilla configuration files&#xA;    + FirefoxHistory         - Parses any found FireFox history files&#xA;    + FirefoxPresence        - Checks if interesting Firefox files exist&#xA;    + Hotfixes               - Installed hotfixes (via WMI)&#xA;      IdleTime               - Returns the number of seconds since the current user&#39;s last input.&#xA;    + IEFavorites            - Internet Explorer favorites&#xA;      IETabs                 - Open Internet Explorer tabs&#xA;    + IEUrls                 - Internet Explorer typed URLs (last 7 days, argument == last X days)&#xA;    + InstalledProducts      - Installed products via the registry&#xA;      InterestingFiles       - &#34;Interesting&#34; files matching various patterns in the user&#39;s folder. Note: takes non-trivial time.&#xA;    + InterestingProcesses   - &#34;Interesting&#34; processes - defensive products and admin tools&#xA;      InternetSettings       - Internet settings including proxy configs and zones configuration&#xA;    + KeePass                - Finds KeePass configuration files&#xA;    + LAPS                   - LAPS settings, if installed&#xA;    + LastShutdown           - Returns the DateTime of the last system shutdown (via the registry).&#xA;      LocalGPOs              - Local Group Policy settings applied to the machine/local users&#xA;    + LocalGroups            - Non-empty local groups, &#34;-full&#34; displays all groups (argument == computername to enumerate)&#xA;    + LocalUsers             - Local users, whether they&#39;re active/disabled, and pwd last set (argument == computername to enumerate)&#xA;    + LogonEvents            - Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&#xA;    + LogonSessions          - Windows logon sessions&#xA;      LOLBAS                 - Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time.&#xA;    + LSASettings            - LSA settings (including auth packages)&#xA;    + MappedDrives           - Users&#39; mapped drives (via WMI)&#xA;      McAfeeConfigs          - Finds McAfee configuration files&#xA;      McAfeeSiteList         - Decrypt any found McAfee SiteList.xml configuration files.&#xA;      MicrosoftUpdates       - All Microsoft updates (via COM)&#xA;      NamedPipes             - Named pipe names, any readable ACL information and associated process information.&#xA;    + NetworkProfiles        - Windows network profiles&#xA;    + NetworkShares          - Network shares exposed by the machine (via WMI)&#xA;    + NTLMSettings           - NTLM authentication settings&#xA;      OfficeMRUs             - Office most recently used file list (last 7 days)&#xA;      OneNote                - List OneNote backup files&#xA;    + OptionalFeatures       - List Optional Features/Roles (via WMI)&#xA;      OracleSQLDeveloper     - Finds Oracle SQLDeveloper connections.xml files&#xA;    + OSInfo                 - Basic OS info (i.e. architecture, OS version, etc.)&#xA;    + OutlookDownloads       - List files downloaded by Outlook&#xA;    + PoweredOnEvents        - Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days.&#xA;    + PowerShell             - PowerShell versions and security settings&#xA;    + PowerShellEvents       - PowerShell script block logs (4104) with sensitive data.&#xA;    + PowerShellHistory      - Searches PowerShell console history files for sensitive regex matches.&#xA;      Printers               - Installed Printers (via WMI)&#xA;    + ProcessCreationEvents  - Process creation logs (4688) with sensitive data.&#xA;      Processes              - Running processes with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;-full&#34; enumerates all processes&#xA;    + ProcessOwners          - Running non-session 0 process list with owners. For remote use.&#xA;    + PSSessionSettings      - Enumerates PS Session Settings from the registry&#xA;    + PuttyHostKeys          - Saved Putty SSH host keys&#xA;    + PuttySessions          - Saved Putty configuration (interesting fields) and SSH host keys&#xA;      RDCManFiles            - Windows Remote Desktop Connection Manager settings files&#xA;    + RDPSavedConnections    - Saved RDP connections stored in the registry&#xA;    + RDPSessions            - Current incoming RDP sessions (argument == computername to enumerate)&#xA;    + RDPsettings            - Remote Desktop Server/Client Settings&#xA;      RecycleBin             - Items in the Recycle Bin deleted in the last 30 days - only works from a user context!&#xA;      reg                    - Registry key values (HKLM\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors]&#xA;      RPCMappedEndpoints     - Current RPC endpoints mapped&#xA;    + SCCM                   - System Center Configuration Manager (SCCM) settings, if applicable&#xA;    + ScheduledTasks         - Scheduled tasks (via WMI) that aren&#39;t authored by &#39;Microsoft&#39;, &#34;-full&#34; dumps all Scheduled tasks&#xA;      SearchIndex            - Query results from the Windows Search Index, default term of &#39;passsword&#39;. (argument(s) == &amp;lt;search path&amp;gt; &amp;lt;pattern1,pattern2,...&amp;gt;&#xA;      SecPackageCreds        - Obtains credentials from security packages&#xA;      SecurityPackages       - Enumerates the security packages currently available using EnumerateSecurityPackagesA()&#xA;      Services               - Services with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;-full&#34; dumps all processes&#xA;    + SlackDownloads         - Parses any found &#39;slack-downloads&#39; files&#xA;    + SlackPresence          - Checks if interesting Slack files exist&#xA;    + SlackWorkspaces        - Parses any found &#39;slack-workspaces&#39; files&#xA;    + SuperPutty             - SuperPutty configuration files&#xA;    + Sysmon                 - Sysmon configuration from the registry&#xA;    + SysmonEvents           - Sysmon process creation logs (1) with sensitive data.&#xA;      TcpConnections         - Current TCP connections and their associated processes and services&#xA;      TokenGroups            - The current token&#39;s local and domain groups&#xA;      TokenPrivileges        - Currently enabled token privileges (e.g. SeDebugPrivilege/etc.)&#xA;    + UAC                    - UAC system policies via the registry&#xA;      UdpConnections         - Current UDP connections and associated processes and services&#xA;      UserRightAssignments   - Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate&#xA;      WifiProfile            - Enumerates the saved Wifi profiles and extract the ssid, authentication type, cleartext key/passphrase (when possible)&#xA;    + WindowsAutoLogon       - Registry autologon information&#xA;      WindowsCredentialFiles - Windows credential DPAPI blobs&#xA;    + WindowsDefender        - Windows Defender settings (including exclusion locations)&#xA;    + WindowsEventForwarding - Windows Event Forwarding (WEF) settings via the registry&#xA;    + WindowsFirewall        - Non-standard firewall rules, &#34;-full&#34; dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public)&#xA;      WindowsVault           - Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge).&#xA;    + WMI                    - Runs a specified WMI query&#xA;      WMIEventConsumer       - Lists WMI Event Consumers&#xA;      WMIEventFilter         - Lists WMI Event Filters&#xA;      WMIFilterBinding       - Lists WMI Filter to Consumer Bindings&#xA;    + WSUS                   - Windows Server Update Services (WSUS) settings, if applicable&#xA;&#xA;&#xA;Seatbelt has the following command groups: All, User, System, Slack, Chromium, Remote, Misc&#xA;&#xA;    You can invoke command groups with         &#34;Seatbelt.exe &amp;lt;group&amp;gt;&#34;&#xA;&#xA;&#xA;    Or command groups except specific commands &#34;Seatbelt.exe &amp;lt;group&amp;gt; -Command&#34;&#xA;&#xA;   &#34;Seatbelt.exe -group=all&#34; runs all commands&#xA;&#xA;   &#34;Seatbelt.exe -group=user&#34; runs the following commands:&#xA;&#xA;        Certificates, CertificateThumbprints, ChromiumPresence, CloudCredentials, CloudSyncProviders,&#xA;        CredEnum, dir, DpapiMasterKeys, Dsregcmd,&#xA;        ExplorerMRUs, ExplorerRunCommands, FileZilla, FirefoxPresence,&#xA;        IdleTime, IEFavorites, IETabs, IEUrls,&#xA;        KeePass, MappedDrives, OfficeMRUs, OneNote,&#xA;        OracleSQLDeveloper, PowerShellHistory, PuttyHostKeys, PuttySessions,&#xA;        RDCManFiles, RDPSavedConnections, SecPackageCreds, SlackDownloads,&#xA;        SlackPresence, SlackWorkspaces, SuperPutty, TokenGroups,&#xA;        WindowsCredentialFiles, WindowsVault&#xA;&#xA;   &#34;Seatbelt.exe -group=system&#34; runs the following commands:&#xA;&#xA;        AMSIProviders, AntiVirus, AppLocker, ARPTable, AuditPolicies,&#xA;        AuditPolicyRegistry, AutoRuns, Certificates, CertificateThumbprints,&#xA;        CredGuard, DNSCache, DotNet, EnvironmentPath,&#xA;        EnvironmentVariables, Hotfixes, InterestingProcesses, InternetSettings,&#xA;        LAPS, LastShutdown, LocalGPOs, LocalGroups,&#xA;        LocalUsers, LogonSessions, LSASettings, McAfeeConfigs,&#xA;        NamedPipes, NetworkProfiles, NetworkShares, NTLMSettings,&#xA;        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell,&#xA;        Processes, PSSessionSettings, RDPSessions, RDPsettings,&#xA;        SCCM, Services, Sysmon, TcpConnections,&#xA;        TokenPrivileges, UAC, UdpConnections, UserRightAssignments,&#xA;        WifiProfile, WindowsAutoLogon, WindowsDefender, WindowsEventForwarding,&#xA;        WindowsFirewall, WMI, WMIEventConsumer, WMIEventFilter,&#xA;        WMIFilterBinding, WSUS&#xA;&#xA;   &#34;Seatbelt.exe -group=slack&#34; runs the following commands:&#xA;&#xA;        SlackDownloads, SlackPresence, SlackWorkspaces&#xA;&#xA;   &#34;Seatbelt.exe -group=chromium&#34; runs the following commands:&#xA;&#xA;        ChromiumBookmarks, ChromiumHistory, ChromiumPresence&#xA;&#xA;   &#34;Seatbelt.exe -group=remote&#34; runs the following commands:&#xA;&#xA;        AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials,&#xA;        DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables,&#xA;        ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes,&#xA;        InterestingProcesses, KeePass, LastShutdown, LocalGroups,&#xA;        LocalUsers, LogonEvents, LogonSessions, LSASettings,&#xA;        MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings,&#xA;        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell,&#xA;        ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions,&#xA;        RDPSavedConnections, RDPSessions, RDPsettings, Sysmon,&#xA;        WindowsDefender, WindowsEventForwarding, WindowsFirewall&#xA;&#xA;   &#34;Seatbelt.exe -group=misc&#34; runs the following commands:&#xA;&#xA;        ChromiumBookmarks, ChromiumHistory, ExplicitLogonEvents, FileInfo, FirefoxHistory,&#xA;        InstalledProducts, InterestingFiles, LogonEvents, LOLBAS,&#xA;        McAfeeSiteList, MicrosoftUpdates, OutlookDownloads, PowerShellEvents,&#xA;        Printers, ProcessCreationEvents, ProcessOwners, RecycleBin,&#xA;        reg, RPCMappedEndpoints, ScheduledTasks, SearchIndex,&#xA;        SecurityPackages, SysmonEvents&#xA;&#xA;&#xA;Examples:&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; [Command2] ...&#39; will run one or more specified checks only&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; -full&#39; will return complete results for a command without any filtering.&#xA;    &#39;Seatbelt.exe &#34;&amp;lt;Command&amp;gt; [argument]&#34;&#39; will pass an argument to a command that supports it (note the quotes).&#xA;    &#39;Seatbelt.exe -group=all&#39; will run ALL enumeration checks, can be combined with &#34;-full&#34;.&#xA;    &#39;Seatbelt.exe -group=all -AuditPolicies&#39; will run all enumeration checks EXCEPT AuditPolicies, can be combined with &#34;-full&#34;.&#xA;    &#39;Seatbelt.exe &amp;lt;Command&amp;gt; -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\USER -password=PASSWORD]&#39; will run an applicable check remotely&#xA;    &#39;Seatbelt.exe -group=remote -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\USER -password=PASSWORD]&#39; will run remote specific checks&#xA;    &#39;Seatbelt.exe -group=system -outputfile=&#34;C:\Temp\out.txt&#34;&#39; will run system checks and output to a .txt file.&#xA;    &#39;Seatbelt.exe -group=user -q -outputfile=&#34;C:\Temp\out.json&#34;&#39; will run in quiet mode with user checks and output to a .json file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; searches that target users will run for the current user if not-elevated and for ALL users if elevated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A more detailed wiki is coming...&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Command Groups&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; many commands do some type of filtering by default. Supplying the &lt;code&gt;-full&lt;/code&gt; argument prevents filtering output. Also, the command group &lt;code&gt;all&lt;/code&gt; will run all current checks.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command will run ALL checks and returns ALL output:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=all -full&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;system&lt;/h3&gt; &#xA;&lt;p&gt;Runs checks that mine interesting data about the system.&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=system&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AMSIProviders&lt;/td&gt; &#xA;   &lt;td&gt;Providers registered for AMSI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AntiVirus&lt;/td&gt; &#xA;   &lt;td&gt;Registered antivirus (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppLocker&lt;/td&gt; &#xA;   &lt;td&gt;AppLocker settings, if installed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARPTable&lt;/td&gt; &#xA;   &lt;td&gt;Lists the current ARP table and adapter information(equivalent to arp -a)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AuditPolicies&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates classic and advanced audit policy settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AuditPolicyRegistry&lt;/td&gt; &#xA;   &lt;td&gt;Audit settings via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AutoRuns&lt;/td&gt; &#xA;   &lt;td&gt;Auto run executables/scripts/programs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Certificates&lt;/td&gt; &#xA;   &lt;td&gt;User and machine personal certificate files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CertificateThumbprints&lt;/td&gt; &#xA;   &lt;td&gt;Thumbprints for all certificate store certs on the system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CredGuard&lt;/td&gt; &#xA;   &lt;td&gt;CredentialGuard configuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DNSCache&lt;/td&gt; &#xA;   &lt;td&gt;DNS cache entries (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DotNet&lt;/td&gt; &#xA;   &lt;td&gt;DotNet versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EnvironmentPath&lt;/td&gt; &#xA;   &lt;td&gt;Current environment %PATH$ folders and SDDL information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EnvironmentVariables&lt;/td&gt; &#xA;   &lt;td&gt;Current user environment variables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hotfixes&lt;/td&gt; &#xA;   &lt;td&gt;Installed hotfixes (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InterestingProcesses&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Interesting&#34; processes - defensive products and admin tools&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternetSettings&lt;/td&gt; &#xA;   &lt;td&gt;Internet settings including proxy configs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS&lt;/td&gt; &#xA;   &lt;td&gt;LAPS settings, if installed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LastShutdown&lt;/td&gt; &#xA;   &lt;td&gt;Returns the DateTime of the last system shutdown (via the registry)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalGPOs&lt;/td&gt; &#xA;   &lt;td&gt;Local Group Policy settings applied to the machine/local users&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalGroups&lt;/td&gt; &#xA;   &lt;td&gt;Non-empty local groups, &#34;full&#34; displays all groups (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LocalUsers&lt;/td&gt; &#xA;   &lt;td&gt;Local users, whether they&#39;re active/disabled, and pwd last set (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogonSessions&lt;/td&gt; &#xA;   &lt;td&gt;Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LSASettings&lt;/td&gt; &#xA;   &lt;td&gt;LSA settings (including auth packages)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;McAfeeConfigs&lt;/td&gt; &#xA;   &lt;td&gt;Finds McAfee configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NamedPipes&lt;/td&gt; &#xA;   &lt;td&gt;Named pipe names and any readable ACL information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NetworkProfiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows network profiles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NetworkShares&lt;/td&gt; &#xA;   &lt;td&gt;Network shares exposed by the machine (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NTLMSettings&lt;/td&gt; &#xA;   &lt;td&gt;NTLM authentication settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OptionalFeatures&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OSInfo&lt;/td&gt; &#xA;   &lt;td&gt;Basic OS info (i.e. architecture, OS version, etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PoweredOnEvents&lt;/td&gt; &#xA;   &lt;td&gt;Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShell&lt;/td&gt; &#xA;   &lt;td&gt;PowerShell versions and security settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Processes&lt;/td&gt; &#xA;   &lt;td&gt;Running processes with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;full&#34; enumerates all processes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PSSessionSettings&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates PS Session Settings from the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPSessions&lt;/td&gt; &#xA;   &lt;td&gt;Current incoming RDP sessions (argument == computername to enumerate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPsettings&lt;/td&gt; &#xA;   &lt;td&gt;Remote Desktop Server/Client Settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SCCM&lt;/td&gt; &#xA;   &lt;td&gt;System Center Configuration Manager (SCCM) settings, if applicable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Services&lt;/td&gt; &#xA;   &lt;td&gt;Services with file info company names that don&#39;t contain &#39;Microsoft&#39;, &#34;full&#34; dumps all processes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sysmon&lt;/td&gt; &#xA;   &lt;td&gt;Sysmon configuration from the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TcpConnections&lt;/td&gt; &#xA;   &lt;td&gt;Current TCP connections and their associated processes and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TokenPrivileges&lt;/td&gt; &#xA;   &lt;td&gt;Currently enabled token privileges (e.g. SeDebugPrivilege/etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UAC&lt;/td&gt; &#xA;   &lt;td&gt;UAC system policies via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UdpConnections&lt;/td&gt; &#xA;   &lt;td&gt;Current UDP connections and associated processes and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UserRightAssignments&lt;/td&gt; &#xA;   &lt;td&gt;Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WifiProfile&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsAutoLogon&lt;/td&gt; &#xA;   &lt;td&gt;Registry autologon information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsDefender&lt;/td&gt; &#xA;   &lt;td&gt;Windows Defender settings (including exclusion locations)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsEventForwarding&lt;/td&gt; &#xA;   &lt;td&gt;Windows Event Forwarding (WEF) settings via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsFirewall&lt;/td&gt; &#xA;   &lt;td&gt;Non-standard firewall rules, &#34;full&#34; dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIEventConsumer&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Event Consumers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIEventFilter&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Event Filters&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMIFilterBinding&lt;/td&gt; &#xA;   &lt;td&gt;Lists WMI Filter to Consumer Bindings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WSUS&lt;/td&gt; &#xA;   &lt;td&gt;Windows Server Update Services (WSUS) settings, if applicable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;user&lt;/h3&gt; &#xA;&lt;p&gt;Runs checks that mine interesting data about the currently logged on user (if not elevated) or ALL users (if elevated).&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=user&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Certificates&lt;/td&gt; &#xA;   &lt;td&gt;User and machine personal certificate files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CertificateThumbprints&lt;/td&gt; &#xA;   &lt;td&gt;Thumbprints for all certificate store certs on the system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Chrome/Edge/Brave/Opera files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudCredentials&lt;/td&gt; &#xA;   &lt;td&gt;AWS/Google/Azure cloud credential files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudSyncProviders&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CredEnum&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates the current user&#39;s saved credentials using CredEnumerate()&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir&lt;/td&gt; &#xA;   &lt;td&gt;Lists files/folders. By default, lists users&#39; downloads, documents, and desktop folders (arguments == &amp;lt;directory&amp;gt; &amp;lt;depth&amp;gt; &amp;lt;regex&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DpapiMasterKeys&lt;/td&gt; &#xA;   &lt;td&gt;List DPAPI master keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dsregcmd&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplorerMRUs&lt;/td&gt; &#xA;   &lt;td&gt;Explorer most recently used files (last 7 days, argument == last X days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplorerRunCommands&lt;/td&gt; &#xA;   &lt;td&gt;Recent Explorer &#34;run&#34; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FileZilla&lt;/td&gt; &#xA;   &lt;td&gt;FileZilla configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirefoxPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Firefox files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IdleTime&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of seconds since the current user&#39;s last input.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IEFavorites&lt;/td&gt; &#xA;   &lt;td&gt;Internet Explorer favorites&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IETabs&lt;/td&gt; &#xA;   &lt;td&gt;Open Internet Explorer tabs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IEUrls&lt;/td&gt; &#xA;   &lt;td&gt;Internet Explorer typed URLs (last 7 days, argument == last X days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KeePass&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MappedDrives&lt;/td&gt; &#xA;   &lt;td&gt;Users&#39; mapped drives (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OfficeMRUs&lt;/td&gt; &#xA;   &lt;td&gt;Office most recently used file list (last 7 days)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OneNote&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OracleSQLDeveloper&lt;/td&gt; &#xA;   &lt;td&gt;TODO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShellHistory&lt;/td&gt; &#xA;   &lt;td&gt;Iterates through every local user and attempts to read their PowerShell console history if successful will print it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PuttyHostKeys&lt;/td&gt; &#xA;   &lt;td&gt;Saved Putty SSH host keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PuttySessions&lt;/td&gt; &#xA;   &lt;td&gt;Saved Putty configuration (interesting fields) and SSH host keys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDCManFiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows Remote Desktop Connection Manager settings files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDPSavedConnections&lt;/td&gt; &#xA;   &lt;td&gt;Saved RDP connections stored in the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecPackageCreds&lt;/td&gt; &#xA;   &lt;td&gt;Obtains credentials from security packages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackDownloads&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found &#39;slack-downloads&#39; files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackPresence&lt;/td&gt; &#xA;   &lt;td&gt;Checks if interesting Slack files exist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlackWorkspaces&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found &#39;slack-workspaces&#39; files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SuperPutty&lt;/td&gt; &#xA;   &lt;td&gt;SuperPutty configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TokenGroups&lt;/td&gt; &#xA;   &lt;td&gt;The current token&#39;s local and domain groups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsCredentialFiles&lt;/td&gt; &#xA;   &lt;td&gt;Windows credential DPAPI blobs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WindowsVault&lt;/td&gt; &#xA;   &lt;td&gt;Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;misc&lt;/h3&gt; &#xA;&lt;p&gt;Runs all miscellaneous checks.&lt;/p&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=misc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumBookmarks&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found Chrome/Edge/Brave/Opera bookmark files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChromiumHistory&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found Chrome/Edge/Brave/Opera history files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExplicitLogonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FileInfo&lt;/td&gt; &#xA;   &lt;td&gt;Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirefoxHistory&lt;/td&gt; &#xA;   &lt;td&gt;Parses any found FireFox history files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InstalledProducts&lt;/td&gt; &#xA;   &lt;td&gt;Installed products via the registry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InterestingFiles&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Interesting&#34; files matching various patterns in the user&#39;s folder. Note: takes non-trivial time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOLBAS&lt;/td&gt; &#xA;   &lt;td&gt;Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;McAfeeSiteList&lt;/td&gt; &#xA;   &lt;td&gt;Decrypt any found McAfee SiteList.xml configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MicrosoftUpdates&lt;/td&gt; &#xA;   &lt;td&gt;All Microsoft updates (via COM)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OutlookDownloads&lt;/td&gt; &#xA;   &lt;td&gt;List files downloaded by Outlook&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShellEvents&lt;/td&gt; &#xA;   &lt;td&gt;PowerShell script block logs (4104) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Printers&lt;/td&gt; &#xA;   &lt;td&gt;Installed Printers (via WMI)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ProcessCreationEvents&lt;/td&gt; &#xA;   &lt;td&gt;Process creation logs (4688) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ProcessOwners&lt;/td&gt; &#xA;   &lt;td&gt;Running non-session 0 process list with owners. For remote use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RecycleBin&lt;/td&gt; &#xA;   &lt;td&gt;Items in the Recycle Bin deleted in the last 30 days - only works from a user context!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reg&lt;/td&gt; &#xA;   &lt;td&gt;Registry key values (HKLM\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RPCMappedEndpoints&lt;/td&gt; &#xA;   &lt;td&gt;Current RPC endpoints mapped&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ScheduledTasks&lt;/td&gt; &#xA;   &lt;td&gt;Scheduled tasks (via WMI) that aren&#39;t authored by &#39;Microsoft&#39;, &#34;full&#34; dumps all Scheduled tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SearchIndex&lt;/td&gt; &#xA;   &lt;td&gt;Query results from the Windows Search Index, default term of &#39;passsword&#39;. (argument(s) == &amp;lt;search path&amp;gt; &amp;lt;pattern1,pattern2,...&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecurityPackages&lt;/td&gt; &#xA;   &lt;td&gt;Enumerates the security packages currently available using EnumerateSecurityPackagesA()&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SysmonEvents&lt;/td&gt; &#xA;   &lt;td&gt;Sysmon process creation logs (1) with sensitive data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Additional Command Groups&lt;/h3&gt; &#xA;&lt;p&gt;Executed with: &lt;code&gt;Seatbelt.exe -group=GROUPNAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alias&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slack&lt;/td&gt; &#xA;   &lt;td&gt;Runs modules that start with &#34;Slack*&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chromium&lt;/td&gt; &#xA;   &lt;td&gt;Runs modules that start with &#34;Chromium*&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remote&lt;/td&gt; &#xA;   &lt;td&gt;Runs the following modules (for use against a remote system): AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials, DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables, ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes, InterestingProcesses, KeePass, LastShutdown, LocalGroups, LocalUsers, LogonEvents, LogonSessions, LSASettings, MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings, OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell, ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions, RDPSavedConnections, RDPSessions, RDPsettings, Sysmon, WindowsDefender, WindowsEventForwarding, WindowsFirewall&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Command Arguments&lt;/h2&gt; &#xA;&lt;p&gt;Command that accept arguments have it noted in their description. To pass an argument to a command, enclose the command an arguments in double quotes.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command returns 4624 logon events for the last 30 days:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe &#34;LogonEvents 30&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following command queries a registry three levels deep, returning only keys/valueNames/values that match the regex &lt;code&gt;.*defini.*&lt;/code&gt;, and ignoring any errors that occur.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe &#34;reg \&#34;HKLM\SOFTWARE\Microsoft\Windows Defender\&#34; 3 .*defini.* true&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt can redirect its output to a file with the &lt;code&gt;-outputfile=&#34;C:\Path\file.txt&#34;&lt;/code&gt; argument. If the file path ends in .json, the output will be structured json.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command will output the results of system checks to a txt file:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=system -outputfile=&#34;C:\Temp\system.txt&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Remote Enumeration&lt;/h2&gt; &#xA;&lt;p&gt;Commands noted with a + in the help menu can be run remotely against another system. This is performed over WMI via queries for WMI classes and WMI&#39;s StdRegProv for registry enumeration.&lt;/p&gt; &#xA;&lt;p&gt;To enumerate a remote system, supply &lt;code&gt;-computername=COMPUTER.DOMAIN.COM&lt;/code&gt; - an alternate username and password can be specified with &lt;code&gt;-username=DOMAIN\USER -password=PASSWORD&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command runs remote-focused checks against a remote system:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Seatbelt.exe -group=remote -computername=192.168.230.209 -username=THESHIRE\sam -password=&#34;yum \&#34;po-ta-toes\&#34;&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Your Own Modules&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt&#39;s structure is completely modular, allowing for additional command modules to be dropped into the file structure and loaded up dynamically.&lt;/p&gt; &#xA;&lt;p&gt;There is a commented command module template at &lt;code&gt;.\Seatbelt\Commands\Template.cs&lt;/code&gt; for reference. Once built, drop the module in the logical file location, include it in the project in the Visual Studio Solution Explorer, and compile.&lt;/p&gt; &#xA;&lt;h2&gt;Compile Instructions&lt;/h2&gt; &#xA;&lt;p&gt;We are not planning on releasing binaries for Seatbelt, so you will have to compile yourself.&lt;/p&gt; &#xA;&lt;p&gt;Seatbelt has been built against .NET 3.5 and 4.0 with C# 8.0 features and is compatible with &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio Community Edition&lt;/a&gt;. Simply open up the project .sln, choose &#34;release&#34;, and build. To change the target .NET framework version, &lt;a href=&#34;https://github.com/GhostPack/Seatbelt/issues/27&#34;&gt;modify the project&#39;s settings&lt;/a&gt; and rebuild the project.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Seatbelt incorporates various collection items, code C# snippets, and bits of PoCs found throughout research for its capabilities. These ideas, snippets, and authors are highlighted in the appropriate locations in the source code, and include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/andrewchiles&#34;&gt;@andrewchiles&lt;/a&gt;&#39; &lt;a href=&#34;https://github.com/threatexpress/red-team-scripts/raw/master/HostEnum.ps1&#34;&gt;HostEnum.ps1&lt;/a&gt; script and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/leechristensen/Random/raw/master/PowerShellScripts/Get-HostProfile.ps1&#34;&gt;Get-HostProfile.ps1&lt;/a&gt; provided inspiration for many of the artifacts to collect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/33935825/pinvoke-netlocalgroupgetmembers-runs-into-fatalexecutionengineerror/33939889#33939889&#34;&gt;Boboes&#39; code concerning NetLocalGroupGetMembers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ambyte/01664dc7ee576f69042c&#34;&gt;ambyte&#39;s code for converting a mapped drive letter to a network path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2146153/how-to-get-the-logon-sid-in-c-sharp/2146418#2146418&#34;&gt;Igor Korkhov&#39;s code to retrieve current token group information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/498371/how-to-detect-if-my-application-is-running-in-a-virtual-machine/11145280#11145280&#34;&gt;RobSiklos&#39; snippet to determine if a host is a virtual machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1410127/c-sharp-test-if-user-has-write-access-to-a-folder/21996345#21996345&#34;&gt;JGU&#39;s snippet on file/folder ACL right comparison&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://csharphelper.com/blog/2015/06/find-files-that-match-multiple-patterns-in-c/&#34;&gt;Rod Stephens&#39; pattern for recursive file enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4349743/setting-size-of-token-privileges-luid-and-attributes-array-returned-by-gettokeni&#34;&gt;SwDevMan81&#39;s snippet for enumerating current token privileges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Invoke-IR/ACE/raw/master/ACE-Management/PS-ACE/Scripts/ACE_Get-KerberosTicketCache.ps1&#34;&gt;Jared Atkinson&#39;s PowerShell work on Kerberos ticket caches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dreamincode.net/forums/topic/135033-increment-memory-pointer-issue/&#34;&gt;darkmatter08&#39;s Kerberos C# snippet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Numerous &lt;a href=&#34;https://www.pinvoke.net/&#34;&gt;PInvoke.net&lt;/a&gt; samples &amp;lt;3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codeproject.com/Articles/18179/Using-the-Local-Security-Authority-to-Enumerate-Us&#34;&gt;Jared Hill&#39;s awesome CodeProject to use Local Security Authority to Enumerate User Sessions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/lync/en-US/e949b8d6-17ad-4afc-88cd-0019a3ac9df9/powershell-alternative-to-arp-a?forum=ITCG&#34;&gt;Fred&#39;s code on querying the ARP cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/577433/which-pid-listens-on-a-given-port-in-c-sharp/577660#577660&#34;&gt;ShuggyCoUk&#39;s snippet on querying the TCP connection table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/yizhang82/a1268d3ea7295a8a1496e01d60ada816&#34;&gt;yizhang82&#39;s example of using reflection to interact with COM objects through C#&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/djhohnstein&#34;&gt;@djhohnstein&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/djhohnstein/SharpWeb/raw/master/Edge/SharpEdge.cs&#34;&gt;SharpWeb project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/djhohnstein&#34;&gt;@djhohnstein&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/djhohnstein/EventLogParser&#34;&gt;EventLogParser project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/cmaddalena&#34;&gt;@cmaddalena&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/chrismaddalena/SharpCloud&#34;&gt;SharpCloud project&lt;/a&gt;, BSD 3-Clause&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/_RastaMouse&#34;&gt;@_RastaMouse&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/rasta-mouse/Watson/&#34;&gt;Watson project&lt;/a&gt;, GPL License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/_RastaMouse&#34;&gt;@_RastaMouse&lt;/a&gt;&#39;s &lt;a href=&#34;https://rastamouse.me/2018/09/enumerating-applocker-config/&#34;&gt;Work on AppLocker enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/peewpw&#34;&gt;@peewpw&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/peewpw/Invoke-WCMDump/raw/master/Invoke-WCMDump.ps1&#34;&gt;Invoke-WCMDump project&lt;/a&gt;, GPL License&lt;/li&gt; &#xA; &lt;li&gt;TrustedSec&#39;s &lt;a href=&#34;https://github.com/trustedsec/HoneyBadger/tree/master/modules/post/windows/gather&#34;&gt;HoneyBadger project&lt;/a&gt;, BSD 3-Clause&lt;/li&gt; &#xA; &lt;li&gt;CENTRAL Solutions&#39;s &lt;a href=&#34;https://www.centrel-solutions.com/support/tools.aspx?feature=auditrights&#34;&gt;Audit User Rights Assignment Project&lt;/a&gt;, No license&lt;/li&gt; &#xA; &lt;li&gt;Collection ideas inspired from &lt;a href=&#34;https://twitter.com/ukstufus&#34;&gt;@ukstufus&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/stufus/reconerator&#34;&gt;Reconerator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Office MRU locations and timestamp parsing information from Dustin Hurlbut&#39;s paper &lt;a href=&#34;https://ad-pdf.s3.amazonaws.com/Microsoft_Office_2007-2010_Registry_ArtifactsFINAL.pdf&#34;&gt;Microsoft Office 2007, 2010 - Registry Artifacts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands&#34;&gt;Windows Commands list&lt;/a&gt;, used for sensitive regex construction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21805038/how-do-i-pinvoke-rpcmgmtepeltinqnext&#34;&gt;Ryan Ries&#39; code for enumeration mapped RPC endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/5941873&#34;&gt;Chris Haas&#39; post on EnumerateSecurityPackages()&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GhostPack/Seatbelt/master/carlos_perez&#34;&gt;darkoperator&lt;/a&gt;&#39;s work &lt;a href=&#34;https://github.com/trustedsec/HoneyBadger&#34;&gt;on the HoneyBadger project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/airzero24&#34;&gt;@airzero24&lt;/a&gt;&#39;s work on &lt;a href=&#34;https://github.com/airzero24/WMIReg&#34;&gt;WMI Registry enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alexandru&#39;s answer on &lt;a href=&#34;https://stackoverflow.com/questions/26217199/what-are-some-alternatives-to-registrykey-openbasekey-in-net-3-5&#34;&gt;RegistryKey.OpenBaseKey alternatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tomas Vera&#39;s &lt;a href=&#34;http://www.tomasvera.com/programming/using-javascriptserializer-to-parse-json-objects/&#34;&gt;post on JavaScriptSerializer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marc Gravell&#39;s &lt;a href=&#34;https://stackoverflow.com/a/929418&#34;&gt;note on recursively listing files/folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mattifestation&#34;&gt;@mattifestation&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/mattifestation/PSSysmonTools/raw/master/PSSysmonTools/Code/SysmonRuleParser.ps1#L589-L595&#34;&gt;Sysmon rule parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Some inspiration from spolnik&#39;s &lt;a href=&#34;https://github.com/spolnik/Simple.CredentialsManager&#34;&gt;Simple.CredentialsManager project&lt;/a&gt;, Apache 2 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tenforums.com/tutorials/68926-verify-if-device-guard-enabled-disabled-windows-10-a.html&#34;&gt;This post on Credential Guard settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/windows/en-US/b0e13a16-51a6-4aca-8d44-c85e097f882b/nametype-in-nla-information-for-a-network-profile&#34;&gt;This thread&lt;/a&gt; on network profile information&lt;/li&gt; &#xA; &lt;li&gt;Mark McKinnon&#39;s post on &lt;a href=&#34;http://cfed-ttf.blogspot.com/2009/08/decoding-datecreated-and.html&#34;&gt;decoding the DateCreated and DateLastConnected SSID values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This Specops &lt;a href=&#34;https://specopssoft.com/blog/things-work-group-policy-caching/&#34;&gt;post on group policy caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sa_ddam213&#39;s StackOverflow post on &lt;a href=&#34;https://stackoverflow.com/questions/18071412/list-filenames-in-the-recyclebin-with-c-sharp-without-using-any-external-files&#34;&gt;enumerating items in the Recycle Bin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kirill Osenkov&#39;s &lt;a href=&#34;https://stackoverflow.com/a/15608028&#34;&gt;code for managed assembly detection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/mono/linux-packaging-mono/raw/d356d2b7db91d62b80a61eeb6fbc70a402ac3cac/external/corefx/LICENSE.TXT&#34;&gt;Mono project&lt;/a&gt; for the SecBuffer/SecBufferDesc classes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/elad_shamir&#34;&gt;Elad Shamir&lt;/a&gt; and his &lt;a href=&#34;https://github.com/eladshamir/Internal-Monologue/&#34;&gt;Internal-Monologue&lt;/a&gt; project, &lt;a href=&#34;https://twitter.com/mysmartlogon&#34;&gt;Vincent Le Toux&lt;/a&gt; for his &lt;a href=&#34;https://github.com/vletoux/DetectPasswordViaNTLMInFlow/&#34;&gt;DetectPasswordViaNTLMInFlow&lt;/a&gt; project, and Lee Christensen for this &lt;a href=&#34;https://github.com/leechristensen/GetNTLMChallenge/&#34;&gt;GetNTLMChallenge&lt;/a&gt; project. All of these served as inspiration int he SecPackageCreds command.&lt;/li&gt; &#xA; &lt;li&gt;@leftp and @eksperience&#39;s &lt;a href=&#34;https://github.com/EncodeGroup/Gopher&#34;&gt;Gopher project&lt;/a&gt; for inspiration for the FileZilla and SuperPutty commands&lt;/li&gt; &#xA; &lt;li&gt;@funoverip for the original McAfee SiteList.xml decryption code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;ve tried to do our due diligence for citations, but if we&#39;ve left someone/something out, please let us know!&lt;/p&gt;</summary>
  </entry>
</feed>