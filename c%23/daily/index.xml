<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-13T01:24:37Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>unity3d-jp/Project_TCC</title>
    <updated>2024-02-13T01:24:37Z</updated>
    <id>tag:github.com,2024-02-13:/unity3d-jp/Project_TCC</id>
    <link href="https://github.com/unity3d-jp/Project_TCC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TCC stands for Tiny Character Controller. TCC is the best way to make your own game. This repository contains all packages and examples for TCC projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project_TCC v.1.0.0&lt;/h1&gt; &#xA;&lt;p&gt;TCC stands for &lt;strong&gt;Tiny Character Controller&lt;/strong&gt;. TCC provides a comprehensive solution for creating your own game.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains all packages and examples for TCC projects.&lt;/p&gt; &#xA;&lt;p&gt;Project_TCC is the last Unity-Chan! project. Enjoy yourselves!&lt;/p&gt; &#xA;&lt;h2&gt;2024/02/09: Information and disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate your interest in Project_TCC.&lt;/p&gt; &#xA;&lt;p&gt;This project and repository &#34;Project_TCC&#34; is provided as-is, without any maintenance or release plan.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, we are unable to monitor bug reports, accept feature requests, or review pull requests for this package.&lt;/p&gt; &#xA;&lt;p&gt;However, we recognize that some users may wish to continue utilizing and enhancing Project_TCC. In that case, we recommend that you fork the repository. This will allow you to make changes and enhancements as you see fit.&lt;/p&gt; &#xA;&lt;h2&gt;Release Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2024/02/09 : Project_TCC v.1.0.0 : First Release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License Notice&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Project_TCC is licensed by Unity Companion License v.1.3 &lt;a href=&#34;https://unity.com/ja/legal/licenses/unity-companion-license&#34;&gt;https://unity.com/ja/legal/licenses/unity-companion-license&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All character assets &#34;Unity-Chan!&#34; are licensed by Unity-Chan License 2.0(UCL 2.0) &lt;a href=&#34;https://unity-chan.com/contents/guideline/&#34;&gt;https://unity-chan.com/contents/guideline/&lt;/a&gt; &lt;a href=&#34;https://unity-chan.com/contents/guideline_en/&#34;&gt;https://unity-chan.com/contents/guideline_en/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Some sound effects data that contains in this project is made by GameSynth. The official GameSynth URL is below: &lt;a href=&#34;http://tsugi-studio.com/web/jp/products-gamesynth.html&#34;&gt;http://tsugi-studio.com/web/jp/products-gamesynth.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This project contains the font &#39;Source Han Sans&#39; font. This font is licensed by Adobe and SIL OPEN FONT LICENSE v.1.1 &lt;a href=&#34;https://github.com/adobe-fonts/source-han-sans?tab=License-1-ov-file#License-1-ov-file&#34;&gt;https://github.com/adobe-fonts/source-han-sans?tab=License-1-ov-file#License-1-ov-file&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Project TCC 解説ドキュメント&lt;/h1&gt; &#xA;&lt;h2&gt;Project_TCCが開発されたUnityのバージョン&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unity 2023.2.0f1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;概要&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Tiny Character Controller (TCC) は、キャラクターの挙動を複数の小さなコンポーネントを組み合わせて実現するシステムです。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TCCでは、キャラクターの移動、ジャンプ、カメラ制御などの基本動作をはじめとした多様な機能を提供し、柔軟なキャラクター表現を実現します。各コンポーネントが持つプライオリティ（優先順位）を設定することで、応用の効くキャラクター制御を可能にします。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TCCは外部からの入力に対応し、Visual Scriptingからの制御もサポートしています。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;また、ゲーム開発を支援するための様々な補助機能も提供しており、UI表示、オブジェクトプール、シナリオインポーター、ゲームデータの保存、シーンの切り替えを簡単かつ安全に行い、シーンのレイヤー化や段階的なロードを容易にするシーンローダーなどのユーティリティが含まれます。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TCCの基本概念&lt;/h2&gt; &#xA;&lt;p&gt;TCCには、キャラクターを制御するための4つの基本的なコンポーネントがあります。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#brain&#34;&gt;Brain&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;キャラクターの最終的な座標を更新するコンポーネントです。&lt;/li&gt; &#xA;   &lt;li&gt;Check、Effect、Controlの結果を集約し、Transformに書き込みます。&lt;/li&gt; &#xA;   &lt;li&gt;移動・ベクトル計算・センサー処理を集中管理します。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#check&#34;&gt;Check&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;周囲の情報を収集するセンサーコンポーネントです。&lt;/li&gt; &#xA;   &lt;li&gt;地面の接地判定、頭上の接触判定、視界判定などを行います。&lt;/li&gt; &#xA;   &lt;li&gt;更新時に値をキャッシュし、他コンポーネントへ処理結果を提供します。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#control&#34;&gt;Control&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;プレイヤーの入力に応じてキャラクターの動きを制御するコンポーネントです。&lt;/li&gt; &#xA;   &lt;li&gt;移動、ジャンプ、カメラ制御などのキャラクター操作を管理します。&lt;/li&gt; &#xA;   &lt;li&gt;移動方向や移動速度、ジャンプの高さなどを調整します。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#effect&#34;&gt;Effect&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;キャラクターに追加の動きや影響を与えるコンポーネントです。&lt;/li&gt; &#xA;   &lt;li&gt;重力、プラットフォームとの相互作用、追加力(AddForce)などを扱います。&lt;/li&gt; &#xA;   &lt;li&gt;キャラクターの動きにバリエーションやリアリズムを加える働きをします。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;これらのコンポーネントを組み合わせることで、複雑なキャラクター挙動を簡単に構築し、カスタマイズすることが可能となっています。&lt;/p&gt; &#xA;&lt;p&gt;各コンポーネントは以下のようなネットワークで、キャラクター制御に必要な情報を収集し、座標や動作を更新する処理命令を通知しています。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Images/TccBasic4Components.png&#34; alt=&#34;TccBasic4Components.png&#34; title=&#34;TccBasic4Components&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;またControl系のコンポーネントには、各コンポーネントごとにそのキャラクターの位置（Transform）や向き（Rotation）変化に与える影響の優先度を設定する、プライオリティがありますので、1体のキャラクターゲームオブジェクトに複数のControlをアタッチし、状況に応じて切り替えることが可能です。&lt;/p&gt; &#xA;&lt;h2&gt;Project_TCC に含まれる、様々な機能コンポーネント群&lt;/h2&gt; &#xA;&lt;p&gt;Project_TCCに含まれる主要なコンポーネント群について、その概要と主なコンポーネント名および機能を以下にまとめます。いずれもがゲーム制作に便利なコンポーネントとなっています。&lt;/p&gt; &#xA;&lt;p&gt;なお全てのRuntimeコンポーネントのリストは、&lt;strong&gt;【プロジェクト内のドキュメンテーション（&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md&#34;&gt;日本語&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_en.md&#34;&gt;English&lt;/a&gt;）】&lt;/strong&gt; にあります。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;1. &lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#brain&#34;&gt;Brain&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;概要:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TCCのControlやEffectなどからの情報を集約し、キャラクターの座標を更新するコンポーネント群です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;代表的なコンポーネント:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CharacterBrain&lt;/strong&gt;: CharacterControllerを使用して座標を更新。アクションゲームに適しており、CharacterControllerの機能を利用します。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RigidbodyBrain&lt;/strong&gt;: Rigidbodyを使用して座標を更新し、物理演算に基づいた動作を行います。物理演算が必要なゲームに適しています。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NavmeshBrain&lt;/strong&gt;: NavmeshAgentを利用して座標を更新し、RPGなどNavmeshで移動範囲を制限するゲームに適しています。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TransformBrain&lt;/strong&gt;: Transformを使用してキャラクターの座標を更新。PhysicsやColliderの判定は行わず、主にストラテジーゲームやインタラクションの少ないゲームで使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;2. &lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#check&#34;&gt;Check&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;概要:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;キャラクターの周辺情報を収集するセンサーコンポーネント群です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;代表的なコンポーネント:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ground Check&lt;/strong&gt;: 地面との接地判定を行います。地面までの距離や勾配、地面オブジェクトの種類などを取得できます。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Head Collision Check&lt;/strong&gt;: 頭上のオブジェクトとの接触判定を行います。キャラクターの高さを考慮した頭上判定を行い、接触時にイベントを発火します。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;3. &lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#control&#34;&gt;Control&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;概要:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;キャラクターの移動や向きを制御するコンポーネント群です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;代表的なコンポーネント:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Move Control&lt;/strong&gt;: キャラクターの地上移動を制御します。スクリーン上の指定した方向に移動させることができます。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ladder Move Control&lt;/strong&gt;: はしごを登る処理を実現します。Ladderコンポーネントで指定した移動範囲に対してキャラクターを移動させます。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;4. &lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/Componentlist_ja.md#effect&#34;&gt;Effect&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;概要:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;キャラクターに追加の動きや影響を与えるコンポーネント群です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;代表的なコンポーネント:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gravity&lt;/strong&gt;: キャラクターに重力加速度による落下を追加します。空中にいる間は下方向に加速し、地面に接触すると加速度が0になります。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MoveWithPlatform&lt;/strong&gt;: 移動する地形にキャラクターを追随させます。MovePlatformコンポーネントを持つ地形の上にいるとき、その地形の加速度をキャラクターに加算します。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;これらのコンポーネント群によって、TCCは複雑なキャラクターの動きを簡単に構築し、カスタマイズすることが可能になります。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;5. Utility&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;概要:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ゲーム開発における一般的なニーズに応えるための補助的な機能やコンポーネントを提供します。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;代表的なコンポーネント:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Swing Hit Detector&lt;/strong&gt;: スイングや攻撃などのアクションによる移動判定と、他のColliderとの接触判定を検出し通知するコンポーネントです。特定の範囲内での判定や、接触ポイントの移動経路での接触判定を行い、接触があった場合にイベントを発火します。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sequential Collision Detector&lt;/strong&gt;: 複数の当たり判定を持ち、これらを段階的に有効にすることで、他のオブジェクトとの接触判定を行うコンポーネントです。特定のタイミングでのみ当たり判定を有効化し、モーションに合わせた攻撃範囲の設定などに利用されます。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GameObjectPool&lt;/strong&gt;: 特定のPrefabに基づいてGameObjectをプールし管理するコンポーネントです。プールからオブジェクトを取得し、利用後にはプールに戻すことで、オブジェクトの生成と破棄のコストを削減します。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Indicator&lt;/strong&gt;: ゲームやアプリケーション内で特定のターゲットを画面上で視覚的に追跡するためのユーティリティを提供します。ターゲットの位置を表すアイコンをUI要素として表示し、ターゲットが画面内にあるか画面外にあるかに基づいてアイコンの位置と状態を調整します。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;IndicatorPin&lt;/strong&gt;: UIを3D空間の座標と同期させるためのコンポーネントです。指定された座標にUIの位置を合わせて調整します。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;その他の特徴的な機能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scene Loader&lt;/strong&gt;: 指定されたアセットシーンを読み込むためのコンポーネントです。このコンポーネントは、シーンの読み込みとアンロードの管理、読み込み進捗の追跡、およびシーン読み込み完了時やアンロード時のイベント通知を提供します。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Game Object Folder&lt;/strong&gt;: Unity エディタ内でゲームオブジェクトの階層構造を整理するためのコンポーネントです。このコンポーネントは、階層内のゲームオブジェクトを「フォルダ」として扱い、整理やコメントの追加を容易にします。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Save System&lt;/strong&gt;: 同一 GameObject 及びその子 GameObject に設定された &lt;code&gt;IDataContainer&lt;/code&gt; コンポーネントを取得し、単一の Json として保存または読み込むためのコンポーネントです。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;これらのコンポーネント群を組み合わせることで、複雑なキャラクターの挙動や、様々なゲームシステムを柔軟に実装することが可能になります。TCCは、これらの基本コンポーネントをベースとして、開発者が独自の挙動や機能を追加しやすい構造になっている点も大きな特徴です。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Project_TCCに含まれるシステムを、ご自身のUnityプロジェクトにインストールしたい場合&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unity3d-jp/Project_TCC/main/Documentations/SystemInstallGuide.md&#34;&gt;Project_TCCシステムインストールガイド&lt;/a&gt; に従って、インストールすることができます。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Step By Step（SBS）シリーズとは&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SBSシリーズとは、Project_TCCの &lt;code&gt;Assets/TCC/Scenes&lt;/code&gt; 内に収録されている、TCCのサンプルシーン群のことです。&lt;/li&gt; &#xA; &lt;li&gt;SBSシリーズは基本的に01-01から順を追って機能が追加されていきます。&lt;/li&gt; &#xA; &lt;li&gt;歩行させる＞走らせる＞ジャンプさせる…といった形で、最終的にキャラクターをドライブさせる為の様々な方法を習得できるようになります。&lt;/li&gt; &#xA; &lt;li&gt;また、とりあえずサンプルを開いて、興味を持ったシーン、または自分が作りたいゲームに最も近いシーンからカスタムしていく事で、手軽にそれっぽい結果を得ることができます。&lt;/li&gt; &#xA; &lt;li&gt;SBSシリーズはTCCの全ての機能を網羅しているわけではありません。TCCの機能は膨大ですが、作りたいゲームのとっかかり、或いは最短ルートを最初に示すのがSBSシリーズです。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;01.Move 基本動作&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-01 Walk&lt;/strong&gt;: キャラクターを歩行させる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-02 Walk and Run&lt;/strong&gt;: キャラクターを走らせる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-03 Move and Jump&lt;/strong&gt;: キャラクターにジャンプさせる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-04 Move and DoubleJump&lt;/strong&gt;: 二段ジャンプさせる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-05 Move Jump Crouch&lt;/strong&gt;: しゃがむ、しゃがんだ状態で歩かせる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-01-06 TwinStickControl&lt;/strong&gt;: ツインスティックによる移動と視線制御を実装する&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;02.Camera カメラ動作の追加&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-02-01A SimpleLookAt&lt;/strong&gt;: LookAtConstraintを使うことでカメラがキャラクターを注視するようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-02-01B SimpleLookAt and Trace&lt;/strong&gt;: LookAtに加え、PositionConstraintを使ってキャラクターを追いかけるカメラを作ります&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-02-02 Cinemachine LookAt&lt;/strong&gt;: Cinemachineを使ってなめらかなルックアットを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-02-03 Cinemachine TPS Control&lt;/strong&gt;: TPS視点のカメラを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-02-04 Cinemachine 2D Control&lt;/strong&gt;: サイドビュー視点のカメラを実装します&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;03.Action ゲームらしいアクションの追加&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-01 Dash&lt;/strong&gt;: キャラクターに瞬間的な移動を可能にさせます&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-02 Rolling&lt;/strong&gt;: キャラクターにローリング回避を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-03 Attack and Guard&lt;/strong&gt;: キャラクターに剣による攻撃とガードを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-04 Damage and Dodge&lt;/strong&gt;: キャラクターがダメージを受けたり、回避出来たりするようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-05 Down and Wakeup&lt;/strong&gt;: キャラクターがダウン状態になったり、そこから復帰できるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-06 Sliding&lt;/strong&gt;: キャラクターがスライディングできるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-07 AerialKick&lt;/strong&gt;: ジャンプ中に急降下できるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-08 Wall Jump&lt;/strong&gt;: 壁に張り付き、更にジャンプできるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-09 Elude and Climb&lt;/strong&gt;: 壁のフチにぶら下がり、左右に移動できるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-03-10 Ambrella&lt;/strong&gt;: 落下中にジャンプボタンを長押しする事で落下速度を緩やかにすることができます&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;04.Shooter TPS機能の実装&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-04-01 Rifle Control&lt;/strong&gt;: IKBrainを使って銃を構えられるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-04-02 Fire&lt;/strong&gt;: PooledGameObjectを使って弾が出るようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-04-03 Hit&lt;/strong&gt;: 撃った弾が壁や対象物にヒットするようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-04-04 WeaponChange and Reload&lt;/strong&gt;: 複数の武器の切り替えやリロードギミックを実装します&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;05.Mechanics 実用的なギミックの作成&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-01A Platform&lt;/strong&gt;: 移動床を実装します(CharacterBrain)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-01B Platform&lt;/strong&gt;: 移動床を実装します(RigidbodyBrain)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-02 CheckpointSystem&lt;/strong&gt;: チェックポイントを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-03 ScoringSystem&lt;/strong&gt;: スコアリングを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-04 FlagSystem&lt;/strong&gt;: 簡易的なフラグシステムを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-05 MobSystem&lt;/strong&gt;: 徘徊するモブを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-06 MobSystem with Vision&lt;/strong&gt;: 徘徊するモブに視界を与え、行動を分岐させるようにします&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-07 MobSystem3(ManualControl)&lt;/strong&gt;: 2Dプラットフォームで使える汎用的なモブの動作を作成します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-05-08 SequentialCollisionDetector&lt;/strong&gt;: SequentioalCollisionDetectorを使用して当たり判定を作ります&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;06.UI UI機能の実装&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-01 SimpleText&lt;/strong&gt;: ただ文字を表示する機能を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-02A MessageBox&lt;/strong&gt;: NPC会話を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-02B MessageBoxEX&lt;/strong&gt;: より分量の多いNPC会話を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-03 LifeBar&lt;/strong&gt;: 体力バーを作ります&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-04 StaminaBar&lt;/strong&gt;: スタミナ要素を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-05 Minimap&lt;/strong&gt;: ミニマップを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-06 Indicator&lt;/strong&gt;: 画面外のターゲットをトレースするIndicator機能を実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-07 PopupMessage Indicator&lt;/strong&gt;: ポップアップメッセージをIndicator機能で実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-08 ShowInputKey&lt;/strong&gt;: キー入力とマウス入力を視覚化するシーンを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-09 IndicatorPin&lt;/strong&gt;: 攻撃時に与えたダメージを表示するシーンを実装します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-06-10 LifeBar(ObjectPooling)&lt;/strong&gt;: メモリ式HPゲージを実装します&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;07.Scene シーンの切り替えとマルチシーン管理&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-07-01 SceneLoader Introduction&lt;/strong&gt;: マルチシーンの利点を学ぶためのイントロダクション&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-07-02 SceneLoader Function&lt;/strong&gt;: シーンを複数用意してインタラクティブに切り替える方法を習得&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;08.Cycle ゲームサイクルの実装&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-08-01A Save and Load Basic&lt;/strong&gt;: TCCが提供するSaveDataControl機能の基本を習得します&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-08-01B Save and Load Function&lt;/strong&gt;: DataSave機能を一通り触ることができるサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-08-02 Save and Load Advanced&lt;/strong&gt;: マルチシーンやDataSave機能を使い、RPGのフィールドを実装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;09. Additional Sample 追加サンプル。実際に遊べるゲーム&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-01 MaterialPropertyBlock&lt;/strong&gt;: マテリアルが共有された家の屋根を個別に透過させる&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-02A DungeonCrawl(Cycle)&lt;/strong&gt;: エリアごとにシーン分割されたダンジョン探索ゲームサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-02B DungeonCrawl(Advanced)&lt;/strong&gt;: 見下ろし型のダンジョン探索ゲームのサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-03 MetroidVania&lt;/strong&gt;: 2Dプラットフォームアクションのサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-04 2D 3D&lt;/strong&gt;: 2Dスプライトキャラクターを3Dワールド上で操作するサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-05 Drone&lt;/strong&gt;: ドローンレーシングのサンプル&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UC-09-07 CubePuzzle&lt;/strong&gt;: キューブを移動して道を作るパズルゲームのサンプル&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;2024/02/09 Unity Technologies Japan&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unity-Chan! Team&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tatsuhiko Yamamura&lt;/li&gt; &#xA; &lt;li&gt;Kohei Kyono&lt;/li&gt; &#xA; &lt;li&gt;Nobuyuki Kobayashi&lt;/li&gt; &#xA; &lt;li&gt;Hiroki Omae&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>skiff-org/skiff-windows-app</title>
    <updated>2024-02-13T01:24:37Z</updated>
    <id>tag:github.com,2024-02-13:/skiff-org/skiff-windows-app</id>
    <link href="https://github.com/skiff-org/skiff-windows-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Skiff&#39;s Windows app for privacy-first, end-to-end encrypted Mail, Drive, Calendar, and Pages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Skiff Windows app&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The Skiff Windows app is in its earliest beta version currently. We welcome all feedback.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This repository contains Skiff&#39;s native Windows app. The Windows app is a native WPF application built using the WebView2 Edge/Chromium runtime, with native bindings added to support file upload, file download, hardware keys, and other features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skiff-org/skiff-windows-app/main/windowsapp.png&#34; alt=&#34;Skiff Windows desktop app&#34; title=&#34;Skiff on Windows&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The Skiff Windows app supports all Skiff products: Mail, Calendar, Pages, and Drive. Drag/drop files, compose emails, collaborate in real-time, and even use your hardware keys or biometrics to secure your account.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://raw.githubusercontent.com/skiff-org/skiff-windows-app/main/skiffWindowsApp/&#34;&gt;skiffWindowsApp&lt;/a&gt; directory for more information on how to build and run the app. We recommend developing in the latest version of &lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;Contact us at &lt;a href=&#34;mailto:support@skiff.org&#34;&gt;support@skiff.org&lt;/a&gt;, or join our &lt;a href=&#34;https://discord.com/invite/skiff&#34;&gt;Discord&lt;/a&gt;, &lt;a href=&#34;https://reddit.com/r/skiff&#34;&gt;Reddit&lt;/a&gt;, or &lt;a href=&#34;https://twitter.com/skiffprivacy&#34;&gt;Twitter&lt;/a&gt; to ask questions, contribute feedback, or request features.&lt;/p&gt;</summary>
  </entry>
</feed>