<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-24T01:31:04Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>VedalAI/neuro-amongus</title>
    <updated>2023-03-24T01:31:04Z</updated>
    <id>tag:github.com,2023-03-24:/VedalAI/neuro-amongus</id>
    <link href="https://github.com/VedalAI/neuro-amongus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Among Us Plugin for Neuro-sama&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Neuro-sama Among Us Plugin&lt;/h1&gt; &#xA;&lt;p&gt;The purpose of this plugin is to allow Neuro-sama, the AI VTuber, to play Among Us.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;The plan is to first allow this plugin to record data from the game, which will then be used to train a neural network which Neuro will use.&lt;/p&gt; &#xA;&lt;h2&gt;How to run&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install BepInEx &lt;a href=&#34;https://docs.reactor.gg/quick_start/install_bepinex&#34;&gt;https://docs.reactor.gg/quick_start/install_bepinex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Reactor &lt;a href=&#34;https://docs.reactor.gg/quick_start/install_reactor&#34;&gt;https://docs.reactor.gg/quick_start/install_reactor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ensure you have the .NET 6.0 SDK &lt;a href=&#34;https://dotnet.microsoft.com/download/dotnet/6.0&#34;&gt;https://dotnet.microsoft.com/download/dotnet/6.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the plugin using an IDE of your choice, I&#39;m using Visual Studio&lt;/li&gt; &#xA; &lt;li&gt;Add the built Neuro.dll to your plugins folder (I&#39;d recommend adding &lt;code&gt;&amp;lt;OutputPath&amp;gt;PATH_TO_AMONG_US_FOLDER\Among Us\BepInEx\plugins&amp;lt;/OutputPath&amp;gt;&lt;/code&gt; to the PropertyGroup section of the &lt;a href=&#34;https://raw.githubusercontent.com/VedalAI/neuro-amongus/main/Neuro/Neuro.csproj&#34;&gt;Neuro.csproj&lt;/a&gt; file)&lt;/li&gt; &#xA; &lt;li&gt;Run Among Us&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/gpl-3.0/&#34;&gt;GNU GPLv3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;This mod is not affiliated with Among Us or Innersloth LLC, and the content contained therein is not endorsed or otherwise sponsored by Innersloth LLC. Portions of the materials contained herein are property of Innersloth LLC.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Â© Innersloth LLC.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hassanhabib/Standard.AI.OpenAI</title>
    <updated>2023-03-24T01:31:04Z</updated>
    <id>tag:github.com,2023-03-24:/hassanhabib/Standard.AI.OpenAI</id>
    <link href="https://github.com/hassanhabib/Standard.AI.OpenAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Standard-Compliant .NET library for Open AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Standard.AI.OpenAI&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/hassanhabib/OpenAI.NET/main/Standard.AI.OpenAI/artificial-intelligence.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hassanhabib/OpenAI.NET/actions/workflows/dotnet.yml&#34;&gt;&lt;img src=&#34;https://github.com/hassanhabib/OpenAI.NET/actions/workflows/dotnet.yml/badge.svg?sanitize=true&#34; alt=&#34;.NET&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hassanhabib/The-Standard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/The_Standard-COMPLIANT-2ea44f&#34; alt=&#34;The Standard - COMPLIANT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/vdPZ7hS52X&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/934130100008538142?color=%237289da&amp;amp;label=The%20Standard%20Community&amp;amp;logo=Discord&#34; alt=&#34;The Standard Community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Standard.AI.OpenAI is a Standard-Compliant .NET library built on top of OpenAI API RESTful endpoints to enable software engineers to develop AI-Powered solutions in .NET.&lt;/p&gt; &#xA;&lt;h2&gt;Standard-Compliance&lt;/h2&gt; &#xA;&lt;p&gt;This library was built according to The Standard. The library follows engineering principles, patterns and tooling as recommended by The Standard.&lt;/p&gt; &#xA;&lt;p&gt;This library is also a community effort which involved many nights of pair-programming, test-driven development and in-depth exploration research and design discussions.&lt;/p&gt; &#xA;&lt;h2&gt;How to use this library?&lt;/h2&gt; &#xA;&lt;p&gt;In order to use this library there are prerequists that you must complete before you can write your first AI-Powered C#.NET program. These steps are as follows:&lt;/p&gt; &#xA;&lt;h3&gt;OpenAI Account&lt;/h3&gt; &#xA;&lt;p&gt;You must create an OpenAI account with the following link: &lt;a href=&#34;https://platform.openai.com/signup&#34;&gt;https://platform.openai.com/signup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API Keys&lt;/h3&gt; &#xA;&lt;p&gt;Once you&#39;ve created an OpenAI account. Now, go ahead and generate an API key from the following link: &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;https://platform.openai.com/account/api-keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hello, World!&lt;/h3&gt; &#xA;&lt;p&gt;Once you&#39;ve completed the aforementioned steps, let&#39;s write our very first program with Standard.AI.OpenAI as follows:&lt;/p&gt; &#xA;&lt;h4&gt;Standard.AI.OpenAI Nuget&lt;/h4&gt; &#xA;&lt;p&gt;Find our nuget package.&lt;/p&gt; &#xA;&lt;h4&gt;Program.cs&lt;/h4&gt; &#xA;&lt;p&gt;The following example demonstrate how you can write your first Completions program.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using OpenAI.NET.Clients.OpenAIs;&#xA;using OpenAI.NET.Models.Configurations;&#xA;using OpenAI.NET.Models.Services.Foundations.Completions;&#xA;&#xA;var openAiApiConfigurations = new ApiConfigurations&#xA;{&#xA;    ApiKey = &#34;YOUR_API_KEY_HERE&#34;,&#xA;    OrganizationId = &#34;YOUR_OPTIONAL_ORG_ID_HERE&#34;&#xA;};&#xA;&#xA;var openAiClient = new OpenAIClient(openAiApiConfigurations);&#xA;&#xA;var inputCompletion = new Completion&#xA;{&#xA;    Request = new CompletionRequest&#xA;    {&#xA;        Prompt = new string[] { &#34;Human: Hello!&#34; },&#xA;&#xA;        Model = &#34;text-davinci-003&#34;&#xA;    }&#xA;};&#xA;&#xA;Completion resultCompletion =&#xA;    await openAiClient.Completions.PromptCompletionAsync(&#xA;        inputCompletion);&#xA;&#xA;Array.ForEach(resultCompletion.Response.Choices, choice =&amp;gt; Console.WriteLine(choice.Text));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this project please review the following documents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hassanhabib/The-Standard&#34;&gt;The Standard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hassanhabib/CSharpCodingStandard&#34;&gt;C# Coding Standard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hassanhabib/The-Standard-Team&#34;&gt;The Team Standard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have a question make sure you either open an issue or join our &lt;a href=&#34;https://discord.com/invite/vdPZ7hS52X&#34;&gt;The Standard Community&lt;/a&gt; discord server.&lt;/p&gt; &#xA;&lt;h2&gt;Live-Sessions&lt;/h2&gt; &#xA;&lt;p&gt;Our live-sessions are schedules on &lt;a href=&#34;https://tinyurl.com/the-standard-calendar&#34;&gt;The Standard Calendar&lt;/a&gt; make sure you adjust the time to your city/timezone to to be able to join us.&lt;/p&gt; &#xA;&lt;p&gt;We broadcast on multiple platforms:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/@HassanHabib&#34;&gt;YouTube&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/hassanrezkhabib/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.twitch.tv/binhabib&#34;&gt;Twitch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/HassanRezkHabib&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/hassan.rezk.habib&#34;&gt;Facebook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Past-Sessions&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s our live sessions to show you how this library was developed from scratch:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JQnTpGV-7YA&#34;&gt;OPENAI000: Getting Started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2eN4ht2uESo&#34;&gt;OPENAI001: API Integrations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/IrBGCAyLmmQ?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI002: API Integrations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/SZHBt0SW2EY?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI003: API Integrations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/z0BlU3KVr7E?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI004: Completion Service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/wMC1I85Zjmo?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI005: Completion Service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/aENHthpFTvI?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI006: Developing Completion Clients&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/live/fzlF2k7SM?si=EnSIkaIECMiOmarE&#34;&gt;OPENAI007: Acceptance &amp;amp; Integration Tests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/live/86bfBmkUMFo?feature=share&#34;&gt;OPENAI008: Acceptance &amp;amp; Integration Tests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/live/saU_5peAC-Y?feature=share&#34;&gt;OPENAI009: Publishing Nuget Package&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>