<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T01:36:37Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>donet5/SqlSugar</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/donet5/SqlSugar</id>
    <link href="https://github.com/donet5/SqlSugar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Best ORM Fastest ORM Simple Easy Sqlite orm Oracle ORM Mysql Orm postgresql ORm SqlServer oRm 达梦 ORM 人大金仓 ORM 神通ORM C# ORM , C# ORM .NET ORM NET5 ORM .NET6 ORM&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&#34;https://www.donet5.com/Home/Doc&#34;&gt;&lt;font color=&#34;red&#34;&gt;中文&lt;/font&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;SqlSugar ORM&lt;/h2&gt; &#xA;&lt;p&gt;SqlSugar ORM is a library providing Object/Relational Mapping (ORM)&lt;/p&gt; &#xA;&lt;p&gt;An ORM framework from the future&lt;/p&gt; &#xA;&lt;p&gt;Using SqlSugar is very simple , And it&#39;s powerful.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support SqlServer、MySql、PgSql and Oracle insert blukcopy&lt;/li&gt; &#xA; &lt;li&gt;Split table big data self-processing&lt;/li&gt; &#xA; &lt;li&gt;Support Multi-tenant, multi-library transactions&lt;/li&gt; &#xA; &lt;li&gt;Support Support CodeFirst data migration.&lt;/li&gt; &#xA; &lt;li&gt;Support Join query 、 Union all 、 Subquery&lt;/li&gt; &#xA; &lt;li&gt;Support Configure the query&lt;/li&gt; &#xA; &lt;li&gt;Support DbFirst import entity class from database, or use Generation Tool.&lt;/li&gt; &#xA; &lt;li&gt;Support one-to-many and many-to-many navigation properties&lt;/li&gt; &#xA; &lt;li&gt;Support MySql、SqlServer、Sqlite、Oracle 、 postgresql 、达梦、人大金仓 、神通数据库、MsAccess、Custom&lt;/li&gt; &#xA; &lt;li&gt;Support AOP 、 Diff Log 、 Query Filter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Other&lt;/th&gt; &#xA;   &lt;th&gt;Select&lt;/th&gt; &#xA;   &lt;th&gt;Insert&lt;/th&gt; &#xA;   &lt;th&gt;Update&lt;/th&gt; &#xA;   &lt;th&gt;Delete&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donet5/SqlSugar/wiki/NUGET&#34;&gt;Nuget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1187&#34;&gt;Simple query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1193&#34;&gt; Insert &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1191&#34;&gt;Update&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1195&#34;&gt;Delete&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donet5/SqlSugar/wiki/Create--database-operation-object&#34;&gt;Start guide&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_bank&#34; href=&#34;https://www.donet5.com/Home/Doc?typeId=1185&#34;&gt;Join query &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.donet5.com/Home/Doc?typeId=1188&#34;&gt;Include query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Feature characteristic&lt;/h2&gt; &#xA;&lt;h3&gt;Feature1 : Join query&lt;/h3&gt; &#xA;&lt;p&gt;Super simple query syntax&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var query  = db.Queryable&amp;lt;Order&amp;gt;()&#xA;            .LeftJoin&amp;lt;Custom&amp;gt;  ((o, cus) =&amp;gt; o.CustomId == cus.Id)&#xA;            .LeftJoin&amp;lt;OrderItem&amp;gt; ((o, cus, oritem ) =&amp;gt; o.Id == oritem.OrderId)&#xA;            .LeftJoin&amp;lt;OrderItem&amp;gt; ((o, cus, oritem , oritem2) =&amp;gt; o.Id == oritem2.OrderId)&#xA;            .Where(o =&amp;gt; o.Id == 1)  &#xA;            .Select((o, cus) =&amp;gt; new ViewOrder { Id = o.Id, CustomName = cus.Name })&#xA;            .ToList();   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT&#xA;  [o].[Id] AS [Id],&#xA;  [cus].[Name] AS [CustomName]&#xA;FROM&#xA;  [Order] o&#xA;  Left JOIN [Custom] cus ON ([o].[CustomId] = [cus].[Id])&#xA;  Left JOIN [OrderDetail] oritem ON ([o].[Id] = [oritem].[OrderId])&#xA;  Left JOIN [OrderDetail] oritem2 ON ([o].[Id] = [oritem2].[OrderId])&#xA;WHERE&#xA;  ([o].[Id] = @Id0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature2 : Include query&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var list=db.Queryable&amp;lt;Test&amp;gt;()&#xA;           .Includes(x =&amp;gt; x.Provinces,x=&amp;gt;x.Citys ,x=&amp;gt;x.Street) &#xA;           .Includes(x =&amp;gt; x.ClassInfo) &#xA;           .ToList();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature3 : Page query&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;&#xA; int pageIndex = 1; &#xA; int pageSize = 20;&#xA; int totalCount=0;&#xA; var page = db.Queryable&amp;lt;Student&amp;gt;().ToPageList(pageIndex, pageSize, ref totalCount);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature4 : Dynamic expression&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var names= new string [] { &#34;a&#34;,&#34;b&#34;};&#xA;Expressionable&amp;lt;Order&amp;gt; exp = new Expressionable&amp;lt;Order&amp;gt;();&#xA;foreach (var item in names)&#xA;{&#xA;    exp.Or(it =&amp;gt; it.Name.Contains(item.ToString()));&#xA;}&#xA;var list= db.Queryable&amp;lt;Order&amp;gt;().Where(exp.ToExpression()).ToList();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT [Id],[Name],[Price],[CreateTime],[CustomId]&#xA;       FROM [Order]  WHERE (&#xA;                     ([Name] like &#39;%&#39;+ CAST(@MethodConst0 AS NVARCHAR(MAX))+&#39;%&#39;) OR &#xA;                     ([Name] like &#39;%&#39;+ CAST(@MethodConst1 AS NVARCHAR(MAX))+&#39;%&#39;)&#xA;                    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature5 : Multi-tenant transaction&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//Creaate  database object&#xA;SqlSugarClient db = new SqlSugarClient(new List&amp;lt;ConnectionConfig&amp;gt;()&#xA;{&#xA;    new ConnectionConfig(){ ConfigId=&#34;0&#34;, DbType=DbType.SqlServer,  ConnectionString=Config.ConnectionString, IsAutoCloseConnection=true },&#xA;    new ConnectionConfig(){ ConfigId=&#34;1&#34;, DbType=DbType.MySql, ConnectionString=Config.ConnectionString4 ,IsAutoCloseConnection=true}&#xA;});&#xA;&#xA;&#xA;var mysqldb = db.GetConnection(&#34;1&#34;);//mysql db&#xA;var sqlServerdb = db.GetConnection(&#34;0&#34;);// sqlserver db&#xA; &#xA;db.BeginTran();&#xA;            mysqldb.Insertable(new Order()&#xA;            {&#xA;                CreateTime = DateTime.Now,&#xA;                CustomId = 1,&#xA;                Name = &#34;a&#34;,&#xA;                Price = 1&#xA;            }).ExecuteCommand();&#xA;            mysqldb.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;            sqlServerdb.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;&#xA;db.CommitTran();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature6 : Singleton Pattern&lt;/h3&gt; &#xA;&lt;p&gt;Implement transactions across methods&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-CS&#34;&gt;public static SqlSugarScope Db = new SqlSugarScope(new ConnectionConfig()&#xA; {&#xA;            DbType = SqlSugar.DbType.SqlServer,&#xA;            ConnectionString = Config.ConnectionString,&#xA;            IsAutoCloseConnection = true &#xA;  },&#xA;  db=&amp;gt; {&#xA;            db.Aop.OnLogExecuting = (s, p) =&amp;gt;&#xA;            {&#xA;                Console.WriteLine(s);&#xA;            };&#xA; });&#xA; &#xA; &#xA;  using (var tran = Db.UseTran())&#xA;  {&#xA;          &#xA;              &#xA;               new Test2().Insert(XX);&#xA;               new Test1().Insert(XX);&#xA;               ..... &#xA;                ....&#xA;                         &#xA;             tran.CommitTran(); &#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature7 : Query filter&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//set filter&#xA;db.QueryFilter.Add(new TableFilterItem&amp;lt;Order&amp;gt;(it =&amp;gt; it.Name.Contains(&#34;a&#34;)));  &#xA; &#xA;   &#xA;db.Queryable&amp;lt;Order&amp;gt;().ToList();&#xA;//SELECT [Id],[Name],[Price],[CreateTime],[CustomId] FROM [Order]  WHERE  ([Name] like &#39;%&#39;+@MethodConst0+&#39;%&#39;)  &#xA;&#xA;db.Queryable&amp;lt;OrderItem, Order&amp;gt;((i, o) =&amp;gt; i.OrderId == o.Id)&#xA;        .Where(i =&amp;gt; i.OrderId != 0)&#xA;        .Select(&#34;i.*&#34;).ToList();&#xA;//SELECT i.* FROM [OrderDetail] i  ,[Order]  o  WHERE ( [i].[OrderId] = [o].[Id] )  AND &#xA;//( [i].[OrderId] &amp;lt;&amp;gt; @OrderId0 )  AND  ([o].[Name] like &#39;%&#39;+@MethodConst1+&#39;%&#39;)&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature8 : Insert or update&lt;/h3&gt; &#xA;&lt;p&gt;insert or update&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;    var x = Db.Storageable(list2).ToStorage();  &#xA;    x.AsInsertable.ExecuteCommand();  &#xA;    x.AsUpdateable.ExecuteCommand();  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;insert into not exists&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var x = Db.Storageable(list).SplitInsert(it =&amp;gt; !it.Any()).ToStorage()&#xA;x.AsInsertable.ExecuteCommand(); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature9 ：Auto split table&lt;/h3&gt; &#xA;&lt;p&gt;Split entity&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[SplitTable(SplitType.Year)]//Table by year (the table supports year, quarter, month, week and day)&#xA;[SugarTable(&#34;SplitTestTable_{year}{month}{day}&#34;)] &#xA; public class SplitTestTable&#xA; {&#xA;     [SugarColumn(IsPrimaryKey =true)]&#xA;     public long Id { get; set; }&#xA; &#xA;     public string Name { get; set; }&#xA;     &#xA;     //When the sub-table field is inserted, which table will be inserted according to this field. &#xA;     //When it is updated and deleted, it can also be convenient to use this field to      &#xA;     //find out the related table &#xA;     [SplitField] &#xA;     public DateTime CreateTime { get; set; }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Split query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt; var lis2t = db.Queryable&amp;lt;OrderSpliteTest&amp;gt;()&#xA;.SplitTable(DateTime.Now.Date.AddYears(-1), DateTime.Now)&#xA;.ToPageList(1,2);　&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature10： Big data insert or update&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;//Insert A million only takes a few seconds&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkCopy(GetList());&#xA; &#xA; &#xA;//update A million only takes a few seconds&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkUpdate(GetList());//A million only takes a few seconds完&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().BulkUpdate(GetList(),new string[]{&#34;id&#34;},new string[]{&#34;name&#34;,&#34;time&#34;})//no primary key&#xA; &#xA;//if exists update, else  insert&#xA; var x= db.Storageable&amp;lt;Order&amp;gt;(data).ToStorage();&#xA;     x.BulkCopy();&#xA;     x.BulkUpdate(); &#xA;     &#xA;//set table name&#xA;db.Fastest&amp;lt;RealmAuctionDatum&amp;gt;().AS(&#34;tableName&#34;).BulkCopy(GetList())&#xA; &#xA;//set page &#xA;db.Fastest&amp;lt;Order&amp;gt;().PageSize(300000).BulkCopy(insertObjs);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>lionsoul2014/ip2region</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/lionsoul2014/ip2region</id>
    <link href="https://github.com/lionsoul2014/ip2region" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ip2region is a offline IP location library with accuracy rate of 99.9% and 0.0x millseconds searching performance. DB file is ONLY a few megabytes with all IP address stored. binding for Java,PHP,C,Python,Nodejs,Golang,C#,lua. Binary,B-tree,Memory searching algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ip2region是什么？&lt;/h1&gt; &#xA;&lt;p&gt;ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java,php,c,python,nodejs,golang,c#等查询绑定和Binary,B树,内存三种查询算法。&lt;/p&gt; &#xA;&lt;h1&gt;Ip2region特性&lt;/h1&gt; &#xA;&lt;h3&gt;99.9%准确率&lt;/h3&gt; &#xA;&lt;p&gt;数据聚合了一些知名ip到地名查询提供商的数据，这些是他们官方的的准确率，经测试着实比经典的纯真IP定位准确一些。&lt;br&gt; ip2region的数据聚合自以下服务商的开放API或者数据(升级程序每秒请求次数2到4次): &lt;br&gt; 01, &amp;gt;80%, 淘宝IP地址库, &lt;a href=&#34;http://ip.taobao.com/&#34;&gt;http://ip.taobao.com/&lt;/a&gt; &lt;br&gt; 02, ≈10%, GeoIP, &lt;a href=&#34;https://geoip.com/&#34;&gt;https://geoip.com/&lt;/a&gt; &lt;br&gt; 03, ≈2%, 纯真IP库, &lt;a href=&#34;http://www.cz88.net/&#34;&gt;http://www.cz88.net/&lt;/a&gt; &lt;br&gt; &lt;b&gt;备注：&lt;/b&gt;如果上述开放API或者数据都不给开放数据时ip2region将停止数据的更新服务。&lt;/p&gt; &#xA;&lt;h3&gt;标准化的数据格式&lt;/h3&gt; &#xA;&lt;p&gt;每条ip数据段都固定了格式：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;_城市Id|国家|区域|省份|城市|ISP_&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;只有中国的数据精确到了城市，其他国家有部分数据只能定位到国家，后前的选项全部是0，已经包含了全部你能查到的大大小小的国家（请忽略前面的城市Id，个人项目需求）。&lt;/p&gt; &#xA;&lt;h3&gt;体积小&lt;/h3&gt; &#xA;&lt;p&gt;包含了全部的IP，生成的数据库文件ip2region.db只有几MB，最小的版本只有1.5MB，随着数据的详细度增加数据库的大小也慢慢增大，目前还没超过8MB。&lt;/p&gt; &#xA;&lt;h3&gt;查询速度快&lt;/h3&gt; &#xA;&lt;p&gt;全部的查询客户端单次查询都在0.x毫秒级别，内置了三种查询算法&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;memory算法：整个数据库全部载入内存，单次查询都在0.1x毫秒内，C语言的客户端单次查询在0.00x毫秒级别。&lt;/li&gt; &#xA; &lt;li&gt;binary算法：基于二分查找，基于ip2region.db文件，不需要载入内存，单次查询在0.x毫秒级别。&lt;/li&gt; &#xA; &lt;li&gt;b-tree算法：基于btree算法，基于ip2region.db文件，不需要载入内存，单词查询在0.x毫秒级别，比binary算法更快。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;任何客户端b-tree都比binary算法快，当然memory算法固然是最快的！&lt;/p&gt; &#xA;&lt;h3&gt;多查询客户端的支持&lt;/h3&gt; &#xA;&lt;p&gt;已经集成的客户端有：java、C#、php、c、python、nodejs、php扩展(php5和php7)、golang、rust、lua、lua_c, nginx。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;binding&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;开发状态&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;binary查询耗时&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;b-tree查询耗时&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;memory查询耗时&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ANSC c binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.00x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c#&#34;&gt;c#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;c# binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;golang binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;java binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua&#34;&gt;lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;lua实现的binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua_c&#34;&gt;lua_c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;lua的c扩展&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.00x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nginx的c扩展&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.00x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nodejs&#34;&gt;nodejs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nodejs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;php实现的binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.1x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php5_ext&#34;&gt;php5_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;php5的c扩展&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.00x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php7_ext&#34;&gt;php7_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;php7的c扩展&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.0x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.00x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;python bindng&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;rust binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.x毫秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;ip2region快速测试&lt;/h1&gt; &#xA;&lt;p&gt;请参考每个binding下的README说明去运行cli测试程序，例如C语言的demo运行如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd binding/c/&#xA;gcc -g -O2 testSearcher.c ip2region.c&#xA;./a.out ../../data/ip2region.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;会看到如下cli界面：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;initializing  B-tree ... &#xA;+----------------------------------+&#xA;| ip2region test script            |&#xA;| Author: chenxin619315@gmail.com  |&#xA;| Type &#39;quit&#39; to exit program      |&#xA;+----------------------------------+&#xA;p2region&amp;gt;&amp;gt; 101.105.35.57&#xA;2163|中国|华南|广东省|深圳市|鹏博士 in 0.02295 millseconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;输入IP地址开始测试，第一次会稍微有点慢，在运行命令后面接入binary,memory来尝试其他算法，建议使用b-tree算法，速度和并发需求的可以使用memory算法，具体集成请参考不同binding下的测试源码。&lt;/p&gt; &#xA;&lt;h1&gt;ip2region安装&lt;/h1&gt; &#xA;&lt;p&gt;具体请参考每个binding下的README文档和测试demo，以下是一些可用的快捷安装方式：&lt;/p&gt; &#xA;&lt;h3&gt;maven仓库地址&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.lionsoul&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;ip2region&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.7.2&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;nodejs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install node-ip2region --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;nuget安装&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Install-Package IP2Region&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;php composer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 插件来自：https://github.com/zoujingli/ip2region&#xA;composer require zoujingli/ip2region&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;ip2region 并发使用&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;全部binding的各个search接口都&lt;b&gt;不是&lt;/b&gt;线程安全的实现，不同线程可以通过创建不同的查询对象来使用，并发量很大的情况下，binary和b-tree算法可能会打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者使用持久化的memory算法。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;memorySearch接口，在发布对象前进行一次预查询(本质上是把ip2region.db文件加载到内存)，可以安全用于多线程环境。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;ip2region.db的生成&lt;/h1&gt; &#xA;&lt;p&gt;从1.8版本开始，ip2region开源了ip2region.db生成程序的java实现，提供了ant编译支持，编译后会得到以下提到的dbMaker-{version}.jar，对于需要研究生成程序的或者更改自定义生成配置的请参考${ip2region_root}/maker/java内的java源码。&lt;/p&gt; &#xA;&lt;p&gt;从ip2region 1.2.2版本开始里面提交了一个dbMaker-{version}.jar的可以执行jar文件，用它来完成这个工作：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;确保你安装好了java环境（不玩Java的童鞋就自己谷歌找找拉，临时用一用，几分钟的事情）&lt;/li&gt; &#xA; &lt;li&gt;cd到${ip2region_root}/maker/java，然后运行如下命令：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;java -jar dbMaker-{version}.jar -src 文本数据文件 -region 地域csv文件 [-dst 生成的ip2region.db文件的目录]&#xA;&#xA;# 文本数据文件：db文件的原始文本数据文件路径，自带的ip2region.db文件就是/data/ip.merge.txt生成而来的，你可以换成自己的或者更改/data/ip.merge.txt重新生成&#xA;# 地域csv文件：该文件目的是方便配置ip2region进行数据关系的存储，得到的数据包含一个city_id，这个直接使用/data/origin/global_region.csv文件即可&#xA;# ip2region.db文件的目录：是可选参数，没有指定的话会在当前目录生成一份./data/ip2region.db文件&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;获取生成的ip2region.db文件覆盖原来的ip2region.db文件即可&lt;/li&gt; &#xA; &lt;li&gt;默认的ip2region.db文件生成命令:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ${ip2region_root}/java/&#xA;java -jar dbMaker-1.2.2.jar -src ./data/ip.merge.txt -region ./data/global_region.csv&#xA;&#xA;# 会看到一大片的输出&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;相关备注&lt;/h1&gt; &#xA;&lt;h3&gt;声明&lt;/h3&gt; &#xA;&lt;p&gt;ip2region重点在于&lt;b&gt;研究IP数据的存储设计和各种语言的查询实现&lt;/b&gt;，并没有原始IP数据的支撑，数据来源请参考上面的描述，升级数据需要很多IP的支撑并且会对原始平台造成一定量的请求压力，本项目不保证及时的数据更新，没有也不会有商用版本，你可以使用自定义的数据导入ip2region进行自定义查询的实现。&lt;/p&gt; &#xA;&lt;h3&gt;技术交流&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;数据库文件的结构和原理请阅读 @冬芽 的blog：&lt;a href=&#34;https://github.com/dongyado/dongyado.github.io/raw/master/_posts/2016-08-18-structure-of-ip2region-database-file.md&#34;&gt;“ip2region数据库文件的结构和原理”&lt;/a&gt;，&lt;a href=&#34;https://www.bilibili.com/video/BV1wv4y1N7SD&#34;&gt;ip2region数据结构设计和实现视频分享&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ip2region交流分享，微信：lionsoul2014(请备注ip2region)，QQ：1187582057(很少关注)&lt;/li&gt; &#xA; &lt;li&gt;基于检测算法的数据更新方式视频分享：&lt;a href=&#34;https://www.bilibili.com/video/BV1934y1E7Q5/&#34;&gt;数据更新实现视频分享part1&lt;/a&gt;，&lt;a href=&#34;https://www.bilibili.com/video/BV1pF411j7Aw/&#34;&gt;数据更新实现视频分享part2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Cysharp/UniTask</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/Cysharp/UniTask</id>
    <link href="https://github.com/Cysharp/UniTask" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Cysharp/UniTask/actions&#34;&gt;&lt;img src=&#34;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Cysharp/UniTask/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; &#xA; &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; &#xA; &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; &#xA; &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; &#xA; &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; &#xA; &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; &#xA; &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For technical details, see blog post: &lt;a href=&#34;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&#34;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&#34;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&#34;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&#34;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&#34;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&#34;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&#34;&gt;Progress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&#34;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&#34;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&#34;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&#34;&gt;External Assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&#34;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&#34;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&#34;&gt;Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&#34;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&#34;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&#34;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&#34;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&#34;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&#34;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&#34;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&#34;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&#34;&gt;API References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&#34;&gt;UPM Package&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&#34;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-openupm&#34;&gt;Install via OpenUPM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&#34;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Install via &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&#34;&gt;UPM package&lt;/a&gt; or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&#34;https://github.com/Cysharp/UniTask/releases&#34;&gt;UniTask/releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// extension awaiter/methods can be used by this namespace&#xA;using Cysharp.Threading.Tasks;&#xA;&#xA;// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;&#xA;// zero allocation and fast excution for zero overhead async/await integrate with Unity&#xA;async UniTask&amp;lt;string&amp;gt; DemoAsync()&#xA;{&#xA;    // You can await Unity&#39;s AsyncObject&#xA;    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;foo&#34;);&#xA;    var txt = (await UnityWebRequest.Get(&#34;https://...&#34;).SendWebRequest()).downloadHandler.text;&#xA;    await SceneManager.LoadSceneAsync(&#34;scene2&#34;);&#xA;&#xA;    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject&#xA;    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;bar&#34;).WithCancellation(this.GetCancellationTokenOnDestroy());&#xA;&#xA;    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;&#xA;    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&#34;baz&#34;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));&#xA;&#xA;    // await frame-based operation like a coroutine&#xA;    await UniTask.DelayFrame(100); &#xA;&#xA;    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);&#xA;    &#xA;    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)&#xA;    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);&#xA;&#xA;    // replacement of yield return null&#xA;    await UniTask.Yield();&#xA;    await UniTask.NextFrame();&#xA;&#xA;    // replacement of WaitForEndOfFrame(requires MonoBehaviour(CoroutineRunner))&#xA;    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour&#xA;&#xA;    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))&#xA;    await UniTask.WaitForFixedUpdate();&#xA;    &#xA;    // replacement of yield return WaitUntil&#xA;    await UniTask.WaitUntil(() =&amp;gt; isActive == false);&#xA;&#xA;    // special helper of WaitUntil&#xA;    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);&#xA;&#xA;    // You can await IEnumerator coroutines&#xA;    await FooCoroutineEnumerator();&#xA;&#xA;    // You can await a standard task&#xA;    await Task.Run(() =&amp;gt; 100);&#xA;&#xA;    // Multithreading, run on ThreadPool under this code&#xA;    await UniTask.SwitchToThreadPool();&#xA;&#xA;    /* work on ThreadPool */&#xA;&#xA;    // return to MainThread(same as `ObserveOnMainThread` in UniRx)&#xA;    await UniTask.SwitchToMainThread();&#xA;&#xA;    // get async webrequest&#xA;    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)&#xA;    {&#xA;        var op = await req.SendWebRequest();&#xA;        return op.downloadHandler.text;&#xA;    }&#xA;&#xA;    var task1 = GetTextAsync(UnityWebRequest.Get(&#34;http://google.com&#34;));&#xA;    var task2 = GetTextAsync(UnityWebRequest.Get(&#34;http://bing.com&#34;));&#xA;    var task3 = GetTextAsync(UnityWebRequest.Get(&#34;http://yahoo.com&#34;));&#xA;&#xA;    // concurrent async-wait and get results easily by tuple syntax&#xA;    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);&#xA;&#xA;    // shorthand of WhenAll, tuple can await directly&#xA;    var (google2, bing2, yahoo2) = await (task1, task2, task3);&#xA;&#xA;    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).&#xA;    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&#34;Asset not found&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; &#xA;&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&#34;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&#34;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; &#xA;&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;* await asyncOperation;&#xA;* .WithCancellation(CancellationToken);&#xA;* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&#34;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&#34;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&#34;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTaskVoid LoadManyAsync()&#xA;{&#xA;    // parallel load.&#xA;    var (a, b, c) = await UniTask.WhenAll(&#xA;        LoadAsSprite(&#34;foo&#34;),&#xA;        LoadAsSprite(&#34;bar&#34;),&#xA;        LoadAsSprite(&#34;baz&#34;));&#xA;}&#xA;&#xA;async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)&#xA;{&#xA;    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);&#xA;    return (resource as Sprite);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()&#xA;{&#xA;    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();&#xA;&#xA;    // when complete, call utcs.TrySetResult();&#xA;    // when failed, call utcs.TrySetException();&#xA;    // when cancel, call utcs.TrySetCanceled();&#xA;&#xA;    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; &#xA;&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; &#xA;&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&#34;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following operations should never be performed on a ValueTask&#xA;  &lt;tresult&gt;&#xA;    instance:&#xA;  &lt;/tresult&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; &#xA;  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var task = UniTask.DelayFrame(10);&#xA;await task;&#xA;await task; // NG, throws Exception&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; &#xA;&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; &#xA;&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; &#xA;&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&#34;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cts = new CancellationTokenSource();&#xA;&#xA;cancelButton.onClick.AddListener(() =&amp;gt;&#xA;{&#xA;    cts.Cancel();&#xA;});&#xA;&#xA;await UnityWebRequest.Get(&#34;http://google.co.jp&#34;).SendWebRequest().WithCancellation(cts.Token);&#xA;&#xA;await UniTask.DelayFrame(1000, cancellationToken: cts.Token);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// this CancellationToken lifecycle is same as GameObject.&#xA;await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());&#xA;&#xA;// ---&#xA;&#xA;async UniTask FooAsync(CancellationToken cancellationToken)&#xA;{&#xA;    await BarAsync(cancellationToken);&#xA;}&#xA;&#xA;async UniTask BarAsync(CancellationToken cancellationToken)&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class MyBehaviour : MonoBehaviour&#xA;{&#xA;    CancellationTokenSource disableCancellation = new CancellationTokenSource();&#xA;    CancellationTokenSource destroyCancellation = new CancellationTokenSource();&#xA;&#xA;    private void OnEnable()&#xA;    {&#xA;        if (disableCancellation != null)&#xA;        {&#xA;            disableCancellation.Dispose();&#xA;        }&#xA;        disableCancellation = new CancellationTokenSource();&#xA;    }&#xA;&#xA;    private void OnDisable()&#xA;    {&#xA;        disableCancellation.Cancel();&#xA;    }&#xA;&#xA;    private void OnDestroy()&#xA;    {&#xA;        destroyCancellation.Cancel();&#xA;        destroyCancellation.Dispose();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Andalso &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()&#xA;{&#xA;    await UniTask.Yield();&#xA;    throw new OperationCanceledException();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()&#xA;{&#xA;    try&#xA;    {&#xA;        var x = await FooAsync();&#xA;        return x * 2;&#xA;    }&#xA;    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0&#xA;    {&#xA;        return -1;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();&#xA;if (isCanceled)&#xA;{&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; &#xA;&lt;h2&gt;Timeout handling&lt;/h2&gt; &#xA;&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cts = new CancellationTokenSource();&#xA;cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.&#xA;&#xA;try&#xA;{&#xA;    await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest().WithCancellation(cts.Token);&#xA;}&#xA;catch (OperationCanceledException ex)&#xA;{&#xA;    if (ex.CancellationToken == cts.Token)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Timeout&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var cancelToken = new CancellationTokenSource();&#xA;cancelButton.onClick.AddListener(()=&amp;gt;&#xA;{&#xA;    cancelToken.Cancel(); // cancel from button click.&#xA;});&#xA;&#xA;var timeoutToken = new CancellationTokenSource();&#xA;timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.&#xA;&#xA;try&#xA;{&#xA;    // combine token&#xA;    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);&#xA;&#xA;    await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest().WithCancellation(linkedTokenSource.Token);&#xA;}&#xA;catch (OperationCanceledException ex)&#xA;{&#xA;    if (timeoutToken.IsCancellationRequested)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Timeout.&#34;);&#xA;    }&#xA;    else if (cancelToken.IsCancellationRequested)&#xA;    {&#xA;        UnityEngine.Debug.Log(&#34;Cancel clicked.&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.&#xA;&#xA;async UniTask FooAsync()&#xA;{&#xA;    try&#xA;    {&#xA;        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.&#xA;        await UnityWebRequest.Get(&#34;http://foo&#34;).SendWebRequest()&#xA;            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));&#xA;        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.&#xA;    }&#xA;    catch (OperationCanceledException ex)&#xA;    {&#xA;        if (timeoutController.IsTimeout())&#xA;        {&#xA;            UnityEngine.Debug.Log(&#34;timeout&#34;);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;TimeoutController timeoutController;&#xA;CancellationTokenSource clickCancelSource;&#xA;&#xA;void Start()&#xA;{&#xA;    this.clickCancelSource = new CancellationTokenSource();&#xA;    this.timeoutController = new TimeoutController(clickCancelSource);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));&#xA;&#xA;var request = await UnityWebRequest.Get(&#34;http://google.co.jp&#34;)&#xA;    .SendWebRequest()&#xA;    .ToUniTask(progress: progress);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; &#xA;&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;&#xA;{&#xA;    public void Report(float value)&#xA;    {&#xA;        UnityEngine.Debug.Log(value);&#xA;    }&#xA;&#xA;    public async UniTaskVoid WebRequest()&#xA;    {&#xA;        var request = await UnityWebRequest.Get(&#34;http://google.co.jp&#34;)&#xA;            .SendWebRequest()&#xA;            .ToUniTask(progress: this); // pass this&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PlayerLoop&lt;/h2&gt; &#xA;&lt;p&gt;UniTask is run on a custom &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&#34;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public enum PlayerLoopTiming&#xA;{&#xA;    Initialization = 0,&#xA;    LastInitialization = 1,&#xA;&#xA;    EarlyUpdate = 2,&#xA;    LastEarlyUpdate = 3,&#xA;&#xA;    FixedUpdate = 4,&#xA;    LastFixedUpdate = 5,&#xA;&#xA;    PreUpdate = 6,&#xA;    LastPreUpdate = 7,&#xA;&#xA;    Update = 8,&#xA;    LastUpdate = 9,&#xA;&#xA;    PreLateUpdate = 10,&#xA;    LastPreLateUpdate = 11,&#xA;&#xA;    PostLateUpdate = 12,&#xA;    LastPostLateUpdate = 13&#xA;    &#xA;#if UNITY_2020_2_OR_NEWER&#xA;    TimeUpdate = 14,&#xA;    LastTimeUpdate = 15,&#xA;#endif&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It indicates when to run, you can check &lt;a href=&#34;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&#34;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad&#xA;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]&#xA;public static void InitUniTaskLoop()&#xA;{&#xA;    var loop = PlayerLoop.GetCurrentPlayerLoop();&#xA;    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; &#xA;&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Get ECS Loop.&#xA;var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;&#xA;&#xA;// Setup UniTask&#39;s PlayerLoop.&#xA;PlayerLoopHelper.Initialize(ref playerLoop);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;void Start()&#xA;{&#xA;    UnityEngine.Debug.Log(&#34;UniTaskPlayerLoop ready? &#34; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());&#xA;    PlayerLoopHelper.DumpCurrentPlayerLoop();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();&#xA;PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&#34;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&#34;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTaskVoid FireAndForgetMethod()&#xA;{&#xA;    // do anything...&#xA;    await UniTask.Yield();&#xA;}&#xA;&#xA;public void Caller()&#xA;{&#xA;    FireAndForgetMethod().Forget();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public async UniTask DoAsync()&#xA;{&#xA;    // do anything...&#xA;    await UniTask.Yield();&#xA;}&#xA;&#xA;public void Caller()&#xA;{&#xA;    DoAsync().Forget();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Action actEvent;&#xA;UnityAction unityEvent; // especially used in uGUI&#xA;&#xA;// Bad: async void&#xA;actEvent += async () =&amp;gt; { };&#xA;unityEvent += async () =&amp;gt; { };&#xA;&#xA;// Ok: create Action delegate by lambda&#xA;actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });&#xA;unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;class Sample : MonoBehaviour&#xA;{&#xA;    async UniTaskVoid Start()&#xA;    {&#xA;        // async init code.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;UniTaskTracker&lt;/h2&gt; &#xA;&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; &#xA; &lt;li&gt;Reload - Reload view.&lt;/li&gt; &#xA; &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; &#xA; &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; &#xA; &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; &#xA;&lt;h2&gt;External Assets&lt;/h2&gt; &#xA;&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; &#xA;&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, it is required to import &lt;code&gt;com.demigiant.dotween&lt;/code&gt; from &lt;a href=&#34;https://openupm.com/packages/com.demigiant.dotween/&#34;&gt;OpenUPM&lt;/a&gt; or to define &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// sequential&#xA;await transform.DOMoveX(2, 10);&#xA;await transform.DOMoveZ(5, 20);&#xA;&#xA;// parallel with cancellation&#xA;var ct = this.GetCancellationTokenOnDestroy();&#xA;&#xA;await UniTask.WhenAll(&#xA;    transform.DOMoveX(10, 3).WithCancellation(ct),&#xA;    transform.DOScale(10, 3).WithCancellation(ct));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; &#xA;&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Unity 2020.2, C# 8.0&#xA;await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate(token))&#xA;{&#xA;    Debug.Log(&#34;Update() &#34; + Time.frameCount);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// C# 7.3(Unity 2018.3~)&#xA;await UniTaskAsyncEnumerable.EveryUpdate(token).ForEachAsync(_ =&amp;gt;&#xA;{&#xA;    Debug.Log(&#34;Update() &#34; + Time.frameCount);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;, &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)&#xA;SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)&#xA;SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).&#xA;public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)&#xA;{&#xA;    var frameCount = 0;&#xA;    await UniTask.Yield();&#xA;    while (!token.IsCancellationRequested)&#xA;    {&#xA;        yield return frameCount++;&#xA;        await UniTask.Yield();&#xA;    }&#xA;}&#xA;&#xA;// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.&#xA;public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()&#xA;{&#xA;    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.&#xA;    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;&#xA;    {&#xA;        var frameCount = 0;&#xA;        await UniTask.Yield();&#xA;        while (!token.IsCancellationRequested)&#xA;        {&#xA;            await writer.YieldAsync(frameCount++); // instead of `yield return`&#xA;            await UniTask.Yield();&#xA;        }&#xA;    });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Awaitable Events&lt;/h2&gt; &#xA;&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;async UniTask TripleClick()&#xA;{&#xA;    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async&#xA;    await button.OnClickAsync();&#xA;    await button.OnClickAsync();&#xA;    await button.OnClickAsync();&#xA;    Debug.Log(&#34;Three times clicked&#34;);&#xA;}&#xA;&#xA;// more efficient way&#xA;async UniTask TripleClick()&#xA;{&#xA;    using (var handler = button.GetAsyncClickEventHandler())&#xA;    {&#xA;        await handler.OnClickAsync();&#xA;        await handler.OnClickAsync();&#xA;        await handler.OnClickAsync();&#xA;        Debug.Log(&#34;Three times clicked&#34;);&#xA;    }&#xA;}&#xA;&#xA;// use async LINQ&#xA;async UniTask TripleClick(CancellationToken token)&#xA;{&#xA;    await button.OnClickAsAsyncEnumerable().Take(3).Last();&#xA;    Debug.Log(&#34;Three times clicked&#34;);&#xA;}&#xA;&#xA;// use async LINQ2&#xA;async UniTask TripleClick(CancellationToken token)&#xA;{&#xA;    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;&#xA;    {&#xA;        Debug.Log(&#34;Every clicked&#34;);&#xA;    });&#xA;    Debug.Log(&#34;Three times clicked, complete.&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();&#xA;await trigger.OnCollisionEnterAsync();&#xA;await trigger.OnCollisionEnterAsync();&#xA;await trigger.OnCollisionEnterAsync();&#xA;&#xA;// every moves.&#xA;await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;&#xA;{&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);&#xA;&#xA;// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ&#xA;rp.ForEachAsync(x =&amp;gt;&#xA;{&#xA;    Debug.Log(x);&#xA;}, this.GetCancellationTokenOnDestroy()).Forget();&#xA;&#xA;rp.Value = 10; // push 10 to all subscriber&#xA;rp.Value = 11; // push 11 to all subscriber&#xA;&#xA;// WithoutCurrent ignore initial value&#xA;// BindTo bind stream value to unity components.&#xA;rp.WithoutCurrent().BindTo(this.textComponent);&#xA;&#xA;await rp.WaitAsync(); // wait until next value set&#xA;&#xA;// also exists ToReadOnlyAsyncReactiveProperty&#xA;var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);&#xA;var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// can not get click event during 3 seconds complete.&#xA;await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// queued message in asynchronous processing&#xA;await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;&#xA;{&#xA;    await UniTask.Delay(TimeSpan.FromSeconds(3));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&#34;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; &#xA;&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable&#xA;{&#xA;    Channel&amp;lt;T&amp;gt; channel;&#xA;&#xA;    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;&#xA;    IDisposable connection;&#xA;&#xA;    public AsyncMessageBroker()&#xA;    {&#xA;        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();&#xA;        multicastSource = channel.Reader.ReadAllAsync().Publish();&#xA;        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.&#xA;    }&#xA;&#xA;    public void Publish(T value)&#xA;    {&#xA;        channel.Writer.TryWrite(value);&#xA;    }&#xA;&#xA;    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()&#xA;    {&#xA;        return multicastSource;&#xA;    }&#xA;&#xA;    public void Dispose()&#xA;    {&#xA;        channel.Writer.TryComplete();&#xA;        connection.Dispose();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For Unit Testing&lt;/h2&gt; &#xA;&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;[UnityTest]&#xA;public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;&#xA;{&#xA;    var time = Time.realtimeSinceStartup;&#xA;&#xA;    Time.timeScale = 0.5f;&#xA;    try&#xA;    {&#xA;        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);&#xA;&#xA;        var elapsed = Time.realtimeSinceStartup - time;&#xA;        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));&#xA;    }&#xA;    finally&#xA;    {&#xA;        Time.timeScale = 1.0f;&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&#34;https://github.com/Cysharp/RuntimeUnitTestToolkit&#34;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; &#xA;&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; &#xA;&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; &#xA;&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; &#xA;&lt;h2&gt;For UnityEditor&lt;/h2&gt; &#xA;&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; &#xA; &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; &#xA;&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; &#xA;&lt;p&gt;Use standard type.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;.NET Type&lt;/th&gt; &#xA;   &lt;th&gt;UniTask Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Use UniTask type.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;.NET Type&lt;/th&gt; &#xA;   &lt;th&gt;UniTask Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Pooling Configuration&lt;/h2&gt; &#xA;&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&#34;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&#34;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())&#xA;{&#xA;    Debug.Log(type + &#34;:&#34; + size);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; &#xA;&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; &#xA;&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; &#xA;&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class SyncContextInjecter&#xA;{&#xA;    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]&#xA;    public static void Inject()&#xA;    {&#xA;        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API References&lt;/h2&gt; &#xA;&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&#34;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&#34;https://dotnet.github.io/docfx/&#34;&gt;DocFX&lt;/a&gt; and &lt;a href=&#34;https://github.com/Cysharp/DocfxTemplate&#34;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&#34;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&#34;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&#34;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;UPM Package&lt;/h2&gt; &#xA;&lt;h3&gt;Install via git URL&lt;/h3&gt; &#xA;&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;or add &lt;code&gt;&#34;com.cysharp.unitask&#34;: &#34;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&#34;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install via OpenUPM&lt;/h3&gt; &#xA;&lt;p&gt;The package is available on the &lt;a href=&#34;https://openupm.com&#34;&gt;openupm registry&lt;/a&gt;. It&#39;s recommended to install it via &lt;a href=&#34;https://github.com/openupm/openupm-cli&#34;&gt;openupm-cli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openupm add com.cysharp.unitask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;.NET Core&lt;/h2&gt; &#xA;&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&#34;https://www.nuget.org/packages/UniTask&#34;&gt;UniTask&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; &#xA;&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AysncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; &#xA;&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&#34;https://github.com/mgravell/PooledAwait&#34;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class ZeroAllocAsyncAwaitInDotNetCore&#xA;{&#xA;    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)&#xA;    {&#xA;        return Core(this, x, y);&#xA;&#xA;        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)&#xA;        {&#xA;            // do anything...&#xA;            await Task.Delay(TimeSpan.FromSeconds(x + y));&#xA;            await UniTask.Yield();&#xA;&#xA;            return 10;&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.&#xA;public ValueTask TestAsync()&#xA;{&#xA;    await using (UniTask.ReturnToCurrentSynchronizationContext())&#xA;    {&#xA;        await UniTask.SwitchToThreadPool();&#xA;        // do anything..&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&#34;https://github.com/Cysharp/MagicOnion/&#34;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; &#xA;&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&#34;https://github.com/Cysharp/ValueTaskSupplement&#34;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/format</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/dotnet/format</id>
    <link href="https://github.com/dotnet/format" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Home for the dotnet-format command&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;dotnet-format&lt;/h2&gt; &#xA;&lt;img width=&#34;480&#34; alt=&#34;dotnet-format&#34; src=&#34;https://user-images.githubusercontent.com/9797472/61659851-6bbdc880-ac7d-11e9-95f7-d30c7de1a18a.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/dotnet-format&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/dotnet-format.svg?sanitize=true&#34; alt=&#34;Nuget&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (Debug)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows (Release)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (Debug)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux (Release)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Localization (Debug)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Localization (Release)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/format/tree/main&#34;&gt;main&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Windows&amp;amp;_configuration=debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Windows&amp;amp;_configuration=release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Linux&amp;amp;_configuration=debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Linux&amp;amp;_configuration=release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Linux_Spanish&amp;amp;_configuration=debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/format/dotnet.format?branchName=main&amp;amp;jobName=Linux_Spanish&amp;amp;_configuration=release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;dotnet-format&lt;/code&gt; is a code formatter for &lt;code&gt;dotnet&lt;/code&gt; that applies style preferences to a project or solution. Preferences will be read from an &lt;code&gt;.editorconfig&lt;/code&gt; file, if present, otherwise a default set of preferences will be used. At this time &lt;code&gt;dotnet-format&lt;/code&gt; is able to format C# and Visual Basic projects with a subset of &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/format/main/docs/Supported-.editorconfig-options.md&#34;&gt;supported .editorconfig options&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;New in v5.1.225507&lt;/h3&gt; &#xA;&lt;h4&gt;New Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can now specify that format run against a solution filter with &lt;code&gt;dotnet format solution.slnf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can now filter diagnostics with &lt;code&gt;dotnet format --fix-analyzers --diagnostics ID0001&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can now generate a MSBuild binary log with &lt;code&gt;dotnet format --binary-log PATH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can now support analyzers which update non-code files, such as the &lt;a href=&#34;https://github.com/dotnet/roslyn-analyzers#microsoftcodeanalysispublicapianalyzers&#34;&gt;PublicApiAnalyzers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Breaking Changes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implicit restore when fixing code style or 3rd party analyzers (disable with &lt;code&gt;--no-restore&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Adopt csc style for warnings and errors&lt;/li&gt; &#xA; &lt;li&gt;Warnings and errors are now written to the standard error stream&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Changes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/format/pull/1133&#34;&gt;Add DiagnosticId to the format report (1133)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/format/pull/1021&#34;&gt;Reenabled .NET Core 2.1 support (1021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1118&#34;&gt;Update System.CommandLine to 2.0.0-beta1.21216.1 (1118)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1106&#34;&gt;Support AdditionalDocument changes (1106)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1082&#34;&gt;Fix typo in examples (1082)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1071&#34;&gt;Run CodeStyle formatter before removing unnecessary imports (1071)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1059&#34;&gt;Allow Solution Filter files to be passed as the workspace path (1059)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/872&#34;&gt;Add .pre-commit-hooks.yaml (872)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1015&#34;&gt;Add implicit restore when running analysis. Adds &lt;code&gt;--no-restore&lt;/code&gt; option. (1015)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1044&#34;&gt;Add separate command for binary log (1044)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1037&#34;&gt;Use correct flag for codestyle codefixes (1037)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1017&#34;&gt;Enhance whitespace issue logging with a detailed TextChange message (1017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1016&#34;&gt;Log all formatter error messages in a csc-style (1016)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1013&#34;&gt;LogDebug each project&#39;s applied .editorconfig (1013)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1007&#34;&gt;Add option to filter diagnostics by id (1007)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/1004&#34;&gt;Fix pre-commit directory (1004)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/982&#34;&gt;Log warnings and errors to the standard error stream (982)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/dotnet/format/pull/981&#34;&gt;Only report fixable compiler diagnostics. (981)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How To Use&lt;/h3&gt; &#xA;&lt;p&gt;dotnet-format is now part of the .NET 6 SDK. Invoking the &lt;code&gt;dotnet format&lt;/code&gt; command will fix whitespace, code style, and analyzer issues by default. dotnet-format will look in the current directory for a project or solution file and use that as the workspace to format. If more than one project or solution file is present in the current directory, you will need to specify the workspace to format. You can control how verbose the output will be by using the &lt;code&gt;--verbosity&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;There are also 3 subcommands to target specific scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet format whitespace&lt;/code&gt;: fixes whitespace&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet format style&lt;/code&gt;: runs code style analyzers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet format analyzers&lt;/code&gt;: runs third party analyzers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Common options for all commands&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-restore&lt;/code&gt;: Doesn&#39;t execute an implicit restore before formatting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--include-generated&lt;/code&gt;: Format files generated by the SDK&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--include&lt;/code&gt;: A list of relative file or folder paths to include in formatting. All files are formatted if empty.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--exclude&lt;/code&gt;: A list of relative file or folder paths to exclude from formatting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--verbosity&lt;/code&gt;: Set the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--report&lt;/code&gt;: Accepts a file path, which if provided, will produce a json report in the given directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--binarylog&lt;/code&gt;: Log all project or solution load information to a binary log file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--verify-no-changes&lt;/code&gt;: Verify no formatting changes would be performed. Terminates with a non-zero exit code if any files would have been formatted.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Unique options for &lt;code&gt;dotnet format&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--diagnostics&lt;/code&gt;: A space separated list of diagnostic ids to use as a filter when fixing code style or 3rd party issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--severity&lt;/code&gt;: The severity of diagnostics to fix. Allowed values are info, warn, and error.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: if the user specifies a severity here it is used for both style and analyzers.&lt;/p&gt; &#xA;&lt;h4&gt;Unique options for &lt;code&gt;dotnet format whitespace&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--folder&lt;/code&gt;: Whether to treat the workspace argument as a simple folder of files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Unique options for &lt;code&gt;dotnet format style&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--diagnostics&lt;/code&gt;: A space separated list of diagnostic ids to use as a filter when fixing code style or 3rd party issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--severity&lt;/code&gt;: The severity of diagnostics to fix. Allowed values are info, warn, and error.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Unique options for &lt;code&gt;dotnet format analyzers&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--diagnostics&lt;/code&gt;: A space separated list of diagnostic ids to use as a filter when fixing code style or 3rd party issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--severity&lt;/code&gt;: The severity of diagnostics to fix. Allowed values are info, warn, and error.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;format&lt;/code&gt; after &lt;code&gt;dotnet&lt;/code&gt; and before the command arguments that you want to run:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Examples&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats and runs analysis for the project or solution in the current directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format -v diag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats and runs analysis with very verbose logging.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format &amp;lt;workspace&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats and runs analysis for a specific project or solution.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format &amp;lt;workspace&amp;gt; --severity error&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats, fixes codestyle errors, and fixes 3rd party analyzer errors.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format whitespace &amp;lt;workspace&amp;gt; --folder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats a particular folder and subfolders.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format style &amp;lt;workspace&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fixes only codestyle analyzer warnings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format style &amp;lt;workspace&amp;gt; --severity error --no-restore&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fixes only codestyle analyzer errors without performing an implicit restore.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format style &amp;lt;workspace&amp;gt; --diagnostics IDE0005&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fixes only codestyle analyzer warnings for the IDE0005 diagnostic.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format analyzers &amp;lt;workspace&amp;gt; --severity error&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fixes only 3rd party analyzer errors.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format --include Program.cs Utility\Logging.cs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats the files Program.cs and Utility\Logging.cs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format --verify-no-changes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats but does not save. Returns a non-zero exit code if any files would have been changed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format --report &amp;lt;report-path&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats and saves a json report file to the given directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format --include test/Utilities/*.cs --folder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats the files expanded from native shell globbing (e.g. bash). Space-separated list of files are fed to formatter in this case. Also applies to &lt;code&gt;--exclude&lt;/code&gt; option.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotnet format --include &#39;test/Utilities/*.cs&#39; --folder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;With single quotes, formats the files expanded from built-in glob expansion. A single file pattern is fed to formatter, which gets expanded internally. Also applies to &lt;code&gt;--exclude&lt;/code&gt; option.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ls tests/Utilities/*.cs | dotnet format --include - --folder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Formats the list of files redirected from pipeline via standard input. Formatter will iterate over &lt;code&gt;Console.In&lt;/code&gt; to read the list of files. Also applies to &lt;code&gt;--exclude&lt;/code&gt; option.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;How to install Development Builds&lt;/h4&gt; &#xA;&lt;p&gt;Development builds of &lt;code&gt;dotnet-format&lt;/code&gt; are being hosted on Azure Packages. You can visit the &lt;a href=&#34;https://dev.azure.com/dnceng/public/_packaging?_a=package&amp;amp;feed=dotnet7&amp;amp;view=versions&amp;amp;package=dotnet-format&amp;amp;protocolType=NuGet&#34;&gt;dotnet-format Azure Packages page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install the latest build of the tool using the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet tool install -g dotnet-format --version &#34;7.*&#34; --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: After installing .NET 6 Preview 7 SDK or higher you will need to run the dotnet-format global tool by invoking &lt;code&gt;dotnet-format&lt;/code&gt;. Invoking &lt;code&gt;dotnet format&lt;/code&gt; will invoke the SDK&#39;s copy of dotnet-format.&lt;/p&gt; &#xA;&lt;h3&gt;How To Build From Source&lt;/h3&gt; &#xA;&lt;p&gt;You can build and package the tool using the following commands. The instructions assume that you are in the root of the repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;build -pack&#xA;# The final line from the build will read something like&#xA;# Successfully created package &#39;..\artifacts\packages\Debug\Shipping\dotnet-format.7.0.0-dev.nupkg&#39;.&#xA;# Use the value that is in the form `7.0.0-dev` as the version in the next command.&#xA;dotnet tool install --add-source .\artifacts\packages\Debug\Shipping -g dotnet-format --version &amp;lt;version&amp;gt;&#xA;dotnet format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: On macOS and Linux, &lt;code&gt;.\artifacts&lt;/code&gt; will need be switched to &lt;code&gt;./artifacts&lt;/code&gt; to accommodate for the different slash directions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;How To Uninstall&lt;/h3&gt; &#xA;&lt;p&gt;You can uninstall the tool using the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;dotnet tool uninstall -g dotnet-format&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jie65535/GrasscutterCommandGenerator</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/jie65535/GrasscutterCommandGenerator</id>
    <link href="https://github.com/jie65535/GrasscutterCommandGenerator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command Generator and Gacha Banner Editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grasscutter Tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jie65535/GrasscutterCommandGenerator/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/jie65535/GrasscutterCommandGenerator&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jie65535/GrasscutterCommandGenerator/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jie65535/GrasscutterCommandGenerator&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jie65535/GrasscutterCommandGenerator/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jie65535/GrasscutterCommandGenerator/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/README_en-US.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/README_ru-RU.md&#34;&gt;Русский&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commands Generator&lt;/h2&gt; &#xA;&lt;p&gt;请从 &lt;a href=&#34;https://github.com/jie65535/GrasscutterCommandGenerator/releases&#34;&gt;Releases&lt;/a&gt; 中获取最新版本&lt;/p&gt; &#xA;&lt;h2&gt;远程执行&lt;/h2&gt; &#xA;&lt;p&gt;服务端需要 &lt;a href=&#34;https://github.com/jie65535/gc-opencommand-plugin&#34;&gt;gc-opencommand-plugin&lt;/a&gt; 插件支持&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/OpenCommand.gif&#34; alt=&#34;OpenCommand&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;TODO List&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 多语言支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 简体中文&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 英语&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 俄语&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 远程执行命令&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 邮件编辑器（无进度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 商店编辑器（无进度）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;软件截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/GrasscutterLogo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/0-Home.png&#34; alt=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/1-CustomCommands.png&#34; alt=&#34;Custom Commands Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/2-CustomArtifact.png&#34; alt=&#34;Custom Artifact Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/3-CustomWeapon.png&#34; alt=&#34;Custom Weapon Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/4-GiveItem.png&#34; alt=&#34;Give Item Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/5-GiveAvatar.png&#34; alt=&#34;Give Avatar Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/6-SpawnEntity.png&#34; alt=&#34;Spawn Entity Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/7-ChangeScene.png&#34; alt=&#34;Change Scene Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/8-CustomStats.png&#34; alt=&#34;Custom Stats Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/9-Manage.png&#34; alt=&#34;Management&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/10-GachaBannerEditor.png&#34; alt=&#34;GachaBannerEditor&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/11-TextMapBrowser.png&#34; alt=&#34;Text Map Browser&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/12-Remote.png&#34; alt=&#34;Remote Screenshort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jie65535/GrasscutterCommandGenerator/main/Doc/Screenshots/13-Quest.png&#34; alt=&#34;Quest Screenshort&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/WinUI-Gallery</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/microsoft/WinUI-Gallery</id>
    <link href="https://github.com/microsoft/WinUI-Gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This app demonstrates the controls available in WinUI and the Fluent Design System.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csharp&lt;/li&gt; &#xA; &lt;li&gt;xaml products:&lt;/li&gt; &#xA; &lt;li&gt;windows&lt;/li&gt; &#xA; &lt;li&gt;windows-uwp statusNotificationTargets:&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:controlsgallery@microsoft.com&#34;&gt;controlsgallery@microsoft.com&lt;/a&gt; description: Demonstrates the usage of all XAML/WinUI controls in an interactive format.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;WinUI Gallery&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/WinUI-Gallery/main/README_Images/WinUIGalleryLanding.PNG&#34; alt=&#34;WinUI Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/stmoy/Xaml%20Controls%20Gallery/_build/latest?definitionId=2&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/stmoy/Xaml%20Controls%20Gallery/_apis/build/status/XAML%20Controls%20%20Gallery%20-%20CI%20Tests?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Shows all of the XAML controls in an interactive format. This app is the interactive companion to the &lt;a href=&#34;https://docs.microsoft.com/windows/uwp/design/basics/&#34;&gt;Fluent Design Guidelines&lt;/a&gt; and shows the usage of both UWP Xaml APIs and &lt;a href=&#34;https://docs.microsoft.com/uwp/toolkits/winui/&#34;&gt;Windows UI Toolkit&lt;/a&gt; APIs.&lt;/p&gt; &#xA;&lt;h2&gt;The WinUI Gallery shows how to:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Specify XAML controls in markup:&lt;/strong&gt; Each control page shows the markup used to create each example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use the Microsoft.UI.Xaml (WinUI) Library:&lt;/strong&gt; The app includes the latest WinUI NuGet package and shows how to use the &lt;a href=&#34;https://docs.microsoft.com/uwp/toolkits/winui/&#34;&gt;Windows UI Toolkit&lt;/a&gt; controls like NavigationView, SwipeControl, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Basic layout:&lt;/strong&gt; This sample will show all of the possible layout options for your app and allow you to interact with the panels to show how to achieve any layout you are looking for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adaptive UI:&lt;/strong&gt; In addition to showing how each control responds to different form factors, the app itself is responsive and shows various methods for achieving adaptive UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Version adaptive code:&lt;/strong&gt; This sample shows how to write version adaptive code so that the app can run on previous versions of Windows while also using the latest capabilities on the most recent verison of Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Further information&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The WinUI 3 Gallery requires &lt;a href=&#34;https://visualstudio.microsoft.com/vs/preview/&#34;&gt;Visual Studio 16.9 Preview 1&lt;/a&gt; or later to build and Windows 10 to execute. Also ensure that you&#39;ve completed the prerequisite steps from the &lt;a href=&#34;https://aka.ms/winui3/preview4&#34;&gt;installation instructions for WinUI 3 Preview 4&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To obtain information about Windows 10 development, go to the &lt;a href=&#34;https://developer.microsoft.com/windows&#34;&gt;Windows Dev Center&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To obtain information about Microsoft Visual Studio and the tools for developing Windows apps, go to &lt;a href=&#34;http://go.microsoft.com/fwlink/?LinkID=532422&#34;&gt;Visual Studio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To contact the authors, please reach out to &lt;a href=&#34;mailto:ControlsGallery@microsoft.com&#34;&gt;ControlsGallery@microsoft.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related topics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/uwp/get-started/&#34;&gt;Get started with Windows 10 apps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/store/productId/9P3JFPWWDZRC&#34;&gt;Install a prebuilt version of this app from Microsoft Store&lt;/a&gt;. Each control page in the application has links to relevant Microsoft Docs for that control.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/uwp/toolkits/winui/&#34;&gt;Windows UI Library (WinUI)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related samples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Microsoft/Windows-appsample-rssreader&#34;&gt;RSS reader sample&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Microsoft/Windows-appsample-lunch-scheduler&#34;&gt;Lunch Scheduler app sample&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Microsoft/Windows-appsample-customers-orders-database&#34;&gt;Customers Orders Database sample&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Microsoft/Windows-universal-samples/tree/dev&#34;&gt;Universal Windows Platform (UWP) Samples&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/efcore</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/dotnet/efcore</id>
    <link href="https://github.com/dotnet/efcore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/dnceng/public/51/main&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/dnceng/public/_build?definitionId=51&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/dnceng/public/51/main&#34; alt=&#34;test results&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is home to the following &lt;a href=&#34;https://dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&#34;https://github.com/microsoft&#34;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&#34;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Entity Framework Core&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;EF Core is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&#34;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/&#34;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer&#xA;dotnet add package Microsoft.EntityFrameworkCore.Sqlite&#xA;dotnet add package Microsoft.EntityFrameworkCore.Cosmos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&#34;https://docs.microsoft.com/ef/core/get-started/&#34;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var db = new BloggingContext())&#xA;{&#xA;    // Inserting data into the database&#xA;    db.Add(new Blog { Url = &#34;http://blogs.msdn.com/adonet&#34; });&#xA;    db.SaveChanges();&#xA;&#xA;    // Querying&#xA;    var blog = db.Blogs&#xA;        .OrderBy(b =&amp;gt; b.BlogId)&#xA;        .First();&#xA;&#xA;    // Updating&#xA;    blog.Url = &#34;https://devblogs.microsoft.com/dotnet&#34;;&#xA;    blog.Posts.Add(&#xA;        new Post&#xA;        {&#xA;            Title = &#34;Hello World&#34;,&#xA;            Content = &#34;I wrote an app using EF Core!&#34;&#xA;        });&#xA;    db.SaveChanges();&#xA;&#xA;    // Deleting&#xA;    db.Remove(blog);&#xA;    db.SaveChanges();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&#34; alt=&#34;preview version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable version is available on &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet add package Microsoft.Data.Sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&#34;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;h3&gt;Daily builds&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&#34;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;This library implements the common &lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/data/adonet/&#34;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&#34;https://docs.microsoft.com/dotnet/standard/data/sqlite/&#34;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;using (var connection = new SqliteConnection(&#34;Data Source=Blogs.db&#34;))&#xA;{&#xA;    connection.Open();&#xA;&#xA;    var command = connection.CreateCommand();&#xA;    command.CommandText = &#34;SELECT Url FROM Blogs&#34;;&#xA;&#xA;    using (var reader = command.ExecuteReader())&#xA;    {&#xA;        while (reader.Read())&#xA;        {&#xA;            var url = reader.GetString(0);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&#34;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting support&lt;/h3&gt; &#xA;&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&#34;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&#34;https://github.com/dotnet/efcore/issues/new/choose&#34;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&#34;&gt;getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/efcore/issues/23884&#34;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/what-is-new/release-planning&#34;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ef/core/providers/writing-a-provider&#34;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>radzenhq/radzen-blazor</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/radzenhq/radzen-blazor</id>
    <link href="https://github.com/radzenhq/radzen-blazor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The home of the Radzen Blazor components.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/radzenhq/radzen-blazor/master/RadzenBlazorDemos/wwwroot/images/radzen-blazor-components.png&#34; alt=&#34;Radzen Blazor Components&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Radzen Blazor Components &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A set of &lt;strong&gt;60+ free and open source&lt;/strong&gt; native Blazor UI controls. &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://blazor.radzen.com&#34;&gt;See Online Demos&lt;/a&gt; or &lt;a href=&#34;https://blazor.radzen.com/docs/&#34;&gt;Read the Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/radzenhq/radzen-blazor/raw/master/LICENSE&#34;&gt; &lt;img alt=&#34;License - MIT&#34; src=&#34;https://img.shields.io/github/license/radzenhq/radzen-blazor?logo=github&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Radzen.Blazor&#34;&gt; &lt;img alt=&#34;Nuget Downloads&#34; src=&#34;https://img.shields.io/nuget/dt/Radzen.Blazor?color=%232694F9&amp;amp;label=nuget%20downloads&amp;amp;logo=nuget&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;img alt=&#34;Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/radzenhq/radzen-blazor?logo=github&amp;amp;style=for-the-badge&#34;&gt; &lt;a href=&#34;https://github.com/radzenhq/radzen-blazor/graphs/contributors&#34;&gt; &lt;img alt=&#34;Github Contributors&#34; src=&#34;https://img.shields.io/github/contributors/radzenhq/radzen-blazor?logo=github&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://blazor.radzen.com&#34;&gt; &lt;img alt=&#34;Radzen Blazor Components - Online Demos&#34; src=&#34;https://img.shields.io/badge/demos-online-brightgreen?color=%232694F9&amp;amp;logo=blazor&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://blazor.radzen.com/docs&#34;&gt; &lt;img alt=&#34;Radzen Blazor Components - Documentation&#34; src=&#34;https://img.shields.io/badge/docs-online-brightgreen?color=%232694F9&amp;amp;logo=blazor&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Why choose Radzen Blazor Components?&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;✨&lt;/span&gt; Free&lt;/h3&gt; &#xA;&lt;p&gt;Radzen Blazor Components are open source and free for commercial use. You can install them from &lt;a href=&#34;https://www.nuget.org/packages/Radzen.Blazor&#34;&gt;nuget&lt;/a&gt; or build your own copy from source.&lt;/p&gt; &#xA;&lt;p&gt;Paid support is available as part of the &lt;a href=&#34;https://www.radzen.com/pricing/&#34;&gt;Radzen Professional subscription&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;💻&lt;/span&gt; Native&lt;/h3&gt; &#xA;&lt;p&gt;The components are implemented in C# and take full advantage of the Blazor framework. They do not depend on or wrap existing JavaScript frameworks or libraries.&lt;/p&gt; &#xA;&lt;p&gt;Blazor Server and Blazor WebAssembly are fully supported.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🌱&lt;/span&gt; Growing&lt;/h3&gt; &#xA;&lt;p&gt;We add new components and features on a regular basis.&lt;/p&gt; &#xA;&lt;p&gt;Short development cycle. We release as soon as new stuff is available. No more quarterly releases.&lt;/p&gt; &#xA;&lt;h2&gt;Support exceeding your expectations&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;💬&lt;/span&gt; Community Support&lt;/h3&gt; &#xA;&lt;p&gt;Everybody is welcome to visit the &lt;a href=&#34;https://forum.radzen.com/&#34;&gt;Radzen Community forum&lt;/a&gt;. Join the growing community and participate in the discussions!&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🎯&lt;/span&gt; Dedicated Support&lt;/h3&gt; &#xA;&lt;p&gt;The Radzen team monitors the forum threads, but does not guarantee a response to every question. For guaranteed responses you may consider the dedicated support option.&lt;/p&gt; &#xA;&lt;p&gt;Dedicated support for the Radzen Blazor Components is available as part of the &lt;a href=&#34;https://www.radzen.com/pricing/&#34;&gt;Radzen Professional subscription&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our flagship product &lt;a href=&#34;https://www.radzen.com/features/&#34;&gt;Radzen Studio&lt;/a&gt; provides tons of productivity features for Blazor developers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The first in the industry WYSIWYG Blazor design time canvas&lt;/li&gt; &#xA; &lt;li&gt;Scaffolding a complete CRUD applications from a database&lt;/li&gt; &#xA; &lt;li&gt;Built-in security - authentication and authorization&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code and Professional support&lt;/li&gt; &#xA; &lt;li&gt;Deployment to IIS and Azure&lt;/li&gt; &#xA; &lt;li&gt;Dedicated support with 24 hour guaranteed response time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started with Radzen Blazor Components&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install&lt;/h3&gt; &#xA;&lt;p&gt;Radzen Blazor Components are distributed as a &lt;a href=&#34;https://www.nuget.org/packages/Radzen.Blazor&#34;&gt;Radzen.Blazor nuget package&lt;/a&gt;. You can add them to your project in one of the following ways&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the package from command line by running &lt;code&gt;dotnet add package Radzen.Blazor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the project from the Visual Nuget Package Manager&lt;/li&gt; &#xA; &lt;li&gt;Manually edit the .csproj file and add a project reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Import the namespace&lt;/h3&gt; &#xA;&lt;p&gt;Open the &lt;code&gt;_Imports.razor&lt;/code&gt; file of your Blazor application and add this line &lt;code&gt;@using Radzen.Blazor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3. Include a theme&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;code&gt;Pages\_Layout.cshtml&lt;/code&gt; (Blazor Server .NET 6+), &lt;code&gt;Pages\_Host.cshtml&lt;/code&gt; (Blazor Server before .NET 6) or &lt;code&gt;wwwroot/index.html&lt;/code&gt; (Blazor WebAssembly) and include a theme CSS file by adding this snippet&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;_content/Radzen.Blazor/css/default.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you either add Bootstrap manually or don&#39;t use it at all, include this instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;_content/Radzen.Blazor/css/default-base.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Include Radzen.Blazor.js&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;code&gt;Pages\_Layout.cshtml&lt;/code&gt; (Blazor Server .NET 6+), &lt;code&gt;Pages\_Host.cshtml&lt;/code&gt; (Blazor Server before .NET 6) or &lt;code&gt;wwwroot/index.html&lt;/code&gt; (Blazor WebAssembly) and include this snippet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;_content/Radzen.Blazor/Radzen.Blazor.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Use a component&lt;/h3&gt; &#xA;&lt;p&gt;Use any Radzen Blazor component by typing its tag name in a Blazor page e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;RadzenButton Text=&#34;Hi&#34;&amp;gt;&amp;lt;/RadzenButton&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Data-binding a property&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-razor&#34;&gt;&amp;lt;RadzenButton Text=@text /&amp;gt;&#xA;&amp;lt;RadzenTextBox @bind-Value=@text /&amp;gt;&#xA;@code {&#xA;  string text = &#34;Hi&#34;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Handing events&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-razor&#34;&gt;&amp;lt;RadzenButton Click=&#34;@ButtonClicked&#34; Text=&#34;Hi&#34;&amp;gt;&amp;lt;/RadzenButton&amp;gt;&#xA;@code {&#xA;  void ButtonClicked()&#xA;  {&#xA;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>desenvolvedor-io/dev-store</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/desenvolvedor-io/dev-store</id>
    <link href="https://github.com/desenvolvedor-io/dev-store" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A microservices e-commerce reference application built with ASP.NET 6&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;logo&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161198565-ac18c5ac-c0d9-4669-9568-b2009e944d77.png#gh-light-mode-only&#34;&gt; &lt;img alt=&#34;logo&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161364257-0c1d81f6-62ac-4192-93f8-836b4ce0fd06.png#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;DevStore - A microservices e-commerce reference application built with ASP.NET 6&lt;/h1&gt; &#xA;&lt;p&gt;A real-world reference application powered by &lt;a href=&#34;https://desenvolvedor.io/&#34;&gt;desenvolvedor.io&lt;/a&gt; &lt;img alt=&#34;Brasil&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161345649-c7184fdc-2bc3-42a9-8fb6-6ffee9c8f9c2.png&#34; width=&#34;20&#34; height=&#34;14&#34;&gt; implementing the most common and used technologies to share with the technical community the best way to develop full and complex applications with .NET&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h6&gt;This project was inspired by &lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnContainers&#34;&gt;EShopOnContainers&lt;/a&gt;, however the real motivation was to build it by &#34;our way&#34;.&lt;/h6&gt; &#xA;&lt;h6&gt;The EShopOnContainers is an awesome project, however the code has some &#34;bad smells&#34;. We found it difficult to start learning/using EShopOnContainers compared to DevStore. We like to think of the DevStore as a simplified (but no less complex) version and written with more care in code and small details. We also focused only on the Web architecture with ASP.NET.&lt;/h6&gt; &#xA;&lt;h2&gt;Give a Star! &lt;span&gt;⭐&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you liked the project or if DevStore is helping you, please give us a star ;)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;DevStore&#34; src=&#34;https://user-images.githubusercontent.com/5068797/164293734-a72fbeeb-0965-4413-a624-29e1c56c25df.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Want to learn everything to build an app like this? &lt;span&gt;🎓&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Check this online courses at &lt;a href=&#34;https://desenvolvedor.io&#34;&gt;desenvolvedor.io&lt;/a&gt; (only in portuguese)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://desenvolvedor.io/formacao/asp-net-core-expert&#34;&gt;ASP.NET Core Expert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://desenvolvedor.io/formacao/arquiteto-de-software&#34;&gt;Software Architect&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technologies / Components implemented&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;.NET 6&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ASP.NET MVC Core&lt;/li&gt; &#xA;   &lt;li&gt;ASP.NET WebApi&lt;/li&gt; &#xA;   &lt;li&gt;ASP.NET Minimal API&lt;/li&gt; &#xA;   &lt;li&gt;ASP.NET Identity Core&lt;/li&gt; &#xA;   &lt;li&gt;Refresh Token&lt;/li&gt; &#xA;   &lt;li&gt;JWT with rotactive public / private key&lt;/li&gt; &#xA;   &lt;li&gt;GRPC&lt;/li&gt; &#xA;   &lt;li&gt;Background Services&lt;/li&gt; &#xA;   &lt;li&gt;Entity Framework Core 6&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Components / Services&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RabbitMQ&lt;/li&gt; &#xA;   &lt;li&gt;EasyNetQ&lt;/li&gt; &#xA;   &lt;li&gt;Refit&lt;/li&gt; &#xA;   &lt;li&gt;Polly&lt;/li&gt; &#xA;   &lt;li&gt;Bogus&lt;/li&gt; &#xA;   &lt;li&gt;Dapper&lt;/li&gt; &#xA;   &lt;li&gt;FluentValidator&lt;/li&gt; &#xA;   &lt;li&gt;MediatR&lt;/li&gt; &#xA;   &lt;li&gt;Swagger UI with JWT support&lt;/li&gt; &#xA;   &lt;li&gt;NetDevPack&lt;/li&gt; &#xA;   &lt;li&gt;NetDevPack.Identity&lt;/li&gt; &#xA;   &lt;li&gt;NetDevPack.Security.JWT&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hosting&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;IIS&lt;/li&gt; &#xA;   &lt;li&gt;NGINX&lt;/li&gt; &#xA;   &lt;li&gt;Docker (with compose)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture:&lt;/h2&gt; &#xA;&lt;h3&gt;Complete architecture implementing the most important and used concerns as:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hexagonal Architecture&lt;/li&gt; &#xA; &lt;li&gt;Clean Code&lt;/li&gt; &#xA; &lt;li&gt;Clean Architecture&lt;/li&gt; &#xA; &lt;li&gt;DDD - Domain Driven Design (Layers and Domain Model Pattern)&lt;/li&gt; &#xA; &lt;li&gt;Domain Events&lt;/li&gt; &#xA; &lt;li&gt;Domain Notification&lt;/li&gt; &#xA; &lt;li&gt;Domain Validations&lt;/li&gt; &#xA; &lt;li&gt;CQRS (Imediate Consistency)&lt;/li&gt; &#xA; &lt;li&gt;Retry Pattern&lt;/li&gt; &#xA; &lt;li&gt;Circuit Breaker&lt;/li&gt; &#xA; &lt;li&gt;Unit of Work&lt;/li&gt; &#xA; &lt;li&gt;Repository&lt;/li&gt; &#xA; &lt;li&gt;Specification Pattern&lt;/li&gt; &#xA; &lt;li&gt;API Gateway / BFF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;h3&gt;The entire application is based in an unique solution with 7 API&#39;s and one web application (MVC)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;read before&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161202409-edcf2f38-0714-4de5-927d-1a02be4501ec.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This is a reference application, each microservice has its own database and represents a bounded context (DDD concept). There is a BFF / API Gateway to manage the Basket / Order / Payment requests and data structure from responses.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;read before&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161207732-e4f67ce4-624d-4067-a756-67ee1bb553de.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can run the DevStore project on any operating system. &lt;strong&gt;Make sure you have installed docker in your environment.&lt;/strong&gt; (&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Get Docker Installation&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Clone DevStore repository and navigate to the &lt;strong&gt;/Docker&lt;/strong&gt; folder and then:&lt;/p&gt; &#xA;&lt;h3&gt;If you just want run the DevStore application in your Docker enviroment:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;If you want to build the local images and run the DevStore application in your Docker enviroment:&lt;/h3&gt; &#xA;&lt;p&gt;This compose will provide one database container each API service.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-local.yml up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;If you prefer save machine resources use the light local compose:&lt;/h3&gt; &#xA;&lt;p&gt;This compose will provide just one database container for all API services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-local-light.yml up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;If you want run locally with VS/VS Code:&lt;/h3&gt; &#xA;&lt;p&gt;You will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;SQL instance (or container)&lt;/li&gt; &#xA; &lt;li&gt;RabbitMQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So you can edit the Docker compose to just run the database and queue dependencies and save your time.&lt;/p&gt; &#xA;&lt;h3&gt;If you want Visual Studio with F5 and debug experience:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will need at least Visual Studio 2022 and .NET 6.&lt;/li&gt; &#xA; &lt;li&gt;The latest SDK and tools can be downloaded from &lt;a href=&#34;https://dot.net/core&#34;&gt;https://dot.net/core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Setup the solution to start multiple projects and hit F5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5068797/161358024-bd5754b6-61e3-47f2-bd17-bd3c32ec4bdd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;If you want Visual Studio Code experience:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the VS Code on root directory (solution file)&lt;/li&gt; &#xA; &lt;li&gt;Create a new launch.json at VS Code debug section and use the configuration below to setup the option &#34;Start all projects&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore MVC WebApp&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/web/DevStore.WebApp.MVC/bin/Debug/net6.0/DevStore.WebApp.MVC.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/web/DevStore.WebApp.MVC&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore Billing API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.Billing.API/bin/Debug/net6.0/DevStore.Billing.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.Billing.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore Catalog API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.Catalog.API/bin/Debug/net6.0/DevStore.Catalog.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.Catalog.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore Customers API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.Customers.API/bin/Debug/net6.0/DevStore.Customers.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.Customers.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore Identity API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.Identity.API/bin/Debug/net6.0/DevStore.Identity.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.Identity.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore Orders API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.Orders.API/bin/Debug/net6.0/DevStore.Orders.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.Orders.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore ShoppingCart API&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/services/DevStore.ShoppingCart.API/bin/Debug/net6.0/DevStore.ShoppingCart.API.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/services/DevStore.ShoppingCart.API&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;DevStore BFF Checkout&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/src/api-gateways/DevStore.Bff.Checkout/bin/Debug/net6.0/DevStore.Bff.Checkout.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}/src/api-gateways/DevStore.Bff.Checkout&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false&#xA;        }&#xA;    ],&#xA;    &#34;compounds&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;Start all projects&#34;,&#xA;            &#34;configurations&#34;: [&#xA;                &#34;DevStore MVC WebApp&#34;,&#xA;                &#34;DevStore Billing API&#34;,&#xA;                &#34;DevStore Catalog API&#34;,&#xA;                &#34;DevStore Customers API&#34;,&#xA;                &#34;DevStore Identity API&#34;,&#xA;                &#34;DevStore Orders API&#34;,&#xA;                &#34;DevStore ShoppingCart API&#34;,&#xA;                &#34;DevStore BFF Checkout&#34;&#xA;            ],&#xA;            &#34;stopAll&#34;: true&#xA;        }&#xA;    ]&#xA;}   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is not an architectural template or bootstrap model for new apps&lt;/li&gt; &#xA; &lt;li&gt;All implementations were made for the real world, but the goal is to share knowledge&lt;/li&gt; &#xA; &lt;li&gt;Maybe you don&#39;t need many implementations included, try to avoid &lt;strong&gt;over-engineering&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pull-Requests&lt;/h2&gt; &#xA;&lt;p&gt;Open an issue and let&#39;s discuss! Do not submit PRs for undiscussed or unapproved features.&lt;/p&gt; &#xA;&lt;p&gt;If you want to help us, choose an approved issue and implement it.&lt;/p&gt; &#xA;&lt;h2&gt;We are Online&lt;/h2&gt; &#xA;&lt;p&gt;See the project running on &lt;a href=&#34;https://devstore.academy&#34; target=&#34;_blank&#34;&gt;DevStore official instance&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;DevStore was proudly developed by &lt;a href=&#34;https://desenvolvedor.io/&#34;&gt;desenvolvedor.io&lt;/a&gt;❤&lt;img alt=&#34;Brasil&#34; src=&#34;https://user-images.githubusercontent.com/5068797/161345649-c7184fdc-2bc3-42a9-8fb6-6ffee9c8f9c2.png&#34; width=&#34;20&#34; height=&#34;14&#34;&gt; team under the &lt;a href=&#34;https://raw.githubusercontent.com/desenvolvedor-io/dev-store/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-functions-durable-extension</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/Azure/azure-functions-durable-extension</id>
    <link href="https://github.com/Azure/azure-functions-durable-extension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Durable Task Framework extension for Azure Functions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Durable Functions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/appsvc/azure-functions-durable-extension&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/rsoa2rrjxmd9h8i1?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://durabletaskframework.visualstudio.com/Durable%20Task%20Framework%20CI/_build/latest?definitionId=15&amp;amp;branchName=dev&#34;&gt;&lt;img src=&#34;https://durabletaskframework.visualstudio.com/Durable%20Task%20Framework%20CI/_apis/build/status/Azure.azure-functions-durable-extension?branchName=dev&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Durable Functions is an extension that helps developers build reliable, stateful apps on the &lt;a href=&#34;https://functions.azure.com&#34;&gt;Azure Functions&lt;/a&gt; platform.&lt;/p&gt; &#xA;&lt;p&gt;This extension adds three new types functions to the Azure Functions family:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-orchestrations&#34;&gt;Orchestrator functions&lt;/a&gt;&lt;/strong&gt;: Long-running, reliable workflow functions written in code that schedule and coordinate other functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-types-features-overview#activity-functions&#34;&gt;Activity functions&lt;/a&gt;&lt;/strong&gt;: Stateless functions that are the basic unit of work in a durable function orchestration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-entities&#34;&gt;Entity functions&lt;/a&gt;&lt;/strong&gt;: Stateful &lt;a href=&#34;https://en.wikipedia.org/wiki/Actor_model&#34;&gt;actor&lt;/a&gt;-like functions that have identities and store state explicitly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Durable Functions can run anywhere that Azure Functions can run, including in the Azure Functions &#34;Serverless&#34; &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-scale#consumption-plan&#34;&gt;Consumption plan&lt;/a&gt;, the &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-scale#premium-plan&#34;&gt;Elastic Premium plan&lt;/a&gt;, on &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-kubernetes-keda&#34;&gt;Kubernetes&lt;/a&gt;, or even locally for development using &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-create-first-csharp&#34;&gt;Visual Studio&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-develop-vs-code&#34;&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;📑 &lt;strong&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/&#34;&gt;Official documentation&lt;/a&gt;&lt;/strong&gt; 📑&lt;/p&gt; &#xA;&lt;p&gt;For a more detailed overview, including examples of what you can do with Durable Functions, see our &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-overview&#34;&gt;What is Durable Functions?&lt;/a&gt; article.&lt;/p&gt; &#xA;&lt;h2&gt;NuGet Packages&lt;/h2&gt; &#xA;&lt;p&gt;Durable Functions updates are published as NuGet packages.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package Name&lt;/th&gt; &#xA;   &lt;th&gt;NuGet&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.Azure.WebJobs.Extensions.DurableTask&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.DurableTask&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.Azure.WebJobs.Extensions.DurableTask.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers (C# only)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Language support&lt;/h2&gt; &#xA;&lt;p&gt;Durable Functions supports a subset of languages supported by Azure Functions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Repo&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;Generally available - &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-create-first-csharp&#34;&gt;get started&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure/azure-functions-durable-extension&#34;&gt;Azure/azure-functions-durable-extension&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;Generally available - &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/quickstart-js-vscode&#34;&gt;get started&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure/azure-functions-durable-js&#34;&gt;Azure/azure-functions-durable-js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;Generally available - &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/quickstart-python-vscode&#34;&gt;get started&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure/azure-functions-durable-python&#34;&gt;Azure/azure-functions-durable-python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PowerShell&lt;/td&gt; &#xA;   &lt;td&gt;Public preview - &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/durable/quickstart-powershell-vscode&#34;&gt;get started&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure/azure-functions-powershell-worker&#34;&gt;Azure/azure-functions-powershell-worker&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;Under consideration - &lt;a href=&#34;https://github.com/Azure/azure-functions-java-worker/issues/213&#34;&gt;give feedback&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Each language has its own language-specific SDK and programming model. Regardless of which language you use, the extension in this repo must be installed to enable the Durable Functions triggers.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The Durable Functions NuGet package can be referenced directly in a Visual Studio project or can be installed using the &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-run-local&#34;&gt;Azure Functions Core Tools&lt;/a&gt; command-line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func extensions install -p Microsoft.Azure.WebJobs.Extensions.DurableTask -v 2.3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Durable Functions is also available in supported &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/functions-bindings-register#extension-bundles&#34;&gt;extension bundles&lt;/a&gt;. Note that extension bundles are only supported for non-.NET languages.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Many features of Durable Functions have been voluntarily contributed by the community, and we always welcome such contributions. If you are interested in contributing, please take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-functions-durable-extension/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;p&gt;Durable Functions is developed in collaboration with Microsoft Research. As a result, the Durable Functions team actively produces research papers and artifacts; these include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/research/uploads/prod/2021/10/DF-Semantics-Final.pdf&#34;&gt;Durable Functions: Semantics for Stateful Serverless&lt;/a&gt; &lt;em&gt;(OOPSLA&#39;21)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2103.00033.pdf&#34;&gt;Serverless Workflows with Durable Functions and Netherite&lt;/a&gt; &lt;em&gt;(pre-print)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under &lt;a href=&#34;https://github.com/Azure/azure-webjobs-sdk/raw/master/LICENSE.txt&#34;&gt;the MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ChilliCream/hotchocolate</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/ChilliCream/hotchocolate</id>
    <link href="https://github.com/ChilliCream/hotchocolate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Welcome to the home of the Hot Chocolate GraphQL server for .NET, the Strawberry Shake GraphQL client for .NET and Banana Cake Pop the awesome Monaco based GraphQL IDE.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://chillicream.com/resources/chillicream-graphql-banner.svg?sanitize=true&#34; alt=&#34;ChilliCream GraphQL Platform&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/HotChocolate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/hotchocolate.svg?sanitize=true&#34; alt=&#34;NuGet Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ChilliCream/hotchocolate/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=HotChocolate&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=HotChocolate&amp;amp;metric=coverage&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://slack.chillicream.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join%20the%20community-on%20slack-blue.svg?sanitize=true&#34; alt=&#34;Slack channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/chilli_cream&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join%20us-on%20twitter-green.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;ChilliCream GraphQL Platform&lt;/h1&gt; &#xA;&lt;p&gt;The ChilliCream GraphQL Platform, at its core, is a new way to create powerful Backends. HotChocolate, our .NET GraphQL server, connects any service or data source and creates a cohesive service to offer your consumers a unified API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://chillicream.com/resources/chillicream-graphql-platform.svg?sanitize=true&#34; alt=&#34;ChilliCream GraphQL Platform&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Product Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Hot Chocolate&lt;/h3&gt; &#xA;&lt;p&gt;Our GraphQL server to create GraphQL endpoints and merge schemas.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chillicream.com/docs/hotchocolate/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Banana Cake Pop&lt;/h3&gt; &#xA;&lt;p&gt;Our GraphQL IDE to explore, request and analyze any GraphQL endpoint.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chillicream.com/docs/bananacakepop/&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Strawberry Shake&lt;/h3&gt; &#xA;&lt;p&gt;Our GraphQL client to fetch data from any GraphQL endpoint.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chillicream.com/docs/strawberryshake/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Green Donut&lt;/h3&gt; &#xA;&lt;p&gt;Our DataLoader to solve the N+1 problem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chillicream.com/docs/greendonut/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in upcoming releases, check out our &lt;a href=&#34;https://github.com/ChilliCream/hotchocolate/projects/28&#34;&gt;Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official examples&lt;/h2&gt; &#xA;&lt;p&gt;Examples of things built on top of the ChilliCream GraphQL Platform that are open source and can be explored by others.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChilliCream/graphql-workshop&#34;&gt;GraphQL workshop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChilliCream/hotchocolate-examples&#34;&gt;HotChocolate examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChilliCream/hotchocolate/main/CONTRIBUTING.md&#34;&gt;Become a code contributor&lt;/a&gt; and help us make the ChilliCream GraphQL platform even better!&lt;/p&gt; &#xA;&lt;h2&gt;From our community&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChilliCream/hotchocolate/main/COMMUNITY.md&#34;&gt;Check out&lt;/a&gt; what members of our awesome community have made!&lt;/p&gt; &#xA;&lt;h2&gt;Financial Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/chillicream/contribute&#34;&gt;Become a financial contributor&lt;/a&gt; and help us sustain our community.&lt;/p&gt; &#xA;&lt;h3&gt;Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/chillicream#contribute&#34;&gt;Become a sponsor&lt;/a&gt; and get your logo on our README on Github with a link to your site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/chillicream/sponsor/0/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/0/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/1/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/1/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/2/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/2/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/3/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/3/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/4/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/4/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/5/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/5/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/6/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/6/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/7/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/7/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/8/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/8/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/9/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/9/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/10/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/10/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/11/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/11/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/12/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/12/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/13/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/13/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/14/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/14/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/15/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/15/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/16/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/16/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/17/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/17/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/18/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/18/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/sponsor/19/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/sponsor/19/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/chillicream#contribute&#34;&gt;Become a backer&lt;/a&gt; and get your image on our README on Github with a link to your site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/chillicream/backer/0/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/0/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/1/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/1/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/2/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/2/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/3/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/3/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/4/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/4/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/5/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/5/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/6/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/6/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/7/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/7/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/8/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/8/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/9/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/9/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/10/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/10/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/11/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/11/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/12/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/12/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/13/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/13/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/14/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/14/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/15/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/15/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/16/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/16/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/17/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/17/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/18/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/18/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/chillicream/backer/19/website?requireActive=false&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://opencollective.com/chillicream/backer/19/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ShareX/ShareX</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/ShareX/ShareX</id>
    <link href="https://github.com/ShareX/ShareX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to many supported destinations you can choose from.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ShareX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/ShareX/sharex&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/build/ShareX/ShareX?label=Build&amp;amp;cacheSeconds=3600&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/sharex/sharex&#34;&gt;&lt;img src=&#34;https://img.shields.io/codefactor/grade/github/ShareX/ShareX?label=CodeFactor&amp;amp;cacheSeconds=3600&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ShareX/ShareX/develop/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ShareX/ShareX?label=License&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ShareX/ShareX/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ShareX/ShareX?label=Release&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://getsharex.com/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ShareX/ShareX/total?label=Downloads&amp;amp;cacheSeconds=3600&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ShareX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/194170124859736065?label=Discord&amp;amp;cacheSeconds=3600&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ShareX&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ShareX?cacheSeconds=3600&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getsharex.com&#34;&gt;&lt;img src=&#34;https://getsharex.com/img/ShareX_Screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For further information check &lt;a href=&#34;https://getsharex.com&#34;&gt;getsharex.com&lt;/a&gt;&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>CommunityToolkit/Maui</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/CommunityToolkit/Maui</id>
    <link href="https://github.com/CommunityToolkit/Maui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The .NET MAUI Community Toolkit is a community-created library that contains .NET MAUI Extensions, Advanced UI/UX Controls, and Behaviors to help make your life as a .NET MAUI developer easier&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13558917/137551073-ac8958bf-83e3-4ae3-8623-4db6dce49d02.png&#34; alt=&#34;..NET Bot&#34; width=&#34;125&#34;&gt; &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet-foundation/swag/master/logo/dotnetfoundation_v4.svg?sanitize=true&#34; alt=&#34;.NET Foundation&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dotnet/CommunityToolkit/_build/latest?definitionId=169&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dotnet/CommunityToolkit/_apis/build/status/CommunityToolkit.Maui?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/CommunityToolkit.Maui/&#34;&gt;&lt;img src=&#34;https://buildstats.info/nuget/CommunityToolkit.Maui?includePreReleases=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;.NET MAUI Community Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;The .NET MAUI Community Toolkit is a collection of common elements for development with .NET MAUI that developers tend to replicate across multiple apps. It simplifies and demonstrates common developer tasks when building apps with .NET MAUI.&lt;/p&gt; &#xA;&lt;p&gt;All features are contributed by you, our amazing .NET community, and maintained by a core set of maintainers.&lt;/p&gt; &#xA;&lt;p&gt;And – the best part – the features you add to the .NET MAUI Toolkit may one day be included into the official .NET MAUI library! We leverage the Community Toolkits to debut new features and work closely with the .NET MAUI engineering team to nominate features for promotion.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;In order to use the .NET MAUI Community Toolkit you need to call the extension method in your &lt;code&gt;MauiProgram.cs&lt;/code&gt; file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using CommunityToolkit.Maui;&#xA;&#xA;public static class MauiProgram&#xA;{&#xA;&#x9;public static MauiApp CreateMauiApp()&#xA;&#x9;{&#xA;&#x9;&#x9;var builder = MauiApp.CreateBuilder();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;// Initialise the toolkit&#xA;&#x9;&#x9;builder.UseMauiApp&amp;lt;App&amp;gt;().UseMauiCommunityToolkit();&#xA;&#xA;&#x9;&#x9;// the rest of your logic...&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;XAML usage&lt;/h3&gt; &#xA;&lt;p&gt;In order to make use of the toolkit within XAML you can use this namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;xmlns:toolkit=&#34;http://schemas.microsoft.com/dotnet/2022/maui/toolkit&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Submitting A New Feature&lt;/h2&gt; &#xA;&lt;p&gt;New features will follow the below workflow, described in more detail in the steps below&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CommunityToolkit/Maui/main/build/workflow.sketch&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13558917/160910778-1e61f478-f1f6-48b4-8d37-8016eae1bd12.png&#34; alt=&#34;New Feature Workflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1. Discussion Started&lt;/h3&gt; &#xA;&lt;p&gt;Debate pertaining to new Maui Toolkit features takes place in the form of &lt;a href=&#34;https://github.com/communitytoolkit/maui/discussions&#34;&gt;Discussions&lt;/a&gt; in this repo.&lt;/p&gt; &#xA;&lt;p&gt;If you want to suggest a feature, discuss current design notes or proposals, etc., please &lt;a href=&#34;https://github.com/communitytoolkit/maui/discussions/new&#34;&gt;open a new Discussion topic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Discussions that are short and stay on topic are much more likely to be read. If you leave comment number fifty, chances are that only a few people will read it. To make discussions easier to navigate and benefit from, please observe a few rules of thumb:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discussion should be relevant to the .NET MAUI Toolkit. If they are not, they will be summarily closed.&lt;/li&gt; &#xA; &lt;li&gt;Choose a descriptive topic that clearly communicates the scope of discussion.&lt;/li&gt; &#xA; &lt;li&gt;Stick to the topic of the discussion. If a comment is tangential, or goes into detail on a subtopic, start a new discussion and link back.&lt;/li&gt; &#xA; &lt;li&gt;Is your comment useful for others to read, or can it be adequately expressed with an emoji reaction to an existing comment?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Proposal Submitted&lt;/h3&gt; &#xA;&lt;p&gt;Once you have a fully fleshed out proposal describing a new feature in syntactic and semantic detail, please &lt;a href=&#34;https://github.com/communitytoolkit/maui/issues/new/choose&#34;&gt;open an issue for it&lt;/a&gt;, and it will be labeled as a &lt;a href=&#34;https://github.com/communitytoolkit/maui/issues?q=is%3Aopen+is%3Aissue+label%3Aproposal&#34;&gt;Proposal&lt;/a&gt;. The comment thread on the issue can be used to hash out or briefly discuss details of the proposal, as well as pros and cons of adopting it into the .NET MAUI Toolkit. If an issue does not meet the bar of being a full proposal, we may move it to a discussion, so that it can be further matured. Specific open issues or more expansive discussion with a proposal will often warrant opening a side discussion rather than cluttering the comment section on the issue.&lt;/p&gt; &#xA;&lt;h3&gt;3. Proposal Championed&lt;/h3&gt; &#xA;&lt;p&gt;When a member of the .NET MAUI Toolkit core team finds that a proposal merits promotion into the Toolkit, they can &lt;a href=&#34;https://github.com/communitytoolkit/maui/issues?q=is%3Aopen+is%3Aissue+label%3A%22proposal+champion%22&#34;&gt;Champion&lt;/a&gt; it, which means that they will bring it to the monthly &lt;a href=&#34;https://www.youtube.com/watch?v=0ZBh2Hl54ZY&#34;&gt;.NET MAUI Toolkit Community Standup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;4. Proposal Approved&lt;/h3&gt; &#xA;&lt;p&gt;The .NET MAUI Toolkit core team will collectively vote to work on adopting and/or modifying the proposal, requiring a majority approval (i.e. greater than 50%) to be added to the Toolkit.&lt;/p&gt; &#xA;&lt;p&gt;Once a Proposal has been championed and has received a majority approval from the .NET MAUI Toolkit core team, a Pull Request can be opened.&lt;/p&gt; &#xA;&lt;h3&gt;5. Pull Request Approved&lt;/h3&gt; &#xA;&lt;p&gt;After a Pull Request has been submitted, it will be reviewed and approved by the Proposal Champion.&lt;/p&gt; &#xA;&lt;p&gt;Every new feature also requires an associated sample to be added to the .NET MAUI Toolkit Sample app.&lt;/p&gt; &#xA;&lt;h3&gt;6. Documentation Complete&lt;/h3&gt; &#xA;&lt;p&gt;Before a Pull Request can be merged into the .NET MAUI Toolkit, the Pull Request Author must also submit the documentation to &lt;a href=&#34;https://github.com/MicrosoftDocs/CommunityToolkit&#34;&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;7. Completed&lt;/h3&gt; &#xA;&lt;p&gt;Once a Pull Request has been reviewed + approved AND the documentation has been written, submitted and approved, the new feature will be merged adding it to the .NET MAUI Toolkit&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;As a part of the .NET Foundation, we have adopted the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;. Please familiarize yourself with that before participating with this repository. Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by the &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure-Samples/cognitive-services-speech-sdk</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/Azure-Samples/cognitive-services-speech-sdk</id>
    <link href="https://github.com/Azure-Samples/cognitive-services-speech-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code for the Microsoft Cognitive Services Speech SDK&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cpp&lt;/li&gt; &#xA; &lt;li&gt;csharp&lt;/li&gt; &#xA; &lt;li&gt;java&lt;/li&gt; &#xA; &lt;li&gt;javascript&lt;/li&gt; &#xA; &lt;li&gt;nodejs&lt;/li&gt; &#xA; &lt;li&gt;objc&lt;/li&gt; &#xA; &lt;li&gt;python&lt;/li&gt; &#xA; &lt;li&gt;swift name: &#34;Microsoft Cognitive Services Speech SDK Samples&#34; description: &#34;Learn how to use the Microsoft Cognitive Services Speech SDK to add speech-enabled features to your apps.&#34; products:&lt;/li&gt; &#xA; &lt;li&gt;azure&lt;/li&gt; &#xA; &lt;li&gt;azure-cognitive-services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Sample Repository for the Microsoft Cognitive Services Speech SDK&lt;/h1&gt; &#xA;&lt;p&gt;This project hosts the &lt;strong&gt;samples&lt;/strong&gt; for the Microsoft Cognitive Services Speech SDK. To find out more about the Microsoft Cognitive Services Speech SDK itself, please visit the &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;SDK documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://aka.ms/csspeech/whatsnew&#34;&gt;here&lt;/a&gt; for release notes and older releases.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;This repository hosts samples that help you to get started with several features of the SDK. In addition more complex scenarios are included to give you a head-start on using speech technology in your application.&lt;/p&gt; &#xA;&lt;p&gt;We tested the samples with the latest released version of the SDK on Windows 10, Linux (on &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/speech-sdk?tabs=linux&#34;&gt;supported Linux distributions and target architectures&lt;/a&gt;), Android devices (API 23: Android 6.0 Marshmallow or higher), Mac x64 (OS version 10.14 or higher) and Mac M1 arm64 (OS version 11.0 or higher) and iOS 11.4 devices.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;SDK documentation&lt;/a&gt; has extensive sections about getting started, setting up the SDK, as well as the process to acquire the required subscription keys. You will need subscription keys to run the samples on your machines, you therefore should follow the instructions on these pages before continuing.&lt;/p&gt; &#xA;&lt;h2&gt;Get the samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The easiest way to use these samples without using Git is to download the current version as a &lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/archive/master.zip&#34;&gt;ZIP file&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Windows, before you unzip the archive, right-click it, select &lt;strong&gt;Properties&lt;/strong&gt;, and then select &lt;strong&gt;Unblock&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Be sure to unzip the entire archive, and not just individual samples.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this sample repository using a Git client.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build and run the samples&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: the samples make use of the Microsoft Cognitive Services Speech SDK. By downloading the Microsoft Cognitive Services Speech SDK, you acknowledge its license, see &lt;a href=&#34;https://aka.ms/csspeech/license201809&#34;&gt;Speech SDK license agreement&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please see the description of each individual sample for instructions on how to build and run it.&lt;/p&gt; &#xA;&lt;h2&gt;Related GitHub repositories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; - Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&#34;https://dev.botframework.com/&#34;&gt;Bot-Framework bot&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&#34;&gt;Custom Command&lt;/a&gt; web application.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/cognitive-services-speech-sdk-js&#34;&gt;microsoft/cognitive-services-speech-sdk-js&lt;/a&gt; - Java Script implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Microsoft/cognitive-services-speech-sdk-go&#34;&gt;Microsoft/cognitive-services-speech-sdk-go&lt;/a&gt; - Go implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Speech-Service-Actions-Template&#34;&gt;Azure-Samples/Speech-Service-Actions-Template&lt;/a&gt; - Template to create a repository to develop Azure Custom Speech models with built-in support for DevOps and common software engineering practices&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Speech recognition quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech recognition using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/from-microphone&#34;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/from-microphone&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/from-microphone&#34;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/from-microphone&#34;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/from-microphone&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/from-microphone&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/from-microphone&#34;&gt;Quickstart C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/from-microphone&#34;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/from-microphone&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/browser&#34;&gt;Quickstart JavaScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/node&#34;&gt;Quickstart Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/from-microphone&#34;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/from-microphone&#34;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a file with recorded speech.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/from-microphone&#34;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/from-microphone&#34;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/from-microphone&#34;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Speech translation quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech translation using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/translate-speech-to-text&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/translate-speech-to-text&#34;&gt;Quickstart C# .NET Framework for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/translate-speech-to-text&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/translate-speech-to-text&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/translate-speech-to-text&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Speech synthesis quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech synthesis to a speaker. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/text-to-speech&#34;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/text-to-speech&#34;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/text-to-speech&#34;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/text-to-speech&#34;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/text-to-speech&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/text-to-speech&#34;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/text-to-speech&#34;&gt;Quickstart for C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/text-to-speech&#34;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/text-to-speech&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/text-to-speech&#34;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/text-to-speech&#34;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/text-to-speech&#34;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/text-to-speech&#34;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/text-to-speech&#34;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Voice Assistant quickstarts&lt;/h3&gt; &#xA;&lt;p&gt;The following quickstarts demonstrate how to create a custom Voice Assistant. The applications will connect to a previously authored bot configured to use the Direct Line Speech channel, send a voice request, and return a voice response activity (if configured). If you want to build these quickstarts from scratch, please follow the quickstart or basics articles on our &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/index-voice-assistants&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; for full Voice Assistant samples and tools.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/virtual-assistant&#34;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/virtual-assistant&#34;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;p&gt;The following samples demonstrate additional capabilities of the Speech SDK, such as additional modes of speech recognition as well as intent recognition and translation. Voice Assistant samples can be found in a &lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;separate GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/windows/console&#34;&gt;C++ Console app for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, conversation transcription and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/linux/compressed-audio-input&#34;&gt;C++ Speech Recognition from MP3/Opus file (Linux only)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition from an MP3/Opus file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/console&#34;&gt;C# Console app for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnetcore/console&#34;&gt;C# Console app for .NET Core (Windows or Linux)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/jre/console&#34;&gt;Java Console app for JRE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/python/console&#34;&gt;Python Console app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/speechtotext-wpf&#34;&gt;Speech-to-text WPF sample for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/translation-wpf&#34;&gt;Translation WPF sample for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/speechtotext-uwp&#34;&gt;Speech-to-text UWP sample&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/texttospeech-uwp&#34;&gt;Text-to-speech UWP sample&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech synthesis&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/android/sdkdemo/&#34;&gt;Speech recognition sample for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech and intent recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/&#34;&gt;Speech recognition, synthesis, and translation sample for the browser, using JavaScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/node&#34;&gt;Speech recognition and translation sample using JavaScript and Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Speech recognition sample for iOS using a connection object&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Extended speech recognition sample for iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition using streams etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&#34;&gt;Speech synthesis sample for iOS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech synthesis using streams etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/virtualassistant-uwp/&#34;&gt;C# UWP DialogServiceConnector sample for Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/unity/speechrecognizer/&#34;&gt;C# Unity sample for Windows or Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation for Unity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/unity/VirtualAssistantPreview/&#34;&gt;C# Unity SpeechBotConnector sample for Windows or Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Android&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates speech recognition through the SpeechBotConnector and receiving activity responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&#34;&gt;C#, C++ and Java DialogServiceConnector samples&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Linux, Android&lt;/td&gt; &#xA;   &lt;td&gt;Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&#34;https://dev.botframework.com/&#34;&gt;Bot-Framework Bot&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&#34;&gt;Custom Command&lt;/a&gt; web application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Samples for using the Speech Service REST API (no Speech SDK installation required):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch/&#34;&gt;Batch transcription&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates usage of batch transcription from different programming languages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enumerate audio devices&lt;/td&gt; &#xA;   &lt;td&gt;C++, Windows&lt;/td&gt; &#xA;   &lt;td&gt;Shows how to get the Device ID of all connected microphones and loudspeakers. Device ID is required if you want to listen via non-default microphone (Speech Recognition), or play to a non-default loudspeaker (Text-To-Speech) using Speech SDK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enumerate audio devices&lt;/td&gt; &#xA;   &lt;td&gt;C# .NET Framework, Windows&lt;/td&gt; &#xA;   &lt;td&gt;-&#34;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Sample data for Custom Speech&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/sampledata/customspeech&#34;&gt;Sample data for Custom Speech&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/csspeech&#34;&gt;Microsoft Cognitive Services Speech Service and SDK Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>GitCredentialManager/git-credential-manager</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/GitCredentialManager/git-credential-manager</id>
    <link href="https://github.com/GitCredentialManager/git-credential-manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Secure, cross-platform Git credential storage with authentication to GitHub, Azure Repos, and other popular Git hosting services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Git Credential Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager/actions/workflows/continuous-integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/GitCredentialManager/git-credential-manager/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager&#34;&gt;Git Credential Manager&lt;/a&gt; (GCM) is a secure Git credential helper built on &lt;a href=&#34;https://dotnet.microsoft.com&#34;&gt;.NET&lt;/a&gt; that runs on Windows, macOS, and Linux.&lt;/p&gt; &#xA;&lt;p&gt;Compared to Git&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/(https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage)&#34;&gt;built-in credential helpers&lt;/a&gt; (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring/libsecret) which provides single-factor authentication support working on any HTTP-enabled Git repository, GCM provides multi-factor authentication support for &lt;a href=&#34;https://dev.azure.com/&#34;&gt;Azure DevOps&lt;/a&gt;, Azure DevOps Server (formerly Team Foundation Server), GitHub, Bitbucket, and GitLab.&lt;/p&gt; &#xA;&lt;p&gt;Git Credential Manager (GCM) replaces the .NET Framework-based &lt;a href=&#34;https://github.com/microsoft/Git-Credential-Manager-for-Windows&#34;&gt;Git Credential Manager for Windows&lt;/a&gt; (GCM), and the Java-based &lt;a href=&#34;https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux&#34;&gt;Git Credential Manager for Mac and Linux&lt;/a&gt; (Java GCM), providing a consistent authentication experience across all platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Current status&lt;/h2&gt; &#xA;&lt;p&gt;Git Credential Manager is currently available for Windows, macOS, and Linux*. GCM only works with HTTP(S) remotes; you can still use Git with SSH:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops&#34;&gt;Azure DevOps SSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/en/articles/connecting-to-github-with-ssh&#34;&gt;GitHub SSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html&#34;&gt;Bitbucket SSH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Installer/uninstaller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Secure platform credential storage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/credstores.md&#34;&gt;(see more)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/credstores.md&#34;&gt;(see more)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/credstores.md&#34;&gt;(see more)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi-factor authentication support for Azure DevOps&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Two-factor authentication support for GitHub&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Two-factor authentication support for Bitbucket&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Two-factor authentication support for GitLab&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows Integrated Authentication (NTLM/Kerberos) support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Basic HTTP authentication support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Proxy support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;amd64&lt;/code&gt; support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;x86&lt;/code&gt; support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;arm64&lt;/code&gt; support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;best effort&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;via Rosetta 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;best effort, no packages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;armhf&lt;/code&gt; support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;best effort, no packages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;(*) GCM guarantees support for the below Linux distributions. GCM maintainers also monitor and evaluate issues opened against other distributions to determine community interest/engagement and whether an emerging platform should become fully-supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian/Ubuntu/Linux Mint&lt;/li&gt; &#xA; &lt;li&gt;Fedora/CentOS/RHEL&lt;/li&gt; &#xA; &lt;li&gt;Alpine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download and Install&lt;/h2&gt; &#xA;&lt;h3&gt;macOS Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;The preferred installation mechanism is using Homebrew; we offer a Cask in our custom Tap.&lt;/p&gt; &#xA;&lt;p&gt;To install, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap microsoft/git&#xA;brew install --cask git-credential-manager-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing you can stay up-to-date with new releases by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew upgrade git-credential-manager-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Git Credential Manager for Mac and Linux (Java-based GCM)&lt;/h4&gt; &#xA;&lt;p&gt;If you have an existing installation of the &#39;Java GCM&#39; on macOS and you have installed this using Homebrew, this installation will be unlinked (&lt;code&gt;brew unlink git-credential-manager&lt;/code&gt;) when GCM is installed.&lt;/p&gt; &#xA;&lt;h4&gt;Uninstall&lt;/h4&gt; &#xA;&lt;p&gt;To uninstall, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew uninstall --cask git-credential-manager-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;macOS Package&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a &lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager/releases/latest&#34;&gt;.pkg installer&lt;/a&gt; with each release. To install, double-click the installation package and follow the instructions presented.&lt;/p&gt; &#xA;&lt;h4&gt;Uninstall&lt;/h4&gt; &#xA;&lt;p&gt;To uninstall, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /usr/local/share/gcm-core/uninstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- this explicit anchor should stay stable so that external docs can link here --&gt; &#xA;&lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;&lt;p&gt;&lt;a name=&#34;linux-install-instructions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Ubuntu/Debian distributions&lt;/h4&gt; &#xA;&lt;p&gt;Download the latest &lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager/releases/latest&#34;&gt;.deb package&lt;/a&gt;, and run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo dpkg -i &amp;lt;path-to-package&amp;gt;&#xA;git-credential-manager-core configure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Although packages were previously offered on certain &lt;a href=&#34;https://packages.microsoft.com/repos/&#34;&gt;Microsoft Ubuntu package feeds&lt;/a&gt;, GCM no longer publishes to these repositories. Please install the Debian package using the above instructions instead.&lt;/p&gt; &#xA;&lt;p&gt;To uninstall:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git-credential-manager-core unconfigure&#xA;sudo dpkg -r gcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Other distributions&lt;/h4&gt; &#xA;&lt;h5&gt;Option 1: Tarball&lt;/h5&gt; &#xA;&lt;p&gt;Download the latest &lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager/releases/latest&#34;&gt;tarball&lt;/a&gt;, and run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tar -xvf &amp;lt;path-to-tarball&amp;gt; -C /usr/local/bin&#xA;git-credential-manager-core configure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git-credential-manager-core unconfigure&#xA;rm $(command -v git-credential-manager-core)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Option 2: Install from source helper script&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;curl&lt;/code&gt; is installed:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If &lt;code&gt;curl&lt;/code&gt; is not installed, please use your distribution&#39;s package manager to install it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and run the script:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -LO https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/src/linux/Packaging.Linux/install-from-source.sh &amp;amp;&amp;amp;&#xA;sh ./install-from-source.sh &amp;amp;&amp;amp;&#xA;git-credential-manager-core configure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You will be prompted to enter your credentials so that the script can download GCM&#39;s dependencies using your distribution&#39;s package manager.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To uninstall:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/linux-fromsrc-uninstall.md&#34;&gt;Follow these instructions&lt;/a&gt; for your distribution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; all Linux distributions &lt;a href=&#34;https://aka.ms/gcm/credstores&#34;&gt;require additional configuration&lt;/a&gt; to use GCM.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;GCM is included with &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;, and the latest version is included in each new Git for Windows release. This is the preferred way to install GCM on Windows. During installation you will be asked to select a credential helper, with GCM being set as the default.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5658207/140082529-1ac133c1-0922-4a24-af03-067e27b3988b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Standalone installation&lt;/h4&gt; &#xA;&lt;p&gt;You can also download the &lt;a href=&#34;https://github.com/GitCredentialManager/git-credential-manager/releases/latest&#34;&gt;latest installer&lt;/a&gt; for Windows to install GCM standalone.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;span&gt;⚠&lt;/span&gt; Important &lt;span&gt;⚠&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Installing GCM as a standalone package on Windows will forcibly override the version of GCM that is bundled with Git for Windows, &lt;strong&gt;even if the version bundled with Git for Windows is a later version&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are two flavors of standalone installation on Windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;User (preferred) (&lt;code&gt;gcmuser-win*&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;Does not require administrator rights. Will install only for the current user and updates only the current user&#39;s Git configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;System (&lt;code&gt;gcm-win*&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;Requires administrator rights. Will install for all users on the system and update the system-wide Git configuration.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install, double-click the desired installation package and follow the instructions presented.&lt;/p&gt; &#xA;&lt;h4&gt;Uninstall (Windows 10)&lt;/h4&gt; &#xA;&lt;p&gt;To uninstall, open the Settings app and navigate to the Apps section. Select &#34;Git Credential Manager&#34; and click &#34;Uninstall&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;Uninstall (Windows 7-8.1)&lt;/h4&gt; &#xA;&lt;p&gt;To uninstall, open Control Panel and navigate to the Programs and Features screen. Select &#34;Git Credential Manager&#34; and click &#34;Remove&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;Windows Subsystem for Linux (WSL)&lt;/h4&gt; &#xA;&lt;p&gt;Git Credential Manager can be used with the &lt;a href=&#34;https://aka.ms/wsl&#34;&gt;Windows Subsystem for Linux (WSL)&lt;/a&gt; to enable secure authentication of your remote Git repositories from inside of WSL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/wsl.md&#34;&gt;Please see the GCM on WSL docs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Git versions&lt;/h2&gt; &#xA;&lt;p&gt;Git Credential Manager tries to be compatible with the broadest set of Git versions (within reason). However there are some know problematic releases of Git that are not compatible.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Git 1.x&lt;/p&gt; &lt;p&gt;The initial major version of Git is not supported or tested with GCM.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Git 2.26.2&lt;/p&gt; &lt;p&gt;This version of Git introduced a breaking change with parsing credential configuration that GCM relies on. This issue was fixed in commit &lt;a href=&#34;https://github.com/git/git/commit/12294990c90e043862be9eb7eb22c3784b526340&#34;&gt;&lt;code&gt;12294990&lt;/code&gt;&lt;/a&gt; of the Git project, and released in Git 2.27.0.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Once it&#39;s installed and configured, Git Credential Manager is called implicitly by Git. You don&#39;t have to do anything special, and GCM isn&#39;t intended to be called directly by the user. For example, when pushing (&lt;code&gt;git push&lt;/code&gt;) to &lt;a href=&#34;https://dev.azure.com&#34;&gt;Azure DevOps&lt;/a&gt;, &lt;a href=&#34;https://bitbucket.org&#34;&gt;Bitbucket&lt;/a&gt;, or &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;, a window will automatically open and walk you through the sign-in process. (This process will look slightly different for each Git host, and even in some cases, whether you&#39;ve connected to an on-premises or cloud-hosted Git host.) Later Git commands in the same repository will re-use existing credentials or tokens that GCM has stored for as long as they&#39;re valid.&lt;/p&gt; &#xA;&lt;p&gt;Read full command line usage &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/usage.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring a proxy&lt;/h3&gt; &#xA;&lt;p&gt;See detailed information &lt;a href=&#34;https://aka.ms/gcm/httpproxy&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/faq.md&#34;&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/development.md&#34;&gt;Development and debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/usage.md&#34;&gt;Command-line usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/configuration.md&#34;&gt;Configuration options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/environment.md&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/enterprise-config.md&#34;&gt;Enterprise configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/netconfig.md&#34;&gt;Network and HTTP configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/credstores.md&#34;&gt;Credential stores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/architecture.md&#34;&gt;Architectural overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/hostprovider.md&#34;&gt;Host provider specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/azrepos-users-and-tokens.md&#34;&gt;Azure Repos OAuth tokens&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/gitlab.md&#34;&gt;GitLab support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Experimental Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/docs/windows-broker.md&#34;&gt;Windows broker (experimental)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. See the &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;p&gt;This project follows &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/CODE_OF_CONDUCT.md&#34;&gt;GitHub&#39;s Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re &lt;a href=&#34;https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/LICENSE&#34;&gt;MIT&lt;/a&gt; licensed. When using GitHub logos, please be sure to follow the &lt;a href=&#34;https://github.com/logos&#34;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>IdentityServer/IdentityServer4</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/IdentityServer/IdentityServer4</id>
    <link href="https://github.com/IdentityServer/IdentityServer4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenID Connect and OAuth 2.0 Framework for ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Important update&lt;/h1&gt; &#xA;&lt;p&gt;This organization is not maintained anymore besides critical security bugfixes (if feasible). This organization will be archived when .NET Core 3.1 end of support is reached (3rd Dec 2022). All new development is happening in the new &lt;a href=&#34;https://github.com/duendesoftware&#34;&gt;Duende Software&lt;/a&gt; organization.&lt;/p&gt; &#xA;&lt;p&gt;The new &lt;a href=&#34;https://duendesoftware.com/products/identityserver&#34;&gt;Duende IdentityServer&lt;/a&gt; comes with a commercial license but is &lt;a href=&#34;https://blog.duendesoftware.com/posts/20220111_fair_trade/&#34;&gt;free&lt;/a&gt; for dev/testing/personal projects and companies or individuals making less than 1M USD gross annnual revenue. Please &lt;a href=&#34;https://duendesoftware.com/contact&#34;&gt;get in touch with us&lt;/a&gt; if you have any question.&lt;/p&gt; &#xA;&lt;h2&gt;About IdentityServer4&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnetfoundation.org/projects?searchquery=IdentityServer&amp;amp;type=project&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;100px&#34; src=&#34;https://dotnetfoundation.org/img/logo_big.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IdentityServer is a free, open source &lt;a href=&#34;http://openid.net/connect/&#34;&gt;OpenID Connect&lt;/a&gt; and &lt;a href=&#34;https://tools.ietf.org/html/rfc6749&#34;&gt;OAuth 2.0&lt;/a&gt; framework for ASP.NET Core. Founded and maintained by &lt;a href=&#34;https://twitter.com/leastprivilege&#34;&gt;Dominick Baier&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/brocklallen&#34;&gt;Brock Allen&lt;/a&gt;, IdentityServer4 incorporates all the protocol implementations and extensibility points needed to integrate token-based authentication, single-sign-on and API access control in your applications. IdentityServer4 is officially &lt;a href=&#34;https://openid.net/certification/&#34;&gt;certified&lt;/a&gt; by the &lt;a href=&#34;https://openid.net&#34;&gt;OpenID Foundation&lt;/a&gt; and thus spec-compliant and interoperable. It is part of the &lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt;, and operates under their &lt;a href=&#34;https://www.dotnetfoundation.org/code-of-conduct&#34;&gt;code of conduct&lt;/a&gt;. It is licensed under &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2&lt;/a&gt; (an OSI approved license).&lt;/p&gt; &#xA;&lt;p&gt;For project documentation, please visit &lt;a href=&#34;https://identityserver4.readthedocs.io&#34;&gt;readthedocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Branch structure&lt;/h2&gt; &#xA;&lt;p&gt;Active development happens on the main branch. This always contains the latest version. Each (pre-) release is tagged with the corresponding version. The &lt;a href=&#34;https://github.com/IdentityServer/IdentityServer4/tree/aspnetcore1&#34;&gt;aspnetcore1&lt;/a&gt; and &lt;a href=&#34;https://github.com/IdentityServer/IdentityServer4/tree/aspnetcore2&#34;&gt;aspnetcore2&lt;/a&gt; branches contain the latest versions of the older ASP.NET Core based versions.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/net/download/core#/current&#34;&gt;Install&lt;/a&gt; the latest .NET Core 3.1 SDK&lt;/li&gt; &#xA; &lt;li&gt;Install Git&lt;/li&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;build.ps1&lt;/code&gt; or &lt;code&gt;build.sh&lt;/code&gt; in the root of the cloned repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For project documentation, please visit &lt;a href=&#34;https://identityserver4.readthedocs.io&#34;&gt;readthedocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://docs.identityserver.io/en/aspnetcore1/&#34;&gt;here&lt;/a&gt; for the 1.x docs, and &lt;a href=&#34;http://docs.identityserver.io/en/aspnetcore2/&#34;&gt;here&lt;/a&gt; for the 2.x docs.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports and feature requests&lt;/h2&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/IdentityServer/IdentityServer4/issues&#34;&gt;issue tracker&lt;/a&gt; for that. We only support the latest version for free. For older versions, you can get a commercial support agreement with us.&lt;/p&gt; &#xA;&lt;h2&gt;Commercial and Community Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need help with implementing IdentityServer4 or your security architecture in general, there are both free and commercial support options. See &lt;a href=&#34;https://identityserver4.readthedocs.io/en/latest/intro/support.html&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;If you are a fan of the project or a company that relies on IdentityServer, you might want to consider sponsoring. This will help us devote more time to answering questions and doing feature development. If you are interested please head to our &lt;a href=&#34;https://www.patreon.com/identityserver&#34;&gt;Patreon&lt;/a&gt; page which has further details.&lt;/p&gt; &#xA;&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://udelt.no&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1454075/62819413-39550c00-bb55-11e9-8f2f-a268c3552c71.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet-at-microsoft&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1454075/66454740-fb973580-ea68-11e9-9993-6c1014881528.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Corporate Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ritterim.com&#34;&gt;Ritter Insurance Marketing&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.extranetusermanager.com/&#34;&gt;ExtraNetUserManager&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.knab.nl/&#34;&gt;Knab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can see a list of our current sponsors &lt;a href=&#34;https://github.com/IdentityServer/IdentityServer4/raw/main/SPONSORS.md&#34;&gt;here&lt;/a&gt; - and for companies we have some nice advertisement options as well.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;IdentityServer4 is built using the following great open source projects and free services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/aspnetcore&#34;&gt;ASP.NET Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adamralph/bullseye&#34;&gt;Bullseye&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adamralph/simple-exec&#34;&gt;SimpleExec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adamralph/minver&#34;&gt;MinVer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.newtonsoft.com/json&#34;&gt;Json.Net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xunit.github.io/&#34;&gt;XUnit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.fluentassertions.com/&#34;&gt;Fluent Assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GitTools/GitReleaseManager&#34;&gt;GitReleaseManager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;..and last but not least a big thanks to all our &lt;a href=&#34;https://github.com/IdentityServer/IdentityServer4/graphs/contributors&#34;&gt;contributors&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaterialDesignInXAML/MaterialDesignInXamlToolkit</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/MaterialDesignInXAML/MaterialDesignInXamlToolkit</id>
    <link href="https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google&#39;s Material Design in XAML &amp; WPF, for C# &amp; VB.Net.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML64.png&#34; alt=&#34;Alt text&#34; title=&#34;Material Design In XAML Toolkit&#34;&gt; Material Design In XAML Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;Comprehensive and easy to use Material Design theme and control library for the Windows desktop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-home.png&#34; alt=&#34;Alt text&#34; title=&#34;Material Design Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/#Screenshots&#34;&gt;More screenshots below&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;Summary&#34;&gt; Summary&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Material Design styles for all major WPF Framework controls&lt;/li&gt; &#xA; &lt;li&gt;Additional controls to support the theme, including Multi Action Button, Cards, Dialogs, Clock&lt;/li&gt; &#xA; &lt;li&gt;Easy configuration of palette (at design &lt;em&gt;and&lt;/em&gt; runtime), according to &lt;a href=&#34;https://material.io/design/&#34;&gt;Google&#39;s guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full &lt;a href=&#34;https://materialdesignicons.com/&#34;&gt;Material Design Icons&lt;/a&gt; icon pack&lt;/li&gt; &#xA; &lt;li&gt;Easy transition effects&lt;/li&gt; &#xA; &lt;li&gt;Compatible with &lt;a href=&#34;https://github.com/ButchersBoy/Dragablz&#34;&gt;Dragablz&lt;/a&gt;, &lt;a href=&#34;https://github.com/MahApps/MahApps.Metro&#34;&gt;MahApps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo applications included in the source project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/ButchersBoy/MaterialDesignInXamlToolkit&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitter-Join%20Chat,%20Get%20Help,%20Say%20Hello!-green.svg?style=flat-square&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/actions/workflows/nightly_release.yml/badge.svg?branch=master&#34; alt=&#34;Nightly Build&#34;&gt; &lt;a href=&#34;https://www.nuget.org/packages/MaterialDesignThemes/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/MaterialDesignThemes.svg?label=NuGet:%20Themes&amp;amp;style=flat-square&#34; alt=&#34;NuGet-Themes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/MaterialDesignThemes/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/MaterialDesignThemes.svg?label=NuGet:%20Themes%20(CI)&amp;amp;style=flat-square&#34; alt=&#34;NuGet-Themes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/MaterialDesignColors/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/MaterialDesignColors.svg?label=NuGet:%20Colours&amp;amp;style=flat-square&#34; alt=&#34;NuGet-Themes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/MaterialDesignInXAML/MaterialDesignInXamlToolkit.svg?style=flat-square&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/James_Willock&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-%40james__willock-55acee.svg?style=flat-square&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;How Can I Use The Themes?&#34;&gt; Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Checkout the &lt;a href=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/wiki/Super-Quick-Start&#34;&gt;Super Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Or, the more comprehensive &lt;a href=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/wiki/Getting-Started&#34;&gt;Starting Guide&lt;/a&gt; guide.&lt;/li&gt; &#xA; &lt;li&gt;Or, watch the &lt;a href=&#34;https://www.youtube.com/watch?v=-n5yeEOsbCk&#34;&gt;Material Design In XAML Toolkit An Introduction&lt;/a&gt; video.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;In Action&#34;&gt; See It In Action&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download a pre-compiled demo from the &lt;a href=&#34;https://github.com/ButchersBoy/MaterialDesignInXamlToolkit/releases&#34;&gt;releases&lt;/a&gt; page.&lt;/li&gt; &#xA; &lt;li&gt;Download the source and run the demo (&lt;a href=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/wiki/Compiling-From-Source&#34;&gt;more information&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Checkout &lt;a href=&#34;https://github.com/Keboo/MaterialDesignInXaml.Examples&#34;&gt;Keboo/MaterialDesign.Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Checkout &lt;a href=&#34;http://materialdesigninxaml.net/doobry&#34;&gt;doobry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Checkout &lt;a href=&#34;http://materialdesigninxaml.net/f1ix&#34;&gt;F1ix&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Checkout &lt;a href=&#34;https://github.com/MaterialDesignInXAML/MotionList&#34;&gt;Motion List&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;How Can I Use The Themes?&#34;&gt; Source Code&lt;/h1&gt; &#xA;&lt;p&gt;To load the source project you will need Visual Studio 2022. Don&#39;t worry if you have an earlier version, you can still use the compiled assemblies from NuGet (&lt;code&gt;Install-Package MaterialDesignThemes&lt;/code&gt;). There are three demo projects in the solution, restore the necessary NuGet packages and correct the programming syntax that is not compatible with C# versions lower than C# 10.0 (&lt;code&gt;currently used in Visual Studio 2022&lt;/code&gt;). Then, you should be able to fire the projects up. The first one is a &#34;pure&#34; Material Design 2 project. The second one shows how to combine with Dragablz and MahApps. The last one is a Material Design 3 project (&lt;code&gt;In Development&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;Contributions&#34;&gt; Contribution Guidelines&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before contributing code read the &lt;a href=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GitHub issues are for bugs.&lt;/li&gt; &#xA;   &lt;li&gt;For queries, help, and general chat stop by the &lt;a href=&#34;https://gitter.im/ButchersBoy/MaterialDesignInXamlToolkit&#34;&gt;Gitter chat room&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Stack Overflow tag: &lt;a href=&#34;http://stackoverflow.com/questions/tagged/material-design-in-xaml&#34;&gt;material-design-in-xaml&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Want to say thanks? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hit the &lt;span&gt;⭐&lt;/span&gt; Star &lt;span&gt;⭐&lt;/span&gt; button&lt;/li&gt; &#xA;   &lt;li&gt;If you&#39;d like to make a very much appreciated financial donation please visit &lt;a href=&#34;https://opencollective.com/materialdesigninxaml&#34;&gt;open collective&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;Mentions&#34;&gt; Mentions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logo courtesy of GitHub user &lt;a href=&#34;https://github.com/snalty&#34;&gt;Snalty&lt;/a&gt;, and you can see more of him;&lt;/li&gt; &#xA; &lt;li&gt;on his &lt;a href=&#34;http://holothere.tumblr.com/&#34;&gt;blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and on &lt;a href=&#34;https://twitter.com/snalty&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Icon pack sourced from &lt;a href=&#34;https://materialdesignicons.com/&#34;&gt;Material Design Icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Utilises &lt;a href=&#34;https://github.com/ControlzEx/ControlzEx&#34;&gt;ControlzEx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ignace Maes, whose &lt;a href=&#34;https://github.com/IgnaceMaes/MaterialSkin&#34;&gt;Material Skin&lt;/a&gt; project inspired the original material design theme for &lt;a href=&#34;https://github.com/ButchersBoy/Dragablz&#34;&gt;Dragablz&lt;/a&gt;, which in turn led to me starting this project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spiegelp/MaterialDesignExtensions&#34;&gt;Material Design Extensions&lt;/a&gt; is a community repository based on this library that provides additional controls and features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ButchersBoy/MaterialDesignInXamlToolkit/graphs/contributors&#34;&gt;Contributors!&lt;/a&gt;&lt;/strong&gt; Thanks for the PRs which have helped add some extra polish.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;Screenshots&#34;&gt;&lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/MD4XAML28.png&#34; alt=&#34;Alt text&#34; title=&#34;Screenshots&#34;&gt; Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-buttons.png&#34; alt=&#34;Alt text&#34; title=&#34;Buttons&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-toggles.png&#34; alt=&#34;Alt text&#34; title=&#34;Toggles&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-fields.png&#34; alt=&#34;Alt text&#34; title=&#34;Fields&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-comboboxes.png&#34; alt=&#34;Alt text&#34; title=&#34;ComboBoxes&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-palette.png&#34; alt=&#34;Alt text&#34; title=&#34;Palette&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-colortools.png&#34; alt=&#34;Alt text&#34; title=&#34;Color Tools&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-pickers.png&#34; alt=&#34;Alt text&#34; title=&#34;Pickers&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-iconpack.png&#34; alt=&#34;Alt text&#34; title=&#34;Icons&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-cards.png&#34; alt=&#34;Alt text&#34; title=&#34;Cards&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-menutoolbar.png&#34; alt=&#34;Alt text&#34; title=&#34;Menus and Toolbars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-progress.png&#34; alt=&#34;Alt text&#34; title=&#34;Progress Bars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-dialogs.png&#34; alt=&#34;Alt text&#34; title=&#34;Dialogs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-lists.png&#34; alt=&#34;Alt text&#34; title=&#34;Lists&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-treeview.png&#34; alt=&#34;Alt text&#34; title=&#34;Tree View&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-sliders.png&#34; alt=&#34;Alt text&#34; title=&#34;Sliders&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-chips.png&#34; alt=&#34;Alt text&#34; title=&#34;Chips&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-typography.png&#34; alt=&#34;Alt text&#34; title=&#34;Typography&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-groupbox.png&#34; alt=&#34;Alt text&#34; title=&#34;Group Box&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-snackbars.png&#34; alt=&#34;Alt text&#34; title=&#34;Snackbars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/master/web/images/screen-shadows.png&#34; alt=&#34;Alt text&#34; title=&#34;Shadows&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/materialdesigninxaml#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/materialdesigninxaml#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/materialdesigninxaml#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/materialdesigninxaml/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/materialdesigninxaml/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/roslyn</title>
    <updated>2022-06-02T01:36:37Z</updated>
    <id>tag:github.com,2022-06-02:/dotnet/roslyn</id>
    <link href="https://github.com/dotnet/roslyn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Roslyn .NET compiler provides C# and Visual Basic languages with rich code analysis APIs.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;450&#34; src=&#34;https://user-images.githubusercontent.com/46729679/109719841-17b7dd00-7b5e-11eb-8f5e-87eb2d4d1be9.png&#34; alt=&#34;Roslyn logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The .NET Compiler Platform&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://gitter.im/dotnet/roslyn?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667&#34; alt=&#34;Join the chat at https://gitter.im/dotnet/roslyn&#34; data-canonical-src=&#34;https://badges.gitter.im/Join%20Chat.svg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://aka.ms/discord-csharp-roslyn&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/1ea6a95121cbf4179d411e853681838825392a7f0ae7e6bb1e03f4ea37c8fd5d/68747470733a2f2f646973636f72646170702e636f6d2f6170692f6775696c64732f3134333836373833393238323032303335322f7769646765742e706e67&#34; alt=&#34;Chat on Discord&#34; data-canonical-src=&#34;https://discordapp.com/api/guilds/143867839282020352/widget.png&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Roslyn is the open-source implementation of both the C# and Visual Basic compilers with an API surface for building code analysis tools.&lt;/p&gt; &#xA;&lt;h3&gt;C# and Visual Basic Language Feature Suggestions&lt;/h3&gt; &#xA;&lt;p&gt;If you want to suggest a new feature for the C# or Visual Basic languages go here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang&#34;&gt;dotnet/csharplang&lt;/a&gt; for C# specific issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/vblang&#34;&gt;dotnet/vblang&lt;/a&gt; for VB-specific features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/csharplang&#34;&gt;dotnet/csharplang&lt;/a&gt; for features that affect both languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;All work on the C# and Visual Basic compiler happens directly on &lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;GitHub&lt;/a&gt;. Both core team members and external contributors send pull requests which go through the same review process.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base, a great way to get started is to ask some questions on &lt;a href=&#34;https://github.com/dotnet/roslyn/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;! Then check out our &lt;a href=&#34;https://github.com/dotnet/roslyn/raw/main/docs/contributing/Building%2C%20Debugging%2C%20and%20Testing%20on%20Windows.md&#34;&gt;contributing guide&lt;/a&gt; which covers the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/roslyn/raw/main/docs/wiki/Contributing-Code.md&#34;&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/roslyn/raw/main/docs/contributing/Building%2C%20Debugging%2C%20and%20Testing%20on%20Windows.md&#34;&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/roslyn/raw/main/CONTRIBUTING.md&#34;&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finding a bug to fix in the &lt;a href=&#34;https://aka.ms/roslyn-ide-bugs-help-wanted&#34;&gt;IDE&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/roslyn-compiler-bugs-help-wanted&#34;&gt;Compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finding a feature to implement in the &lt;a href=&#34;https://aka.ms/roslyn-ide-feature-help-wanted&#34;&gt;IDE&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/roslyn-compiler-feature-help-wanted&#34;&gt;Compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Roslyn API suggestions should go through the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/roslyn/main/docs/contributing/API%20Review%20Process.md&#34;&gt;API review process&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;p&gt;The Roslyn community can be found on &lt;a href=&#34;https://github.com/dotnet/roslyn/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; &#xA;&lt;p&gt;To chat with other community members, you can join the Roslyn &lt;a href=&#34;https://discord.com/invite/tGJvv88&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://gitter.im/dotnet/roslyn&#34;&gt;Gitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/roslyn/main/CODE-OF-CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; applies to all Roslyn community channels and has&amp;nbsp;adopted&amp;nbsp;the&amp;nbsp;&lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET&amp;nbsp;Foundation&amp;nbsp;Code&amp;nbsp;of&amp;nbsp;Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/compiler-api-model&#34;&gt;Roslyn Architecture Overview&lt;/a&gt; to get started with Roslyn’s API’s.&lt;/p&gt; &#xA;&lt;h3&gt;NuGet Feeds&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;The latest pre-release builds&lt;/strong&gt; are available from the following public NuGet feeds:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_packaging?_a=feed&amp;amp;feed=dotnet-tools&#34;&gt;Compiler&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.azure.com/azure-public/vside/_packaging?_a=feed&amp;amp;feed=vssdk&#34;&gt;IDE Services&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_packaging?_a=feed&amp;amp;feed=dotnet5&#34;&gt;.NET SDK&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Continuous Integration status&lt;/h3&gt; &#xA;&lt;h4&gt;Builds&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows Debug&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Unix Debug&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Windows_Debug&amp;amp;configuration=Build_Windows_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Windows_Release&amp;amp;configuration=Build_Windows_Release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Unix_Debug&amp;amp;configuration=Build_Unix_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main-vs-deps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Build_Windows_Debug&amp;amp;configuration=Build_Windows_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Build_Windows_Release&amp;amp;configuration=Build_Windows_Release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Build_Unix_Debug&amp;amp;configuration=Build_Unix_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Desktop Unit Tests&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Debug x86&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Debug x64&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release x86&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release x64&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Debug_32&amp;amp;configuration=Test_Windows_Desktop_Debug_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Debug_64&amp;amp;configuration=Test_Windows_Desktop_Debug_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Release_32&amp;amp;configuration=Test_Windows_Desktop_Release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Release_64&amp;amp;configuration=Test_Windows_Desktop_Release_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main-vs-deps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_Desktop_Debug_32&amp;amp;configuration=Test_Windows_Desktop_Debug_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_Desktop_Debug_64&amp;amp;configuration=Test_Windows_Desktop_Debug_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_Desktop_Release_32&amp;amp;configuration=Test_Windows_Desktop_Release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_Desktop_Release_64&amp;amp;configuration=Test_Windows_Desktop_Release_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;CoreClr Unit Tests&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows Debug&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_CoreClr_Debug&amp;amp;configuration=Test_Windows_CoreClr_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_CoreClr_Release&amp;amp;configuration=Test_Windows_CoreClr_Release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Linux_Debug&amp;amp;configuration=Test_Linux_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main-vs-deps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_CoreClr_Debug&amp;amp;configuration=Test_Windows_CoreClr_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_CoreClr_Release&amp;amp;configuration=Test_Windows_CoreClr_Release&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Linux_Debug&amp;amp;configuration=Test_Linux_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Integration Tests&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Debug x86&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Debug x64&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release x86&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release x64&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20debug_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20debug_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20release_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main-vs-deps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main-vs-deps&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20debug_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main-vs-deps&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20debug_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main-vs-deps&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main-vs-deps&amp;amp;jobname=VS_Integration&amp;amp;configuration=VS_Integration%20release_64&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Misc Tests&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Determinism&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Build Correctness&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Rebuild from artifacts&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Source build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Spanish&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_Determinism&amp;amp;configuration=Correctness_Determinism&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_Build&amp;amp;configuration=Correctness_Build&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchName=main&amp;amp;jobName=Correctness_Rebuild&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_SourceBuild&amp;amp;configuration=Correctness_SourceBuild&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Spanish_Release_32&amp;amp;configuration=Test_Windows_Desktop_Spanish_Release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_macOS_Debug&amp;amp;configuration=Test_macOS_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;main-vs-deps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Correctness_Determinism&amp;amp;configuration=Correctness_Determinism&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Correctness_Build&amp;amp;configuration=Correctness_Build&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchName=main-vs-deps&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchName=main-vs-deps&amp;amp;jobName=Correctness_Rebuild&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Correctness_SourceBuild&amp;amp;configuration=Correctness_SourceBuild&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_Windows_Desktop_Spanish_Release_32&amp;amp;configuration=Test_Windows_Desktop_Spanish_Release_32&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&amp;amp;branchname=main-vs-deps&amp;amp;view=logs&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main-vs-deps&amp;amp;jobname=Test_macOS_Debug&amp;amp;configuration=Test_macOS_Debug&amp;amp;label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;.NET Foundation&lt;/h3&gt; &#xA;&lt;p&gt;This project is part of the &lt;a href=&#34;http://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt; along with other projects like &lt;a href=&#34;https://github.com/dotnet/runtime/&#34;&gt;the .NET Runtime&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>