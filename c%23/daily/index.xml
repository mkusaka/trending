<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-24T01:31:47Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/azure-functions-core-tools</title>
    <updated>2023-05-24T01:31:47Z</updated>
    <id>tag:github.com,2023-05-24:/Azure/azure-functions-core-tools</id>
    <link href="https://github.com/Azure/azure-functions-core-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command line tools for Azure Functions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure/azure-functions-cli/master/src/Azure.Functions.Cli/npm/assets/azure-functions-logo-color-raster.png&#34; alt=&#34;Azure Functions Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v4.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_build/latest?definitionId=11&amp;amp;branchName=v4.x&#34;&gt;&lt;img src=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_apis/build/status/azure-functions-core-tools?branchName=v4.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v3.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_build/latest?definitionId=11&amp;amp;branchName=v3.x&#34;&gt;&lt;img src=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_apis/build/status/azure-functions-core-tools?branchName=v3.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_build/latest?definitionId=11&amp;amp;branchName=dev&#34;&gt;&lt;img src=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_apis/build/status/azure-functions-core-tools?branchName=dev&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v1.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_build/latest?definitionId=11&amp;amp;branchName=v1.x&#34;&gt;&lt;img src=&#34;https://azfunc.visualstudio.com/Azure%20Functions/_apis/build/status/azure-functions-core-tools?branchName=v1.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Azure Functions Core Tools&lt;/h1&gt; &#xA;&lt;p&gt;The Azure Functions Core Tools provide a local development experience for creating, developing, testing, running, and debugging Azure Functions.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1&lt;/strong&gt; (v1.x branch): Requires .NET 4.7.1 Windows Only&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;v2&lt;/strong&gt; (dev branch): Self-contained cross-platform package&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;v3&lt;/strong&gt;: (v3.x branch): Self-contained cross-platform package&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;v4&lt;/strong&gt;: (v4.x branch): Self-contained cross-platform package &lt;strong&gt;(recommended)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;h4&gt;To download and install with MSI:&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2174087&#34;&gt;Windows 64-bit&lt;/a&gt; (VS Code debugging requires 64-bit)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2174159&#34;&gt;Windows 32-bit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2135274&#34;&gt;Windows 64-bit&lt;/a&gt; (VS Code debugging requires 64-bit)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2135275&#34;&gt;Windows 32-bit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;To install with npm:&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g azure-functions-core-tools@4 --unsafe-perm true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g azure-functions-core-tools@3 --unsafe-perm true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v2&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g azure-functions-core-tools@2 --unsafe-perm true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;To install with chocolatey:&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install azure-functions-core-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install azure-functions-core-tools-3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Notice: To debug functions under vscode, the 64-bit version is required&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install azure-functions-core-tools-3 --params &#34;&#39;/x64&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v2&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install azure-functions-core-tools-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;To install with winget:&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;winget install Microsoft.AzureFunctionsCoreTools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;winget install Microsoft.AzureFunctionsCoreTools -v 3.0.3904&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;h4&gt;Homebrew:&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap azure/functions&#xA;brew install azure-functions-core-tools@4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap azure/functions&#xA;brew install azure-functions-core-tools@3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v2&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap azure/functions&#xA;brew install azure-functions-core-tools@2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Homebrew allows side by side installation of v2 and v3, you can switch between the versions using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew link --overwrite azure-functions-core-tools@3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;1. Set up package feed&lt;/h4&gt; &#xA;&lt;h5&gt;Ubuntu 20.04&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb&#xA;sudo dpkg -i packages-microsoft-prod.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu 19.04&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb&#xA;sudo dpkg -i packages-microsoft-prod.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu 18.10&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://packages.microsoft.com/config/ubuntu/18.10/packages-microsoft-prod.deb&#xA;sudo dpkg -i packages-microsoft-prod.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu 18.04&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb&#xA;sudo dpkg -i packages-microsoft-prod.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu 16.04 / Linux Mint 18&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb&#xA;sudo dpkg -i packages-microsoft-prod.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Debian 9 / 10&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set to 9 or 10&#xA;DEBIAN_VERSION=10&#xA;&#xA;wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &amp;gt; microsoft.asc.gpg&#xA;sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/&#xA;wget -q https://packages.microsoft.com/config/debian/$DEBIAN_VERSION/prod.list&#xA;sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list&#xA;sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg&#xA;sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Install&lt;/h4&gt; &#xA;&lt;h5&gt;v4&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install azure-functions-core-tools-4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v3&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install azure-functions-core-tools-3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;v2&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install azure-functions-core-tools-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Other Linux Distributions&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download latest release&lt;/p&gt; &lt;p&gt;Download the latest release for your platform from &lt;a href=&#34;https://github.com/Azure/azure-functions-core-tools/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unzip release zip&lt;/p&gt; &lt;p&gt;Using your preferred tool, unzip the downloaded release. To unzip into an &lt;code&gt;azure-functions-cli&lt;/code&gt; directory using the &lt;code&gt;unzip&lt;/code&gt; tool, run this command from the directory containing the downloaded release zip:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;unzip -d azure-functions-cli Azure.Functions.Cli.linux-x64.*.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make the &lt;code&gt;func&lt;/code&gt; command executable&lt;/p&gt; &lt;p&gt;Zip files do not maintain the executable bit on binaries. So, you&#39;ll need to make the &lt;code&gt;func&lt;/code&gt; binary, as well as &lt;code&gt;gozip&lt;/code&gt; (used by func during packaging) executables. Assuming you used the instructions above to unzip:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd azure-functions-cli&#xA;chmod +x func&#xA;chmod +x gozip&#xA;./func&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally add &lt;code&gt;func&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To execute the &lt;code&gt;func&lt;/code&gt; command without specifying the full path to the binary, add its directory to your &lt;code&gt;$PATH&lt;/code&gt; environment variable. Assuming you&#39;re still following along from above:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=`pwd`:$PATH&#xA;func&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local&#34;&gt;Code and test Azure Functions locally&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: npm can be used on all platforms. On unix platforms, you may need to specify &lt;code&gt;--unsafe-perm&lt;/code&gt; if you are running npm with sudo. That&#39;s due to npm behavior of post install script.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started on Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;Using the Core Tools, you can easily configure a Kubernetes cluster and run Azure Functions on it.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;Kubectl&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Kubernetes scalers&lt;/h3&gt; &#xA;&lt;p&gt;This deploys &lt;a href=&#34;https://github.com/kedacore/keda&#34;&gt;KEDA&lt;/a&gt; to your cluster which allows you to deploy your functions in a scale-to-zero by default for non-http scenarios only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func kubernetes install --namespace {namespace}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;KEDA:&lt;/strong&gt; Handles monitoring polling event sources currently QueueTrigger and ServiceBusTrigger.&lt;/p&gt; &#xA;&lt;h3&gt;Deploy to Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;First make sure you have Dockerfile for your project.&lt;/strong&gt; You can generate one using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func init --docker # or --docker-only (for existing projects)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then to deploy to kubernetes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func kubernetes deploy \&#xA;    --name myfunction \&#xA;    --namespace functions-ns \&#xA;    --registry &amp;lt;docker-hub-id or registry-server&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build the current &lt;code&gt;Dockerfile&lt;/code&gt; and push the image to the registry specified, then deploys a &lt;code&gt;Secret&lt;/code&gt;, &lt;code&gt;Deployment&lt;/code&gt;, and &lt;code&gt;ScaledObject&lt;/code&gt;. If your functions have httpTrigger, you&#39;ll get an additional &lt;code&gt;Deployment&lt;/code&gt; and &lt;code&gt;Service&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Deploy using a private registry&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func kubernetes deploy --name myfunction --registry &amp;lt;docker-hub-id or registry-server&amp;gt; --pull-secret &amp;lt;registry auth secret&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy a function to Knative&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knative/docs/tree/master/docs/install&#34;&gt;Knative&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Deploying Azure Functions to knative is supported with the &lt;code&gt;--platform knative&lt;/code&gt; flag. The Core Tools CLI identifies non HTTP trigger functions and annotates the knative manifest with the the &lt;code&gt;minScale&lt;/code&gt; annotation to opt out of scale-to-zero.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func deploy --platform knative --name myfunction --registry &amp;lt;docker-hub-id or registry-server&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploying a function to AKS using ACR&lt;/h3&gt; &#xA;&lt;p&gt;Using the configuration options an Azure Function app can also be deployed to a &lt;a href=&#34;https://azure.microsoft.com/en-us/services/kubernetes-service/&#34;&gt;AKS&lt;/a&gt; (Azure Kubernetes Service) Kubernetes cluster and use &lt;a href=&#34;https://azure.microsoft.com/en-us/services/container-registry/&#34;&gt;ACR&lt;/a&gt; as the registry server. Do all of the following &lt;em&gt;before&lt;/em&gt; you run the deployment command.&lt;/p&gt; &#xA;&lt;h4&gt;Create a AKS cluster&lt;/h4&gt; &#xA;&lt;p&gt;You can create an AKS cluster using the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal&#34;&gt;Azure Portal&lt;/a&gt; or using &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough&#34;&gt;Azure CLI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once your AKS cluster is created make sure that you can access it using kubectl. To make kubectl run in the context of your cluster, configure a connection using the command below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-azurecli&#34;&gt;az aks get-credentials \&#xA;    --name FunctionsCluster \&#xA;    --resource-group &amp;lt;resource-group-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To verify the connection to your cluster run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; kubectl get nodes&#xA;&#xA;NAME                       STATUS    ROLES     AGE       VERSION&#xA;aks-agentpool-20257154-0   Ready     agent     1d        v1.11.5&#xA;aks-agentpool-20257154-1   Ready     agent     1d        v1.11.5&#xA;aks-agentpool-20257154-2   Ready     agent     1d        v1.11.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a ACR Registry&lt;/h4&gt; &#xA;&lt;p&gt;An ACR instance can be created using the Azure Portal or the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-azure-cli#create-a-container-registry&#34;&gt;Azure CLI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Login to the ACR Registry&lt;/h4&gt; &#xA;&lt;p&gt;Before pushing and pulling container images, you must log in to the ACR instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-azurecli&#34;&gt;az acr login --name &amp;lt;acrName&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Give the AKS cluster access to the ACR Registry&lt;/h4&gt; &#xA;&lt;p&gt;The AKS cluster needs access to the ACR Registry to pull the container. Azure creates a service principal to support cluster operability with other Azure resources. This can be used for authentication with an ACR registry. See here for how to grant the right access here: &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/container-registry/container-registry-auth-aks&#34;&gt;Authenticate with Azure Container Registry from Azure Kubernetes Service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Run the deployment&lt;/h4&gt; &#xA;&lt;p&gt;The deployment will build the docker container and upload the container image to your referenced ACR instance (Note: Specify the ACR Login Server in the --registry parameter this is usually of the form &amp;lt;container_registry_name&amp;gt;.azurecr.io) and then your AKS cluster will use that as a source to obtain the container and deploy it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;func kubernetes deploy --name myfunction --registry &amp;lt;acr-registry-loginserver&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the deployment is successful, you should see this:&lt;/p&gt; &#xA;&lt;p&gt;Function deployed successfully! Function IP: 40.121.21.192&lt;/p&gt; &#xA;&lt;h4&gt;Verifying your deployment&lt;/h4&gt; &#xA;&lt;p&gt;You can verify your deployment by using the Kubernetes web dashboard. To start the Kubernetes dashboard, use the &lt;a href=&#34;https://docs.microsoft.com/en-us/cli/azure/aks?view=azure-cli-latest#az-aks-browse&#34;&gt;az aks browse&lt;/a&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-azurecli&#34;&gt;az aks browse --resource-group myResourceGroup --name myAKSCluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the Kubernetes dashboard look for the namespace &#34;azure-functions&#34; and make sure that a pod has been deployed sucessfully with your container.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying Azure Functions with Virtual-Kubelet&lt;/h3&gt; &#xA;&lt;p&gt;Azure Functions running on Kubernetes can take advantage of true serverless containers model by getting deployed to different providers of &lt;a href=&#34;https://github.com/virtual-kubelet/virtual-kubelet&#34;&gt;Virtual Kubelet&lt;/a&gt;, such as Azure Container Instances.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Functions deployed to Kubernetes already contain all the tolerations needed to be schedulable to Virtual Kubelet nodes. All you need to do is to set up VKubelet on your Kubernetes cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/virtual-kubelet/azure-aci&#34;&gt;Install VKubelet with ACI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cli/azure/aks?view=azure-cli-latest#az-aks-install-connector&#34;&gt;Install VKubelet with ACI on AKS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Important note:&lt;/em&gt; Virtual Kubelet does not currently allow for Kubernetes Services to route external traffic to pods. This means that HTTP triggered functions will not receive traffic running on a VKubelet provider (including ACI).&lt;/p&gt; &#xA;&lt;p&gt;A good usage scenario for using functions with VKubelet would be with event triggered / time triggered functions that do not rely on external HTTP traffic.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;func extensions&lt;/code&gt; command require the &lt;code&gt;dotnet&lt;/code&gt; cli to be installed and on your path. This requirement is tracked &lt;a href=&#34;https://github.com/Azure/azure-functions-core-tools/issues/367&#34;&gt;here&lt;/a&gt;. You can install .NET Core for your platform from &lt;a href=&#34;https://www.microsoft.com/net/download/&#34;&gt;https://www.microsoft.com/net/download/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Default Directories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CurrentDirectory&lt;/code&gt;: is the default directory the functions runtime looks for functions in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%TMP%\LogFiles\Application\Functions&lt;/code&gt;: is the default directory for logs. It mirrors the logs directory on Azure as well.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;The Azure Functions Core tools collect usage data in order to help us improve your experience. The data is anonymous and doesn&#39;t include any user specific or personal information. The data is collected by Microsoft.&lt;/p&gt; &#xA;&lt;p&gt;You can opt-out of telemetry by setting the &lt;code&gt;FUNCTIONS_CORE_TOOLS_TELEMETRY_OPTOUT&lt;/code&gt; environment variable to &#39;1&#39; or &#39;true&#39; using your favorite shell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://privacy.microsoft.com/en-US/privacystatement&#34;&gt;Microsoft privacy statement&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is under the benevolent umbrella of the &lt;a href=&#34;http://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; and is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-functions-core-tools/v4.x/LICENSE&#34;&gt;the MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;For questions on Azure Functions or the tools, you can ask questions here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/answers/topics/azure-functions.html&#34;&gt;Azure Functions Q&amp;amp;A Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/azure-functions&#34;&gt;Azure-Functions tag on StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;File bugs at &lt;a href=&#34;https://github.com/Azure/azure-functions-core-tools/issues&#34;&gt;Azure Functions Core Tools repo on GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>