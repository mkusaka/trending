<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-10T01:27:34Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aras-p/UnityGaussianSplatting</title>
    <updated>2023-09-10T01:27:34Z</updated>
    <id>tag:github.com,2023-09-10:/aras-p/UnityGaussianSplatting</id>
    <link href="https://github.com/aras-p/UnityGaussianSplatting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Toy Gaussian Splatting visualization in Unity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Toy Gaussian Splatting playground in Unity&lt;/h1&gt; &#xA;&lt;p&gt;SIGGRAPH 2023 had a paper &#34;&lt;a href=&#34;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/&#34;&gt;&lt;strong&gt;3D Gaussian Splatting for Real-Time Radiance Field Rendering&lt;/strong&gt;&lt;/a&gt;&#34; by Kerbl, Kopanas, Leimkühler, Drettakis that looks pretty cool! Check out their website, source code repository, data sets and so on.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve decided to try to implement the realtime visualization part (i.e. the one that takes already-produced gaussian splat &#34;model&#34; file) in Unity.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aras-p/UnityGaussianSplatting/main/Screenshot01.jpg?raw=true&#34; alt=&#34;Screenshot&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The original paper code has a purely CUDA-based realtime renderer; other people have done their own implementations (e.g. WebGPU at &lt;a href=&#34;https://github.com/cvlab-epfl/gaussian-splatting-web&#34;&gt;cvlab-epfl&lt;/a&gt;, Taichi at &lt;a href=&#34;https://github.com/wanmeihuali/taichi_3d_gaussian_splatting&#34;&gt;wanmeihuali&lt;/a&gt;, etc.).&lt;/p&gt; &#xA;&lt;p&gt;Code in here so far is randomly cribbled together from reading the paper (as well as earlier literature on EWA splatting), looking at the official CUDA implementation, and so on. Current state:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code does &lt;strong&gt;not&lt;/strong&gt; use the &#34;tile-based splat rasterizer&#34; bit from the paper; it just draws each gaussian splat as a screenspace aligned rectangle that covers the extents of it.&lt;/li&gt; &#xA; &lt;li&gt;Splat color accumulation is done by rendering front-to-back, with a blending mode that results in the same accumulated color as their tile-based renderer.&lt;/li&gt; &#xA; &lt;li&gt;Splat sorting is done with a AMD FidelityFX derived radix sort, or (on DX11) with a GPU bitonic sort that is lifted from Unity HDRP codebase.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is not a fast implementation yet!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Within Unity (2022.3), there&#39;s a &lt;code&gt;Scene.unity&lt;/code&gt; that has a &lt;code&gt;GaussianSplatRenderer&lt;/code&gt; script attached to it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The project defaults to DX12 on Windows, since then it can use a faster GPU sorting routine. DX11 should also work, at expense of performance.&lt;/li&gt; &#xA;   &lt;li&gt;Metal and Vulkan also use the faster sorting approach.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You need to point it to a &#34;model&#34; directory. The model directory is expected to contain &lt;code&gt;cameras.json&lt;/code&gt; and &lt;code&gt;point_cloud/iteration_7000/point_cloud.ply&lt;/code&gt; inside of it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Since the models are quite large, I have not included any in this Github repo. The original &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;paper github page&lt;/a&gt; has a a link to &lt;a href=&#34;https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/datasets/pretrained/models.zip&#34;&gt;14GB zip&lt;/a&gt; of their models.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Press play. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The gaussian splat renderer component inspector will have a slider to move the game view camera into one of the cameras from the model directory. Or you can just move the game/scene view camera however you please.&lt;/li&gt; &#xA;   &lt;li&gt;There are also various controls in the script to debug or visualize the data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Note: this is all &lt;em&gt;&lt;strong&gt;a toy&lt;/strong&gt;&lt;/em&gt;, it is not robust, it does not handle errors gracefully, it does not interact or composite well with the &#34;rest of rendering&#34;, it is not fast, etc. etc. I told you so!&lt;/p&gt; &#xA;&lt;p&gt;Wishlist that I may or might not do at some point:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make rendering faster (actual tiled compute shader rasterizer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Look at ways to make the data sets smaller (both on-disk and in-memory)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Integrate better with &#34;the rest&#34; of rendering that might be in the scene (BiRP)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Maybe look at making it work in URP/HDRP? Not sure yet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Make sorting faster (bitonic -&amp;gt; FidelityFX radix sort)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Write-ups&lt;/h2&gt; &#xA;&lt;p&gt;My own blog posts about all this &lt;em&gt;(so far... not that many!)&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aras-p.info/blog/2023/09/05/Gaussian-Splatting-is-pretty-cool/&#34;&gt;Gaussian Splatting is pretty cool!&lt;/a&gt; (2023 Sep)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance numbers:&lt;/h2&gt; &#xA;&lt;p&gt;&#34;bicycle&#34; scene from the paper, with 6.1M splats and first camera in there, rendering at 1200x800 resolution:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (NVIDIA RTX 3080 Ti): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Official SBIR viewer: 7.4ms (135FPS). 4.8GB VRAM usage.&lt;/li&gt; &#xA;   &lt;li&gt;Unity, DX12 or Vulkan: 13.4ms (75FPS) - 10.1ms rendering, 3.3ms sorting. 2.1GB VRAM usage.&lt;/li&gt; &#xA;   &lt;li&gt;Unity, DX11: 21.8ms (46FPS) - 9.9ms rendering, 11.9ms sorting.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mac (Apple M1 Max): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Unity, Metal: 80.6ms (12FPS) - with FidelityFX GPU sort.&lt;/li&gt; &#xA;   &lt;li&gt;Unity, Metal: 108ms (9FPS) - with bitonic GPU sort.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;External Code Used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zanders3/json&#34;&gt;zanders3/json&lt;/a&gt;, MIT license, (c) 2018 Alex Parker.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Island&#34; GPU sorting code adapted from &lt;a href=&#34;https://poniesandlight.co.uk/reflect/bitonic_merge_sort/&#34;&gt;Tim Gfrerer blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Ffx&#34; GPU sorting code is &lt;a href=&#34;https://github.com/GPUOpen-Effects/FidelityFX-ParallelSort&#34;&gt;AMD FidelityFX ParallelSort&lt;/a&gt;, ported to Unity by me.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MixedRealityToolkit/MixedRealityToolkit-Unity</title>
    <updated>2023-09-10T01:27:34Z</updated>
    <id>tag:github.com,2023-09-10:/MixedRealityToolkit/MixedRealityToolkit-Unity</id>
    <link href="https://github.com/MixedRealityToolkit/MixedRealityToolkit-Unity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository holds the third generation of the Mixed Reality Toolkit for Unity. The latest version of the MRTK can be found here.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mixed Reality Toolkit for Unity&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13754172/122838732-89ea3400-d2ab-11eb-8c79-32dd84944989.png&#34; alt=&#34;Mixed Reality Toolkit&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/Images/MRTK3_banner.png&#34; alt=&#34;MRTK3 Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MRTK3&lt;/strong&gt; is the third generation of the Mixed Reality Toolkit for Unity. It&#39;s an open source project designed to accelerate cross-platform mixed reality development in Unity. MRTK3 is built on top of &lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.1/manual/index.html&#34;&gt;Unity&#39;s XR Interaction Toolkit (XRI)&lt;/a&gt; and OpenXR. This new generation of MRTK is intended to be faster, cleaner, and more modular, with an easier cross-platform development workflow enabled by OpenXR and the Unity Input System.&lt;/p&gt; &#xA;&lt;h2&gt;Key improvements&lt;/h2&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built on Unity XR Interaction Toolkit and the Unity Input System.&lt;/li&gt; &#xA; &lt;li&gt;Dedicated to OpenXR, with flexibility for other XRSDK backends&lt;/li&gt; &#xA; &lt;li&gt;Open-ended and extensible interaction paradigms across devices, platforms, and applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rewrote and redesigned most features and systems, from UX to input to subsystems.&lt;/li&gt; &#xA; &lt;li&gt;Zero per-frame memory allocation.&lt;/li&gt; &#xA; &lt;li&gt;Tuned for maximum performance on HoloLens 2 and other resource-constrained mobile platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New interaction models (gaze-pinch indirect manipulation).&lt;/li&gt; &#xA; &lt;li&gt;Updated Mixed Reality Design Language.&lt;/li&gt; &#xA; &lt;li&gt;Unity Canvas + 3D UX: production-grade dynamic auto-layout.&lt;/li&gt; &#xA; &lt;li&gt;Unified 2D &amp;amp; 3D input for gamepad, mouse, and accessibility support.&lt;/li&gt; &#xA; &lt;li&gt;Data binding for branding, theming, dynamic data, and complex lists.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;MRTK3 requires Unity 2021.3.22f1 or higher. In addition, you need the &lt;a href=&#34;https://aka.ms/mrfeaturetool&#34;&gt;Mixed Reality Feature Tool for Unity&lt;/a&gt; to find, download, and add the packages to your project.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/windows/mixed-reality/mrtk-unity/mrtk3-overview/getting-started/setting-up/setup-new-project&#34;&gt;Follow the documentation for setting up MRTK3 packages as dependencies in your project here.&lt;/a&gt; Alternatively, you can clone this repo directly to experiment with our template project. However, we &lt;em&gt;strongly&lt;/em&gt; recommend adding MRTK3 packages as dependencies through the Feature Tool, as it makes updating, managing, and consuming MRTK3 packages far easier and less error-prone.&lt;/p&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Supported Devices&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenXR devices&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft HoloLens 2 &lt;br&gt; Magic Leap 2 &lt;br&gt; Meta Quest 1/2 &lt;br&gt; Windows Mixed Reality (experimental) &lt;br&gt; SteamVR (experimental) &lt;br&gt; Oculus Rift on OpenXR (experimental) &lt;br&gt; Varjo XR-3 (experimental) &lt;br&gt; &lt;strong&gt;If your OpenXR device already works with MRTK3, let us know!&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Traditional flat-screen desktop (experimental)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;And more coming soon!&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;In previous versions of MRTK (HoloToolkit and MRTK v2), all packages were released as a complete set, marked with the same version number (ex: 2.8.0). Starting with MRTK3 GA, each package will be individually versioned, following the &lt;a href=&#34;https://semver.org/spec/v2.0.0.html&#34;&gt;Semantic Versioning 2.0.0 specification&lt;/a&gt;. (As a result, the &#39;3&#39; in MRTK3 is not a version number!)&lt;/p&gt; &#xA;&lt;p&gt;Individual versioning will enable faster servicing while providing improved developer understanding of the magnitude of changes and reducing the number of packages needing to be updated to acquire the desired fix(es).&lt;/p&gt; &#xA;&lt;p&gt;For example, if a non-breaking new feature is added to the UX core package, which contains the logic for user interface behavior the minor version number will increase (from 3.0.x to 3.1.0). Since the change is non-breaking, the UX components package, which depends upon UX core, is not required to be updated.&lt;/p&gt; &#xA;&lt;p&gt;As a result of this change, there is not a unified MRTK3 product version.&lt;/p&gt; &#xA;&lt;p&gt;To help identify specific packages and their versions, MRTK3 provides an about dialog that lists the relevant packages included in the project. To access this dialog, select &lt;code&gt;Mixed Reality&lt;/code&gt; &amp;gt; &lt;code&gt;MRTK3&lt;/code&gt; &amp;gt; &lt;code&gt;About MRTK&lt;/code&gt; from the Unity Editor menu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/Images/AboutMRTK.png&#34; alt=&#34;About MRTK Panel&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Early preview packages&lt;/h2&gt; &#xA;&lt;p&gt;Some parts of MRTK3 are at earlier stages of the development process than others. Early preview packages can be identified in the Mixed Reality Feature Tool and Unity Package Manager by the &lt;code&gt;Early Preview&lt;/code&gt; designation in their names.&lt;/p&gt; &#xA;&lt;p&gt;As of June 2022, the following components are considered to be in early preview.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Package Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accessibility&lt;/td&gt; &#xA;   &lt;td&gt;org.mixedrealitytoolkit.accessibility&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data Binding and Theming&lt;/td&gt; &#xA;   &lt;td&gt;org.mixedrealitytoolkit.data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The MRTK team is fully committed to releasing this functionality. It is important to note that the packages may not contain the complete feature set that is planned to be released or they may undergo major, breaking architectural changes before release.&lt;/p&gt; &#xA;&lt;p&gt;We very much encourage you to provide any and all feedback to help shape the final form of these early preview features.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions, suggestions, and feedback. All contributions, suggestions, and feedback you submitted are accepted under the &lt;a href=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/LICENSE.md&#34;&gt;Project&#39;s license&lt;/a&gt;. You represent that if you do not own copyright in the code that you have the authority to submit it under the &lt;a href=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/LICENSE.md&#34;&gt;Project&#39;s license&lt;/a&gt;. All feedback, suggestions, or contributions are not confidential.&lt;/p&gt; &#xA;&lt;p&gt;For more information on how to contribute Mixed Reality Toolkit for Unity Project, please read &lt;a href=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;For information on how the Mixed Reality Toolkit for Unity Project is governed, please read &lt;a href=&#34;https://raw.githubusercontent.com/MixedRealityToolkit/MixedRealityToolkit-Unity/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>