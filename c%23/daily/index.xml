<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-09T01:35:42Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zeroruka/GI-Assets</title>
    <updated>2022-08-09T01:35:42Z</updated>
    <id>tag:github.com,2022-08-09:/zeroruka/GI-Assets</id>
    <link href="https://github.com/zeroruka/GI-Assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Character textures, models and mods for a certain anime game.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GI Assets&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Anime Game Character Model &amp;amp; Texture files for modding.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER: Using mods in this repo on official Genshin servers is very likely to get you banned. I do not recommend or condone the use of these scripts and programs on official servers, and if you do use it on official servers I take no responsibility for any consequences as a result.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;免责声明：在官方服务器上使用本库中的MOD，很可能会被封号。我不推荐或纵容在官方服务器上使用这些脚本和程序，如果你依然要在官服上使用，我对由此产生的任何后果不承担责任。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;All guides are in the &lt;a href=&#34;https://github.com/zeroruka/GI_Assets/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;中文教程请看 &lt;a href=&#34;https://github.com/zeroruka/GI-Assets-wiki/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>discord-net/Discord.Net</title>
    <updated>2022-08-09T01:35:42Z</updated>
    <id>tag:github.com,2022-08-09:/discord-net/Discord.Net</id>
    <link href="https://github.com/discord-net/Discord.Net" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An unofficial .Net wrapper for the Discord API (https://discord.com/)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discordnet.dev/&#34; title=&#34;Click to visit the documentation!&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/discord-net/Discord.Net/dev/docs/marketing/logo/SVG/Combinationmark%20White%20Border.svg?sanitize=true&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.nuget.org/packages/Discord.Net/&#34;&gt; &lt;img src=&#34;https://img.shields.io/nuget/vpre/Discord.Net.svg?maxAge=2592000?style=plastic&#34; alt=&#34;NuGet&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.myget.org/feed/Packages/discord-net&#34;&gt; &lt;img src=&#34;https://img.shields.io/myget/discord-net/vpre/Discord.Net.svg?sanitize=true&#34; alt=&#34;MyGet&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/discord-net/Discord.Net/_build/latest?definitionId=1&amp;amp;branchName=dev&#34;&gt; &lt;img src=&#34;https://dev.azure.com/discord-net/Discord.Net/_apis/build/status/discord-net.Discord.Net?branchName=dev&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/dnet&#34;&gt; &lt;img src=&#34;https://discord.com/api/guilds/848176216011046962/widget.png&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; Discord.Net is an unofficial .NET API Wrapper for the Discord client (https://discord.com). &#xA;&lt;h2&gt;📄 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discordnet.dev&#34;&gt;https://discordnet.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📥 Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Stable (NuGet)&lt;/h3&gt; &#xA;&lt;p&gt;Our stable builds available from NuGet through the Discord.Net metapackage:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net/&#34;&gt;Discord.Net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The individual components may also be installed from NuGet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Webhooks&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Webhook/&#34;&gt;Discord.Net.Webhook&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Text-Command &amp;amp; Interaction services.&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Commands/&#34;&gt;Discord.Net.Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Interactions/&#34;&gt;Discord.Net.Interactions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Complete API coverage.&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.WebSocket/&#34;&gt;Discord.Net.WebSocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Rest/&#34;&gt;Discord.Net.Rest&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;The API core. Implements only entities and barebones functionality.&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Core/&#34;&gt;Discord.Net.Core&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Unstable&lt;/h3&gt; &#xA;&lt;p&gt;Nightly builds are available through our MyGet feed (&lt;code&gt;https://www.myget.org/F/discord-net/api/v3/index.json&lt;/code&gt;). These builds target the dev branch.&lt;/p&gt; &#xA;&lt;h2&gt;🛑 Known Issues&lt;/h2&gt; &#xA;&lt;h3&gt;WebSockets (Win7 and earlier)&lt;/h3&gt; &#xA;&lt;p&gt;.NET Core 1.1 does not support WebSockets on Win7 and earlier. This issue has been fixed since the release of .NET Core 2.1. It is recommended to target .NET Core 2.1 or above for your project if you wish to run your bot on legacy platforms; alternatively, you may choose to install the &lt;a href=&#34;https://www.nuget.org/packages/Discord.Net.Providers.WS4Net/&#34;&gt;Discord.Net.Providers.WS4Net&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;h3&gt;TLS on .NET Framework.&lt;/h3&gt; &#xA;&lt;p&gt;Discord supports only TLS1.2+ on all their websites including the API since 07/19/2022. .NET Framework does not support this protocol by default. If you depend on .NET Framework, it is suggested to upgrade your project to &lt;code&gt;net6-windows&lt;/code&gt;. This framework supports most of the windows-only features introduced by fx, and resolves startup errors from the TLS protocol mismatch.&lt;/p&gt; &#xA;&lt;h2&gt;🗃️ Versioning Guarantees&lt;/h2&gt; &#xA;&lt;p&gt;This library generally abides by &lt;a href=&#34;https://semver.org&#34;&gt;Semantic Versioning&lt;/a&gt;. Packages are published in &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; version format.&lt;/p&gt; &#xA;&lt;h3&gt;Patch component&lt;/h3&gt; &#xA;&lt;p&gt;An increment of the &lt;strong&gt;PATCH&lt;/strong&gt; component always indicates that an internal-only change was made, generally a bugfix. These changes will not affect the public-facing API in any way, and are always guaranteed to be forward- and backwards-compatible with your codebase, any pre-compiled dependencies of your codebase.&lt;/p&gt; &#xA;&lt;h3&gt;Minor component&lt;/h3&gt; &#xA;&lt;p&gt;An increment of the &lt;strong&gt;MINOR&lt;/strong&gt; component indicates that some addition was made to the library, and this addition is not backwards-compatible with prior versions. However, Discord.Net &lt;strong&gt;does not guarantee forward-compatibility&lt;/strong&gt; on minor additions. In other words, we permit a limited set of breaking changes on a minor version bump.&lt;/p&gt; &#xA;&lt;p&gt;Due to the nature of the Discord API, we will oftentimes need to add a property to an entity to support the latest API changes. Discord.Net provides interfaces as a method of consuming entities; and as such, introducing a new field to an entity is technically a breaking change. Major version bumps generally indicate some major change to the library, and as such we are hesitant to bump the major version for every minor addition to the library. To compromise, we have decided that interfaces should be treated as &lt;strong&gt;consumable only&lt;/strong&gt;, and your applications should typically not be implementing interfaces.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For applications where interfaces are implemented, such as in test mocks, we apologize for this inconsistency with SemVer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;While we will never break the API (outside of interface changes) on minor builds, we will occasionally need to break the ABI, by introducing parameters to a method to match changes upstream with Discord. As such, a minor version increment may require you to recompile your code, and dependencies, such as addons, may also need to be recompiled and republished on the newer version. When a binary breaking change is made, the change will be noted in the release notes.&lt;/p&gt; &#xA;&lt;h3&gt;Major component&lt;/h3&gt; &#xA;&lt;p&gt;An increment of the &lt;strong&gt;MAJOR&lt;/strong&gt; component indicates that breaking changes have been made to the library; consumers should check the release notes to determine what changes need to be made.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Branches&lt;/h2&gt; &#xA;&lt;h3&gt;Release/X.X&lt;/h3&gt; &#xA;&lt;p&gt;Release branch following Major.Minor. Upon release, patches will be pushed to these branches. New NuGet releases will be tagged on these branches.&lt;/p&gt; &#xA;&lt;h3&gt;Dev&lt;/h3&gt; &#xA;&lt;p&gt;Development branch, available on MyGet. This branch is what pull requests are targetted to.&lt;/p&gt; &#xA;&lt;h3&gt;Feature/X&lt;/h3&gt; &#xA;&lt;p&gt;Branches that target Dev, adding new features. Feel free to explore these branches and give feedback where necessary.&lt;/p&gt; &#xA;&lt;h3&gt;Docs/X&lt;/h3&gt; &#xA;&lt;p&gt;Usually targets Dev. These branches are used to update documentation with either new features or existing feature rework.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unity-Technologies/FPSSample</title>
    <updated>2022-08-09T01:35:42Z</updated>
    <id>tag:github.com,2022-08-09:/Unity-Technologies/FPSSample</id>
    <link href="https://github.com/Unity-Technologies/FPSSample" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A first person multiplayer shooter example project in Unity&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/Documentation/Images/Banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;FPS Sample&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update about the state of the project:&lt;/strong&gt; This project is based on Unity 2018.3 and no longer being actively maintained. Feel free to continue to use it as a learning resource or simply for inspiration. As always, you should upgrade to latest version of Unity and packages if you intend to start a project.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for checking out this sample!&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional, first person multiplayer shooter game made in Unity and with full source and assets. It was developed by a small team from Unity Technologies. Our goals are to test and showcase new features in Unity and to be of use for teams who can bootstrap on top of this, extract useful bits and tools or simply learn from and get inspired by what is in the project.&lt;/p&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://unity.com/fps-sample&#34;&gt;landing page&lt;/a&gt; for more high level information about the project. Or reach out &lt;a href=&#34;https://forum.unity.com/forums/fps-sample-game.184&#34;&gt;in the forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The project is using a number of new technologies: We use the new &lt;a href=&#34;https://github.com/Unity-Technologies/ScriptableRenderPipeline&#34;&gt;HD Render Pipeline&lt;/a&gt;, meaning all content has been authored for HDRP. We are also using the new &lt;a href=&#34;https://github.com/Unity-Technologies/multiplayer&#34;&gt;network transport layer&lt;/a&gt; as well as the &lt;a href=&#34;https://unity3d.com/unity/features/job-system-ECS&#34;&gt;Entity-Component System&lt;/a&gt;. In the case of ECS, we have primarily adopted the &#34;ECS-pattern&#34; and use it in hybrid mode with a lot of regular components. As more and more features of Unity become available in ECS-aware versions, we will migrate to them.&lt;/p&gt; &#xA;&lt;h2&gt;Status and prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Current status at a glance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Unity version: 2018.3.8f1&#xA;Platforms    : Windows (client and server) and Linux (server only)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting the project&lt;/h2&gt; &#xA;&lt;p&gt;To get the project folder you need to clone the project. Note, that&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: This project uses Git Large Files Support (LFS). Downloading a zip file using the green button on Github &lt;strong&gt;will not work&lt;/strong&gt;. You must clone the project with a version of git that has LFS. You can download Git LFS here: &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;https://git-lfs.github.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The project size is about 18GB (size of Assets folder). Your cloned repository will be almost double of that due to git state. If it is much smaller, you most likely did not have LFS when you cloned.&lt;/p&gt; &#xA;&lt;h2&gt;Getting the right version of Unity&lt;/h2&gt; &#xA;&lt;p&gt;Once you have cloned the repository, you should install the version of Unity that is listed above in the prerequisites section. Make sure you include windows standalone support in your installation (and Linux support if you want to build the Linux headless server).&lt;/p&gt; &#xA;&lt;h2&gt;Opening the project for the first time&lt;/h2&gt; &#xA;&lt;p&gt;The following guide should take you to the point where you can hit play in the editor and run around the levels and also build a standalone version of the game and use it to spin up a server and connect a few clients to it.&lt;/p&gt; &#xA;&lt;p&gt;The first time you open the project you need patience! It takes a while to import all the assets.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Due to a bug in Unity 2018.3, you have to take the following step right after the initial import: 1 Search for &lt;code&gt;Firstperson_Projection&lt;/code&gt; in the Project search field. Select the 4 shaders, right click and reimport them. 2 If you have script compile errors related to entities, you need to remove and re-install the entities package.&lt;/p&gt; &#xA; &lt;p&gt;One day soon we will remove this note and there will be cake.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once the editor is ready, open the &lt;em&gt;Project Tools Window&lt;/em&gt; by navigating to &lt;em&gt;&lt;strong&gt;FPS Sample &amp;gt; Windows &amp;gt; Project tools&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It should look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/Documentation/Images/ProjectTools.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Keep this window docked as you will use it a lot. From here you can open the levels, build assetbundles and build standalone players. Because this is a multiplayer game you will need to work with standalone players a lot.&lt;/p&gt; &#xA;&lt;h3&gt;Trying out preview mode&lt;/h3&gt; &#xA;&lt;p&gt;From the Project Tools window click &lt;strong&gt;Open&lt;/strong&gt; next to Level_00. Our levels are split into multiple scenes but using these buttons will ensure you open all the scenes that make up a level.&lt;/p&gt; &#xA;&lt;p&gt;Once opened, try entering playmode in the editor. You should now be able to run around in the level. This is what we call &#39;preview mode&#39;. Here you can move around and test your level, player traversal and weapons.&lt;/p&gt; &#xA;&lt;h3&gt;Building bundles and standalone&lt;/h3&gt; &#xA;&lt;p&gt;Leave playmode again and in the Project Tools window, verify that it says &#34;Building for: StandaloneWindows64...&#34; under the Game headline. If it does not, change your platform in the usual way, using File &amp;gt; Build settings window.&lt;/p&gt; &#xA;&lt;p&gt;Now, in the Project Tools window in the bundles section, press &lt;strong&gt;All [force]&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This will build the levels and other assets into assetbundles. The first time around this will take a significant amount of time as all shaders have to be compiled.&lt;/p&gt; &#xA;&lt;p&gt;Once you have built the bundles, hit &lt;strong&gt;Build game&lt;/strong&gt; in the game section. This builds the standalone player. Again, first time will be slow.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Due to a limitation in Unity 2018.3, you have to look out for errors like this &lt;code&gt;Maximum number (256) of shader keywords exceeded, keyword &amp;lt;KEYWORD_NAME&amp;gt; will be ignored.&lt;/code&gt; and similar. If you get these, you can close and open Unity and then try and build again. The errors are relatively harmless but can lead to graphical artifacts as some shaders will have wrong keywords.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using the quick start launcher&lt;/h3&gt; &#xA;&lt;p&gt;When this is done, locate the &#34;Quick start&#34; section at the bottom of the Project Tools window. Fill out the settings like this:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Mode: &lt;strong&gt;Multiplayer&lt;/strong&gt;&lt;br&gt; Level: &lt;strong&gt;Level_00&lt;/strong&gt;&lt;br&gt; Clients: &lt;strong&gt;1&lt;/strong&gt;&lt;br&gt; Headless: &lt;strong&gt;Checked&lt;/strong&gt;&lt;br&gt; Use editor: &lt;strong&gt;Unused&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Now hit the green &lt;strong&gt;Start&lt;/strong&gt; button. This should launch two processes: one is a standalone, headless server, the other is a client that will attempt to connect to the server.&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! If you made it this far you should celebrate a bit!&lt;/p&gt; &#xA;&lt;h2&gt;Development of FPS Sample, Contributions etc.&lt;/h2&gt; &#xA;&lt;p&gt;As of today, internally development of the project happens on Perforce. We push versions of the project to github from there. As we do that we will update the &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; with highlights but the full history is not carried over.&lt;/p&gt; &#xA;&lt;p&gt;For practical reasons we are not able to take larger contributions just now. But bugfixes are very welcome! Read the guidelines for contributing in &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/Documentation/&#34;&gt;Documentation&lt;/a&gt; folder for more information. In particular, the &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/Documentation/GettingStarted.md&#34;&gt;Getting Started Guide&lt;/a&gt; is a good place to, well, start.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Our intention is that you can use everything in this project as a starting point or as bits and pieces in your own Unity games. For the legal words, see &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/FPSSample/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>