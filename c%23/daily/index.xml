<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-09T01:29:39Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FlorianButz/DynamicWin</title>
    <updated>2025-04-09T01:29:39Z</updated>
    <id>tag:github.com,2025-04-09:/FlorianButz/DynamicWin</id>
    <link href="https://github.com/FlorianButz/DynamicWin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Dynamic Island inspired app for Windows machines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DynamicWin&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/c%23-%23239120.svg?style=for-the-badge&amp;amp;logo=csharp&amp;amp;logoColor=white&#34;&gt; &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=License&amp;amp;message=CC+BY-SA+4.0&amp;amp;color=%23c49b04&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@flofdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&amp;amp;logo=YouTube&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/UHFuqB9NqR&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/UHFuqB9NqR)%5D(https://discord.gg/UHFuqB9NqR&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/FlorianButz/DynamicWin/main/ReadmeFiles/IslandGif-1_Volume.gif&#34; style=&#34;border-radius:15px&#34; alt=&#34;animated&#34; width=&#34;1000&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;p xmlns:cc=&#34;http://creativecommons.org/ns#&#34; xmlns:dct=&#34;http://purl.org/dc/terms/&#34;&gt;&lt;a property=&#34;dct:title&#34; rel=&#34;cc:attributionURL&#34; href=&#34;https://github.com/FlorianButz/DynamicWin&#34;&gt;DynamicWin&lt;/a&gt; by &lt;a rel=&#34;cc:attributionURL dct:creator&#34; property=&#34;cc:attributionName&#34; href=&#34;https://github.com/FlorianButz&#34;&gt;Florian Butz&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1&#34; target=&#34;_blank&#34; rel=&#34;license noopener noreferrer&#34; style=&#34;display:inline-block;&#34;&gt;CC BY-SA 4.0&lt;img style=&#34;height:22px!important;margin-left:3px;vertical-align:text-bottom;&#34; src=&#34;https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1&#34; alt=&#34;&#34;&gt;&lt;img style=&#34;height:22px!important;margin-left:3px;vertical-align:text-bottom;&#34; src=&#34;https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1&#34; alt=&#34;&#34;&gt;&lt;img style=&#34;height:22px!important;margin-left:3px;vertical-align:text-bottom;&#34; src=&#34;https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] I currently do not plan on updating this project any further. Feel free to fork the project, but there won&#39;t be any new features from my side.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What is it?&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://support.apple.com/de-de/guide/iphone/iph28f50d10d/ios&#34;&gt;Dynamic Island&lt;/a&gt; inspired Windows App that brings in a bunch of features like widgets or a file tray that works like a clipboard.&lt;/p&gt; &#xA;&lt;br&gt; Please note that I messed up the versioning. It is still in early development and no where near finished. v1.0.1R should be v0.0.1B and so on. &#xA;&lt;h3&gt;Why did I make this?&lt;/h3&gt; &#xA;&lt;p&gt;The idea for this application originally came to me when I saw the dynamic island on iPhone for the first time. After seeing that there are no (good) solutions to a Dynamic Island type application on Windows, I got the idea to make my own. I only got the motivation to start on it though, after seeing something similar has been done on macOS already &lt;a href=&#34;https://lo.cafe/notchnook&#34;&gt;(NotchNook)&lt;/a&gt;. &lt;br&gt;&lt;br&gt; I love programming and I had the idea stuck in my mind for quite some time now. &lt;br&gt; I originally made the project in &lt;a href=&#34;https://www.java.com/de/&#34;&gt;Java&lt;/a&gt; (luckily, that changed) but didn&#39;t get any progress since Java is less connected to the Operating system than a language like C#. &lt;br&gt; I re-made the project in &lt;a href=&#34;https://de.wikipedia.org/wiki/Windows_Forms&#34;&gt;WinForms&lt;/a&gt; getting way better results and being more motivated and then had to migrate it to &lt;a href=&#34;https://de.wikipedia.org/wiki/Windows_Presentation_Foundation&#34;&gt;WPF&lt;/a&gt; because of my stupid mistake of not trying if things would actually work before doing it. (:D)&lt;/p&gt; &#xA;&lt;h3&gt;How did I make this?&lt;/h3&gt; &#xA;&lt;p&gt;WPF is a powerful UI framework, however to archive the look and feel of this app I decided on creating every UI element from scratch using &lt;a href=&#34;https://github.com/mono/SkiaSharp&#34;&gt;SkiaSharp&lt;/a&gt; for the rendering. This allowed me to create an app that looks like something you would find on macOS which was perfect for this project.&lt;/p&gt; &#xA;&lt;h3&gt;Why am I writing all of this instead of talking about the features?&lt;/h3&gt; &#xA;&lt;p&gt;I wanted to give you a peak at what went into this project and why/how I made it.&lt;/p&gt; &#xA;&lt;br&gt; If you want to support the development of this project you can create pull requests and contribute to it or make extensions / themes and upload them on the discord :) &#xA;&lt;br&gt; Feel free to open up a new issue if you encounter any bugs / flaws. &#xA;&lt;br&gt; Quick disclaimer: The code is terribly structured and almost un-maintainable as it was only meant to be a small side project so please don&#39;t expect too much from me :) &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Only the checked features are currently available. The unchecked ones are not guaranteed to come, but are on my mind.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;DynamicWin has a variety of features, currently including: &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shortcuts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;Ctrl + Win&lt;/code&gt; Will hide the island (or show it again).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;Shift + Win&lt;/code&gt; Will open a quick search menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Big Widgets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Media Playback Widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Timer Widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Weather Widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Voicemeeter integration Widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Shortcuts Widget &lt;sub&gt;(Can be configured to open a file, e.g. Shortcut, .EXE or any other filetype.)&lt;/sub&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Calendar Widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Tuya Smart integration &lt;sub&gt;(Will probably be turned in to one widget with the shortcuts)&lt;/sub&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Small Widgets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Time Display&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Music Visualizer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Device Usage Detector &lt;sub&gt;(Indicates if camera / microphone is in use)&lt;/sub&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Power State Display &lt;sub&gt;(Shows battery in form of icons. If no battery is found it shows a connector icon instead)&lt;/sub&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Timer &lt;sub&gt;(Displaying current running timer)&lt;/sub&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CPU/GPU Usage Display&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;File Tray &lt;br&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img style=&#34;border-radius:15px&#34; src=&#34;https://raw.githubusercontent.com/FlorianButz/DynamicWin/main/ReadmeFiles/IslandGif-2_Tray.gif&#34; alt=&#34;animated&#34; width=&#34;1000&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Files can be dragged over the island to add them to the file tray. The tray can be accessed when hovering over the island and clicking on the &#39;Tray&#39; button. The files are stored until they are dragged out again. They can also be removed by selecting the file and right clicking. A context menu will popup and you can click on - &lt;strong&gt;&#34;Remove Selected Files&#34;&lt;/strong&gt; or &lt;strong&gt;&#34;Remove Selected Files&#34;&lt;/strong&gt; to copy the files. &lt;br&gt; Idea for the future: An implementation of a service like &lt;a href=&#34;https://snapdrop.net&#34;&gt;SnapDrop&lt;/a&gt; to allow for an &#34;AirDrop&#34; kind of feature using the file tray.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] If you are using the file tray to import files in to an app (e.g. After Effects) make sure to not remove the files from the tray. Apps that only copy a link to the file will loose it after you remove the file from the tray.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Spotify Integration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img align=&#34;left&#34; height=&#34;150&#34; style=&#34;border-radius:15px; margin:0 25 0 0&#34; src=&#34;https://raw.githubusercontent.com/FlorianButz/DynamicWin/main/ReadmeFiles/IslandGif-3_Spotify.gif&#34;&gt;The Media Playback Widget automatically detects when an instance of the Spotify app is running (Desktop version only). It will display the current playing song name and the artist. Login to the Spotify service on the app is &lt;b&gt;not&lt;/b&gt; required.&lt;/p&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;Mod Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Yes! You can add your own small widgets and big widgets by creating a custom extension!&lt;/strong&gt; &lt;br&gt; Loading an extension from someone else is very simple. You just need to drag the &lt;strong&gt;Mod.dll&lt;/strong&gt; file in to the &lt;em&gt;Extensions&lt;/em&gt; folder that is located in the &lt;code&gt;%appdata%/DynamicWin&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;strong&gt;Please never load a mod that is not tested to be safe!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Mods can contain malicious code that can mess up your system, so always check a mod&#39;s source code or let a trustworthy person check it for you.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Themes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img style=&#34;border-radius:15px; margin:15px 0 15px 0&#34; src=&#34;https://raw.githubusercontent.com/FlorianButz/DynamicWin/main/ReadmeFiles/Themes.png&#34; alt=&#34;animated&#34; width=&#34;100%&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The above shown themes were generated by ChatGPT. If you want one of them, join the discord and let me know.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can use the built-in dark / light theme. You can also create custom themes that fit your liking by going to the &lt;code&gt;%appdata%/DynamicWin/Theme.json&lt;/code&gt; file. After editing the colors you need to select the &lt;code&gt;Custom&lt;/code&gt; theme option in the settings. If you already did that, you will need to go back to the settings and click on it again. Otherwise you would have to restart the app. &lt;br&gt; This is an example of a color: &lt;code&gt;&#34;IslandColor&#34;: &#34;#000000&#34;&lt;/code&gt; &lt;br&gt; The hex code is structured this way: &lt;code&gt;#rrggbb&lt;/code&gt;. If you want to change the alpha of the color, it is &lt;strong&gt;always&lt;/strong&gt; at the start of the code. &lt;code&gt;#aarrggbb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Known Issues&lt;/h1&gt; &#xA;&lt;p&gt;The performance might not be the best. I will try my best to add performance options to the settings menu but cannot guarantee a smooth experience for everyone. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;The app might suddenly disappear and upon trying to reopen it a message box will tell you that only one instance of the app can run at the same time. To fix this, open task manager and find the process &#34;DynamicWin&#34;. Kill it and start the app again. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Too fast interactions might confuse the animation system and will result in an empty menu. To fix this, usually moving the mouse away from the island and then over it again will fix it.&lt;/p&gt; &#xA;&lt;h1&gt;Creating an Extension&lt;/h1&gt; &#xA;&lt;p&gt;To create an extension you need an IDE like &lt;a href=&#34;https://visualstudio.microsoft.com/de/vs/community/&#34;&gt;Visual Studio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new C# Project of the type &#34;Class Library&#34;. The target framework has to be &lt;code&gt;.NET 8&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You will need to add at least &lt;code&gt;DynamicWin.dll&lt;/code&gt; and the SkiaSharp DLLs as assembly dependencies to your project. &lt;a href=&#34;https://learn.microsoft.com/en-us/visualstudio/ide/how-to-add-or-remove-references-by-using-the-reference-manager?view=vs-2022&#34;&gt;How to add references to a VS project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a new C# class file, if it&#39;s not already there. Rename the class to something like &#34;MyExtension&#34;.&lt;/li&gt; &#xA; &lt;li&gt;All extensions must have a class that implements the &lt;code&gt;IDynamicWinExtension&lt;/code&gt; interface.&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example of how the extension class should look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public class TestExtension : IDynamicWinExtension&#xA;{&#xA;    public string AuthorName =&amp;gt; &#34;Florian Butz&#34;; // The display name of the author (you) of the extension&#xA;&#xA;    public string ExtensionName =&amp;gt; &#34;Test Extension&#34;; // The dislpay name of the extension&#xA;&#xA;    public string ExtensionID =&amp;gt; &#34;florianbutz.test&#34;; // The ID of the extension&#xA;&#xA;    public List&amp;lt;IRegisterableWidget&amp;gt; GetExtensionWidgets() // Returns all Widgets that are available in this extension&#xA;    {&#xA;        return new List&amp;lt;IRegisterableWidget&amp;gt;() { }; // Creates a list with all IRegisterableWidgets in this extension&#xA;    }&#xA;&#xA;    public void LoadExtension() // Gets executed after DynamicWin has finished loading in all extensions and has created the window&#xA;    {&#xA;        System.Diagnostics.Debug.WriteLine(ExtensionName + &#34; was loaded sucessfully!&#34;); // Debug text&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can create your first widget. Create a new class and call it how you want. I will call mine &lt;code&gt;TestWidget&lt;/code&gt; for now. The class has to implement from &lt;code&gt;WidgetBase&lt;/code&gt; if it is a big widget. If you want to make a small widget, extend the class from &lt;code&gt;SmallWidgetBase&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public class TestWidget : WidgetBase&#xA;{&#xA;    DWText text; // Reference for the text object&#xA;&#xA;    public TestWidget(UIObject? parent, Vec2 position, UIAlignment alignment = UIAlignment.TopCenter) : base(parent, position, alignment) // Overriding the constructor is essential.&#xA;    {&#xA;        text = new DWText(this, &#34;This is a Text!&#34;, Vec2.zero, UIAlignment.Center); // Creates a new text object&#xA;        AddLocalObject(text); // Adds an object to the UIObject (Widget)&#xA;    }&#xA;&#xA;    public override void DrawWidget(SKCanvas canvas) // Gets called when the widget is drawn. Do not override &#39;Draw()&#39; since it contains other important things.&#xA;    {&#xA;        var paint = GetPaint(); // Creates a new paint of the UIObject. Please only use this and don&#39;t create your own paint.&#xA;        paint.Color = Theme.Primary.Value(); // Sets the color of the paint to the current Primary color&#xA;&#xA;        var rect = GetRect(); // Gets the rect / bounds of the widget&#xA;&#xA;        canvas.DrawRoundRect(rect, paint); // Draws the rect to the screen. Only use &#39;DrawRoundRect()&#39; when trying to draw the bounds of the UIObject.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DynamicWin needs to know what widgets are in your extension. To register the widget, create a new class that implements from the &lt;code&gt;IRegisterableWidget&lt;/code&gt; class. For readability reasons I&#39;ll call mine &lt;code&gt;RegisterTestWidget&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public class RegisterTestWidget : IRegisterableWidget&#xA;{&#xA;    public bool IsSmallWidget =&amp;gt; false; // Determins if the widget is supposed to be small or big (small widgets are displyed when the island is not hovered)&#xA;&#xA;    public string WidgetName =&amp;gt; &#34;Test Widget&#34;; // The display name of the widget&#xA;&#xA;    public WidgetBase CreateWidgetInstance(UIObject? parent, Vec2 position, UIAlignment alignment = UIAlignment.TopCenter) // Overriding the constructor is essential.&#xA;    {&#xA;        return new TestWidget(parent, position, alignment); // Needs to return the Widget that you are trying to register&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now the extension is almost ready. As a last step, go back to your main extension class and add the &lt;code&gt;RegisterTestWidget&lt;/code&gt; (or however you called it) class to the &lt;code&gt;GetExtensionWidgets()&lt;/code&gt; function&#39;s return list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public List&amp;lt;IRegisterableWidget&amp;gt; GetExtensionWidgets() // Returns all Widgets that are available in this extension&#xA;{&#xA;    return new List&amp;lt;IRegisterableWidget&amp;gt;() { new RegisterTestWidget() }; // Creates a list with all IRegisterableWidgets in this extension&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you&#39;re done. Build the project and go to your project&#39;s output folder. (Most times located under &lt;code&gt;\bin\Debug\net8.0\&lt;/code&gt; or &lt;code&gt;\bin\Release\net8.0\&lt;/code&gt; and move &lt;strong&gt;ONLY&lt;/strong&gt; the DLL file that has the name of your project in to the &lt;code&gt;%appdata%/DynamicWin/Extensions&lt;/code&gt; folder. In this case, my output DLL is called &lt;code&gt;TestExtension.dll&lt;/code&gt;. &lt;br&gt;&lt;br&gt; After that you can run DynamicWin and test your extension. This was of course a very bare bones example.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] It&#39;s best to look at the widgets that are already in DynamicWin and learn from them.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; Here is a small list of current UIObjects that can be used to make the widget creation process easier. &#xA;&lt;h2&gt;UIObject&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;UIObject? parent&lt;/code&gt; is the parent UIObject, most times the widget itself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Vec2 position&lt;/code&gt; is the position of the UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Vec2 size&lt;/code&gt; is the size of the UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;UIAlignment alignment&lt;/code&gt; is an optional paramenter which determins where inside the parent the object&#39;s zero point is.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Methods &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;SetActive(bool)&lt;/code&gt; sets the active state of the UIObject with an animation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SilentSetActive(bool)&lt;/code&gt; sets the active state of the UIObject without an animation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SKRoundRect GetRect()&lt;/code&gt; returns the bounds of the UIObject (&lt;code&gt;SKRoundRect&lt;/code&gt;);&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ContextMenu? CreateContextMenu()&lt;/code&gt; is overriden if the UIObject is supposed to have a context (right click) menu using the WPF &lt;code&gt;ContextMenu&lt;/code&gt; class.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;AddLocalObject(UIObject)&lt;/code&gt; adds another UIObject inside the UIObject that called it. Parent is automatically set to the caller UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;DestroyLocalObject(UIObject obj)&lt;/code&gt; removes the local UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GetColor(Col)&lt;/code&gt; takes in a color and returns the same color but with correct transparency. Please use it whenever you use custom colors or colors from the Theme class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;IsHovering&lt;/code&gt; returns true if the mouse is over the UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;IsMouseDown&lt;/code&gt; returns true if the mouse is down over the UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Color&lt;/code&gt; returns the color of the object.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Position&lt;/code&gt; returns the position of the object.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;RawPosition&lt;/code&gt; returns the actual position of the object without the screen transformation (use this when setting the &lt;code&gt;Position&lt;/code&gt; field).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Anchor&lt;/code&gt; is the anchor of the object. By default set to &lt;code&gt;(0.5f, 0.5f)&lt;/code&gt; which means zero is in the middle of the UIObject.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Size&lt;/code&gt; returns the size of the object.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;IsEnabled&lt;/code&gt; returns the active state of the UIObject.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DWText&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;string text&lt;/code&gt; is the text.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Methods &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;SetText(string)&lt;/code&gt; sets the text with an animation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SilentSetText(string)&lt;/code&gt; sets the text without an animation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Font&lt;/code&gt; is the Typeface of the text.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TextBounds&lt;/code&gt; are the bounds of the text.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TextSize&lt;/code&gt; is the size of the text.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WTextImageButton&lt;/h2&gt; &#xA;&lt;p&gt;(Do not use. This is the base class of &lt;code&gt;DWTextButton&lt;/code&gt;, &lt;code&gt;DWImageButton&lt;/code&gt; and &lt;code&gt;DWTextImageButton&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Action clickCallback&lt;/code&gt; is an action that gets called on click.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;normalColor&lt;/code&gt; is the color of the button when not hovered.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hoverColor&lt;/code&gt; is the color of the button when hovered.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;clickColor&lt;/code&gt; is the color of the button when clicked.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;colorSmoothingSpeed&lt;/code&gt; is the speed at which the color updates.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;normalScaleMulti&lt;/code&gt; is the size of the button when not hovered.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hoverScaleMulti&lt;/code&gt; is the size of the button when hovered.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;normclickScaleMultialScaleMulti&lt;/code&gt; is the size of the button when clicked.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DWTextButton&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;string buttonText&lt;/code&gt; is the text on the button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;normalTextSize&lt;/code&gt; is the size of the text when not hovered.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DWImageButton&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;SKBitmap image&lt;/code&gt; is the image on the button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;imageScale&lt;/code&gt; the scale multiplier of the image. Default is &lt;code&gt;0.85f&lt;/code&gt;. &lt;code&gt;1f&lt;/code&gt; would be the scale of the button.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Image&lt;/code&gt; the image of the button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DWTextImageButton&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;SKBitmap image&lt;/code&gt; is the text on the button.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;string buttonText&lt;/code&gt; is the text on the button.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Action clickCallback&lt;/code&gt; is an action that gets called on click.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important Fields / Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;imageScale&lt;/code&gt; the scale multiplier of the image. Default is &lt;code&gt;0.85f&lt;/code&gt;. &lt;code&gt;1f&lt;/code&gt; would be the scale of the button.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;normalTextSize&lt;/code&gt; is the size of the text when not hovered.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Image&lt;/code&gt; the image of the button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;Res&lt;/code&gt; class can be used to load in SKTypeface or SKBitmap (for DWText or DWImage). For colors the &lt;code&gt;Col&lt;/code&gt; class is used. When applying the color to the paint &lt;code&gt;Col.Value()&lt;/code&gt; has to be called to convert to &lt;code&gt;SKColor&lt;/code&gt;. &lt;br&gt; Try to only use the colors available in the &lt;code&gt;Theme&lt;/code&gt; class to provide color customizability to the user.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Ishaan35/Unity3D-Mario-Kart-Racing-Game</title>
    <updated>2025-04-09T01:29:39Z</updated>
    <id>tag:github.com,2025-04-09:/Ishaan35/Unity3D-Mario-Kart-Racing-Game</id>
    <link href="https://github.com/Ishaan35/Unity3D-Mario-Kart-Racing-Game" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://www.youtube.com/watch?v=s_nEniWLLgo. This is a 3D Mario kart game created with the unity game engine with C#. Kart racer supports items, anti-gravity mode, computer players, underwater mode, and real-time shadows and lighting.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;h1&gt;Unity3D-Mario-Kart-Racing-Game&lt;/h1&gt;  &#xA; &lt;!-- ABOUT THE PROJECT --&gt; &#xA; &lt;h2&gt;About The Project&lt;/h2&gt; &#xA; &lt;p&gt;Welcome to my open-source 3D kart racing game, created using C#, the .NET Framework, and Unity3D. This project remains popular with an active community on both GitHub and my YouTube Channel: Ishaan35.&lt;/p&gt; &#xA; &lt;p&gt;I started this as a way to gain experience with C#, and learn what it is like to manage a large project. It took off when early videos gained traction, and the project has grown with positive community feedback, as I continued to work on it for over two years while gaining over 850 YouTube subscribers.&lt;/p&gt; &#xA; &lt;p&gt;I also decided to create this game as I couldn&#39;t find any open-source kart racing games that utilize similar physics to the very popular kart racing game, Mario Kart 8, and I wanted to change that with a challenge for myself.&lt;/p&gt; &#xA; &lt;p&gt;I&#39;m dedicated to pushing this project forward and making improvements. Whether you&#39;re a contributor, player, or just interested, you&#39;re part of this exciting journey. Let&#39;s build the future of this project together.&lt;/p&gt; &#xA; &lt;p&gt;This game features 5 different tracks with detailed visuals to provide a great user experience.&lt;/p&gt; &#xA; &lt;p&gt;Here is a video showing some gameplay of the project &lt;a href=&#34;https://youtu.be/NfiscJR_nQY&#34;&gt;https://youtu.be/NfiscJR_nQY&lt;/a&gt;, and the rest of the videos can be found on my &lt;a href=&#34;https://www.youtube.com/c/ishaan35&#34;&gt;YouTube Channel&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/Ishaan35/Unity3D-Mario-Kart-Racing-Game/raw/main/GameSnapshot.png?raw=true&#34; alt=&#34;Game Image&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Built With&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/csharp/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/C%23-9a48b1?style=for-the-badge&amp;amp;logo=c%20sharp&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://unity.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Unity-000000?style=for-the-badge&amp;amp;logo=unity&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dotnet.microsoft.com/en-us/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET%20Framework-512bd3?style=for-the-badge&amp;amp;logo=dotNet&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/Ishaan35/Unity3D-Mario-Kart-Racing-Game/main/#readme-top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA; &lt;!-- Status --&gt; &#xA; &lt;h2&gt;Status&lt;/h2&gt; &#xA; &lt;p&gt;This project is currently in development. I will be maintaining it for any major updates or features in Unity launches. The playable demo can be found here &lt;a href=&#34;https://drive.google.com/file/d/1YZ2OqAirBQlzf0WjMv1-zO6F597xrQoq/view?usp=sharing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Usage&lt;/h2&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Download Unity version 2021.3.4f1 LTS or higher. LTS versions are always preferred for longer-term support of existing features used in the project.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Download Blender 2.79 or higher as Unity will need to import some .blend file assets.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Once downloaded, clone this GitHub repository, and open the root directory in Unity Hub as a project. I did not provide the library folder, so the first-time import may take a while.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Once in, you should be able to navigate to the scenes folder and view the different tracks. If you encounter errors or see unrendered pink meshes, try the following: • Ensure the latest version of the Universal Render Pipeline and Shadergraph is installed as a package in the Unity Package Manager. After installing, if it does not work, delete the library folder and re-open the project.&lt;/p&gt; &lt;p&gt;• Make sure the version of Unity is LTS and at least version 2021.3.4f1.&lt;/p&gt; &lt;p&gt;• Try downloading the full version of the project with the Library folder included &lt;a href=&#34;https://drive.google.com/file/d/16XfmmUwKhTlESbEOm70gqZQ0PQQe2iJf/view?usp=sharing&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;!-- ROADMAP --&gt; &#xA; &lt;h2&gt;Roadmap&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add multiple characters&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add a main menu instead of a basic track selector&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Other Hurdles&lt;/h2&gt; &#xA; &lt;p&gt;• Anti-gravity was something that took me a while to fully figure out. I consider this a major achievement since it allows for a more diverse track selection that can be more twisty, potentially more difficult, and amusing with all the camera rotations. I implemented anti-gravity by switching to a mode where the gravitational force is applied to the direction that is opposite to the normal of the driving surface. I also made sure the kart smoothly rotates along the ground surface, and the camera rotation aligns with the player&#39;s rotation.&lt;/p&gt; &#xA; &lt;p&gt;• Creating opponent players was also a challenge. I needed the right balance of versatility, randomness, and control over the movements of the players. Hence, I created a handful of possible path collections for each track. These paths would be nodes placed at intervals around the track. A large hitbox was placed around each node to determine if the computer player had passed a certain point on the track (which also provided a nice set-up for the ranking system during the race). Then I would randomly switch up the paths given to the computer players to give a more &#34;random&#34; feel to the movements of the computer players.&lt;/p&gt; &#xA; &lt;!-- CONTACT --&gt; &#xA; &lt;h2&gt;Contact&lt;/h2&gt; &#xA; &lt;p&gt;Ishaan Patel - &lt;a href=&#34;mailto:toishaanpatel@gmail.com&#34;&gt;toishaanpatel@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;LinkedIn: &lt;a href=&#34;https://www.linkedin.com/in/ishaan35/&#34;&gt;https://www.linkedin.com/in/ishaan35/&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Personal Website: &lt;a href=&#34;https://www.ishaanpatel.info/&#34;&gt;https://www.ishaanpatel.info/&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Full Project Link with Library Folder Included: &lt;a href=&#34;https://drive.google.com/file/d/16XfmmUwKhTlESbEOm70gqZQ0PQQe2iJf/view?usp=sharing&#34;&gt;https://drive.google.com/file/d/16XfmmUwKhTlESbEOm70gqZQ0PQQe2iJf/view?usp=sharing&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Playable Build Link: &lt;a href=&#34;https://drive.google.com/file/d/1YZ2OqAirBQlzf0WjMv1-zO6F597xrQoq/view?usp=sharing&#34;&gt;https://drive.google.com/file/d/1YZ2OqAirBQlzf0WjMv1-zO6F597xrQoq/view?usp=sharing&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; &#xA; &lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>