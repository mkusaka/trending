<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-12T01:35:08Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>winsw/winsw</title>
    <updated>2022-08-12T01:35:08Z</updated>
    <id>tag:github.com,2022-08-12:/winsw/winsw</id>
    <link href="https://github.com/winsw/winsw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A wrapper executable that can run any executable as a Windows service, in a permissive license.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Service Wrapper in a permissive license&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/winsw/winsw/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/winsw/winsw/total?style=flat-square&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/winsw/winsw/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/winsw/winsw?include_prereleases&amp;amp;sort=semver&amp;amp;style=flat-square&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/WinSW/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/WinSW?style=flat-square&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/winsw/winsw/_build?definitionId=1&amp;amp;_a=summary&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/winsw/aabe43dd-6f6d-4660-b5dd-5b79e1e2ef4e/1?style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/winsw/winsw/_release?_a=releases&amp;amp;view=mine&amp;amp;definitionId=1&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/release/winsw/aabe43dd-6f6d-4660-b5dd-5b79e1e2ef4e/1/1?style=flat-square&#34; alt=&#34;Deployment Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/winsw/winsw?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/winsw/winsw?style=flat-square&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/winsw/winsw?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;WinSW wraps and manages any application as a Windows service.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We are actively developing WinSW 3. Please refer to the &lt;a href=&#34;https://github.com/winsw/winsw/tree/master&#34;&gt;v2&lt;/a&gt; branch for previous version documentation.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/MANIFEST.md&#34;&gt;project manifest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported platforms&lt;/h2&gt; &#xA;&lt;p&gt;WinSW 3 can run on Windows platforms with .NET Framework 4.6.1 or later versions installed. For systems without .NET Framework, the project provides native 64-bit and 32-bit executables based on .NET Core.&lt;/p&gt; &#xA;&lt;p&gt;More executables can be added upon request.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/get-started/system-requirements&#34;&gt;.NET Framework system requirements&lt;/a&gt;&lt;br&gt; Preinstalled since Windows 10, version 1511 and Windows Server 2016.&lt;br&gt; Installable since Windows 7 SP1 and Windows Server 2008 R2 SP1.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/master/release-notes/5.0/5.0-supported-os.md&#34;&gt;.NET 5 system requirements&lt;/a&gt;&lt;br&gt; Supported since Windows 7 SP1, Windows Server (Core) 2012 R2 and Nano Server, version 1809.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Latest release and pre-release WinSW binaries are available on &lt;a href=&#34;https://github.com/winsw/winsw/releases&#34;&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternative sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CI builds are available on &lt;a href=&#34;https://dev.azure.com/winsw/winsw/_build?definitionId=1&#34;&gt;Azure Pipelines&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/WinSW/&#34;&gt;NuGet&lt;/a&gt;. (2.x)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jenkinsci/winsw-maven-packaging&#34;&gt;Maven packaging&lt;/a&gt; for executables, hosted by the &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins project&lt;/a&gt;. Binaries are available &lt;a href=&#34;https://repo.jenkins-ci.org/releases/com/sun/winsw/winsw/&#34;&gt;here&lt;/a&gt;. (2.x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Use WinSW as a global tool&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take &lt;em&gt;WinSW.exe&lt;/em&gt; or &lt;em&gt;WinSW.zip&lt;/em&gt; from the distribution.&lt;/li&gt; &#xA; &lt;li&gt;Write &lt;em&gt;myapp.xml&lt;/em&gt; (see the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&#34;&gt;XML config file specification&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/samples&#34;&gt;samples&lt;/a&gt; for more details).&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&#34;&gt;&lt;code&gt;winsw install myapp.xml [options]&lt;/code&gt;&lt;/a&gt; to install the service.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&#34;&gt;&lt;code&gt;winsw start myapp.xml&lt;/code&gt;&lt;/a&gt; to start the service.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#status-command&#34;&gt;&lt;code&gt;winsw status myapp.xml&lt;/code&gt;&lt;/a&gt; to see if your service is up and running.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Use WinSW as a bundled tool&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take &lt;em&gt;WinSW.exe&lt;/em&gt; or &lt;em&gt;WinSW.zip&lt;/em&gt; from the distribution, and rename the &lt;em&gt;.exe&lt;/em&gt; to your taste (such as &lt;em&gt;myapp.exe&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Write &lt;em&gt;myapp.xml&lt;/em&gt; (see the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&#34;&gt;XML config file specification&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/samples&#34;&gt;samples&lt;/a&gt; for more details).&lt;/li&gt; &#xA; &lt;li&gt;Place those two files side by side, because that&#39;s how WinSW discovers its co-related configuration.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&#34;&gt;&lt;code&gt;myapp.exe install [options]&lt;/code&gt;&lt;/a&gt; to install the service.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&#34;&gt;&lt;code&gt;myapp.exe start&lt;/code&gt;&lt;/a&gt; to start the service.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Sample configuration file&lt;/h3&gt; &#xA;&lt;p&gt;You write the configuration file that defines your service. The example below is a primitive example being used in the Jenkins project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;service&amp;gt;&#xA;  &amp;lt;id&amp;gt;jenkins&amp;lt;/id&amp;gt;&#xA;  &amp;lt;name&amp;gt;Jenkins&amp;lt;/name&amp;gt;&#xA;  &amp;lt;description&amp;gt;This service runs Jenkins continuous integration system.&amp;lt;/description&amp;gt;&#xA;  &amp;lt;env name=&#34;JENKINS_HOME&#34; value=&#34;%BASE%&#34;/&amp;gt;&#xA;  &amp;lt;executable&amp;gt;java&amp;lt;/executable&amp;gt;&#xA;  &amp;lt;arguments&amp;gt;-Xrs -Xmx256m -jar &#34;%BASE%\jenkins.war&#34; --httpPort=8080&amp;lt;/arguments&amp;gt;&#xA;  &amp;lt;log mode=&#34;roll&#34;&amp;gt;&amp;lt;/log&amp;gt;&#xA;&amp;lt;/service&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The full specification of the configuration file is available &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&#34;&gt;here&lt;/a&gt;. You can find more samples &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;WinSW is being managed by the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&#34;&gt;XML configuration file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your renamed &lt;em&gt;WinSW.exe&lt;/em&gt; binary also accepts the following commands:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&#34;&gt;install&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Installs the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#uninstall-command&#34;&gt;uninstall&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uninstalls the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&#34;&gt;start&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#stop-command&#34;&gt;stop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stops the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#restart-command&#34;&gt;restart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stops and then starts the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#status-command&#34;&gt;status&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Checks the status of the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#refresh-command&#34;&gt;refresh&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Refreshes the service properties without reinstallation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#customize-command&#34;&gt;customize&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Customizes the wrapper executable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;Experimental commands.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Experimental commands:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-ps-command&#34;&gt;dev ps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Draws the process tree associated with the service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-kill-command&#34;&gt;dev kill&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Terminates the service if it has stopped responding.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-list-command&#34;&gt;dev list&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lists services managed by the current executable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Most commands require Administrator privileges to execute. WinSW will prompt for UAC in non-elevated sessions.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/migrate-to-3-x.md&#34;&gt;Migrate to WinSW 3.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configuration: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&#34;&gt;XML configuration file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/logging-and-error-reporting.md&#34;&gt;Logging and error reporting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/extensions/extensions.md&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use cases: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/self-restarting-service.md&#34;&gt;Self-restarting services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/docs/deferred-file-operations.md&#34;&gt;Deferred file operations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! See the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;WinSW is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/winsw/winsw/v3/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unity-Technologies/com.unity.demoteam.hair</title>
    <updated>2022-08-12T01:35:08Z</updated>
    <id>tag:github.com,2022-08-12:/Unity-Technologies/com.unity.demoteam.hair</id>
    <link href="https://github.com/Unity-Technologies/com.unity.demoteam.hair" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An integrated solution for authoring / importing / simulating / rendering strand-based hair in Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Package: com.unity.demoteam.hair&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Unity-Technologies/com.unity.demoteam.hair/master/Documentation~/Images/header_crop.png&#34; alt=&#34;Header&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;justify&#34;&gt;&#xA; An integrated solution for authoring / importing / simulating / rendering strand-based hair in Unity. Built from the ground up with Unity users in mind, and evolved and hardened during the production of &#39;Enemies&#39;, the hair system is applicable not only to realistic digital humans, but also to more stylized content and games. It allows users to easily create &#39;Hair Assets&#39;, either from grooms from external DCC tools (through the alembic file format for curve data), or through simple built-in procedural generation tools (e.g. scatter x amount of hairs on a mesh or other primitive, or using a custom generator). Using a fast and flexible GPU-based solver that works on both strand- and volume-information, the system enables users to interactively set up ‘Hair Instances’ within scenes, and then see and interact with those instances as they are simulated and rendered in real time.&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unity 2020.2.0f1 +&lt;/li&gt; &#xA; &lt;li&gt;Compute shader enabled platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Authoring&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Import grooms from external DCC tools through the alembic file format (.abc) [ &lt;em&gt;depends on &lt;strong&gt;com.unity.formats.alembic &amp;gt;= 2.2.2&lt;/strong&gt;&lt;/em&gt; ]&lt;/li&gt; &#xA;   &lt;li&gt;Make procedural grooms in just a few clicks &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Scatter strands on built-in primitives, or on user specified meshes&lt;/li&gt; &#xA;     &lt;li&gt;Shape strands using simple parameters like length and curl&lt;/li&gt; &#xA;     &lt;li&gt;Plug in your own generators for custom placement&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Clustering / Level of detail &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Build clusters and LOD chain automatically from spatial relationships&lt;/li&gt; &#xA;     &lt;li&gt;Can also assign artist-provided clump maps + optionally refine them&lt;/li&gt; &#xA;     &lt;li&gt;Supports root-, strand-, and simplified strand-level clusters&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Skinning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Easily attach strand roots to skinned geometry in a scene [ &lt;em&gt;depends on &lt;strong&gt;com.unity.demoteam.digital-human &amp;gt;= 0.1.1-preview&lt;/strong&gt;&lt;/em&gt; ]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Simulation&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strand-based solver supporting tens of thousands of individual strands&lt;/li&gt; &#xA;   &lt;li&gt;Solver also adds volume-based quantities such as density and pressure &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Uses physical strand diameter, physical strand margin&lt;/li&gt; &#xA;     &lt;li&gt;Applies pressure to preserve the volume of a groom &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Allows targeting uniform density&lt;/li&gt; &#xA;       &lt;li&gt;Allows targeting initial pose density&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Applies pressure to soften strand-strand collisions&lt;/li&gt; &#xA;     &lt;li&gt;Exposes directional opacity to HDRP physical shading model&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Fully configurable set of constraints &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Boundary collision w/ friction&lt;/li&gt; &#xA;     &lt;li&gt;Particle-particle distance (soft, hard)&lt;/li&gt; &#xA;     &lt;li&gt;Particle-root distance&lt;/li&gt; &#xA;     &lt;li&gt;Local bend limiter (&amp;lt;, &amp;gt;, =)&lt;/li&gt; &#xA;     &lt;li&gt;Local shape&lt;/li&gt; &#xA;     &lt;li&gt;Global position&lt;/li&gt; &#xA;     &lt;li&gt;Global rotation&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Level of detail support &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows simulating partial set of strands (e.g. at a distance, or for art reasons)&lt;/li&gt; &#xA;     &lt;li&gt;Volume-based effects also work for partial set of strands&lt;/li&gt; &#xA;     &lt;li&gt;Seamless LOD blending while simulation is running&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rendering&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports all current rendering pipelines &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Built-in RP&lt;/li&gt; &#xA;     &lt;li&gt;HDRP&lt;/li&gt; &#xA;     &lt;li&gt;URP&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Easily build your own hair materials &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Add the ‘HairVertex’ node to any Shader Graph to read the simulation data&lt;/li&gt; &#xA;     &lt;li&gt;Add the &#39;HairVolume&#39; node to access simulation volume data like density&lt;/li&gt; &#xA;     &lt;li&gt;(&lt;strong&gt;Planned&lt;/strong&gt;) Optionally, assign generic materials as the cost of serializing strands to generic mesh [ &lt;em&gt;will depend on &lt;strong&gt;Unity &amp;gt;= 2021.2&lt;/strong&gt; for vertex buffer access&lt;/em&gt; ]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Multiple modes of rendering &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Render strands as simple line primitives&lt;/li&gt; &#xA;     &lt;li&gt;Render strands as view facing triangle strips w/ tangent space normals&lt;/li&gt; &#xA;     &lt;li&gt;Render high quality strands using the upcoming compute-based HDRP hair renderer [ &lt;em&gt;depends on &lt;strong&gt;Unity &amp;gt;= 2023.1&lt;/strong&gt;&lt;/em&gt; ]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-ui-giturl.html&#34;&gt;&lt;em&gt;Add package from git URL&lt;/em&gt;&lt;/a&gt; (in the Package Manager):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;https://github.com/Unity-Technologies/com.unity.demoteam.hair.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;... or declare the package as a git dependency in &lt;code&gt;Packages/manifest.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;dependencies&#34;: {&#xA;    &#34;com.unity.demoteam.hair&#34;: &#34;https://github.com/Unity-Technologies/com.unity.demoteam.hair.git&#34;,&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video: &lt;a href=&#34;https://www.youtube.com/watch?v=eXYUNrgqWUU&#34;&gt;Enemies – real-time cinematic teaser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Video: &lt;a href=&#34;https://www.youtube.com/watch?v=KpPx_lvthBQ&#34;&gt;Lion: A glimpse of the future with Unity Art Tools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Bender et al. 2015] Position-Based Simulation Methods in Computer Graphics&lt;/li&gt; &#xA; &lt;li&gt;[Bridson and Müller-Fischer 2007] Fluid Simulation SIGGRAPH 2007 Course Notes&lt;/li&gt; &#xA; &lt;li&gt;[Gibou et al. 2002] A Second Order Accurate Symmetric Discretization of the Poisson Equation on Irregular Domains&lt;/li&gt; &#xA; &lt;li&gt;[Harris 2004] Fast Fluid Dynamics Simulation on the GPU&lt;/li&gt; &#xA; &lt;li&gt;[Kelager et al. 2010] A Triangle Bending Constraint Model for Position-Based Dynamics&lt;/li&gt; &#xA; &lt;li&gt;[Kim et al. 2012] Long Range Attachments - A Method to Simulate Inextensible Clothing in Computer Games&lt;/li&gt; &#xA; &lt;li&gt;[Kugelstadt and Schömer 2016] Position and Orientation Based Cosserat Rods&lt;/li&gt; &#xA; &lt;li&gt;[Losasso et al. 2008] Two-Way Coupled SPH and Particle Level Set Fluid Simulation&lt;/li&gt; &#xA; &lt;li&gt;[Macklin et al. 2014] Unified particle physics for real-time application&lt;/li&gt; &#xA; &lt;li&gt;[Macklin et al. 2019] Small Steps in Physics Simulation&lt;/li&gt; &#xA; &lt;li&gt;[McAdams et al. 2009] Detail Preserving Continuum Simulation of Straight Hair&lt;/li&gt; &#xA; &lt;li&gt;[Müller et al. 2006] Position Based Dynamics&lt;/li&gt; &#xA; &lt;li&gt;[Müller et al. 2012] Fast Simulation of Inextensible Hair and Fur&lt;/li&gt; &#xA; &lt;li&gt;[Petrovic et al. 2005] Volumetric Methods for Simulation and Rendering of Hair&lt;/li&gt; &#xA; &lt;li&gt;[Zhu and Bridson 2005] Animating Sand as a Fluid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Unity-Technologies/com.unity.demoteam.digital-human&#34;&gt;https://github.com/Unity-Technologies/com.unity.demoteam.digital-human&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Klocman/Bulk-Crap-Uninstaller</title>
    <updated>2022-08-12T01:35:08Z</updated>
    <id>tag:github.com,2022-08-12:/Klocman/Bulk-Crap-Uninstaller</id>
    <link href="https://github.com/Klocman/Bulk-Crap-Uninstaller" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remove large amounts of unwanted applications quickly.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://klocmansoftware.weebly.com/donate.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-brightgreen.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Klocman/Bulk-Crap-Uninstaller/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/klocman/Bulk-Crap-Uninstaller.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Klocman/Bulk-Crap-Uninstaller/raw/master/Licence.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/klocman/Bulk-Crap-Uninstaller.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/Klocman/Bulk-Crap-Uninstaller/discussions/289&#34;&gt;&lt;span&gt;⚠&lt;/span&gt; Looking for maintainers &lt;span&gt;⚠&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Bulk Crap Uninstaller&lt;/h1&gt; &#xA;&lt;p&gt;Bulk Crap Uninstaller (or BCUninstaller) is a free (as in speech) program uninstaller. It excels at removing large amounts of applications with minimal user input. It can clean up leftovers, detect orphaned applications, run uninstallers according to premade lists, and much more! Even though BCU was made with IT pros in mind, by default it is so straight-forward that anyone can use it.&lt;/p&gt; &#xA;&lt;p&gt;BCU is fully compatible with Windows Store Apps, Steam, Windows Features and has special support for many uninstalling systems (NSIS, InnoSetup, Msiexec, and many other). Check below for a full list of functions.&lt;/p&gt; &#xA;&lt;p&gt;Since BCUninstaller 5.0 you need Windows 7 or newer to run it (if you get an error on startup then try running Windows Update). If you want to use BCUninstaller on Vista or older, check the &lt;a href=&#34;https://github.com/Klocman/Bulk-Crap-Uninstaller/tree/legacy-4.x&#34;&gt;legacy 4.x branch&lt;/a&gt; or download the latest available 4.x release.&lt;/p&gt; &#xA;&lt;p&gt;Bulk Crap Uninstaller is licensed under Apache 2.0 open source license, and can be used in both private and commercial settings for free and with no obligations, as long as no conditions of the license are broken.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bcuninstaller.com/&#34;&gt;Visit the official homepage&lt;/a&gt; to see the full list of quirks and features!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/Klocman/Bulk-Crap-Uninstaller/raw/master/doc/BCU_manual.html&#34;&gt;Read the online documentation&lt;/a&gt; if you have any questions or issues (the help file included with all releases). If you didn&#39;t find an answer to your question, feel free to &lt;a href=&#34;https://github.com/Klocman/Bulk-Crap-Uninstaller/issues/new&#34;&gt;open a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.fosshub.com/Bulk-Crap-Uninstaller.html&#34;&gt;Download from FossHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://osdn.net/projects/bulk-crap-uninstaller/releases/latest-release&#34;&gt;Download from OSDN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How can I help?&lt;/h2&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;https://raw.githubusercontent.com/Klocman/Bulk-Crap-Uninstaller/master/CONTRIBUTING.md&#34;&gt;contribution&lt;/a&gt; notes!&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Any modern version of Visual Studio should work. You might need to download &lt;a href=&#34;https://github.com/Klocman/UpdateSystem&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;https://sourceforge.net/p/kloctoolslibrary/&#34;&gt;this &lt;/a&gt; library separately. If you don&#39;t want to make any changes in them you can point the projects to .dll files from the latest release of BCU instead.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Klocman/Bulk-Crap-Uninstaller/gh-pages/assets/1.png&#34; alt=&#34;preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Klocman/Bulk-Crap-Uninstaller/gh-pages/assets/4.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>