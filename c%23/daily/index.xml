<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-24T01:29:40Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xoofx/markdig</title>
    <updated>2022-12-24T01:29:40Z</updated>
    <id>tag:github.com,2022-12-24:/xoofx/markdig</id>
    <link href="https://github.com/xoofx/markdig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast, powerful, CommonMark compliant, extensible Markdown processor for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Markdig &lt;a href=&#34;https://github.com/lunet-io/markdig/actions&#34;&gt;&lt;img src=&#34;https://github.com/lunet-io/markdig/workflows/ci/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/xoofx/markdig?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/xoofx/markdig/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Markdig/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Markdig.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FRGHXBTP442JL&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;160px&#34; height=&#34;160px&#34; src=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/img/markdig.png&#34;&gt; &#xA;&lt;p&gt;Markdig is a fast, powerful, &lt;a href=&#34;http://commonmark.org/&#34;&gt;CommonMark&lt;/a&gt; compliant, extensible Markdown processor for .NET.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: The repository is under construction. There will be a dedicated website and proper documentation at some point!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can &lt;strong&gt;try Markdig online&lt;/strong&gt; and compare it to other implementations on &lt;a href=&#34;https://babelmark.github.io/?text=Hello+**Markdig**!&#34;&gt;babelmark3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Very fast parser and html renderer&lt;/strong&gt; (no-regexp), very lightweight in terms of GC pressure. See benchmarks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Abstract Syntax Tree&lt;/strong&gt; with precise source code location for syntax tree, useful when building a Markdown editor. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Checkout &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/eaab33c3-437b-4918-8354-872dfe5d1bfe&#34;&gt;MarkdownEditor for Visual Studio&lt;/a&gt; powered by Markdig!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Converter to &lt;strong&gt;HTML&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Passing more than &lt;strong&gt;600+ tests&lt;/strong&gt; from the latest &lt;a href=&#34;http://spec.commonmark.org/&#34;&gt;CommonMark specs (0.30)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Includes all the core elements of CommonMark: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;including &lt;strong&gt;GFM fenced code blocks&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt; architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Even the core Markdown/CommonMark parsing is pluggable, so it allows to disable builtin Markdown/Commonmark parsing (e.g &lt;a href=&#34;https://github.com/lunet-io/markdig/raw/7964bd0160d4c18e4155127a4c863d61ebd8944a/src/Markdig/MarkdownExtensions.cs#L306&#34;&gt;Disable HTML parsing&lt;/a&gt;) or change behaviour (e.g change matching &lt;code&gt;#&lt;/code&gt; of a headers with &lt;code&gt;@&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig/Roundtrip.md&#34;&gt;&lt;strong&gt;Roundtrip support&lt;/strong&gt;&lt;/a&gt;: Parses trivia (whitespace, newlines and other characters) to support lossless parse â­¢ render roundtrip. This enables changing markdown documents without introducing undesired trivia changes.&lt;/li&gt; &#xA; &lt;li&gt;Built-in with &lt;strong&gt;20+ extensions&lt;/strong&gt;, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2 kind of tables: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/PipeTableSpecs.md&#34;&gt;&lt;strong&gt;Pipe tables&lt;/strong&gt;&lt;/a&gt; (inspired from GitHub tables and &lt;a href=&#34;http://pandoc.org/README.html#extension-pipe_tables&#34;&gt;PanDoc - Pipe Tables&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/GridTableSpecs.md&#34;&gt;&lt;strong&gt;Grid tables&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;http://pandoc.org/README.html#extension-grid_tables&#34;&gt;Pandoc - Grid Tables&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/EmphasisExtraSpecs.md&#34;&gt;&lt;strong&gt;Extra emphasis&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;http://pandoc.org/README.html#strikeout&#34;&gt;Pandoc - Emphasis&lt;/a&gt; and &lt;a href=&#34;https://markdown-it.github.io/&#34;&gt;Markdown-it&lt;/a&gt;) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;strike through &lt;code&gt;~~&lt;/code&gt;,&lt;/li&gt; &#xA;     &lt;li&gt;Subscript &lt;code&gt;~&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Superscript &lt;code&gt;^&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Inserted &lt;code&gt;++&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Marked &lt;code&gt;==&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/GenericAttributesSpecs.md&#34;&gt;&lt;strong&gt;Special attributes&lt;/strong&gt;&lt;/a&gt; or attached HTML attributes (inspired from &lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#spe-attr&#34;&gt;PHP Markdown Extra - Special Attributes&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/DefinitionListSpecs.md&#34;&gt;&lt;strong&gt;Definition lists&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#def-list&#34;&gt;PHP Markdown Extra - Definitions Lists&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FootnotesSpecs.md&#34;&gt;&lt;strong&gt;Footnotes&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#footnotes&#34;&gt;PHP Markdown Extra - Footnotes&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AutoIdentifierSpecs.md&#34;&gt;&lt;strong&gt;Auto-identifiers&lt;/strong&gt;&lt;/a&gt; for headings (similar to &lt;a href=&#34;http://pandoc.org/README.html#extension-auto_identifiers&#34;&gt;Pandoc - Auto Identifiers&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AutoLinks.md&#34;&gt;&lt;strong&gt;Auto-links&lt;/strong&gt;&lt;/a&gt; generates links if a text starts with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;ftp://&lt;/code&gt; or &lt;code&gt;mailto:&lt;/code&gt; or &lt;code&gt;www.xxx.yyy&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/TaskListSpecs.md&#34;&gt;&lt;strong&gt;Task Lists&lt;/strong&gt;&lt;/a&gt; inspired from &lt;a href=&#34;https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments&#34;&gt;Github Task lists&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/ListExtraSpecs.md&#34;&gt;&lt;strong&gt;Extra bullet lists&lt;/strong&gt;&lt;/a&gt;, supporting alpha bullet &lt;code&gt;a.&lt;/code&gt; &lt;code&gt;b.&lt;/code&gt; and roman bullet (&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;ii&lt;/code&gt;...etc.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/MediaSpecs.md&#34;&gt;&lt;strong&gt;Media support&lt;/strong&gt;&lt;/a&gt; for media url (youtube, vimeo, mp4...etc.) (inspired from this &lt;a href=&#34;https://talk.commonmark.org/t/embedded-audio-and-video/441&#34;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AbbreviationSpecs.md&#34;&gt;&lt;strong&gt;Abbreviations&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#abbr&#34;&gt;PHP Markdown Extra - Abbreviations&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&#34;&gt;&lt;strong&gt;Citation&lt;/strong&gt;&lt;/a&gt; text by enclosing &lt;code&gt;&#34;&#34;...&#34;&#34;&lt;/code&gt; (inspired by this &lt;a href=&#34;https://talk.commonmark.org/t/referencing-creative-works-with-cite/892&#34;&gt;CommonMark discussion &lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/CustomContainerSpecs.md&#34;&gt;&lt;strong&gt;Custom containers&lt;/strong&gt;&lt;/a&gt; similar to fenced code block &lt;code&gt;:::&lt;/code&gt; for generating a proper &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; instead (inspired by this &lt;a href=&#34;https://talk.commonmark.org/t/custom-container-for-block-and-inline/2051&#34;&gt;CommonMark discussion &lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&#34;&gt;&lt;strong&gt;Figures&lt;/strong&gt;&lt;/a&gt; (inspired from this &lt;a href=&#34;https://talk.commonmark.org/t/image-tag-should-expand-to-figure-when-used-with-title/265/5&#34;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&#34;&gt;&lt;strong&gt;Footers&lt;/strong&gt;&lt;/a&gt; (inspired from this &lt;a href=&#34;https://talk.commonmark.org/t/syntax-for-footer/2070&#34;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/MathSpecs.md&#34;&gt;&lt;strong&gt;Mathematics&lt;/strong&gt;&lt;/a&gt;/Latex extension by enclosing &lt;code&gt;$$&lt;/code&gt; for block and &lt;code&gt;$&lt;/code&gt; for inline math (inspired from this &lt;a href=&#34;https://talk.commonmark.org/t/mathematics-extension/457/31&#34;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/HardlineBreakSpecs.md&#34;&gt;&lt;strong&gt;Soft lines as hard lines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/EmojiSpecs.md&#34;&gt;&lt;strong&gt;Emoji&lt;/strong&gt;&lt;/a&gt; support (inspired from &lt;a href=&#34;https://markdown-it.github.io/&#34;&gt;Markdown-it&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/SmartyPantsSpecs.md&#34;&gt;&lt;strong&gt;SmartyPants&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&#34;https://daringfireball.net/projects/smartypants/&#34;&gt;Daring Fireball - SmartyPants&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/BootstrapSpecs.md&#34;&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt;&lt;/a&gt; class (to output bootstrap class)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/DiagramsSpecs.md&#34;&gt;&lt;strong&gt;Diagrams&lt;/strong&gt;&lt;/a&gt; extension whenever a fenced code block contains a special keyword, it will be converted to a div block with the content as-is (currently, supports &lt;a href=&#34;https://knsv.github.io/mermaid/&#34;&gt;&lt;code&gt;mermaid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/skanaar/nomnoml&#34;&gt;&lt;code&gt;nomnoml&lt;/code&gt;&lt;/a&gt; diagrams)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/YamlSpecs.md&#34;&gt;&lt;strong&gt;YAML Front Matter&lt;/strong&gt;&lt;/a&gt; to parse without evaluating the front matter and to discard it from the HTML output (typically used for previewing without the front matter in MarkdownEditor)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/JiraLinks.md&#34;&gt;&lt;strong&gt;JIRA links&lt;/strong&gt;&lt;/a&gt; to automatically generate links for JIRA project references (Thanks to @clarkd: &lt;a href=&#34;https://github.com/clarkd/MarkdigJiraLinker&#34;&gt;https://github.com/clarkd/MarkdigJiraLinker&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Starting with Markdig version &lt;code&gt;0.20.0+&lt;/code&gt;, Markdig is compatible only with &lt;code&gt;NETStandard 2.0&lt;/code&gt;, &lt;code&gt;NETStandard 2.1&lt;/code&gt;, &lt;code&gt;NETCoreApp 2.1&lt;/code&gt; and &lt;code&gt;NETCoreApp 3.1&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are looking for support for an old .NET Framework 3.5 or 4.0, you can download Markdig &lt;code&gt;0.18.3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Third Party Extensions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kryptos-FR/markdig.wpf&#34;&gt;&lt;strong&gt;WPF/XAML Markdown Renderer&lt;/strong&gt;: &lt;code&gt;markdig.wpf&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neolithos/NeoMarkdigXaml&#34;&gt;&lt;strong&gt;WPF/XAML Markdown Renderer&lt;/strong&gt;: &lt;code&gt;Neo.Markdig.Xaml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RichardSlater/Markdig.SyntaxHighlighting&#34;&gt;&lt;strong&gt;Syntax highlighting&lt;/strong&gt;: &lt;code&gt;Markdig.SyntaxHighlighting&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbaldoumas/markdown-colorcode&#34;&gt;&lt;strong&gt;Syntax highlighting using ColorCode-Universal&lt;/strong&gt;: &lt;code&gt;Markdown.ColorCode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ilich/Markdig.Prism&#34;&gt;&lt;strong&gt;Syntax highlighting using Prism.js&lt;/strong&gt;: &lt;code&gt;WebStoating.Markdig.Prism&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/macaba/Markdig.Extensions.ScriptCs&#34;&gt;&lt;strong&gt;Embedded C# scripting&lt;/strong&gt;: &lt;code&gt;Markdig.Extensions.ScriptCs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The repository is under construction. There will be a dedicated website and proper documentation at some point!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;While there is not yet a dedicated documentation, you can find from the &lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/readme.md&#34;&gt;specs documentation&lt;/a&gt; how to use these extensions.&lt;/p&gt; &#xA;&lt;p&gt;In the meantime, you can have a &#34;behind the scene&#34; article about Markdig in my blog post &lt;a href=&#34;http://xoofx.com/blog/2016/06/13/implementing-a-markdown-processor-for-dotnet/&#34;&gt;&#34;Implementing a Markdown Engine for .NET&#34;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Markdig is available as a NuGet package: &lt;a href=&#34;https://www.nuget.org/packages/Markdig/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Markdig.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also &lt;a href=&#34;https://www.nuget.org/packages/Markdig.Signed/&#34;&gt;Markdig.Signed&lt;/a&gt; NuGet package provides signed assemblies.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The main entry point for the API is the &lt;code&gt;Markdig.Markdown&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;p&gt;By default, without any options, Markdig is using the plain CommonMark parser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var result = Markdown.ToHtml(&#34;This is a text with some *emphasis*&#34;);&#xA;Console.WriteLine(result);   // prints: &amp;lt;p&amp;gt;This is a text with some &amp;lt;em&amp;gt;emphasis&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to activate most of all advanced extensions (except Emoji, SoftLine as HardLine, Bootstrap, YAML Front Matter, JiraLinks and SmartyPants)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Configure the pipeline with all advanced extensions active&#xA;var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();&#xA;var result = Markdown.ToHtml(&#34;This is a text with some *emphasis*&#34;, pipeline);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnetfiddle.net/GoZXyI&#34;&gt;Try it online!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can have a look at the &lt;a href=&#34;https://github.com/lunet-io/markdig/raw/master/src/Markdig/MarkdownExtensions.cs&#34;&gt;MarkdownExtensions&lt;/a&gt; that describes all actionable extensions (by modifying the MarkdownPipeline)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated. For detailed contributing guidelines, please see &lt;a href=&#34;https://raw.githubusercontent.com/xoofx/markdig/master/contributing.md&#34;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;In order to build Markdig, you need to install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download&#34;&gt;.NET 6.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is released under the &lt;a href=&#34;https://github.com/lunet-io/markdig/raw/master/license.txt&#34;&gt;BSD-Clause 2 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarking&lt;/h2&gt; &#xA;&lt;p&gt;The latest benchmark was collected on April 23 2022, against the following implementations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lunet-io/markdig&#34;&gt;Markdig&lt;/a&gt; (version: 0.30.2): itself&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commonmark/cmark&#34;&gt;cmark&lt;/a&gt; (version: 0.30.2): Reference C implementation of CommonMark, no support for extensions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Knagis/CommonMark.NET&#34;&gt;CommonMark.NET(master)&lt;/a&gt; (version: 0.15.1): CommonMark implementation for .NET, no support for extensions, port of cmark, deprecated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kiri-rin/markdownsharp&#34;&gt;MarkdownSharp&lt;/a&gt; (version: 2.0.5): Open source C# implementation of Markdown processor, as featured previously on Stack Overflow, regexp based.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;// * Summary *&#xA;&#xA;BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000&#xA;AMD Ryzen 9 5950X, 1 CPU, 32 logical and 16 physical cores&#xA;.NET SDK=6.0.202&#xA;  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT&#xA;  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT&#xA;&#xA;&#xA;|            Method |       Mean |     Error |    StdDev |&#xA;|------------------ |-----------:|----------:|----------:|&#xA;|           markdig |   1.979 ms | 0.0221 ms | 0.0185 ms |&#xA;|             cmark |   2.571 ms | 0.0081 ms | 0.0076 ms |&#xA;|    CommonMark.NET |   2.016 ms | 0.0169 ms | 0.0158 ms |&#xA;|     MarkdownSharp | 221.455 ms | 1.4442 ms | 1.3509 ms |&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Markdig is roughly &lt;strong&gt;x100 times faster than MarkdownSharp&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20% faster than the reference cmark C implementation&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you are using this library and find it useful for your project, please consider a donation for it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FRGHXBTP442JL&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the fantastic work done by &lt;a href=&#34;http://johnmacfarlane.net/&#34;&gt;John Mac Farlane&lt;/a&gt; for the CommonMark specs and all the people involved in making Markdown a better standard!&lt;/p&gt; &#xA;&lt;p&gt;This project would not have been possible without this huge foundation.&lt;/p&gt; &#xA;&lt;p&gt;Thanks also to the project &lt;a href=&#34;https://github.com/PerfDotNet/BenchmarkDotNet&#34;&gt;BenchmarkDotNet&lt;/a&gt; that makes benchmarking so easy to setup!&lt;/p&gt; &#xA;&lt;p&gt;Some decoding part (e.g HTML &lt;a href=&#34;https://github.com/lunet-io/markdig/raw/master/src/Markdig/Helpers/EntityHelper.cs&#34;&gt;EntityHelper.cs&lt;/a&gt;) have been re-used from &lt;a href=&#34;https://github.com/Knagis/CommonMark.NET&#34;&gt;CommonMark.NET&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the work done by @clarkd on the JIRA Link extension (&lt;a href=&#34;https://github.com/clarkd/MarkdigJiraLinker&#34;&gt;https://github.com/clarkd/MarkdigJiraLinker&lt;/a&gt;), now included with this project!&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Alexandre MUTEL aka &lt;a href=&#34;http://xoofx.com&#34;&gt;xoofx&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unity-Technologies/ECS-Network-Racing-Sample</title>
    <updated>2022-12-24T01:29:40Z</updated>
    <id>tag:github.com,2022-12-24:/Unity-Technologies/ECS-Network-Racing-Sample</id>
    <link href="https://github.com/Unity-Technologies/ECS-Network-Racing-Sample" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ECS multiplayer racing sample to showcase using Unity Entities and netcode with best practices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ECS Network Racing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3436237/209012220-f888baf2-568b-4c06-bda2-8146333c76d6.jpg&#34; alt=&#34;ECSNetworkRacingHeader&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires LFS, please clone the repository using LFS, do not download as a ZIP.&lt;/li&gt; &#xA; &lt;li&gt;Requires Unity 2022.2.0b8 or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current tested version 2022.2.1f1 &lt;a href=&#34;https://unity.com/releases/editor/whats-new/2022.2.1#release-notes&#34;&gt;https://unity.com/releases/editor/whats-new/2022.2.1#release-notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Unity Hub URL&lt;/h1&gt; &#xA;&lt;p&gt;unityhub://2022.2.1f1/4fead5835099&lt;/p&gt; &#xA;&lt;h1&gt;Running the demo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Multiplayer &amp;gt; Window: PlayMode Tools&lt;/li&gt; &#xA; &lt;li&gt;Select PlayMode Type -&amp;gt; Client Server&lt;/li&gt; &#xA; &lt;li&gt;Open scene &#34;Project/Assets/Scenes/MainMenu.unity&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose your car for the race.&lt;/li&gt; &#xA; &lt;li&gt;When you are in the lobby you can wait for other players or just press the Left Menu button and then Start button to start the race.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Known Issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using the Editor as Client Only, and running the game from the MainMenu scene, the Auto Connect Address field should be left empty to avoid a conflict with the MainMenu connect address.&lt;/li&gt; &#xA; &lt;li&gt;Build times are taking much longer than expected. Since all the Shader Variants are being compiled, and not only the ones being used in the project.&lt;/li&gt; &#xA; &lt;li&gt;For the Dedicated Server builds, it is taking shaders and models that are only used in the client, this increases the size of the build. We are working on optimizing the tools to create more optimal Dedicated Server builds.&lt;/li&gt; &#xA; &lt;li&gt;Mobile IL2CPP builds only works with Managed Stripping Level set to Minimal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Controls&lt;/h1&gt; &#xA;&lt;p&gt;Keyboard:&lt;/p&gt; &#xA;&lt;p&gt;Up Arrow / W: Throttle Down Arrow / S: Brake / Reverse Left and Right Arrows / A and D: Car Steering&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Netcode for Entities&lt;/li&gt; &#xA; &lt;li&gt;Baking&lt;/li&gt; &#xA; &lt;li&gt;Idiomatic Foreach&lt;/li&gt; &#xA; &lt;li&gt;Aspects&lt;/li&gt; &#xA; &lt;li&gt;ISystem&lt;/li&gt; &#xA; &lt;li&gt;Unity Physics&lt;/li&gt; &#xA; &lt;li&gt;Jobs&lt;/li&gt; &#xA; &lt;li&gt;Burst&lt;/li&gt; &#xA; &lt;li&gt;Vivox&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>