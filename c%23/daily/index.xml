<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:30:55Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HaveIBeenPwned/EmailAddressExtractor</title>
    <updated>2023-04-28T01:30:55Z</updated>
    <id>tag:github.com,2023-04-28:/HaveIBeenPwned/EmailAddressExtractor</id>
    <link href="https://github.com/HaveIBeenPwned/EmailAddressExtractor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A project to rapidly extract all email addresses from any files in a given path&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Have I Been Pwned Email Address Extractor&lt;/h1&gt; &#xA;&lt;p&gt;A project to rapidly extract all email addresses from any files in a given path&lt;/p&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;This project is intended to be a brand new open source version of a basic codebase I&#39;ve used for the better part of a decade to extract email addresses from data breaches before loading them into HIBP. Most breaches are in a .sql or .csv format either in a single file or multiple files within a folder and extraction follows a simple process:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extract all addresses via regex&lt;/li&gt; &#xA; &lt;li&gt;Convert them to lowercase&lt;/li&gt; &#xA; &lt;li&gt;Order them alphabetically&lt;/li&gt; &#xA; &lt;li&gt;Save them to an output file&lt;/li&gt; &#xA; &lt;li&gt;Create a report of how many unique addresses were in each file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The regex I&#39;ve used is as follows: &lt;code&gt;\b[a-zA-Z0-9\.\-_\+]+@[a-zA-Z0-9\.\-_]+\.[a-zA-Z]+\b&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.troyhunt.com/dont-trust-net-web-forms-email-regex/&#34;&gt;Email address validation via regex is hard&lt;/a&gt;, but it also doesn&#39;t need to be perfect for this use case. False positives are extremely rare and the impact is negligible, namely that a string that isn&#39;t a genuine address gets loaded into HIBP &lt;em&gt;or&lt;/em&gt; a genuine address of an unusual format gets loaded. For the most part, this regex can be summarised as &#34;stuff either side of an @ symbol with a TLD of alphas characters&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/troyhunt/status/1637966167548780544&#34;&gt;I&#39;ve reached out and asked for support&lt;/a&gt; and will get things kicked off via one or two key people then seek broader input. I&#39;m particularly interested in optimising the service across larger data sets and non text-based files, especially with the uptick of documents being dumped by ransomware crews. I&#39;ll start creating issues for the bits that need building.&lt;/p&gt; &#xA;&lt;h1&gt;Test data&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;ll generate some test data in different formats and drop those into this repository shortly.&lt;/p&gt; &#xA;&lt;h1&gt;Running the Address Extractor&lt;/h1&gt; &#xA;&lt;p&gt;Syntax: &lt;code&gt;AddressExtractor.exe -?&lt;/code&gt; Syntax: &lt;code&gt;AddressExtractor.exe -v&lt;/code&gt; Syntax: &lt;code&gt;AddressExtractor.exe &amp;lt;input [[... input]]&amp;gt; [-o output] [-r report]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-?&lt;/code&gt;, &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prints the command line syntax and options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;--version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prints the application version number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;input&lt;/td&gt; &#xA;   &lt;td&gt;One or more input filenames or directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--output&lt;/code&gt; output&lt;/td&gt; &#xA;   &lt;td&gt;Path and filename of the output file. Defaults to &#39;addresses_output.txt&#39;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--report&lt;/code&gt; report&lt;/td&gt; &#xA;   &lt;td&gt;Path and filename of the report file. Defaults to &#39;report.txt&#39;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--recursive&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable recursive mode for directories, which will search child directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-y&lt;/code&gt;, &lt;code&gt;--yes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automatically confirm prompts to CONTINUE without asking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>shapoco/calctus</title>
    <updated>2023-04-28T01:30:55Z</updated>
    <id>tag:github.com,2023-04-28:/shapoco/calctus</id>
    <link href="https://github.com/shapoco/calctus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calctus&lt;/h1&gt; &#xA;&lt;p&gt;A calculator for Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapoco/calctus/develop/img/ss.png&#34; alt=&#34;Screen Shot&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;â†’ See &lt;a href=&#34;https://github.com/shapoco/calctus/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Displays the evaluation value of a formula in text format.&lt;/li&gt; &#xA; &lt;li&gt;Decimal, hexadecimal, and binary numbers can be mixed.&lt;/li&gt; &#xA; &lt;li&gt;The formula history can be referenced with the up key.&lt;/li&gt; &#xA; &lt;li&gt;The formula history can be modified, and if so, the calculation results are regenerated.&lt;/li&gt; &#xA; &lt;li&gt;Some built-in constants and built-in functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Numeric Representations&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Representation&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Decimal&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;123&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hexadecimal&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;0x7b&lt;/code&gt;, &lt;code&gt;0x7B&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Octadecimal&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;0173&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Binary&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;0b1111011&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fraction&lt;span&gt;ðŸ†•&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;2:3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Character&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;&#39;A&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Date Time&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;#2022/34/56 12:34:56#&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web Color&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;#123&lt;/code&gt;, &lt;code&gt;#112233&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operators&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Symbol&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Precision&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Add, Sub, Mul, Div&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Integral Division&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;//&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Remainder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;%&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Power&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logical NOT&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;~&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logical AND&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logical OR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;|&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logical XOR&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;+|&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logical shift&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Arithmetic shift&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Embedded Functions&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Functions&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Precision&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Exponential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sqrt(x)&lt;/code&gt;, &lt;code&gt;log(x)&lt;/code&gt;, &lt;code&gt;log2(x)&lt;/code&gt;, &lt;code&gt;log10(x)&lt;/code&gt;, &lt;code&gt;clog2(x)&lt;/code&gt;, &lt;code&gt;clog10(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Trigonometric&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sin(x)&lt;/code&gt;, &lt;code&gt;cos(x)&lt;/code&gt;, &lt;code&gt;tan(x)&lt;/code&gt;,&lt;code&gt;asin(x)&lt;/code&gt;, &lt;code&gt;acos(x)&lt;/code&gt;, &lt;code&gt;atan(x)&lt;/code&gt;, &lt;code&gt;atan2(y, x)&lt;/code&gt;,&lt;code&gt;sinh(x)&lt;/code&gt;, &lt;code&gt;cosh(x)&lt;/code&gt;, &lt;code&gt;tanh(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Round&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;floor(x)&lt;/code&gt;, &lt;code&gt;ceil(x)&lt;/code&gt;, &lt;code&gt;trunc(x)&lt;/code&gt;, &lt;code&gt;round(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Absolute/Sign&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;abs(x)&lt;/code&gt;, &lt;code&gt;sign(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Max/Min&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;max(a, b)&lt;/code&gt;, &lt;code&gt;min(a, b)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GCD, LCM&lt;span&gt;ðŸ†•&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;gcd(a, b)&lt;/code&gt;, &lt;code&gt;lcm(a, b)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fractions&lt;span&gt;ðŸ†•&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;frac(x)&lt;/code&gt;, &lt;code&gt;frac(x,a)&lt;/code&gt;, &lt;code&gt;frac(x,a,b)&lt;/code&gt;, &lt;code&gt;real(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Representation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;dec(x)&lt;/code&gt;, &lt;code&gt;hex(x)&lt;/code&gt;, &lt;code&gt;bin(x)&lt;/code&gt;, &lt;code&gt;oct(x)&lt;/code&gt;, &lt;code&gt;char(x)&lt;/code&gt;, &lt;code&gt;datetime(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Date Time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;now()&lt;/code&gt;, &lt;code&gt;fromyears(x)&lt;/code&gt;, &lt;code&gt;fromdays(x)&lt;/code&gt;, &lt;code&gt;fromhours(x)&lt;/code&gt;, &lt;code&gt;fromminutes(x)&lt;/code&gt;, &lt;code&gt;fromseconds(x)&lt;/code&gt;, &lt;code&gt;toyears(x)&lt;/code&gt;, &lt;code&gt;todays(x)&lt;/code&gt;, &lt;code&gt;tohours(x)&lt;/code&gt;, &lt;code&gt;tominutes(x)&lt;/code&gt;, &lt;code&gt;toseconds(x)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Color&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;rgb(r,g,b)&lt;/code&gt;, &lt;code&gt;rgb(rgb)&lt;/code&gt;, &lt;code&gt;hsv2rgb(h,s,v)&lt;/code&gt;, &lt;code&gt;hsv2rgb_r(h,s,v)&lt;/code&gt;, &lt;code&gt;hsv2rgb_g(h,s,v)&lt;/code&gt;, &lt;code&gt;hsv2rgb_b(h,s,v)&lt;/code&gt;, &lt;code&gt;rgb2hsv_h(rgb)&lt;/code&gt;, &lt;code&gt;rgb2hsv_s(rgb)&lt;/code&gt;, &lt;code&gt;rgb2hsv_v(rgb)&lt;/code&gt;, &lt;code&gt;hsl2rgb(h,s,l)&lt;/code&gt;, &lt;code&gt;hsl2rgb_r(h,s,l)&lt;/code&gt;, &lt;code&gt;hsl2rgb_g(h,s,l)&lt;/code&gt;, &lt;code&gt;hsl2rgb_b(h,s,l)&lt;/code&gt;, &lt;code&gt;rgb2hsl_h(rgb)&lt;/code&gt;, &lt;code&gt;rgb2hsl_s(rgb)&lt;/code&gt;, &lt;code&gt;rgb2hsl_l(rgb)&lt;/code&gt;, &lt;code&gt;yuv2rgb(y,u,v)&lt;/code&gt;, &lt;code&gt;yuv2rgb(yuv)&lt;/code&gt;, &lt;code&gt;yuv2rgb_r(yuv)&lt;/code&gt;, &lt;code&gt;yuv2rgb_g(yuv)&lt;/code&gt;, &lt;code&gt;yuv2rgb_b(yuv)&lt;/code&gt;, &lt;code&gt;rgb2yuv(r,g,b)&lt;/code&gt;, &lt;code&gt;rgb2yuv(rgb)&lt;/code&gt;, &lt;code&gt;rgb2yuv_y(rgb)&lt;/code&gt;, &lt;code&gt;rgb2yuv_u(rgb)&lt;/code&gt;, &lt;code&gt;rgb2yuv_v(rgb)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;E-series&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rounding to the E-series value: &lt;code&gt;eXfloor(x)&lt;/code&gt;, &lt;code&gt;eXceil(x)&lt;/code&gt;, &lt;code&gt;eXround(x)&lt;/code&gt;&lt;br&gt;Calculation of voltage divider resistance: &lt;code&gt;eXratiol(x)&lt;/code&gt;, &lt;code&gt;eXratioh(x)&lt;/code&gt;&lt;br&gt; (&lt;code&gt;X&lt;/code&gt;=&lt;code&gt;3&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;12&lt;/code&gt;, &lt;code&gt;24&lt;/code&gt;, &lt;code&gt;48&lt;/code&gt;, &lt;code&gt;96&lt;/code&gt;, &lt;code&gt;192&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Constants&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Symbol&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;PI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;3.1415926535897931&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;2.7182818284590451&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;INT_MIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;-2,147,483,648&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;INT_MAX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;2,147,483,647&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;UINT_MIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;UINT_MAX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;4,294,967,295&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;LONG_MIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;-9,223,372,036,854,775,808&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;LONG_MAX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;9,223,372,036,854,775,807&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;ULONG_MIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;ULONG_MAX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;18,446,744,073,709,551,615&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DECIMAL_MIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;-79,228,162,514,264,337,593,543,950,335&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DECIMAL_MAX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;code&gt;79,228,162,514,264,337,593,543,950,335&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Variables&lt;/h3&gt; &#xA;&lt;p&gt;Variables can be assigned using the equal sign.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a = 2 [Return]&#xA;b = 3 [Return]&#xA;a * b [Return]&#xA;// --&amp;gt; Calctus answers 6.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RPN Operations&lt;span&gt;ðŸ†•&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If only an operator is entered, the expression is &#34;popped&#34; from the history and combined with that operator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1 [Return]&#xA;2 [Return]&#xA;+ [Return] // &#34;1&#34; and &#34;2&#34; replaced with &#34;1+2&#34;&#xA;3 [Return]&#xA;4 [Return]&#xA;+* [Return] // &#34;1+2&#34;, &#34;3&#34; and &#34;4&#34; replaced with &#34;(1+2)*(3+4)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keyboard Shortcut&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Return&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Insert&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Delete&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Delete current expression&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Copy all expressions and answers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Del&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Delete all expressions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Up&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Item move up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Down&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Item move down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;F8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Radix Mode = Auto&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;F9&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Radix Mode = Dec&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;F10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Radix Mode = Hex&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;F11&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Radix Mode = Bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;F12&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Radix Mode = Oct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapoco/calctus/develop/img/settings_general.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapoco/calctus/develop/img/settings_input.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapoco/calctus/develop/img/settings_appearance.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapoco/calctus/develop/img/settings_details.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>github/gh-actions-importer</title>
    <updated>2023-04-28T01:30:55Z</updated>
    <id>tag:github.com,2023-04-28:/github/gh-actions-importer</id>
    <link href="https://github.com/github/gh-actions-importer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub Actions Importer helps you plan and automate the migration of Azure DevOps, CircleCI, GitLab, Jenkins, and Travis CI pipelines to GitHub Actions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Actions Importer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/github/gh-actions-importer/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/github/gh-actions-importer/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;.github/workflows/ci.yml&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/migrating-to-github-actions/automating-migration-with-github-actions-importer&#34;&gt;GitHub Actions Importer&lt;/a&gt; helps plan, test, and automate your migration to GitHub Actions from the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Azure DevOps&lt;/li&gt; &#xA; &lt;li&gt;CircleCI&lt;/li&gt; &#xA; &lt;li&gt;GitLab&lt;/li&gt; &#xA; &lt;li&gt;Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Travis CI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to request support&lt;/h2&gt; &#xA;&lt;p&gt;If you need assistance, you can file a support ticket &lt;a href=&#34;https://support.github.com&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;GitHub Actions Importer is distributed as a Docker container and this extension to the official &lt;a href=&#34;https://cli.github.com&#34;&gt;GitHub CLI&lt;/a&gt; to interact with the Docker container.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;The following requirements must be met to be able to use the GitHub Actions Importer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Docker CLI must be &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;installed&lt;/a&gt; and running.&lt;/li&gt; &#xA; &lt;li&gt;The official &lt;a href=&#34;https://cli.github.com&#34;&gt;GitHub CLI&lt;/a&gt; must be installed.&lt;/li&gt; &#xA; &lt;li&gt;You must have credentials to &lt;a href=&#34;https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry&#34;&gt;authenticate&lt;/a&gt; with the GitHub Container Registry.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Next, the GitHub Actions Importer CLI extension can be installed via this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gh extension install github/gh-actions-importer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;New versions of the GitHub Actions Importer are released on a regular basis. To ensure you&#39;re up to date, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gh actions-importer update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order for GitHub Actions Importer to communicate with your current CI/CD server and GitHub, various credentials must be available for the command. These can be configured using environment variables or a &lt;code&gt;.env.local&lt;/code&gt; file. These environment variables can be configured in an interactive prompt by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gh actions-importer configure&#xA;? Enter value for &#39;GITHUB_ACCESS_TOKEN&#39; (leave empty to skip): &#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find detailed information about using environment variables in the platform-specific documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Detailed information about how to use GitHub Actions Importer can be found in the &lt;a href=&#34;https://docs.github.com/en/actions/migrating-to-github-actions/automating-migration-with-github-actions-importer&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Recordings&lt;/h3&gt; &#xA;&lt;p&gt;You can access recorded demos of GitHub Actions Importer performing migrations to Actions from the following CI/CD platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/gG-2bkmBRlI&#34;&gt;Azure DevOps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/YkFnNEyM9Hg&#34;&gt;CircleCI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/3t5ywu0_qk4&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/WqiGP6h4fa0&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ndc-FNa_X3c&#34;&gt;Travis CI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Self-guided learning&lt;/h3&gt; &#xA;&lt;p&gt;The GitHub Actions Importer labs repository contains platform-specific learning paths that teach you how to use GitHub Actions Importer and how to approach migrations to GitHub Actions. To learn more, see the &lt;a href=&#34;https://github.com/actions/importer-labs/tree/main#readme&#34;&gt;GitHub Actions Importer labs repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Product roadmap&lt;/h2&gt; &#xA;&lt;p&gt;To learn about new features coming to GitHub Actions Importer, see the &lt;a href=&#34;https://github.com/orgs/github/projects/4247&#34;&gt;GitHub Public Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to offer feedback or make a feature request&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to offer feedback or make a feature request, please create a new discussion &lt;a href=&#34;https://github.com/github/gh-actions-importer/discussions/new/choose&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>