<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T01:37:11Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/Silk.NET</title>
    <updated>2022-08-14T01:37:11Z</updated>
    <id>tag:github.com,2022-08-14:/dotnet/Silk.NET</id>
    <link href="https://github.com/dotnet/Silk.NET" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The high-speed OpenGL, OpenCL, OpenAL, OpenXR, GLFW, SDL, Vulkan, Assimp, and DirectX bindings library your mother warned you about.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/Silk.NET/main/#&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/dotnet/Silk.NET/main/documentation/readme/silkdotnet_v3_horizontal_96.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://nuget.org/packages/Silk.NET&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Silk.NET&#34; alt=&#34;NuGet Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/UltzOS/Silk.NET/_packaging?_a=feed&amp;amp;feed=Experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/nuget-experimental%20feed-yellow&#34; alt=&#34;Preview Feed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dotnet/Silk.NET/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/Ultz/Silk.NET/workflows/CI%20Build/badge.svg?sanitize=true&#34; alt=&#34;CI Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/DTHHXRt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on-discord-7289DA&#34; alt=&#34;Join our Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;!-- End exclude from NuGet readme. --&gt; &#xA; &lt;!-- Begin include in NuGet readme.&#xA;![Silk.NET Logo](https://raw.githubusercontent.com/dotnet/Silk.NET/main/documentation/readme/silkdotnet_v3_horizontal_96.svg)&#xA;End include in NuGet readme. --&gt; &#xA; &lt;p&gt;Silk.NET is your one-stop-shop for high-speed .NET multimedia, graphics, and compute; providing bindings to popular low-level APIs such as OpenGL, OpenCL, OpenAL, OpenXR, GLFW, SDL, Vulkan, Assimp, and DirectX.&lt;/p&gt; &#xA; &lt;p&gt;Use Silk.NET to spruce up applications with cross-platform 3D graphics, audio, compute and haptics!&lt;/p&gt; &#xA; &lt;p&gt;Silk.NET works on any .NET Standard 2.0 compliant platform, including .NET 6.0, Xamarin, .NET Framework 4.6.1+, and .NET Core 2.0+.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div&gt; &#xA; &lt;!-- Begin exclude from NuGet readme. --&gt; &#xA; &lt;a href=&#34;https://dotnetfoundation.org&#34; align=&#34;right&#34;&gt;&lt;img src=&#34;https://dotnetfoundation.org/img/logo_v4.svg?sanitize=true&#34; alt=&#34;.NET Foundation&#34; class=&#34;logo-footer&#34; width=&#34;72&#34; align=&#34;left&#34;&gt; &#xA;  &lt;!-- End exclude from NuGet readme. --&gt; &#xA;  &lt;!-- Begin include in NuGet readme.&#xA;![.NET Foundation](https://raw.githubusercontent.com/dotnet/Silk.NET/main/documentation/readme/dotnetfoundation_v4_horizontal_64.svg)&#xA;End include in NuGet readme. --&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;Proud to be an official project under the benevolent &lt;a href=&#34;https://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt; umbrella.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- Package description inserted here automatically. --&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Features&lt;/h1&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;p&gt;Having poured lots of hours into examining generated C# code and its JIT assembly, you can count on us to deliver blazing fast bindings with negligible overhead induced by Silk.NET!&lt;/p&gt; &#xA;&lt;h3&gt;Up-to-date&lt;/h3&gt; &#xA;&lt;p&gt;With an efficient bindings regeneration mechanism, we are committed to ensuring our bindings reflect the latest specifications with frequent updates generated straight from the upstream sources.&lt;/p&gt; &#xA;&lt;h3&gt;High-level utilities&lt;/h3&gt; &#xA;&lt;p&gt;In addition to providing high-speed, direct, and transparent bindings, we provide high-level utilities and wrappers to maximise productivity in common workloads such as platform-agnostic abstractions around Windowing and Input, bringing your apps to a vast number of platforms without changing a single line!&lt;/p&gt; &#xA;&lt;h3&gt;Good-to-go&lt;/h3&gt; &#xA;&lt;p&gt;Silk.NET caters for anything you could need in swift development of multimedia, graphics, compute applications. Silk.NET is an all-in-one solution, complete with Graphics, Compute, Audio, Input, and Windowing.&lt;/p&gt; &#xA;&lt;!-- Begin exclude from NuGet readme. --&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The team&lt;/h1&gt; &#xA;&lt;p&gt;We currently have the following maintainers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HurricanKai&#34;&gt;Kai Jellinghaus&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=KJellinghaus&#34;&gt;&lt;img src=&#34;https://about.twitter.com/etc/designs/about2-twitter/public/img/favicon.ico&#34; alt=&#34;Follow Kai on Twitter&#34; width=&#34;16&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ThomasMiz&#34;&gt;Thomas Mizrahi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, the Silk.NET working group help drive larger user-facing changes providing key consultation from the perspective of dedicated users and professionals.&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Building from source&lt;/h1&gt; &#xA;&lt;p&gt;Prerequisites&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Must&lt;/strong&gt;: .NET 6 SDK&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Should&lt;/strong&gt;: &lt;a href=&#34;https://nuke.build&#34;&gt;NUKE&lt;/a&gt; (build system). Install using &lt;code&gt;dotnet tool install Nuke.GlobalTool --global&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Should&lt;/strong&gt;: Android, iOS, and MAUI .NET 6 workloads (use &lt;code&gt;dotnet workload install android ios maccatalyst maui&lt;/code&gt; to install them)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Should&lt;/strong&gt;: Android SDK version 30 with NDK tools installed. On Windows, for best results this should be installed into &lt;code&gt;C:\ProgramData\Android\android-sdk&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Could&lt;/strong&gt;: Java JDK (for gradle)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Could&lt;/strong&gt;: Visual Studio 2022 Community version 17.0 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instructions&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository (recursively)&lt;/li&gt; &#xA; &lt;li&gt;Run build.sh, build.cmd, build.ps1, or &lt;code&gt;nuke compile&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use the DLLs. To get nupkgs you can use with NuGet instead, use &lt;code&gt;nuke pack&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are more advanced build actions you can do too, such as FullBuild, Pack, FullPack, among others which you can view by doing &lt;code&gt;nuke --plan&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: Some .NET 6 workloads are only supported on Windows and macOS today.&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Silk.NET uses and encourages &lt;a href=&#34;https://medium.com/practical-blend/pull-request-first-f6bb667a9b6&#34;&gt;Early Pull Requests&lt;/a&gt;. Please don&#39;t wait until you&#39;re done to open a PR!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/Silk.NET/fork&#34;&gt;Fork Silk.NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add an empty commit to a new branch to start your work off: &lt;code&gt;git commit --allow-empty -m &#34;start of [thing you&#39;re working on]&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;ve pushed a commit, open a &lt;a href=&#34;https://github.blog/2019-02-14-introducing-draft-pull-requests/&#34;&gt;&lt;strong&gt;draft pull request&lt;/strong&gt;&lt;/a&gt;. Do this &lt;strong&gt;before&lt;/strong&gt; you actually start working.&lt;/li&gt; &#xA; &lt;li&gt;Make your commits in small, incremental steps with clear descriptions.&lt;/li&gt; &#xA; &lt;li&gt;Tag a maintainer when you&#39;re done and ask for a review!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The Silk.NET solution is &lt;strong&gt;very large&lt;/strong&gt;. Learn about how you can combat this using our build process in &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/Silk.NET/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- End exclude from NuGet readme. --&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Funding&lt;/h2&gt; Silk.NET requires significant effort to maintain, as such we greatly appreciate any financial support you are able to provide! &#xA;&lt;p&gt;This helps ensure Silk.NET&#39;s long term viability, and to help support the developers who maintain Silk.NET in their free time. &lt;a href=&#34;https://github.com/sponsors/HurricanKai&#34;&gt;Kai&lt;/a&gt; is accepting GitHub Sponsorships.&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Further resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Several examples can be found in the &lt;a href=&#34;https://github.com/dotnet/Silk.NET/tree/master/examples&#34;&gt;examples folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Come chat with us on &lt;a href=&#34;https://discord.gg/DTHHXRt&#34;&gt;Discord&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Licensing and governance&lt;/h1&gt; &#xA;&lt;p&gt;Silk.NET is distributed under the very permissive MIT/X11 license and all dependencies are distributed under MIT-compatible licenses.&lt;/p&gt; &#xA;&lt;p&gt;Silk.NET is a &lt;a href=&#34;https://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt; project, and has adopted the code of conduct defined by the &lt;a href=&#34;http://contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&#34;http://www.dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- Begin exclude from NuGet readme. --&gt; &#xA;&lt;hr&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://www.jetbrains.com/?from=Silk.NET&#34; align=&#34;right&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet/Silk.NET/main/documentation/readme/jetbrains.svg?sanitize=true&#34; alt=&#34;JetBrains&#34; class=&#34;logo-footer&#34; width=&#34;72&#34; align=&#34;left&#34;&gt; &lt;/a&gt;&#xA; &lt;a&gt;&lt;br&gt; &lt;/a&gt;&#xA; &lt;p&gt;&lt;a&gt;Special thanks to &lt;/a&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=Silk.NET&#34;&gt;JetBrains&lt;/a&gt; for supporting us with open-source licenses for their IDEs. &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- End exclude from NuGet readme. --&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/winforms</title>
    <updated>2022-08-14T01:37:11Z</updated>
    <id>tag:github.com,2022-08-14:/dotnet/winforms</id>
    <link href="https://github.com/dotnet/winforms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Forms is a .NET UI framework for building Windows desktop applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Forms&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/winforms/raw/main/LICENSE.TXT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows Forms (WinForms) is a UI framework for building Windows desktop applications. It is a .NET wrapper over Windows user interface libraries, such as User32 and GDI+. It also offers controls and other functionality that is unique to Windows Forms.&lt;/p&gt; &#xA;&lt;p&gt;Windows Forms also provides one of the most productive ways to create desktop applications based on the visual designer provided in Visual Studio. It enables drag-and-drop of visual controls and other similar functionality that make it easy to build desktop applications.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Forms Designer&lt;/h3&gt; &#xA;&lt;p&gt;For more information about the designer, please see the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/designer/readme.md&#34;&gt;Windows Forms Designer Documentation&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Relationship to .NET Framework&lt;/h3&gt; &#xA;&lt;p&gt;This codebase is a fork of the Windows Forms code in the .NET Framework 4.8. In Windows Forms .NET Core 3.0, we&#39;ve strived to bring the two runtimes to a parity. However since then, we&#39;ve done a number of changes, including &lt;a href=&#34;https://docs.microsoft.com/dotnet/core/compatibility/winforms&#34;&gt;breaking changes&lt;/a&gt;, which diverged the two. For more information about breaking changes, see the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/porting-guidelines.md&#34;&gt;Porting guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Please note&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; This repository contains only implementations for Windows Forms for &lt;a href=&#34;https://github.com/dotnet/core&#34;&gt;.NET platform&lt;/a&gt;.&lt;br&gt; It does not contain either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The .NET Framework variant of Windows Forms. Issues with .NET Framework, including Windows Forms, should be filed on the &lt;a href=&#34;https://developercommunity.visualstudio.com/spaces/61/index.html&#34;&gt;Developer Community&lt;/a&gt; or &lt;a href=&#34;https://support.microsoft.com/en-us/contactus?ws=support&#34;&gt;Product Support&lt;/a&gt; websites. They should not be filed on this repository.&lt;/li&gt; &#xA; &lt;li&gt;The Windows Forms Designer implementations. Issues with the Designer should be filed via VS Feedback tool (top right-hand side icon in Visual Studio).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How can I contribute?&lt;/h1&gt; &#xA;&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; explains what kinds of changes we welcome&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/developer-guide.md&#34;&gt;Developer Guide&lt;/a&gt; explains how to build and test&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/getting-started.md&#34;&gt;Get Up and Running with Windows Forms .NET&lt;/a&gt; explains how to get started building Windows Forms applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Engage, Contribute, and Provide Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to contribute are to try things out, file bugs, join in design conversations, and fix issues.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and the more general &lt;a href=&#34;https://github.com/dotnet/runtime/raw/master/CONTRIBUTING.md&#34;&gt;.NET contributing guide&lt;/a&gt; define contributing rules.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/developer-guide.md&#34;&gt;Developer Guide&lt;/a&gt; defines the setup and workflow for working on this repository.&lt;/li&gt; &#xA; &lt;li&gt;If you have a question or have found a bug, &lt;a href=&#34;https://github.com/dotnet/winforms/issues/new?template=bug_report.md&#34;&gt;file an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/docs/developer-guide.md&#34;&gt;daily builds&lt;/a&gt; if you want to contribute and stay up to date with the team.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting security issues&lt;/h2&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately via email to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;. Also see info about related &lt;a href=&#34;https://www.microsoft.com/msrc/bounty-dot-net-core&#34;&gt;Microsoft .NET Core and ASP.NET Core Bug Bounty Program&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://dotnetfoundation.org/code-of-conduct&#34;&gt;.NET Foundation Code of Conduct&lt;/a&gt; to define expected conduct in our community. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at &lt;a href=&#34;mailto:conduct@dotnetfoundation.org&#34;&gt;conduct@dotnetfoundation.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;.NET (including the Windows Forms repository) is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/winforms/main/LICENSE.TXT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;.NET Foundation&lt;/h2&gt; &#xA;&lt;p&gt;.NET Windows Forms is a &lt;a href=&#34;https://www.dotnetfoundation.org/projects&#34;&gt;.NET Foundation&lt;/a&gt; project.&lt;br&gt; See the &lt;a href=&#34;https://github.com/Microsoft/dotnet&#34;&gt;.NET home repository&lt;/a&gt;&amp;nbsp;to find other .NET-related projects.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unity-Technologies/Graphics</title>
    <updated>2022-08-14T01:37:11Z</updated>
    <id>tag:github.com,2022-08-14:/Unity-Technologies/Graphics</id>
    <link href="https://github.com/Unity-Technologies/Graphics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unity Graphics - Including Scriptable Render Pipeline&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;NOTE: We have migrated reported issues to FogBugz. You can only log further issues via the Unity bug tracker. To see how, read &lt;a href=&#34;https://unity3d.com/unity/qa/bug-reporting&#34;&gt;this&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;h2&gt;NOTE 2: We are rolling out changes to how we develop the Graphics Packages. Development will move to an internal repo and changes will be mirrored to this public repo. You will continue to see changes at the PR level and pull in changes from this public repo. You can find more information and track our progress &lt;a href=&#34;https://forum.unity.com/threads/important-upcoming-changes-to-the-graphics-repository.1239826/&#34;&gt;here&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;h2&gt;NOTE 3: Some folders have been moved. Read more &lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/Graphics/master/README-FOLDER-CHANGES.md&#34;&gt;here&lt;/a&gt; on how to merge your custom branches with the new folder layout.&lt;/h2&gt; &#xA;&lt;h1&gt;Unity Scriptable Render Pipeline&lt;/h1&gt; &#xA;&lt;p&gt;The Scriptable Render Pipeline (SRP) is a Unity feature designed to give artists and developers the tools they need to create modern, high-fidelity graphics in Unity. Unity provides two pre-built Scriptable Render Pipelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Universal Render Pipeline (URP) for use on all platforms.&lt;/li&gt; &#xA; &lt;li&gt;The High Definition Render Pipeline (HDRP) for use on compute shader compatible platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unity is committed to an open and transparent development process for SRP and the pre-built Render Pipelines. This means that you can browse this repository to see what features are currently in development.&lt;/p&gt; &#xA;&lt;p&gt;For more information about the packages in this repository, see the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@latest/index.html&#34;&gt;Scriptable Render Pipeline Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.render-pipelines.high-definition@latest/index.html&#34;&gt;High Definition Render Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@latest/index.html&#34;&gt;Universal Render Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.shadergraph@latest/index.html&#34;&gt;Shader Graph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.visualeffectgraph@latest/index.html&#34;&gt;Visual Effect Graph&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Branches and package releases&lt;/h2&gt; &#xA;&lt;p&gt;The packages in this repository are distributed as &lt;a href=&#34;https://docs.unity3d.com/Manual/pack-core.html&#34;&gt;Core packages&lt;/a&gt; in the Unity editor. The package vendoring process happens multiple times in each Unity release. The vendoring happens from the latest changeset of the release branch for each Unity release. A tag is generated on the changeset used to vendor a specific Unity release.&lt;/p&gt; &#xA;&lt;p&gt;Release branches are defined as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;master&lt;/strong&gt; branch is used for main developement and it always maps to the latest &lt;strong&gt;Unity Alpha&lt;/strong&gt; release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;{unity-version}/staging&lt;/strong&gt; maps to beta and released Unity versions. f.ex, &lt;strong&gt;2021.1/staging&lt;/strong&gt; maps to Unity 2021.1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;{package-major-version}.x.x/release&lt;/strong&gt; is used for Unity 2020.x and below. f.ex, &lt;strong&gt;10.x.x/release&lt;/strong&gt; maps to Unity 2020.3 LTS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need to find if a specific changeset is included in a specific Unity version, you can search tags for the Unity version. On GitHub, you can do that by clicking on the &lt;strong&gt;Branch&lt;/strong&gt; drop-down then clicking the &lt;strong&gt;Tags&lt;/strong&gt; tab. Typing &lt;code&gt;2021.2&lt;/code&gt; will list all changesets tagged to each Unity version.&lt;/p&gt; &#xA;&lt;h2&gt;Modifying package source&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install the packages of this repositories on your Unity project and modify the package source code. You can do that by one of the following methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository in any folder on your computer. &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-ui-local.html&#34;&gt;Install them as local packages&lt;/a&gt; into your project.&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository inside a &lt;code&gt;Packages&lt;/code&gt; folder in your Unity project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Cloning the repository using the GitHub Desktop App:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the GitHub Desktop App and click &lt;strong&gt;File &amp;gt; Clone repository&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;URL&lt;/strong&gt; tab and enter the following URL: &lt;a href=&#34;https://github.com/Unity-Technologies/Graphics&#34;&gt;https://github.com/Unity-Technologies/Graphics&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Choose…&lt;/strong&gt; button and navigate to your Unity Project’s base folder.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Clone&lt;/strong&gt; button.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Make sure you have Git LFS extension installed as that&#39;s required.&lt;/p&gt; &#xA;&lt;p&gt;After you clone the repository, open your console application of choice in the Graphics folder and run the following console command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;\&amp;gt; git checkout 2021.1.16f1.2801 (or the latest tag)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;ConsoleCommands&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cloning the repository using console commands:&lt;/h3&gt; &#xA;&lt;p&gt;Open your console application of choice and run the following console commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;\&amp;gt; cd &amp;lt;Path to your Unity project&amp;gt;&#xA;&#xA;\&amp;gt; git clone https://github.com/Unity-Technologies/Graphics&#xA;&#xA;\&amp;gt; cd Graphics&#xA;&#xA;\&amp;gt;  git checkout 2021.1.16f1.2801 (or the latest tag)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Scenes in Graphics&lt;/h2&gt; &#xA;&lt;p&gt;Unity provides sample Scenes to use with SRP. You can find these Scenes in the &lt;a href=&#34;https://github.com/Unity-Technologies/Graphics&#34;&gt;Graphics GitHub repository&lt;/a&gt;. To add the Scenes to your Project, clone the repository into your Project&#39;s Assets folder.&lt;/p&gt; &#xA;&lt;h2&gt;Package versions on Unity 2020.3 LTS and below&lt;/h2&gt; &#xA;&lt;p&gt;On Unity 2020.3 LTS and below, the packages in this repository were not Core packages. Instead they were regular packages and different versions could be installed to different versions of Unity. The compatibility of Unity versions and package versions were as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2023.1 is compatible with SRP versions 15.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2022.2/3 is compatible with SRP versions 14.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2022.1 is compatible with SRP versions 13.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2021.2/3 is compatible with SRP versions 12.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2021.1 is compatible with SRP versions 11.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2020.2 is compatible with SRP versions 10.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2020.1 is compatible with SRP versions 8.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2019.3 is compatible with SRP versions 7.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2019.2 is compatible with SRP versions 6.x.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity 2019.1 is compatible with SRP vertsios 5.x.x&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The above list is a guideline for major versions of SRP, but there are often multiple minor versions that you can use for a certain version of Unity. To determine which minor versions of SRP you can use:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In your Unity Project, open the Package Manager window (menu: &lt;strong&gt;Window &amp;gt; Package Manager&lt;/strong&gt;).&lt;/li&gt; &#xA; &lt;li&gt;In the list of packages, find &lt;strong&gt;Core RP Library&lt;/strong&gt;. To find this package in older versions of Unity, you may need to expose preview packages. To do this, click the &lt;strong&gt;Advanced&lt;/strong&gt; button at the top of the window then, in the context menu, click &lt;strong&gt;Show preview packages&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the drop-down arrow to the left of the package entry then click &lt;strong&gt;See all versions&lt;/strong&gt;. This shows a list that contains every package version compatible with your version of Unity.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After you decide which version of SRP to use:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://github.com/Unity-Technologies/Graphics&#34;&gt;Unity Graphics repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Branch&lt;/strong&gt; drop-down then click the &lt;strong&gt;Tags&lt;/strong&gt; tab.&lt;/li&gt; &#xA; &lt;li&gt;Find the tag that corresponds to the version of SRP you want to use. When you clone the repository, you use this tag to check out the correct branch.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>