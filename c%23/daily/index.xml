<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-20T01:27:41Z</updated>
  <subtitle>Daily Trending of C# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HaveIBeenPwned/PwnedPasswordsDownloader</title>
    <updated>2024-01-20T01:27:41Z</updated>
    <id>tag:github.com,2024-01-20:/HaveIBeenPwned/PwnedPasswordsDownloader</id>
    <link href="https://github.com/HaveIBeenPwned/PwnedPasswordsDownloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to download all Pwned Passwords hash ranges and save them offline so they can be used without a dependency on the k-anonymity API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is haveibeenpwned-downloader?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader&lt;/code&gt; is a &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools&#34;&gt;dotnet tool&lt;/a&gt; to download all Pwned Passwords hash ranges and save them offline so they can be used without a dependency on the k-anonymity API&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need to install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/6.0&#34;&gt;.NET 6&lt;/a&gt; to be able to install the tool.&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a command line window&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet tool install --global haveibeenpwned-downloader&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If the installer is unable to resolve the package, then you can run the following and then try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage Examples&lt;/h1&gt; &#xA;&lt;h2&gt;Download all SHA1 hashes to a single txt file called &lt;code&gt;pwnedpasswords.txt&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader.exe pwnedpasswords&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download all SHA1 hashes to individual txt files into a custom directory called &lt;code&gt;hashes&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader.exe pwnedpasswords -s false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download all NTLM hashes to a single txt file called &lt;code&gt;pwnedpasswords_ntlm.txt&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader.exe -n pwnedpasswords_ntlm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Additional parameters&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s/--single&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Determines wether to download hashes to a single file or as individual .txt files into another directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p/--parallelism&lt;/td&gt; &#xA;   &lt;td&gt;Same as &lt;code&gt;Environment.ProcessorCount&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determines how many hashes to download at a time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-o/--overwrite&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Determines if output files should be overwritten or not&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;(none)&lt;/td&gt; &#xA;   &lt;td&gt;When set, the downloader fetches NTLM hashes instead of SHA1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Additional usage examples&lt;/h1&gt; &#xA;&lt;h2&gt;Download all hashes to individual txt files into a custom directory called &lt;code&gt;hashes&lt;/code&gt; using 64 threads to download the hashes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader.exe hashes -s false -p 64&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download all hashes to a single txt file called &lt;code&gt;pwnedpasswords.txt&lt;/code&gt; using 64 threads, overwriting the file if it already exists&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haveibeenpwned-downloader.exe pwnedpasswords -o -p 64&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>