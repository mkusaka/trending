<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T01:27:17Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>harry0703/MoneyPrinterTurbo</title>
    <updated>2024-04-01T01:27:17Z</updated>
    <id>tag:github.com,2024-04-01:/harry0703/MoneyPrinterTurbo</id>
    <link href="https://github.com/harry0703/MoneyPrinterTurbo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;利用AI大模型，一键生成高清短视频 Generate short videos with one click using AI LLM.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;MoneyPrinterTurbo 💸&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/harry0703/MoneyPrinterTurbo.svg?style=for-the-badge&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/harry0703/MoneyPrinterTurbo.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/harry0703/MoneyPrinterTurbo.svg?style=for-the-badge&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/harry0703/MoneyPrinterTurbo.svg?style=for-the-badge&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/README-en.md&#34;&gt;English&lt;/a&gt; | 简体中文&lt;/p&gt; &#xA; &lt;p&gt;只需提供一个视频 &lt;strong&gt;主题&lt;/strong&gt; 或 &lt;strong&gt;关键词&lt;/strong&gt; ，就可以全自动生成视频文案、视频素材、视频字幕、视频背景音乐，然后合成一个高清的短视频。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/webui.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;特别感谢 🙏&lt;/h2&gt; &#xA;&lt;p&gt;由于该项目的 &lt;strong&gt;部署&lt;/strong&gt; 和 &lt;strong&gt;使用&lt;/strong&gt;，对于一些小白用户来说，还是 &lt;strong&gt;有一定的门槛&lt;/strong&gt;，在此特别感谢&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;录咖（AI智能 多媒体服务平台）&lt;/strong&gt; 网站基于该项目，提供的免费&lt;code&gt;AI视频生成器&lt;/code&gt;服务，可以不用部署，直接在线使用，非常方便。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中文版：&lt;a href=&#34;https://reccloud.cn&#34;&gt;https://reccloud.cn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;英文版：&lt;a href=&#34;https://reccloud.com&#34;&gt;https://reccloud.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/reccloud.cn.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能特性 🎯&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完整的 &lt;strong&gt;MVC架构&lt;/strong&gt;，代码 &lt;strong&gt;结构清晰&lt;/strong&gt;，易于维护，支持API和Web界面&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持视频文案 &lt;strong&gt;AI自动生成&lt;/strong&gt;，也可以&lt;strong&gt;自定义文案&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持多种 &lt;strong&gt;高清视频&lt;/strong&gt; 尺寸 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 竖屏 9:16，&lt;code&gt;1080x1920&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 横屏 16:9，&lt;code&gt;1920x1080&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;批量视频生成&lt;/strong&gt;，可以一次生成多个视频，然后选择一个最满意的&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;视频片段时长&lt;/strong&gt;设置，方便调节素材切换频率&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;中文&lt;/strong&gt; 和 &lt;strong&gt;英文&lt;/strong&gt; 视频文案&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;多种语音&lt;/strong&gt; 合成&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;字幕生成&lt;/strong&gt;，可以调整 &lt;code&gt;字体&lt;/code&gt;、&lt;code&gt;位置&lt;/code&gt;、&lt;code&gt;颜色&lt;/code&gt;、&lt;code&gt;大小&lt;/code&gt;，同时支持&lt;code&gt;字幕描边&lt;/code&gt;设置&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;背景音乐&lt;/strong&gt;，随机或者指定音乐文件，可设置&lt;code&gt;背景音乐音量&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 视频素材来源 &lt;strong&gt;高清&lt;/strong&gt;，而且 &lt;strong&gt;无版权&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 &lt;strong&gt;OpenAI&lt;/strong&gt;、&lt;strong&gt;moonshot&lt;/strong&gt;、&lt;strong&gt;Azure&lt;/strong&gt;、&lt;strong&gt;gpt4free&lt;/strong&gt;、&lt;strong&gt;one-api&lt;/strong&gt;、&lt;strong&gt;通义千问&lt;/strong&gt;、&lt;strong&gt;Google Gemini&lt;/strong&gt; 等多种模型接入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;后期计划 📅&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; GPT-SoVITS 配音支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 优化语音合成，利用大模型，使其合成的声音，更加自然，情绪更加丰富&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加视频转场效果，使其看起来更加的流畅&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加更多视频素材来源，优化视频素材和文案的匹配度&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; OLLAMA 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加视频长度选项：短、中、长&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 制作Docker镜像，方便部署&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 打包成一键启动包（Windows，macOS），方便使用&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加免费网络代理，让访问OpenAI和素材下载不再受限&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 可以使用自己的素材&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 朗读声音和背景音乐，提供实时试听&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持更多的语音合成服务商，比如 OpenAI TTS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 自动上传到YouTube平台&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;视频演示 📺&lt;/h2&gt; &#xA;&lt;h3&gt;竖屏 9:16&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;arrow_forward&#34;&gt;&#xA;     ▶️&#xA;    &lt;/g-emoji&gt; 《如何增加生活的乐趣》&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;arrow_forward&#34;&gt;&#xA;     ▶️&#xA;    &lt;/g-emoji&gt; 《生命的意义是什么》&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/harry0703/MoneyPrinterTurbo/assets/4928832/a84d33d5-27a2-4aba-8fd0-9fb2bd91c6a6&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/harry0703/MoneyPrinterTurbo/assets/4928832/112c9564-d52b-4472-99ad-970b75f66476&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;横屏 16:9&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;arrow_forward&#34;&gt;&#xA;     ▶️&#xA;    &lt;/g-emoji&gt;《生命的意义是什么》&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;arrow_forward&#34;&gt;&#xA;     ▶️&#xA;    &lt;/g-emoji&gt;《为什么要运动》&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/harry0703/MoneyPrinterTurbo/assets/4928832/346ebb15-c55f-47a9-a653-114f08bb8073&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/harry0703/MoneyPrinterTurbo/assets/4928832/271f2fae-8283-44a0-8aa0-0ed8f9a6fa87&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;安装部署 📥&lt;/h2&gt; &#xA;&lt;p&gt;建议使用 &lt;a href=&#34;https://conda.io/projects/conda/en/latest/user-guide/install/index.html&#34;&gt;conda&lt;/a&gt; 创建 python 虚拟环境&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/harry0703/MoneyPrinterTurbo.git&#xA;cd MoneyPrinterTurbo&#xA;conda create -n MoneyPrinterTurbo python=3.10&#xA;conda activate MoneyPrinterTurbo&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;快速使用 🚀&lt;/h2&gt; &#xA;&lt;h3&gt;视频教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;完整的使用演示：&lt;a href=&#34;https://v.douyin.com/iFhnwsKY/&#34;&gt;https://v.douyin.com/iFhnwsKY/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;如何在Windows上部署：&lt;a href=&#34;https://v.douyin.com/iFyjoW3M&#34;&gt;https://v.douyin.com/iFyjoW3M&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;前提&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;尽量不要使用 &lt;strong&gt;中文路径&lt;/strong&gt;，避免出现一些无法预料的问题&lt;/li&gt; &#xA; &lt;li&gt;请确保你的 &lt;strong&gt;网络&lt;/strong&gt; 是正常的，即可以正常访问境外网站&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;① 安装好 ImageMagick&lt;/h4&gt; &#xA;&lt;h5&gt;Windows:&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载 &lt;a href=&#34;https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe&#34;&gt;https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;安装下载好的 ImageMagick，注意不要修改安装路径&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;MacOS:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install imagemagick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install imagemagick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;CentOS&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo yum install ImageMagick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;② 修改配置文件&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;将 &lt;code&gt;config.example.toml&lt;/code&gt; 文件复制一份，命名为 &lt;code&gt;config.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;按照 &lt;code&gt;config.toml&lt;/code&gt; 文件中的说明，配置好 &lt;code&gt;pexels_api_keys&lt;/code&gt; 和 &lt;code&gt;llm_provider&lt;/code&gt;，并根据 llm_provider 对应的服务商，配置相关的 API Key&lt;/li&gt; &#xA; &lt;li&gt;如果是&lt;code&gt;Windows&lt;/code&gt;系统，&lt;code&gt;imagemagick_path&lt;/code&gt; 为你的实际安装路径（如果安装的时候没有修改路径，直接取消注释即可）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;③ 配置大模型(LLM)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果要使用 &lt;code&gt;GPT-4.0&lt;/code&gt; 或 &lt;code&gt;GPT-3.5&lt;/code&gt;，需要有 &lt;code&gt;OpenAI&lt;/code&gt; 的 &lt;code&gt;API Key&lt;/code&gt;，如果没有，可以将 &lt;code&gt;llm_provider&lt;/code&gt; 设置为 &lt;code&gt;g4f&lt;/code&gt; ( 一个免费使用GPT的开源库 &lt;a href=&#34;https://github.com/xtekky/gpt4free&#34;&gt;https://github.com/xtekky/gpt4free&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;或者可以使用到 &lt;a href=&#34;https://platform.moonshot.cn/console/api-keys&#34;&gt;月之暗面&lt;/a&gt; 申请。注册就送 15元体验金，可以对话1500次左右。然后设置 &lt;code&gt;llm_provider=&#34;moonshot&#34;&lt;/code&gt; 和 &lt;code&gt;moonshot_api_key&lt;/code&gt; 。感谢 &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/8&#34;&gt;@jerryblues&lt;/a&gt; 的建议&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;启动Web界面 🌐&lt;/h3&gt; &#xA;&lt;p&gt;注意需要到 MoneyPrinterTurbo 项目 &lt;code&gt;根目录&lt;/code&gt; 下执行以下命令&lt;/p&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;conda activate MoneyPrinterTurbo&#xA;webui.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;MacOS or Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda activate MoneyPrinterTurbo&#xA;sh webui.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动后，会自动打开浏览器&lt;/p&gt; &#xA;&lt;p&gt;效果如下图： &lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/webui.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;启动API服务 🚀&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动后，可以查看 &lt;code&gt;API文档&lt;/code&gt; &lt;a href=&#34;http://127.0.0.1:8080/docs&#34;&gt;http://127.0.0.1:8080/docs&lt;/a&gt; 直接在线调试接口，快速体验。&lt;/p&gt; &#xA;&lt;p&gt;效果如下图： &lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/api.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;语音合成 🗣&lt;/h2&gt; &#xA;&lt;p&gt;所有支持的声音列表，可以查看：&lt;a href=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/voice-list.txt&#34;&gt;声音列表&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;字幕生成 📜&lt;/h2&gt; &#xA;&lt;p&gt;当前支持2种字幕生成方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;edge: 生成速度更快，性能更好，对电脑配置没有要求，但是质量可能不稳定&lt;/li&gt; &#xA; &lt;li&gt;whisper: 生成速度较慢，性能较差，对电脑配置有一定要求，但是质量更可靠&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;可以修改 &lt;code&gt;config.toml&lt;/code&gt; 配置文件中的 &lt;code&gt;subtitle_provider&lt;/code&gt; 进行切换&lt;/p&gt; &#xA;&lt;p&gt;建议使用 &lt;code&gt;edge&lt;/code&gt; 模式，如果生成的字幕质量不好，再切换到 &lt;code&gt;whisper&lt;/code&gt; 模式&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果留空，表示不生成字幕。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;背景音乐 🎵&lt;/h2&gt; &#xA;&lt;p&gt;用于视频的背景音乐，位于项目的 &lt;code&gt;resource/songs&lt;/code&gt; 目录下。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;当前项目里面放了一些默认的音乐，来自于 YouTube 视频，如有侵权，请删除。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;字幕字体 🅰&lt;/h2&gt; &#xA;&lt;p&gt;用于视频字幕的渲染，位于项目的 &lt;code&gt;resource/fonts&lt;/code&gt; 目录下，你也可以放进去自己的字体。&lt;/p&gt; &#xA;&lt;h2&gt;常见问题 🤔&lt;/h2&gt; &#xA;&lt;h3&gt;❓AttributeError: &#39;str&#39; object has no attribute &#39;choices&#39;`&lt;/h3&gt; &#xA;&lt;p&gt;这个问题是由于 OpenAI 或者其他 LLM，没有返回正确的回复导致的。&lt;/p&gt; &#xA;&lt;p&gt;大概率是网络原因， 使用 &lt;strong&gt;VPN&lt;/strong&gt;，或者设置 &lt;code&gt;openai_base_url&lt;/code&gt; 为你的代理 ，应该就可以解决了。&lt;/p&gt; &#xA;&lt;h3&gt;❓RuntimeError: No ffmpeg exe could be found&lt;/h3&gt; &#xA;&lt;p&gt;通常情况下，ffmpeg 会被自动下载，并且会被自动检测到。 但是如果你的环境有问题，无法自动下载，可能会遇到如下错误：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RuntimeError: No ffmpeg exe could be found.&#xA;Install ffmpeg on your system, or set the IMAGEIO_FFMPEG_EXE environment variable.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此时你可以从 &lt;a href=&#34;https://www.gyan.dev/ffmpeg/builds/&#34;&gt;https://www.gyan.dev/ffmpeg/builds/&lt;/a&gt; 下载ffmpeg，解压后，设置 &lt;code&gt;ffmpeg_path&lt;/code&gt; 为你的实际安装路径即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[app]&#xA;# 请根据你的实际路径设置，注意 Windows 路径分隔符为 \\&#xA;ffmpeg_path = &#34;C:\\Users\\harry\\Downloads\\ffmpeg.exe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;❓生成音频时报错或下载视频报错&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/56&#34;&gt;issue 56&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;failed to generate audio, maybe the network is not available. &#xA;if you are in China, please use a VPN.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/44&#34;&gt;issue 44&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;failed to download videos, maybe the network is not available. &#xA;if you are in China, please use a VPN.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这个大概率是网络原因，无法访问境外的服务，请使用VPN解决。&lt;/p&gt; &#xA;&lt;h3&gt;❓ImageMagick is not installed on your computer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/33&#34;&gt;issue 33&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;按照 &lt;code&gt;示例配置&lt;/code&gt; 里面提供的 &lt;code&gt;下载地址&lt;/code&gt; ，安装 &lt;a href=&#34;https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe&#34;&gt;https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe&lt;/a&gt;, 用静态库&lt;/li&gt; &#xA; &lt;li&gt;不要安装在中文路径里面，避免出现一些无法预料的问题&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/54#issuecomment-2017842022&#34;&gt;issue 54&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果是linux系统，可以手动安装，参考 &lt;a href=&#34;https://cn.linux-console.net/?p=16978&#34;&gt;https://cn.linux-console.net/?p=16978&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/wangwenqiao666&#34;&gt;@wangwenqiao666&lt;/a&gt;的研究探索&lt;/p&gt; &#xA;&lt;h3&gt;❓ImageMagick的安全策略阻止了与临时文件@/tmp/tmpur5hyyto.txt相关的操作&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/92&#34;&gt;issue 92&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;可以在ImageMagick的配置文件policy.xml中找到这些策略。 这个文件通常位于 /etc/ImageMagick-&lt;code&gt;X&lt;/code&gt;/ 或 ImageMagick 安装目录的类似位置。 修改包含&lt;code&gt;pattern=&#34;@&#34;&lt;/code&gt;的条目，将&lt;code&gt;rights=&#34;none&#34;&lt;/code&gt;更改为&lt;code&gt;rights=&#34;read|write&#34;&lt;/code&gt;以允许对文件的读写操作。&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/chenhengzh&#34;&gt;@chenhengzh&lt;/a&gt;的研究探索&lt;/p&gt; &#xA;&lt;h3&gt;❓OSError: [Errno 24] Too many open files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/100&#34;&gt;issue 100&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;这个问题是由于系统打开文件数限制导致的，可以通过修改系统的文件打开数限制来解决。&lt;/p&gt; &#xA;&lt;p&gt;查看当前限制&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ulimit -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果过低，可以调高一些，比如&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ulimit -n 10240&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;❓AttributeError: module &#39;PIL.Image&#39; has no attribute &#39;ANTIALIAS&#39;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/101&#34;&gt;issue 101&lt;/a&gt;, &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/83&#34;&gt;issue 83&lt;/a&gt;, &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues/70&#34;&gt;issue 70&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;先看下当前的 Pillow 版本是多少&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip list |grep Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果是 10.x 的版本，可以尝试下降级看看，有用户反馈降级后正常&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip uninstall Pillow&#xA;pip install Pillow==9.5.0&#xA;# 或者降级到 8.4.0&#xA;pip install Pillow==8.4.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;反馈建议 📢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以提交 &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/issues&#34;&gt;issue&lt;/a&gt; 或者 &lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo/pulls&#34;&gt;pull request&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;也可以关注我的 &lt;strong&gt;抖音&lt;/strong&gt; 或 &lt;strong&gt;视频号&lt;/strong&gt;：&lt;code&gt;网旭哈瑞.AI&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;我会在上面发布一些 &lt;strong&gt;使用教程&lt;/strong&gt; 和 &lt;strong&gt;纯技术&lt;/strong&gt; 分享。&lt;/li&gt; &#xA;   &lt;li&gt;如果有更新和优化，我也会在上面 &lt;strong&gt;及时通知&lt;/strong&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;有问题也可以在上面 &lt;strong&gt;留言&lt;/strong&gt;，我会 &lt;strong&gt;尽快回复&lt;/strong&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;抖音&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;视频号&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/douyin.jpg&#34; width=&#34;180&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/docs/shipinghao.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;参考项目 📚&lt;/h2&gt; &#xA;&lt;p&gt;该项目基于 &lt;a href=&#34;https://github.com/FujiwaraChoki/MoneyPrinter&#34;&gt;https://github.com/FujiwaraChoki/MoneyPrinter&lt;/a&gt; 重构而来，做了大量的优化，增加了更多的功能。 感谢原作者的开源精神。&lt;/p&gt; &#xA;&lt;h2&gt;许可证 📝&lt;/h2&gt; &#xA;&lt;p&gt;点击查看 &lt;a href=&#34;https://raw.githubusercontent.com/harry0703/MoneyPrinterTurbo/main/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; 文件&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tiangolo/typer</title>
    <updated>2024-04-01T01:27:17Z</updated>
    <id>tag:github.com,2024-04-01:/tiangolo/typer</id>
    <link href="https://github.com/tiangolo/typer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Typer, build great CLIs. Easy to code. Based on Python type hints.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://typer.tiangolo.com&#34;&gt;&lt;img src=&#34;https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg?sanitize=true&#34; alt=&#34;Typer&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;Typer, build great CLIs. Easy to code. Based on Python type hints.&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tiangolo/typer/actions?query=workflow%3ATest&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/tiangolo/typer/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tiangolo/typer/actions?query=workflow%3APublish&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/tiangolo/typer/workflows/Publish/badge.svg?sanitize=true&#34; alt=&#34;Publish&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/typer&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://coverage-badge.samuelcolvin.workers.dev/tiangolo/typer.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://pypi.org/project/typer&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/typer?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://typer.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://typer.tiangolo.com&#34;&gt;https://typer.tiangolo.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/tiangolo/typer&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tiangolo/typer&#34;&gt;https://github.com/tiangolo/typer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Typer is a library for building &lt;abbr title=&#34;command line interface, programs executed from a terminal&#34;&gt;CLI&lt;/abbr&gt; applications that users will &lt;strong&gt;love using&lt;/strong&gt; and developers will &lt;strong&gt;love creating&lt;/strong&gt;. Based on Python type hints.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s also a command line tool to run scripts, automatically converting them to CLI applications.&lt;/p&gt; &#xA;&lt;p&gt;The key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive to write&lt;/strong&gt;: Great editor support. &lt;abbr title=&#34;also known as auto-complete, autocompletion, IntelliSense&#34;&gt;Completion&lt;/abbr&gt; everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: It&#39;s easy to use for the final users. Automatic help, and automatic completion for all shells.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Short&lt;/strong&gt;: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Start simple&lt;/strong&gt;: The simplest example adds only 2 lines of code to your app: &lt;strong&gt;1 import, 1 function call&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grow large&lt;/strong&gt;: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run scripts&lt;/strong&gt;: Typer includes a &lt;code&gt;typer&lt;/code&gt; command that you can use to run scripts, automatically converting them to CLIs, even if they don&#39;t use Typer internally.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FastAPI of CLIs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Typer&lt;/strong&gt; is &lt;a href=&#34;https://fastapi.tiangolo.com&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;FastAPI&lt;/a&gt;&#39;s little sibling, it&#39;s the FastAPI of CLIs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install typer&#xA;---&amp;gt; 100%&#xA;Successfully installed typer rich shellingham&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;The absolute minimum&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a file &lt;code&gt;main.py&lt;/code&gt; with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;def main(name: str):&#xA;    print(f&#34;Hello {name}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script doesn&#39;t even use Typer internally. But you can use the &lt;code&gt;typer&lt;/code&gt; command to run it as a CLI application.&lt;/p&gt; &#xA;&lt;h3&gt;Run it&lt;/h3&gt; &#xA;&lt;p&gt;Run your application with the &lt;code&gt;typer&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;// Run your application&#xA;$ typer main.py run&#xA;&#xA;// You get a nice error, you are missing NAME&#xA;Usage: typer [PATH_OR_MODULE] run [OPTIONS] NAME&#xA;Try &#39;typer [PATH_OR_MODULE] run --help&#39; for help.&#xA;╭─ Error ───────────────────────────────────────────╮&#xA;│ Missing argument &#39;NAME&#39;.                          │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;&#xA;// You get a --help for free&#xA;$ typer main.py run --help&#xA;&#xA;Usage: typer [PATH_OR_MODULE] run [OPTIONS] NAME&#xA;&#xA;Run the provided Typer app.&#xA;&#xA;╭─ Arguments ───────────────────────────────────────╮&#xA;│ *    name      TEXT  [default: None] [required]   |&#xA;╰───────────────────────────────────────────────────╯&#xA;╭─ Options ─────────────────────────────────────────╮&#xA;│ --help          Show this message and exit.       │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;// Now pass the NAME argument&#xA;$ typer main.py run Camila&#xA;&#xA;Hello Camila&#xA;&#xA;// It works! 🎉&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This is the simplest use case, not even using Typer internally, but it can already be quite useful for simple scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: auto-completion works when you create a Python package and run it with &lt;code&gt;--install-completion&lt;/code&gt; or when you use the &lt;code&gt;typer&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h2&gt;Use Typer in your code&lt;/h2&gt; &#xA;&lt;p&gt;Now let&#39;s start using Typer in your own code, update &lt;code&gt;main.py&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import typer&#xA;&#xA;&#xA;def main(name: str):&#xA;    print(f&#34;Hello {name}&#34;)&#xA;&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    typer.run(main)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you could run it with Python directly:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;// Run your application&#xA;$ python main.py&#xA;&#xA;// You get a nice error, you are missing NAME&#xA;Usage: main.py [OPTIONS] NAME&#xA;Try &#39;main.py --help&#39; for help.&#xA;╭─ Error ───────────────────────────────────────────╮&#xA;│ Missing argument &#39;NAME&#39;.                          │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;&#xA;// You get a --help for free&#xA;$ python main.py --help&#xA;&#xA;Usage: main.py [OPTIONS] NAME&#xA;&#xA;╭─ Arguments ───────────────────────────────────────╮&#xA;│ *    name      TEXT  [default: None] [required]   |&#xA;╰───────────────────────────────────────────────────╯&#xA;╭─ Options ─────────────────────────────────────────╮&#xA;│ --help          Show this message and exit.       │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;// Now pass the NAME argument&#xA;$ python main.py Camila&#xA;&#xA;Hello Camila&#xA;&#xA;// It works! 🎉&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: you can also call this same script with the &lt;code&gt;typer&lt;/code&gt; command, but you don&#39;t need to.&lt;/p&gt; &#xA;&lt;h2&gt;Example upgrade&lt;/h2&gt; &#xA;&lt;p&gt;This was the simplest example possible.&lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s see one a bit more complex.&lt;/p&gt; &#xA;&lt;h3&gt;An example with two subcommands&lt;/h3&gt; &#xA;&lt;p&gt;Modify the file &lt;code&gt;main.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;typer.Typer()&lt;/code&gt; app, and create two subcommands with their parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import typer&#xA;&#xA;app = typer.Typer()&#xA;&#xA;&#xA;@app.command()&#xA;def hello(name: str):&#xA;    print(f&#34;Hello {name}&#34;)&#xA;&#xA;&#xA;@app.command()&#xA;def goodbye(name: str, formal: bool = False):&#xA;    if formal:&#xA;        print(f&#34;Goodbye Ms. {name}. Have a good day.&#34;)&#xA;    else:&#xA;        print(f&#34;Bye {name}!&#34;)&#xA;&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    app()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explicitly create a &lt;code&gt;typer.Typer&lt;/code&gt; app. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The previous &lt;code&gt;typer.run&lt;/code&gt; actually creates one implicitly for you.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add two subcommands with &lt;code&gt;@app.command()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Execute the &lt;code&gt;app()&lt;/code&gt; itself, as if it was a function (instead of &lt;code&gt;typer.run&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the upgraded example&lt;/h3&gt; &#xA;&lt;p&gt;Check the new help:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ python main.py --help&#xA;&#xA; Usage: main.py [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;╭─ Options ─────────────────────────────────────────╮&#xA;│ --install-completion          Install completion  │&#xA;│                               for the current     │&#xA;│                               shell.              │&#xA;│ --show-completion             Show completion for │&#xA;│                               the current shell,  │&#xA;│                               to copy it or       │&#xA;│                               customize the       │&#xA;│                               installation.       │&#xA;│ --help                        Show this message   │&#xA;│                               and exit.           │&#xA;╰───────────────────────────────────────────────────╯&#xA;╭─ Commands ────────────────────────────────────────╮&#xA;│ goodbye                                           │&#xA;│ hello                                             │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;// When you create a package you get ✨ auto-completion ✨ for free, installed with --install-completion&#xA;&#xA;// You have 2 subcommands (the 2 functions): goodbye and hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Now check the help for the &lt;code&gt;hello&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ python main.py hello --help&#xA;&#xA; Usage: main.py hello [OPTIONS] NAME&#xA;&#xA;╭─ Arguments ───────────────────────────────────────╮&#xA;│ *    name      TEXT  [default: None] [required]   │&#xA;╰───────────────────────────────────────────────────╯&#xA;╭─ Options ─────────────────────────────────────────╮&#xA;│ --help          Show this message and exit.       │&#xA;╰───────────────────────────────────────────────────╯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;And now check the help for the &lt;code&gt;goodbye&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ python main.py goodbye --help&#xA;&#xA; Usage: main.py goodbye [OPTIONS] NAME&#xA;&#xA;╭─ Arguments ───────────────────────────────────────╮&#xA;│ *    name      TEXT  [default: None] [required]   │&#xA;╰───────────────────────────────────────────────────╯&#xA;╭─ Options ─────────────────────────────────────────╮&#xA;│ --formal    --no-formal      [default: no-formal] │&#xA;│ --help                       Show this message    │&#xA;│                              and exit.            │&#xA;╰───────────────────────────────────────────────────╯&#xA;&#xA;// Automatic --formal and --no-formal for the bool option 🎉&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Now you can try out the new command line application:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;// Use it with the hello command&#xA;&#xA;$ python main.py hello Camila&#xA;&#xA;Hello Camila&#xA;&#xA;// And with the goodbye command&#xA;&#xA;$ python main.py goodbye Camila&#xA;&#xA;Bye Camila!&#xA;&#xA;// And with --formal&#xA;&#xA;$ python main.py goodbye --formal Camila&#xA;&#xA;Goodbye Ms. Camila. Have a good day.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Recap&lt;/h3&gt; &#xA;&lt;p&gt;In summary, you declare &lt;strong&gt;once&lt;/strong&gt; the types of parameters (&lt;em&gt;CLI arguments&lt;/em&gt; and &lt;em&gt;CLI options&lt;/em&gt;) as function parameters.&lt;/p&gt; &#xA;&lt;p&gt;You do that with standard modern Python types.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to learn a new syntax, the methods or classes of a specific library, etc.&lt;/p&gt; &#xA;&lt;p&gt;Just standard &lt;strong&gt;Python&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, for an &lt;code&gt;int&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;total: int&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for a &lt;code&gt;bool&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;force: bool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And similarly for &lt;strong&gt;files&lt;/strong&gt;, &lt;strong&gt;paths&lt;/strong&gt;, &lt;strong&gt;enums&lt;/strong&gt; (choices), etc. And there are tools to create &lt;strong&gt;groups of subcommands&lt;/strong&gt;, add metadata, extra &lt;strong&gt;validation&lt;/strong&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You get&lt;/strong&gt;: great editor support, including &lt;strong&gt;completion&lt;/strong&gt; and &lt;strong&gt;type checks&lt;/strong&gt; everywhere.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your users get&lt;/strong&gt;: automatic &lt;strong&gt;&lt;code&gt;--help&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;auto-completion&lt;/strong&gt; in their terminal (Bash, Zsh, Fish, PowerShell) when they install your package or when using the &lt;code&gt;typer&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For a more complete example including more features, see the &lt;a href=&#34;https://typer.tiangolo.com/tutorial/&#34;&gt;Tutorial - User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Typer&lt;/strong&gt; stands on the shoulders of a giant. Its only internal required dependency is &lt;a href=&#34;https://click.palletsprojects.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Click&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default it also comes with extra standard dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rich.readthedocs.io/en/stable/index.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;rich&lt;/code&gt;&lt;/a&gt;: to show nicely formatted errors automatically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sarugaku/shellingham&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;shellingham&lt;/code&gt;&lt;/a&gt;: to automatically detect the current shell when installing completion. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;With &lt;code&gt;shellingham&lt;/code&gt; you can just use &lt;code&gt;--install-completion&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Without &lt;code&gt;shellingham&lt;/code&gt;, you have to pass the name of the shell to install completion for, e.g. &lt;code&gt;--install-completion bash&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;typer-cli&lt;/code&gt;: adds the &lt;code&gt;typer&lt;/code&gt; command to your shell: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Quickly run scripts (that don&#39;t have to use Typer) with shell completion.&lt;/li&gt; &#xA;   &lt;li&gt;Generate docs for your Typer applications.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;typer-slim&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want the extra dependencies, install &lt;code&gt;typer-slim&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;When you install with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install typer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...it&#39;s the equivalent of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;typer-slim[standard]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;standard&lt;/code&gt; extra dependencies are &lt;code&gt;rich&lt;/code&gt;, &lt;code&gt;shellingham&lt;/code&gt;, &lt;code&gt;typer-cli&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: even if you don&#39;t install &lt;code&gt;typer-cli&lt;/code&gt; you can still use it&#39;s functionality by calling &lt;code&gt;typer&lt;/code&gt; as a module, e.g. &lt;code&gt;python -m typer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ReVanced/revanced-patches</title>
    <updated>2024-04-01T01:27:17Z</updated>
    <id>tag:github.com,2024-04-01:/ReVanced/revanced-patches</id>
    <link href="https://github.com/ReVanced/revanced-patches" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧩 Patches for ReVanced&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source width=&#34;256px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;assets/revanced-headline/revanced-headline-vertical-dark.svg&#34;&gt; &#xA;  &lt;img width=&#34;256px&#34; src=&#34;https://raw.githubusercontent.com/ReVanced/revanced-patches/main/assets/revanced-headline/revanced-headline-vertical-light.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;br&gt; &lt;a href=&#34;https://revanced.app/&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;assets/revanced-logo/revanced-logo.svg&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://raw.githubusercontent.com/ReVanced/revanced-patches/main/assets/revanced-logo/revanced-logo.svg?sanitize=true&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://github.com/ReVanced&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://i.ibb.co/dMMmCrW/Git-Hub-Mark.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://i.ibb.co/9wV3HGF/Git-Hub-Mark-Light.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;http://revanced.app/discord&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/13122796/178032563-d4e084b7-244e-4358-af50-26bde6dd4996.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://user-images.githubusercontent.com/13122796/178032563-d4e084b7-244e-4358-af50-26bde6dd4996.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://reddit.com/r/revancedapp&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/13122796/178032351-9d9d5619-8ef7-470a-9eec-2744ece54553.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://user-images.githubusercontent.com/13122796/178032351-9d9d5619-8ef7-470a-9eec-2744ece54553.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://t.me/app_revanced&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/13122796/178032213-faf25ab8-0bc3-4a94-a730-b524c96df124.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://user-images.githubusercontent.com/13122796/178032213-faf25ab8-0bc3-4a94-a730-b524c96df124.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://x.com/revancedapp&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/93124920/270180600-7c1b38bf-889b-4d68-bd5e-b9d86f91421a.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://user-images.githubusercontent.com/93124920/270108715-d80743fa-b330-4809-b1e6-79fbdc60d09c.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://www.youtube.com/@ReVanced&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;24px&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/13122796/178032714-c51c7492-0666-44ac-99c2-f003a695ab50.png&#34;&gt; &#xA;   &lt;img height=&#34;24px&#34; src=&#34;https://user-images.githubusercontent.com/13122796/178032714-c51c7492-0666-44ac-99c2-f003a695ab50.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; Continuing the legacy of Vanced &lt;/p&gt; &#xA;&lt;h1&gt;🧩 ReVanced Patches&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/ReVanced/revanced-patches/release.yml&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3-yellow.svg?sanitize=true&#34; alt=&#34;GPLv3 License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains a collection of ReVanced Patches.&lt;/p&gt; &#xA;&lt;h2&gt;❓ About&lt;/h2&gt; &#xA;&lt;p&gt;Patches are small modifications to Android apps that allow you to change the behavior of or add new features, block ads, customize the appearance, and much more.&lt;/p&gt; &#xA;&lt;h2&gt;💪 Features&lt;/h2&gt; &#xA;&lt;p&gt;Some of the features the patches provide are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚫 &lt;strong&gt;Block ads&lt;/strong&gt;: Say goodbye to ads&lt;/li&gt; &#xA; &lt;li&gt;⭐ &lt;strong&gt;Customize your app&lt;/strong&gt;: Personalize the appearance of apps with various layouts and themes&lt;/li&gt; &#xA; &lt;li&gt;🪄 &lt;strong&gt;Add new features&lt;/strong&gt;: Extend the functionality of apps with lots of new features&lt;/li&gt; &#xA; &lt;li&gt;⚙️ &lt;strong&gt;Miscellaneous and general purpose&lt;/strong&gt;: Rename packages, enable debugging, disable screen capture restrictions, export activities, etc.&lt;/li&gt; &#xA; &lt;li&gt;✨ &lt;strong&gt;And much more!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a complete list of all available patches, visit &lt;a href=&#34;https://revanced.app/patches&#34;&gt;revanced.app/patches&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 How to get started&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/ReVanced/revanced-cli&#34;&gt;ReVanced CLI&lt;/a&gt; or &lt;a href=&#34;https://github.com/ReVanced/revanced-manager&#34;&gt;ReVanced Manager&lt;/a&gt; to use ReVanced Patches.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Everything else&lt;/h2&gt; &#xA;&lt;h3&gt;📙 Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Thank you for considering contributing to ReVanced Patches. You can find the contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/ReVanced/revanced-patches/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;🛠️ Building&lt;/h3&gt; &#xA;&lt;p&gt;To build ReVanced Patches, you can follow the &lt;a href=&#34;https://github.com/ReVanced/revanced-documentation&#34;&gt;ReVanced documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📜 Licence&lt;/h2&gt; &#xA;&lt;p&gt;ReVanced Patches is licensed under the GPLv3 license. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/ReVanced/revanced-patches/main/LICENSE&#34;&gt;license file&lt;/a&gt; for more information. &lt;a href=&#34;https://www.tldrlegal.com/license/gnu-general-public-license-v3-gpl-3&#34;&gt;tl;dr&lt;/a&gt; you may copy, distribute and modify ReVanced Patches as long as you track changes/dates in source files. Any modifications to ReVanced Patches must also be made available under the GPL, along with build &amp;amp; install instructions.&lt;/p&gt;</summary>
  </entry>
</feed>