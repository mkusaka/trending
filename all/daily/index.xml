<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-26T01:29:15Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>makeplane/plane</title>
    <updated>2023-07-26T01:29:15Z</updated>
    <id>tag:github.com,2023-07-26:/makeplane/plane</id>
    <link href="https://github.com/makeplane/plane" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üî• üî• üî• Open Source JIRA, Linear and Height Alternative. Plane helps you track your issues, epics, and product roadmaps in the simplest way possible.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://plane.so&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_logo_.webp&#34; alt=&#34;Plane Logo&#34; width=&#34;70&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;b&gt;Plane&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;Open-source, self-hosted project planning tool&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.com/invite/A92xrEGCge&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1031547764020084846?color=5865F2&amp;amp;label=Discord&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/github/commit-activity/m/makeplane/plane?style=for-the-badge&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://app.plane.so/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_screen.webp&#34; alt=&#34;Plane Screens&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.plane.so/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_screens_dark_mode.webp&#34; alt=&#34;Plane Screens&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Meet &lt;a href=&#34;https://plane.so&#34;&gt;Plane&lt;/a&gt;. An open-source software development tool to manage issues, sprints, and product roadmaps with peace of mind üßò‚Äç‚ôÄÔ∏è.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Plane is still in its early days, not everything will be perfect yet, and hiccups may happen. Please let us know of any suggestions, ideas, or bugs that you encounter on our &lt;a href=&#34;https://discord.com/invite/A92xrEGCge&#34;&gt;Discord&lt;/a&gt; or GitHub issues, and we will use your feedback to improve on our upcoming releases.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The easiest way to get started with Plane is by creating a &lt;a href=&#34;https://app.plane.so&#34;&gt;Plane Cloud&lt;/a&gt; account. Plane Cloud offers a hosted solution for Plane. If you prefer to self-host Plane, please refer to our &lt;a href=&#34;https://docs.plane.so/self-hosting&#34;&gt;deployment documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Quick start with Docker Compose&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Compose Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/makeplane/plane&#xA;cd plane&#xA;chmod +x setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run setup.sh&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh http://localhost &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If running in a cloud env replace localhost with public facing IP address of the VM&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Docker compose up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can use the default email and password for your first login &lt;code&gt;captain@plane.so&lt;/code&gt; and &lt;code&gt;password123&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Issue Planning and Tracking&lt;/strong&gt;: Quickly create issues and add details using a powerful rich text editor that supports file uploads. Add sub-properties and references to issues for better organization and tracking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Issue Attachments&lt;/strong&gt;: Collaborate effectively by attaching files to issues, making it easy for your team to find and share important project-related documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Layouts&lt;/strong&gt;: Customize your project view with your preferred layout - choose from List, Kanban, or Calendar to visualize your project in a way that makes sense to you.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cycles&lt;/strong&gt;: Plan sprints with Cycles to keep your team on track and productive. Gain insights into your project&#39;s progress with burn-down charts and other useful features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modules&lt;/strong&gt;: Break down your large projects into smaller, more manageable modules. Assign modules between teams to easily track and plan your project&#39;s progress.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Views&lt;/strong&gt;: Create custom filters to display only the issues that matter to you. Save and share your filters in just a few clicks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pages&lt;/strong&gt;: Plane pages function as an AI-powered notepad, allowing you to easily document issues, cycle plans, and module details, and then synchronize them with your issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Command K&lt;/strong&gt;: Enjoy a better user experience with the new Command + K menu. Easily manage and navigate through your projects from one convenient location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Sync&lt;/strong&gt;: Streamline your planning process by syncing your GitHub issues with Plane. Keep all your issues in one place for better tracking and collaboration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì∏ Screenshots&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_views_dark_mode.webp&#34; alt=&#34;Plane Views&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_issue_detail_dark_mode.webp&#34; alt=&#34;Plane Issue Details&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_cycles_modules_dark_mode.webp&#34; alt=&#34;Plane Cycles and Modules&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_analytics_dark_mode.webp&#34; alt=&#34;Plane Analytics&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_pages_dark_mode.webp&#34; alt=&#34;Plane Pages&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://plane.so&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://plane-marketing.s3.ap-south-1.amazonaws.com/plane-readme/plane_commad_k_dark_mode.webp&#34; alt=&#34;Plane Command Menu&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìöDocumentation&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://docs.plane.so/&#34;&gt;docs.plane.so&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see how to Contribute, visit &lt;a href=&#34;https://github.com/makeplane/plane/raw/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Community&lt;/h2&gt; &#xA;&lt;p&gt;The Plane community can be found on GitHub Discussions, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; &#xA;&lt;p&gt;To chat with other community members you can join the &lt;a href=&#34;https://discord.com/invite/A92xrEGCge&#34;&gt;Plane Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://github.com/makeplane/plane/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; applies to all Plane community channels.&lt;/p&gt; &#xA;&lt;h2&gt;‚õìÔ∏è Security&lt;/h2&gt; &#xA;&lt;p&gt;If you believe you have found a security vulnerability in Plane, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports. Email &lt;a href=&#34;mailto:engineering@plane.so&#34;&gt;engineering@plane.so&lt;/a&gt; to disclose any security vulnerabilities.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>othermod/PSPi-Version-6</title>
    <updated>2023-07-26T01:29:15Z</updated>
    <id>tag:github.com,2023-07-26:/othermod/PSPi-Version-6</id>
    <link href="https://github.com/othermod/PSPi-Version-6" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PSPi 6&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the PSPi 6 GitHub repository! This project is a combination of hardware and software development aiming to retrofit a PSP with almost every type of Raspberry Pi.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://othermod.com/wp-content/uploads/IMG_8727.jpg&#34; alt=&#34;PSPi&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Improved Display:&lt;/strong&gt; The new board uses 7 bits for each color when using the Pi Zero and 8 bits for each color when using the Compute Module, improving color depth for images and videos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LCD Power Consumption:&lt;/strong&gt; Adjustments have been made to the LCD components to reduce power consumption when the screen is off.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battery Charging:&lt;/strong&gt; A new battery charger has been added, charging the battery faster with almost no heat generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Power Circuits Overhaul:&lt;/strong&gt; All of the power circuits underwent a major overhaul, better handling the high current of the Compute Module and gracefully managing power on and power off.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microcontroller:&lt;/strong&gt; The board uses an atmega8a, a cost-effective microcontroller functionally identical to the atmega328p used in Arduino boards for this specific application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Board Shape:&lt;/strong&gt; Changes to the board shape have made it closer to the shape of the original PSP board, simplifying the speaker connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatibility:&lt;/strong&gt; This new board features a 40-pin Raspberry Pi female connector and is compatible with all standard 40-pin Raspberry Pi boards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Software Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports RetroPie, Lakka, and many more operating systems:&lt;/strong&gt; RetroPie provides a great, minimal interface that gives decent play time because it isn‚Äôt doing too much in the background when its idle. Lakka looks great on the PSP but uses a ton of processing power and drains the battery faster. I plan to get Ubuntu working next.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Software Volume Adjustment:&lt;/strong&gt; The board now supports software volume adjustment, and both the headphone and speaker volume adjust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battery Calculation and Indication:&lt;/strong&gt; The software displays the battery capacity remaining at all times.&lt;/li&gt; &#xA; &lt;li&gt;The software is still somewhat basic, and being used to test some of the hardware functions. It will be gradually improved as the board gets closer to release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources Included Here&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code for Raspberry Pi:&lt;/strong&gt; This repository includes the necessary code for the Raspberry Pi that forms the brains of the PSPi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firmware for atmega:&lt;/strong&gt; The firmware for the atmega microcontroller used in the PSPi is also part of this repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PCB and Schematics:&lt;/strong&gt; You can find the PCB and schematics on EasyEDA at &lt;a href=&#34;https://oshwlab.com/adamseamster/pspi-zero-version-5_copy_copy&#34;&gt;this link&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;The project is still a work in progress, and although the basic functions are now up and running, there are still a few tweaks and improvements to be made.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;This project is a one-man-show but any help or input is welcome and appreciated. Whether you have experience with design, coding, testing, or just have some ideas for improvement, your contribution is valuable. You can also contribute by spreading the word and sharing the project with others. Financial contributions are also greatly appreciated to help cover the cost of prototypes and speed up testing and improvements.&lt;/p&gt; &#xA;&lt;h2&gt;Follow the Project&lt;/h2&gt; &#xA;&lt;p&gt;You can follow along with the project on &lt;a href=&#34;https://oshwlab.com/adamseamster/pspi-zero-version-5_copy_copy&#34;&gt;EasyEDA&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/V96c3JC&#34;&gt;Discord&lt;/a&gt; for constant updates, or on &lt;a href=&#34;https://youtube.com/othermod&#34;&gt;YouTube&lt;/a&gt; for occasional updates.&lt;/p&gt; &#xA;&lt;h2&gt;Ordering&lt;/h2&gt; &#xA;&lt;p&gt;The boards can be ordered from the manufacturer at any point, but please be aware that the project is still in the testing phase and changes may be made. Some assembly will be required if you order from them, and they are quite expensive in low quantities. I&#39;ll also eventually sell these board on my website.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any thoughts, suggestions, or ideas, please feel free to reach out. Contributions, either by helping with the design, coding, testing, or just recommending improvements, are always welcome.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Thank you for your interest in the PSPi project, and stay tuned for more updates.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SebLague/Chess-Challenge</title>
    <updated>2023-07-26T01:29:15Z</updated>
    <id>tag:github.com,2023-07-26:/SebLague/Chess-Challenge</id>
    <link href="https://github.com/SebLague/Chess-Challenge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://youtu.be/iScy18pVR58&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chess Coding Challenge (C#)&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the &lt;a href=&#34;https://youtu.be/iScy18pVR58&#34;&gt;chess coding challenge&lt;/a&gt;! This is a friendly competition in which your goal is to create a small chess bot (in C#) using the framework provided in this repository. Once submissions close, these bots will battle it out to discover which bot is best!&lt;/p&gt; &#xA;&lt;p&gt;I will then create a video exploring the implementations of the best and most unique/interesting bots. I also plan to make a small game that features these most interesting/challenging entries, so that everyone can try playing against them.&lt;/p&gt; &#xA;&lt;h2&gt;Change Log&lt;/h2&gt; &#xA;&lt;p&gt;I unfortunately missed a serious bug in the API and have had to update the project. Please keep an eye on the change log here in case I&#39;ve made any other horrifying mistakes. Some additions and improvements may also be made to the API in the first few weeks of the challenge, but breaking changes will be strictly avoided. The version you are currently using will be printed to the console when running the program (unless you are using v1.0, in which case nothing will be printed).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.1&lt;/b&gt; Fixed major bug affecting &lt;code&gt;board.GetPiece()&lt;/code&gt; and &lt;code&gt;PieceList&lt;/code&gt; functions. Added &lt;code&gt;Board.CreateBoardFromFEN()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.11&lt;/b&gt; UI changes: Added coordinate names to board UI and fixed human player input bug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.12&lt;/b&gt; Small fixes to &lt;code&gt;board.IsDraw()&lt;/code&gt;: Fifty move counter is now updated properly during search, and insufficient material is now detected for lone bishops on the same square colour.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.13&lt;/b&gt; Fixed issue with &lt;code&gt;board.ZobristKey&lt;/code&gt; where value would sometimes be different after making and undoing a move. Added an alternative function for getting moves &lt;code&gt;board.GetLegalMovesNonAlloc()&lt;/code&gt; (see docs for more info).&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.14&lt;/b&gt; A handful of additions to the Board API: &lt;code&gt;board.IsInsufficientMaterial()&lt;/code&gt;, &lt;code&gt;board.IsRepeatedPosition()&lt;/code&gt;, &lt;code&gt;board.GameRepetitionHistory&lt;/code&gt;, &lt;code&gt;board.FiftyMoveCounter&lt;/code&gt;, &lt;code&gt;board.GameMoveHistory&lt;/code&gt;, &lt;code&gt;board.GameStartFenString&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;V1.15&lt;/b&gt; Fixed incorrect &lt;code&gt;move.CapturePieceType&lt;/code&gt; for en-passant moves and moves in &lt;code&gt;board.GameMoveHistory&lt;/code&gt;. Added &lt;code&gt;BitboardHelper.VisualizeBitboard()&lt;/code&gt; to help with debugging bitboards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Submission Due Date&lt;/h2&gt; &#xA;&lt;p&gt;October 1st 2023.&lt;br&gt; You can submit your entry &lt;a href=&#34;https://forms.gle/6jjj8jxNQ5Ln53ie6&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Participate&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install an IDE such as &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download&#34;&gt;.NET 6.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download this repository and open the Chess-Challenge project in your IDE.&lt;/li&gt; &#xA; &lt;li&gt;Try building and running the project. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If a window with a chess board appears ‚Äî great!&lt;/li&gt; &#xA;   &lt;li&gt;If it doesn&#39;t work, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/SebLague/Chess-Challenge/main/#faq-and-troubleshooting&#34;&gt;FAQ/troubleshooting&lt;/a&gt; section at the bottom of the page. You can also search the &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues&#34;&gt;issues page&lt;/a&gt; to see if anyone is having a similar issue. If not, post about it there with any details such as error messages, operating system etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the MyBot.cs file &lt;em&gt;(located in src/MyBot)&lt;/em&gt; and write some code! &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You might want to take a look at the &lt;a href=&#34;https://seblague.github.io/chess-coding-challenge/documentation/&#34;&gt;Documentation&lt;/a&gt; first, and the Rules too!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build and run the program again to test your changes. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For testing, you have three options in the program: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can play against the bot yourself (Human vs Bot)&lt;/li&gt; &#xA;     &lt;li&gt;The bot can play a match against itself (MyBot vs MyBot)&lt;/li&gt; &#xA;     &lt;li&gt;The bot can play a match against a simple example bot (MyBot vs EvilBot).&lt;br&gt;You could also replace the EvilBot code with your own code, to test two different versions of your bot against one another.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;re happy with your chess bot, head over to the &lt;a href=&#34;https://forms.gle/6jjj8jxNQ5Ln53ie6&#34;&gt;Submission Page&lt;/a&gt; to enter it into the competition. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You will be able to edit your entry up until the competition closes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You may participate alone, or in a group of any size.&lt;/li&gt; &#xA; &lt;li&gt;You may submit a maximum of two entries. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please only submit a second entry if it is significantly different from your first bot (not just a minor tweak).&lt;/li&gt; &#xA;   &lt;li&gt;Note: you will need to log in with a second Google account if you want submit a second entry.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Only the following namespaces are allowed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ChessChallenge.API&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Numerics&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Collections.Generic&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;System.Linq&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You may not use the &lt;code&gt;AsParallel()&lt;/code&gt; function&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;As implied by the allowed namespaces, you may not read data from a file or access the internet, nor may you create any new threads or tasks to run code in parallel/in the background.&lt;/li&gt; &#xA; &lt;li&gt;You may not use the unsafe keyword.&lt;/li&gt; &#xA; &lt;li&gt;You may not store data inside the name of a variable/function/class etc (to be extracted with &lt;code&gt;nameof()&lt;/code&gt;, &lt;code&gt;GetType().ToString()&lt;/code&gt;, &lt;code&gt;Environment.StackTrace&lt;/code&gt; and so on). Thank you to &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/12&#34;&gt;#12&lt;/a&gt; and &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/24&#34;&gt;#24&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If your bot makes an illegal move or runs out of time, it will lose the game. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Games are played with 1 minute per side by default (this can be changed in the settings class). The final tournament time control is TBD, so your bot should not assume a particular time control, and instead respect the amount of time left on the timer (given in the Think function).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Your bot may not use more than 256mb of memory for creating look-up tables (such as a transposition table).&lt;/li&gt; &#xA; &lt;li&gt;If you have added a constructor to MyBot (for generating look up tables, etc.) it may not take longer than 5 seconds to complete.&lt;/li&gt; &#xA; &lt;li&gt;All of your code/data must be contained within the &lt;em&gt;MyBot.cs&lt;/em&gt; file. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note: you may create additional scripts for testing/training your bot, but only the &lt;em&gt;MyBot.cs&lt;/em&gt; file will be submitted, so it must be able to run without them.&lt;/li&gt; &#xA;   &lt;li&gt;You may not rename the &lt;em&gt;MyBot&lt;/em&gt; struct or &lt;em&gt;Think&lt;/em&gt; function contained in the &lt;em&gt;MyBot.cs&lt;/em&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;The code in MyBot.cs may not exceed the &lt;em&gt;bot brain capacity&lt;/em&gt; of 1024 (see below).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bot Brain Capacity&lt;/h2&gt; &#xA;&lt;p&gt;There is a size limit on the code you create called the &lt;em&gt;bot brain capacity&lt;/em&gt;. This is measured in ‚Äòtokens‚Äô and may not exceed 1024. The number of tokens you have used so far is displayed on the bottom of the screen when running the program.&lt;/p&gt; &#xA;&lt;p&gt;All names (variables, functions, etc.) are counted as a single token, regardless of length. This means that both lines of code: &lt;code&gt;bool a = true;&lt;/code&gt; and &lt;code&gt;bool myObscenelyLongVariableName = true;&lt;/code&gt; count the same. Additionally, the following things do not count towards the limit: white space, new lines, comments, access modifiers, commas, and semicolons.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ and Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/issues/85&#34;&gt;Unable to build/run the project from my IDE/Code editor&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After downloading the project and installing .Net 6.0, open a terminal / command prompt window.&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to the folder where Chess-Challenge.csproj is located using the &lt;code&gt;cd&lt;/code&gt; command. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example: &lt;code&gt;cd C:\Users\MyName\Desktop\Chess-Challenge\Chess-Challenge&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Now use the command: &lt;code&gt;dotnet run&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This should launch the project. If not, open an issue with any error messages and relevant info.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/discussions/3&#34;&gt;Running on Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues with illegal moves or errors when making/undoing a move &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure that you are making and undoing moves in the correct order, and that you don&#39;t forget to undo a move when exiting early from a function for example.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;How to tell what colour MyBot is playing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can look at &lt;code&gt;board.IsWhiteToMove&lt;/code&gt; when the Think function is called&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetPiece()&lt;/code&gt; function is giving a null piece after making a move &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please make sure you are using the latest version of the project, there was a bug with this function in the original version&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;There is a community-run discord server &lt;a href=&#34;https://github.com/SebLague/Chess-Challenge/discussions/156&#34;&gt;over here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>