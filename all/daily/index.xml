<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-28T01:29:40Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>home-assistant/core</title>
    <updated>2023-02-28T01:29:40Z</updated>
    <id>tag:github.com,2023-02-28:/home-assistant/core</id>
    <link href="https://github.com/home-assistant/core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏡 Open source home automation that puts local control and privacy first.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant |Chat Status|&lt;/h1&gt; &#xA;&lt;p&gt;Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;code&gt;home-assistant.io &amp;lt;https://home-assistant.io&amp;gt;&lt;/code&gt;__ for &lt;code&gt;a demo &amp;lt;https://home-assistant.io/demo/&amp;gt;&lt;/code&gt;&lt;strong&gt;, &lt;code&gt;installation instructions &amp;lt;https://home-assistant.io/getting-started/&amp;gt;&lt;/code&gt;&lt;/strong&gt;, &lt;code&gt;tutorials &amp;lt;https://home-assistant.io/getting-started/automation/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;documentation &amp;lt;https://home-assistant.io/docs/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;|screenshot-states|&lt;/p&gt; &#xA;&lt;h2&gt;Featured integrations&lt;/h2&gt; &#xA;&lt;p&gt;|screenshot-integrations|&lt;/p&gt; &#xA;&lt;p&gt;The system is built using a modular approach so support for other devices or actions can be implemented easily. See also the &lt;code&gt;section on architecture &amp;lt;https://developers.home-assistant.io/docs/architecture_index/&amp;gt;&lt;/code&gt;__ and the &lt;code&gt;section on creating your own components &amp;lt;https://developers.home-assistant.io/docs/creating_component_index/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;If you run into issues while using Home Assistant or during development of a component, check the &lt;code&gt;Home Assistant help section &amp;lt;https://home-assistant.io/help/&amp;gt;&lt;/code&gt;__ of our website for further help and information.&lt;/p&gt; &#xA;&lt;p&gt;.. |Chat Status| image:: &lt;a href=&#34;https://img.shields.io/discord/330944238910963714.svg&#34;&gt;https://img.shields.io/discord/330944238910963714.svg&lt;/a&gt; :target: &lt;a href=&#34;https://discord.gg/c5DvZ4e&#34;&gt;https://discord.gg/c5DvZ4e&lt;/a&gt; .. |screenshot-states| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/master/docs/screenshots.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/master/docs/screenshots.png&lt;/a&gt; :target: &lt;a href=&#34;https://home-assistant.io/demo/&#34;&gt;https://home-assistant.io/demo/&lt;/a&gt; .. |screenshot-integrations| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/dev/docs/screenshot-integrations.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/dev/docs/screenshot-integrations.png&lt;/a&gt; :target: &lt;a href=&#34;https://home-assistant.io/integrations/&#34;&gt;https://home-assistant.io/integrations/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Chanzhaoyu/chatgpt-web</title>
    <updated>2023-02-28T01:29:40Z</updated>
    <id>tag:github.com,2023-02-28:/Chanzhaoyu/chatgpt-web</id>
    <link href="https://github.com/Chanzhaoyu/chatgpt-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;用 Express 和 Vue3 搭建的同时支持 openAI Key 和 网页 accessToken 的 ChatGPT 演示网页&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT Web&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用 &lt;code&gt;express&lt;/code&gt; 和 &lt;code&gt;vue3&lt;/code&gt; 搭建的支持 &lt;code&gt;ChatGPT&lt;/code&gt; 双模型演示网页&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/docs/c1-2.8.0.png&#34; alt=&#34;cover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/docs/c2-2.8.0.png&#34; alt=&#34;cover2&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#chatgpt-web&#34;&gt;ChatGPT Web&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E4%BB%8B%E7%BB%8D&#34;&gt;介绍&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%BE%85%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%BA%BF&#34;&gt;待实现路线&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%89%8D%E7%BD%AE%E8%A6%81%E6%B1%82&#34;&gt;前置要求&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#node&#34;&gt;Node&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#pnpm&#34;&gt;PNPM&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%A1%AB%E5%86%99%E5%AF%86%E9%92%A5&#34;&gt;填写密钥&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96&#34;&gt;安装依赖&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%90%8E%E7%AB%AF&#34;&gt;后端&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%89%8D%E7%AB%AF&#34;&gt;前端&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E8%BF%90%E8%A1%8C&#34;&gt;测试环境运行&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1&#34;&gt;后端服务&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%89%8D%E7%AB%AF%E7%BD%91%E9%A1%B5&#34;&gt;前端网页&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E6%89%93%E5%8C%85&#34;&gt;打包&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E4%BD%BF%E7%94%A8-docker&#34;&gt;使用 Docker&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#docker-%E5%8F%82%E6%95%B0%E7%A4%BA%E4%BE%8B&#34;&gt;Docker 参数示例&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#docker-build--run&#34;&gt;Docker build &amp;amp; Run&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#docker-compose&#34;&gt;Docker compose&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E4%BD%BF%E7%94%A8-railway-%E9%83%A8%E7%BD%B2&#34;&gt;使用 Railway 部署&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#railway-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;Railway 环境变量&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E6%89%8B%E5%8A%A8%E6%89%93%E5%8C%85&#34;&gt;手动打包&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1-1&#34;&gt;后端服务&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%89%8D%E7%AB%AF%E7%BD%91%E9%A1%B5-1&#34;&gt;前端网页&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE&#34;&gt;参与贡献&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E8%B5%9E%E5%8A%A9&#34;&gt;赞助&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;支持双模型，提供了两种非官方 &lt;code&gt;ChatGPT API&lt;/code&gt; 方法&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;方式&lt;/th&gt; &#xA;   &lt;th&gt;免费？&lt;/th&gt; &#xA;   &lt;th&gt;可靠性&lt;/th&gt; &#xA;   &lt;th&gt;质量&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ChatGPTAPI(GPT-3)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;可靠&lt;/td&gt; &#xA;   &lt;td&gt;较笨&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI(网页 accessToken)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;相对不可靠&lt;/td&gt; &#xA;   &lt;td&gt;聪明&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;对比：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;ChatGPTAPI&lt;/code&gt; 使用 &lt;code&gt;text-davinci-003&lt;/code&gt; 通过官方&lt;code&gt;OpenAI&lt;/code&gt;补全&lt;code&gt;API&lt;/code&gt;模拟&lt;code&gt;ChatGPT&lt;/code&gt;（最稳健的方法，但它不是免费的，并且没有使用针对聊天进行微调的模型）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt; 使用非官方代理服务器访问 &lt;code&gt;ChatGPT&lt;/code&gt; 的后端&lt;code&gt;API&lt;/code&gt;，绕过&lt;code&gt;Cloudflare&lt;/code&gt;（使用真实的的&lt;code&gt;ChatGPT&lt;/code&gt;，非常轻量级，但依赖于第三方服务器，并且有速率限制）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Chanzhaoyu/chatgpt-web/issues/138&#34;&gt;查看详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;切换方式：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;进入 &lt;code&gt;service/.env&lt;/code&gt; 文件&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;OpenAI API Key&lt;/code&gt; 请填写 &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; 字段 &lt;a href=&#34;https://platform.openai.com/overview&#34;&gt;(获取 apiKey)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;Web API&lt;/code&gt; 请填写 &lt;code&gt;OPENAI_ACCESS_TOKEN&lt;/code&gt; 字段 &lt;a href=&#34;https://chat.openai.com/api/auth/session&#34;&gt;(获取 accessToken)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;同时存在时以 &lt;code&gt;OpenAI API Key&lt;/code&gt; 优先&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;反向代理：&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;时可用 &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api#reverse-proxy&#34;&gt;详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# service/.env&#xA;API_REVERSE_PROXY=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;待实现路线&lt;/h2&gt; &#xA;&lt;p&gt;[✓] 双模型&lt;/p&gt; &#xA;&lt;p&gt;[✓] 多会话储存和上下文逻辑&lt;/p&gt; &#xA;&lt;p&gt;[✓] 对代码等消息类型的格式化美化处理&lt;/p&gt; &#xA;&lt;p&gt;[✗] 界面多语言&lt;/p&gt; &#xA;&lt;p&gt;[✗] 界面主题&lt;/p&gt; &#xA;&lt;p&gt;[✗] More...&lt;/p&gt; &#xA;&lt;h2&gt;前置要求&lt;/h2&gt; &#xA;&lt;h3&gt;Node&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;node&lt;/code&gt; 需要 &lt;code&gt;^16 || ^18&lt;/code&gt; 版本（&lt;code&gt;node &amp;gt;= 14&lt;/code&gt; 需要安装 &lt;a href=&#34;https://github.com/developit/unfetch#usage-as-a-polyfill&#34;&gt;fetch polyfill&lt;/a&gt;），使用 &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; 可管理本地多个 &lt;code&gt;node&lt;/code&gt; 版本&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;node -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PNPM&lt;/h3&gt; &#xA;&lt;p&gt;如果你没有安装过 &lt;code&gt;pnpm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install pnpm -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;填写密钥&lt;/h3&gt; &#xA;&lt;p&gt;获取 &lt;code&gt;Openai Api Key&lt;/code&gt; 或 &lt;code&gt;accessToken&lt;/code&gt; 并填写本地环境变量 &lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E4%BB%8B%E7%BB%8D&#34;&gt;跳转&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# service/.env 文件&#xA;&#xA;# OpenAI API Key - https://platform.openai.com/overview&#xA;OPENAI_API_KEY=&#xA;&#xA;# change this to an `accessToken` extracted from the ChatGPT site&#39;s `https://chat.openai.com/api/auth/session` response&#xA;OPENAI_ACCESS_TOKEN=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安装依赖&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;为了简便 &lt;code&gt;后端开发人员&lt;/code&gt; 的了解负担，所以并没有采用前端 &lt;code&gt;workspace&lt;/code&gt; 模式，而是分文件夹存放。如果只需要前端页面做二次开发，删除 &lt;code&gt;service&lt;/code&gt; 文件夹即可。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;后端&lt;/h3&gt; &#xA;&lt;p&gt;进入文件夹 &lt;code&gt;/service&lt;/code&gt; 运行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;前端&lt;/h3&gt; &#xA;&lt;p&gt;根目录下运行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;测试环境运行&lt;/h2&gt; &#xA;&lt;h3&gt;后端服务&lt;/h3&gt; &#xA;&lt;p&gt;进入文件夹 &lt;code&gt;/service&lt;/code&gt; 运行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;前端网页&lt;/h3&gt; &#xA;&lt;p&gt;根目录下运行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;打包&lt;/h2&gt; &#xA;&lt;h3&gt;使用 Docker&lt;/h3&gt; &#xA;&lt;h4&gt;Docker 参数示例&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt; 二选一&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_ACCESS_TOKEN&lt;/code&gt; 二选一，同时存在时，&lt;code&gt;OPENAI_API_KEY&lt;/code&gt; 优先&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;API_REVERSE_PROXY&lt;/code&gt; 可选，设置 &lt;code&gt;OPENAI_ACCESS_TOKEN&lt;/code&gt; 时可用 &lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/#%E4%BB%8B%E7%BB%8D&#34;&gt;参考&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TIMEOUT_MS&lt;/code&gt; 超时，单位毫秒，可选&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/docs/docker.png&#34; alt=&#34;docker&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Docker build &amp;amp; Run&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t chatgpt-web .&#xA;&#xA;# 前台运行&#xA;docker run --name chatgpt-web --rm -it -p 3002:3002 --env OPENAI_API_KEY=your_api_key chatgpt-web&#xA;&#xA;# 后台运行&#xA;docker run --name chatgpt-web -d -p 3002:3002 --env OPENAI_API_KEY=your_api_key chatgpt-web&#xA;&#xA;# 运行地址&#xA;http://localhost:3002/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker compose&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/repository/docker/chenzhaoyu94/chatgpt-web/general&#34;&gt;Hub 地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  app:&#xA;    image: chenzhaoyu94/chatgpt-web  # 总是使用latest,更新时重新pull该tag镜像即可&#xA;    ports:&#xA;      - 3002:3002&#xA;    environment:&#xA;      # 二选一&#xA;      OPENAI_API_KEY: xxxxxx&#xA;      # 二选一&#xA;      OPENAI_ACCESS_TOKEN: xxxxxx&#xA;      # 反向代理，可选&#xA;      API_REVERSE_PROXY: xxx&#xA;      # 超时，单位毫秒，可选&#xA;      TIMEOUT_MS: 60000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用 Railway 部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/yytmgc&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Railway 环境变量&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;环境变量名称&lt;/th&gt; &#xA;   &lt;th&gt;必填&lt;/th&gt; &#xA;   &lt;th&gt;备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;必填&lt;/td&gt; &#xA;   &lt;td&gt;默认 &lt;code&gt;3002&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TIMEOUT_MS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;可选&lt;/td&gt; &#xA;   &lt;td&gt;超时时间，单位毫秒，&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;OpenAI API&lt;/code&gt; 二选一&lt;/td&gt; &#xA;   &lt;td&gt;使用 &lt;code&gt;OpenAI API&lt;/code&gt; 所需的 &lt;code&gt;apiKey&lt;/code&gt; &lt;a href=&#34;https://platform.openai.com/overview&#34;&gt;(获取 apiKey)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_ACCESS_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Web API&lt;/code&gt; 二选一&lt;/td&gt; &#xA;   &lt;td&gt;使用 &lt;code&gt;Web API&lt;/code&gt; 所需的 &lt;code&gt;accessToken&lt;/code&gt; &lt;a href=&#34;https://chat.openai.com/api/auth/session&#34;&gt;(获取 accessToken)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;API_REVERSE_PROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;可选，&lt;code&gt;Web API&lt;/code&gt; 时可用&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Web API&lt;/code&gt; 反向代理地址 &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api#reverse-proxy&#34;&gt;详情&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意: &lt;code&gt;Railway&lt;/code&gt; 修改环境变量会重新 &lt;code&gt;Deploy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;手动打包&lt;/h3&gt; &#xA;&lt;h4&gt;后端服务&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你不需要本项目的 &lt;code&gt;node&lt;/code&gt; 接口，可以省略如下操作&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;复制 &lt;code&gt;service&lt;/code&gt; 文件夹到你有 &lt;code&gt;node&lt;/code&gt; 服务环境的服务器上。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 安装&#xA;pnpm install&#xA;&#xA;# 打包&#xA;pnpm build&#xA;&#xA;# 运行&#xA;pnpm prod&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PS: 不进行打包，直接在服务器上运行 &lt;code&gt;pnpm start&lt;/code&gt; 也可&lt;/p&gt; &#xA;&lt;h4&gt;前端网页&lt;/h4&gt; &#xA;&lt;p&gt;1、修改根目录下 &lt;code&gt;.env&lt;/code&gt; 内 &lt;code&gt;VITE_APP_API_BASE_URL&lt;/code&gt; 为你的实际后端接口地址&lt;/p&gt; &#xA;&lt;p&gt;2、根目录下运行以下命令，然后将 &lt;code&gt;dist&lt;/code&gt; 文件夹内的文件复制到你网站服务的根目录下&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cn.vitejs.dev/guide/static-deploy.html#building-the-app&#34;&gt;参考信息&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;p&gt;Q: 为什么 &lt;code&gt;Git&lt;/code&gt; 提交总是报错？&lt;/p&gt; &#xA;&lt;p&gt;A: 因为有提交信息验证，请遵循 &lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/CONTRIBUTING.md&#34;&gt;Commit 指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: 如果只使用前端页面，在哪里改请求接口？&lt;/p&gt; &#xA;&lt;p&gt;A: 根目录下 &lt;code&gt;.env&lt;/code&gt; 文件中的 &lt;code&gt;VITE_GLOB_API_URL&lt;/code&gt; 字段。&lt;/p&gt; &#xA;&lt;p&gt;Q: 文件保存时全部爆红?&lt;/p&gt; &#xA;&lt;p&gt;A: &lt;code&gt;vscode&lt;/code&gt; 请安装项目推荐插件，或手动安装 &lt;code&gt;Eslint&lt;/code&gt; 插件。&lt;/p&gt; &#xA;&lt;h2&gt;参与贡献&lt;/h2&gt; &#xA;&lt;p&gt;贡献之前请先阅读 &lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/CONTRIBUTING.md&#34;&gt;贡献指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢所有做过贡献的人!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/Chanzhaoyu/chatgpt-web/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=Chanzhaoyu/chatgpt-web&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得这个项目对你有帮助，并且情况允许的话，可以给我一点点支持，总之非常感谢支持～&lt;/p&gt; &#xA;&lt;div style=&#34;display: flex; gap: 20px;&#34;&gt; &#xA; &lt;div style=&#34;text-align: center&#34;&gt; &#xA;  &lt;img style=&#34;max-width: 100%&#34; src=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/docs/wechat.png&#34; alt=&#34;微信&#34;&gt; &#xA;  &lt;p&gt;WeChat Pay&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;div style=&#34;text-align: center&#34;&gt; &#xA;  &lt;img style=&#34;max-width: 100%&#34; src=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/docs/alipay.png&#34; alt=&#34;支付宝&#34;&gt; &#xA;  &lt;p&gt;Alipay&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://raw.githubusercontent.com/Chanzhaoyu/chatgpt-web/main/license&#34;&gt;ChenZhaoYu&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookresearch/llama</title>
    <updated>2023-02-28T01:29:40Z</updated>
    <id>tag:github.com,2023-02-28:/facebookresearch/llama</id>
    <link href="https://github.com/facebookresearch/llama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Inference code for LLaMA models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LLaMA&lt;/h1&gt; &#xA;&lt;p&gt;This repository is intended as a minimal, hackable and readable example to load &lt;a href=&#34;https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models/&#34;&gt;LLaMA&lt;/a&gt; models and run inference. In order to download the checkpoints and tokenizer, fill this &lt;a href=&#34;https://forms.gle/jk851eBVbX1m5TAv5&#34;&gt;google form&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;In a conda env with pytorch / cuda available, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then in this repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Once your request is approved, you will receive links to download the tokenizer and model files. Edit the &lt;code&gt;download.sh&lt;/code&gt; script with the signed url provided in the email to download the model weights and tokenizer.&lt;/p&gt; &#xA;&lt;h3&gt;Inference&lt;/h3&gt; &#xA;&lt;p&gt;The provided &lt;code&gt;example.py&lt;/code&gt; can be run on a single or multi-gpu node with &lt;code&gt;torchrun&lt;/code&gt; and will output completions for two pre-defined prompts. Using &lt;code&gt;TARGET_FOLDER&lt;/code&gt; as defined in &lt;code&gt;download.sh&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;torchrun --nproc_per_node MP example.py --ckpt_dir $TARGET_FOLDER/model_size --tokenizer_path $TARGET_FOLDER/tokenizer.model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Different models require different MP values:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;MP&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13B&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30B&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;65B&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Model Card&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/llama/main/MODEL_CARD.md&#34;&gt;MODEL_CARD.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/llama/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>