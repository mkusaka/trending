<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-05T01:22:59Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>princeton-nlp/SWE-agent</title>
    <updated>2024-04-05T01:22:59Z</updated>
    <id>tag:github.com,2024-04-05:/princeton-nlp/SWE-agent</id>
    <link href="https://github.com/princeton-nlp/SWE-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SWE-agent: Agent Computer Interfaces Enable Software Engineering Language Models&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.swe-agent.com/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/assets/swe-agent-banner.png&#34; alt=&#34;swe-agent.com&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://swe-agent.com&#34;&gt;&lt;strong&gt;Website &amp;amp; Demo&lt;/strong&gt;&lt;/a&gt;&amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://discord.gg/AVEFbBn2rH&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;&amp;nbsp; | &amp;nbsp; &lt;strong&gt;Paper [coming April 10th]&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üëã Overview &lt;a name=&#34;overview&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;SWE-agent turns LMs (e.g. GPT-4) into software engineering agents that can fix bugs and issues in real GitHub repositories.&lt;/p&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://github.com/princeton-nlp/SWE-bench&#34;&gt;SWE-bench&lt;/a&gt;, SWE-agent resolves &lt;strong&gt;12.29%&lt;/strong&gt; of issues, achieving the state-of-the-art performance on the full test set.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/assets/results+preview.png&#34; style=&#34;width: 80%; height: auto;&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;‚ú® Agent-Computer Interface (ACI) &lt;a name=&#34;aci&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We accomplish these results by designing simple LM-centric commands and feedback formats to make it easier for the LM to browse the repository, view, edit and execute code files. We call this an &lt;strong&gt;Agent-Computer Interface&lt;/strong&gt; (ACI) and build the SWE-agent repository to make it easy to iterate on ACI design for repository-level coding agents.&lt;/p&gt; &#xA;&lt;p&gt;Just like how typical language models requires good prompt engineering, good ACI design leads to much better results when using agents. As we show in our paper, a baseline agent without a well-tuned ACI does much worse than SWE-agent.&lt;/p&gt; &#xA;&lt;p&gt;SWE-agent contains features that we discovered to be immensely helpful during the agent-computer interface design process:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;We add a linter that runs when an edit command is issued, and do not let the edit command go through if the code isn&#39;t syntactically correct.&lt;/li&gt; &#xA; &lt;li&gt;We supply the agent with a special-built file viewer, instead of having it just &lt;code&gt;cat&lt;/code&gt; files. We found that this file viewer works best when displaying just 100 lines in each turn. The file editor that we built has commands for scrolling up and down and for performing a search within the file.&lt;/li&gt; &#xA; &lt;li&gt;We supply the agent with a special-built full-directory string searching command. We found that it was important for this tool to succintly list the matches- we simply list each file that had at least one match. Showing the model more context about each match proved to be too confusing for the model.&lt;/li&gt; &#xA; &lt;li&gt;When commands have an empty output we return a message saying &#34;Your command ran successfully and did not produce any output.&#34;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Read our paper for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{yang2024sweagent,&#xA;      title={SWE-agent: Agent Computer Interfaces Enable Software Engineering Language Models}, &#xA;      author={John Yang and Carlos E. Jimenez and Alexander Wettig and Shunyu Yao and Karthik Narasimhan and Ofir Press},&#xA;      year={2024},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Setup &lt;a name=&#34;setup&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker&lt;/a&gt;, then start Docker locally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.anaconda.com/free/miniconda/miniconda-install/&#34;&gt;Install Miniconda&lt;/a&gt;, then create the &lt;code&gt;swe-agent&lt;/code&gt; environment with &lt;code&gt;conda env create -f environment.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Activate using &lt;code&gt;conda activate swe-agent&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./setup.sh&lt;/code&gt; to create the &lt;code&gt;swe-agent&lt;/code&gt; docker image.&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;keys.cfg&lt;/code&gt; file at the root of this repository and fill in the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;GITHUB_TOKEN: &#39;GitHub Token Here (required)&#39;&#xA;OPENAI_API_KEY: &#39;OpenAI API Key Here if using OpenAI Model (optional)&#39;&#xA;ANTHROPIC_API_KEY: &#39;Anthropic API Key Here if using Anthropic Model (optional)&#39;&#xA;TOGETHER_API_KEY: &#39;Together API Key Here if using Together Model (optional)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the following links for tutorials on obtaining &lt;a href=&#34;https://docs.anthropic.com/claude/reference/getting-started-with-the-api&#34;&gt;Anthropic&lt;/a&gt;, &lt;a href=&#34;https://platform.openai.com/docs/quickstart/step-2-set-up-your-api-key&#34;&gt;OpenAI&lt;/a&gt;, and &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens&#34;&gt;Github&lt;/a&gt; tokens.&lt;/p&gt; &#xA;&lt;h2&gt;üíΩ Usage &lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;There are two steps to the SWE-agent pipeline. First SWE-agent takes an input GitHub issue and returns a pull request that attempts to fix it. We call that step &lt;em&gt;inference&lt;/em&gt;. The second step (currently, only available for issues in the SWE-bench benchmark) is to &lt;em&gt;evaluate&lt;/em&gt; the pull request to verify that it has indeed fixed the issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: At this moment, there are known issues with a small number of repositories that don&#39;t install properly for &lt;code&gt;arm64&lt;/code&gt; / &lt;code&gt;aarch64&lt;/code&gt; architecture computers. We&#39;re working on a fix, but if you&#39;d like to run and evaluate on the entirety of SWE-bench, the easiest way is by using an &lt;code&gt;x86&lt;/code&gt; machine.&lt;/p&gt; &#xA;&lt;h3&gt;üë©‚Äçüíª Inference &lt;a name=&#34;inference&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inference on &lt;em&gt;any&lt;/em&gt; GitHub Issue&lt;/strong&gt;: Using this script, you can run SWE-agent on any GitHub issue!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python run.py --model_name gpt4 \&#xA;  --data_path https://github.com/pvlib/pvlib-python/issues/1603 \&#xA;  --config_file config/default_from_url.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inference on SWE-bench&lt;/strong&gt;: Run SWE-agent on &lt;a href=&#34;https://www.swebench.com/lite.html&#34;&gt;SWE-bench Lite&lt;/a&gt; and generate patches.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python run.py --model_name gpt4 \&#xA;  --per_instance_cost_limit 2.00 \&#xA;  --config_file ./config/default.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to run on a &lt;em&gt;single&lt;/em&gt; issue from SWE-bench, use the &lt;code&gt;--instance_filter&lt;/code&gt; option as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python run.py --model_name gpt4 \&#xA;  --instance_filter marshmallow-code__marshmallow-1359&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/scripts/&#34;&gt;&lt;code&gt;scripts/&lt;/code&gt;&lt;/a&gt; folder for other useful scripts and details.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/config/&#34;&gt;&lt;code&gt;config/&lt;/code&gt;&lt;/a&gt; folder for details about how you can define your own configuration!&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/sweagent/agent/&#34;&gt;&lt;code&gt;sweagent/agent/&lt;/code&gt;&lt;/a&gt; folder for details about the logic behind configuration based workflows.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/sweagent/environment/&#34;&gt;&lt;code&gt;sweagent/environment/&lt;/code&gt;&lt;/a&gt; folder for details about the &lt;code&gt;SWEEnv&lt;/code&gt; environment (interface + implementation).&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/trajectories&#34;&gt;&lt;code&gt;trajectories/&lt;/code&gt;&lt;/a&gt; folder for details about the output of &lt;code&gt;run.py&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üß™ Evaluation &lt;a name=&#34;evaluation&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This step is only available for issues from the SWE-bench set. To evaluate generated pull requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd evaluation/&#xA;./run_eval.sh &amp;lt;predictions_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;predictions_path&amp;gt;&lt;/code&gt; with the path to the model&#39;s predictions, which should be generated from the &lt;em&gt;Inference&lt;/em&gt; step. The &lt;code&gt;&amp;lt;predictions_path&amp;gt;&lt;/code&gt; arguments should look like &lt;code&gt;../trajectories/&amp;lt;username&amp;gt;/&amp;lt;model&amp;gt;-&amp;lt;dataset&amp;gt;-&amp;lt;hyperparams&amp;gt;/all_preds.jsonl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/princeton-nlp/SWE-agent/main/evaluation/&#34;&gt;&lt;code&gt;evaluation/&lt;/code&gt;&lt;/a&gt; folder for details about how evaluation works.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üí´ Contributions &lt;a name=&#34;contributions&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you&#39;d like to ask questions, learn about upcoming features, and participate in future development, join our &lt;a href=&#34;https://discord.gg/AVEFbBn2rH&#34;&gt;Discord community&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to contribute to the codebase, we welcome &lt;a href=&#34;https://github.com/princeton-nlp/SWE-agent/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/princeton-nlp/SWE-agent/pulls&#34;&gt;pull requests&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to see a post or tutorial about some topic, please let us know via an &lt;a href=&#34;https://github.com/princeton-nlp/SWE-agent/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contact person: &lt;a href=&#34;https://john-b-yang.github.io/&#34;&gt;John Yang&lt;/a&gt; and &lt;a href=&#34;http://www.carlosejimenez.com/&#34;&gt;Carlos E. Jimenez&lt;/a&gt; (Email: {jy1682, carlosej}@princeton.edu).&lt;/p&gt; &#xA;&lt;h2&gt;ü™™ License &lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;MIT. Check &lt;code&gt;LICENSE&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HeyPuter/puter</title>
    <updated>2024-04-05T01:22:59Z</updated>
    <id>tag:github.com,2024-04-05:/HeyPuter/puter</id>
    <link href="https://github.com/HeyPuter/puter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåê The Internet OS! Free, Open-Source, and Self-Hostable!&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt;&lt;img width=&#34;80&#34; alt=&#34;Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time.&#34; src=&#34;https://assets.puter.site/puter-logo.png&#34;&gt;&lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;The Internet OS! Free, Open-Source, and Self-Hostable!&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://puter.com/&#34;&gt;&lt;strong&gt;¬´ LIVE DEMO ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://puter.com&#34;&gt;Puter.com&lt;/a&gt; ¬∑ &lt;a href=&#34;https://docs.puter.com&#34; target=&#34;_blank&#34;&gt;SDK&lt;/a&gt; ¬∑ &lt;a href=&#34;https://discord.com/invite/PQcx7Teh8u&#34;&gt;Discord&lt;/a&gt; ¬∑ &lt;a href=&#34;https://reddit.com/r/puter&#34;&gt;Reddit&lt;/a&gt; ¬∑ &lt;a href=&#34;https://twitter.com/HeyPuter&#34;&gt;X (Twitter)&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;img width=&#34;700&#34; style=&#34;border-radius:5px;&#34; alt=&#34;screenshot&#34; src=&#34;https://assets.puter.site/puter.com-screenshot-2.webp&#34;&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Puter&lt;/h2&gt; &#xA;&lt;p&gt;Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. It can be used to build remote desktop environments or serve as an interface for cloud storage services, remote servers, web hosting platforms, and more.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;After reading this section, please proceed to &lt;strong&gt;Self-Hosting&lt;/strong&gt; and &lt;strong&gt;Configuration&lt;/strong&gt; below. Read these instructions carefully or you may see errors due to an invalid setup.&lt;/p&gt; &#xA;&lt;h3&gt;Local Development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/HeyPuter/puter&#xA;cd puter&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will launch Puter at &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt; (or the next available port).&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;note:&lt;/strong&gt; it is &lt;strong&gt;not&lt;/strong&gt; necessary to run this within a clone of this repository. For contributors, it is recommended to use the &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/#local-development&#34;&gt;Local Development&lt;/a&gt; instructions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir puter &amp;amp;&amp;amp; cd puter &amp;amp;&amp;amp; mkdir -p puter/config puter/data &amp;amp;&amp;amp; sudo chown -R 1000:1000 puter &amp;amp;&amp;amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;note:&lt;/strong&gt; it is &lt;strong&gt;not&lt;/strong&gt; necessary to run this within a clone of this repository. For contributors, it is recommended to use the &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/#local-development&#34;&gt;Local Development&lt;/a&gt; instructions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p puter/config puter/data&#xA;sudo chown -R 1000:1000 puter&#xA;wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml&#xA;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/#configuration&#34;&gt;Configuration&lt;/a&gt; for next steps.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Self-Hosting ‚ö†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;The self-hosted version of Puter is currently in alpha stage and should not be used in production yet. It is under active development and may contain bugs, other issues. Please exercise caution and use it for testing and evaluation purposes only.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Running the server will generate a configuration file in one of these locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;config/config.json&lt;/code&gt; when &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/#using-docker&#34;&gt;Using Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;volatile/config/config.json&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/#local-development&#34;&gt;Local Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/etc/puter/config.json&lt;/code&gt; on a server (or within a Docker container)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Domain Name&lt;/h3&gt; &#xA;&lt;p&gt;To access Puter on your device, you can simply go to the address printed in the server console (usually &lt;code&gt;puter.localhost:4100&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To access Puter from another device, a domain name must be configured, as well as an &lt;code&gt;api&lt;/code&gt; subdomain. For example, &lt;code&gt;example.local&lt;/code&gt; might be the domain name pointing to the IP address of the server running puter, and &lt;code&gt;api.example.com&lt;/code&gt; must point to this address as well. This domain must be specified in the configuration file (usually &lt;code&gt;volatile/config/config.json&lt;/code&gt;) as well.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/HeyPuter/puter/main/doc/self-hosters/domains.md&#34;&gt;domain configuration&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Configure the Port&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can specify a custom port by setting &lt;code&gt;http_port&lt;/code&gt; to a desired value&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re using a reverse-proxy such as nginx or cloudflare, you should also set &lt;code&gt;pub_port&lt;/code&gt; to the public (external) port (usually &lt;code&gt;443&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you have HTTPS enabled on your reverse-proxy, ensure that &lt;code&gt;protocol&lt;/code&gt; in config.json is set accordingly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Default User&lt;/h3&gt; &#xA;&lt;p&gt;By default, Puter will create a user called &lt;code&gt;default_user&lt;/code&gt;. This user will have a randomly generated password, which will be printed in the development console. A warning will persist in the dev console until this user&#39;s password is changed. Please login to this user and change the password as your first step. This user by default has 10GB storage instead of the default (500MB storage) for new/temporary users.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;‚ùì What&#39;s the use case for Puter?&lt;/h3&gt; &#xA;&lt;p&gt;Puter can be used as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.&lt;/li&gt; &#xA; &lt;li&gt;Remote desktop environment for servers and workstations.&lt;/li&gt; &#xA; &lt;li&gt;A platform for building and hosting websites, web apps, and games.&lt;/li&gt; &#xA; &lt;li&gt;A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;‚ùì Why isn&#39;t Puter built with React, Angular, Vue, etc.?&lt;/h3&gt; &#xA;&lt;p&gt;For performance reasons, Puter is built with vanilla JavaScript and jQuery. Additionally, we&#39;d like to avoid complex abstractions and to remain in control of the entire stack, as much as possible.&lt;/p&gt; &#xA;&lt;p&gt;Also partly inspired by some of our favorite projects that are not built with frameworks: &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;VSCode&lt;/a&gt;, &lt;a href=&#34;https://www.photopea.com/&#34;&gt;Photopea&lt;/a&gt;, and &lt;a href=&#34;https://www.onlyoffice.com/&#34;&gt;OnlyOffice&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;‚ùì Why jQuery?&lt;/h3&gt; &#xA;&lt;p&gt;Puter interacts directly with the DOM and jQuery provides an elegant yet powerful API to manipulate the DOM, handle events, and much more. It&#39;s also fast, mature, and battle-tested.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;#DoesItRunPuter&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/HeyPuter/status/1771957571496092036&#34;&gt;Minecraft&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/watch?v=GIowZUXkg5g&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/HeyPuter/status/1767978053014270059&#34;&gt;PlayStation 4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ericalexdube/status/1767983049277411564&#34;&gt;Skyworth TV&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/HeyPuter/status/1768664081756754012&#34;&gt;Oculus Quest 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/HeyPuter/status/1767971178864587057&#34;&gt;Tesla Model S&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/HeyPuter/status/1772858333751636310&#34;&gt;Tesla Model Y&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tesla Model 3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The default wallpaper is created by &lt;a href=&#34;https://unsplash.com/photos/blue-orange-and-yellow-wallpaper-E8Ufcyxz514&#34;&gt;Milad Fakurian&lt;/a&gt; and published on &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Icons by &lt;a href=&#34;https://github.com/PapirusDevelopmentTeam/papirus-icon-theme&#34;&gt;Papirus&lt;/a&gt; under GPL-3.0 license.&lt;/p&gt; &#xA;&lt;p&gt;Icons by &lt;a href=&#34;https://iconoir.com/&#34;&gt;Iconoir&lt;/a&gt; under MIT license.&lt;/p&gt; &#xA;&lt;p&gt;Icons by &lt;a href=&#34;https://github.com/elementary/icons&#34;&gt;Elementary Icons&lt;/a&gt; under GPL-3.0 license.&lt;/p&gt; &#xA;&lt;p&gt;Icons by &lt;a href=&#34;https://tabler.io/&#34;&gt;Tabler Icons&lt;/a&gt; under MIT license.&lt;/p&gt; &#xA;&lt;p&gt;Icons by &lt;a href=&#34;https://icons.getbootstrap.com/&#34;&gt;bootstrap-icons&lt;/a&gt; under MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firebase/firebase-ios-sdk</title>
    <updated>2024-04-05T01:22:59Z</updated>
    <id>tag:github.com,2024-04-05:/firebase/firebase-ios-sdk</id>
    <link href="https://github.com/firebase/firebase-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firebase SDK for Apple App Development&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Firebase/firebase-ios-sdk?style=flat&amp;amp;label=CocoaPods&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/firebase/firebase-ios-sdk&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Firebase/firebase-ios-sdk?style=flat&amp;amp;label=Swift%20Package%20Index&amp;amp;color=red&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/Firebase/firebase-ios-sdk?style=flat&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://swiftpackageindex.com/firebase/firebase-ios-sdk&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Ffirebase%2Ffirebase-ios-sdk%2Fbadge%3Ftype%3Dplatforms&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/firebase/firebase-ios-sdk&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Ffirebase%2Ffirebase-ios-sdk%2Fbadge%3Ftype%3Dswift-versions&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Firebase Apple Open Source Development&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for all Apple platform Firebase SDKs except FirebaseAnalytics.&lt;/p&gt; &#xA;&lt;p&gt;Firebase is an app development platform with tools to help you build, grow, and monetize your app. More information about Firebase can be found on the &lt;a href=&#34;https://firebase.google.com&#34;&gt;official Firebase website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See the subsections below for details about the different installation methods. Where available, it&#39;s recommended to install any libraries with a &lt;code&gt;Swift&lt;/code&gt; suffix to get the best experience when writing your app in Swift.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#standard-pod-install&#34;&gt;Standard pod install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#installing-from-github&#34;&gt;Installing from the GitHub repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/#carthage-ios-only&#34;&gt;Experimental Carthage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Standard pod install&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the standard pod install, visit: &lt;a href=&#34;https://firebase.google.com/docs/ios/setup&#34;&gt;https://firebase.google.com/docs/ios/setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; support can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/SwiftPackageManager.md&#34;&gt;SwiftPackageManager.md&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Installing from GitHub&lt;/h3&gt; &#xA;&lt;p&gt;These instructions can be used to access the Firebase repo at other branches, tags, or commits.&lt;/p&gt; &#xA;&lt;h4&gt;Background&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://guides.cocoapods.org/syntax/podfile.html#pod&#34;&gt;the Podfile Syntax Reference&lt;/a&gt; for instructions and options about overriding pod source locations.&lt;/p&gt; &#xA;&lt;h4&gt;Accessing Firebase Source Snapshots&lt;/h4&gt; &#xA;&lt;p&gt;All official releases are tagged in this repo and available via CocoaPods. To access a local source snapshot or unreleased branch, use Podfile directives like the following:&lt;/p&gt; &#xA;&lt;p&gt;To access FirebaseFirestore via a branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;main&#39;&#xA;pod &#39;FirebaseFirestore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;main&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access FirebaseMessaging via a checked-out version of the firebase-ios-sdk repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;pod &#39;FirebaseMessaging&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage (iOS only)&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for the experimental Carthage distribution can be found at &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Carthage.md&#34;&gt;Carthage.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Firebase from a Framework or a library&lt;/h3&gt; &#xA;&lt;p&gt;For details on using Firebase from a Framework or a library, refer to &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/docs/firebase_in_libraries.md&#34;&gt;firebase_in_libraries.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To develop Firebase software in this repository, ensure that you have at least the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 14.1 (or later)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CocoaPods is still the canonical way to develop, but much of the repo now supports development with Swift Package Manager.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Install the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CocoaPods 1.12.0 (or later)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/cocoapods-generate&#34;&gt;CocoaPods generate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the pod that you want to develop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod gen Firebase{name here}.podspec --local-sources=./ --auto-open --platforms=ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If the CocoaPods cache is out of date, you may need to run &lt;code&gt;pod repo update&lt;/code&gt; before the &lt;code&gt;pod gen&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Note: Set the &lt;code&gt;--platforms&lt;/code&gt; option to &lt;code&gt;macos&lt;/code&gt; or &lt;code&gt;tvos&lt;/code&gt; to develop/test for those platforms. Since 10.2, Xcode does not properly handle multi-platform CocoaPods workspaces.&lt;/p&gt; &#xA;&lt;p&gt;Firestore has a self-contained Xcode project. See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Firestore/README.md&#34;&gt;Firestore/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h4&gt;Development for Catalyst&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pod gen {name here}.podspec --local-sources=./ --auto-open --platforms=ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the Mac box in the App-iOS Build Settings&lt;/li&gt; &#xA; &lt;li&gt;Sign the App in the Settings Signing &amp;amp; Capabilities tab&lt;/li&gt; &#xA; &lt;li&gt;Click Pods in the Project Manager&lt;/li&gt; &#xA; &lt;li&gt;Add Signing to the iOS host app and unit test targets&lt;/li&gt; &#xA; &lt;li&gt;Select the Unit-unit scheme&lt;/li&gt; &#xA; &lt;li&gt;Run it to build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively, disable signing in each target:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to Build Settings tab&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Add User-Defined Setting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;CODE_SIGNING_REQUIRED&lt;/code&gt; setting with a value of &lt;code&gt;NO&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable test schemes: &lt;code&gt;./scripts/setup_spm_tests.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;open Package.swift&lt;/code&gt; or double click &lt;code&gt;Package.swift&lt;/code&gt; in Finder.&lt;/li&gt; &#xA; &lt;li&gt;Xcode will open the project &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Choose a scheme for a library to build or test suite to run&lt;/li&gt; &#xA;   &lt;li&gt;Choose a target platform by selecting the run destination along with the scheme&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding a New Firebase Pod&lt;/h3&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/AddNewPod.md&#34;&gt;AddNewPod&lt;/a&gt; Markdown file for details.&lt;/p&gt; &#xA;&lt;h3&gt;Managing Headers and Imports&lt;/h3&gt; &#xA;&lt;p&gt;For information about managing headers and imports, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/HeadersImports.md&#34;&gt;HeadersImports&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that the code is formatted consistently, run the script &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/raw/main/scripts/check.sh&#34;&gt;./scripts/check.sh&lt;/a&gt; before creating a pull request (PR).&lt;/p&gt; &#xA;&lt;p&gt;GitHub Actions will verify that any code changes are done in a style-compliant way. Install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;mint&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install clang-format@18&#xA;brew install mint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Select a scheme and press Command-u to build a component and run its unit tests.&lt;/p&gt; &#xA;&lt;h3&gt;Running Sample Apps&lt;/h3&gt; &#xA;&lt;p&gt;To run the sample apps and integration tests, you&#39;ll need a valid &lt;code&gt;GoogleService-Info.plist &lt;/code&gt; file. The Firebase Xcode project contains dummy plist files without real values, but they can be replaced with real plist files. To get your own &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;Firebase Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a new Firebase project, if you don&#39;t already have one&lt;/li&gt; &#xA; &lt;li&gt;For each sample app you want to test, create a new Firebase app with the sample app&#39;s bundle identifier (e.g., &lt;code&gt;com.google.Database-Example&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Download the resulting &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; and add it to the Xcode project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Coverage Report Generation&lt;/h3&gt; &#xA;&lt;p&gt;For coverage report generation instructions, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/scripts/code_coverage_report/README.md&#34;&gt;scripts/code_coverage_report/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h2&gt;Specific Component Instructions&lt;/h2&gt; &#xA;&lt;p&gt;See the sections below for any special instructions for those components.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Auth&lt;/h3&gt; &#xA;&lt;p&gt;For specific Firebase Auth development, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseAuth/Tests/Sample/README.md&#34;&gt;Auth Sample README&lt;/a&gt; for instructions about building and running the FirebaseAuth pod along with various samples and tests.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Database&lt;/h3&gt; &#xA;&lt;p&gt;The Firebase Database Integration tests can be run against a locally running Database Emulator or against a production instance.&lt;/p&gt; &#xA;&lt;p&gt;To run against a local emulator instance, invoke &lt;code&gt;./scripts/run_database_emulator.sh start&lt;/code&gt; before running the integration test.&lt;/p&gt; &#xA;&lt;p&gt;To run against a production instance, provide a valid &lt;code&gt;GoogleServices-Info.plist&lt;/code&gt; and copy it to &lt;code&gt;FirebaseDatabase/Tests/Resources/GoogleService-Info.plist&lt;/code&gt;. Your Security Rule must be set to &lt;a href=&#34;https://firebase.google.com/docs/database/security/quickstart&#34;&gt;public&lt;/a&gt; while your tests are running.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Dynamic Links&lt;/h3&gt; &#xA;&lt;p&gt;Firebase Dynamic Links is &lt;strong&gt;deprecated&lt;/strong&gt; and should not be used in new projects. The service will shut down on August 25, 2025.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://firebase.google.com/support/dynamic-links-faq&#34;&gt;Dynamic Links Deprecation FAQ documentation&lt;/a&gt; for more guidance.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Performance Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;For specific Firebase Performance Monitoring development, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebasePerformance/README.md&#34;&gt;the Performance README&lt;/a&gt; for instructions about building the SDK and &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebasePerformance/Tests/TestApp/README.md&#34;&gt;the Performance TestApp README&lt;/a&gt; for instructions about integrating Performance with the dev test App.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Storage&lt;/h3&gt; &#xA;&lt;p&gt;To run the Storage Integration tests, follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseStorage/Tests/Integration/StorageIntegration.swift&#34;&gt;StorageIntegration.swift&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Push Notifications&lt;/h4&gt; &#xA;&lt;p&gt;Push notifications can only be delivered to specially provisioned App IDs in the developer portal. In order to test receiving push notifications, you will need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the bundle identifier of the sample app to something you own in your Apple Developer account and enable that App ID for push notifications.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll also need to &lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging/ios/certs&#34;&gt;upload your APNs Provider Authentication Key or certificate to the Firebase Console&lt;/a&gt; at &lt;strong&gt;Project Settings &amp;gt; Cloud Messaging &amp;gt; [Your Firebase App]&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure your iOS device is added to your Apple Developer portal as a test device.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;iOS Simulator&lt;/h4&gt; &#xA;&lt;p&gt;The iOS Simulator cannot register for remote notifications and will not receive push notifications. To receive push notifications, follow the steps above and run the app on a physical device.&lt;/p&gt; &#xA;&lt;h2&gt;Building with Firebase on Apple platforms&lt;/h2&gt; &#xA;&lt;p&gt;Firebase provides official beta support for macOS, Catalyst, and tvOS. visionOS and watchOS are community supported. Thanks to community contributions for many of the multi-platform PRs.&lt;/p&gt; &#xA;&lt;p&gt;At this time, most of Firebase&#39;s products are available across Apple platforms. There are still a few gaps, especially on visionOS and watchOS. For details about the current support matrix, see &lt;a href=&#34;https://firebase.google.com/docs/ios/learn-more#firebase_library_support_by_platform&#34;&gt;this chart&lt;/a&gt; in Firebase&#39;s documentation.&lt;/p&gt; &#xA;&lt;h3&gt;visionOS&lt;/h3&gt; &#xA;&lt;p&gt;Where supported, visionOS works as expected with the exception of Firestore via Swift Package Manager where it is required to use the source distribution.&lt;/p&gt; &#xA;&lt;p&gt;To enable the Firestore source distribution, quit Xcode and open the desired project from the command line with the &lt;code&gt;FIREBASE_SOURCE_FIRESTORE&lt;/code&gt; environment variable: &lt;code&gt;open --env FIREBASE_SOURCE_FIRESTORE /path/to/project.xcodeproj&lt;/code&gt;. To go back to using the binary distribution of Firestore, quit Xcode and open Xcode like normal, without the environment variable.&lt;/p&gt; &#xA;&lt;h3&gt;watchOS&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, many of Firebase SDKs now compile, run unit tests, and work on watchOS. See the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/Example/watchOSSample&#34;&gt;Independent Watch App Sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that watchOS is not officially supported by Firebase. While we can catch basic unit test issues with GitHub Actions, there may be some changes where the SDK no longer works as expected on watchOS. If you encounter this, please &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;During app setup in the console, you may get to a step that mentions something like &#34;Checking if the app has communicated with our servers&#34;. This relies on Analytics and will not work on watchOS. &lt;strong&gt;It&#39;s safe to ignore the message and continue&lt;/strong&gt;, the rest of the SDKs will work as expected.&lt;/p&gt; &#xA;&lt;h4&gt;Additional Crashlytics Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;watchOS has limited support. Due to watchOS restrictions, mach exceptions and signal crashes are not recorded. (Crashes in SwiftUI are generated as mach exceptions, so will not be recorded)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Combine&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, &lt;em&gt;FirebaseCombineSwift&lt;/em&gt; contains support for Apple&#39;s Combine framework. This module is currently under development and not yet supported for use in production environments. For more details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/FirebaseCombineSwift/README.md&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; for more about the Firebase Apple SDK Open Source plans and directions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more information on contributing to the Firebase Apple SDK.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repository are licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your use of Firebase is governed by the &lt;a href=&#34;https://firebase.google.com/terms/&#34;&gt;Terms of Service for Firebase Services&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>