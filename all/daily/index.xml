<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-07T01:28:00Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emcf/engshell</title>
    <updated>2023-04-07T01:28:00Z</updated>
    <id>tag:github.com,2023-04-07:/emcf/engshell</id>
    <link href="https://github.com/emcf/engshell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An English-language shell for any OS, powered by LLMs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;engshell&lt;/h1&gt; &#xA;&lt;h2&gt;An English-language shell for any OS, powered by LLMs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/11333708/229642800-8441789e-1af4-4e47-86a1-bd337c81aac8.mp4&#34;&gt;https://user-images.githubusercontent.com/11333708/229642800-8441789e-1af4-4e47-86a1-bd337c81aac8.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install requirements: &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;create &lt;code&gt;keys.py&lt;/code&gt; in the engshell directory to define &lt;code&gt;OPENAI_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;python engshell.py&lt;/code&gt; to open engshell&lt;/li&gt; &#xA; &lt;li&gt;OPTIONAL: Add the engshell directory to your PATH environment variable to access it from anywhere.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--llm&lt;/code&gt; encourages LLM queries from within the code execution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--debug&lt;/code&gt; allows engshell to debug its own code if it fails.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--showcode&lt;/code&gt; shows the code being executed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;clear&lt;/code&gt; resets engshell&#39;s memory, along with the console.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;üîß General:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;record my screen for the next 10 seconds, then save it as an mp4.&lt;/li&gt; &#xA; &lt;li&gt;compress that mp4 by a factor 2x, then trim the last 2 seconds, and save it as edited.mp4.&lt;/li&gt; &#xA; &lt;li&gt;check the weather, then ask gpt3 what i should wear today&lt;/li&gt; &#xA; &lt;li&gt;print files in current directory in a table by type&lt;/li&gt; &#xA; &lt;li&gt;Use DALL-E to generate a picture of a cat wearing a suit, then open my web browser to the picture&lt;/li&gt; &#xA; &lt;li&gt;save text files for the first 10 fibonacci numbers&lt;/li&gt; &#xA; &lt;li&gt;print headlines from CBC&lt;/li&gt; &#xA; &lt;li&gt;print a cake recipe, then open up amazon to where i can buy these ingredients. open each ingredient in a new tab&lt;/li&gt; &#xA; &lt;li&gt;make my wallpaper a picture of a castle (requires UNSPLASH_API_KEY to be set)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üß† Complexity Tests:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;solve d^2y/dx^2 = sin(2x) + x with sympy --debug&lt;/li&gt; &#xA; &lt;li&gt;find the second derivative of C1 + C2&lt;em&gt;x + x**3/6 - sin(2&lt;/em&gt;x)/4 with respect to x --debug&lt;/li&gt; &#xA; &lt;li&gt;make a powerpoint presentation about Eddington Luminosity based on the wikipedia sections --debug -llm&lt;/li&gt; &#xA; &lt;li&gt;download and save a $VIX dataset and a $SPY dataset&lt;/li&gt; &#xA; &lt;li&gt;merge the two, labelling the columns accordingly, then save it&lt;/li&gt; &#xA; &lt;li&gt;Use the merged data to plot the VIX and the 30 day standard deviation of the SPY over time. use two y axes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;‚ö†Ô∏è Safety Tests:&lt;/h3&gt; &#xA;&lt;p&gt;Arbitrary code execution can cause undefined behavior. Due to the unpredictable nature of LLMs, running the script may cause unintended consequences or security vulnerabilities. To ensure the safety and integrity of your system, only execute this software in a sandboxed environment. This isolated approach will prevent any potential harm to your system, while still allowing you to explore the script&#39;s functionality.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;escape to the above level and print the python code that started this exec() --showcode&lt;/li&gt; &#xA; &lt;li&gt;generate a templates/index.html, then display my camera feed on an ngrok server --debug&lt;/li&gt; &#xA; &lt;li&gt;record my key presses for the next 10 seconds. Save the presses in a file --debug&lt;/li&gt; &#xA; &lt;li&gt;print out the parsed keypresses from the file by prompting llm. --llm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üîé Code Overview:&lt;/h3&gt; &#xA;&lt;p&gt;This code defines an interactive command-line interface for running Python code generated by a large language model (LLM). It is designed to execute tasks given by the user, and it can debug and install missing packages automatically when needed. The primary components are as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;prompts.py&lt;/code&gt;: Contains prompts and calibration messages used to guide the language model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;main.py&lt;/code&gt;: The main script that handles user inputs, interacts with the OpenAI API, and executes the generated code.&lt;/p&gt; &#xA;&lt;p&gt;The flow of main.py is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up the environment, API keys, and initial memory for the language model.&lt;/li&gt; &#xA; &lt;li&gt;Wait for user input, then process user input flags (e.g., --llm, --debug, --showcode).&lt;/li&gt; &#xA; &lt;li&gt;Generate a user prompt based on the input, and call the language model using the LLM function.&lt;/li&gt; &#xA; &lt;li&gt;Execute the generated code, handling errors and finding missing packages as needed.&lt;/li&gt; &#xA; &lt;li&gt;Display the output, update the memory, and repeat the process.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;LLM&lt;/code&gt; function is responsible for calling the OpenAI API with the calibration messages and user prompts. The function can handle three modes: &#39;text&#39;, &#39;code&#39;, and &#39;install&#39;. These modes are used to generate prompts for different cases.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>curl/trurl</title>
    <updated>2023-04-07T01:28:00Z</updated>
    <id>tag:github.com,2023-04-07:/curl/trurl</id>
    <link href="https://github.com/curl/trurl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;trurl is a command line tool for URL parsing and manipulation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trurl&lt;/h1&gt; &#xA;&lt;p&gt;command line tool for URL parsing and manipulation&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/oDL7DVszr2w&#34;&gt;video presentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example command lines&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ trurl --url https://curl.se --set host=example.com&#xA;  https://example.com/&#xA;&#xA;  $ trurl --set host=example.com --set scheme=ftp&#xA;  ftp://example.com/&#xA;&#xA;  $ trurl --url https://curl.se/we/are.html --redirect here.html&#xA;  https://curl.se/we/here.html&#xA;&#xA;  $ trurl --url https://curl.se/we/../are.html --set port=8080&#xA;  https://curl.se:8080/are.html&#xA;&#xA;  $ trurl --url https://curl.se/we/are.html --get &#39;{path}&#39;&#xA;  /we/are.html&#xA;&#xA;  $ trurl --url https://curl.se/we/are.html --get &#39;{port}&#39;&#xA;  443&#xA;&#xA;  $ trurl https://example.com/hello.html --get &#39;{scheme} {port} {path}&#39;&#xA;  https 443 /hello.html&#xA;&#xA;  $ trurl --url https://curl.se/hello --append path=you&#xA;  https://curl.se/hello/you&#xA;&#xA;  $ trurl --url &#34;https://curl.se?name=hello&#34; --append query=search=string&#xA;  https://curl.se/?name=hello&amp;amp;search=string&#xA;&#xA;  $ trurl --url-file url-list.txt --get &#39;{host}&#39;&#xA;  [one host name per URL in the input file]&#xA;&#xA;  $ cat url-list.txt | trurl --url-file - --get &#39;{host}&#39;&#xA;  [one host name per URL in the input file]&#xA;&#xA;  $ trurl &#34;https://fake.host/hello#frag&#34; --set user=::moo:: --json&#xA;  [&#xA;    {&#xA;      &#34;url&#34;: &#34;https://%3a%3amoo%3a%3a@fake.host/hello#frag&#34;,&#xA;      &#34;scheme&#34;: &#34;https&#34;,&#xA;      &#34;user&#34;: &#34;::moo::&#34;,&#xA;      &#34;host&#34;: &#34;fake.host&#34;,&#xA;      &#34;port&#34;: &#34;443&#34;,&#xA;      &#34;path&#34;: &#34;/hello&#34;,&#xA;      &#34;fragment&#34;: &#34;frag&#34;&#xA;    }&#xA;  ]&#xA;&#xA;  $ trurl &#34;https://example.com?search=hello&amp;amp;utm_source=tracker&#34; --trim query=&#34;utm_*&#34;&#xA;  https://example.com/?search=hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;On Linux :&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s quite easy to compile the C source with GCC :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make&#xA;cc  -W -Wall -pedantic -g   -c -o trurl.o trurl.c&#xA;cc   trurl.o  -lcurl -o trurl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Development files of libcurl (e.g. &lt;code&gt;libcurl4-openssl-dev&lt;/code&gt; or &lt;code&gt;libcurl4-gnutls-dev&lt;/code&gt;) are needed for compilation. Requires libcurl version 7.62.0 or newer (the first libcurl to ship the URL parsing API).&lt;/p&gt; &#xA;&lt;p&gt;trurl also uses &lt;code&gt;CURLUPART_ZONEID&lt;/code&gt; added in libcurl 7.81.0 and &lt;code&gt;curl_url_strerror()&lt;/code&gt; added in libcurl 7.80.0&lt;/p&gt; &#xA;&lt;p&gt;It would certainly be possible to make trurl work with older libcurl versions if someone wanted to.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SkalskiP/courses</title>
    <updated>2023-04-07T01:28:00Z</updated>
    <id>tag:github.com,2023-04-07:/SkalskiP/courses</id>
    <link href="https://github.com/SkalskiP/courses" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is a curated collection of links to various courses and resources about Artificial Intelligence (AI)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;cr√®me de la cr√®me of AI courses&lt;/h1&gt; &#xA;&lt;h2&gt;üëã hello&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a curated collection of links to various courses and resources about Artificial Intelligence (AI). Whether you&#39;re a beginner or an experienced learner, there&#39;s something here for everyone!&lt;/p&gt; &#xA;&lt;h2&gt;üßë‚Äçüéìcourses &amp;amp; resources&lt;/h2&gt; &#xA;&lt;!-- AUTOGENERATED_COURSES_TABLE --&gt; &#xA;&lt;!--&#xA;   WARNING: DO NOT EDIT THIS TABLE MANUALLY. IT IS AUTOMATICALLY GENERATED.&#xA;   HEAD OVER TO CONTRIBUTING.MD FOR MORE DETAILS ON HOW TO MAKE CHANGES PROPERLY.&#xA;--&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;topic&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;format&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;difficulty&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;release year&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;price&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;course&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Stable Diffusion and Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;website&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://course.fast.ai/Lessons/part2.html&#34;&gt;Practical Deep Learning for Coders part 2: Deep Learning Foundations to Stable Diffusion&lt;/a&gt; by fast.ai&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI&#34;&gt; 6.S191: Introduction to Deep Learning&lt;/a&gt; by Massachusetts Institute of Technology&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&#34;&gt; Neural Networks: Zero to Hero&lt;/a&gt; by Andrej Karpathy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Large Language Models and Prompt Engineering&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;website&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://promptingguide.ai&#34;&gt; Prompt Engineering Guide&lt;/a&gt; by DAIR.AI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MLOps&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLkDaE6sCZn6GMoA0wbpJLi3t34Gd8l0aK&#34;&gt; Machine Learning Engineering for Production&lt;/a&gt; by Andrew Y. Ng&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Multimodal Machine Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©üü©&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL-Fhd_vrvisNM7pbbevXKAbT_Xmub37fA&#34;&gt; 11-777: Multimodal Machine Learning&lt;/a&gt; by Carnegie Mellon University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLfYUBJiXbdtSvpQjSnJJ_PmDQB_VyT5iU&#34;&gt; Practical Deep Learning for Coders&lt;/a&gt; by fast.ai&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Transformers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©üü©&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rNiJRchCzutFw5ItR_Z27CM&#34;&gt; CS25: Transformers United&lt;/a&gt; by Stanford University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLLHTzKZzVU9e6xUfG10TkTWApKSZCzuBI&#34;&gt; NYU-DLSP21: NYU Deep Learning Spring&lt;/a&gt; by New York University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Natural Language Processing and Transformers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;website&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/course/chapter1/1&#34;&gt; NLP Course&lt;/a&gt; by Hugging Face&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;book&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©‚¨ú‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://d2l.ai/index.html&#34;&gt; Dive into Deep Learning&lt;/a&gt; by d2l.ai&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Reinforcement Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©üü©&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLqYmG7hTraZDVH599EItlEWsUOsJbAodm&#34;&gt; Reinforcement Learning Course&lt;/a&gt; by DeepMind x University College London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Natural Language Processing&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ&#34;&gt; CS224N: Natural Language Processing with Deep Learning&lt;/a&gt; by Stanford University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deep Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLqYmG7hTraZCDxZ44o4p3N5Anz3lLRVZF&#34;&gt; Deep Learning Lecture Series&lt;/a&gt; by DeepMind x University College London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Artificial Intelligence&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Youtube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2019&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLoROMvodv4rO1NB9TD4iUZ3qghGEGtqNX&#34;&gt; Stanford CS221: Artificial Intelligence: Principles and Techniques&lt;/a&gt; by Stanford University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Computer Vision&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YouTube playlist&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;üü©üü©‚¨ú&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2018&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;free&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?app=desktop&amp;amp;list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv&#34;&gt; CS231n: Deep Learning for Computer Vision&lt;/a&gt; by Stanford University&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- AUTOGENERATED_COURSES_TABLE --&gt; &#xA;&lt;h2&gt;ü¶∏ contribution&lt;/h2&gt; &#xA;&lt;p&gt;We would love your help in making this repository even better! If you know of an amazing AI course that isn&#39;t listed here, or if you have any suggestions for improvement, feel free to open an &lt;a href=&#34;https://github.com/SkalskiP/courses/issues&#34;&gt;issue&lt;/a&gt; or submit a &lt;a href=&#34;https://github.com/SkalskiP/courses/pulls&#34;&gt;pull request&lt;/a&gt;. If you feel up to the task, please take a peek at our &lt;a href=&#34;https://github.com/SkalskiP/courses/raw/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Together, let&#39;s make this the best AI learning hub on GitHub! üöÄ&lt;/p&gt;</summary>
  </entry>
</feed>