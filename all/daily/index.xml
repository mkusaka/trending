<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-27T01:29:10Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getzep/graphiti</title>
    <updated>2025-04-27T01:29:10Z</updated>
    <id>tag:github.com,2025-04-27:/getzep/graphiti</id>
    <link href="https://github.com/getzep/graphiti" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build Real-Time Knowledge Graphs for AI Agents&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.getzep.com/&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/119c5682-9654-4257-8922-56b7cb8ffd73&#34; width=&#34;150&#34; alt=&#34;Zep Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Graphiti &lt;/h1&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Build Real-Time Knowledge Graphs for AI Agents&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/getzep/Graphiti/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/Graphiti/actions/workflows/lint.yml/badge.svg?style=flat&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getzep/Graphiti/actions/workflows/unit_tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/Graphiti/actions/workflows/unit_tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getzep/Graphiti/actions/workflows/typecheck.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/Graphiti/actions/workflows/typecheck.yml/badge.svg?sanitize=true&#34; alt=&#34;MyPy Check&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/getzep/graphiti&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;a href=&#34;https://discord.com/invite/W8Kw6bsgXQ&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/W8Kw6bsgXQ?style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2501.13956&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2501.13956-b31b1b.svg?style=flat&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getzep/graphiti/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/getzep/graphiti?style=flat&amp;amp;label=Release&amp;amp;color=limegreen&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/12986&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/12986&#34; alt=&#34;getzep%2Fgraphiti | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;span&gt;‚≠ê&lt;/span&gt; &lt;em&gt;Help us reach more developers and grow the Graphiti community. Star this repo!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Check out the new &lt;a href=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/mcp_server/README.md&#34;&gt;MCP server for Graphiti&lt;/a&gt;! Give Claude, Cursor, and other MCP clients powerful Knowledge Graph-based memory.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Graphiti is a framework for building and querying temporally-aware knowledge graphs, specifically tailored for AI agents operating in dynamic environments. Unlike traditional retrieval-augmented generation (RAG) methods, Graphiti continuously integrates user interactions, structured and unstructured enterprise data, and external information into a coherent, queryable graph. The framework supports incremental data updates, efficient retrieval, and precise historical queries without requiring complete graph recomputation, making it suitable for developing interactive, context-aware AI applications.&lt;/p&gt; &#xA;&lt;p&gt;Use Graphiti to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrate and maintain dynamic user interactions and business data.&lt;/li&gt; &#xA; &lt;li&gt;Facilitate state-based reasoning and task automation for agents.&lt;/li&gt; &#xA; &lt;li&gt;Query complex, evolving data with semantic, keyword, and graph-based search methods.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/images/graphiti-graph-intro.gif&#34; alt=&#34;Graphiti temporal walkthrough&#34; width=&#34;700px&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;A knowledge graph is a network of interconnected facts, such as &lt;em&gt;&#34;Kendra loves Adidas shoes.&#34;&lt;/em&gt; Each fact is a &#34;triplet&#34; represented by two entities, or nodes (&#34;Kendra&#34;, &#34;Adidas shoes&#34;), and their relationship, or edge (&#34;loves&#34;). Knowledge Graphs have been explored extensively for information retrieval. What makes Graphiti unique is its ability to autonomously build a knowledge graph while handling changing relationships and maintaining historical context.&lt;/p&gt; &#xA;&lt;h2&gt;Graphiti and Zep Memory&lt;/h2&gt; &#xA;&lt;p&gt;Graphiti powers the core of &lt;a href=&#34;https://www.getzep.com&#34;&gt;Zep&#39;s memory layer&lt;/a&gt; for AI Agents.&lt;/p&gt; &#xA;&lt;p&gt;Using Graphiti, we&#39;ve demonstrated Zep is the &lt;a href=&#34;https://blog.getzep.com/state-of-the-art-agent-memory/&#34;&gt;State of the Art in Agent Memory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read our paper: &lt;a href=&#34;https://arxiv.org/abs/2501.13956&#34;&gt;Zep: A Temporal Knowledge Graph Architecture for Agent Memory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re excited to open-source Graphiti, believing its potential reaches far beyond AI memory applications.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://arxiv.org/abs/2501.13956&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/images/arxiv-screenshot.png&#34; alt=&#34;Zep: A Temporal Knowledge Graph Architecture for Agent Memory&#34; width=&#34;700px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Why Graphiti?&lt;/h2&gt; &#xA;&lt;p&gt;Traditional RAG approaches often rely on batch processing and static data summarization, making them inefficient for frequently changing data. Graphiti addresses these challenges by providing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-Time Incremental Updates:&lt;/strong&gt; Immediate integration of new data episodes without batch recomputation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bi-Temporal Data Model:&lt;/strong&gt; Explicit tracking of event occurrence and ingestion times, allowing accurate point-in-time queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Efficient Hybrid Retrieval:&lt;/strong&gt; Combines semantic embeddings, keyword (BM25), and graph traversal to achieve low-latency queries without reliance on LLM summarization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Entity Definitions:&lt;/strong&gt; Flexible ontology creation and support for developer-defined entities through straightforward Pydantic models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Efficiently manages large datasets with parallel processing, suitable for enterprise environments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/images/graphiti-intro-slides-stock-2.gif&#34; alt=&#34;Graphiti structured + unstructured demo&#34; width=&#34;700px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Graphiti vs. GraphRAG&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Aspect&lt;/th&gt; &#xA;   &lt;th&gt;GraphRAG&lt;/th&gt; &#xA;   &lt;th&gt;Graphiti&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Primary Use&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Static document summarization&lt;/td&gt; &#xA;   &lt;td&gt;Dynamic data management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Data Handling&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Batch-oriented processing&lt;/td&gt; &#xA;   &lt;td&gt;Continuous, incremental updates&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Knowledge Structure&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Entity clusters &amp;amp; community summaries&lt;/td&gt; &#xA;   &lt;td&gt;Episodic data, semantic entities, communities&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Retrieval Method&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sequential LLM summarization&lt;/td&gt; &#xA;   &lt;td&gt;Hybrid semantic, keyword, and graph-based search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Adaptability&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Low&lt;/td&gt; &#xA;   &lt;td&gt;High&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Temporal Handling&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Basic timestamp tracking&lt;/td&gt; &#xA;   &lt;td&gt;Explicit bi-temporal tracking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Contradiction Handling&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM-driven summarization judgments&lt;/td&gt; &#xA;   &lt;td&gt;Temporal edge invalidation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Query Latency&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Seconds to tens of seconds&lt;/td&gt; &#xA;   &lt;td&gt;Typically sub-second latency&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Custom Entity Types&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes, customizable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Moderate&lt;/td&gt; &#xA;   &lt;td&gt;High, optimized for large datasets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Graphiti is specifically designed to address the challenges of dynamic and frequently updated datasets, making it particularly suitable for applications requiring real-time interaction and precise historical queries.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.10 or higher&lt;/li&gt; &#xA; &lt;li&gt;Neo4j 5.26 or higher (serves as the embeddings storage backend)&lt;/li&gt; &#xA; &lt;li&gt;OpenAI API key (for LLM inference and embedding)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Graphiti works best with LLM services that support Structured Output (such as OpenAI and Gemini). Using other services may result in incorrect output schemas and ingestion failures. This is particularly problematic when using smaller models.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Gemini, Anthropic, or Groq API key (for alternative LLM providers)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] The simplest way to install Neo4j is via &lt;a href=&#34;https://neo4j.com/download/&#34;&gt;Neo4j Desktop&lt;/a&gt;. It provides a user-friendly interface to manage Neo4j instances and databases.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install graphiti-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry add graphiti-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also install optional LLM providers as extras:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install with Anthropic support&#xA;pip install graphiti-core[anthropic]&#xA;&#xA;# Install with Groq support&#xA;pip install graphiti-core[groq]&#xA;&#xA;# Install with Google Gemini support&#xA;pip install graphiti-core[google-genai]&#xA;&#xA;# Install with multiple providers&#xA;pip install graphiti-core[anthropic,groq,google-genai]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Graphiti uses OpenAI for LLM inference and embedding. Ensure that an &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; is set in your environment. Support for Anthropic and Groq LLM inferences is available, too. Other LLM providers may be supported via OpenAI compatible APIs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For a complete working example, see the &lt;a href=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/examples/quickstart/README.md&#34;&gt;Quickstart Example&lt;/a&gt; in the examples directory. The quickstart demonstrates:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connecting to a Neo4j database&lt;/li&gt; &#xA; &lt;li&gt;Initializing Graphiti indices and constraints&lt;/li&gt; &#xA; &lt;li&gt;Adding episodes to the graph (both text and structured JSON)&lt;/li&gt; &#xA; &lt;li&gt;Searching for relationships (edges) using hybrid search&lt;/li&gt; &#xA; &lt;li&gt;Reranking search results using graph distance&lt;/li&gt; &#xA; &lt;li&gt;Searching for nodes using predefined search recipes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The example is fully documented with clear explanations of each functionality and includes a comprehensive README with setup instructions and next steps.&lt;/p&gt; &#xA;&lt;h2&gt;MCP Server&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mcp_server&lt;/code&gt; directory contains a Model Context Protocol (MCP) server implementation for Graphiti. This server allows AI assistants to interact with Graphiti&#39;s knowledge graph capabilities through the MCP protocol.&lt;/p&gt; &#xA;&lt;p&gt;Key features of the MCP server include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Episode management (add, retrieve, delete)&lt;/li&gt; &#xA; &lt;li&gt;Entity management and relationship handling&lt;/li&gt; &#xA; &lt;li&gt;Semantic and hybrid search capabilities&lt;/li&gt; &#xA; &lt;li&gt;Group management for organizing related data&lt;/li&gt; &#xA; &lt;li&gt;Graph maintenance operations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The MCP server can be deployed using Docker with Neo4j, making it easy to integrate Graphiti into your AI assistant workflows.&lt;/p&gt; &#xA;&lt;p&gt;For detailed setup instructions and usage examples, see the &lt;a href=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/mcp_server/README.md&#34;&gt;MCP server README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;REST Service&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;server&lt;/code&gt; directory contains an API service for interacting with the Graphiti API. It is built using FastAPI.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/server/README.md&#34;&gt;server README&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the Neo4j and OpenAi-compatible credentials, Graphiti also has a few optional environment variables. If you are using one of our supported models, such as Anthropic or Voyage models, the necessary environment variables must be set.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;USE_PARALLEL_RUNTIME&lt;/code&gt; is an optional boolean variable that can be set to true if you wish to enable Neo4j&#39;s parallel runtime feature for several of our search queries. Note that this feature is not supported for Neo4j Community edition or for smaller AuraDB instances, as such this feature is off by default.&lt;/p&gt; &#xA;&lt;h2&gt;Using Graphiti with Azure OpenAI&lt;/h2&gt; &#xA;&lt;p&gt;Graphiti supports Azure OpenAI for both LLM inference and embeddings. To use Azure OpenAI, you&#39;ll need to configure both the LLM client and embedder with your Azure OpenAI credentials.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from openai import AsyncAzureOpenAI&#xA;from graphiti_core import Graphiti&#xA;from graphiti_core.llm_client import OpenAIClient&#xA;from graphiti_core.embedder.openai import OpenAIEmbedder, OpenAIEmbedderConfig&#xA;from graphiti_core.cross_encoder.openai_reranker_client import OpenAIRerankerClient&#xA;&#xA;# Azure OpenAI configuration&#xA;api_key = &#34;&amp;lt;your-api-key&amp;gt;&#34;&#xA;api_version = &#34;&amp;lt;your-api-version&amp;gt;&#34;&#xA;azure_endpoint = &#34;&amp;lt;your-azure-endpoint&amp;gt;&#34;&#xA;&#xA;# Create Azure OpenAI client for LLM&#xA;azure_openai_client = AsyncAzureOpenAI(&#xA;    api_key=api_key,&#xA;    api_version=api_version,&#xA;    azure_endpoint=azure_endpoint&#xA;)&#xA;&#xA;# Initialize Graphiti with Azure OpenAI clients&#xA;graphiti = Graphiti(&#xA;    &#34;bolt://localhost:7687&#34;,&#xA;    &#34;neo4j&#34;,&#xA;    &#34;password&#34;,&#xA;    llm_client=OpenAIClient(&#xA;        client=azure_openai_client&#xA;    ),&#xA;    embedder=OpenAIEmbedder(&#xA;        config=OpenAIEmbedderConfig(&#xA;            embedding_model=&#34;text-embedding-3-small&#34;  # Use your Azure deployed embedding model name&#xA;        ),&#xA;        client=azure_openai_client&#xA;    ),&#xA;    # Optional: Configure the OpenAI cross encoder with Azure OpenAI&#xA;    cross_encoder=OpenAIRerankerClient(&#xA;        client=azure_openai_client&#xA;    )&#xA;)&#xA;&#xA;# Now you can use Graphiti with Azure OpenAI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to replace the placeholder values with your actual Azure OpenAI credentials and specify the correct embedding model name that&#39;s deployed in your Azure OpenAI service.&lt;/p&gt; &#xA;&lt;h2&gt;Using Graphiti with Google Gemini&lt;/h2&gt; &#xA;&lt;p&gt;Graphiti supports Google&#39;s Gemini models for both LLM inference and embeddings. To use Gemini, you&#39;ll need to configure both the LLM client and embedder with your Google API key.&lt;/p&gt; &#xA;&lt;p&gt;Install Graphiti:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry add &#34;graphiti-core[google-genai]&#34;&#xA;&#xA;# or&#xA;&#xA;uv add &#34;graphiti-core[google-genai]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from graphiti_core import Graphiti&#xA;from graphiti_core.llm_client.gemini_client import GeminiClient, LLMConfig&#xA;from graphiti_core.embedder.gemini import GeminiEmbedder, GeminiEmbedderConfig&#xA;&#xA;# Google API key configuration&#xA;api_key = &#34;&amp;lt;your-google-api-key&amp;gt;&#34;&#xA;&#xA;# Initialize Graphiti with Gemini clients&#xA;graphiti = Graphiti(&#xA;    &#34;bolt://localhost:7687&#34;,&#xA;    &#34;neo4j&#34;,&#xA;    &#34;password&#34;,&#xA;    llm_client=GeminiClient(&#xA;        config=LLMConfig(&#xA;            api_key=api_key,&#xA;            model=&#34;gemini-2.0-flash&#34;&#xA;        )&#xA;    ),&#xA;    embedder=GeminiEmbedder(&#xA;        config=GeminiEmbedderConfig(&#xA;            api_key=api_key,&#xA;            embedding_model=&#34;embedding-001&#34;&#xA;        )&#xA;    )&#xA;)&#xA;&#xA;# Now you can use Graphiti with Google Gemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.getzep.com/graphiti&#34;&gt;Guides and API documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.getzep.com/graphiti/graphiti/quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.getzep.com/graphiti/graphiti/lang-graph-agent&#34;&gt;Building an agent with LangChain&#39;s LangGraph and Graphiti&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status and Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Graphiti is under active development. We aim to maintain API stability while working on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supporting custom graph schemas: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Allow developers to provide their own defined node and edge classes when ingesting episodes&lt;/li&gt; &#xA;   &lt;li&gt;Enable more flexible knowledge representation tailored to specific use cases&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Enhancing retrieval capabilities with more robust and configurable options&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Graphiti MCP Server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Expanding test coverage to ensure reliability and catch edge cases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage and appreciate all forms of contributions, whether it&#39;s code, documentation, addressing GitHub Issues, or answering questions in the Graphiti Discord channel. For detailed guidelines on code contributions, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/getzep/graphiti/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.com/invite/W8Kw6bsgXQ&#34;&gt;Zep Discord server&lt;/a&gt; and make your way to the &lt;strong&gt;#Graphiti&lt;/strong&gt; channel!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rowboatlabs/rowboat</title>
    <updated>2025-04-27T01:29:10Z</updated>
    <id>tag:github.com,2025-04-27:/rowboatlabs/rowboat</id>
    <link href="https://github.com/rowboatlabs/rowboat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI-powered multi-agent builder&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rowboatlabs/rowboat/main/assets/banner.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Let AI build multi-agent workflows for you in minutes&lt;/h2&gt; &#xA;&lt;h5 align=&#34;center&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rowboatlabs/rowboat/main/#quick-start&#34;&gt;Quickstart&lt;/a&gt; | &lt;a href=&#34;https://docs.rowboatlabs.com/&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://www.rowboatlabs.com/&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/jHhUKkKHn8&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ú® &lt;strong&gt;Start from an idea -&amp;gt; copilot builds your multi-agent workflows&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;E.g. &#34;Build me an assistant for a food delivery company to handle delivery status and missing items. Include the necessary tools.&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üåê &lt;strong&gt;Connect MCP servers&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add the MCP servers in settings -&amp;gt; import the tools into Rowboat.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üìû &lt;strong&gt;Integrate into your app using the HTTP API or Python SDK&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Grab the project ID and generated API key from settings and use the API.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Powered by OpenAI&#39;s Agents SDK, Rowboat is the fastest way to build multi-agents!&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set your OpenAI key&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=your-openai-api-key&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository and start Rowboat docker&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:rowboatlabs/rowboat.git&#xA;cd rowboat&#xA;docker-compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the app at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;h4&gt;Create a multi-agent assistant with MCP tools by chatting with Rowboat&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/YRTCw9UHRbU&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/c8a41622-8e0e-459f-becb-767503489866&#34; alt=&#34;Screenshot 2025-04-23 at 00 25 31&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integrate with Rowboat agents&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 ways to integrate with the agents you create in Rowboat&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;HTTP API&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can use the API directly at &lt;a href=&#34;http://localhost:3000/api/v1/&#34;&gt;http://localhost:3000/api/v1/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://docs.rowboatlabs.com/using_the_api/&#34;&gt;API Docs&lt;/a&gt; for details&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3000/api/v1/&amp;lt;PROJECT_ID&amp;gt;/chat&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--header &#39;Authorization: Bearer &amp;lt;API_KEY&amp;gt;&#39; \&#xA;--data &#39;{&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: &#34;tell me the weather in london in metric units&#34;&#xA;        }&#xA;    ],&#xA;    &#34;state&#34;: null&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python SDK You can use the included Python SDK to interact with the Agents&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pip install rowboat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See &lt;a href=&#34;https://docs.rowboatlabs.com/using_the_sdk/&#34;&gt;SDK Docs&lt;/a&gt; for details. Here is a quick example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from rowboat import Client, StatefulChat&#xA;from rowboat.schema import UserMessage, SystemMessage&#xA;&#xA;# Initialize the client&#xA;client = Client(&#xA;    host=&#34;http://localhost:3000&#34;,&#xA;    project_id=&#34;&amp;lt;PROJECT_ID&amp;gt;&#34;,&#xA;    api_key=&#34;&amp;lt;API_KEY&amp;gt;&#34;&#xA;)&#xA;&#xA;# Create a stateful chat session (recommended)&#xA;chat = StatefulChat(client)&#xA;response = chat.run(&#34;What&#39;s the weather in London?&#34;)&#xA;print(response)&#xA;&#xA;# Or use the low-level client API&#xA;messages = [&#xA;    SystemMessage(role=&#39;system&#39;, content=&#34;You are a helpful assistant&#34;),&#xA;    UserMessage(role=&#39;user&#39;, content=&#34;Hello, how are you?&#34;)&#xA;]&#xA;&#xA;# Get response&#xA;response = client.chat(messages=messages)&#xA;print(response.messages[-1].content)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://docs.rowboatlabs.com/&#34;&gt;Docs&lt;/a&gt; to learn how to start building agents with Rowboat.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skypilot-org/skypilot</title>
    <updated>2025-04-27T01:29:10Z</updated>
    <id>tag:github.com,2025-04-27:/skypilot-org/skypilot</id>
    <link href="https://github.com/skypilot-org/skypilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SkyPilot: Run AI and batch jobs on any infra (Kubernetes or 16+ clouds). Get unified execution, cost savings, and high GPU availability via a simple interface.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/skypilot-wide-dark-1k.png&#34;&gt; &#xA;  &lt;img alt=&#34;SkyPilot&#34; src=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/skypilot-wide-light-1k.png&#34; width=&#34;55%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.skypilot.co/&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/badge/docs-gray?logo=readthedocs&amp;amp;logoColor=f5f5f5&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skypilot-org/skypilot/releases&#34;&gt; &lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/release/skypilot-org/skypilot.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://slack.skypilot.co&#34;&gt; &lt;img alt=&#34;Join Slack&#34; src=&#34;https://img.shields.io/badge/SkyPilot-Join%20Slack-blue?logo=slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skypilot-org/skypilot/releases&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/pypi/dm/skypilot&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Run AI on Any Infra ‚Äî Unified, Faster, Cheaper &lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;span&gt;üî•&lt;/span&gt; &lt;em&gt;News&lt;/em&gt; &lt;span&gt;üî•&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Mar 2025] Run and serve &lt;strong&gt;Google Gemma 3&lt;/strong&gt; using SkyPilot &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/gemma3/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Feb 2025] Prepare and serve &lt;strong&gt;Retrieval Augmented Generation (RAG) with DeepSeek-R1&lt;/strong&gt;: &lt;a href=&#34;https://blog.skypilot.co/deepseek-rag&#34;&gt;&lt;strong&gt;blog post&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/rag/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Feb 2025] Run and serve &lt;strong&gt;DeepSeek-R1 671B&lt;/strong&gt; using SkyPilot and SGLang with high throughput: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/deepseek-r1/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Feb 2025] Prepare and serve large-scale image search with &lt;strong&gt;vector databases&lt;/strong&gt;: &lt;a href=&#34;https://blog.skypilot.co/large-scale-vector-database/&#34;&gt;&lt;strong&gt;blog post&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/examples/vector_database/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Jan 2025] Launch and serve distilled models from &lt;strong&gt;&lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-R1&#34;&gt;DeepSeek-R1&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-Janus&#34;&gt;Janus&lt;/a&gt;&lt;/strong&gt; on Kubernetes or any cloud: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/deepseek-r1-distilled/&#34;&gt;&lt;strong&gt;R1 example&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/deepseek-janus/&#34;&gt;&lt;strong&gt;Janus example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Oct 2024] &lt;span&gt;üéâ&lt;/span&gt; &lt;strong&gt;SkyPilot crossed 1M+ downloads&lt;/strong&gt; &lt;span&gt;üéâ&lt;/span&gt;: Thank you to our community! &lt;a href=&#34;https://x.com/skypilot_org/status/1844770841718067638&#34;&gt;&lt;strong&gt;Twitter/X&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Sep 2024] Point, launch and serve &lt;strong&gt;Llama 3.2&lt;/strong&gt; on Kubernetes or any cloud: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/llama-3_2/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Sep 2024] Run and deploy &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/pixtral&#34;&gt;&lt;strong&gt;Pixtral&lt;/strong&gt;&lt;/a&gt;, the first open-source multimodal model from Mistral AI.&lt;/li&gt; &#xA; &lt;li&gt;[Jun 2024] Reproduce &lt;strong&gt;GPT&lt;/strong&gt; with &lt;a href=&#34;https://github.com/karpathy/llm.c/discussions/481&#34;&gt;llm.c&lt;/a&gt; on any cloud: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/gpt-2/&#34;&gt;&lt;strong&gt;guide&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Apr 2024] Serve &lt;a href=&#34;https://qwenlm.github.io/blog/qwen1.5-110b/&#34;&gt;&lt;strong&gt;Qwen-110B&lt;/strong&gt;&lt;/a&gt; on your infra: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/qwen/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Apr 2024] Host &lt;a href=&#34;https://github.com/ollama/ollama&#34;&gt;&lt;strong&gt;Ollama&lt;/strong&gt;&lt;/a&gt; on the cloud to deploy LLMs on CPUs and GPUs: &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/ollama/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;LLM Finetuning Cookbooks&lt;/strong&gt;: Finetuning Llama 2 / Llama 3.1 in your own cloud environment, privately: Llama 2 &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/vicuna-llama-2/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://blog.skypilot.co/finetuning-llama2-operational-guide/&#34;&gt;&lt;strong&gt;blog&lt;/strong&gt;&lt;/a&gt;; Llama 3.1 &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/llm/llama-3_1-finetuning/&#34;&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://blog.skypilot.co/finetune-llama-3_1-on-your-infra/&#34;&gt;&lt;strong&gt;blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;SkyPilot is an open-source framework for running AI and batch workloads on any infra.&lt;/p&gt; &#xA;&lt;p&gt;SkyPilot &lt;strong&gt;is easy to use for AI users&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quickly spin up compute on your own infra&lt;/li&gt; &#xA; &lt;li&gt;Environment and job as code ‚Äî simple and portable&lt;/li&gt; &#xA; &lt;li&gt;Easy job management: queue, run, and auto-recover many jobs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot &lt;strong&gt;unifies multiple clusters, clouds, and hardware&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;One interface to use reserved GPUs, Kubernetes clusters, or 16+ clouds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/auto-failover.html&#34;&gt;Flexible provisioning&lt;/a&gt; of GPUs, TPUs, CPUs, with auto-retry&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/reference/api-server/api-server.html&#34;&gt;Team deployment&lt;/a&gt; and resource sharing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot &lt;strong&gt;cuts your cloud costs &amp;amp; maximizes GPU availability&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autostop: automatic cleanup of idle resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/managed-jobs.html#running-on-spot-instances&#34;&gt;Spot instance support&lt;/a&gt;: 3-6x cost savings, with preemption auto-recovery&lt;/li&gt; &#xA; &lt;li&gt;Intelligent scheduling: automatically run on the cheapest &amp;amp; most available infra&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot supports your existing GPU, TPU, and CPU workloads, with no code changes.&lt;/p&gt; &#xA;&lt;p&gt;Install with pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Choose your clouds:&#xA;pip install -U &#34;skypilot[kubernetes,aws,gcp,azure,oci,lambda,runpod,fluidstack,paperspace,cudo,ibm,scp,nebius]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the latest features and fixes, use the nightly build or &lt;a href=&#34;https://docs.skypilot.co/en/latest/getting-started/installation.html&#34;&gt;install from source&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Choose your clouds:&#xA;pip install &#34;skypilot-nightly[kubernetes,aws,gcp,azure,oci,lambda,runpod,fluidstack,paperspace,cudo,ibm,scp,nebius]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/_static/intro.gif&#34; alt=&#34;SkyPilot&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Current supported infra: Kubernetes, AWS, GCP, Azure, OCI, Lambda Cloud, Fluidstack, RunPod, Cudo, Digital Ocean, Paperspace, Cloudflare, Samsung, IBM, Vast.ai, VMware vSphere, Nebius.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/cloud-logos-dark.png&#34;&gt; &#xA;  &lt;img alt=&#34;SkyPilot&#34; src=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/cloud-logos-light.png&#34; width=&#34;85%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;!-- source xcf file: https://drive.google.com/drive/folders/1S_acjRsAD3T14qMeEnf6FFrIwHu_Gs_f?usp=drive_link --&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;You can find our documentation &lt;a href=&#34;https://docs.skypilot.co/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/getting-started/installation.html&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/getting-started/quickstart.html&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/reference/cli.html&#34;&gt;CLI reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SkyPilot in 1 minute&lt;/h2&gt; &#xA;&lt;p&gt;A SkyPilot task specifies: resource requirements, data to be synced, setup commands, and the task commands.&lt;/p&gt; &#xA;&lt;p&gt;Once written in this &lt;a href=&#34;https://docs.skypilot.co/en/latest/reference/yaml-spec.html&#34;&gt;&lt;strong&gt;unified interface&lt;/strong&gt;&lt;/a&gt; (YAML or Python API), the task can be launched on any available cloud. This avoids vendor lock-in, and allows easily moving jobs to a different provider.&lt;/p&gt; &#xA;&lt;p&gt;Paste the following into a file &lt;code&gt;my_task.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;resources:&#xA;  accelerators: A100:8  # 8x NVIDIA A100 GPU&#xA;&#xA;num_nodes: 1  # Number of VMs to launch&#xA;&#xA;# Working directory (optional) containing the project codebase.&#xA;# Its contents are synced to ~/sky_workdir/ on the cluster.&#xA;workdir: ~/torch_examples&#xA;&#xA;# Commands to be run before executing the job.&#xA;# Typical use: pip install -r requirements.txt, git clone, etc.&#xA;setup: |&#xA;  pip install &#34;torch&amp;lt;2.2&#34; torchvision --index-url https://download.pytorch.org/whl/cu121&#xA;&#xA;# Commands to run as a job.&#xA;# Typical use: launch the main program.&#xA;run: |&#xA;  cd mnist&#xA;  python main.py --epochs 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prepare the workdir by cloning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/pytorch/examples.git ~/torch_examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch with &lt;code&gt;sky launch&lt;/code&gt; (note: &lt;a href=&#34;https://docs.skypilot.co/en/latest/cloud-setup/quota.html&#34;&gt;access to GPU instances&lt;/a&gt; is needed for this example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sky launch my_task.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SkyPilot then performs the heavy-lifting for you, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find the lowest priced VM instance type across different clouds&lt;/li&gt; &#xA; &lt;li&gt;Provision the VM, with auto-failover if the cloud returned capacity errors&lt;/li&gt; &#xA; &lt;li&gt;Sync the local &lt;code&gt;workdir&lt;/code&gt; to the VM&lt;/li&gt; &#xA; &lt;li&gt;Run the task&#39;s &lt;code&gt;setup&lt;/code&gt; commands to prepare the VM for running the task&lt;/li&gt; &#xA; &lt;li&gt;Run the task&#39;s &lt;code&gt;run&lt;/code&gt; commands&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.skypilot.co/en/latest/getting-started/quickstart.html&#34;&gt;Quickstart&lt;/a&gt; to get started with SkyPilot.&lt;/p&gt; &#xA;&lt;h2&gt;Runnable examples&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.skypilot.co/en/docs-examples/examples/index.html&#34;&gt;&lt;strong&gt;SkyPilot examples&lt;/strong&gt;&lt;/a&gt; that cover: development, training, serving, LLM models, AI apps, and common frameworks.&lt;/p&gt; &#xA;&lt;p&gt;Latest featured examples:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Task&lt;/th&gt; &#xA;   &lt;th&gt;Examples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Training&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/getting-started/tutorial.html&#34;&gt;PyTorch&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/deepspeed.html&#34;&gt;DeepSpeed&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/llama-3_1-finetuning.html&#34;&gt;Finetune Llama 3&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/nemo.html&#34;&gt;NeMo&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/ray.html&#34;&gt;Ray&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/unsloth.html&#34;&gt;Unsloth&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/training/tpu.html&#34;&gt;Jax/TPU&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serving&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/serving/vllm.html&#34;&gt;vLLM&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/serving/sglang.html&#34;&gt;SGLang&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/serving/ollama.html&#34;&gt;Ollama&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/models/deepseek-r1.html&#34;&gt;DeepSeek-R1&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/models/llama-3.html&#34;&gt;Llama 3&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/models/codellama.html&#34;&gt;CodeLlama&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/models/qwen.html&#34;&gt;Qwen&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/models/mixtral.html&#34;&gt;Mixtral&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AI apps&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/applications/rag.html&#34;&gt;RAG&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/applications/vector_database.html&#34;&gt;vector databases&lt;/a&gt; (ChromaDB, CLIP)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Common frameworks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/frameworks/airflow.html&#34;&gt;Airflow&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/examples/frameworks/jupyter.html&#34;&gt;Jupyter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Source files and more examples can be found in &lt;a href=&#34;https://github.com/skypilot-org/skypilot/tree/master/llm&#34;&gt;&lt;code&gt;llm/&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/skypilot-org/skypilot/tree/master/examples&#34;&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;p&gt;To learn more, see &lt;a href=&#34;https://docs.skypilot.co/en/latest/overview.html&#34;&gt;SkyPilot Overview&lt;/a&gt;, &lt;a href=&#34;https://docs.skypilot.co/en/latest/&#34;&gt;SkyPilot docs&lt;/a&gt;, and &lt;a href=&#34;https://blog.skypilot.co/&#34;&gt;SkyPilot blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Case studies and integrations: &lt;a href=&#34;https://blog.skypilot.co/community/&#34;&gt;Community Spotlights&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow updates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.skypilot.co&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/skypilot_org&#34;&gt;X / Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/skypilot-oss/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.skypilot.co/&#34;&gt;SkyPilot Blog&lt;/a&gt; (&lt;a href=&#34;https://blog.skypilot.co/introducing-skypilot/&#34;&gt;Introductory blog post&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the research:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.usenix.org/system/files/nsdi23-yang-zongheng.pdf&#34;&gt;SkyPilot paper&lt;/a&gt; and &lt;a href=&#34;https://www.usenix.org/conference/nsdi23/presentation/yang-zongheng&#34;&gt;talk&lt;/a&gt; (NSDI 2023)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2205.07147&#34;&gt;Sky Computing whitepaper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sigops.org/s/conferences/hotos/2021/papers/hotos21-s02-stoica.pdf&#34;&gt;Sky Computing vision paper&lt;/a&gt; (HotOS 2021)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2411.01438&#34;&gt;SkyServe: AI serving across regions and clouds&lt;/a&gt; (EuroSys 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.usenix.org/conference/nsdi24/presentation/wu-zhanghao&#34;&gt;Managed jobs spot instance policy&lt;/a&gt; (NSDI 2024)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot was initially started at the &lt;a href=&#34;https://sky.cs.berkeley.edu&#34;&gt;Sky Computing Lab&lt;/a&gt; at UC Berkeley and has since gained many industry contributors. To read about the project&#39;s origin and vision, see &lt;a href=&#34;https://docs.skypilot.co/en/latest/sky-computing.html&#34;&gt;Concept: Sky Computing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions and feedback&lt;/h2&gt; &#xA;&lt;p&gt;We are excited to hear your feedback:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For issues and feature requests, please &lt;a href=&#34;https://github.com/skypilot-org/skypilot/issues/new&#34;&gt;open a GitHub issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For questions, please use &lt;a href=&#34;https://github.com/skypilot-org/skypilot/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For general discussions, join us on the &lt;a href=&#34;http://slack.skypilot.co&#34;&gt;SkyPilot Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all contributions to the project! See &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for how to get involved.&lt;/p&gt;</summary>
  </entry>
</feed>