<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-15T01:34:29Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>smallnest/concurrency-programming-via-rust</title>
    <updated>2022-10-15T01:34:29Z</updated>
    <id>tag:github.com,2022-10-15:/smallnest/concurrency-programming-via-rust</id>
    <link href="https://github.com/smallnest/concurrency-programming-via-rust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;concurrency programming via rust&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/book/images/gear.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to run?&lt;/h2&gt; &#xA;&lt;p&gt;Enter one crate such as thread and run &lt;code&gt;cargo run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;I have a plan to write a book about conncurrency programming via rust. The below is the contents of it and this repo contains all source codes.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 1: Thread&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/thread/src/main.rs&#34;&gt;Threads&lt;/a&gt; in std and concurrency libs.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 2: Thread Pool&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/pool/src/main.rs&#34;&gt;Thread pool&lt;/a&gt; for std thread.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 3: async/await&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/asyncwait/src/main.rs&#34;&gt;async feature&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 4: synchronization primitives&lt;/h3&gt; &#xA;&lt;p&gt;Introduces synchronization primitives contains &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/container_primitive/src/main.rs&#34;&gt;containers&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/sync_primitive/src/main.rs&#34;&gt;primitives&lt;/a&gt; in std lib.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 5: concurrency collections&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/collections/src/main.rs&#34;&gt;concurrency collections&lt;/a&gt; in std lib.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 6: process&lt;/h3&gt; &#xA;&lt;p&gt;Introduces starting and executing a new &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/process/src/main.rs&#34;&gt;process&lt;/a&gt; in the easy way.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 7: channel&lt;/h3&gt; &#xA;&lt;p&gt;Introduces each &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/channel/src/main.rs&#34;&gt;channels&lt;/a&gt; such as mpsc, mpmc and broadcasters.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 8: timer/ticker&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/timer_examples/src/main.rs&#34;&gt;timer and ticker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 9: parking_lot&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/parking_lot_examples/src/main.rs&#34;&gt;parking_lot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 10: crossbeam&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/crossbeam_examples/src/main.rs&#34;&gt;crossbeam&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 11: rayon&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/rayon_examples/src/main.rs&#34;&gt;rayon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter 12: tokio&lt;/h3&gt; &#xA;&lt;p&gt;Introduces &lt;a href=&#34;https://raw.githubusercontent.com/smallnest/concurrency-programming-via-rust/master/tokio_examples/src/main.rs&#34;&gt;tokio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;chapter n: special&lt;/h3&gt; &#xA;&lt;p&gt;some special synchronization primitives and concurrency libs only for special single purpose.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>koishijs/novelai-bot</title>
    <updated>2022-10-15T01:34:29Z</updated>
    <id>tag:github.com,2022-10-15:/koishijs/novelai-bot</id>
    <link href="https://github.com/koishijs/novelai-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate images by NovelAI | 基于 NovelAI 的画图机器人&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://bot.novelai.dev&#34;&gt;koishi-plugin-novelai&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/koishi-plugin-novelai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/koishi-plugin-novelai?style=flat-square&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/koishi-plugin-novelai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/koishi-plugin-novelai?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;基于 &lt;a href=&#34;https://novelai.net/&#34;&gt;NovelAI&lt;/a&gt; 的画图插件。已实现功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;绘制图片&lt;/li&gt; &#xA; &lt;li&gt;更改模型、采样器、图片尺寸&lt;/li&gt; &#xA; &lt;li&gt;高级请求语法&lt;/li&gt; &#xA; &lt;li&gt;自定义违禁词表&lt;/li&gt; &#xA; &lt;li&gt;发送一段时间后自动撤回&lt;/li&gt; &#xA; &lt;li&gt;连接到私服 · NAIFU&lt;/li&gt; &#xA; &lt;li&gt;img2img · 图片增强&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;得益于 Koishi 的插件化机制，只需配合其他插件即可实现更多功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多平台支持 (QQ、Discord、Telegram、开黑啦等)&lt;/li&gt; &#xA; &lt;li&gt;速率限制 (限制每个用户每天可以调用的次数和每次调用的间隔)&lt;/li&gt; &#xA; &lt;li&gt;上下文管理 (限制在哪些群聊中哪些用户可以访问)&lt;/li&gt; &#xA; &lt;li&gt;多语言支持 (为使用不同语言的用户提供对应的回复)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;所以所以快去给 &lt;a href=&#34;https://github.com/koishijs/koishi&#34;&gt;Koishi&lt;/a&gt; 点个 star 吧！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;效果展示&lt;/h2&gt; &#xA;&lt;p&gt;以下图片均使用本插件在聊天平台生成：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://novelai-gallery.vercel.app/69ff89485ee83344868446d9c2b445590cea859d.png&#34; alt=&#34;example&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://novelai-gallery.vercel.app/91a9b0a1c3abad3a515efaa4befe27a64aa7c4b8.png&#34; alt=&#34;example&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://novelai-gallery.vercel.app/d0e3dbcbdfba07e435c7c84b4de47cd99c4918c0.png&#34; alt=&#34;example&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://novelai-gallery.vercel.app/40e5341a66c0fb97e51ef3d23e51c8150a0f3613.png&#34; alt=&#34;example&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://novelai-gallery.vercel.app/2e631c1944b9579b2c004481c9edff9ac1784330.png&#34; alt=&#34;example&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;使用教程&lt;/h2&gt; &#xA;&lt;p&gt;搭建教程、使用方法、参数配置、常见问题请见：&lt;a href=&#34;https://bot.novelai.dev&#34;&gt;https://bot.novelai.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://raw.githubusercontent.com/koishijs/novelai-bot/master/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2022-present, Shigma &amp;amp; Ninzore&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fkoishijs%2Fnovelai-bot?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fkoishijs%2Fnovelai-bot.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>holbertonschool/Betty</title>
    <updated>2022-10-15T01:34:29Z</updated>
    <id>tag:github.com,2022-10-15:/holbertonschool/Betty</id>
    <link href="https://github.com/holbertonschool/Betty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Holberton-style C code checker written in Perl&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Betty&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/holbertonschool/Betty&#34;&gt;&lt;img src=&#34;https://travis-ci.org/holbertonschool/Betty.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Run the script &lt;code&gt;install.sh&lt;/code&gt; with &lt;strong&gt;sudo privileges&lt;/strong&gt; to install &lt;code&gt;betty-style&lt;/code&gt; and &lt;code&gt;betty-doc&lt;/code&gt; on your computer, along with the following manuals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;betty(1)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;betty-style(1)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;betty-doc(1)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Please visit the &lt;a href=&#34;https://github.com/holbertonschool/Betty/wiki&#34;&gt;Betty Wiki&lt;/a&gt; for the full specifications of Betty coding and documentation styles.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also find some references and some tools for common text editors such as Emacs and Atom.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to check if your code/doc fits the Betty Style (mostly inspired from the Linux Kernel style):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;betty-style file1 [file2 [file3 [...]]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;betty-doc file1 [file2 [file3 [...]]]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>