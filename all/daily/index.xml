<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-04T01:24:38Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dylanaraps/neofetch</title>
    <updated>2024-05-04T01:24:38Z</updated>
    <id>tag:github.com,2024-05-04:/dylanaraps/neofetch</id>
    <link href="https://github.com/dylanaraps/neofetch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üñºÔ∏è A command-line system information tool written in bash 3.2+&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/ZQI2EYz.png&#34; alt=&#34;logo&#34; height=&#34;100px&#34;&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A command-line system information tool written in bash 3.2+&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dylanaraps/neofetch/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dylanaraps/neofetch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/dylanaraps/neofetch.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/metapackage/neofetch&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/neofetch.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/GFmC5Ad.png&#34; alt=&#34;neofetch&#34; align=&#34;right&#34; height=&#34;240px&#34;&gt; &#xA;&lt;p&gt;Neofetch is a command-line system information tool written in &lt;code&gt;bash 3.2+&lt;/code&gt;. Neofetch displays information about your operating system, software and hardware in an aesthetic and visually pleasing way.&lt;/p&gt; &#xA;&lt;p&gt;The overall purpose of Neofetch is to be used in screen-shots of your system. Neofetch shows the information other people want to see. There are other tools available for proper system statistic/diagnostics.&lt;/p&gt; &#xA;&lt;p&gt;The information by default is displayed alongside your operating system&#39;s logo. You can further configure Neofetch to instead use an image, a custom ASCII file, your wallpaper or nothing at all.&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/lUrkQBN.png&#34; alt=&#34;neofetch&#34; align=&#34;right&#34; height=&#34;240px&#34;&gt; &#xA;&lt;p&gt;You can further configure Neofetch to display exactly what you want it to. Through the use of command-line flags and the configuration file you can change existing information outputs or add your own custom ones.&lt;/p&gt; &#xA;&lt;p&gt;Neofetch supports almost 150 different operating systems. From Linux to Windows, all the way to more obscure operating systems like Minix, AIX and Haiku. If your favourite operating system is unsupported: Open up an issue and support will be added.&lt;/p&gt; &#xA;&lt;h3&gt;More: [&lt;a href=&#34;https://github.com/dylanaraps/neofetch/wiki/Dependencies&#34;&gt;Dependencies&lt;/a&gt;] [&lt;a href=&#34;https://github.com/dylanaraps/neofetch/wiki/Installation&#34;&gt;Installation&lt;/a&gt;] [&lt;a href=&#34;https://github.com/dylanaraps/neofetch/wiki&#34;&gt;Wiki&lt;/a&gt;]&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>GistNoesis/FourierKAN</title>
    <updated>2024-05-04T01:24:38Z</updated>
    <id>tag:github.com,2024-05-04:/GistNoesis/FourierKAN</id>
    <link href="https://github.com/GistNoesis/FourierKAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FourierKAN&lt;/h1&gt; &#xA;&lt;p&gt;Pytorch Layer for FourierKAN&lt;/p&gt; &#xA;&lt;p&gt;It is a layer intended to be a substitution for Linear + non-linear activation&lt;/p&gt; &#xA;&lt;p&gt;This is inspired by Kolmogorov-Arnold Networks but using 1d fourier coefficients instead of splines coefficients It should be easier to optimize as fourier are more dense than spline (global vs local) Once convergence is reached you can replace the 1d function with spline approximation for faster evaluation giving almost the same result The other advantage of using fourier over spline is that the function are periodic, and therefore more numerically bounded Avoiding the issues of going out of grid&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;put the file in the same directory then&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;from fftKAN import NaiveFourierKANLayer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;alternatively you can run &lt;code&gt;python fftKAN.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;to see the demo.&lt;/p&gt; &#xA;&lt;p&gt;Code runs, cpu and gpu, but is untested.&lt;/p&gt; &#xA;&lt;p&gt;This is a naive version that use memory proportional to the gridsize, where as a fused version doesn&#39;t require temporary memory&lt;/p&gt; &#xA;&lt;h1&gt;Highlight of the core :&lt;/h1&gt; &#xA;&lt;p&gt;You can either do the simple thing of materializing the product and then do the sum, or you can use einsum to do the reduction. Einsum should use less memory but be slower&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GistNoesis/FourierKAN/raw/9a8c75311b74ef9a858020edcc29e1a2059cb41e/fftKAN.py#L28-L58&#34;&gt;https://github.com/GistNoesis/FourierKAN/blob/9a8c75311b74ef9a858020edcc29e1a2059cb41e/fftKAN.py#L28-L58&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;License is MIT, but future evolutions (including fused kernels ) will be proprietary.&lt;/p&gt; &#xA;&lt;h1&gt;Fused Operations&lt;/h1&gt; &#xA;&lt;p&gt;This layer use a lot of memory, but by fusing operations we don&#39;t need any extra memory, and we can even use trigonometry tricks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GistNoesis/FusedFourierKAN&#34;&gt;https://github.com/GistNoesis/FusedFourierKAN&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>espeak-ng/espeak-ng</title>
    <updated>2024-05-04T01:24:38Z</updated>
    <id>tag:github.com,2024-05-04:/espeak-ng/espeak-ng</id>
    <link href="https://github.com/espeak-ng/espeak-ng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;eSpeak NG is an open source speech synthesizer that supports more than hundred languages and accents.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eSpeak NG Text-to-Speech&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/languages.md&#34;&gt;Supported languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/#espeak-compatibility&#34;&gt;eSpeak Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/#history&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/#license-information&#34;&gt;License Information&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The eSpeak NG is a compact open source software text-to-speech synthesizer for Linux, Windows, Android and other operating systems. It supports &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/languages.md&#34;&gt;more than 100 languages and accents&lt;/a&gt;. It is based on the eSpeak engine created by Jonathan Duddington.&lt;/p&gt; &#xA;&lt;p&gt;eSpeak NG uses a &#34;formant synthesis&#34; method. This allows many languages to be provided in a small size. The speech is clear, and can be used at high speeds, but is not as natural or smooth as larger synthesizers which are based on human speech recordings. It also supports Klatt formant synthesis, and the ability to use MBROLA as backend speech synthesizer.&lt;/p&gt; &#xA;&lt;p&gt;eSpeak NG is available as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/src/espeak-ng.1.ronn&#34;&gt;command line&lt;/a&gt; program (Linux and Windows) to speak text from a file or from stdin.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/integration.md&#34;&gt;shared library&lt;/a&gt; version for use by other programs. (On Windows this is a DLL).&lt;/li&gt; &#xA; &lt;li&gt;A SAPI5 version for Windows, so it can be used with screen-readers and other programs that support the Windows SAPI5 interface.&lt;/li&gt; &#xA; &lt;li&gt;eSpeak NG has been ported to other platforms, including Solaris and Mac OSX.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Includes different Voices, whose characteristics can be altered.&lt;/li&gt; &#xA; &lt;li&gt;Can produce speech output as a WAV file.&lt;/li&gt; &#xA; &lt;li&gt;SSML (Speech Synthesis Markup Language) is supported (not complete), and also HTML.&lt;/li&gt; &#xA; &lt;li&gt;Compact size. The program and its data, including many languages, totals about few Mbytes.&lt;/li&gt; &#xA; &lt;li&gt;Can be used as a front-end to &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/mbrola.md&#34;&gt;MBROLA diphone voices&lt;/a&gt;. eSpeak NG converts text to phonemes with pitch and length information.&lt;/li&gt; &#xA; &lt;li&gt;Can translate text into phoneme codes, so it could be adapted as a front end for another speech synthesis engine.&lt;/li&gt; &#xA; &lt;li&gt;Potential for other languages. Several are included in varying stages of progress. Help from native speakers for these or other languages is welcome.&lt;/li&gt; &#xA; &lt;li&gt;Written in C.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/ChangeLog.md&#34;&gt;ChangeLog&lt;/a&gt; for a description of the changes in the various releases and with the eSpeak NG project.&lt;/p&gt; &#xA;&lt;p&gt;The following platforms are supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Minimum Version&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/espeak-ng/espeak-ng/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;4.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Windows 8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/guide.md&#34;&gt;User guide&lt;/a&gt; explains how to set up and use eSpeak NG from command line or as a library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/building.md&#34;&gt;Building guide&lt;/a&gt; provides info how to compile and build eSpeak NG from the source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/index.md&#34;&gt;Index&lt;/a&gt; provides full list of more detailed information for contributors and developers.&lt;/li&gt; &#xA; &lt;li&gt;Look at &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/docs/contributing.md&#34;&gt;contribution guide&lt;/a&gt; to start your contribution.&lt;/li&gt; &#xA; &lt;li&gt;Look at &lt;a href=&#34;https://github.com/espeak-ng/espeak-ng/wiki/eSpeak-NG-roadmap&#34;&gt;eSpeak NG roadmap&lt;/a&gt; to participate in development of eSpeak NG.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;eSpeak Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;espeak-ng&lt;/em&gt; binaries use the same command-line options as &lt;em&gt;espeak&lt;/em&gt;, with several additions to provide new functionality from &lt;em&gt;espeak-ng&lt;/em&gt; such as specifying the output audio device name to use. The build creates symlinks of &lt;code&gt;espeak&lt;/code&gt; to &lt;code&gt;espeak-ng&lt;/code&gt;, and &lt;code&gt;speak&lt;/code&gt; to &lt;code&gt;speak-ng&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The espeak &lt;code&gt;speak_lib.h&lt;/code&gt; include file is located in &lt;code&gt;espeak-ng/speak_lib.h&lt;/code&gt; with an optional symlink in &lt;code&gt;espeak/speak_lib.h&lt;/code&gt;. This file contains the espeak 1.48.15 API, with a change to the &lt;code&gt;ESPEAK_API&lt;/code&gt; macro to fix building on Windows and some minor changes to the documentation comments. This C API is API and ABI compatible with espeak.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;espeak-data&lt;/code&gt; data has been moved to &lt;code&gt;espeak-ng-data&lt;/code&gt; to avoid conflicts with espeak. There have been various changes to the voice, dictionary and phoneme files that make them incompatible with espeak.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;espeak-ng&lt;/em&gt; project does not include the &lt;em&gt;espeakedit&lt;/em&gt; program. It has moved the logic to build the dictionary, phoneme and intonation binary files into the &lt;code&gt;libespeak-ng.so&lt;/code&gt; file that is accessible from the &lt;code&gt;espeak-ng&lt;/code&gt; command line and C API.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;The program was originally known as &lt;strong&gt;speak&lt;/strong&gt; and originally written for Acorn/RISC_OS computers starting in 1995 by Jonathan Duddington. This was enhanced and re-written in 2007 as &lt;strong&gt;eSpeak&lt;/strong&gt;, including a relaxation of the original memory and processing power constraints, and with support for additional languages.&lt;/p&gt; &#xA;&lt;p&gt;In 2010, Reece H. Dunn started maintaining a version of eSpeak on GitHub that was designed to make it easier to build eSpeak on POSIX systems, porting the build system to autotools in 2012. In late 2015, this project was officially forked to a new &lt;strong&gt;eSpeak NG&lt;/strong&gt; project. The new eSpeak NG project is a significant departure from the eSpeak project, with the intention of cleaning up the existing codebase, adding new features, and adding to and improving the supported languages.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;historical&lt;/em&gt; branch contains the available older releases of the original eSpeak that are not contained in the subversion repository.&lt;/p&gt; &#xA;&lt;p&gt;1.24.02 is the first version of eSpeak to appear in the subversion repository, but releases from 1.05 to 1.24 are available at &lt;a href=&#34;http://sourceforge.net/projects/espeak/files/espeak/&#34;&gt;http://sourceforge.net/projects/espeak/files/espeak/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These early releases have been checked into the historical branch, with the 1.24.02 release as the last entry. This makes it possible to use the replace functionality of git to see the earlier history:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git replace 8d59235f 63c1c019&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The source releases contain the &lt;code&gt;big_endian&lt;/code&gt;, &lt;code&gt;espeak-edit&lt;/code&gt;, &lt;code&gt;praat-mod&lt;/code&gt;, &lt;code&gt;riskos&lt;/code&gt;, &lt;code&gt;windows_dll&lt;/code&gt; and &lt;code&gt;windows_sapi&lt;/code&gt; folders. These do not appear in the source repository until later releases, so have been excluded from the historical commits to align them better with the 1.24.02 source commit.&lt;/p&gt; &#xA;&lt;h2&gt;License Information&lt;/h2&gt; &#xA;&lt;p&gt;eSpeak NG Text-to-Speech is released under the &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/COPYING&#34;&gt;GPL version 3&lt;/a&gt; or later license.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;getopt.c&lt;/code&gt; compatibility implementation for getopt support on Windows is taken from the NetBSD &lt;code&gt;getopt_long&lt;/code&gt; implementation, which is licensed under a &lt;a href=&#34;https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/COPYING.BSD2&#34;&gt;2-clause BSD&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;Android is a trademark of Google LLC.&lt;/p&gt;</summary>
  </entry>
</feed>