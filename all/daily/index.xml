<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-13T01:28:06Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>expressjs/express</title>
    <updated>2024-09-13T01:28:06Z</updated>
    <id>tag:github.com,2024-09-13:/expressjs/express</id>
    <link href="https://github.com/expressjs/express" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://expressjs.com/&#34;&gt;&lt;img src=&#34;https://i.cloudup.com/zfY6lL7eFa-3000x3000.png&#34; alt=&#34;Express Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fast, unopinionated, minimalist web framework for &lt;a href=&#34;http://nodejs.org&#34;&gt;Node.js&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project has a &lt;a href=&#34;https://github.com/expressjs/express/raw/master/Code-Of-Conduct.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#docs--community&#34;&gt;Docs &amp;amp; Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Quick-Start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Running-Tests&#34;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Philosophy&#34;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#Contributing&#34;&gt;Contributing to Express&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#tc-technical-committee&#34;&gt;TC (Technical Committee)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#triagers&#34;&gt;Triagers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/express&#34;&gt;&lt;img src=&#34;https://badgen.net/npm/v/express&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagephobia.com/result?p=express&#34;&gt;&lt;img src=&#34;https://badgen.net/packagephobia/install/express&#34; alt=&#34;NPM Install Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmcharts.com/compare/express?minimal=true&#34;&gt;&lt;img src=&#34;https://badgen.net/npm/dm/express&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express&#34;&gt;&lt;img src=&#34;https://api.scorecard.dev/projects/github.com/expressjs/express/badge&#34; alt=&#34;OpenSSF Scorecard Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const express = require(&#39;express&#39;)&#xA;const app = express()&#xA;&#xA;app.get(&#39;/&#39;, function (req, res) {&#xA;  res.send(&#39;Hello World&#39;)&#xA;})&#xA;&#xA;app.listen(3000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; module available through the &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before installing, &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;download and install Node.js&lt;/a&gt;. Node.js 0.10 or higher is required.&lt;/p&gt; &#xA;&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href=&#34;https://docs.npmjs.com/creating-a-package-json-file&#34;&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installation is done using the &lt;a href=&#34;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&#34;&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install express&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;http://expressjs.com/en/starter/installing.html&#34;&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Robust routing&lt;/li&gt; &#xA; &lt;li&gt;Focus on high performance&lt;/li&gt; &#xA; &lt;li&gt;Super-high test coverage&lt;/li&gt; &#xA; &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; &#xA; &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; &#xA; &lt;li&gt;Content negotiation&lt;/li&gt; &#xA; &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://expressjs.com/&#34;&gt;Website and Documentation&lt;/a&gt; - [&lt;a href=&#34;https://github.com/expressjs/expressjs.com&#34;&gt;website repo&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/#express&#34;&gt;#express&lt;/a&gt; on &lt;a href=&#34;https://libera.chat&#34;&gt;Libera Chat&lt;/a&gt; IRC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/expressjs&#34;&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://github.com/expressjs/express/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/group/express-js&#34;&gt;Google Group&lt;/a&gt; for discussion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/expressjs/express&#34;&gt;Gitter&lt;/a&gt; for support and discussion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read &lt;a href=&#34;https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x&#34;&gt;Migrating from 3.x to 4.x&lt;/a&gt; as well as &lt;a href=&#34;https://github.com/expressjs/express/wiki/New-features-in-4.x&#34;&gt;New features in 4.x&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href=&#34;https://github.com/expressjs/generator&#34;&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; &#xA;&lt;p&gt;Install the executable. The executable&#39;s major version will match Express&#39;s:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install -g express-generator@4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create the app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the website at: &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; &#xA;&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href=&#34;https://github.com/tj/consolidate.js&#34;&gt;Consolidate.js&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To view the examples, clone the Express repo and install the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/expressjs/express.git --depth 1&#xA;$ cd express&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run whichever example you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ node examples/content-negotiation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/expressjs/express/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/expressjs/express/master?label=linux&#34; alt=&#34;Linux Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/dougwilson/express&#34;&gt;&lt;img src=&#34;https://badgen.net/appveyor/ci/dougwilson/express/master?label=windows&#34; alt=&#34;Windows Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/expressjs/express?branch=master&#34;&gt;&lt;img src=&#34;https://badgen.net/coveralls/c/github/expressjs/express/master&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/Contributing.md&#34;&gt;Contributing Guide&lt;/a&gt; for more technical details on contributing.&lt;/p&gt; &#xA;&lt;h3&gt;Security Issues&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/Security.md&#34;&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;p&gt;To run the test suite, first install the dependencies, then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install&#xA;$ npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;People&lt;/h2&gt; &#xA;&lt;p&gt;The original author of Express is &lt;a href=&#34;https://github.com/tj&#34;&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/expressjs/express/graphs/contributors&#34;&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TC (Technical Committee)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonchurch&#34;&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wesleytodd&#34;&gt;wesleytodd&lt;/a&gt; - &lt;strong&gt;Wes Todd&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LinusU&#34;&gt;LinusU&lt;/a&gt; - &lt;strong&gt;Linus Unnebäck&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blakeembrey&#34;&gt;blakeembrey&lt;/a&gt; - &lt;strong&gt;Blake Embrey&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sheplu&#34;&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crandmck&#34;&gt;crandmck&lt;/a&gt; - &lt;strong&gt;Rand McKinney&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ctcpip&#34;&gt;ctcpip&lt;/a&gt; - &lt;strong&gt;Chris de Almeida&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TC emeriti members&lt;/summary&gt; &#xA; &lt;h4&gt;TC emeriti members&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/dougwilson&#34;&gt;dougwilson&lt;/a&gt; - &lt;strong&gt;Douglas Wilson&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hacksparrow&#34;&gt;hacksparrow&lt;/a&gt; - &lt;strong&gt;Hage Yaapa&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jonathanong&#34;&gt;jonathanong&lt;/a&gt; - &lt;strong&gt;jongleberry&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/niftylettuce&#34;&gt;niftylettuce&lt;/a&gt; - &lt;strong&gt;niftylettuce&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/troygoode&#34;&gt;troygoode&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Triagers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aravindvnair99&#34;&gt;aravindvnair99&lt;/a&gt; - &lt;strong&gt;Aravind Nair&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carpasse&#34;&gt;carpasse&lt;/a&gt; - &lt;strong&gt;Carlos Serrano&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CBID2&#34;&gt;CBID2&lt;/a&gt; - &lt;strong&gt;Christine Belzie&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/enyoghasim&#34;&gt;enyoghasim&lt;/a&gt; - &lt;strong&gt;David Enyoghasim&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mertcanaltin&#34;&gt;mertcanaltin&lt;/a&gt; - &lt;strong&gt;Mert Can Altin&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0ss&#34;&gt;0ss&lt;/a&gt; - &lt;strong&gt;Salah&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/import-brain&#34;&gt;import-brain&lt;/a&gt; - &lt;strong&gt;Eric Cheng&lt;/strong&gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/3imed-jaberi&#34;&gt;3imed-jaberi&lt;/a&gt; - &lt;strong&gt;Imed Jaberi&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dakshkhetan&#34;&gt;dakshkhetan&lt;/a&gt; - &lt;strong&gt;Daksh Khetan&lt;/strong&gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasraziel&#34;&gt;lucasraziel&lt;/a&gt; - &lt;strong&gt;Lucas Soares Do Rego&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IamLizu&#34;&gt;IamLizu&lt;/a&gt; - &lt;strong&gt;S M Mahmudul Hasan&lt;/strong&gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sushmeet&#34;&gt;Sushmeet&lt;/a&gt; - &lt;strong&gt;Sushmeet Sunger&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Triagers emeriti members&lt;/summary&gt; &#xA; &lt;h4&gt;Emeritus Triagers&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AuggieH&#34;&gt;AuggieH&lt;/a&gt; - &lt;strong&gt;Auggie Hudak&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/G-Rath&#34;&gt;G-Rath&lt;/a&gt; - &lt;strong&gt;Gareth Jones&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MohammadXroid&#34;&gt;MohammadXroid&lt;/a&gt; - &lt;strong&gt;Mohammad Ayashi&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/NawafSwe&#34;&gt;NawafSwe&lt;/a&gt; - &lt;strong&gt;Nawaf Alsharqi&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/NotMoni&#34;&gt;NotMoni&lt;/a&gt; - &lt;strong&gt;Moni&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/VigneshMurugan&#34;&gt;VigneshMurugan&lt;/a&gt; - &lt;strong&gt;Vignesh Murugan&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/davidmashe&#34;&gt;davidmashe&lt;/a&gt; - &lt;strong&gt;David Ashe&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/digitaIfabric&#34;&gt;digitaIfabric&lt;/a&gt; - &lt;strong&gt;David&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/e-l-i-s-e&#34;&gt;e-l-i-s-e&lt;/a&gt; - &lt;strong&gt;Elise Bonner&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/fed135&#34;&gt;fed135&lt;/a&gt; - &lt;strong&gt;Frederic Charette&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/firmanJS&#34;&gt;firmanJS&lt;/a&gt; - &lt;strong&gt;Firman Abdul Hakim&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/getspooky&#34;&gt;getspooky&lt;/a&gt; - &lt;strong&gt;Yasser Ameur&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ghinks&#34;&gt;ghinks&lt;/a&gt; - &lt;strong&gt;Glenn&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ghousemohamed&#34;&gt;ghousemohamed&lt;/a&gt; - &lt;strong&gt;Ghouse Mohamed&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/gireeshpunathil&#34;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jake32321&#34;&gt;jake32321&lt;/a&gt; - &lt;strong&gt;Jake Reed&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jonchurch&#34;&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lekanikotun&#34;&gt;lekanikotun&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/marsonya&#34;&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Lekan Ikotun&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mastermatt&#34;&gt;mastermatt&lt;/a&gt; - &lt;strong&gt;Matt R. Wilson&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/maxakuru&#34;&gt;maxakuru&lt;/a&gt; - &lt;strong&gt;Max Edell&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mlrawlings&#34;&gt;mlrawlings&lt;/a&gt; - &lt;strong&gt;Michael Rawlings&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rodion-arr&#34;&gt;rodion-arr&lt;/a&gt; - &lt;strong&gt;Rodion Abdurakhimov&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/sheplu&#34;&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/tarunyadav1&#34;&gt;tarunyadav1&lt;/a&gt; - &lt;strong&gt;Tarun yadav&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/tunniclm&#34;&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bridgecrewio/checkov</title>
    <updated>2024-09-13T01:28:06Z</updated>
    <id>tag:github.com,2024-09-13:/bridgecrewio/checkov</id>
    <link href="https://github.com/bridgecrewio/checkov" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prevent cloud misconfigurations and find vulnerabilities during build-time in infrastructure as code, container images and open source packages with Checkov by Bridgecrew.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/docs/web/images/checkov_blue_logo.png&#34; alt=&#34;checkov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://prismacloud.io/?utm_source=github&amp;amp;utm_medium=organic_oss&amp;amp;utm_campaign=checkov&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained_by-Prisma_Cloud-blue&#34; alt=&#34;Maintained by Prisma Cloud&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bridgecrewio/checkov/actions?query=workflow%3Abuild&#34;&gt;&lt;img src=&#34;https://github.com/bridgecrewio/checkov/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bridgecrewio/checkov/actions?query=event%3Apush+branch%3Amaster+workflow%3Asecurity&#34;&gt;&lt;img src=&#34;https://github.com/bridgecrewio/checkov/workflows/security/badge.svg?sanitize=true&#34; alt=&#34;security status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bridgecrewio/checkov/actions?query=workflow%3Acoverage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/coverage.svg?sanitize=true&#34; alt=&#34;code_coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.checkov.io/1.Welcome/What%20is%20Checkov.html?utm_source=github&amp;amp;utm_medium=organic_oss&amp;amp;utm_campaign=checkov&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-passing-brightgreen&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/checkov/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/checkov&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/checkov&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg?sanitize=true&#34; alt=&#34;Terraform Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/checkov&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/checkov&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/bridgecrew/checkov&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/bridgecrew/checkov.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codifiedsecurity.slack.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?style=plastic&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;slack-community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Checkov&lt;/strong&gt; is a static code analysis tool for infrastructure as code (IaC) and also a software composition analysis (SCA) tool for images and open source packages.&lt;/p&gt; &#xA;&lt;p&gt;It scans cloud infrastructure provisioned using &lt;a href=&#34;https://terraform.io/&#34;&gt;Terraform&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Terraform%20Plan%20Scanning.md&#34;&gt;Terraform plan&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Cloudformation.md&#34;&gt;Cloudformation&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/AWS%20SAM.md&#34;&gt;AWS SAM&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Kubernetes.md&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Helm.md&#34;&gt;Helm charts&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Kustomize.md&#34;&gt;Kustomize&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Dockerfile.md&#34;&gt;Dockerfile&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Serverless%20Framework.md&#34;&gt;Serverless&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Bicep.md&#34;&gt;Bicep&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/OpenAPI.md&#34;&gt;OpenAPI&lt;/a&gt;, &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/7.Scan%20Examples/Azure%20ARM%20templates.md&#34;&gt;ARM Templates&lt;/a&gt;, or &lt;a href=&#34;https://opentofu.org/&#34;&gt;OpenTofu&lt;/a&gt; and detects security and compliance misconfigurations using graph-based scanning.&lt;/p&gt; &#xA;&lt;p&gt;It performs &lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/docs/7.Scan%20Examples/Sca.md&#34;&gt;Software Composition Analysis (SCA) scanning&lt;/a&gt; which is a scan of open source packages and images for Common Vulnerabilities and Exposures (CVEs).&lt;/p&gt; &#xA;&lt;p&gt;Checkov also powers &lt;a href=&#34;https://www.prismacloud.io/prisma/cloud/cloud-code-security/?utm_source=github&amp;amp;utm_medium=organic_oss&amp;amp;utm_campaign=checkov&#34;&gt;&lt;strong&gt;Prisma Cloud Application Security&lt;/strong&gt;&lt;/a&gt;, the developer-first platform that codifies and streamlines cloud security throughout the development lifecycle. Prisma Cloud identifies, fixes, and prevents misconfigurations in cloud resources and infrastructure-as-code files.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.prismacloud.io/prisma/request-a-prisma-cloud-trial/?utm_campaign=checkov-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=get-started-button&#34; title=&#34;Try_Prisma_Cloud&#34;&gt; &lt;img src=&#34;https://dabuttonfactory.com/button.png?t=Try+Prisma+Cloud&amp;amp;f=Open+Sans-Bold&amp;amp;ts=26&amp;amp;tc=fff&amp;amp;hp=45&amp;amp;vp=20&amp;amp;c=round&amp;amp;bgt=unicolored&amp;amp;bgc=00c0e8&#34; align=&#34;right&#34; width=&#34;120&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://docs.prismacloud.io/en/enterprise-edition/use-cases/secure-the-source/secure-the-source&#34; title=&#34;Docs&#34;&gt; &lt;img src=&#34;https://dabuttonfactory.com/button.png?t=Read+the+Docs&amp;amp;f=Open+Sans-Bold&amp;amp;ts=26&amp;amp;tc=fff&amp;amp;hp=45&amp;amp;vp=20&amp;amp;c=round&amp;amp;bgt=unicolored&amp;amp;bgc=00c0e8&#34; align=&#34;right&#34; width=&#34;120&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/1.Welcome/Migration.md&#34;&gt;Migration - v2 to v3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/5.Policy%20Index/all.md&#34;&gt;Over 1000 built-in policies&lt;/a&gt; cover security and compliance best practices for AWS, Azure and Google Cloud.&lt;/li&gt; &#xA; &lt;li&gt;Scans Terraform, Terraform Plan, Terraform JSON, CloudFormation, AWS SAM, Kubernetes, Helm, Kustomize, Dockerfile, Serverless framework, Ansible, Bicep, ARM, and OpenTofu template files.&lt;/li&gt; &#xA; &lt;li&gt;Scans Argo Workflows, Azure Pipelines, BitBucket Pipelines, Circle CI Pipelines, GitHub Actions and GitLab CI workflow files&lt;/li&gt; &#xA; &lt;li&gt;Supports Context-awareness policies based on in-memory graph-based scanning.&lt;/li&gt; &#xA; &lt;li&gt;Supports Python format for attribute policies and YAML format for both attribute and composite policies.&lt;/li&gt; &#xA; &lt;li&gt;Detects &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/2.Basics/Scanning%20Credentials%20and%20Secrets.md&#34;&gt;AWS credentials&lt;/a&gt; in EC2 Userdata, Lambda environment variables and Terraform providers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prismacloud.io/prisma/cloud/secrets-security&#34;&gt;Identifies secrets&lt;/a&gt; using regular expressions, keywords, and entropy based detection.&lt;/li&gt; &#xA; &lt;li&gt;Evaluates &lt;a href=&#34;https://registry.terraform.io/browse/providers&#34;&gt;Terraform Provider&lt;/a&gt; settings to regulate the creation, management, and updates of IaaS, PaaS or SaaS managed through Terraform.&lt;/li&gt; &#xA; &lt;li&gt;Policies support evaluation of &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/2.Basics/Handling%20Variables.md&#34;&gt;variables&lt;/a&gt; to their optional default value.&lt;/li&gt; &#xA; &lt;li&gt;Supports in-line &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/2.Basics/Suppressing%20and%20Skipping%20Policies.md&#34;&gt;suppression&lt;/a&gt; of accepted risks or false-positives to reduce recurring scan failures. Also supports global skip from using CLI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/2.Basics/Reviewing%20Scan%20Results.md&#34;&gt;Output&lt;/a&gt; currently available as CLI, &lt;a href=&#34;https://cyclonedx.org&#34;&gt;CycloneDX&lt;/a&gt;, JSON, JUnit XML, CSV, SARIF and github markdown and link to remediation &lt;a href=&#34;https://docs.prismacloud.io/en/enterprise-edition/policy-reference/&#34;&gt;guides&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Scan results in CLI&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/docs/checkov-recording.gif&#34; alt=&#34;scan-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scheduled scan result in Jenkins&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bridgecrewio/checkov/main/docs/checkov-jenkins.png&#34; alt=&#34;jenikins-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.8 (Data classes are available for Python 3.8+)&lt;/li&gt; &#xA; &lt;li&gt;Terraform &amp;gt;= 0.12&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install pip follow the official &lt;a href=&#34;https://pip.pypa.io/en/stable/cli/pip_install/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip3 install checkov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with &lt;a href=&#34;https://formulae.brew.sh/formula/checkov&#34;&gt;Homebrew&lt;/a&gt; (macOS or Linux)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install checkov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Enabling bash autocomplete&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;source &amp;lt;(register-python-argcomplete checkov)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upgrade&lt;/h3&gt; &#xA;&lt;p&gt;if you installed checkov with pip3&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip3 install -U checkov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with Homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew upgrade checkov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure an input folder or file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --directory /user/path/to/iac/code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or a specific file or files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --file /user/tf/example.tf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -f /user/cloudformation/example1.yml -f /user/cloudformation/example2.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or a terraform plan file in json format&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;terraform init&#xA;terraform plan -out tf.plan&#xA;terraform show -json tf.plan  &amp;gt; tf.json&#xA;checkov -f tf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;terraform show&lt;/code&gt; output file &lt;code&gt;tf.json&lt;/code&gt; will be a single line. For that reason all findings will be reported line number 0 by Checkov&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;check: CKV_AWS_21: &#34;Ensure all data stored in the S3 bucket have versioning enabled&#34;&#xA;&#x9;FAILED for resource: aws_s3_bucket.customer&#xA;&#x9;File: /tf/tf.json:0-0&#xA;&#x9;Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have installed &lt;code&gt;jq&lt;/code&gt; you can convert json file into multiple lines with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;terraform show -json tf.plan | jq &#39;.&#39; &amp;gt; tf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scan result would be much user friendly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -f tf.json&#xA;Check: CKV_AWS_21: &#34;Ensure all data stored in the S3 bucket have versioning enabled&#34;&#xA;&#x9;FAILED for resource: aws_s3_bucket.customer&#xA;&#x9;File: /tf/tf1.json:224-268&#xA;&#x9;Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning&#xA;&#xA;&#x9;&#x9;225 |               &#34;values&#34;: {&#xA;&#x9;&#x9;226 |                 &#34;acceleration_status&#34;: &#34;&#34;,&#xA;&#x9;&#x9;227 |                 &#34;acl&#34;: &#34;private&#34;,&#xA;&#x9;&#x9;228 |                 &#34;arn&#34;: &#34;arn:aws:s3:::mybucket&#34;,&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, specify the repo root of the hcl files used to generate the plan file, using the &lt;code&gt;--repo-root-for-plan-enrichment&lt;/code&gt; flag, to enrich the output with the appropriate file path, line numbers, and codeblock of the resource(s). An added benefit is that check suppressions will be handled accordingly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -f tf.json --repo-root-for-plan-enrichment /user/path/to/iac/code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scan result sample (CLI)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Passed Checks: 1, Failed Checks: 1, Suppressed Checks: 0&#xA;Check: &#34;Ensure all data stored in the S3 bucket is securely encrypted at rest&#34;&#xA;/main.tf:&#xA;&#x9; Passed for resource: aws_s3_bucket.template_bucket&#xA;Check: &#34;Ensure all data stored in the S3 bucket is securely encrypted at rest&#34;&#xA;/../regionStack/main.tf:&#xA;&#x9; Failed for resource: aws_s3_bucket.sls_deployment_bucket_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start using Checkov by reading the &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/1.Welcome/Quick%20Start.md&#34;&gt;Getting Started&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull bridgecrew/checkov&#xA;docker run --tty --rm --volume /user/tf:/tf --workdir /tf bridgecrew/checkov --directory /tf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: if you are using Python 3.6(Default version in Ubuntu 18.04) checkov will not work, and it will fail with &lt;code&gt;ModuleNotFoundError: No module named &#39;dataclasses&#39;&lt;/code&gt; error message. In this case, you can use the docker version instead.&lt;/p&gt; &#xA;&lt;p&gt;Note that there are certain cases where redirecting &lt;code&gt;docker run --tty&lt;/code&gt; output to a file - for example, if you want to save the Checkov JUnit output to a file - will cause extra control characters to be printed. This can break file parsing. If you encounter this, remove the &lt;code&gt;--tty&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--workdir /tf&lt;/code&gt; flag is optional to change the working directory to the mounted volume. If you are using the SARIF output &lt;code&gt;-o sarif&lt;/code&gt; this will output the results.sarif file to the mounted volume (&lt;code&gt;/user/tf&lt;/code&gt; in the example above). If you do not include that flag, the working directory will be &#34;/&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Running or skipping checks&lt;/h3&gt; &#xA;&lt;p&gt;By using command line flags, you can specify to run only named checks (allow list) or run all checks except those listed (deny list). If you are using the platform integration via API key, you can also specify a severity threshold to skip and / or include. Moreover, as json files can&#39;t contain comments, one can pass regex pattern to skip json file secret scan.&lt;/p&gt; &#xA;&lt;p&gt;See the docs for more detailed information about how these flags work together.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Allow only the two specified checks to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --directory . --check CKV_AWS_20,CKV_AWS_57&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all checks except the one specified:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check CKV_AWS_20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all checks except checks with specified patterns:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check CKV_AWS*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all checks that are MEDIUM severity or higher (requires API key):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --check MEDIUM --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all checks that are MEDIUM severity or higher, as well as check CKV_123 (assume this is a LOW severity check):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --check MEDIUM,CKV_123 --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Skip all checks that are MEDIUM severity or lower:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check MEDIUM --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Skip all checks that are MEDIUM severity or lower, as well as check CKV_789 (assume this is a high severity check):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check MEDIUM,CKV_789 --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all checks that are MEDIUM severity or higher, but skip check CKV_123 (assume this is a medium or higher severity check):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --check MEDIUM --skip-check CKV_123 --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run check CKV_789, but skip it if it is a medium severity (the --check logic is always applied before --skip-check)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check MEDIUM --check CKV_789 --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Kubernetes workloads, you can also use allow/deny namespaces. For example, do not report any results for the kube-system namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --skip-check kube-system&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a scan of a container image. First pull or build the image then refer to it by the hash, ID, or name:tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --framework sca_image --docker-image sha256:1234example --dockerfile-path /Users/path/to/Dockerfile --repo-id ... --bc-api-key ...&#xA;&#xA;checkov --docker-image &amp;lt;image-name&amp;gt;:tag --dockerfile-path /User/path/to/Dockerfile --repo-id ... --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use --image flag also to scan container image instead of --docker-image for shortener:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --image &amp;lt;image-name&amp;gt;:tag --dockerfile-path /User/path/to/Dockerfile --repo-id ... --bc-api-key ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run an SCA scan of packages in a repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d . --framework sca_package --bc-api-key ... --repo-id &amp;lt;repo_id(arbitrary)&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a scan of a directory with environment variables removing buffering, adding debug level logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PYTHONUNBUFFERED=1 LOG_LEVEL=DEBUG checkov -d .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR enable the environment variables for multiple runs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PYTHONUNBUFFERED=1 LOG_LEVEL=DEBUG&#xA;checkov -d .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run secrets scanning on all files in MyDirectory. Skip CKV_SECRET_6 check on json files that their suffix is DontScan&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d /MyDirectory --framework secrets --repo-id ... --bc-api-key ... --skip-check CKV_SECRET_6:.*DontScan.json$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run secrets scanning on all files in MyDirectory. Skip CKV_SECRET_6 check on json files that contains &#34;skip_test&#34; in path&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov -d /MyDirectory --framework secrets --repo-id ... --bc-api-key ... --skip-check CKV_SECRET_6:.*skip_test.*json$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One can mask values from scanning results by supplying a configuration file (using --config-file flag) with mask entry. The masking can apply on resource &amp;amp; value (or multiple values, seperated with a comma). Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mask:&#xA;- aws_instance:user_data&#xA;- azurerm_key_vault_secret:admin_password,user_passwords&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example above, the following values will be masked:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;user_data for aws_instance resource&lt;/li&gt; &#xA; &lt;li&gt;both admin_password &amp;amp;user_passwords for azurerm_key_vault_secret&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Suppressing/Ignoring a check&lt;/h3&gt; &#xA;&lt;p&gt;Like any static-analysis tool it is limited by its analysis scope. For example, if a resource is managed manually, or using subsequent configuration management tooling, suppression can be inserted as a simple code annotation.&lt;/p&gt; &#xA;&lt;h4&gt;Suppression comment format&lt;/h4&gt; &#xA;&lt;p&gt;To skip a check on a given Terraform definition block or CloudFormation resource, apply the following comment pattern inside it&#39;s scope:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;checkov:skip=&amp;lt;check_id&amp;gt;:&amp;lt;suppression_comment&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;check_id&amp;gt;&lt;/code&gt; is one of the [available check scanners](docs/5.Policy Index/all.md)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;suppression_comment&amp;gt;&lt;/code&gt; is an optional suppression reason to be included in the output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;The following comment skips the &lt;code&gt;CKV_AWS_20&lt;/code&gt; check on the resource identified by &lt;code&gt;foo-bucket&lt;/code&gt;, where the scan checks if an AWS S3 bucket is private. In the example, the bucket is configured with public read access; Adding the suppress comment would skip the appropriate check instead of the check to fail.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hcl-terraform&#34;&gt;resource &#34;aws_s3_bucket&#34; &#34;foo-bucket&#34; {&#xA;  region        = var.region&#xA;    #checkov:skip=CKV_AWS_20:The bucket is a public static content host&#xA;  bucket        = local.bucket_name&#xA;  force_destroy = true&#xA;  acl           = &#34;public-read&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output would now contain a &lt;code&gt;SKIPPED&lt;/code&gt; check result entry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;...&#xA;...&#xA;Check: &#34;S3 Bucket has an ACL defined which allows public access.&#34;&#xA;&#x9;SKIPPED for resource: aws_s3_bucket.foo-bucket&#xA;&#x9;Suppress comment: The bucket is a public static content host&#xA;&#x9;File: /example_skip_acl.tf:1-25&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To skip multiple checks, add each as a new line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  #checkov:skip=CKV2_AWS_6&#xA;  #checkov:skip=CKV_AWS_20:The bucket is a public static content host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To suppress checks in Kubernetes manifests, annotations are used with the following format: &lt;code&gt;checkov.io/skip#: &amp;lt;check_id&amp;gt;=&amp;lt;suppression_comment&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: mypod&#xA;  annotations:&#xA;    checkov.io/skip1: CKV_K8S_20=I don&#39;t care about Privilege Escalation :-O&#xA;    checkov.io/skip2: CKV_K8S_14&#xA;    checkov.io/skip3: CKV_K8S_11=I have not set CPU limits as I want BestEffort QoS&#xA;spec:&#xA;  containers:&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Logging&lt;/h4&gt; &#xA;&lt;p&gt;For detailed logging to stdout set up the environment variable &lt;code&gt;LOG_LEVEL&lt;/code&gt; to &lt;code&gt;DEBUG&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Default is &lt;code&gt;LOG_LEVEL=WARNING&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Skipping directories&lt;/h4&gt; &#xA;&lt;p&gt;To skip files or directories, use the argument &lt;code&gt;--skip-path&lt;/code&gt;, which can be specified multiple times. This argument accepts regular expressions for paths relative to the current working directory. You can use it to skip entire directories and / or specific files.&lt;/p&gt; &#xA;&lt;p&gt;By default, all directories named &lt;code&gt;node_modules&lt;/code&gt;, &lt;code&gt;.terraform&lt;/code&gt;, and &lt;code&gt;.serverless&lt;/code&gt; will be skipped, in addition to any files or directories beginning with &lt;code&gt;.&lt;/code&gt;. To cancel skipping directories beginning with &lt;code&gt;.&lt;/code&gt; override &lt;code&gt;CKV_IGNORE_HIDDEN_DIRECTORIES&lt;/code&gt; environment variable &lt;code&gt;export CKV_IGNORE_HIDDEN_DIRECTORIES=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can override the default set of directories to skip by setting the environment variable &lt;code&gt;CKV_IGNORED_DIRECTORIES&lt;/code&gt;. Note that if you want to preserve this list and add to it, you must include these values. For example, &lt;code&gt;CKV_IGNORED_DIRECTORIES=mynewdir&lt;/code&gt; will skip only that directory, but not the others mentioned above. This variable is legacy functionality; we recommend using the &lt;code&gt;--skip-file&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h4&gt;Console Output&lt;/h4&gt; &#xA;&lt;p&gt;The console output is in colour by default, to switch to a monochrome output, set the environment variable: &lt;code&gt;ANSI_COLORS_DISABLED&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;VS Code Extension&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use Checkov within VS Code, give a try to the vscode extension available at &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Bridgecrew.checkov&#34;&gt;VS Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration using a config file&lt;/h3&gt; &#xA;&lt;p&gt;Checkov can be configured using a YAML configuration file. By default, checkov looks for a &lt;code&gt;.checkov.yaml&lt;/code&gt; or &lt;code&gt;.checkov.yml&lt;/code&gt; file in the following places in order of precedence:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Directory against which checkov is run. (&lt;code&gt;--directory&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Current working directory where checkov is called.&lt;/li&gt; &#xA; &lt;li&gt;User&#39;s home directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: it is a best practice for checkov configuration file to be loaded from a trusted source composed by a verified identity, so that scanned files, check ids and loaded custom checks are as desired.&lt;/p&gt; &#xA;&lt;p&gt;Users can also pass in the path to a config file via the command line. In this case, the other config files will be ignored. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --config-file path/to/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users can also create a config file using the &lt;code&gt;--create-config&lt;/code&gt; command, which takes the current command line args and writes them out to a given path. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --compact --directory test-dir --docker-image sample-image --dockerfile-path Dockerfile --download-external-modules True --external-checks-dir sample-dir --quiet --repo-id prisma-cloud/sample-repo --skip-check CKV_DOCKER_3,CKV_DOCKER_2 --skip-framework dockerfile secrets --soft-fail --branch develop --check CKV_DOCKER_1 --create-config /Users/sample/config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will create a &lt;code&gt;config.yaml&lt;/code&gt; file which looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;branch: develop&#xA;check:&#xA;  - CKV_DOCKER_1&#xA;compact: true&#xA;directory:&#xA;  - test-dir&#xA;docker-image: sample-image&#xA;dockerfile-path: Dockerfile&#xA;download-external-modules: true&#xA;evaluate-variables: true&#xA;external-checks-dir:&#xA;  - sample-dir&#xA;external-modules-download-path: .external_modules&#xA;framework:&#xA;  - all &#xA;output: cli &#xA;quiet: true &#xA;repo-id: prisma-cloud/sample-repo &#xA;skip-check: &#xA;  - CKV_DOCKER_3 &#xA;  - CKV_DOCKER_2 &#xA;skip-framework:&#xA;  - dockerfile&#xA;  - secrets&#xA;soft-fail: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users can also use the &lt;code&gt;--show-config&lt;/code&gt; flag to view all the args and settings and where they came from i.e. commandline, config file, environment variable or default. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;checkov --show-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will display:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Command Line Args:   --show-config&#xA;Environment Variables:&#xA;  BC_API_KEY:        your-api-key&#xA;Config File (/Users/sample/.checkov.yml):&#xA;  soft-fail:         False&#xA;  branch:            master&#xA;  skip-check:        [&#39;CKV_DOCKER_3&#39;, &#39;CKV_DOCKER_2&#39;]&#xA;Defaults:&#xA;  --output:          cli&#xA;  --framework:       [&#39;all&#39;]&#xA;  --download-external-modules:False&#xA;  --external-modules-download-path:.external_modules&#xA;  --evaluate-variables:True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contribution is welcomed!&lt;/p&gt; &#xA;&lt;p&gt;Start by reviewing the &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. After that, take a look at a &lt;a href=&#34;https://github.com/bridgecrewio/checkov/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can even start this with one-click dev in your browser through Gitpod at the following link:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/bridgecrewio/checkov&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Looking to contribute new checks? Learn how to write a new check (AKA policy) &lt;a href=&#34;https://github.com/bridgecrewio/checkov/raw/main/docs/6.Contribution/Contribution%20Overview.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;checkov&lt;/code&gt; does not save, publish or share with anyone any identifiable customer information.&lt;br&gt; No identifiable customer information is used to query Prisma Cloud&#39;s publicly accessible guides. &lt;code&gt;checkov&lt;/code&gt; uses Prisma Cloud&#39;s API to enrich the results with links to remediation guides. To skip this API call use the flag &lt;code&gt;--skip-download&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.prismacloud.io/?utm_source=github&amp;amp;utm_medium=organic_oss&amp;amp;utm_campaign=checkov&#34;&gt;Prisma Cloud&lt;/a&gt; builds and maintains Checkov to make policy-as-code simple and accessible.&lt;/p&gt; &#xA;&lt;p&gt;Start with our &lt;a href=&#34;https://www.checkov.io/1.Welcome/Quick%20Start.html&#34;&gt;Documentation&lt;/a&gt; for quick tutorials and examples.&lt;/p&gt; &#xA;&lt;h2&gt;Python Version Support&lt;/h2&gt; &#xA;&lt;p&gt;We follow the official support cycle of Python, and we use automated tests for all supported versions of Python. This means we currently support Python 3.8 - 3.11, inclusive. Note that Python 3.7 reached EOL on June 2023 and Python 3.8 will reach EOL in October 2024. If you run into any issues with any non-EOL Python version, please open an Issue.&lt;/p&gt;</summary>
  </entry>
</feed>