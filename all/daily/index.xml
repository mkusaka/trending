<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-10T01:29:10Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>element-plus/element-plus</title>
    <updated>2025-05-10T01:29:10Z</updated>
    <id>tag:github.com,2025-05-10:/element-plus/element-plus</id>
    <link href="https://github.com/element-plus/element-plus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üéâ A Vue.js 3 UI Library made by Element team&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300px&#34; src=&#34;https://user-images.githubusercontent.com/10731096/95823103-9ce15780-0d5f-11eb-8010-1bd1b5910d4f.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.org/package/element-plus&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/element-plus.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/element-plus/element-plus&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/node-%20%3E%3D%2018-47c219&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://npmcharts.com/compare/element-plus?minimal=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/element-plus.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/element-plus/element-plus&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/element-plus/element-plus/branch/dev/graph/badge.svg?token=BKSBO2GLZI&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Element Plus - A Vue.js 3 UI library&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üí™ Vue 3 Composition API&lt;/li&gt; &#xA; &lt;li&gt;üî• Written in TypeScript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Alright, for you to get started if you are looking for making Element Plus better you should keep reading. For developers that uses Element Plus to develop your website you should go ahead visit &lt;a href=&#34;https://element-plus.org/&#34;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‰∏≠ÂõΩÂ§ßÈôÜ&lt;a href=&#34;https://cn.element-plus.org/zh-CN/&#34;&gt;Âä†ÈÄüÈïúÂÉèÁ´ôÁÇπ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Breaking change list&lt;/h2&gt; &#xA;&lt;p&gt;The first stable release of Element Plus suitable for use in production was released on February 07, 2022. The APIs is stable right now, and here&#39;s also a full list about how to get upgraded from &lt;a href=&#34;https://element.eleme.io&#34;&gt;Element UI&lt;/a&gt; to Element Plus.&lt;/p&gt; &#xA;&lt;p&gt;You can find the breaking change list here: &lt;a href=&#34;https://github.com/element-plus/element-plus/discussions/5658&#34;&gt;Breaking Change List&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Migration Tool &lt;span&gt;üõ†&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We have made a migration tool for you to migrate your project from &lt;a href=&#34;https://element.eleme.io&#34;&gt;Element UI&lt;/a&gt; to Element Plus.&lt;/p&gt; &#xA;&lt;p&gt;You can find the &lt;a href=&#34;https://github.com/thx/gogocode/tree/main/packages/gogocode-plugin-element&#34;&gt;gogo code migration tool&lt;/a&gt; here.&lt;/p&gt; &#xA;&lt;p&gt;We have tested this on &lt;a href=&#34;https://github.com/PanJiaChen/vue-element-admin&#34;&gt;Vue Element Admin&lt;/a&gt;. You can find the transpiled code &lt;a href=&#34;https://github.com/gogocodeio/vue-element-admin&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Playground&lt;/h3&gt; &#xA;&lt;p&gt;You can also try Element Plus out with the components built-in playground.&lt;/p&gt; &#xA;&lt;h4&gt;Try it with our built-in playground&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://element-plus.run/&#34;&gt;Playground&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Try it with code sandbox&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/s/element-plus-demo-dxtcr&#34;&gt;&lt;img src=&#34;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&#34; alt=&#34;Edit element-plus&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Special thanks to the generous sponsorship by:&lt;/b&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Platinum Sponsors&lt;/b&gt; &lt;/p&gt; &#xA;&lt;table align=&#34;center&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://melecode.com/&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;150px&#34; src=&#34;https://github.com/element-plus/element-plus/assets/82012629/9ca4269c-7545-4463-9bdc-8e5a1fbd0b08&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://www.jnpfsoft.com/index.html?from=elementUI&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;150px&#34; src=&#34;https://github.com/element-plus/element-plus/assets/17680888/6a044d82-c393-48ab-90b8-de0d3aad1624&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://vue.misboot.com/#/login?from=element-plus&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;150px&#34; src=&#34;https://github.com/user-attachments/assets/ade8e7e6-f9a4-45d5-9006-44b548599a8d&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;http://github.crmeb.net/u/Element?from=element-plus&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;150px&#34; src=&#34;https://github.com/user-attachments/assets/18079452-986c-4c6e-84ec-fb6175c26567&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Gold Sponsors&lt;/b&gt; &lt;/p&gt; &#xA;&lt;table align=&#34;center&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://doc.buildadmin.com/?from=element-plus&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;130px&#34; src=&#34;https://user-images.githubusercontent.com/17680888/173179536-30e35fd1-cd5a-482a-bc41-9d5f0aa66fd4.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://fantastic-admin.github.io/?from=element-plus&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;130px&#34; src=&#34;https://github.com/user-attachments/assets/0dbd9c02-d132-4c9e-a162-2b5a8728fc7e&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34;&gt; &lt;a href=&#34;https://bit.dev/?from=element-ui&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;130px&#34; src=&#34;https://user-images.githubusercontent.com/10095631/41342907-e44e7196-6f2f-11e8-92f2-47702dc8f059.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Element Plus is translated to multiple languages, you can click the badge to help up update the translation or apply to become a proofreader &lt;a href=&#34;https://crowdin.com/project/element-plus&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/element-plus/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For now we are only showing English and Chinese for resource reasons, but we are looking forward to translate it into more languages, please go to the link above and leave a message if you want to help translating Element Plus into your desired language.&lt;/p&gt; &#xA;&lt;h3&gt;How to help translating&lt;/h3&gt; &#xA;&lt;p&gt;See how to help translating in &lt;a href=&#34;https://element-plus.org/en-US/guide/translation.html&#34;&gt;Translating Element Plus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Stay tuned &lt;span&gt;üëÄ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.com/invite/gXK9XNzW3X&#34;&gt;Discord&lt;/a&gt; to start communicating with everybody.&lt;/p&gt; &#xA;&lt;h2&gt;This thing is broken, I should help improve it!&lt;/h2&gt; &#xA;&lt;p&gt;Awesommmmmmee. Everything you need is down below. You can also refer to &lt;a href=&#34;https://github.com/element-plus/element-plus/raw/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href=&#34;https://github.com/element-plus/element-plus/raw/dev/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; where you&#39;ll find the same information listed below.&lt;/p&gt; &#xA;&lt;h2&gt;I would like to become a part of the development team!&lt;/h2&gt; &#xA;&lt;p&gt;Welcome &lt;span&gt;ü§©&lt;/span&gt;! We are looking for talented developers to join us and making Element Plus better! If you care to join the development team, please reach out to us, you are more than welcomed to join us! &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are now lacking of experts of &lt;code&gt;Testing&lt;/code&gt;, &lt;code&gt;GitHub Actions&lt;/code&gt;, &lt;code&gt;PM&lt;/code&gt;, if you do feel like you can and willing to help us, please do reach out to us. &lt;span&gt;üôè&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt; &#xA;&lt;p&gt;And thank you to all our backers! üôè&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/element-plus/element-plus/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=element-plus/element-plus&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Element Plus is open source software licensed as &lt;a href=&#34;https://github.com/element-plus/element-plus/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Lightricks/ComfyUI-LTXVideo</title>
    <updated>2025-05-10T01:29:10Z</updated>
    <id>tag:github.com,2025-05-10:/Lightricks/ComfyUI-LTXVideo</id>
    <link href="https://github.com/Lightricks/ComfyUI-LTXVideo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LTX-Video Support for ComfyUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComfyUI-LTXVideo&lt;/h1&gt; &#xA;&lt;p&gt;ComfyUI-LTXVideo is a collection of custom nodes for ComfyUI, designed to provide useful tools for working with the LTXV model. The model itself is supported in the core ComfyUI &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI/tree/master/comfy/ldm/lightricks&#34;&gt;code&lt;/a&gt;. The main LTXVideo repository can be found &lt;a href=&#34;https://github.com/Lightricks/LTX-Video&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;‚≠ê 06.05.2025 ‚Äì LTXVideo 13B 0.9.7 Release ‚≠ê&lt;/h1&gt; &#xA;&lt;h3&gt;üöÄ What&#39;s New in LTXVideo 13B 0.9.7&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LTXV 13B 0.9.7&lt;/strong&gt; Delivers cinematic-quality videos at unprecedented speed.&lt;br&gt; üëâ &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/blob/main/ltxv-13b-0.9.7-dev.safetensors&#34;&gt;Download here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LTXV 13B Quantized 0.9.7&lt;/strong&gt; Offers reduced memory requirements and even faster inference speeds. Ideal for consumer-grade GPUs (e.g., NVIDIA 4090, 5090). Delivers outstanding quality with improved performance.&lt;br&gt; &lt;em&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/em&gt; In order to run the quantized version please install &lt;a href=&#34;https://github.com/Lightricks/LTXVideo-Q8-Kernels&#34;&gt;LTXVideo-Q8-Kernels&lt;/a&gt; package and use dedicated flow below. Loading the model in Comfy with LoadCheckpoint node won&#39;t work. &lt;br&gt; üëâ &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/blob/main/ltxv-13b-0.9.7-dev-fp8.safetensors&#34;&gt;Download here&lt;/a&gt;&lt;br&gt; üß© Example ComfyUI flow available in the &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/#example-workflows&#34;&gt;Example Workflows&lt;/a&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Latent Upscaling Models&lt;/strong&gt; Enables inference across multiple scales by upscaling latent tensors without decoding/encoding. Multiscale inference delivers high-quality results in a fraction of the time compared to similar models.&lt;br&gt; &lt;em&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/em&gt; Make sure you put the models below in &lt;strong&gt;models/upscale_models&lt;/strong&gt; folder.&lt;br&gt; üëâ Spatial upscaling: &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/blob/main/ltxv-spatial-upscaler-0.9.7.safetensors&#34;&gt;Download here&lt;/a&gt;.&lt;br&gt; üëâ Temporal upscaling: &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/blob/main/ltxv-temporal-upscaler-0.9.7.safetensors&#34;&gt;Download here&lt;/a&gt;.&lt;br&gt; üß© Example ComfyUI flow available in the &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/#example-workflows&#34;&gt;Example Workflows&lt;/a&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Technical Updates&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;New simplified flows and nodes&lt;/strong&gt;&lt;/em&gt;&lt;br&gt; 1.1. Simplified image to video: &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-base.json&#34;&gt;Download here&lt;/a&gt;.&lt;br&gt; 1.2. Simplified image to video with extension: &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-extend.json&#34;&gt;Download here&lt;/a&gt;.&lt;br&gt; 1.3. Simplified image to video with keyframes: &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-keyframes.json&#34;&gt;Download here&lt;/a&gt;.&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;17.04.2025 ‚≠ê LTXVideo 0.9.6 Release ‚≠ê&lt;/h1&gt; &#xA;&lt;h3&gt;LTXVideo 0.9.6 introduces:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;LTXV 0.9.6 ‚Äì higher quality, faster, great for final output. Download from &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/resolve/main/ltxv-2b-0.9.6-dev-04-25.safetensors&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;LTXV 0.9.6 Distilled ‚Äì our fastest model yet (only 8 steps for generation), lighter, great for rapid iteration. Download from &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/resolve/main/ltxv-2b-0.9.6-distilled-04-25.safetensors&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Technical Updates&lt;/h3&gt; &#xA;&lt;p&gt;We introduce the &lt;strong&gt;STGGuiderAdvanced&lt;/strong&gt; node, which applies different CFG and STG parameters at various diffusion steps. All flows have been updated to use this node and are designed to provide optimal parameters for the best quality. See the &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/#example-workflows&#34;&gt;Example Workflows&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h1&gt;5.03.2025 ‚≠ê LTXVideo 0.9.5 Release ‚≠ê&lt;/h1&gt; &#xA;&lt;h3&gt;LTXVideo 0.9.5 introduces:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Improved quality with reduced artifacts.&lt;/li&gt; &#xA; &lt;li&gt;Support for higher resolution and longer sequences.&lt;/li&gt; &#xA; &lt;li&gt;Frame and sequence conditioning (beyond the first frame).&lt;/li&gt; &#xA; &lt;li&gt;Enhanced prompt understanding.&lt;/li&gt; &#xA; &lt;li&gt;Commercial license availability.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Technical Updates&lt;/h3&gt; &#xA;&lt;p&gt;Since LTXVideo is now fully supported in the ComfyUI core, we have removed the custom model implementation. Instead, we provide updated workflows to showcase the new features:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Frame Conditioning&lt;/strong&gt; ‚Äì Enables interpolation between given frames.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sequence Conditioning&lt;/strong&gt; ‚Äì Allows motion interpolation from a given frame sequence, enabling video extension from the beginning, end, or middle of the original video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt Enhancer&lt;/strong&gt; ‚Äì A new node that helps generate prompts optimized for the best model performance. See the &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/#example-workflows&#34;&gt;Example Workflows&lt;/a&gt; section for more details.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;LTXTricks Update&lt;/h3&gt; &#xA;&lt;p&gt;The LTXTricks code has been integrated into this repository (in the &lt;code&gt;/tricks&lt;/code&gt; folder) and will be maintained here. The original &lt;a href=&#34;https://github.com/logtd/ComfyUI-LTXTricks&#34;&gt;repo&lt;/a&gt; is no longer maintained, but all existing workflows should continue to function as expected.&lt;/p&gt; &#xA;&lt;h2&gt;22.12.2024&lt;/h2&gt; &#xA;&lt;p&gt;Fixed a bug which caused the model to produce artifacts on short negative prompts when using a native CLIP Loader node.&lt;/p&gt; &#xA;&lt;h2&gt;19.12.2024 ‚≠ê Update ‚≠ê&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Improved model - removes &#34;strobing texture&#34; artifacts and generates better motion. Download from &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/resolve/main/ltx-video-2b-v0.9.1.safetensors&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;STG support&lt;/li&gt; &#xA; &lt;li&gt;Integrated image degradation system for improved motion generation.&lt;/li&gt; &#xA; &lt;li&gt;Additional initial latent optional input to chain latents for high res generation.&lt;/li&gt; &#xA; &lt;li&gt;Image captioning in image to video &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxvideo-i2v.json&#34;&gt;flow&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Installation via &lt;a href=&#34;https://github.com/ltdrdata/ComfyUI-Manager&#34;&gt;ComfyUI-Manager&lt;/a&gt; is preferred. Simply search for &lt;code&gt;ComfyUI-LTXVideo&lt;/code&gt; in the list of nodes and follow installation instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install ComfyUI&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository to &lt;code&gt;custom-nodes&lt;/code&gt; folder in your ComfyUI installation directory.&lt;/li&gt; &#xA; &lt;li&gt;Install the required packages:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd custom_nodes/ComfyUI-LTXVideo &amp;amp;&amp;amp; pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For portable ComfyUI installations, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.\python_embeded\python.exe -m pip install -r .\ComfyUI\custom_nodes\ComfyUI-LTXVideo\requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Models&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://huggingface.co/Lightricks/LTX-Video/blob/main/ltx-video-2b-v0.9.1.safetensors&#34;&gt;ltx-video-2b-v0.9.1.safetensors&lt;/a&gt; from Hugging Face and place it under &lt;code&gt;models/checkpoints&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install one of the t5 text encoders, for example &lt;a href=&#34;https://huggingface.co/mcmonkey/google_t5-v1_1-xxl_encoderonly/tree/main&#34;&gt;google_t5-v1_1-xxl_encoderonly&lt;/a&gt;. You can install it using ComfyUI Model Manager.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example workflows&lt;/h2&gt; &#xA;&lt;p&gt;Note that to run the example workflows, you need to have some additional custom nodes, like &lt;a href=&#34;https://github.com/kosinkadink/ComfyUI-VideoHelperSuite&#34;&gt;ComfyUI-VideoHelperSuite&lt;/a&gt; and others, installed. You can do it by pressing &#34;Install Missing Custom Nodes&#34; button in ComfyUI Manager.&lt;/p&gt; &#xA;&lt;h3&gt;Easy to use multi scale generation workflows&lt;/h3&gt; &#xA;&lt;p&gt;üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-base.json&#34;&gt;Image to video&lt;/a&gt;&lt;br&gt; üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-keyframes.json&#34;&gt;Image to video with keyframes&lt;/a&gt;&lt;br&gt; üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-extend.json&#34;&gt;Image to video with duration extension&lt;/a&gt;&lt;br&gt; üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/ltxv-13b-i2v-base-fp8.json&#34;&gt;Image to video 8b quantized&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Inversion&lt;/h3&gt; &#xA;&lt;h4&gt;Flow Edit&lt;/h4&gt; &#xA;&lt;p&gt;üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/tricks/ltxvideo-flow-edit.json&#34;&gt;Download workflow&lt;/a&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/tricks/ltxvideo-flow-edit.png&#34; alt=&#34;workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;RF Edit&lt;/h4&gt; &#xA;&lt;p&gt;üß© &lt;a href=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/tricks/ltxvideo-rf-edit.json&#34;&gt;Download workflow&lt;/a&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Lightricks/ComfyUI-LTXVideo/master/example_workflows/tricks/ltxvideo-rf-edit.png&#34; alt=&#34;workflow&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mason-org/mason.nvim</title>
    <updated>2025-05-10T01:29:10Z</updated>
    <id>tag:github.com,2025-05-10:/mason-org/mason.nvim</id>
    <link href="https://github.com/mason-org/mason.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Portable package manager for Neovim that runs everywhere Neovim runs. Easily install and manage LSP servers, DAP servers, linters, and formatters.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Linux-%23.svg?logo=linux&amp;amp;color=FCC624&amp;amp;logoColor=black&#34; alt=&#34;Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/macOS-%23.svg?logo=apple&amp;amp;color=000000&amp;amp;logoColor=white&#34; alt=&#34;macOS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-%23.svg?logo=windows&amp;amp;color=0078D6&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt; &lt;a href=&#34;https://github.com/mason-org/mason.nvim/actions?query=workflow%3ATests+branch%3Amain+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/mason-org/mason.nvim/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;GitHub CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/williamboman&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/williamboman&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/177613416-0c0354d2-f431-40d8-87f0-21310f0bba0e.png&#34; alt=&#34;mason.nvim&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Portable package manager for Neovim that runs everywhere Neovim runs.&lt;br&gt; Easily install and manage LSP servers, DAP servers, linters, and formatters.&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;code&gt;:help mason.nvim&lt;/code&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;sup&gt;Latest version: v2.0.0&lt;/sup&gt; &#xA; &lt;!-- x-release-please-version --&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#registries&#34;&gt;Registries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L11&#34;&gt;&lt;code&gt;:h mason-introduction&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; is a Neovim plugin that allows you to easily manage external editor tooling such as LSP servers, DAP servers, linters, and formatters through a single interface. It runs everywhere Neovim runs (across Linux, macOS, Windows, etc.), with only a small set of &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#requirements&#34;&gt;external requirements&lt;/a&gt; needed.&lt;/p&gt; &#xA;&lt;p&gt;Packages are installed in Neovim&#39;s data directory (&lt;a href=&#34;https://neovim.io/doc/user/starting.html#standard-path&#34;&gt;&lt;code&gt;:h standard-path&lt;/code&gt;&lt;/a&gt;) by default. Executables are linked to a single &lt;code&gt;bin/&lt;/code&gt; directory, which &lt;code&gt;mason.nvim&lt;/code&gt; will add to Neovim&#39;s PATH during setup, allowing seamless access from Neovim builtins (shell, terminal, etc.) as well as other 3rd party plugins.&lt;/p&gt; &#xA;&lt;p&gt;For a list of all available packages, see &lt;a href=&#34;https://mason-registry.dev/registry/list&#34;&gt;https://mason-registry.dev/registry/list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Main window&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617680-d62caf26-f253-4ace-ab57-4b590595adca.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/177617684-6bb4c13f-1235-4ac9-829e-120b06f7437b.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Language filter&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617688-8f9ba225-00c8-495c-9c4c-b74240d6f280.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;LSP server configuration schema&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617692-02c6ddde-a97e-42b4-bca4-4f4caf45d569.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Checking for new versions&#34; src=&#34;https://user-images.githubusercontent.com/6705160/180648183-69077d10-8795-4da6-ba4d-57ecf0cb25c9.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Help window&#34; src=&#34;https://user-images.githubusercontent.com/6705160/180648292-136a0888-0fb6-4226-aa29-53bd3ffed400.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L50&#34;&gt;&lt;code&gt;:h mason-requirements&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; relaxes the minimum requirements by attempting multiple different utilities (for example, &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, and &lt;code&gt;Invoke-WebRequest&lt;/code&gt; are all perfect substitutes). The &lt;em&gt;minimum&lt;/em&gt; recommended requirements are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;neovim &lt;code&gt;&amp;gt;= 0.10.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;For Unix systems: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;curl(1)&lt;/code&gt; or &lt;code&gt;GNU wget(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;unzip(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;GNU tar (&lt;code&gt;tar(1)&lt;/code&gt; or &lt;code&gt;gtar(1)&lt;/code&gt; depending on platform)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gzip(1)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For Windows systems: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;pwsh or powershell&lt;/li&gt; &#xA;   &lt;li&gt;git&lt;/li&gt; &#xA;   &lt;li&gt;GNU tar&lt;/li&gt; &#xA;   &lt;li&gt;One of the following: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7zip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://peazip.github.io/&#34;&gt;peazip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/mholt/archiver&#34;&gt;archiver&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.winzip.com/&#34;&gt;winzip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.win-rar.com/&#34;&gt;WinRAR&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;mason.nvim&lt;/code&gt; will regularly shell out to external package managers, such as &lt;code&gt;cargo&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;. Depending on your personal usage, some of these will also need to be installed. Refer to &lt;code&gt;:checkhealth mason&lt;/code&gt; for a full list.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    &#34;mason-org/mason.nvim&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;mason-org/mason.nvim&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;mason-org/mason.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L67&#34;&gt;&lt;code&gt;:h mason-quickstart&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; is optimized to load as little as possible during setup. Lazy-loading the plugin, or somehow deferring the setup, is not recommended.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt; section for information about which settings are available.&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/mason-org/mason.nvim/wiki/Extensions&#34;&gt;Wiki&lt;/a&gt; for a list of 3rd party extensions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mason-org/mason-lspconfig.nvim&#34;&gt;&lt;code&gt;mason-lspconfig.nvim&lt;/code&gt;&lt;/a&gt; - recommended for usage with &lt;code&gt;lspconfig&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Commands&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L178&#34;&gt;&lt;code&gt;:h mason-commands&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Mason&lt;/code&gt; - opens a graphical status window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUpdate&lt;/code&gt; - updates all managed registries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonInstall &amp;lt;package&amp;gt; ...&lt;/code&gt; - installs/re-installs the provided packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUninstall &amp;lt;package&amp;gt; ...&lt;/code&gt; - uninstalls the provided packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUninstallAll&lt;/code&gt; - uninstalls all packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonLog&lt;/code&gt; - opens the &lt;code&gt;mason.nvim&lt;/code&gt; log file in a new tab window&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Registries&lt;/h1&gt; &#xA;&lt;p&gt;Mason&#39;s core package registry is located at &lt;a href=&#34;https://github.com/mason-org/mason-registry&#34;&gt;mason-org/mason-registry&lt;/a&gt;. Before any packages can be used, the registry needs to be downloaded. This is done automatically for you when using the different Mason commands (e.g. &lt;code&gt;:MasonInstall&lt;/code&gt;), but can also be done manually by using the &lt;code&gt;:MasonUpdate&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re utilizing Mason&#39;s Lua APIs to access packages, it&#39;s recommended to use the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L549&#34;&gt;&lt;code&gt;:h mason-registry.refresh()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L542&#34;&gt;&lt;code&gt;:h mason-registry.update()&lt;/code&gt;&lt;/a&gt; functions to ensure you have the latest package information before retrieving packages.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L238&#34;&gt;&lt;code&gt;:h mason-settings&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You may optionally configure certain behavior of &lt;code&gt;mason.nvim&lt;/code&gt; when calling the &lt;code&gt;.setup()&lt;/code&gt; function. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#default-configuration&#34;&gt;default configuration&lt;/a&gt; for a list of all available settings.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason&#34;).setup({&#xA;    ui = {&#xA;        icons = {&#xA;            package_installed = &#34;‚úì&#34;,&#xA;            package_pending = &#34;‚ûú&#34;,&#xA;            package_uninstalled = &#34;‚úó&#34;&#xA;        }&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@class MasonSettings&#xA;local DEFAULT_SETTINGS = {&#xA;    ---@since 1.0.0&#xA;    -- The directory in which to install packages.&#xA;    install_root_dir = path.concat { vim.fn.stdpath &#34;data&#34;, &#34;mason&#34; },&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Where Mason should put its bin location in your PATH. Can be one of:&#xA;    -- - &#34;prepend&#34; (default, Mason&#39;s bin location is put first in PATH)&#xA;    -- - &#34;append&#34; (Mason&#39;s bin location is put at the end of PATH)&#xA;    -- - &#34;skip&#34; (doesn&#39;t modify PATH)&#xA;    ---@type &#39;&#34;prepend&#34;&#39; | &#39;&#34;append&#34;&#39; | &#39;&#34;skip&#34;&#39;&#xA;    PATH = &#34;prepend&#34;,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Controls to which degree logs are written to the log file. It&#39;s useful to set this to vim.log.levels.DEBUG when&#xA;    -- debugging issues with package installations.&#xA;    log_level = vim.log.levels.INFO,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Limit for the maximum amount of packages to be installed at the same time. Once this limit is reached, any further&#xA;    -- packages that are requested to be installed will be put in a queue.&#xA;    max_concurrent_installers = 4,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- [Advanced setting]&#xA;    -- The registries to source packages from. Accepts multiple entries. Should a package with the same name exist in&#xA;    -- multiple registries, the registry listed first will be used.&#xA;    registries = {&#xA;        &#34;github:mason-org/mason-registry&#34;,&#xA;    },&#xA;&#xA;    ---@since 1.0.0&#xA;    -- The provider implementations to use for resolving supplementary package metadata (e.g., all available versions).&#xA;    -- Accepts multiple entries, where later entries will be used as fallback should prior providers fail.&#xA;    -- Builtin providers are:&#xA;    --   - mason.providers.registry-api  - uses the https://api.mason-registry.dev API&#xA;    --   - mason.providers.client        - uses only client-side tooling to resolve metadata&#xA;    providers = {&#xA;        &#34;mason.providers.registry-api&#34;,&#xA;        &#34;mason.providers.client&#34;,&#xA;    },&#xA;&#xA;    github = {&#xA;        ---@since 1.0.0&#xA;        -- The template URL to use when downloading assets from GitHub.&#xA;        -- The placeholders are the following (in order):&#xA;        -- 1. The repository (e.g. &#34;rust-lang/rust-analyzer&#34;)&#xA;        -- 2. The release version (e.g. &#34;v0.3.0&#34;)&#xA;        -- 3. The asset name (e.g. &#34;rust-analyzer-v0.3.0-x86_64-unknown-linux-gnu.tar.gz&#34;)&#xA;        download_url_template = &#34;https://github.com/%s/releases/download/%s/%s&#34;,&#xA;    },&#xA;&#xA;    pip = {&#xA;        ---@since 1.0.0&#xA;        -- Whether to upgrade pip to the latest version in the virtual environment before installing packages.&#xA;        upgrade_pip = false,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- These args will be added to `pip install` calls. Note that setting extra args might impact intended behavior&#xA;        -- and is not recommended.&#xA;        --&#xA;        -- Example: { &#34;--proxy&#34;, &#34;https://proxyserver&#34; }&#xA;        install_args = {},&#xA;    },&#xA;&#xA;    ui = {&#xA;        ---@since 1.0.0&#xA;        -- Whether to automatically check for new versions when opening the :Mason window.&#xA;        check_outdated_packages_on_open = true,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- The border to use for the UI window. Accepts same border values as |nvim_open_win()|.&#xA;        -- Defaults to `:h &#39;winborder&#39;` if nil.&#xA;        border = nil,&#xA;&#xA;        ---@since 1.11.0&#xA;        -- The backdrop opacity. 0 is fully opaque, 100 is fully transparent.&#xA;        backdrop = 60,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- Width of the window. Accepts:&#xA;        -- - Integer greater than 1 for fixed width.&#xA;        -- - Float in the range of 0-1 for a percentage of screen width.&#xA;        width = 0.8,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- Height of the window. Accepts:&#xA;        -- - Integer greater than 1 for fixed height.&#xA;        -- - Float in the range of 0-1 for a percentage of screen height.&#xA;        height = 0.9,&#xA;&#xA;        icons = {&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for installed packages.&#xA;            package_installed = &#34;‚óç&#34;,&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for packages that are installing, or queued for installation.&#xA;            package_pending = &#34;‚óç&#34;,&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for packages that are not installed.&#xA;            package_uninstalled = &#34;‚óç&#34;,&#xA;        },&#xA;&#xA;        keymaps = {&#xA;            ---@since 1.0.0&#xA;            -- Keymap to expand a package&#xA;            toggle_package_expand = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to install the package under the current cursor position&#xA;            install_package = &#34;i&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to reinstall/update the package under the current cursor position&#xA;            update_package = &#34;u&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to check for new version for the package under the current cursor position&#xA;            check_package_version = &#34;c&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to update all installed packages&#xA;            update_all_packages = &#34;U&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to check which installed packages are outdated&#xA;            check_outdated_packages = &#34;C&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to uninstall a package&#xA;            uninstall_package = &#34;X&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to cancel a package installation&#xA;            cancel_installation = &#34;&amp;lt;C-c&amp;gt;&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to apply language filter&#xA;            apply_language_filter = &#34;&amp;lt;C-f&amp;gt;&#34;,&#xA;            ---@since 1.1.0&#xA;            -- Keymap to toggle viewing package installation log&#xA;            toggle_package_install_log = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;            ---@since 1.8.0&#xA;            -- Keymap to toggle the help view&#xA;            toggle_help = &#34;g?&#34;,&#xA;        },&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;sup&gt; üëã didn&#39;t find what you were looking for? Try looking in the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt&#34;&gt;help docs&lt;/a&gt; &lt;code&gt;:help mason.nvim&lt;/code&gt;! &lt;/sup&gt;</summary>
  </entry>
</feed>