<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-22T01:23:24Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>opentofu/opentofu</title>
    <updated>2023-09-22T01:23:24Z</updated>
    <id>tag:github.com,2023-09-22:/opentofu/opentofu</id>
    <link href="https://github.com/opentofu/opentofu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenTofu lets you declaratively manage your cloud infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTofu&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manifesto: &lt;a href=&#34;https://opentofu.org/manifesto&#34;&gt;https://opentofu.org/manifesto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;About the OpenTofu fork: &lt;a href=&#34;https://opentofu.org/fork&#34;&gt;https://opentofu.org/fork&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/opentfcommunity/shared_invite/zt-237chyryd-mFULiefrbYGMYQoG72BUpQ&#34;&gt;Join our Slack community!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-dark.svg#gh-dark-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-light.svg#gh-light-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Note: This repository is currently a work in progress while we&#39;re preparing it for the first alpha release and fine-tuning the community contribution process. Please read the &lt;a href=&#34;https://opentofu.org/fork&#34;&gt;announcement post&lt;/a&gt; for important context and the &lt;a href=&#34;https://raw.githubusercontent.com/opentofu/opentofu/main/CONTRIBUTING.md&#34;&gt;contributing docs&lt;/a&gt; for instructions on how to contribute. Additionally, please be mindful that building this repository in its current state and running it might put you in violation of the &lt;a href=&#34;https://web.archive.org/web/https://registry.terraform.io/terms&#34;&gt;Terraform Registry ToS&lt;/a&gt;, if that&#39;s where you fetch your providers or modules from.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenTofu is an OSS tool for building, changing, and versioning infrastructure safely and efficiently. OpenTofu can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; &#xA;&lt;p&gt;The key features of OpenTofu are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: OpenTofu has a &#34;planning&#34; step where it generates an execution plan. The execution plan shows what OpenTofu will do when you call apply. This lets you avoid any surprises when OpenTofu manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: OpenTofu builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, OpenTofu builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what OpenTofu will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing OpenTofu&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains OpenTofu Core, which includes the command line interface and the main graph engine.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To learn more about compiling OpenTofu and contributing suggested changes, refer to &lt;a href=&#34;https://raw.githubusercontent.com/opentofu/opentofu/main/CONTRIBUTING.md&#34;&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To submit bug reports or enhancement requests, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/opentofu/opentofu/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; as well.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opentofu/opentofu/raw/main/LICENSE&#34;&gt;Mozilla Public License v2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ProjectUnifree/unifree</title>
    <updated>2023-09-22T01:23:24Z</updated>
    <id>tag:github.com,2023-09-22:/ProjectUnifree/unifree</id>
    <link href="https://github.com/ProjectUnifree/unifree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Migrate Unity projects to other engines!&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;span&gt;⚠&lt;/span&gt; This is an early prototype! &lt;span&gt;⚠&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This project is being actively developed and it is not stable yet! It is currently recommended you either wait, or migrate manually.&lt;/p&gt; &#xA;&lt;p&gt;You can use this tool to help aid migration by providing you with a base, but you &lt;em&gt;will&lt;/em&gt; have to modify a lot of code yourself. Please do not under any circumstance expect help regarding this tool from any Godot or Unreal Engine Discord server &lt;a href=&#34;https://discord.gg/Ee5wJ4JWBQ&#34;&gt;&lt;em&gt;(join our server instead!)&lt;/em&gt;&lt;/a&gt; And please don&#39;t correlate any bad experience you have while using this tool to &lt;em&gt;&#34;Godot/Unreal sucking and being broken&#34;&lt;/em&gt;, both engines are very stable and game-ready; This is not an official project for either of those engines, this is a community effort.&lt;/p&gt; &#xA;&lt;h4&gt;Godot Engine&lt;/h4&gt; &#xA;&lt;p&gt;If you wish to migrate manually to Godot: &lt;a href=&#34;https://www.youtube.com/results?search_query=Migrate+from+Unity+to+Godot&#34;&gt;YouTube migration guides&lt;/a&gt;, &lt;a href=&#34;https://docs.godotengine.org/en/stable/&#34;&gt;Godot docs&lt;/a&gt; &lt;em&gt;(very helpful!)&lt;/em&gt;, &lt;a href=&#34;https://discord.gg/4JBkykG&#34;&gt;Discord server&lt;/a&gt; &lt;em&gt;(for any burning questions you can&#39;t find answers to online)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;These other tools would also be very helpful!:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/UnityGLTF&#34;&gt;UnityGLTF &lt;em&gt;(Unity 3D models to Godot models)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/V-Sekai/unidot_importer&#34;&gt;Unidot Importer&lt;/a&gt; and &lt;a href=&#34;https://github.com/barcoderdev/unitypackage_godot&#34;&gt;UnityPackage Godot&lt;/a&gt; &lt;em&gt;(Unity assets to Godot assets)&lt;/em&gt; (some of these projects may be merged into Unifree, but are not currently)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Unreal Engine&lt;/h4&gt; &#xA;&lt;p&gt;If you wish to migrate manually to Unreal Engine: &lt;a href=&#34;https://www.youtube.com/results?search_query=Unreal+Engine+basics+%22(for+Unity+developers)%22&#34;&gt;helpful UE tutorials&lt;/a&gt;, &lt;a href=&#34;https://docs.unrealengine.com/5.3/en-US/unreal-engine-for-unity-developers/&#34;&gt;Unreal Engine docs&lt;/a&gt; &lt;em&gt;(very helpful!)&lt;/em&gt;, &lt;a href=&#34;https://discord.com/invite/unreal-slackers&#34;&gt;Semi-official Discord server&lt;/a&gt; &lt;em&gt;(for any burning questions you can&#39;t find answers to online)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Other engines (Cocos, Stride, etc)&lt;/h4&gt; &#xA;&lt;p&gt;Search up a tutorial on YouTube, view the docs, and join your engine&#39;s Discord server or subreddit for any questions! These engines are not currently supported by this tool, as we have a lot more to work on. But support may be added sometime in the future. We are currently focusing on Godot, as well as Unreal.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scan source project and detect files eligible for migration&lt;/li&gt; &#xA; &lt;li&gt;Use ChatGPT to translate &lt;code&gt;.cs&lt;/code&gt; files into Godot scripts and Unreal 3D classes. Here is how sample translation looks:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  Unity                                                  | Godot                                   &#xA;  ------------------------------------------------------ | ------------------------------------------------------&#xA;  public class Player : MonoBehaviour                    | class_name Player:&#xA;  {                                                      | &#xA;    private SpriteRenderer spriteRenderer;               | var sprite_renderer: SpriteRenderer&#xA;    public Sprite[] sprites;                             | var sprites: Array&#xA;    private int spriteIndex;                             | var sprite_index: int&#xA;                                                         | &#xA;    public float strength = 5f;                          | var strength: float = 5.0&#xA;                                                         | &#xA;    private Vector3 direction;                           | var direction: Vector3&#xA;                                                         | &#xA;    private void Awake()                                 | func _ready():&#xA;    {                                                    |   sprite_renderer = get_node(&#34;SpriteRenderer&#34;)&#xA;      spriteRenderer = GetComponent&amp;lt;SpriteRenderer&amp;gt;();   | &#xA;    }                                                    | func _on_start():&#xA;                                                         |   call_deferred(&#34;animate_sprite&#34;)&#xA;    private void Start()                                 |   set_process(true)&#xA;    {                                                    | &#xA;      InvokeRepeating(                                   | func _on_enable():&#xA;          nameof(AnimateSprite),                         |   var position = transform.position&#xA;          0.15f,                                         |   position.y = 0.0&#xA;          0.15f                                          |   transform.position = position&#xA;      );                                                 |   direction = Vector3.ZERO&#xA;    }                                                    | class_name Player:&#xA;                                                         | &#xA;    private void OnEnable()                              | var sprite_renderer: SpriteRenderer&#xA;    {                                                    | var sprites: Array&#xA;      Vector3 position = transform.position;             | var sprite_index: int&#xA;      position.y = 0f;                                   | &#xA;      transform.position = position;                     | var strength: float = 5.0&#xA;      direction = Vector3.zero;                          | &#xA;    }                                                    | var direction: Vector3&#xA;  }                                                      |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation and Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;launch.sh&lt;/code&gt; (or &lt;code&gt;launch.bat&lt;/code&gt; on windows) is the main script that downloads Unifree code, installs a python virtual environment, installs dependencies and launches the main program (&lt;code&gt;unifree/free.py&lt;/code&gt;). It accepts following parameters:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;your_openai_api_key&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://help.openai.com/en/articles/4936850-where-do-i-find-my-secret-api-key&#34;&gt;How to get an OpenAI API Key&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;config_name&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Name of the migration. Currently supported: &lt;code&gt;godot&lt;/code&gt;, &lt;code&gt;unreal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;source_project_dir&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Absolute path of the project to migrate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;destination_project_dir&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Absolute path of where results should be written&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install git python3&#xA;curl -0 https://raw.githubusercontent.com/ProjectUnifree/unifree/main/launch.sh | bash&#xA;OPENAI_API_KEY=&amp;lt;your_openai_api_key&amp;gt; ./launch.sh &amp;lt;config_name&amp;gt; &amp;lt;source_project_dir&amp;gt; &amp;lt;destination_project_dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Install Git for Windows &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;https://git-scm.com/download/win&lt;/a&gt;, then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ProjectUnifree/unifree&#xA;cd unifree&#xA;launch.bat &amp;lt;your_openai_api_key&amp;gt; &amp;lt;config_name&amp;gt; &amp;lt;source_project_dir&amp;gt; &amp;lt;destination_project_dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu/Debian&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install git python3 python3-venv&#xA;curl -0 https://raw.githubusercontent.com/ProjectUnifree/unifree/main/launch.sh | bash&#xA;OPENAI_API_KEY=&amp;lt;your_openai_api_key&amp;gt; ./launch.sh &amp;lt;config_name&amp;gt; &amp;lt;source_project_dir&amp;gt; &amp;lt;destination_project_dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Call To Action&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;👋&lt;/span&gt; Join our &lt;a href=&#34;https://discord.gg/Ee5wJ4JWBQ&#34;&gt;Discord server&lt;/a&gt; for a live discussion!&lt;/p&gt; &#xA;&lt;p&gt;We are actively seeking contributors. If you are familiar with Unity, Godot, Cocos Creator or any other engines, help us!&lt;/p&gt; &#xA;&lt;p&gt;Here is what we need help with:&lt;/p&gt; &#xA;&lt;h4&gt;Asset Migration&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;❗&lt;/span&gt; &lt;span&gt;❗&lt;/span&gt; Migrate Unity assets to Godot&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;❗&lt;/span&gt; &lt;span&gt;❗&lt;/span&gt; Migrate Unity assets to Cocos Creator&lt;/li&gt; &#xA; &lt;li&gt;What other engines should be implemented?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source Migration&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Experiment with ChatGPT prompts for better code translation&lt;/li&gt; &#xA; &lt;li&gt;Add prompts/configs to migrate to Cocos Creator&lt;/li&gt; &#xA; &lt;li&gt;What other engines should be implemented?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Framework&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;❗&lt;/span&gt; Step-by-step console based migration wizard&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;❗&lt;/span&gt; More edge case handling&lt;/li&gt; &#xA; &lt;li&gt;Architecture review and improvements&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>daveshap/ACE_Framework</title>
    <updated>2023-09-22T01:23:24Z</updated>
    <id>tag:github.com,2023-09-22:/daveshap/ACE_Framework</id>
    <link href="https://github.com/daveshap/ACE_Framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Public repo for my latest and greatest cognitive architecture ACE (Autonomous Cognitive Entity) Framework&lt;/p&gt;&lt;hr&gt;&lt;div alt style=&#34;text-align: center; transform: scale(.5);&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/daveshap/ACE_Framework/main/images/banner.jpg&#34;&gt; &#xA;  &lt;img alt=&#34;tldraw&#34; src=&#34;https://raw.githubusercontent.com/daveshap/ACE_Framework/main/images/banner.jpg&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Intro to this Repo&lt;/h1&gt; &#xA;&lt;p&gt;This is the main public repo for the ACE (Autonomous Cognitive Entity) repository.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re looking for the main ACE Framework documentation, it is available here: &lt;a href=&#34;https://github.com/daveshap/ACE_Framework/raw/main/ACE_Framework.md&#34;&gt;https://github.com/daveshap/ACE_Framework/blob/main/ACE_Framework.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Participation&lt;/h2&gt; &#xA;&lt;p&gt;Please check out the following files and locations for more details about participation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Contributing: &lt;a href=&#34;https://github.com/daveshap/ACE_Framework/raw/main/contributing.md&#34;&gt;https://github.com/daveshap/ACE_Framework/blob/main/contributing.md&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This page will be updated with the best ways to contribute&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Agile: &lt;a href=&#34;https://github.com/daveshap/ACE_Framework/raw/main/agile.md&#34;&gt;https://github.com/daveshap/ACE_Framework/blob/main/agile.md&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is the overall roadmap and organizational document&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Discussions: &lt;a href=&#34;https://github.com/daveshap/ACE_Framework/discussions&#34;&gt;https://github.com/daveshap/ACE_Framework/discussions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Jump into the discussions!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;div alt style=&#34;text-align: center; transform: scale(.5);&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/daveshap/ACE_Framework/main/images/ACE%20Framework%20Overall%20Architecture.png&#34;&gt; &#xA;  &lt;img alt=&#34;tldraw&#34; src=&#34;https://raw.githubusercontent.com/daveshap/ACE_Framework/main/images/ACE%20Framework%20Overall%20Architecture.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;p&gt;There are many possible implementations of the ACE Framework. Rather than detail every possible permutation, here is a list of categories that we perceive as likely and viable.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Personal Assistant and/or Companion&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a self-contained version of ACE that is intended to interact with one user.&lt;/li&gt; &#xA;   &lt;li&gt;Think of Cortana from HALO, Samantha from HER, or Joi from Blade Runner 2049. (yes, we recognize these are all sexualized female avatars)&lt;/li&gt; &#xA;   &lt;li&gt;The idea would be to create something that is effectively a personal Executive Assistant that is able to coordinate, plan, research, and solve problems for you.&lt;/li&gt; &#xA;   &lt;li&gt;This could be deployed on mobile, smart home devices, laptops, or web sites.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Game World NPC&#39;s&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a kind of game character that has their own personality, motivations, agenda, and objectives. Furthermore, they would have their own unique memories.&lt;/li&gt; &#xA;   &lt;li&gt;This can give NPCs a much more realistic ability to pursue their own objectives, which should make game experiences much more dynamic and unpredictable, thus raising novelty.&lt;/li&gt; &#xA;   &lt;li&gt;These can be adapted to 2D or 3D game engines such as PyGame, Unity, or Unreal.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Autonomous Employee&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a version of the ACE that is meant to carry out meaningful and productive work inside a corporation.&lt;/li&gt; &#xA;   &lt;li&gt;Whether this is a digital CSR or backoffice worker depends on the deployment.&lt;/li&gt; &#xA;   &lt;li&gt;It could also be a &#34;digital team member&#34; that primarily interacts via Discord, Slack, or Microsoft Teams.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embodied Robot&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The ACE Framework is ideal to create self-contained, autonomous machines.&lt;/li&gt; &#xA;   &lt;li&gt;Whether they are domestic aid robots or something like WALL-E&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>