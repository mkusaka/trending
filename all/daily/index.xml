<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-29T01:23:22Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rasbt/LLMs-from-scratch</title>
    <updated>2024-01-29T01:23:22Z</updated>
    <id>tag:github.com,2024-01-29:/rasbt/LLMs-from-scratch</id>
    <link href="https://github.com/rasbt/LLMs-from-scratch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementing a ChatGPT-like LLM from scratch, step by step&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Build a Large Language Model (From Scratch)&lt;/h1&gt; &#xA;&lt;p&gt;(If you downloaded the code bundle from the Manning website, please consider visiting the official code repository on GitHub at &lt;a href=&#34;https://github.com/rasbt/LLMs-from-scratch&#34;&gt;https://github.com/rasbt/LLMs-from-scratch&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://mng.bz/orYv&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/images/cover.jpg&#34; width=&#34;250px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;http://mng.bz/orYv&#34;&gt;&lt;em&gt;Build a Large Language Model (from Scratch)&lt;/em&gt;&lt;/a&gt;, you&#39;ll discover how LLMs work from the inside out. In this book, I&#39;ll guide you step by step through creating your own LLM, explaining each stage with clear text, diagrams, and examples.&lt;/p&gt; &#xA;&lt;p&gt;The method described in this book for training and developing your own small-but-functional model for educational purposes mirrors the approach used in creating large-scale foundational models such as those behind ChatGPT.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Link to the official &lt;a href=&#34;https://github.com/rasbt/LLMs-from-scratch&#34;&gt;source code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mng.bz/orYv&#34;&gt;Link to the early access version&lt;/a&gt; at Manning&lt;/li&gt; &#xA; &lt;li&gt;ISBN 9781633437166&lt;/li&gt; &#xA; &lt;li&gt;Publication in Early 2025 (estimated)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;p&gt;Please note that the &lt;code&gt;Readme.md&lt;/code&gt; file is a Markdown (&lt;code&gt;.md&lt;/code&gt;) file. If you have downloaded this code bundle from the Manning website and are viewing it on your local computer, I recommend using a Markdown editor or previewer for proper viewing. If you haven&#39;t installed a Markdown editor yet, &lt;a href=&#34;https://www.marktext.cc&#34;&gt;MarkText&lt;/a&gt; is a good free option.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can view this and other files on GitHub at &lt;a href=&#34;https://github.com/rasbt/LLMs-from-scratch&#34;&gt;https://github.com/rasbt/LLMs-from-scratch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Chapter Title&lt;/th&gt; &#xA;   &lt;th&gt;Main Code (for quick access)&lt;/th&gt; &#xA;   &lt;th&gt;All Code + Supplementary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 1: Understanding Large Language Models&lt;/td&gt; &#xA;   &lt;td&gt;No code&lt;/td&gt; &#xA;   &lt;td&gt;No code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 2: Working with Text Data&lt;/td&gt; &#xA;   &lt;td&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/ch02.ipynb&#34;&gt;ch02.ipynb&lt;/a&gt;&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/dataloader.ipynb&#34;&gt;dataloader.ipynb&lt;/a&gt; (summary)&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/exercise-solutions.ipynb&#34;&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02&#34;&gt;./ch02&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 3: Coding Attention Mechanisms&lt;/td&gt; &#xA;   &lt;td&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/01_main-chapter-code/ch03.ipynb&#34;&gt;ch03.ipynb&lt;/a&gt;&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/01_main-chapter-code/multihead-attention.ipynb&#34;&gt;multihead-attention.ipynb&lt;/a&gt; (summary)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03&#34;&gt;./ch03&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 4: Implementing a GPT Model from Scratch&lt;/td&gt; &#xA;   &lt;td&gt;coming soon&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 5: Pretraining on Unlabeled Data&lt;/td&gt; &#xA;   &lt;td&gt;Q1 2024&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 6: Finetuning for Text Classification&lt;/td&gt; &#xA;   &lt;td&gt;Q2 2024&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 7: Finetuning with Human Feedback&lt;/td&gt; &#xA;   &lt;td&gt;Q2 2024&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ch 8: Using Large Language Models in Practice&lt;/td&gt; &#xA;   &lt;td&gt;Q2/3 2024&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Appendix A: Introduction to PyTorch*&lt;/td&gt; &#xA;   &lt;td&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/03_main-chapter-code/code-part1.ipynb&#34;&gt;code-part1.ipynb&lt;/a&gt;&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/03_main-chapter-code/code-part2.ipynb&#34;&gt;code-part2.ipynb&lt;/a&gt;&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/03_main-chapter-code/DDP-script.py&#34;&gt;DDP-script.py&lt;/a&gt;&lt;br&gt;- &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/03_main-chapter-code/exercise-solutions.ipynb&#34;&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A&#34;&gt;./appendix-A&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;(* Please see &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/01_optional-python-setup-preferences&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/02_installing-python-libraries&#34;&gt;this&lt;/a&gt; folder if you need more guidance on installing Python and Python packages.)&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/images/mental-model.jpg&#34; width=&#34;600px&#34;&gt; &#xA;&lt;p&gt;(A mental model summarizing the contents covered in this book.)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FalconForceTeam/SOAPHound</title>
    <updated>2024-01-29T01:23:22Z</updated>
    <id>tag:github.com,2024-01-29:/FalconForceTeam/SOAPHound</id>
    <link href="https://github.com/FalconForceTeam/SOAPHound" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SOAPHound is a custom-developed .NET data collector tool which can be used to enumerate Active Directory environments via the Active Directory Web Services (ADWS) protocol.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FalconForceTeam/SOAPHound/main/soaphound-logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;SOAPHound is a .NET data collector tool, which collects Active Directory data via the Active Directory Web Services (ADWS) protocol.&lt;/p&gt; &#xA;&lt;p&gt;SOAPHound is an alternative to a number of open source security tools which are commonly used to extract Active Directory data via LDAP protocol. SOAPHound is able to extract the same information without directly communicating to the LDAP server. Instead, LDAP queries are wrapped within a series of SOAP messages, which are sent to the ADWS server using NET TCP Binding communication channel. Following, ADWS server unwraps the LDAP queries and forwards them to the LDAP server running on the same Domain Controller. As a result, LDAP traffic is not sent via the wire and therefore is not easily detected by common monitoring tools.&lt;/p&gt; &#xA;&lt;p&gt;Note that this is a proof of concept tool and is not intended for production use. The tool is provided as is, without warranty of any kind.&lt;/p&gt; &#xA;&lt;p&gt;For additional details on the SOAPHound tool, please refer to the following blog post: &lt;a href=&#34;https://falconforce.nl/soaphound-tool-to-collect-active-directory-data-via-adws/&#34;&gt;SOAPHound â€” tool to collect Active Directory data via ADWS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;--help&lt;/code&gt; command line argument can be used to display the following usage information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound PoC 1.0.1-beta&#xA;Copyright (c) 2023 FalconForce&#xA;&#xA;Connection and authentication options:&#xA;  --user                   Username to use for ADWS Connection. Format: domain\user or user@domain&#xA;  --password               Password to use for ADWS Connection&#xA;  --domain                 Specify domain for enumeration&#xA;  --dc                     Domain Controller to connect to&#xA;&#xA;Supported collection methods:&#xA;  --buildcache             (Default: false) Only build cache and not perform further actions&#xA;  --dnsdump                (Default: false) Dump AD Integrated DNS data&#xA;  --certdump               (Default: false) Dump AD Certificate Services data&#xA;  --bhdump                 (Default: false) Dump BH data&#xA;&#xA;Output options:&#xA;  -o, --outputdirectory    Folder to output files to (full path needed)&#xA;  -c, --cachefilename      Filename for the cache file (full path needed)&#xA;&#xA;Splitting options:&#xA;  -a, --autosplit          (Default: false) Enable AutoSplit mode: automatically split object retrieval on two depth levels based on defined trheshold&#xA;  -t, --threshold          (Default: 0) AutoSplit mode: Define split threshold based on number of objects per starting letter&#xA;&#xA;Miscellaneous options:&#xA;  --nolaps                 (Default: false) Do not request LAPS related information&#xA;  --showstats              Show stats of local cache file&#xA;  --logfile                Create log file&#xA;  --help                   Display this help screen.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connection and authentication options&lt;/h1&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;SOAPHound supports the following authentication methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the existing authentication token of the current user. This is the default option if no username and password are supplied.&lt;/li&gt; &#xA; &lt;li&gt;Supplying a username and password on the command line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Domain Connection Information&lt;/h2&gt; &#xA;&lt;p&gt;When SOAPHound runs in a domain-joined machine, it will automatically attempt to connect to the Domain Controller of the domain the machine is joined to. This can be overridden by supplying the &lt;code&gt;--dc&lt;/code&gt; and &lt;code&gt;--domain&lt;/code&gt; command line arguments.&lt;/p&gt; &#xA;&lt;h1&gt;Supported collection methods&lt;/h1&gt; &#xA;&lt;p&gt;One of the following collection methods must be specified:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--buildcache&lt;/code&gt;: Only build cache and not perform further actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--bhdump&lt;/code&gt;: Dump BloodHound data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--certdump&lt;/code&gt;: Dump AD Certificate Services (ADCS) data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--dnsdump&lt;/code&gt;: Dump AD Integrated DNS data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the cache&lt;/h2&gt; &#xA;&lt;p&gt;SOAPHound is able to generate a cache file that contains basic information about all domain objects, such as Security Identifier (SID), Distinguished Name (DN) and ObjectClass. This cache file is required for BloodHound related data collection (i.e. the &lt;code&gt;--bhdump&lt;/code&gt; and &lt;code&gt;--certdump&lt;/code&gt; collection methods), since it is used when crafting the trust relationships between objects via the relevant Access Control Entries (ACEs).&lt;/p&gt; &#xA;&lt;p&gt;An example command to build the cache file is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe --buildcache -c c:\temp\cache.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate a cache file in the &lt;code&gt;c:\temp&lt;/code&gt; folder. The cache file is a JSON formatted mapping of basic information about all domain objects. To view some statistics about the cache file (i.e. number of domain objects starting with each letter), you can use the &lt;code&gt;--showstats&lt;/code&gt; command line argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe --showstats -c c:\temp\cache.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Collecting BloodHound Data&lt;/h2&gt; &#xA;&lt;p&gt;After the cache file has been generated, you can use the &lt;code&gt;--bhdump&lt;/code&gt; collection method to collect data from the domain that can be imported into BloodHound.&lt;/p&gt; &#xA;&lt;p&gt;An example command to collect BloodHound data is (note that this references the cache file generated in the previous step):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe -c c:\temp\cache.txt --bhdump -o c:\temp\bloodhound-output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the targeted domain does not use LAPS, you can use the &lt;code&gt;--nolaps&lt;/code&gt; command line argument to skip the LAPS related data collection.&lt;/p&gt; &#xA;&lt;p&gt;This command will generate the &lt;code&gt;c:\temp\bloodhound-output&lt;/code&gt; folder and produce a number of JSON files that can be imported into BloodHound. The JSON files contain the collected Users, Groups, Computers, Domains, GPOs and Containers, including their relationships. SOAPHound is compatible with Bloodhound version 4.&lt;/p&gt; &#xA;&lt;h3&gt;Dealing with large domains&lt;/h3&gt; &#xA;&lt;p&gt;If you are dealing with a large domain, you may run into issues with the amount of data that can be retrieved in a single request. To deal with this, SOAPHound supports the &lt;code&gt;--autosplit&lt;/code&gt; and &lt;code&gt;--threshold&lt;/code&gt; command line arguments.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--autosplit&lt;/code&gt; command line argument enables the AutoSplit mode, which will automatically split object retrieval on two depth levels based on a defined threshold. The &lt;code&gt;--threshold&lt;/code&gt; command line argument defines the split threshold based on the number of objects per starting letter.&lt;/p&gt; &#xA;&lt;p&gt;An example command to collect BloodHound data in AutoSplit mode is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe -c c:\temp\cache.txt --bhdump -o c:\temp\bloodhound-output --autosplit --threshold 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate the output in batches of a maximum of 1000 objects per starting letter. If there are more than 1000 objects for a single starting letter, SOAPHound will use two depth levels to retrieve the objects. This will result in larger number of queries, each one returning a maximum of 1000 objects.&lt;/p&gt; &#xA;&lt;p&gt;For example if there are 2000 objects starting with the letter &lt;code&gt;a&lt;/code&gt;, SOAPHound will retrieve objects starting with &lt;code&gt;aa&lt;/code&gt;, &lt;code&gt;ab&lt;/code&gt;, &lt;code&gt;ac&lt;/code&gt;, etc., each in a separate query to avoid timeouts.&lt;/p&gt; &#xA;&lt;h2&gt;Collecting ADCS Data&lt;/h2&gt; &#xA;&lt;p&gt;After the cache file has been generated, you can use the &lt;code&gt;--certdump&lt;/code&gt; collection method to collect ADCS data from the domain that can be imported into BloodHound. This collection method does not support the &lt;code&gt;--autosplit&lt;/code&gt; and &lt;code&gt;--threshold&lt;/code&gt; command line arguments.&lt;/p&gt; &#xA;&lt;p&gt;An example command to collect ADCS data is (note that this references the cache file generated in previous step):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe -c c:\temp\cache.txt --certdump -o c:\temp\bloodhound-output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will generate the &lt;code&gt;c:\temp\bloodhound-output&lt;/code&gt; folder and produce two JSON files that can be imported into BloodHound, containing information about the Certificate Authorities (CA) and Certificate Templates. SOAPHound is compatible with Bloodhound version 4 and ADCS data are classified as GPO objects in Bloodhound.&lt;/p&gt; &#xA;&lt;h2&gt;Collecting AD Integrated DNS Data&lt;/h2&gt; &#xA;&lt;p&gt;Apart from BloodHound data, SOAPHound can also be used to collect AD Integrated DNS data. This does not require a cache file and does not support the &lt;code&gt;--autosplit&lt;/code&gt; and &lt;code&gt;--threshold&lt;/code&gt; command line arguments.&lt;/p&gt; &#xA;&lt;p&gt;An example command to collect AD Integrated DNS data is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SOAPHound.exe --dnsdump -o c:\temp\dns-output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will generate a file namely DNS.txt in the &lt;code&gt;c:\temp\dns-output&lt;/code&gt; folder that contains a dump of all the AD Integrated DNS data.&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;This tool is based on the work of the following open source projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BloodHoundAD/SharpHound/tree/dev&#34;&gt;SharpHound&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FuzzySecurity/StandIn&#34;&gt;StandIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GhostPack/Certify&#34;&gt;Certify&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Another big thanks to &lt;a href=&#34;https://github.com/vletoux/pingcastle&#34;&gt;PingCastle&lt;/a&gt; for their reference implementation of the ADWS protocol. While we do not use their code directly, it was a great help in understanding the protocol and realizing the potential of the ADWS protocol.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cheahjs/palworld-save-tools</title>
    <updated>2024-01-29T01:23:22Z</updated>
    <id>tag:github.com,2024-01-29:/cheahjs/palworld-save-tools</id>
    <link href="https://github.com/cheahjs/palworld-save-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tools for converting PalWorld .sav files to JSON and back&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;palworld-save-tools&lt;/h1&gt; &#xA;&lt;p&gt;Tools for converting Palworld .sav files to JSON and back.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] This tool has changed how the JSON files are formatted starting with v0.9. You cannot load JSON files created by older versions of the tool, and other tools that depend on the JSON output of &lt;code&gt;palworld-save-tools&lt;/code&gt; will break. In exchange, you will no longer need &lt;code&gt;uesave-rs&lt;/code&gt;, the tool runs faster, and doesn&#39;t use as much RAM.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] Any versions older than v0.4 will create corrupt &lt;code&gt;Level.sav&lt;/code&gt; files when converting from JSON to SAV. Please make sure to update to avoid data corruption.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This tool currently supports additional parsing of the following data not handled by &lt;code&gt;uesave&lt;/code&gt; or other non-Palworld aware Unreal save editors:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;Level.sav&lt;/code&gt;:&lt;code&gt;GroupSaveDataMap&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Groups such as in-game organizations and guilds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Level.sav&lt;/code&gt;:&lt;code&gt;CharacterSaveParameterMap&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Characters such as players and pals&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Converting co-op saves to dedicated server saves&lt;/h2&gt; &#xA;&lt;p&gt;Please follow the instructions provided over at &lt;a href=&#34;https://github.com/xNul/palworld-host-save-fix&#34;&gt;https://github.com/xNul/palworld-host-save-fix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Converting &lt;code&gt;Level.sav&lt;/code&gt; files to JSON will result in very large files, and may require significant amounts of RAM to process. Use a modern text editor such as Visual Studio Code or a Jetbrains IDE to open these files.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Python 3.9 or newer. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows users: You can install &lt;a href=&#34;https://apps.microsoft.com/detail/9NCVDN91XZQP&#34;&gt;Python 3.12 from the Microsoft Store&lt;/a&gt; or from &lt;a href=&#34;https://www.python.org/&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows GUI steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest release from [https://github.com/cheahjs/palworld-save-tools/releases/latest].&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file into a folder.&lt;/li&gt; &#xA; &lt;li&gt;Drag and drop your &lt;code&gt;.sav&lt;/code&gt; file (for Steam on Windows, these are located at &lt;code&gt;%LOCALAPPDATA%\Pal\Saved\SaveGames\&amp;lt;SteamID&amp;gt;\&amp;lt;SaveID&amp;gt;&lt;/code&gt;) onto &lt;code&gt;convert.cmd&lt;/code&gt; to convert the file into JSON.&lt;/li&gt; &#xA; &lt;li&gt;To convert the &lt;code&gt;.sav.json&lt;/code&gt; file back into a &lt;code&gt;.sav&lt;/code&gt; file, drag and drop your &lt;code&gt;.sav.json&lt;/code&gt; file onto &lt;code&gt;convert.cmd&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] In the event that the &lt;code&gt;convert.cmd&lt;/code&gt; fails to function correctly, try to disable Python&#39;s app execution aliases (&#34;Manage app execution aliases&#34;), or failing that, please use the &lt;a href=&#34;https://raw.githubusercontent.com/cheahjs/palworld-save-tools/main/#terminal&#34;&gt;Terminal&lt;/a&gt; instructions below&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Terminal&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest release from [https://github.com/cheahjs/palworld-save-tools/releases/latest].&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file into a folder.&lt;/li&gt; &#xA; &lt;li&gt;Open a terminal in the folder you just unzipped.&lt;/li&gt; &#xA; &lt;li&gt;Depending on how Python is installed, the next steps should use either &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt;, or &lt;code&gt;py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python convert.py &amp;lt;path to .sav file&amp;gt;&lt;/code&gt; to convert the &lt;code&gt;.sav&lt;/code&gt; file to a &lt;code&gt;.sav.json&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python convert.py &amp;lt;path to .json file&amp;gt;&lt;/code&gt; to convert the &lt;code&gt;.sav.json&lt;/code&gt; file to a &lt;code&gt;.sav&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] On Windows, you can drag and drop the &lt;code&gt;convert.py&lt;/code&gt; file and the &lt;code&gt;.sav&lt;/code&gt;/&lt;code&gt;.sav.json&lt;/code&gt; file to avoid typing out the path.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Additional command line arguments:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--to-json&lt;/code&gt;: Force SAV to JSON conversion regardless of file extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--from-json&lt;/code&gt;: Force JSON to SAV converrsion regardless of file extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--output&lt;/code&gt;: Override the default output path&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--minify-json&lt;/code&gt;: Minify output JSON to help speed up processing by other tools consuming JSON&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>