<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-04T01:25:26Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>myshell-ai/OpenVoice</title>
    <updated>2024-01-04T01:25:26Z</updated>
    <id>tag:github.com,2024-01-04:/myshell-ai/OpenVoice</id>
    <link href="https://github.com/myshell-ai/OpenVoice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant voice cloning by MyShell.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/resources/openvoicelogo.jpg&#34; width=&#34;400&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2312.01479&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://research.myshell.ai/open-voice&#34;&gt;Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Join Our Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/myshell&#34;&gt;Discord community&lt;/a&gt; and select the &lt;code&gt;Developer&lt;/code&gt; role upon joining to gain exclusive access to our developer-only channel! Don&#39;t miss out on valuable discussions and collaboration opportunities.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;As we detailed in our &lt;a href=&#34;https://arxiv.org/abs/2312.01479&#34;&gt;paper&lt;/a&gt; and &lt;a href=&#34;https://research.myshell.ai/open-voice&#34;&gt;website&lt;/a&gt;, the advantages of OpenVoice are three-fold:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Accurate Tone Color Cloning.&lt;/strong&gt; OpenVoice can accurately clone the reference tone color and generate speech in multiple languages and accents.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Flexible Voice Style Control.&lt;/strong&gt; OpenVoice enables granular control over voice styles, such as emotion and accent, as well as other style parameters including rhythm, pauses, and intonation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Zero-shot Cross-lingual Voice Cloning.&lt;/strong&gt; Neither of the language of the generated speech nor the language of the reference speech needs to be presented in the massive-speaker multi-lingual training dataset.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/myshell-ai/OpenVoice/assets/40556743/3cba936f-82bf-476c-9e52-09f0f417bb2f&#34;&gt;Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/resources/framework-ipa.png&#34; width=&#34;800&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;OpenVoice has been powering the instant voice cloning capability of &lt;a href=&#34;https://app.myshell.ai/explore&#34;&gt;myshell.ai&lt;/a&gt; since May 2023. Until Nov 2023, the voice cloning model has been used tens of millions of times by users worldwide, and witnessed the explosive user growth on the platform.&lt;/p&gt; &#xA;&lt;h2&gt;Main Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qinzy.tech&#34;&gt;Zengyi Qin&lt;/a&gt; at MIT and MyShell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wl-zhao.github.io&#34;&gt;Wenliang Zhao&lt;/a&gt; at Tsinghua University&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yuxumin.github.io&#34;&gt;Xumin Yu&lt;/a&gt; at Tsinghua University&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ethan_myshell&#34;&gt;Ethan Sun&lt;/a&gt; at MyShell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Live Demo&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.lepton.ai/playground/openvoice&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/resources/lepton.jpg&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#xA; &lt;a href=&#34;https://app.myshell.ai/bot/z6Bvua/1702636181&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/resources/myshell.jpg&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This is a implementation that approximates the performance of the internal voice clone technology of &lt;a href=&#34;https://app.myshell.ai/explore&#34;&gt;myshell.ai&lt;/a&gt;. The online version in myshell.ai has better 1) audio quality, 2) voice cloning similarity, 3) speech naturalness and 4) computational efficiency.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Clone this repo, and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create -n openvoice python=3.9&#xA;conda activate openvoice&#xA;conda install pytorch==1.13.1 torchvision==0.14.1 torchaudio==0.13.1 pytorch-cuda=11.7 -c pytorch -c nvidia&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download the checkpoint from &lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/checkpoints_1226.zip&#34;&gt;here&lt;/a&gt; and extract it to the &lt;code&gt;checkpoints&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Flexible Voice Style Control.&lt;/strong&gt; Please see &lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/demo_part1.ipynb&#34;&gt;&lt;code&gt;demo_part1.ipynb&lt;/code&gt;&lt;/a&gt; for an example usage of how OpenVoice enables flexible style control over the cloned voice.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Cross-Lingual Voice Cloning.&lt;/strong&gt; Please see &lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/demo_part2.ipynb&#34;&gt;&lt;code&gt;demo_part2.ipynb&lt;/code&gt;&lt;/a&gt; for an example for languages seen or unseen in the MSML training set.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Gradio Demo.&lt;/strong&gt; Launch a local gradio demo with &lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/OpenVoice/main/openvoice_app.py&#34;&gt;&lt;code&gt;python -m openvoice_app --share&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Advanced Usage.&lt;/strong&gt; The base speaker model can be replaced with any model (in any language and style) that the user prefer. Please use the &lt;code&gt;se_extractor.get_se&lt;/code&gt; function as demonstrated in the demo to extract the tone color embedding for the new base speaker.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Tips to Generate Natural Speech.&lt;/strong&gt; There are many single or multi-speaker TTS methods that can generate natural speech, and are readily available. By simply replacing the base speaker model with the model you prefer, you can push the speech naturalness to a level you desire.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Inference code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tone color converter model&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-style base speaker model&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-style and multi-lingual demo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Base speaker model in other languages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EN base speaker model with better naturalness&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{qin2023openvoice,&#xA;  title={OpenVoice: Versatile Instant Voice Cloning},&#xA;  author={Qin, Zengyi and Zhao, Wenliang and Yu, Xumin and Sun, Xin},&#xA;  journal={arXiv preprint arXiv:2312.01479},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License, which prohibits commercial usage. &lt;strong&gt;MyShell reserves the ability to detect whether an audio is generated by OpenVoice&lt;/strong&gt;, no matter whether the watermark is added or not.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This implementation is based on several excellent projects, &lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;TTS&lt;/a&gt;, &lt;a href=&#34;https://github.com/jaywalnut310/vits&#34;&gt;VITS&lt;/a&gt;, and &lt;a href=&#34;https://github.com/daniilrobnikov/vits2&#34;&gt;VITS2&lt;/a&gt;. Thanks for their awesome work!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>praydog/UEVR</title>
    <updated>2024-01-04T01:25:26Z</updated>
    <id>tag:github.com,2024-01-04:/praydog/UEVR</id>
    <link href="https://github.com/praydog/UEVR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Universal Unreal Engine VR Mod (4/5)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UEVR &lt;img src=&#34;https://github.com/praydog/UEVR/actions/workflows/dev-release.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Universal Unreal Engine VR Mod (4/5)&lt;/p&gt; &#xA;&lt;p&gt;4.8 - 5.3&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://praydog.github.io/uevr-docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flat2vr.com&#34;&gt;Flat2VR Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full 6DOF support out of the box (HMD movement)&lt;/li&gt; &#xA; &lt;li&gt;Full stereoscopic 3D out of the box&lt;/li&gt; &#xA; &lt;li&gt;Native UE4/UE5 stereo rendering system&lt;/li&gt; &#xA; &lt;li&gt;Frontend GUI for easy process injection&lt;/li&gt; &#xA; &lt;li&gt;Supports OpenVR and OpenXR runtimes&lt;/li&gt; &#xA; &lt;li&gt;3 rendering modes: Native Stereo, Synchronized Sequential, and Alternating/AFR&lt;/li&gt; &#xA; &lt;li&gt;Automatic handling of most in-game UI so it is projected into 3D space&lt;/li&gt; &#xA; &lt;li&gt;Optional 3DOF motion controls out of the box in many games, essentially emulating a semi-native VR experience&lt;/li&gt; &#xA; &lt;li&gt;Optional roomscale movement in many games, moving the player character itself in 3D space along with the headset&lt;/li&gt; &#xA; &lt;li&gt;In-game menu with shortcuts for adjusting settings&lt;/li&gt; &#xA; &lt;li&gt;Access to various CVars for fixing broken shaders/effects/performance issues&lt;/li&gt; &#xA; &lt;li&gt;Optional depth buffer integration for improved latency on some headsets&lt;/li&gt; &#xA; &lt;li&gt;Per-game configurations&lt;/li&gt; &#xA; &lt;li&gt;Plugin system/Blueprint support for modders to add additional features like motion controls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch the frontend GUI&lt;/li&gt; &#xA; &lt;li&gt;Launch the target game&lt;/li&gt; &#xA; &lt;li&gt;Locate the game in the process dropdown list&lt;/li&gt; &#xA; &lt;li&gt;Select your desired runtime (OpenVR/OpenXR)&lt;/li&gt; &#xA; &lt;li&gt;Toggle existing VR plugin nullification (if necessary)&lt;/li&gt; &#xA; &lt;li&gt;Configure pre-injection settings&lt;/li&gt; &#xA; &lt;li&gt;Inject&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;To-dos before injection&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Disable HDR (it will still work without it, but the game will be darker than usual if it is)&lt;/li&gt; &#xA; &lt;li&gt;Start as administrator if the game is not visible in the list&lt;/li&gt; &#xA; &lt;li&gt;Pass &lt;code&gt;-nohmd&lt;/code&gt; to the game&#39;s command line and/or delete VR plugins from the game directory if the game contains any existing VR plugins&lt;/li&gt; &#xA; &lt;li&gt;Disable any overlays that may conflict and cause crashes (Rivatuner, ASUS software, Razer software, Overwolf, etc...)&lt;/li&gt; &#xA; &lt;li&gt;Disable graphical options in-game that may cause crashes or severe issues like DLSS Frame Generation&lt;/li&gt; &#xA; &lt;li&gt;Consider disabling &lt;code&gt;Hardware Accelerated GPU Scheduling&lt;/code&gt; in your Windows &lt;code&gt;Graphics settings&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;In-Game Menu&lt;/h2&gt; &#xA;&lt;p&gt;Press the &lt;strong&gt;Insert&lt;/strong&gt; key or &lt;strong&gt;L3+R3&lt;/strong&gt; on an XInput based controller to access the in-game menu, which opens by default at startup. With the menu open, hold &lt;strong&gt;RT&lt;/strong&gt; for various shortcuts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RT + Left Stick: Move the camera left/right/forward/back&lt;/li&gt; &#xA; &lt;li&gt;RT + Right Stick: Move the camera up/down&lt;/li&gt; &#xA; &lt;li&gt;RT + B: Reset camera offset&lt;/li&gt; &#xA; &lt;li&gt;RT + Y: Recenter view&lt;/li&gt; &#xA; &lt;li&gt;RT + X: Reset standing origin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick overview of rendering methods&lt;/h2&gt; &#xA;&lt;h3&gt;Native Stereo&lt;/h3&gt; &#xA;&lt;p&gt;When it works, it looks the best, performs the best (usually). Can cause crashes or graphical bugs if the game does not play well with it.&lt;/p&gt; &#xA;&lt;p&gt;Temporal effects like TAA are fully intact. DLSS/FSR2 usually work completely fine with no ghosting in this mode.&lt;/p&gt; &#xA;&lt;p&gt;Fully synchronized eye rendering. Works with the majority of games. Uses the actual stereo rendering pipeline in the Unreal Engine to achieve a stereoscopic image.&lt;/p&gt; &#xA;&lt;h3&gt;Synchronized Sequential&lt;/h3&gt; &#xA;&lt;p&gt;A form of AFR. Can fix many rendering bugs that are introduced with Native Stereo. Renders two frames &lt;strong&gt;sequentially&lt;/strong&gt; in a &lt;strong&gt;synchronized&lt;/strong&gt; fashion on the same engine tick.&lt;/p&gt; &#xA;&lt;p&gt;Fully synchronized eye rendering. Game world does not advance time between frames.&lt;/p&gt; &#xA;&lt;p&gt;Looks normal but temporal effects like TAA will have ghosting/doubling effect. Motion blur will need to be turned off.&lt;/p&gt; &#xA;&lt;p&gt;This is the first alternative option that should be used if Native Stereo is not working as expected or you are encountering graphical bugs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Skip Draw&lt;/strong&gt; skips the viewport draw on the next engine tick. Usually works the best but sometimes particle effects may not play at the correct speed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Skip Tick&lt;/strong&gt; skips the next engine tick entirely. Usually buggy but does fix particle effects and sometimes brings higher performance.&lt;/p&gt; &#xA;&lt;h3&gt;AFR&lt;/h3&gt; &#xA;&lt;p&gt;Alternated Frame Rendering. Renders each eye on separate frames in an alternating fashion, with the game world advancing time in between frames. Causes eye desyncs and usually nausea along with it.&lt;/p&gt; &#xA;&lt;p&gt;Not synchronized. Generally should not be used unless the other two are unusable in some way.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>webui-dev/webui</title>
    <updated>2024-01-04T01:25:26Z</updated>
    <id>tag:github.com,2024-01-04:/webui-dev/webui</id>
    <link href="https://github.com/webui-dev/webui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use any web browser as GUI, with your preferred language in the backend and HTML5 in the frontend, all in a lightweight portable lib.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/webui-dev/webui/assets/34311583/c92e712f-0698-486a-a460-d4acea28a4f8&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA; &lt;h1&gt;WebUI v2.4.2&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/webui-dev/webui/ci.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;logo=githubactions&amp;amp;labelColor=414868&amp;amp;logoColor=C0CAF5&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/webui-dev/webui/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/webui-dev/webui?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=C0CAF5&amp;amp;labelColor=414868&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/webui-dev/webui/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/webui-dev/webui?style=for-the-badge&amp;amp;logo=webtrees&amp;amp;logoColor=C0CAF5&amp;amp;labelColor=414868&amp;amp;color=7664C6&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/webui-dev/webui/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/webui-dev/webui?style=for-the-badge&amp;amp;logo=opensourcehardware&amp;amp;label=License&amp;amp;logoColor=C0CAF5&amp;amp;labelColor=414868&amp;amp;color=8c73cc&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;WebUI is not a web-server solution or a framework, but it allows you to use any web browser as a GUI, with your preferred language in the backend and HTML5 in the frontend. All in a lightweight portable lib.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/webui-dev/webui/assets/34311583/57992ef1-4f7f-4d60-8045-7b07df4088c6&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/releases&#34;&gt;Latest Stable Release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/releases/tag/nightly&#34;&gt;Nightly Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#showcase&#34;&gt;Showcase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#ui--the-web-technologies&#34;&gt;UI &amp;amp; The Web Technologies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#wrappers&#34;&gt;Wrappers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#supported-web-browsers&#34;&gt;Supported Web Browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webui-dev/webui/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Portable (&lt;em&gt;Needs only a web browser at runtime&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;One header file&lt;/li&gt; &#xA; &lt;li&gt;Lightweight (&lt;em&gt;Few Kb library&lt;/em&gt;) &amp;amp; Small memory footprint&lt;/li&gt; &#xA; &lt;li&gt;Fast binary communication protocol&lt;/li&gt; &#xA; &lt;li&gt;Multi-platform &amp;amp; Multi-Browser&lt;/li&gt; &#xA; &lt;li&gt;Using private profile for safety&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://github.com/webui-dev/webui/tree/main/examples/C/text-editor&#34;&gt;text editor&lt;/a&gt; is a lightweight and portable example written in C using WebUI as the GUI library.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/webui-dev/webui/assets/34311583/c1ccf29c-806a-4742-bfd7-a3dc30cab70b&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;UI &amp;amp; The Web Technologies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ibob.bg/&#34;&gt;Borislav Stanimirov&lt;/a&gt; discusses using HTML5 in the web browser as GUI at the &lt;a href=&#34;https://www.youtube.com/watch?v=bbbcZd4cuxg&#34;&gt;C++ Conference 2019 (&lt;em&gt;YouTube&lt;/em&gt;)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;a href=&#34;https://www.youtube.com/watch?v=bbbcZd4cuxg&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/bbbcZd4cuxg/0.jpg&#34; alt=&#34;Embrace Modern Technology: Using HTML 5 for GUI in C++ - Borislav Stanimirov - CppCon 2019&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/webui-dev/webui/assets/34311583/4e830caa-4ca0-44ff-825f-7cd6d94083c8&#34; alt=&#34;CPPCon&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Web application UI design is not just about how a product looks but how it works. Using web technologies in your UI makes your product modern and professional, And a well-designed web application will help you make a solid first impression on potential customers. Great web application design also assists you in nurturing leads and increasing conversions. In addition, it makes navigating and using your web app easier for your users.&lt;/p&gt; &#xA;&lt;h3&gt;Why Use Web Browsers?&lt;/h3&gt; &#xA;&lt;p&gt;Today&#39;s web browsers have everything a modern UI needs. Web browsers are very sophisticated and optimized. Therefore, using it as a GUI will be an excellent choice. While old legacy GUI lib is complex and outdated, a WebView-based app is still an option. However, a WebView needs a huge SDK to build and many dependencies to run, and it can only provide some features like a real web browser. That is why WebUI uses real web browsers to give you full features of comprehensive web technologies while keeping your software lightweight and portable.&lt;/p&gt; &#xA;&lt;h3&gt;How Does it Work?&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/ttytm/webui/assets/34311583/dbde3573-3161-421e-925c-392a39f45ab3&#34; alt=&#34;Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Think of WebUI like a WebView controller, but instead of embedding the WebView controller in your program, which makes the final program big in size, and non-portable as it needs the WebView runtimes. Instead, by using WebUI, you use a tiny static/dynamic library to run any installed web browser and use it as GUI, which makes your program small, fast, and portable. &lt;strong&gt;All it needs is a web browser&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime Dependencies Comparison&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;WebView&lt;/th&gt; &#xA;   &lt;th&gt;Qt&lt;/th&gt; &#xA;   &lt;th&gt;WebUI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Runtime Dependencies on Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;WebView2&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;QtCore, QtGui, QtWidgets&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;em&gt;A Web Browser&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Runtime Dependencies on Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;GTK3, WebKitGTK&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;QtCore, QtGui, QtWidgets&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;em&gt;A Web Browser&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Runtime Dependencies on macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;Cocoa, WebKit&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;QtCore, QtGui, QtWidgets&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;em&gt;A Web Browser&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; We are currently writing documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webui.me/docs/#/c_api&#34;&gt;Online Documentation - C&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webui.me/docs/#/cpp_api&#34;&gt;Online Documentation - C++&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# GCC&#xA;mingw32-make&#xA;&#xA;# MSVC&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Windows SSL/TLS (&lt;em&gt;Optional&lt;/em&gt;)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Download and install the OpenSSL pre-compiled binaries for Windows:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MSVC: &lt;a href=&#34;https://slproweb.com/download/Win64OpenSSL-3_1_3.msi&#34;&gt;x64 OpenSSL v3.1.3&lt;/a&gt; or &lt;a href=&#34;https://slproweb.com/download/Win32OpenSSL-3_1_3.msi&#34;&gt;&lt;em&gt;32Bit&lt;/em&gt;&lt;/a&gt;. Please check this &lt;a href=&#34;https://wiki.openssl.org/index.php/Binaries&#34;&gt;Wiki list&lt;/a&gt; for more info.&lt;/li&gt; &#xA;   &lt;li&gt;MinGW: &lt;a href=&#34;https://curl.se/windows/&#34;&gt;Curl for Windows win OpenSSL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# GCC&#xA;mingw32-make WEBUI_USE_TLS=1 WEBUI_TLS_INCLUDE=&#34;C:\curl-xxx-xxx-mingw\curl-xxx-xxx-mingw\include&#34; WEBUI_TLS_LIB=&#34;C:\curl-xxx-xxx-mingw\curl-xxx-xxx-mingw\lib&#34;&#xA;&#xA;# MSVC&#xA;nmake WEBUI_USE_TLS=1 WEBUI_TLS_INCLUDE=&#34;C:\Program Files\OpenSSL-xxx\include&#34; WEBUI_TLS_LIB=&#34;C:\Program Files\OpenSSL-xxx\lib&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# GCC&#xA;make&#xA;&#xA;# Clang&#xA;make CC=clang&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Linux SSL/TLS (&lt;em&gt;Optional&lt;/em&gt;)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt update&#xA;sudo apt install libssl-dev&#xA;&#xA;# GCC&#xA;make WEBUI_USE_TLS=1&#xA;&#xA;# Clang&#xA;make WEBUI_USE_TLS=1 CC=clang&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;macOS SSL/TLS (&lt;em&gt;Optional&lt;/em&gt;)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install openssl&#xA;make WEBUI_USE_TLS=1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/tree/main/examples/C&#34;&gt;C&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/tree/main/examples/C++&#34;&gt;C++&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Wrappers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/go-webui&#34;&gt;Go-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nim&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/nim-webui&#34;&gt;Nim-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pascal&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/pascal-webui&#34;&gt;Pascal-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/python-webui&#34;&gt;Python-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not complete&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/rust-webui&#34;&gt;Rust-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TypeScript / JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/deno-webui&#34;&gt;Deno-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/v-webui&#34;&gt;V-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zig&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not complete&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/zig-webui&#34;&gt;Zig-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Odin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not complete&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webui-dev/odin-webui&#34;&gt;Odin-WebUI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Web Browsers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Browser&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mozilla Firefox&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google Chrome&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft Edge&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chromium&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Yandex&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Brave&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vivaldi&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Epic&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not available&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Safari&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not available&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;not available&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Opera&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Licensed under MIT License.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Stargazers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/webui-dev/webui/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/webui-dev/webui&#34; alt=&#34;Stargazers repo roster for @webui-dev/webui&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>