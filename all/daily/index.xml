<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-01T01:28:48Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fish-shell/fish-shell</title>
    <updated>2025-03-01T01:28:48Z</updated>
    <id>tag:github.com,2025-03-01:/fish-shell/fish-shell</id>
    <link href="https://github.com/fish-shell/fish-shell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The user-friendly command line shell.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. |Cirrus CI| image:: &lt;a href=&#34;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&#34;&gt;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://cirrus-ci.com/github/fish-shell/fish-shell&#34;&gt;https://cirrus-ci.com/github/fish-shell/fish-shell&lt;/a&gt; :alt: Cirrus CI Build Status&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;fish &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ - the friendly interactive shell |Build Status| |Cirrus CI|&lt;/h1&gt; &#xA;&lt;p&gt;fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family. fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions that just work, with no configuration required.&lt;/p&gt; &#xA;&lt;p&gt;For downloads, screenshots and more, go to &lt;a href=&#34;https://fishshell.com/&#34;&gt;https://fishshell.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;fish generally works like other shells, like bash or zsh. A few important differences can be found at &lt;a href=&#34;https://fishshell.com/docs/current/tutorial.html&#34;&gt;https://fishshell.com/docs/current/tutorial.html&lt;/a&gt; by searching for the magic phrase “unlike other shells”.&lt;/p&gt; &#xA;&lt;p&gt;Detailed user documentation is available by running &lt;code&gt;help&lt;/code&gt; within fish, and also at &lt;a href=&#34;https://fishshell.com/docs/current/index.html&#34;&gt;https://fishshell.com/docs/current/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting fish&lt;/h2&gt; &#xA;&lt;p&gt;macOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;fish can be installed:&#xA;&#xA;-  using `Homebrew &amp;lt;http://brew.sh/&amp;gt;`__: ``brew install fish``&#xA;-  using `MacPorts &amp;lt;https://www.macports.org/&amp;gt;`__:&#xA;   ``sudo port install fish``&#xA;-  using the `installer from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__&#xA;-  as a `standalone app from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__&#xA;&#xA;Note: The minimum supported macOS version is 10.10 &#34;Yosemite&#34;.&#xA;&#xA;Packages for Linux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the &lt;code&gt;openSUSE Build Service &amp;lt;https://software.opensuse.org/download.html?project=shells%3Afish&amp;amp;package=fish&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Packages for Ubuntu are available from the &lt;code&gt;fish PPA &amp;lt;https://launchpad.net/~fish-shell/+archive/ubuntu/release-4&amp;gt;&lt;/code&gt;__, and can be installed using the following commands:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;sudo apt-add-repository ppa:fish-shell/release-4 sudo apt update sudo apt install fish&lt;/p&gt; &#xA;&lt;p&gt;Instructions for other distributions may be found at &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;-  On Windows 10/11, fish can be installed under the WSL Windows Subsystem&#xA;   for Linux with the instructions for the appropriate distribution&#xA;   listed above under “Packages for Linux”, or from source with the&#xA;   instructions below.&#xA;-  fish (4.0 on and onwards) cannot be installed in Cygwin, due to a lack of Rust support.&#xA;&#xA;Building from source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If packages are not available for your platform, GPG-signed tarballs are available from &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;fish-shell on GitHub &amp;lt;https://github.com/fish-shell/fish-shell/releases&amp;gt;&lt;/code&gt;&lt;strong&gt;. See the &lt;code&gt;Building &amp;lt;#building&amp;gt;&lt;/code&gt;&lt;/strong&gt; section for instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Running fish&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, run &lt;code&gt;fish&lt;/code&gt; from your current shell to try fish out!&lt;/p&gt; &#xA;&lt;p&gt;Dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Running fish requires:&#xA;&#xA;-  A terminfo database, typically from curses or ncurses (preinstalled on most \*nix systems) - this needs to be the directory tree format, not the &#34;hashed&#34; database.&#xA;   If this is unavailable, fish uses an included xterm-256color definition.&#xA;-  some common \*nix system utilities (currently ``mktemp``), in&#xA;   addition to the basic POSIX utilities (``cat``, ``cut``, ``dirname``,&#xA;   ``file``, ``ls``, ``mkdir``, ``mkfifo``, ``rm``, ``sort``, ``tee``, ``tr``,&#xA;   ``uname`` and ``sed`` at least, but the full coreutils plus ``find`` and&#xA;   ``awk`` is preferred)&#xA;-  The gettext library, if compiled with&#xA;   translation support&#xA;&#xA;The following optional features also have specific requirements:&#xA;&#xA;-  builtin commands that have the ``--help`` option or print usage&#xA;   messages require ``nroff`` or ``mandoc`` for&#xA;   display&#xA;-  automated completion generation from manual pages requires Python 3.5+&#xA;-  the ``fish_config`` web configuration tool requires Python 3.5+ and a web browser&#xA;-  system clipboard integration (with the default Ctrl-V and Ctrl-X&#xA;   bindings) require either the ``xsel``, ``xclip``,&#xA;   ``wl-copy``/``wl-paste`` or ``pbcopy``/``pbpaste`` utilities&#xA;-  full completions for ``yarn`` and ``npm`` require the&#xA;   ``all-the-package-names`` NPM module&#xA;-  ``colorls`` is used, if installed, to add color when running ``ls`` on platforms&#xA;   that do not have color support (such as OpenBSD)&#xA;&#xA;Building&#xA;--------&#xA;&#xA;.. _dependencies-1:&#xA;&#xA;Dependencies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compiling fish requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust (version 1.70 or later)&lt;/li&gt; &#xA; &lt;li&gt;CMake (version 3.15 or later)&lt;/li&gt; &#xA; &lt;li&gt;a C compiler (for system feature detection and the test helper binary)&lt;/li&gt; &#xA; &lt;li&gt;PCRE2 (headers and libraries) - optional, this will be downloaded if missing&lt;/li&gt; &#xA; &lt;li&gt;gettext (headers and libraries) - optional, for translation support&lt;/li&gt; &#xA; &lt;li&gt;an Internet connection, as other dependencies will be downloaded automatically&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sphinx is also optionally required to build the documentation from a cloned git repository.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, running the full test suite requires Python 3, tmux, and the pexpect package.&lt;/p&gt; &#xA;&lt;p&gt;Building from source with CMake&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Rather than building from source, consider using a packaged build for your platform. Using the&#xA;steps below makes fish difficult to uninstall or upgrade. Release packages are available from the&#xA;links above, and up-to-date `development builds of fish are available for many platforms&#xA;&amp;lt;https://github.com/fish-shell/fish-shell/wiki/Development-builds&amp;gt;`__&#xA;&#xA;To install into ``/usr/local``, run:&#xA;&#xA;.. code:: bash&#xA;&#xA;   mkdir build; cd build&#xA;   cmake ..&#xA;   cmake --build .&#xA;   sudo cmake --install .&#xA;&#xA;The install directory can be changed using the&#xA;``-DCMAKE_INSTALL_PREFIX`` parameter for ``cmake``.&#xA;&#xA;CMake Build options&#xA;~~~~~~~~~~~~~~~~~~~&#xA;&#xA;In addition to the normal CMake build options (like ``CMAKE_INSTALL_PREFIX``), fish&#39;s CMake build has some other options available to customize it.&#xA;&#xA;- BUILD_DOCS=ON|OFF - whether to build the documentation. This is automatically set to OFF when Sphinx isn&#39;t installed.&#xA;- INSTALL_DOCS=ON|OFF - whether to install the docs. This is automatically set to on when BUILD_DOCS is or prebuilt documentation is available (like when building in-tree from a tarball).&#xA;- FISH_USE_SYSTEM_PCRE2=ON|OFF - whether to use an installed pcre2. This is normally autodetected.&#xA;- MAC_CODESIGN_ID=String|OFF - the codesign ID to use on Mac, or &#34;OFF&#34; to disable codesigning.&#xA;- WITH_GETTEXT=ON|OFF - whether to build with gettext support for translations.&#xA;- extra_functionsdir, extra_completionsdir and extra_confdir - to compile in an additional directory to be searched for functions, completions and configuration snippets&#xA;&#xA;Building fish as self-installable (experimental)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build fish as a self-installing binary.&lt;/p&gt; &#xA;&lt;p&gt;This will include all the datafiles like the included functions or web configuration tool in the main &lt;code&gt;fish&lt;/code&gt; binary.&lt;/p&gt; &#xA;&lt;p&gt;On the first interactive run, and whenever it notices they are out of date, it will extract the datafiles to ~/.local/share/fish/install/ (currently, subject to change). You can do this manually by running &lt;code&gt;fish --install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install fish as self-installable, just use &lt;code&gt;cargo&lt;/code&gt;, like::&lt;/p&gt; &#xA;&lt;p&gt;cargo install --path /path/to/fish # if you have a git clone cargo install --git &lt;a href=&#34;https://github.com/fish-shell/fish-shell&#34;&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; --tag 4.0.0 # to build from git with a specific version cargo install --git &lt;a href=&#34;https://github.com/fish-shell/fish-shell&#34;&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; # to build the current development snapshot without cloning&lt;/p&gt; &#xA;&lt;p&gt;This will place the binaries in &lt;code&gt;~/.cargo/bin/&lt;/code&gt;, but you can place them wherever you want.&lt;/p&gt; &#xA;&lt;p&gt;This build won&#39;t have the HTML docs (&lt;code&gt;help&lt;/code&gt; will open the online version) or translations.&lt;/p&gt; &#xA;&lt;p&gt;It will try to build the man pages with sphinx-build. If that is not available and you would like to include man pages, you need to install it and retrigger the build script, e.g. by setting FISH_BUILD_DOCS=1::&lt;/p&gt; &#xA;&lt;p&gt;FISH_BUILD_DOCS=1 cargo install --path .&lt;/p&gt; &#xA;&lt;p&gt;Setting it to &#34;0&#34; disables the inclusion of man pages.&lt;/p&gt; &#xA;&lt;p&gt;You can also link this build statically (but not against glibc) and move it to other computers.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Changes to the Code&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;code&gt;Guide for Developers &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;Questions, comments, rants and raves can be posted to the official fish mailing list at &lt;a href=&#34;https://lists.sourceforge.net/lists/listinfo/fish-users&#34;&gt;https://lists.sourceforge.net/lists/listinfo/fish-users&lt;/a&gt; or join us on our &lt;code&gt;matrix channel &amp;lt;https://matrix.to/#/#fish-shell:matrix.org&amp;gt;&lt;/code&gt;&lt;strong&gt;. Or use the &lt;code&gt;fish tag on Unix &amp;amp; Linux Stackexchange &amp;lt;https://unix.stackexchange.com/questions/tagged/fish&amp;gt;&lt;/code&gt;&lt;/strong&gt;. There is also a fish tag on Stackoverflow, but it is typically a poor fit.&lt;/p&gt; &#xA;&lt;p&gt;Found a bug? Have an awesome idea? Please &lt;code&gt;open an issue &amp;lt;https://github.com/fish-shell/fish-shell/issues/new&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;.. |Build Status| image:: &lt;a href=&#34;https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&#34;&gt;https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/fish-shell/fish-shell/actions&#34;&gt;https://github.com/fish-shell/fish-shell/actions&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>