<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-26T01:30:18Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheAppleTucker/backend-GPT</title>
    <updated>2023-01-26T01:30:18Z</updated>
    <id>tag:github.com,2023-01-26:/TheAppleTucker/backend-GPT</id>
    <link href="https://github.com/TheAppleTucker/backend-GPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT is all you need for the backend&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheAppleTucker/backend-GPT/main/LLM-IS-BACKEND.jpeg&#34; alt=&#34;Galaxy brain meme (a) Writing a backend (b) hiring a backend engineer (c) Asking ChatGPT for a backend (d) The LLM is the backend&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;People have been saying Github Copilot will replace programmers. We think that&#39;s wrong. We have all powerful models and we want to restrict them to writing code? All code has bugs!&lt;/p&gt; &#xA;&lt;p&gt;Code is not the ideal way to encode business logic. Code must be reviewed, and it does what you tell it, not what you want. The proper format for business logic is human intelligence.&lt;/p&gt; &#xA;&lt;p&gt;So we thought, who needs python and ec2s and biz logic and postgres?&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve built a entire Backend+Database powered by an LLM. It infers business logic based on the name of the API call and can persist a kilobyte of state!&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the experience of the future:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Instruct the LLM on the purpose of the backend (i.e. &#34;This is a todo list app&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Write the initial json blob for the database state (i.e. {todo_items: [{title: &#34;eat breakfast&#34;, completed: true}, {title: &#34;go to school&#34;, completed: false}]}&lt;/li&gt; &#xA; &lt;li&gt;Start making API calls! You now have infinite backend endpoints that will infer their own business logic and update the persistent state!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;This is the future we imagine&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can iterate on your frontend without knowing exactly what the backend needs to look like.&lt;/li&gt; &#xA; &lt;li&gt;Backend gives you the wrong format? &lt;code&gt;https://backend-gpt.com/chess/get_board_state()&lt;/code&gt; -&amp;gt; &lt;code&gt;https://backend-gpt.com/chess/get_board_state_as_fen()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mistype an API name? It doesn&#39;t matter!&lt;/li&gt; &#xA; &lt;li&gt;Serverless w/o the cold start: The only difference between your server and someone elses is the 1KB of state and the LLM instructions, these can be swapped out in milliseconds&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Still don&#39;t get it?&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s how it works in Parker&#39;s words&lt;/p&gt; &#xA;&lt;p&gt;We basically used GPT to handle all the backend logic for a todo-list app. We represented the state of the app as a json with some prepopulated entries which helped define the schema. Then we pass the prompt, the current state, and some user-inputted instruction/API call in and extract a response to the client + the new state. So the idea is that instead of writing backend routes, the LLM can handle all the basic CRUD logic for a simple app so instead of writing specific routes, you can input commands like add_five_housework_todos() or delete_last_two_todos() or sort_todos_alphabetically() . It tends to work better when the commands are expressed as functions/pseudo function calls but natural language instructions like delete last todos also work.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lyc8503/EasierConnect</title>
    <updated>2023-01-26T01:30:18Z</updated>
    <id>tag:github.com,2023-01-26:/lyc8503/EasierConnect</id>
    <link href="https://github.com/lyc8503/EasierConnect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sangfor EasyConnect protocol reimplementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EasierConnect&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🚫 &lt;strong&gt;[Disclaimer]&lt;/strong&gt; 本程序&lt;strong&gt;按原样提供&lt;/strong&gt;, 作者&lt;strong&gt;不对程序的正确性或可靠性提供保证&lt;/strong&gt;, 请使用者自行判断具体场景是否适合使用该程序, &lt;strong&gt;使用该程序造成的问题或后果由使用者自行承担&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;p&gt;本程序为 EasyConnect 客户端的开源实现, 旨在帮助高校学生在校外访问校内资源, 没有绕过相关流量审计或安全审查的功能. EasyConnect 的一切权利属深信服所有, 若相关人员对该程序有异议, 请邮箱联系我. (&lt;a href=&#34;mailto:admin@lyc8503.site&#34;&gt;admin@lyc8503.site&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;背景&lt;/h3&gt; &#xA;&lt;p&gt;国内众多高校都在使用深信服(Sangfor)公司的 EasyConnect 作为学校 VPN 的解决方案.&lt;/p&gt; &#xA;&lt;p&gt;但官方客户端使用上有诸多问题:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;L3 全局代理, 路由规则配置不当, 减慢网络速度, 劣化 NAT 类型&lt;/p&gt; &lt;p&gt;(比如想要 SSH 连接学校服务器的同时访问 Google 搜索资料, 代理也会经过 VPN, 速度可能大幅下降甚至不可用)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;与其他代理软件产生冲突, 与其他软件(如游戏反作弊)容易产生冲突&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装驱动&amp;amp;后台常驻, 占用资源, 安装该公司自行签发的 CA, 劫持系统 DLL, 降低系统安全性&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;软件设计对系统侵入性强, 卸载后仍有残留, 容易造成未知的问题&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;现有如 @Hagb 实现的 &lt;a href=&#34;https://github.com/Hagb/docker-easyconnect&#34;&gt;docker-easyconnect&lt;/a&gt; 方案使用 Docker 容器封印 EasyConnect, 也可以使用虚拟机封印 EasyConnect.&lt;/p&gt; &#xA;&lt;p&gt;不过我们在一些如手机/笔记本电脑/路由器之类的&#34;边缘设备&#34;上部署 Docker/虚拟机还是开销相对较大, 使用 vps 中转 EasyConnect 的裸 socks 代理也有一定的安全风险和不便(国内 vps 带宽受限).&lt;/p&gt; &#xA;&lt;p&gt;于是有了这个应该是目前最优雅简洁, 易于使用的 EasyConnect 客户端的替代品.&lt;/p&gt; &#xA;&lt;h3&gt;使用方法&lt;/h3&gt; &#xA;&lt;p&gt;本软件为 EasyConnect 的开源实现, 可以直接提供 Socks5 代理供其他应用使用.&lt;/p&gt; &#xA;&lt;p&gt;在 Release 中下载或自行拉去代码编译对应平台/架构的独立二进制文件在 cli 下执行即可.&lt;/p&gt; &#xA;&lt;p&gt;目前正常情况下运行基本稳定, 性能对比官方客户端无明显下降, 但仍需在不同使用场景下的更多测试.&lt;/p&gt; &#xA;&lt;p&gt;Complete:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Web login &amp;amp; binary protocol reimplement&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get Session ID &amp;amp; IP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Socks to L3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support 7.6.x versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Better code formatting &amp;amp; better logging&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Performace improvement&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;&lt;strong&gt;now Works on Linux TUN&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;now Works on All platforms(maybe) with socks5&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pack &amp;amp; Release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To-do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More tests&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Blackymas/NSPanel_HA_Blueprint</title>
    <updated>2023-01-26T01:30:18Z</updated>
    <id>tag:github.com,2023-01-26:/Blackymas/NSPanel_HA_Blueprint</id>
    <link href="https://github.com/Blackymas/NSPanel_HA_Blueprint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This allows you to configure your complete NSPanel via Blueprint with UI and without changing anything in the code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NSPanel Custom with HA Blueprint&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;You use our NSPanel version and are satisfied with it? Then we would be very happy about a donation to support our project.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=S974SWQMB8PB2&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/212499642-b2fd097a-0938-4bfc-b37b-74df64592c58.png&#34; alt=&#34;Paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fgithub.com%2FBlackymas%2FNSPanel_HA_Blueprint%2Fblob%2Fmain%2Fnspanel_blueprint.yaml&#34;&gt;&lt;img src=&#34;https://my.home-assistant.io/badges/blueprint_import.svg?sanitize=true&#34; alt=&#34;Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project allows you to configure your complete NSPanel via a Blueprint with UI.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;That means you don&#39;t have to customize any code or change any lines in the code.&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;So you have a nice graphical interface where you can build your NSPanel. And the best thing is, the installation takes only a few minutes.&lt;/p&gt; &#xA;&lt;p&gt;The goal was to create a version that allows everyone to use the NSpanel fully local without having to deal with programming or reading hours of documentation - &lt;em&gt;AND YES WE DID IT!!!!&lt;/em&gt; ;)&lt;/p&gt; &#xA;&lt;p&gt;📕 Full documentation and installation is available here &lt;a href=&#34;https://github.com/Blackymas/NSPanel_HA_Blueprint/wiki&#34;&gt;NSPanel Configuration, Setup and HowTo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;📌 Step by Step - &lt;a href=&#34;https://www.youtube.com/watch?v=3afPFg6kUdc&#34;&gt;Setup Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🚀 How to create &#34;Issues&#34; when I have a problem &lt;a href=&#34;https://github.com/Blackymas/NSPanel_HA_Blueprint/wiki&#34;&gt;WIKI HowTo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;⭐ All Feature Requests can be found here &lt;a href=&#34;https://github.com/Blackymas/NSPanel_HA_Blueprint/labels/new%20feature%20request&#34;&gt;All Feature Request&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🎉 Roadmap Roadmap can be found here &lt;a href=&#34;https://github.com/Blackymas/NSPanel_HA_Blueprint/labels/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💥 Please move pull request to DEV branch and not to main branch - thanks!&lt;/p&gt; &#xA;&lt;p&gt;🙋 WE ARE LOOKING FOR YOU! &lt;em&gt;&lt;strong&gt;We are always looking for people who would like to support this project. We are looking for help with &#34;programming new features, writing documentation or translating documentation to EN. If you are interested then please contact us :)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;NSPanel:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/212768891-9610d800-43c5-454f-a8b6-6b7c43677b5d.png&#34; alt=&#34;2 Home&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654022-c6d81263-ce56-4a84-917a-9d4911f19f55.png&#34; alt=&#34;3 Buttonpage&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/206879659-3aea30c1-b126-4d52-a869-abf6adfc8fa1.png&#34; alt=&#34;NEW Domains&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Home and Buttonpage)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654055-943d1910-7673-4d9f-ad81-7ef00d155e5a.png&#34; alt=&#34;4 lightsetting 1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654076-93e110df-f314-4cf1-8500-ed667f2202fd.png&#34; alt=&#34;5 Lightsetting 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Lightsettings - Brightness and TEMP Color)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654179-f7303b02-c886-4890-b976-cb498940a627.png&#34; alt=&#34;6 Lightsetting 3&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654189-4294b634-430f-423c-b170-9f1680f94b0e.png&#34; alt=&#34;7 Thermostat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Colorwheel and Thermostat)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654290-c6ec2f2f-7924-492c-914c-0d96dc3907e0.png&#34; alt=&#34;8 Cover&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654307-24000d00-b7e1-47eb-bd64-9e97b508db52.png&#34; alt=&#34;9 Weather&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Coversetting and Weather Forecast)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203654386-e4e574ad-8674-4268-84dd-1c4e40f98eb9.png&#34; alt=&#34;10 Settings&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203667473-d33523a4-3197-4838-9099-cccebfc727db.png&#34; alt=&#34;1 Boot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(NSPanel Settings and Boot Screen)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203723223-8afc0e44-51cf-49ed-8a49-8ba713716639.png&#34; alt=&#34;Device Setting 1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203724491-53ecd93d-bc7c-4c2d-850b-f106691e2639.png&#34; alt=&#34;Device Setting 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(HA Device Setting for Example temperature correction)&lt;/p&gt; &#xA;&lt;h2&gt;Blueprint:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203655004-a11f5a1c-d098-4e1a-958a-0293e50000b2.png&#34; alt=&#34;Blueprint 1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41958506/203655014-e6cae9df-aaf8-4537-8165-b8f44a177d3b.png&#34; alt=&#34;Blueprint 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use and simple configuration via Blueprint - no change in the code is necessary&lt;/li&gt; &#xA; &lt;li&gt;32 buttons on 4 button pages with long press function for settings (more buttons are also possible)&lt;/li&gt; &#xA; &lt;li&gt;Button design is automatically generated based on the selected entity&lt;/li&gt; &#xA; &lt;li&gt;Buttons show current brightness and cover position in the button itself&lt;/li&gt; &#xA; &lt;li&gt;Buttons label can be assigned via blueprint&lt;/li&gt; &#xA; &lt;li&gt;Weather + 5 days weather forecast&lt;/li&gt; &#xA; &lt;li&gt;Thermostat + Touch + Relay control for floor heating&lt;/li&gt; &#xA; &lt;li&gt;Light control (brightness-slider, colorwheel, TempColor-slider) - via long Press&lt;/li&gt; &#xA; &lt;li&gt;Cover control (open, close, position-slider) - via long press&lt;/li&gt; &#xA; &lt;li&gt;Settings page (display brightness, display dim brightness, auto-dim, sleep mode, reboot NSPanel)&lt;/li&gt; &#xA; &lt;li&gt;Swipe between pages&lt;/li&gt; &#xA; &lt;li&gt;Top menu with 10 icons for specific states&lt;/li&gt; &#xA; &lt;li&gt;Heating control (hot water)&lt;/li&gt; &#xA; &lt;li&gt;Modern design - design easy to change via Adobe Express (free + design template)&lt;/li&gt; &#xA; &lt;li&gt;2 physical switches&lt;/li&gt; &#xA; &lt;li&gt;and much more ;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Pages&lt;/h1&gt; &#xA;&lt;h2&gt;Home&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current weather with button to Weather Forcast page&lt;/li&gt; &#xA; &lt;li&gt;Hardware buttons can be freely assigned&lt;/li&gt; &#xA; &lt;li&gt;Hardware button label or without label&lt;/li&gt; &#xA; &lt;li&gt;Blue line indicates on or off of the entity&lt;/li&gt; &#xA; &lt;li&gt;Temperature outside&lt;/li&gt; &#xA; &lt;li&gt;Status icons at the top&lt;/li&gt; &#xA; &lt;li&gt;Room temperature with button to thermostat page&lt;/li&gt; &#xA; &lt;li&gt;Room humidity&lt;/li&gt; &#xA; &lt;li&gt;Hot water temperature&lt;/li&gt; &#xA; &lt;li&gt;Button to display settings page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Button Page&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;32 Button&lt;/li&gt; &#xA; &lt;li&gt;4 Button pages&lt;/li&gt; &#xA; &lt;li&gt;Button design is automatically generated based on the selected entity&lt;/li&gt; &#xA; &lt;li&gt;Buttons show current brightness and cover position in the button itself&lt;/li&gt; &#xA; &lt;li&gt;Buttons label can be assigned via blueprint&lt;/li&gt; &#xA; &lt;li&gt;all buttons with long press function&lt;/li&gt; &#xA; &lt;li&gt;automatic detection by long press if it is a light or cover for submenu&lt;/li&gt; &#xA; &lt;li&gt;swipe between all pages&lt;/li&gt; &#xA; &lt;li&gt;swipe also down and up for fast access to certain pages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Light Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Light current state&lt;/li&gt; &#xA; &lt;li&gt;Brightness Slider&lt;/li&gt; &#xA; &lt;li&gt;Colorwheel&lt;/li&gt; &#xA; &lt;li&gt;TempColor slider&lt;/li&gt; &#xA; &lt;li&gt;Jump back to the right button page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cover Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open and close cover&lt;/li&gt; &#xA; &lt;li&gt;Cover position via slider&lt;/li&gt; &#xA; &lt;li&gt;Cover battery value if available (I use Ikea roller blind)&lt;/li&gt; &#xA; &lt;li&gt;jump back to the right button page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thermostat&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Touch Temp control&lt;/li&gt; &#xA; &lt;li&gt;Outside temperature&lt;/li&gt; &#xA; &lt;li&gt;Hot water&lt;/li&gt; &#xA; &lt;li&gt;heating on, off and idle&lt;/li&gt; &#xA; &lt;li&gt;Hot water button&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Weather Forecast&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;5 days Weather Forecast via swipe (Integration Accuweather - but should also go with another integration)&lt;/li&gt; &#xA; &lt;li&gt;Lowest and highest temperature outside&lt;/li&gt; &#xA; &lt;li&gt;Date&lt;/li&gt; &#xA; &lt;li&gt;Rain probability&lt;/li&gt; &#xA; &lt;li&gt;Sunshine hours&lt;/li&gt; &#xA; &lt;li&gt;Sun pressure&lt;/li&gt; &#xA; &lt;li&gt;Thunderstorm probability&lt;/li&gt; &#xA; &lt;li&gt;Wind speed&lt;/li&gt; &#xA; &lt;li&gt;Night thunderstorm probability and wind speed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Display Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Restart NSPanel&lt;/li&gt; &#xA; &lt;li&gt;Sleep mode - display off after time X&lt;/li&gt; &#xA; &lt;li&gt;Display brightness slider&lt;/li&gt; &#xA; &lt;li&gt;Display dim brightness slider&lt;/li&gt; &#xA; &lt;li&gt;Status Brightness in %&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks to:&lt;/h2&gt; &#xA;&lt;p&gt;SmartHome Yourself: &lt;a href=&#34;https://www.youtube.com/c/SmarthomeyourselfDe_DIY&#34;&gt;https://www.youtube.com/c/SmarthomeyourselfDe_DIY&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Masto: &lt;a href=&#34;https://github.com/masto/NSPanel-Demo-Files&#34;&gt;https://github.com/masto/NSPanel-Demo-Files&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Marcfager: &lt;a href=&#34;https://github.com/marcfager/nspanel-mf&#34;&gt;https://github.com/marcfager/nspanel-mf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;lovejoy77: &lt;a href=&#34;https://github.com/lovejoy777/NSpanel&#34;&gt;https://github.com/lovejoy777/NSpanel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hellis81: &lt;a href=&#34;https://github.com/Hellis81/NS-panel&#34;&gt;https://github.com/Hellis81/NS-panel&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>