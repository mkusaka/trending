<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-28T01:28:58Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>andrewyng/aisuite</title>
    <updated>2024-11-28T01:28:58Z</updated>
    <id>tag:github.com,2024-11-28:/andrewyng/aisuite</id>
    <link href="https://github.com/andrewyng/aisuite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, unified interface to multiple Generative AI providers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aisuite&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, unified interface to multiple Generative AI providers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;aisuite&lt;/code&gt; makes it easy for developers to use multiple LLM through a standardized interface. Using an interface similar to OpenAI&#39;s, &lt;code&gt;aisuite&lt;/code&gt; makes it easy to interact with the most popular LLMs and compare the results. It is a thin wrapper around python client libraries, and allows creators to seamlessly swap out and test responses from different LLM providers without changing their code. Today, the library is primarily focussed on chat completions. We will expand it cover more use cases in near future.&lt;/p&gt; &#xA;&lt;p&gt;Currently supported providers are - OpenAI, Anthropic, Azure, Google, AWS, Groq, Mistral, HuggingFace and Ollama. To maximize stability, &lt;code&gt;aisuite&lt;/code&gt; uses either the HTTP endpoint or the SDK for making calls to the provider.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install just the base &lt;code&gt;aisuite&lt;/code&gt; package, or install a provider&#39;s package along with &lt;code&gt;aisuite&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This installs just the base package without installing any provider&#39;s SDK.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install aisuite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This installs aisuite along with anthropic&#39;s library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install &#39;aisuite[anthropic]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This installs all the provider-specific libraries&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install &#39;aisuite[all]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Set up&lt;/h2&gt; &#xA;&lt;p&gt;To get started, you will need API Keys for the providers you intend to use. You&#39;ll need to install the provider-specific library either separately or when installing aisuite.&lt;/p&gt; &#xA;&lt;p&gt;The API Keys can be set as environment variables, or can be passed as config to the aisuite Client constructor. You can use tools like &lt;a href=&#34;https://pypi.org/project/python-dotenv/&#34;&gt;&lt;code&gt;python-dotenv&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://direnv.net/&#34;&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt; to set the environment variables manually. Please take a look at the &lt;code&gt;examples&lt;/code&gt; folder to see usage.&lt;/p&gt; &#xA;&lt;p&gt;Here is a short example of using &lt;code&gt;aisuite&lt;/code&gt; to generate chat completion responses from gpt-4o and claude-3-5-sonnet.&lt;/p&gt; &#xA;&lt;p&gt;Set the API keys.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export OPENAI_API_KEY=&#34;your-openai-api-key&#34;&#xA;export ANTHROPIC_API_KEY=&#34;your-anthropic-api-key&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the python client.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import aisuite as ai&#xA;client = ai.Client()&#xA;&#xA;models = [&#34;openai:gpt-4o&#34;, &#34;anthropic:claude-3-5-sonnet-20240620&#34;]&#xA;&#xA;messages = [&#xA;    {&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;Respond in Pirate English.&#34;},&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Tell me a joke.&#34;},&#xA;]&#xA;&#xA;for model in models:&#xA;    response = client.chat.completions.create(&#xA;        model=model,&#xA;        messages=messages,&#xA;        temperature=0.75&#xA;    )&#xA;    print(response.choices[0].message.content)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the model name in the create() call uses the format - &lt;code&gt;&amp;lt;provider&amp;gt;:&amp;lt;model-name&amp;gt;&lt;/code&gt;. &lt;code&gt;aisuite&lt;/code&gt; will call the appropriate provider with the right parameters based on the provider value. For a list of provider values, you can look at the directory - &lt;code&gt;aisuite/providers/&lt;/code&gt;. The list of supported providers are of the format - &lt;code&gt;&amp;lt;provider&amp;gt;_provider.py&lt;/code&gt; in that directory. We welcome providers adding support to this library by adding an implementation file in this directory. Please see section below for how to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For more examples, check out the &lt;code&gt;examples&lt;/code&gt; directory where you will find several notebooks that you can run to experiment with the interface.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;aisuite is released under the MIT License. You are free to use, modify, and distribute the code for both commercial and non-commercial purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute, please read our &lt;a href=&#34;https://raw.githubusercontent.com/andrewyng/aisuite/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; and join our &lt;a href=&#34;https://discord.gg/T6Nvn8ExSb&#34;&gt;Discord&lt;/a&gt; server!&lt;/p&gt; &#xA;&lt;h2&gt;Adding support for a provider&lt;/h2&gt; &#xA;&lt;p&gt;We have made easy for a provider or volunteer to add support for a new platform.&lt;/p&gt; &#xA;&lt;h3&gt;Naming Convention for Provider Modules&lt;/h3&gt; &#xA;&lt;p&gt;We follow a convention-based approach for loading providers, which relies on strict naming conventions for both the module name and the class name. The format is based on the model identifier in the form &lt;code&gt;provider:model&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The provider&#39;s module file must be named in the format &lt;code&gt;&amp;lt;provider&amp;gt;_provider.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The class inside this module must follow the format: the provider name with the first letter capitalized, followed by the suffix &lt;code&gt;Provider&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hugging Face&lt;/strong&gt;: The provider class should be defined as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class HuggingfaceProvider(BaseProvider)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;in providers/huggingface_provider.py.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;: The provider class should be defined as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class OpenaiProvider(BaseProvider)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;in providers/openai_provider.py&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This convention simplifies the addition of new providers and ensures consistency across provider implementations.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wagoodman/dive</title>
    <updated>2024-11-28T01:28:58Z</updated>
    <id>tag:github.com,2024-11-28:/wagoodman/dive</id>
    <link href="https://github.com/wagoodman/dive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for exploring each layer in a docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/wagoodman/dive.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml&#34;&gt;&lt;img src=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml/badge.svg?sanitize=true&#34; alt=&#34;Validations&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wagoodman/dive&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/wagoodman/dive&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT%202.0-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/wagoodman&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To analyze a Docker image simply run dive with an image tag/id/digest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image-tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can dive with docker command directly&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias dive=&#34;docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive&#34;&#xA;dive &amp;lt;your-image-tag&amp;gt;&#xA;&#xA;# for example&#xA;dive nginx:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to build your image then jump straight into analyzing it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building on Macbook (supporting only the Docker container engine)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;      -v /var/run/docker.sock:/var/run/docker.sock \&#xA;      -v  &#34;$(pwd)&#34;:&#34;$(pwd)&#34; \&#xA;      -w &#34;$(pwd)&#34; \&#xA;      -v &#34;$HOME/.dive.yaml&#34;:&#34;$HOME/.dive.yaml&#34; \&#xA;      wagoodman/dive:latest build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can run this in your CI pipeline to ensure you&#39;re keeping wasted space to a minimum (this skips the UI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CI=true dive &amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo-ci.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is beta quality!&lt;/strong&gt; &lt;em&gt;Feel free to submit an issue if you want a new feature or find a bug :)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show Docker image contents broken down by layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Indicate what&#39;s changed in each layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Estimate &#34;image efficiency&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage &#34;score&#34; and total wasted file space is provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick build/analysis cycles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can build a Docker image and do an immediate analysis with one command: &lt;code&gt;dive build -t some-tag .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You only need to replace your &lt;code&gt;docker build&lt;/code&gt; command with the same &lt;code&gt;dive build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CI Integration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Analyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set &lt;code&gt;CI=true&lt;/code&gt; in the environment when invoking any valid dive command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiple Image Sources and Container Engines Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the &lt;code&gt;--source&lt;/code&gt; option, you can select where to fetch the container image from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image&amp;gt; --source &amp;lt;source&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;source&amp;gt;://&amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With valid &lt;code&gt;source&lt;/code&gt; options as such:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;: Docker engine (the default option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-archive&lt;/code&gt;: A Docker Tar Archive from disk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;podman&lt;/code&gt;: Podman engine (linux only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using debs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb&#xA;sudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using snap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap install docker&#xA;sudo snap install dive&#xA;sudo snap connect dive:docker-executables docker:docker-executables&#xA;sudo snap connect dive:docker-daemon docker:docker-daemon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;RHEL/Centos&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;rpm -i dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available in the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/dive/&#34;&gt;extra repository&lt;/a&gt; and can be installed via &lt;a href=&#34;https://wiki.archlinux.org/title/Pacman&#34;&gt;pacman&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download the latest Darwin build from the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go tools&lt;/strong&gt; Requires Go version 1.10 or higher.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: installing in this way you will not see a proper version when running &lt;code&gt;dive -v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nix/NixOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;On NixOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixos.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On non-NixOS (Linux, Mac)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixpkgs.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull quay.io/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running you&#39;ll need to include the docker socket file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   DOCKER_API_VERSION=1.37 dive ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are running with a docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    -e DOCKER_API_VERSION=1.37 \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI Integration&lt;/h2&gt; &#xA;&lt;p&gt;When running dive with the environment variable &lt;code&gt;CI=true&lt;/code&gt; then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a &lt;code&gt;.dive-ci&lt;/code&gt; file that you can put at the root of your repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rules:&#xA;  # If the efficiency is measured below X%, mark as failed.&#xA;  # Expressed as a ratio between 0-1.&#xA;  lowestEfficiency: 0.95&#xA;&#xA;  # If the amount of wasted space is at least X or larger than X, mark as failed.&#xA;  # Expressed in B, KB, MB, and GB.&#xA;  highestWastedBytes: 20MB&#xA;&#xA;  # If the amount of wasted space makes up for X% or more of the image, mark as failed.&#xA;  # Note: the base image layer is NOT included in the total image size.&#xA;  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.&#xA;  highestUserWastedPercent: 0.20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the CI config path with the &lt;code&gt;--ci-config&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;KeyBindings&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key Binding&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + C&lt;/kbd&gt; or &lt;kbd&gt;Q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch between the layer and filetree views&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see aggregated image modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + L&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see current layer modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse a directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse all directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide added files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide removed files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide modified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + U&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide unmodified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + B&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide file attributes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;UI Configuration&lt;/h2&gt; &#xA;&lt;p&gt;No configuration is necessary, however, you can create a config file and override values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# supported options are &#34;docker&#34; and &#34;podman&#34;&#xA;container-engine: docker&#xA;# continue with analysis even if there are errors parsing the image archive&#xA;ignore-errors: false&#xA;log:&#xA;  enabled: true&#xA;  path: ./dive.log&#xA;  level: info&#xA;&#xA;# Note: you can specify multiple bindings by separating values with a comma.&#xA;# Note: UI hinting is derived from the first binding&#xA;keybinding:&#xA;  # Global bindings&#xA;  quit: ctrl+c&#xA;  toggle-view: tab&#xA;  filter-files: ctrl+f, ctrl+slash&#xA;&#xA;  # Layer view specific bindings&#xA;  compare-all: ctrl+a&#xA;  compare-layer: ctrl+l&#xA;&#xA;  # File view specific bindings&#xA;  toggle-collapse-dir: space&#xA;  toggle-collapse-all-dir: ctrl+space&#xA;  toggle-added-files: ctrl+a&#xA;  toggle-removed-files: ctrl+r&#xA;  toggle-modified-files: ctrl+m&#xA;  toggle-unmodified-files: ctrl+u&#xA;  toggle-filetree-attributes: ctrl+b&#xA;  page-up: pgup&#xA;  page-down: pgdn&#xA;&#xA;diff:&#xA;  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.&#xA;  hide:&#xA;    - added&#xA;    - removed&#xA;    - modified&#xA;    - unmodified&#xA;&#xA;filetree:&#xA;  # The default directory-collapse state&#xA;  collapse-dir: false&#xA;&#xA;  # The percentage of screen width the filetree should take on the screen (must be &amp;gt;0 and &amp;lt;1)&#xA;  pane-width: 0.5&#xA;&#xA;  # Show the file attributes next to the filetree&#xA;  show-attributes: true&#xA;&#xA;layer:&#xA;  # Enable showing all changes from this layer and every previous layer&#xA;  show-aggregated-changes: false&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;dive will search for configs in the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_DIRS/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.config/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.dive.yaml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;.yml&lt;/code&gt; can be used instead of &lt;code&gt;.yaml&lt;/code&gt; if desired.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skills/introduction-to-github</title>
    <updated>2024-11-28T01:28:58Z</updated>
    <id>tag:github.com,2024-11-28:/skills/introduction-to-github</id>
    <link href="https://github.com/skills/introduction-to-github" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get started using GitHub in less than an hour.&lt;/p&gt;&lt;hr&gt;&lt;header&gt; &#xA; &lt;!--&#xA;  &lt;&lt;&lt; Author notes: Course header &gt;&gt;&gt;&#xA;  Include a 1280×640 image, course title in sentence case, and a concise description in emphasis.&#xA;  In your repository settings: enable template repository, add your 1280×640 social image, auto delete head branches.&#xA;  Add your open source license, GitHub uses MIT license.&#xA;--&gt; &#xA; &lt;h1&gt;Introduction to GitHub&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;Get started using GitHub in less than an hour.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/header&gt; &#xA;&lt;!--&#xA;  &lt;&lt;&lt; Author notes: Course start &gt;&gt;&gt;&#xA;  Include start button, a note about Actions minutes,&#xA;  and tell the learner why they should take the course.&#xA;--&gt; &#xA;&lt;h2&gt;Welcome&lt;/h2&gt; &#xA;&lt;p&gt;People use GitHub to build some of the most advanced technologies in the world. Whether you’re visualizing data or building a new game, there’s a whole community and set of tools on GitHub that can help you do it even better. GitHub Skills’ “Introduction to GitHub” course guides you through everything you need to start contributing in less than an hour.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Who is this for&lt;/strong&gt;: New developers, new GitHub users, and students.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What you&#39;ll learn&lt;/strong&gt;: We&#39;ll introduce repositories, branches, commits, and pull requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What you&#39;ll build&lt;/strong&gt;: We&#39;ll make a short Markdown file you can use as your &lt;a href=&#34;https://docs.github.com/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme&#34;&gt;profile README&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: None. This course is a great introduction for your first day on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How long&lt;/strong&gt;: This course takes less than one hour to complete.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this course, you will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a branch&lt;/li&gt; &#xA; &lt;li&gt;Commit a file&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request&lt;/li&gt; &#xA; &lt;li&gt;Merge your pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How to start this course&lt;/h3&gt; &#xA;&lt;!-- For start course, run in JavaScript:&#xA;&#39;https://github.com/new?&#39; + new URLSearchParams({&#xA;  template_owner: &#39;skills&#39;,&#xA;  template_name: &#39;introduction-to-github&#39;,&#xA;  owner: &#39;@me&#39;,&#xA;  name: &#39;skills-introduction-to-github&#39;,&#xA;  description: &#39;My clone repository&#39;,&#xA;  visibility: &#39;public&#39;,&#xA;}).toString()&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/new?template_owner=skills&amp;amp;template_name=introduction-to-github&amp;amp;owner=%40me&amp;amp;name=skills-introduction-to-github&amp;amp;description=My+clone+repository&amp;amp;visibility=public&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1221423/235727646-4a590299-ffe5-480d-8cd5-8194ea184546.svg?sanitize=true&#34; alt=&#34;start-course&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Right-click &lt;strong&gt;Start course&lt;/strong&gt; and open the link in a new tab.&lt;/li&gt; &#xA; &lt;li&gt;In the new tab, most of the prompts will automatically fill in for you. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For owner, choose your personal account or an organization to host the repository.&lt;/li&gt; &#xA;   &lt;li&gt;We recommend creating a public repository, as private repositories will &lt;a href=&#34;https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions&#34;&gt;use Actions minutes&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Scroll down and click the &lt;strong&gt;Create repository&lt;/strong&gt; button at the bottom of the form.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;After your new repository is created, wait about 20 seconds, then refresh the page. Follow the step-by-step instructions in the new repository&#39;s README.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;footer&gt; &#xA; &lt;!--&#xA;  &lt;&lt;&lt; Author notes: Footer &gt;&gt;&gt;&#xA;  Add a link to get support, GitHub status page, code of conduct, license link.&#xA;--&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;Get help: &lt;a href=&#34;https://github.com/orgs/skills/discussions/categories/introduction-to-github&#34;&gt;Post in our discussion board&lt;/a&gt; • &lt;a href=&#34;https://www.githubstatus.com/&#34;&gt;Review the GitHub status page&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;© 2024 GitHub • &lt;a href=&#34;https://www.contributor-covenant.org/version/2/1/code_of_conduct/code_of_conduct.md&#34;&gt;Code of Conduct&lt;/a&gt; • &lt;a href=&#34;https://gh.io/mit&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/footer&gt;</summary>
  </entry>
</feed>