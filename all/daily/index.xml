<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-16T01:30:55Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zhiqi-li/BEVFormer</title>
    <updated>2022-06-16T01:30:55Z</updated>
    <id>tag:github.com,2022-06-16:/zhiqi-li/BEVFormer</id>
    <link href="https://github.com/zhiqi-li/BEVFormer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the official implementation of BEVFormer, a camera-only framework for autonomous driving perception, e.g., 3D object detection and semantic map segmentation.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;BEVFormer: a Cutting-edge Baseline for Camera-based Detection&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/27915819/161392594-fc0082f7-5c37-4919-830a-2dd423c1d025.mp4&#34;&gt;https://user-images.githubusercontent.com/27915819/161392594-fc0082f7-5c37-4919-830a-2dd423c1d025.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;BEVFormer: Learning Bird&#39;s-Eye-View Representation from Multi-Camera Images via Spatiotemporal Transformers&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;http://arxiv.org/abs/2203.17270&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://www.zhihu.com/question/521842610/answer/2431585901&#34;&gt;Blog&lt;/a&gt; (in Chinese) | Presentation Slides at CVPR 2022 Workshop (soon) | Live-streaming video on BEV Perception (soon)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;News&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2022/6/13]: We release an initial version of BEVFormer. It achieves a baseline result of &lt;strong&gt;51.7%&lt;/strong&gt; NDS on nuScenes.&lt;/li&gt; &#xA; &lt;li&gt;[2022/5/23]: Built on top of BEVFormer, &lt;strong&gt;BEVFormer++&lt;/strong&gt;, gathering up all best practices in recent SOTAs and our unique modification, ranks &lt;strong&gt;1st&lt;/strong&gt; on &lt;a href=&#34;https://waymo.com/open/challenges/2022/3d-camera-only-detection/&#34;&gt;Waymo Open Datast 3D Camera-Only Detection Challenge&lt;/a&gt;. We will present BEVFormer++ on CVPR 2022 Autonomous Driving &lt;a href=&#34;https://cvpr2022.wad.vision/&#34;&gt;Workshop&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[2022/3/10]: BEVFormer achieve the SOTA on &lt;a href=&#34;https://nuscenes.org/object-detection?externalData=all&amp;amp;mapData=all&amp;amp;modalities=Camera&#34;&gt;nuScenes Detection Task&lt;/a&gt; with &lt;strong&gt;56.9% NDS&lt;/strong&gt; (camera-only)!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Abstract&lt;/h1&gt; &#xA;&lt;p&gt;In this work, the authors present a new framework termed BEVFormer, which learns unified BEV representations with spatiotemporal transformers to support multiple autonomous driving perception tasks. In a nutshell, BEVFormer exploits both spatial and temporal information by interacting with spatial and temporal space through predefined grid-shaped BEV queries. To aggregate spatial information, the authors design a spatial cross-attention that each BEV query extracts the spatial features from the regions of interest across camera views. For temporal information, the authors propose a temporal self-attention to recurrently fuse the history BEV information. The proposed approach achieves the new state-of-the-art &lt;strong&gt;56.9%&lt;/strong&gt; in terms of NDS metric on the nuScenes test set, which is &lt;strong&gt;9.0&lt;/strong&gt; points higher than previous best arts and on par with the performance of LiDAR-based baselines.&lt;/p&gt; &#xA;&lt;h1&gt;Methods&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhiqi-li/BEVFormer/master/figs/arch.png&#34; alt=&#34;method&#34; title=&#34;model arch&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhiqi-li/BEVFormer/master/docs/install.md&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhiqi-li/BEVFormer/master/docs/prepare_dataset.md&#34;&gt;Prepare Dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhiqi-li/BEVFormer/master/docs/getting_started.md&#34;&gt;Run and Eval&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Model Zoo&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Backbone&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Lr Schd&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;NDS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;mAP&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Config&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zhiqi-li/storage/releases/download/v1.0/r101_dcn_fcos3d_pretrain.pth&#34;&gt;R101-DCN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BEVFormer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24ep&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;41.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhiqi-li/BEVFormer/master/projects/configs/bevformer/bevformer_base.py&#34;&gt;config&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zhiqi-li/storage/releases/download/v1.0/bevformer_r101_dcn_24ep.pth&#34;&gt;model&lt;/a&gt;/&lt;a href=&#34;https://github.com/zhiqi-li/storage/releases/download/v1.0/bevformer_r101_dcn_24ep.log&#34;&gt;log&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Catalog&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; BEV Segmentation checkpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; BEV Segmentation code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3D Detection checkpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3D Detection code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Initialization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Bibtex&lt;/h1&gt; &#xA;&lt;p&gt;If this work is helpful for your research, please consider citing the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{li2022bevformer,&#xA;  title={BEVFormer: Learning Bird’s-Eye-View Representation from Multi-Camera Images via Spatiotemporal Transformers},&#xA;  author={Li, Zhiqi and Wang, Wenhai and Li, Hongyang and Xie, Enze and Sima, Chonghao and Lu, Tong and Qiao, Yu and Dai, Jifeng}&#xA;  journal={arXiv preprint arXiv:2203.17270},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;p&gt;Many thanks to these excellent open source projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WangYueFt/detr3d&#34;&gt;detr3d&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection3d&#34;&gt;mmdet3d&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;↳ Stargazers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhiqi-li/BEVFormer/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/zhiqi-li/BEVFormer&#34; alt=&#34;Stargazers repo roster for @nastyox/Repo-Roster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;↳ Forkers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhiqi-li/BEVFormer/network/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/zhiqi-li/BEVFormer&#34; alt=&#34;Forkers repo roster for @nastyox/Repo-Roster&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lxgr-linux/pokete</title>
    <updated>2022-06-16T01:30:55Z</updated>
    <id>tag:github.com,2022-06-16:/lxgr-linux/pokete</id>
    <link href="https://github.com/lxgr-linux/pokete" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A terminal based Pokemon like game&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/main_validate.yml&#34;&gt;&lt;img src=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/main_validate.yml/badge.svg?sanitize=true&#34; alt=&#34;Code-Validation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/documentation.yml&#34;&gt;&lt;img src=&#34;https://github.com/lxgr-linux/pokete/actions/workflows/documentation.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub-Pages Build&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/github/pipenv/locked/python-version/lxgr-linux/pokete&#34; alt=&#34;Python Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/lxgr-linux/pokete&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/aur/version/pokete-git&#34; alt=&#34;AUR version&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/lxgr-linux/pokete&#34; alt=&#34;Total Lines of Code&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/lxgr-linux/pokete&#34; alt=&#34;Open Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/lxgr-linux/pokete&#34; alt=&#34;Open pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/lxgr-linux/pokete&#34; alt=&#34;commit activity&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/lxgr-linux/pokete/latest/master?include_prereleases&#34; alt=&#34;commits since last release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/lxgr-linux/pokete&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Pokete -- Grey Edition&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/assets/ss/ss01.png&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/assets/pics.md&#34;&gt;See more example pics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;p&gt;Pokete is a small terminal based game in the style of a very popular and old game by Gamefreak.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;For Linux just do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# pip install scrap_engine&#xA;$ git clone https://github.com/lxgr-linux/pokete.git&#xA;$ ./pokete/pokete.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also install it from the AUR:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ buildaur -S pokete-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can just run the AppImage from tge release page.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: In that case you first have to create the &lt;code&gt;~/.cache/pokete/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;For Windows and OSX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/lxgr-linux/pokete.git&#xA;pip install scrap_engine&#xA;pip install pynput&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run just execute &lt;code&gt;pokete.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The game can be run normaly by not supplying any options. For non gameplay related usage see &lt;code&gt;--help&lt;/code&gt;. Try it out &lt;a href=&#34;https://replit.com/@lxgr-linux/pokete&#34;&gt;online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to play?&lt;/h2&gt; &#xA;&lt;p&gt;Imagine you&#39;re a Pokete-Trainer and your goal is it to run around in the world and catch/train as many Poketes as possible and to get the best trainer.&lt;/p&gt; &#xA;&lt;p&gt;First of all you get a starter Pokete (Steini), that you can use to fight battles with other Poketes. The controls are w a s d to walk around.&lt;/p&gt; &#xA;&lt;p&gt;When entering the high grass (;), you may be attacked by a wild Pokete. By pressing 1 you can choose between the attacks (as long their AP is over 0) your Pokete has, and by pressing the according number, or navigating with the &#34;*&#34;-cursor to the attack and pressing enter. The wild Pokete will fight back, you can kill it and gain XP to level up your Pokete or you can catch it to have it fight for you. To catch a Pokete you have to first weaken the enemy and then throw a Poketeball. And with a bit luck you can catch it. Pressing the &#34;1&#34; key you can take a look at your current deck, see the detailed information of your Pokete and your attacks or rearrange them. Changes will only be saved by quitting the game using the exit function.&lt;/p&gt; &#xA;&lt;p&gt;Since you&#39;re a Pokete-Trainer, you can also fight against other trainers (the other &#34;a&#34; in the middle of the landscape). He will start a fight with you when you get close enough to him. You can not escape from such a trainer fight, you either have to win, or lose. These trainer fights give double the XP.&lt;/p&gt; &#xA;&lt;p&gt;When one of your Poketes die, or is too weak, you can heal it by going into the house (Pokete-Center), talk the the person there and choose the healing option. Here you can also take a look at all of your Poketes, and not just the six in your team. The ones marked with an &#34;o&#34; are the ones in your deck.&lt;/p&gt; &#xA;&lt;p&gt;By pressing &#34;e&#34; you can get into a menu where player name, and later other settings, can be changed.&lt;/p&gt; &#xA;&lt;p&gt;The red balls all over the map are Poketeballs. You&#39;ll need these to catch Poketes. Stepping on such a ball will add it to your inventory.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/HowToPlay.md&#34;&gt;How to play&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Game depth&lt;/h2&gt; &#xA;&lt;p&gt;Not only are there Poketes that are stronger than others, but also Poketes with different types, which are effective against some types and ineffective against others.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Effective against&lt;/th&gt; &#xA;   &lt;th&gt;Ineffective against&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Normal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stone&lt;/td&gt; &#xA;   &lt;td&gt;Flying, Fire&lt;/td&gt; &#xA;   &lt;td&gt;Plant&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plant&lt;/td&gt; &#xA;   &lt;td&gt;Stone, Ground, Water&lt;/td&gt; &#xA;   &lt;td&gt;Fire, Ice&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Water&lt;/td&gt; &#xA;   &lt;td&gt;Stone, Flying, Fire&lt;/td&gt; &#xA;   &lt;td&gt;Plant, Ice&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fire&lt;/td&gt; &#xA;   &lt;td&gt;Flying, Plant, Undead, Ice&lt;/td&gt; &#xA;   &lt;td&gt;Stone, Water&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ground&lt;/td&gt; &#xA;   &lt;td&gt;Normal&lt;/td&gt; &#xA;   &lt;td&gt;Flying&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Electro&lt;/td&gt; &#xA;   &lt;td&gt;Stone, Flying&lt;/td&gt; &#xA;   &lt;td&gt;Ground&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flying&lt;/td&gt; &#xA;   &lt;td&gt;Plant&lt;/td&gt; &#xA;   &lt;td&gt;Stone&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Undead&lt;/td&gt; &#xA;   &lt;td&gt;Normal, Ground, Plant, Water&lt;/td&gt; &#xA;   &lt;td&gt;Fire&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ice&lt;/td&gt; &#xA;   &lt;td&gt;Water, Plant&lt;/td&gt; &#xA;   &lt;td&gt;Fire&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For additional information you can see &lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/wiki.md&#34;&gt;wiki&lt;/a&gt; or &lt;a href=&#34;https://lxgr-linux.github.io/pokete/wiki-multi&#34;&gt;the multi-page wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mods&lt;/h2&gt; &#xA;&lt;p&gt;Mods can be written to extend Pokete. To load a mod, the mod has to be placed in &lt;code&gt;mods&lt;/code&gt; and mods have to be enabled in the menu. For an example mod see &lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/mods/example.py&#34;&gt;example.py&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In conversations you can very easily skip the text printing by pressing any key&lt;/li&gt; &#xA; &lt;li&gt;When you want to see the next text in a conversation: also just press any key&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t play on full-screen; the game then starts to be overseeable&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t be offended by the other trainers; they may swear at you&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add a wizard to set name and choose starter Pokete at the start&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add More maps&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add types for attacks and Poketes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add evolving&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add more than one Pokete for trainers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Coloured Poketes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A store to buy Poketeballs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add potions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Intro&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add trading&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Poketedex&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Effects&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add colour codes for types&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Pokete depends on python3 and the scrap_engine module. On windows pynput has to be installed too.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/pokete_classes/index.html&#34;&gt;Documentation for pokete_classes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/pokete_data/index.html&#34;&gt;Documentation for pokete_data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/gen_wiki.html&#34; title=&#34;gen_wiki.py&#34;&gt;Documentation for the gen-wiki file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/prepare_pages.html&#34; title=&#34;prepare_pages.py&#34;&gt;Documentation for the prepare_pages file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/pokete_general_use_fns.html&#34; title=&#34;pokete_general_use_fns.py&#34;&gt;Documentation for the pokete_general_use_fns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxgr-linux.github.io/pokete/doc/pokete.html&#34; title=&#34;pokete.py&#34;&gt;Documentation for the main file &#34;pokete.py&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;For release information see &lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/Changelog.md&#34;&gt;Changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute what ever you want to this game. New Pokete contributions are especially welcome, those are located in /pokete_data/poketes.py&lt;/p&gt; &#xA;&lt;p&gt;To see how to add more poketes/types/attacks to the game, see &lt;a href=&#34;https://raw.githubusercontent.com/lxgr-linux/pokete/master/DevGuide.md&#34;&gt;the DevGuide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After adding new Poketes and/or Attacks you may want to run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./gen_wiki.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to regenerate the wiki and adding them to it.&lt;/p&gt; &#xA;&lt;h2&gt;Trouble shooting&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re experiencing problems on Japanese systems take a look at &lt;a href=&#34;https://gist.github.com/z80oolong/c7523367b798bdda094f859342f4c8be&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucacasonato/fresh</title>
    <updated>2022-06-16T01:30:55Z</updated>
    <id>tag:github.com,2022-06-16:/lucacasonato/fresh</id>
    <link href="https://github.com/lucacasonato/fresh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Preact, but super edgy&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Not yet 1.0. Many things are subject to change. Documentation is lacking in many places. Try it out and give us feedback!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;fresh&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/lucacasonato/fresh/main/www/static/logo.svg?sanitize=true&#34; height=&#34;150px&#34; alt=&#34;the fresh logo: a sliced lemon dripping with juice&#34;&gt; &#xA;&lt;p&gt;The next-gen web framework.&lt;/p&gt; &#xA;&lt;p&gt;Fresh is a web framework that lets you build projects very fast, highly dynamic, and without the need of a build step. Fresh embraces isomorphic JavaScript like never before. Write a JSX component, have it render on the edge just-in-time, and then enhance it with client side JS for great interactivity.&lt;/p&gt; &#xA;&lt;p&gt;Fresh does not have a build step - you write your code, deploy it to &lt;a href=&#34;https://deno.com/deploy&#34;&gt;Deno Deploy&lt;/a&gt;, and from there everything is handled by the framework.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No build step&lt;/li&gt; &#xA; &lt;li&gt;Zero config necessary&lt;/li&gt; &#xA; &lt;li&gt;JIT rendering on the edge&lt;/li&gt; &#xA; &lt;li&gt;Tiny (example is 0-3KB of runtime JS)&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optional client side hydration&lt;/li&gt; &#xA; &lt;li&gt;TypeScript out of the box&lt;/li&gt; &#xA; &lt;li&gt;File-system routing à la Next.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://fresh.deno.dev/docs/&#34;&gt;documentation&lt;/a&gt; is available on &lt;a href=&#34;https://fresh.deno.dev/&#34;&gt;fresh.deno.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;You can scaffold a new project by running the Fresh init script. To scaffold a project in the &lt;code&gt;myproject&lt;/code&gt; folder, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;deno run -A --no-check https://raw.githubusercontent.com/lucacasonato/fresh/main/init.ts my-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To now start the project, use &lt;code&gt;deno task&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;deno task start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To deploy the script to &lt;a href=&#34;https://deno.com/deploy&#34;&gt;Deno Deploy&lt;/a&gt;, push your project to GitHub, create a Fresh project, and link it to &lt;strong&gt;&lt;code&gt;main.ts&lt;/code&gt;&lt;/strong&gt; file in the created repository.&lt;/p&gt; &#xA;&lt;p&gt;For a more in-depth getting started guide, visit the &lt;a href=&#34;https://fresh.deno.dev/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt; page in the Fresh docs.&lt;/p&gt;</summary>
  </entry>
</feed>