<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-03T01:29:54Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>snesrev/zelda3</title>
    <updated>2023-02-03T01:29:54Z</updated>
    <id>tag:github.com,2023-02-03:/snesrev/zelda3</id>
    <link href="https://github.com/snesrev/zelda3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zelda3&lt;/h1&gt; &#xA;&lt;p&gt;A reimplementation of Zelda 3.&lt;/p&gt; &#xA;&lt;p&gt;Our discord server is: &lt;a href=&#34;https://discord.gg/AJJbJAzNNJ&#34;&gt;https://discord.gg/AJJbJAzNNJ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This is a reverse engineered clone of Zelda 3 - A Link to the Past.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s around 70-80kLOC of C code, and reimplements all parts of the original game. The game is playable from start to end.&lt;/p&gt; &#xA;&lt;p&gt;You need a copy of the ROM to extract game resources (levels, images). Then once that&#39;s done, the ROM is no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;It uses the PPU and DSP implementation from &lt;a href=&#34;https://github.com/elzo-d/LakeSnes&#34;&gt;LakeSnes&lt;/a&gt;, but with lots of speed optimizations. Additionally, it can be configured to also run the original machine code side by side. Then the RAM state is compared after each frame, to verify that the C implementation is correct.&lt;/p&gt; &#xA;&lt;p&gt;I got much assistance from spannerism&#39;s Zelda 3 JP disassembly and the other ones that documented loads of function names and variables.&lt;/p&gt; &#xA;&lt;h2&gt;Additional features&lt;/h2&gt; &#xA;&lt;p&gt;A bunch of features have been added that are not supported by the original game. Some of them are:&lt;/p&gt; &#xA;&lt;p&gt;Support for pixel shaders.&lt;/p&gt; &#xA;&lt;p&gt;Support for enhanced aspect ratios of 16:9 or 16:10.&lt;/p&gt; &#xA;&lt;p&gt;Higher quality world map.&lt;/p&gt; &#xA;&lt;p&gt;Support for MSU audio tracks.&lt;/p&gt; &#xA;&lt;p&gt;Secondary item slot on button X (Hold X in inventory to select).&lt;/p&gt; &#xA;&lt;p&gt;Switching current item with L/R keys.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Python &amp;amp; libraries on Windows (required for asset extraction steps)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://www.python.org/ftp/python/3.10.7/python-3.10.7-amd64.exe&#34;&gt;Python&lt;/a&gt; installer and install&lt;/li&gt; &#xA; &lt;li&gt;Open the command prompt&lt;/li&gt; &#xA; &lt;li&gt;Upgrade pip &amp;amp; install &lt;code&gt;pillow&lt;/code&gt; and &lt;code&gt;pyyaml&lt;/code&gt; by typing &lt;code&gt;python -m pip install --upgrade pip pillow pyyaml&lt;/code&gt; and hit enter&lt;/li&gt; &#xA; &lt;li&gt;Close the command prompt&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compiling on Windows with TCC (1mb Tiny C Compiler)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the project by clicking &#34;Code &amp;gt; Download ZIP&#34; on the github page&lt;/li&gt; &#xA; &lt;li&gt;Extract the ZIP to your hard drive&lt;/li&gt; &#xA; &lt;li&gt;Place the USA rom named &lt;code&gt;zelda3.sfc&lt;/code&gt; in the &#34;\tables&#34; subfolder&lt;/li&gt; &#xA; &lt;li&gt;Open the command prompt and navigate to that folder&lt;/li&gt; &#xA; &lt;li&gt;Extract resources by typing &lt;code&gt;python extract_resources.py&lt;/code&gt; and hit enter&lt;/li&gt; &#xA; &lt;li&gt;Compile the extracted resources by typing &lt;code&gt;python compile_resources.py&lt;/code&gt; and hit enter&lt;/li&gt; &#xA; &lt;li&gt;Close the command prompt&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/FitzRoyX/tinycc/releases/download/tcc_20221020/tcc_20221020.zip&#34;&gt;TCC&lt;/a&gt; and extract to the &#34;\third_party&#34; subfolder&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/libsdl-org/SDL/releases/download/release-2.24.1/SDL2-devel-2.24.1-VC.zip&#34;&gt;SDL2&lt;/a&gt; and extract to the &#34;\third_party&#34; subfolder&lt;/li&gt; &#xA; &lt;li&gt;Double-click &lt;code&gt;run_with_tcc.bat&lt;/code&gt; in the main dir to create &lt;code&gt;zelda3.exe&lt;/code&gt; in that same dir&lt;/li&gt; &#xA; &lt;li&gt;Configure with &lt;code&gt;zelda3.ini&lt;/code&gt; in the main dir&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compiling on Windows with Visual Studio (4.5gb IDE and compiler)&lt;/h2&gt; &#xA;&lt;p&gt;Same Steps 1-7 above&lt;br&gt; 8. Double-click &lt;code&gt;Zelda3.sln&lt;/code&gt;&lt;br&gt; 9. Change &#34;debug&#34; to &#34;release&#34; in the top dropdown&lt;br&gt; 10. Choose &#34;build &amp;gt; build Zelda3&#34; in the menu to create &lt;code&gt;zelda3.exe&lt;/code&gt; in the &#34;/bin/release&#34; subfolder&lt;br&gt; 11. Configure with &lt;code&gt;zelda3.ini&lt;/code&gt; in the main dir&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing libraries on Linux/MacOS&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a terminal&lt;/li&gt; &#xA; &lt;li&gt;Install pip if not already installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 -m ensurepip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Clone the repo and &lt;code&gt;cd&lt;/code&gt; into it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/snesrev/zelda3&#xA;cd zelda3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install requirements using pip&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 -m pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Install SDL2&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu/Debian &lt;code&gt;sudo apt install libsdl2-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fedora Linux &lt;code&gt;sudo dnf in sdl2-devel&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux &lt;code&gt;sudo pacman -S sdl2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS: &lt;code&gt;brew install sdl2&lt;/code&gt; (you can get homebrew &lt;a href=&#34;https://brew.sh/&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling on Linux/MacOS&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Place your US ROM file named &lt;code&gt;zelda3.sfc&lt;/code&gt; in &lt;code&gt;zelda3/tables&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Advanced make usage ... &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make -j$(nproc) # run on all core&#xA;make clean all  # clear gen+obj and rebuild&#xA;CC=clang make   # specify compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Nintendo Switch&lt;/h2&gt; &#xA;&lt;p&gt;You need &lt;a href=&#34;https://devkitpro.org/wiki/Getting_Started&#34;&gt;DevKitPro&lt;/a&gt; and &lt;a href=&#34;https://github.com/Atmosphere-NX/Atmosphere&#34;&gt;Atmosphere&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;(dkp-)pacman -S git switch-dev switch-sdl2 switch-tools&#xA;cd platform/switch&#xA;make # Add -j$(nproc) to build using all cores ( Optional )&#xA;# You can test the build directly onto the switch ( Optional )&#xA;nxlink -s zelda3.nro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More Compilation Help&lt;/h2&gt; &#xA;&lt;p&gt;Look at the wiki at &lt;a href=&#34;https://github.com/snesrev/zelda3/wiki&#34;&gt;https://github.com/snesrev/zelda3/wiki&lt;/a&gt; for more help.&lt;/p&gt; &#xA;&lt;p&gt;The ROM needs to be named &lt;code&gt;zelda3.sfc&lt;/code&gt; and has to be from the US region with this exact SHA256 hash &lt;code&gt;66871d66be19ad2c34c927d6b14cd8eb6fc3181965b6e517cb361f7316009cfb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case you&#39;re planning to move the executable to a different location, please include the file &lt;code&gt;tables/zelda3_assets.dat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage and controls&lt;/h2&gt; &#xA;&lt;p&gt;The game supports snapshots. The joypad input history is also saved in the snapshot. It&#39;s thus possible to replay a playthrough in turbo mode to verify that the game behaves correctly.&lt;/p&gt; &#xA;&lt;p&gt;The game is run with &lt;code&gt;./zelda3&lt;/code&gt; and takes an optional path to the ROM-file, which will verify for each frame that the C code matches the original behavior.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Button&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Up&lt;/td&gt; &#xA;   &lt;td&gt;Up arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Down&lt;/td&gt; &#xA;   &lt;td&gt;Down arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left&lt;/td&gt; &#xA;   &lt;td&gt;Left arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Right&lt;/td&gt; &#xA;   &lt;td&gt;Right arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Start&lt;/td&gt; &#xA;   &lt;td&gt;Enter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Select&lt;/td&gt; &#xA;   &lt;td&gt;Right shift&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;   &lt;td&gt;X&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;B&lt;/td&gt; &#xA;   &lt;td&gt;Z&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;X&lt;/td&gt; &#xA;   &lt;td&gt;S&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;V&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The keys can be reconfigured in zelda3.ini&lt;/p&gt; &#xA;&lt;p&gt;Additionally, the following commands are available:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tab&lt;/td&gt; &#xA;   &lt;td&gt;Turbo mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;W&lt;/td&gt; &#xA;   &lt;td&gt;Fill health/magic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift+W&lt;/td&gt; &#xA;   &lt;td&gt;Fill rupees/bombs/arrows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+E&lt;/td&gt; &#xA;   &lt;td&gt;Reset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;P&lt;/td&gt; &#xA;   &lt;td&gt;Pause (with dim)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift+P&lt;/td&gt; &#xA;   &lt;td&gt;Pause (without dim)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+Up&lt;/td&gt; &#xA;   &lt;td&gt;Increase window size&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+Down&lt;/td&gt; &#xA;   &lt;td&gt;Decrease window size&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T&lt;/td&gt; &#xA;   &lt;td&gt;Toggle replay turbo mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;O&lt;/td&gt; &#xA;   &lt;td&gt;Set dungeon key to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;K&lt;/td&gt; &#xA;   &lt;td&gt;Clear all input history from the joypad log&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L&lt;/td&gt; &#xA;   &lt;td&gt;Stop replaying a shapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;Toggle between fast and slow renderer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F&lt;/td&gt; &#xA;   &lt;td&gt;Display renderer performance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Load snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alt+Enter&lt;/td&gt; &#xA;   &lt;td&gt;Toggle Fullscreen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift+F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Save snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Replay the snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-9&lt;/td&gt; &#xA;   &lt;td&gt;run a dungeons playthrough snapshots&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+1-9&lt;/td&gt; &#xA;   &lt;td&gt;run a dungeons playthrough in turbo mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT license. See &#39;LICENSE.txt&#39; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openssl/openssl</title>
    <updated>2023-02-03T01:29:54Z</updated>
    <id>tag:github.com,2023-02-03:/openssl/openssl</id>
    <link href="https://github.com/openssl/openssl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TLS/SSL and crypto library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the OpenSSL Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openssl.org&#34; title=&#34;OpenSSL Homepage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openssl/openssl/master/doc/images/openssl.svg?sanitize=true&#34; alt=&#34;openssl logo&#34; title=&#34;OpenSSL Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openssl/openssl/actions?query=workflow%3A%22GitHub+CI%22&#34; title=&#34;GitHub Actions CI&#34;&gt;&lt;img src=&#34;https://github.com/openssl/openssl/workflows/GitHub%20CI/badge.svg?sanitize=true&#34; alt=&#34;github actions ci badge&#34; title=&#34;GitHub Actions CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/openssl/openssl/branch/master&#34; title=&#34;AppVeyor Jobs&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/8e10o7xfrg73v98f/branch/master?svg=true&#34; alt=&#34;appveyor badge&#34; title=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenSSL is a robust, commercial-grade, full-featured Open Source Toolkit for the Transport Layer Security (TLS) protocol formerly known as the Secure Sockets Layer (SSL) protocol. The protocol implementation is based on a full-strength general purpose cryptographic library, which can also be used stand-alone.&lt;/p&gt; &#xA;&lt;p&gt;OpenSSL is descended from the SSLeay library developed by Eric A. Young and Tim J. Hudson.&lt;/p&gt; &#xA;&lt;p&gt;The official Home Page of the OpenSSL Project is &lt;a href=&#34;https://www.openssl.org&#34; title=&#34;OpenSSL Homepage&#34;&gt;www.openssl.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#build-and-install&#34;&gt;Build and Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#legalities&#34;&gt;Legalities&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;The OpenSSL toolkit includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;libssl&lt;/strong&gt; an implementation of all TLS protocol versions up to TLSv1.3 (&lt;a href=&#34;https://tools.ietf.org/html/rfc8446&#34;&gt;RFC 8446&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;libcrypto&lt;/strong&gt; a full-strength general purpose cryptographic library. It constitutes the basis of the TLS implementation, but can also be used independently.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;openssl&lt;/strong&gt; the OpenSSL command line tool, a swiss army knife for cryptographic tasks, testing and analyzing. It can be used for&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;creation of key parameters&lt;/li&gt; &#xA;   &lt;li&gt;creation of X.509 certificates, CSRs and CRLs&lt;/li&gt; &#xA;   &lt;li&gt;calculation of message digests&lt;/li&gt; &#xA;   &lt;li&gt;encryption and decryption&lt;/li&gt; &#xA;   &lt;li&gt;SSL/TLS client and server tests&lt;/li&gt; &#xA;   &lt;li&gt;handling of S/MIME signed or encrypted mail&lt;/li&gt; &#xA;   &lt;li&gt;and more...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;h2&gt;For Production Use&lt;/h2&gt; &#xA;&lt;p&gt;Source code tarballs of the official releases can be downloaded from &lt;a href=&#34;https://www.openssl.org/source&#34;&gt;www.openssl.org/source&lt;/a&gt;. The OpenSSL project does not distribute the toolkit in binary form.&lt;/p&gt; &#xA;&lt;p&gt;However, for a large variety of operating systems precompiled versions of the OpenSSL toolkit are available. In particular, on Linux and other Unix operating systems, it is normally recommended to link against the precompiled shared libraries provided by the distributor or vendor.&lt;/p&gt; &#xA;&lt;h2&gt;For Testing and Development&lt;/h2&gt; &#xA;&lt;p&gt;Although testing and development could in theory also be done using the source tarballs, having a local copy of the git repository with the entire project history gives you much more insight into the code base.&lt;/p&gt; &#xA;&lt;p&gt;The official OpenSSL Git Repository is located at &lt;a href=&#34;https://git.openssl.org&#34; title=&#34;OpenSSL Git Repository&#34;&gt;git.openssl.org&lt;/a&gt;. There is a GitHub mirror of the repository at &lt;a href=&#34;https://github.com/openssl/openssl&#34; title=&#34;OpenSSL GitHub Mirror&#34;&gt;github.com/openssl/openssl&lt;/a&gt;, which is updated automatically from the former on every commit.&lt;/p&gt; &#xA;&lt;p&gt;A local copy of the Git Repository can be obtained by cloning it from the original OpenSSL repository using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git://git.openssl.org/openssl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from the GitHub mirror using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/openssl/openssl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you intend to contribute to OpenSSL, either to fix bugs or contribute new features, you need to fork the OpenSSL repository openssl/openssl on GitHub and clone your public fork instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/yourname/openssl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is necessary because all development of OpenSSL nowadays is done via GitHub pull requests. For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/#contributing&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Build and Install&lt;/h1&gt; &#xA;&lt;p&gt;After obtaining the Source, have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/INSTALL.md&#34;&gt;INSTALL&lt;/a&gt; file for detailed instructions about building and installing OpenSSL. For some platforms, the installation instructions are amended by a platform specific document.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-UNIX.md&#34;&gt;Notes for UNIX-like platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-ANDROID.md&#34;&gt;Notes for Android platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-WINDOWS.md&#34;&gt;Notes for Windows platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-DJGPP.md&#34;&gt;Notes for the DOS platform with DJGPP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-VMS.md&#34;&gt;Notes for the OpenVMS platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-PERL.md&#34;&gt;Notes on Perl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-VALGRIND.md&#34;&gt;Notes on Valgrind&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Specific notes on upgrading to OpenSSL 3.0 from previous versions can be found in the &lt;a href=&#34;https://www.openssl.org/docs/manmaster/man7/migration_guide.html&#34; title=&#34;OpenSSL Migration Guide&#34;&gt;migration_guide(7ossl)&lt;/a&gt; manual page.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;h2&gt;Manual Pages&lt;/h2&gt; &#xA;&lt;p&gt;The manual pages for the master branch and all current stable releases are available online.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/docs/manmaster&#34;&gt;OpenSSL master&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/docs/man3.0&#34;&gt;OpenSSL 3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/docs/man1.1.1&#34;&gt;OpenSSL 1.1.1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;There is a Wiki at &lt;a href=&#34;https://wiki.openssl.org&#34; title=&#34;OpenSSL Wiki&#34;&gt;wiki.openssl.org&lt;/a&gt; which is currently not very active. It contains a lot of useful information, not all of which is up-to-date.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;OpenSSL is licensed under the Apache License 2.0, which means that you are free to get and use it for commercial and non-commercial purposes as long as you fulfill its conditions.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;There are various ways to get in touch. The correct channel depends on your requirement. See the &lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/SUPPORT.md&#34;&gt;SUPPORT&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;If you are interested and willing to contribute to the OpenSSL project, please take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/openssl/openssl/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h1&gt;Legalities&lt;/h1&gt; &#xA;&lt;p&gt;A number of nations restrict the use or export of cryptography. If you are potentially subject to such restrictions, you should seek legal advice before attempting to develop or distribute cryptographic code.&lt;/p&gt; &#xA;&lt;h1&gt;Copyright&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 1998-2022 The OpenSSL Project&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson&lt;/p&gt; &#xA;&lt;p&gt;All rights reserved.&lt;/p&gt; &#xA;&lt;!-- Links  --&gt; &#xA;&lt;!-- Logos and Badges --&gt;</summary>
  </entry>
  <entry>
    <title>Nutlope/restorePhotos</title>
    <updated>2023-02-03T01:29:54Z</updated>
    <id>tag:github.com,2023-02-03:/Nutlope/restorePhotos</id>
    <link href="https://github.com/Nutlope/restorePhotos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Restoring old and blurry face photos with AI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://restorephotos.io/&#34;&gt;RestorePhotos.io&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This project restores old face photos using AI. Watch the &lt;a href=&#34;https://twitter.com/nutlope/status/1614794731396931585&#34;&gt;4 minute explainer video&lt;/a&gt; to see how I built this or see the &lt;a href=&#34;https://twitter.com/nutlope/status/1612488923716136962&#34;&gt;15 second demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://restorephotos.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Nutlope/restorePhotos/main/public/screenshot.png&#34; alt=&#34;Face Photo Restorer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;It uses an ML model from the Applied Research Center called &lt;a href=&#34;https://github.com/TencentARC/GFPGAN&#34;&gt;GFPGAN&lt;/a&gt; on &lt;a href=&#34;https://replicate.com/&#34;&gt;Replicate&lt;/a&gt; to restore face photos. This application gives you the ability to upload any photo, which will send it through this ML Model using a Next.js API route, and return your restored photo.&lt;/p&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;After cloning the repo, go to &lt;a href=&#34;https://replicate.com/&#34;&gt;Replicate&lt;/a&gt; to make an account and put your API key in a file called &lt;code&gt;.env&lt;/code&gt;. If you&#39;d also like to do rate limiting, create an account on UpStash, create a Redis database, and populate the two environment variables in &lt;code&gt;.env&lt;/code&gt; as well. If you don&#39;t want to do rate limiting, you don&#39;t need to make any changes.&lt;/p&gt; &#xA;&lt;p&gt;Then, run the application in the command line and it will be available at &lt;code&gt;http://localhost:3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;One-Click Deploy&lt;/h2&gt; &#xA;&lt;p&gt;Deploy the example using &lt;a href=&#34;https://vercel.com?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vercel-examples&#34;&gt;Vercel&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https://github.com/Nutlope/restorePhotos&amp;amp;env=REPLICATE_API_KEY&amp;amp;project-name=face-photo-restorer&amp;amp;repo-name=restore-photos&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>