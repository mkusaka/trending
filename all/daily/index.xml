<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T01:27:21Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>searxng/searxng</title>
    <updated>2024-04-07T01:27:21Z</updated>
    <id>tag:github.com,2024-04-07:/searxng/searxng</id>
    <link href="https://github.com/searxng/searxng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SearXNG is a free internet metasearch engine which aggregates results from various search services and databases. Users are neither tracked nor profiled.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. SPDX-License-Identifier: AGPL-3.0-or-later&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;.. figure:: &lt;a href=&#34;https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng.svg&#34;&gt;https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng.svg&lt;/a&gt; :target: &lt;a href=&#34;https://docs.searxng.org/&#34;&gt;https://docs.searxng.org/&lt;/a&gt; :alt: SearXNG :width: 100% :align: center&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Privacy-respecting, hackable &lt;code&gt;metasearch engine&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;p&gt;Searx.space_ lists ready-to-use running instances.&lt;/p&gt; &#xA;&lt;p&gt;A user_, admin_ and developer_ handbook is available on the homepage_.&lt;/p&gt; &#xA;&lt;p&gt;|SearXNG install| |SearXNG homepage| |SearXNG wiki| |AGPL License| |Issues| |commits| |weblate| |SearXNG logo|&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;.. _searx.space: &lt;a href=&#34;https://searx.space&#34;&gt;https://searx.space&lt;/a&gt; .. _user: &lt;a href=&#34;https://docs.searxng.org/user&#34;&gt;https://docs.searxng.org/user&lt;/a&gt; .. _admin: &lt;a href=&#34;https://docs.searxng.org/admin&#34;&gt;https://docs.searxng.org/admin&lt;/a&gt; .. _developer: &lt;a href=&#34;https://docs.searxng.org/dev&#34;&gt;https://docs.searxng.org/dev&lt;/a&gt; .. _homepage: &lt;a href=&#34;https://docs.searxng.org/&#34;&gt;https://docs.searxng.org/&lt;/a&gt; .. _metasearch engine: &lt;a href=&#34;https://en.wikipedia.org/wiki/Metasearch_engine&#34;&gt;https://en.wikipedia.org/wiki/Metasearch_engine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |SearXNG logo| image:: &lt;a href=&#34;https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng-wordmark.svg&#34;&gt;https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng-wordmark.svg&lt;/a&gt; :target: &lt;a href=&#34;https://docs.searxng.org/&#34;&gt;https://docs.searxng.org/&lt;/a&gt; :width: 5%&lt;/p&gt; &#xA;&lt;p&gt;.. |SearXNG install| image:: &lt;a href=&#34;https://img.shields.io/badge/-install-blue&#34;&gt;https://img.shields.io/badge/-install-blue&lt;/a&gt; :target: &lt;a href=&#34;https://docs.searxng.org/admin/installation.html&#34;&gt;https://docs.searxng.org/admin/installation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |SearXNG homepage| image:: &lt;a href=&#34;https://img.shields.io/badge/-homepage-blue&#34;&gt;https://img.shields.io/badge/-homepage-blue&lt;/a&gt; :target: &lt;a href=&#34;https://docs.searxng.org/&#34;&gt;https://docs.searxng.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |SearXNG wiki| image:: &lt;a href=&#34;https://img.shields.io/badge/-wiki-blue&#34;&gt;https://img.shields.io/badge/-wiki-blue&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searxng/searxng/wiki&#34;&gt;https://github.com/searxng/searxng/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |AGPL License| image:: &lt;a href=&#34;https://img.shields.io/badge/license-AGPL-blue.svg&#34;&gt;https://img.shields.io/badge/license-AGPL-blue.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searxng/searxng/raw/master/LICENSE&#34;&gt;https://github.com/searxng/searxng/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Issues| image:: &lt;a href=&#34;https://img.shields.io/github/issues/searxng/searxng?color=yellow&amp;amp;label=issues&#34;&gt;https://img.shields.io/github/issues/searxng/searxng?color=yellow&amp;amp;label=issues&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searxng/searxng/issues&#34;&gt;https://github.com/searxng/searxng/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |PR| image:: &lt;a href=&#34;https://img.shields.io/github/issues-pr-raw/searxng/searxng?color=yellow&amp;amp;label=PR&#34;&gt;https://img.shields.io/github/issues-pr-raw/searxng/searxng?color=yellow&amp;amp;label=PR&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searxng/searxng/pulls&#34;&gt;https://github.com/searxng/searxng/pulls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |commits| image:: &lt;a href=&#34;https://img.shields.io/github/commit-activity/y/searxng/searxng?color=yellow&amp;amp;label=commits&#34;&gt;https://img.shields.io/github/commit-activity/y/searxng/searxng?color=yellow&amp;amp;label=commits&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searxng/searxng/commits/master&#34;&gt;https://github.com/searxng/searxng/commits/master&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |weblate| image:: &lt;a href=&#34;https://translate.codeberg.org/widgets/searxng/-/searxng/svg-badge.svg&#34;&gt;https://translate.codeberg.org/widgets/searxng/-/searxng/svg-badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://translate.codeberg.org/projects/searxng/&#34;&gt;https://translate.codeberg.org/projects/searxng/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;Ask questions or just chat about SearXNG on&lt;/p&gt; &#xA;&lt;p&gt;IRC &lt;code&gt;#searxng on libera.chat &amp;lt;https://web.libera.chat/?channel=#searxng&amp;gt;&lt;/code&gt;_ which is bridged to Matrix.&lt;/p&gt; &#xA;&lt;p&gt;Matrix &lt;code&gt;#searxng:matrix.org &amp;lt;https://matrix.to/#/#searxng:matrix.org&amp;gt;&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A well maintained &lt;code&gt;Docker image&lt;/code&gt;_, also built for ARM64 and ARM/v7 architectures.&lt;/li&gt; &#xA; &lt;li&gt;Alternatively there are &lt;em&gt;up to date&lt;/em&gt; &lt;code&gt;installation scripts&lt;/code&gt;_.&lt;/li&gt; &#xA; &lt;li&gt;For individual setup consult our detailed &lt;code&gt;Step by step&lt;/code&gt;_ instructions.&lt;/li&gt; &#xA; &lt;li&gt;To fine-tune your instance, take a look at the &lt;code&gt;Administrator documentation&lt;/code&gt;_.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Administrator documentation: &lt;a href=&#34;https://docs.searxng.org/admin/index.html&#34;&gt;https://docs.searxng.org/admin/index.html&lt;/a&gt; .. _Step by step: &lt;a href=&#34;https://docs.searxng.org/admin/installation-searxng.html&#34;&gt;https://docs.searxng.org/admin/installation-searxng.html&lt;/a&gt; .. _installation scripts: &lt;a href=&#34;https://docs.searxng.org/admin/installation-scripts.html&#34;&gt;https://docs.searxng.org/admin/installation-scripts.html&lt;/a&gt; .. _Docker image: &lt;a href=&#34;https://github.com/searxng/searxng-docker&#34;&gt;https://github.com/searxng/searxng-docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Translations&lt;/h1&gt; &#xA;&lt;p&gt;.. _Weblate: &lt;a href=&#34;https://translate.codeberg.org/projects/searxng/searxng/&#34;&gt;https://translate.codeberg.org/projects/searxng/searxng/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Help translate SearXNG at &lt;code&gt;Weblate&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;p&gt;.. figure:: &lt;a href=&#34;https://translate.codeberg.org/widgets/searxng/-/multi-auto.svg&#34;&gt;https://translate.codeberg.org/widgets/searxng/-/multi-auto.svg&lt;/a&gt; :target: &lt;a href=&#34;https://translate.codeberg.org/projects/searxng/&#34;&gt;https://translate.codeberg.org/projects/searxng/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;.. _development quickstart: &lt;a href=&#34;https://docs.searxng.org/dev/quickstart.html&#34;&gt;https://docs.searxng.org/dev/quickstart.html&lt;/a&gt; .. _developer documentation: &lt;a href=&#34;https://docs.searxng.org/dev/index.html&#34;&gt;https://docs.searxng.org/dev/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Are you a developer? Have a look at our &lt;code&gt;development quickstart&lt;/code&gt;_ guide, it&#39;s very easy to contribute. Additionally we have a &lt;code&gt;developer documentation&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h1&gt;Codespaces&lt;/h1&gt; &#xA;&lt;p&gt;You can contribute from your browser using &lt;code&gt;GitHub Codespaces&lt;/code&gt;_:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;code&gt;&amp;lt;&amp;gt; Code&lt;/code&gt; green button&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;code&gt;Codespaces&lt;/code&gt; tab instead of &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Create codespace on master&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;VSCode is going to start in the browser&lt;/li&gt; &#xA; &lt;li&gt;Wait for &lt;code&gt;git pull &amp;amp;&amp;amp; make install&lt;/code&gt; to appear and then disappear&lt;/li&gt; &#xA; &lt;li&gt;You have &lt;code&gt;120 hours per month&lt;/code&gt;_ (see also your &lt;code&gt;list of existing Codespaces&lt;/code&gt;_)&lt;/li&gt; &#xA; &lt;li&gt;You can start SearXNG using &lt;code&gt;make run&lt;/code&gt; in the terminal or by pressing &lt;code&gt;Ctrl+Shift+B&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _GitHub Codespaces: &lt;a href=&#34;https://docs.github.com/en/codespaces/overview&#34;&gt;https://docs.github.com/en/codespaces/overview&lt;/a&gt; .. _120 hours per month: &lt;a href=&#34;https://github.com/settings/billing&#34;&gt;https://github.com/settings/billing&lt;/a&gt; .. _list of existing Codespaces: &lt;a href=&#34;https://github.com/codespaces&#34;&gt;https://github.com/codespaces&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>anthropics/anthropic-cookbook</title>
    <updated>2024-04-07T01:27:21Z</updated>
    <id>tag:github.com,2024-04-07:/anthropics/anthropic-cookbook</id>
    <link href="https://github.com/anthropics/anthropic-cookbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of notebooks/recipes showcasing some fun and effective ways of using Claude.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Anthropic Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;The Anthropic Cookbook provides code and guides designed to help developers build with Claude, providing copy-able code snippets that you can easily integrate into your own projects.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;To make the most of the examples in this cookbook, you&#39;ll need an Anthropic API key (sign up for free &lt;a href=&#34;https://www.anthropic.com&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;While the code examples are primarily written in Python, the concepts can be adapted to any programming language that supports interaction with the Anthropic API.&lt;/p&gt; &#xA;&lt;h2&gt;Explore Further&lt;/h2&gt; &#xA;&lt;p&gt;Looking for more resources to enhance your experience with Claude and AI assistants? Check out these helpful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.anthropic.com/claude/docs/guide-to-anthropics-prompt-engineering-resources&#34;&gt;Anthropic developer documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.anthropic.com&#34;&gt;Anthropic support docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.anthropic.com/discord&#34;&gt;Anthropic Discord community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The Anthropic Cookbook thrives on the contributions of the developer community. We value your input, whether it&#39;s submitting an idea, fixing a typo, adding a new guide, or improving an existing one. By contributing, you help make this resource even more valuable for everyone.&lt;/p&gt; &#xA;&lt;p&gt;To avoid duplication of efforts, please review the existing issues and pull requests before contributing.&lt;/p&gt; &#xA;&lt;p&gt;If you have ideas for new examples or guides, share them on the &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/issues&#34;&gt;issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of recipes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/tree/main/tool_use&#34;&gt;Tool use&lt;/a&gt;: Learn how to integrate Claude with external tools and functions to extend its capabilities. Create a &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/tool_use/customer_service_agent.ipynb&#34;&gt;customer service agent&lt;/a&gt;, give Claude access to a &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/tool_use/calculator_tool.ipynb&#34;&gt;calculator&lt;/a&gt;, and learn how to prompt Claude to &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/how_to_make_sql_queries.ipynb&#34;&gt;make SQL queries&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/tree/main/third_party&#34;&gt;Retrieval augmented generation&lt;/a&gt;: Learn how to supplement Claude&#39;s knowledge and improve the accuracy and relevance of Claude&#39;s responses with data retrieved from &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/third_party/Pinecone/rag_using_pinecone.ipynb&#34;&gt;vector databases&lt;/a&gt;, &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/third_party/Wikipedia/wikipedia-search-cookbook.ipynb/&#34;&gt;Wikipedia&lt;/a&gt;, &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/read_web_pages_with_haiku.ipynb&#34;&gt;specific webpages&lt;/a&gt;, and the &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/third_party/Brave/web_search_using_brave.ipynb&#34;&gt;internet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/using_citations.ipynb&#34;&gt;Citations&lt;/a&gt;: Learn how to prompt Claude to cite sources in its responses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/multimodal/using_sub_agents.ipynb&#34;&gt;Sub-agents&lt;/a&gt;: Learn how to use of Haiku as a sub-agent in combination with Opus.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/third_party/VoyageAI/how_to_create_embeddings.md&#34;&gt;Embeddings&lt;/a&gt;: Learn how to use Voyage AI to handle embeddings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/tree/main/multimodal&#34;&gt;Explore vision with Claude&lt;/a&gt;: This cookbook has tips on &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/multimodal/getting_started_with_vision.ipynb&#34;&gt;getting started with images&lt;/a&gt; and &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/multimodal/best_practices_for_vision.ipynb&#34;&gt;best practice techniques&lt;/a&gt; to ensure the highest quality performance with images. See how you can effectively prompt Claude with images to carry out tasks such as &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/multimodal/reading_charts_graphs_powerpoints.ipynb&#34;&gt;interpreting and analyzing charts&lt;/a&gt; or &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/multimodal/how_to_transcribe_text.ipynb&#34;&gt;extracting content from forms&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/illustrated_responses.ipynb&#34;&gt;Generate images with Claude&lt;/a&gt;: This cookbook will show you how to have Claude generate images via Stable Diffusion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/pdf_upload_summarization.ipynb&#34;&gt;Upload PDFs to Claude&lt;/a&gt;: Discover how to parse and pass PDFs as text to Claude&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/building_evals.ipynb&#34;&gt;Automated evaluations&lt;/a&gt;: Discover how to use Claude to automate the prompt evaluation process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/how_to_enable_json_mode.ipynb&#34;&gt;Enable JSON mode&lt;/a&gt;: Ensure you always get JSON with this quick and easy cookbook. Or use &lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/tool_use/calculator_tool.ipynb&#34;&gt;tool use&lt;/a&gt; to get structured outputs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-cookbook/raw/main/misc/building_moderation_filter.ipynb&#34;&gt;Create a moderation filter with Claude&lt;/a&gt;: Find out how to use Claude to create a content moderation filter for your application.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>availproject/availup</title>
    <updated>2024-04-07T01:27:21Z</updated>
    <id>tag:github.com,2024-04-07:/availproject/availup</id>
    <link href="https://github.com/availproject/availup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Availup&lt;/h2&gt; &#xA;&lt;p&gt;To run an Avail light client, simply run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL1 avail.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, with &lt;code&gt;wget&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget --https-only --secure-protocol=TLSv1_2 --quiet -O - avail.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass additional flags to the script like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL1 avail.sh | bash -s -- --network goldberg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently available flags are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;network&lt;/code&gt;: can be one of the following: [&lt;code&gt;goldberg&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: path to the configuration file, availup will generate a config if this flag is not specified &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This flag is always required when running a local testnet&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;identity&lt;/code&gt;: path to the identity file, availup will generate a config if this flag is not specified &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is important to keep your identity file safe!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;app_id&lt;/code&gt;: application ID to run the light client (defaults to &lt;code&gt;0&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is recommended to not change this flag unless you require the app-specific mode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;upgrade&lt;/code&gt;: takes &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;yes&lt;/code&gt; as valid arguments, indicating that the &lt;code&gt;avail-light&lt;/code&gt; binary should be upgraded &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Using this flag wipes your existing data and config, use with caution! This flag does not guarantee that the binary will be upgraded.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;force_wsl&lt;/code&gt;: takes &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;yes&lt;/code&gt; as valid arguments, the script exits on WSL systems by default. This flag can removed in the future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use a custom config by passing it to &lt;code&gt;availup&lt;/code&gt; as a flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create the config:&#xA;touch ~/config.yml&#xA;# edit the config:&#xA;nano ~/config.yml&#xA;# and rerunning the script:&#xA;curl -sL1 avail.sh | bash -s -- --config ~/config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ It is not recommended to modify the default config stored in &lt;code&gt;~/.avail/config/config.yml&lt;/code&gt; as that gets wiped on each run.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you have a seed phrase that you&#39;d like to use instead of the generated one, you can modify &lt;code&gt;~/.avail/identity/identity.toml&lt;/code&gt;, alternatively, you can pass it as a flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# edit default identity&#xA;nano ~/.avail/identity/identity.toml&#xA;# the script picks up the new identity automatically:&#xA;curl -sL1 avail.sh | bash&#xA;# create a new identity&#xA;touch ~/identity.toml&#xA;nano ~/identity.toml&#xA;# the script uses the identity at the path&#xA;curl -sL1 avail.sh | bash -s -- --identity ~/identity.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ The script persists your identity file between runs. Deleting the file will cause a new one to be generated on the next run.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Alternatively, you can pass a specific application ID with &lt;code&gt;availup&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm ~/.avail/goldberg/config.yml&#xA;# and rerunning the script with flags:&#xA;curl -sL1 avail.sh | bash -s -- --app_id 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ Adding an app ID disables the LC mode and runs your client in an app-specific mode, this might not be your intention.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To upgrade the light client to the latest supported version, you can simply pass the &lt;code&gt;--upgrade&lt;/code&gt; flag like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL1 avail.sh | bash -s -- --upgrade y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ Upgrading the LC only works if the binary was installed with the latest &lt;code&gt;availup&lt;/code&gt; script or cargo.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To run the light client on WSL systems, use the &lt;code&gt;--force_wsl&lt;/code&gt; flag like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL1 avail.sh | bash -s -- --force_wsl y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ Running this flag on any other system does nothing.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>