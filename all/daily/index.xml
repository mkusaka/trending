<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-02T01:31:45Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>developedbyed/react-portofolio-with-tailwind</title>
    <updated>2022-10-02T01:31:45Z</updated>
    <id>tag:github.com,2022-10-02:/developedbyed/react-portofolio-with-tailwind</id>
    <link href="https://github.com/developedbyed/react-portofolio-with-tailwind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; project bootstrapped with &lt;a href=&#34;https://github.com/vercel/next.js/tree/canary/packages/create-next-app&#34;&gt;&lt;code&gt;create-next-app&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;You can start editing the page by modifying &lt;code&gt;pages/index.js&lt;/code&gt;. The page auto-updates as you edit the file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nextjs.org/docs/api-routes/introduction&#34;&gt;API routes&lt;/a&gt; can be accessed on &lt;a href=&#34;http://localhost:3000/api/hello&#34;&gt;http://localhost:3000/api/hello&lt;/a&gt;. This endpoint can be edited in &lt;code&gt;pages/api/hello.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;pages/api&lt;/code&gt; directory is mapped to &lt;code&gt;/api/*&lt;/code&gt;. Files in this directory are treated as &lt;a href=&#34;https://nextjs.org/docs/api-routes/introduction&#34;&gt;API routes&lt;/a&gt; instead of React pages.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check out &lt;a href=&#34;https://github.com/vercel/next.js/&#34;&gt;the Next.js GitHub repository&lt;/a&gt; - your feedback and contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Deploy on Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>isaced/V2exOS</title>
    <updated>2022-10-02T01:31:45Z</updated>
    <id>tag:github.com,2022-10-02:/isaced/V2exOS</id>
    <link href="https://github.com/isaced/V2exOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个用 SwiftUI 编写的 V2ex macOS 客户端（Beta）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img width=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/isaced/V2exOS/main/V2exOS/Assets.xcassets/AppIcon.appiconset/icon_256.png&#34;&gt; V2exOS &lt;a href=&#34;https://apps.apple.com/cn/app/v2exos/id6443544914?mt=12&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://user-images.githubusercontent.com/2088605/192413562-5e123118-bd2c-4710-9b68-872ffe61ae4d.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;一个用 SwiftUI 编写的 V2ex macOS 客户端。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2088605/192312063-def16466-052b-457a-9b4c-856b2afb3a42.png#gh-dark-mode-only&#34; alt=&#34;screenshot&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/2088605/192312051-9ec1e43d-4aee-46fb-a61f-fd865e35fca4.png##gh-light-mode-only&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;关于&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;目标打造一个 macOS 平台原生极致体验的 V2ex 客户端&lt;/li&gt; &#xA; &lt;li&gt;使用 SwiftUI 开发，尽量利用系统和语言新特性，最低适配 macOS 12+&lt;/li&gt; &#xA; &lt;li&gt;开发过程中抽象出可复用的 V2ex API 网络层为 Swift Package - &lt;a href=&#34;https://github.com/isaced/V2exAPI&#34;&gt;V2exAPI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;基本功能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Personal Access Token 授权登录&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 主题列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 通知列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 深色模式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 热门列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 收藏节点&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 发表主题/评论（&lt;a href=&#34;https://github.com/isaced/V2exOS/issues/4&#34;&gt;#4&lt;/a&gt;）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;高级功能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proxy 代理&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;帮助&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;如何设置代理？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;菜单： V2exOS -&amp;gt; Preferences （快捷键：&lt;kbd&gt;Command&lt;/kbd&gt; + &lt;kbd&gt;,&lt;/kbd&gt;）&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/2088605/193294617-e027d1da-8bd7-44f4-9ade-11f2cf807d81.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;数据加载不出来有可能是需要挂代理，你懂的&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;如何登录 V2exOS？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;在 V2ex 登录你的账号，进入 &lt;a href=&#34;https://v2ex.com/settings/tokens&#34;&gt;[设置 -&amp;gt; Tokens]&lt;/a&gt; 页面生成 Personal Access Token（建议有效期长一些），填入 V2exOS 即可，V2exOS 会将你的 Personal Access Token 保存到本地的 Keychain 钥匙串中，在需要访问 &lt;a href=&#34;https://v2ex.com/help/api&#34;&gt;V2ex API&lt;/a&gt; 时进行使用。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;当然部分不需要鉴权的功能不登陆也是可以直接使用的&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;为什么看不到帖子的回复？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://v2ex.com/help/api#get-topic-replies&#34;&gt;获取指定主题下的回复&lt;/a&gt; API 需要认证，参考上述 Personal Access Token 认证登录后即可看到回复列表了。&lt;/p&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;欢迎大家添砖加瓦，需要某个功能可以先提交 &lt;a href=&#34;https://github.com/isaced/V2exOS/issues&#34;&gt;issue&lt;/a&gt; 讨论，当然也可以直接 &lt;a href=&#34;https://github.com/isaced/V2exOS/fork&#34;&gt;fork&lt;/a&gt; 仓库，修改代码提交 PR。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;p&gt;本项目建立在以下开源库之上，感谢这些优秀的项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/isaced/V2exAPI&#34;&gt;V2exAPI&lt;/a&gt; - V2ex Open API 的 Swift 封装&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onevcat/Kingfisher&#34;&gt;Kingfisher&lt;/a&gt; - 网络图片加载和缓存&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kishikawakatsumi/KeychainAccess&#34;&gt;KeychainAccess&lt;/a&gt; - Keychain 便捷访问存储 Personal Access Token&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonzalezreal/MarkdownUI&#34;&gt;MarkdownUI&lt;/a&gt; - SwiftUI Markdown 渲染&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dimillian/RedditOS&#34;&gt;RedditOS&lt;/a&gt; - 一个 SwiftUI 写的 Reddit macOS 客户端，灵感来源之一&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>denoland/deno</title>
    <updated>2022-10-02T01:31:45Z</updated>
    <id>tag:github.com,2022-10-02:/denoland/deno</id>
    <link href="https://github.com/denoland/deno" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern runtime for JavaScript and TypeScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deno&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/denoland/deno/actions&#34;&gt;&lt;img src=&#34;https://github.com/denoland/deno/workflows/ci/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=deno_land&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/deno_land.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/deno&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/684898665143206084?logo=discord&amp;amp;style=social&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://deno.land/logo.svg?sanitize=true&#34; height=&#34;150px&#34; alt=&#34;the deno mascot dinosaur standing in the rain&#34;&gt; &#xA;&lt;p&gt;Deno is a &lt;em&gt;simple&lt;/em&gt;, &lt;em&gt;modern&lt;/em&gt; and &lt;em&gt;secure&lt;/em&gt; runtime for &lt;strong&gt;JavaScript&lt;/strong&gt; and &lt;strong&gt;TypeScript&lt;/strong&gt; that uses V8 and is built in Rust.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Secure by default. No file, network, or environment access, unless explicitly enabled.&lt;/li&gt; &#xA; &lt;li&gt;Supports TypeScript out of the box.&lt;/li&gt; &#xA; &lt;li&gt;Ships only a single executable file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deno.land/manual/tools#built-in-tooling&#34;&gt;Built-in utilities.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set of reviewed standard modules that are guaranteed to work with &lt;a href=&#34;https://deno.land/std/&#34;&gt;Deno&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Shell (Mac, Linux):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://deno.land/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PowerShell (Windows):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm https://deno.land/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/deno&#34;&gt;Homebrew&lt;/a&gt; (Mac):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/packages/deno&#34;&gt;Chocolatey&lt;/a&gt; (Windows):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt; (Windows):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop install deno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build and install from source using &lt;a href=&#34;https://crates.io/crates/deno&#34;&gt;Cargo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install deno --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/denoland/deno_install/raw/master/README.md&#34;&gt;deno_install&lt;/a&gt; and &lt;a href=&#34;https://github.com/denoland/deno/releases&#34;&gt;releases&lt;/a&gt; for other options.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Try running a simple program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;deno run https://deno.land/std/examples/welcome.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or a more complex one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const listener = Deno.listen({ port: 8000 });&#xA;console.log(&#34;http://localhost:8000/&#34;);&#xA;&#xA;for await (const conn of listener) {&#xA;  serve(conn);&#xA;}&#xA;&#xA;async function serve(conn: Deno.Conn) {&#xA;  for await (const { respondWith } of Deno.serveHttp(conn)) {&#xA;    respondWith(new Response(&#34;Hello world&#34;));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find a deeper introduction, examples, and environment setup guides in the &lt;a href=&#34;https://deno.land/manual&#34;&gt;manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The complete API reference is available at the runtime &lt;a href=&#34;https://doc.deno.land&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We appreciate your help!&lt;/p&gt; &#xA;&lt;p&gt;To contribute, please read our &lt;a href=&#34;https://deno.land/manual/contributing&#34;&gt;contributing instructions&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>