<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-04T01:24:14Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zzzgydi/clash-verge</title>
    <updated>2023-11-04T01:24:14Z</updated>
    <id>tag:github.com,2023-11-04:/zzzgydi/clash-verge</id>
    <link href="https://github.com/zzzgydi/clash-verge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Clash GUI based on tauri. Supports Windows, macOS and Linux.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Removed&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hiroi-sora/Umi-OCR</title>
    <updated>2023-11-04T01:24:14Z</updated>
    <id>tag:github.com,2023-11-04:/hiroi-sora/Umi-OCR</id>
    <link href="https://github.com/hiroi-sora/Umi-OCR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OCR图片转文字识别软件，完全离线。截屏/批量导入图片，支持多国语言、合并段落、竖排文字。可排除水印区域，提取干净的文本。基于 PaddleOCR 。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR&#34;&gt; &lt;img width=&#34;200&#34; height=&#34;128&#34; src=&#34;https://tupian.li/images/2022/10/27/icon---256.png&#34; alt=&#34;Umi-OCR&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Umi-OCR 文字识别工具&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/hiroi-sora/Umi-OCR?style=flat-square&#34; alt=&#34;Umi-OCR&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/hiroi-sora/Umi-OCR?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt; &lt;/a&gt; &lt;a href=&#34;#下载&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/hiroi-sora/Umi-OCR/total?style=flat-square&#34; alt=&#34;forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://star-history.com/#hiroi-sora/Umi-OCR&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/hiroi-sora/Umi-OCR?style=flat-square&#34; alt=&#34;stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/hiroi-sora/Umi-OCR?style=flat-square&#34; alt=&#34;forks&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;strong&gt;免费，开源，可批量的离线OCR软件&lt;/strong&gt;&#xA; &lt;br&gt; &#xA; &lt;sub&gt;适用于 Windows7 x64 及以上&lt;/sub&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;#说明目录&#34;&gt; 使用说明 &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;#下载&#34;&gt; 下载地址 &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;#更新日志&#34;&gt; 更新日志 &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues&#34;&gt; 提交Bug &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;免费&lt;/strong&gt;：本项目所有代码开源，完全免费。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;方便&lt;/strong&gt;：解压即用，离线运行，无需网络。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;批量&lt;/strong&gt;：可批量导入处理图片，结果保存到本地 txt / md / jsonl 多种格式文件。也可以即时截屏识别。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高效&lt;/strong&gt;：采用 PaddleOCR-json C++ 识别引擎。只要电脑性能足够，通常比在线OCR服务更快。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;精准&lt;/strong&gt;：默认使用PPOCR-v3模型库。除了能准确辨认常规文字，对手写、方向不正、杂乱背景等情景也有不错的识别率。可设置&lt;strong&gt;忽略区域&lt;/strong&gt;排除水印、设置&lt;strong&gt;文块后处理&lt;/strong&gt;合并排版段落，得到规整的文本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2023/04/26/6447fe3273efd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/09/29/1.3-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;说明目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E7%AE%80%E5%8D%95%E4%B8%8A%E6%89%8B&#34;&gt;简单上手&lt;/a&gt; 截图、批量识别~&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#goto-1&#34;&gt;排版优化&lt;/a&gt; 如何合并一个自然段内的文字？&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E5%BF%BD%E7%95%A5%E5%8C%BA%E5%9F%9F%E5%8A%9F%E8%83%BD&#34;&gt;忽略区域&lt;/a&gt; 如何排除截图水印处的文字？&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E6%B7%BB%E5%8A%A0%E5%A4%9A%E5%9B%BD%E8%AF%AD%E8%A8%80&#34;&gt;多国语言&lt;/a&gt; 添加更多PP-OCR支持的语言模型库！&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%B0%83%E7%94%A8&#34;&gt;命令行调用&lt;/a&gt; 用命令行或第三方工具来调用Umi-OCR！&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#goto-3&#34;&gt;联动翻译软件&lt;/a&gt; 截图OCR后发送指定按键，触发翻译软件进行翻译&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#goto-2&#34;&gt;更多小技巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E9%97%AE%E9%A2%98%E6%8E%92%E9%99%A4&#34;&gt;问题排除&lt;/a&gt; 无法启动引擎 / 多屏幕截图异常 ？&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;h4&gt;v2.0.0&lt;/h4&gt; &#xA;&lt;p&gt;全新重构的v2预览版本已开放测试，&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR_v2&#34;&gt;欢迎体验&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h4&gt;v1.3.7&lt;/h4&gt; &#xA;&lt;p&gt;Github下载：&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/releases/tag/v1.3.7&#34;&gt;Release v1.3.7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;蓝奏云下载：&lt;a href=&#34;https://hiroi-sora.lanzoul.com/s/umi-ocr&#34;&gt;https://hiroi-sora.lanzoul.com/s/umi-ocr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;配套 &lt;strong&gt;多国语言识别扩展包&lt;/strong&gt; 可导入 &lt;code&gt;繁中,英,日,韩,俄,德,法&lt;/code&gt; 识别库，请按需下载。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;使用源代码&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;main分支可能含有开发中的新功能。若您想使用稳定版本，建议切换到&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/branches&#34;&gt;最新的Release分支&lt;/a&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;确保python版本不低于 &lt;code&gt;3.8&lt;/code&gt; 。建议使用 &lt;code&gt;3.8.10&lt;/code&gt; ，具有最好的兼容性。&lt;/li&gt; &#xA;  &lt;li&gt;安装依赖库：&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;运行 &lt;code&gt;main.py&lt;/code&gt; 启动程序。测试无异常后，运行 &lt;code&gt;to_exe.py&lt;/code&gt; 一键打包。&lt;/li&gt; &#xA;  &lt;li&gt;打包后，请将引擎组件 &lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/PaddleOCR-json&#34;&gt;PaddleOCR-json 整个文件夹&lt;/a&gt; 放置于exe同目录下！&lt;/li&gt; &#xA;  &lt;li&gt;打包后，请将引擎组件 &lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/PaddleOCR-json&#34;&gt;PaddleOCR-json 整个文件夹&lt;/a&gt; 放置于exe同目录下！！&lt;/li&gt; &#xA;  &lt;li&gt;打包后，请将引擎组件 &lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/PaddleOCR-json&#34;&gt;PaddleOCR-json 整个文件夹&lt;/a&gt; 放置于exe同目录下！！！&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;兼容性（Paddle引擎）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 Win7 x64 及以上系统。&lt;/li&gt; &#xA; &lt;li&gt;CPU必须具有AVX指令集。（凌动、安腾、赛扬和奔腾处理器可能不兼容）&lt;/li&gt; &#xA; &lt;li&gt;若您的CPU不符合以上条件，请使用 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR_v2&#34;&gt;v2&lt;/a&gt; Rapid引擎版本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;关于&lt;strong&gt;忽略指定区域&lt;/strong&gt;的特殊功能：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;类似含水印的视频截图、含有UI/按钮的游戏截图等，往往只需要提取字幕区域的文本，而避免提取到水印和UI文本。本软件可设置忽略某些区域内的文字，来实现这一目的。&lt;/p&gt; &#xA; &lt;p&gt;当有大量的影视和游戏截图需要整理归档，或者想翻找包含某一段台词/字幕的截图；将这些图片提取出文字、然后Ctrl+F是一个很有效的方法。这是开发本软件的初衷。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;关于离线OCR引擎 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json&#34;&gt;PaddleOCR-json&lt;/a&gt; ：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;对 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.6&#34;&gt;PaddleOCR 2.6 cpu_avx_mkl C++&lt;/a&gt; 的封装。效率高于Python版本PPOCR及部分Python编写的OCR引擎，通常比在线OCR服务更快(省去网络传输的时间)。支持更换Paddle官方模型（兼容v2和v3版本）或自己训练的模型，支持修改PPOCR各项参数。通过添加不同的语言模型，软件可识别多国语言。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;简单上手&lt;/h2&gt; &#xA;&lt;h4&gt;准备&lt;/h4&gt; &#xA;&lt;p&gt;下载压缩包并解压全部文件即可。&lt;/p&gt; &#xA;&lt;h4&gt;截图识别&lt;/h4&gt; &#xA;&lt;p&gt;点击截图按钮或自定义快捷键，唤起截图识别。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/09/29/1-w-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;可以设置截图后生成一个预览窗口。预览窗口可以被钉在屏幕顶层，或调为半透明，方便对比查看。&lt;/p&gt; &#xA;&lt;h4&gt;粘贴图片到软件&lt;/h4&gt; &#xA;&lt;p&gt;在任何地方（如文件管理器，网页，微信）复制图片，软件上点击粘贴按钮或快捷键，自动识别。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/09/29/2-w-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;批量识别本地图片文件&lt;/h4&gt; &#xA;&lt;p&gt;将图片或文件夹拖进软件，批量转换文字。也可以点击按钮打开浏览窗口导入。&lt;/p&gt; &#xA;&lt;p&gt;识别结果将保存到本地。可选生成纯文本txt文件、带链接Markdown文件、原始信息jsonl文件等不同格式。可配置任务完成后执行关机/待机。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/09/29/3-w-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;goto-1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;文本块后处理（合并段落）&lt;/h2&gt; &#xA;&lt;p&gt;OCR识别出的文本是按“块”划分的，通常一行文字分为一块，有时还会将一行误划分为多块，这给阅读带来了不便。您可以在Umi-OCR设置页的&lt;strong&gt;合并段落&lt;/strong&gt;中选择恰当的方案，合并同一行或同一段落内的文字，按正确的顺序排序。&lt;/p&gt; &#xA;&lt;h4&gt;排版方案：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;单行&lt;/strong&gt;：合并同一行的文字，适合绝大部分情景。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多行-自然段&lt;/strong&gt;：智能识别、合并属于同一段落的文字，适合绝大部分情景。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多行-代码段&lt;/strong&gt;：尽可能还原原始排版的缩进与空格。适合识别代码片段，或需要保留空格的场景。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;竖排&lt;/strong&gt;：适合竖排排版。需要与同样支持竖排识别的模型库配合使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;忽略区域功能&lt;/h2&gt; &#xA;&lt;p&gt;忽略区域是本软件特色功能，可用于排除图片中水印的干扰，让识别结果只留下所需的文本。&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;“忽略区域”是指图片上指定位置与大小的矩形区域，完全处于这些区域内的文字块，将被排除。&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;设置&lt;/strong&gt; 选项卡中的 &lt;strong&gt;打开忽略区域编辑器&lt;/strong&gt; ，进入编辑器窗口。&lt;/li&gt; &#xA;  &lt;li&gt;将任意图片 &lt;strong&gt;拖入&lt;/strong&gt; 该窗口，可预览该图片。将新图片拖入窗口可切换预览，但已绘制的忽略区域不会消失；可切换不同图片来仔细调整忽略区域。&lt;/li&gt; &#xA;  &lt;li&gt;绘制 &lt;strong&gt;忽略区域&lt;/strong&gt; ：拖入图片后，点击选中左起第一按钮 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; ，然后在图片上按住左键拖拽，绘制矩形区域。可 &lt;strong&gt;撤销&lt;/strong&gt; 步骤。&lt;/li&gt; &#xA;  &lt;li&gt;绘制完后，点击 &lt;strong&gt;完成&lt;/strong&gt; 返回软件主窗口。若不想应用此次绘制，则右上角X，取消。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;简单案例见下。&lt;/p&gt; &#xA; &lt;h4&gt;简单排除视频截图中的水印：&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;打开忽略区域设置窗口，拖入任一张截图。 稍等约1秒，面板上会显示出图片，识别到的文字区域会被虚线框起来。发现右上角的水印也被识别到了。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image04bea2a47232088b.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击选择 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; 。在画面上按住左键拖拽，绘制方框完全包裹住水印区域，范围可以大一些。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image4a49b65bbd22c4a6.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;完成&lt;/strong&gt; 。返回主窗口， &lt;strong&gt;开始任务&lt;/strong&gt; 。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h4&gt;排除游戏截图中的两种UI：&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;假设有一组游戏截图，主要分为两类图片，这两类图片的文字位置和UI位置不太相同： &lt;img src=&#34;https://tupian.li/images/2022/03/30/image1.png&#34; alt=&#34;&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;甲类（上图左）为对话模式，字数少，要保留的台词文本在画面下方，要排除的UI分布于底端。&lt;/li&gt; &#xA;    &lt;li&gt;乙类（上图右）为历史文本模式，字数多，从上到下都有要保留的文本（与甲类UI位置有重合），要排除的UI分布在两侧。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;拖入一张甲类图片。选择 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; ，绘制方框包裹住要排除的 &lt;strong&gt;底端UI&lt;/strong&gt; 。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image2ad97ff898e39d82f.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;拖入一张乙类图片。选择 &lt;strong&gt;+识别区域&lt;/strong&gt; ，绘制方框包裹住 &lt;strong&gt;小部分要保留的文本&lt;/strong&gt; 。注意只要该区域内含有任意保留文本即可，不需要画得很大，不需要包裹住所有保留文本；不能与甲类图中 &lt;strong&gt;可能存在的任何文本&lt;/strong&gt; 重合。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image3.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;然后选择 &lt;strong&gt;+忽略区域 B&lt;/strong&gt; ，绘制方框包裹住乙类图要排除的 &lt;strong&gt;两侧UI&lt;/strong&gt; 。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image4.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;完成&lt;/strong&gt; 。返回主窗口， &lt;strong&gt;开始任务&lt;/strong&gt; 。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h4&gt;忽略区域处理逻辑：&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;忽略区域A&lt;/strong&gt; ：正常情况下，处于 &lt;strong&gt;忽略区域A&lt;/strong&gt; 内的文字 &lt;strong&gt;不会&lt;/strong&gt; 输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;识别区域&lt;/strong&gt; ：当识别区域内存在文本时，&lt;strong&gt;忽略区域A失效&lt;/strong&gt; ；即处于忽略区域A内的文字也 &lt;strong&gt;会&lt;/strong&gt; 被输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;忽略区域B&lt;/strong&gt; ：当 &lt;strong&gt;忽略区域A失效&lt;/strong&gt; 时，忽略区域B才生效；即处于区域A内的文字 &lt;strong&gt;会&lt;/strong&gt; 输出、区域B内的文字 &lt;strong&gt;不会&lt;/strong&gt; 输出。&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;识别区域&lt;/th&gt; &#xA;      &lt;th&gt;忽略区域A&lt;/th&gt; &#xA;      &lt;th&gt;忽略区域B&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;× 不存在文字&lt;/td&gt; &#xA;      &lt;td&gt;√ 生效&lt;/td&gt; &#xA;      &lt;td&gt;× 失效&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;√ 存在文字&lt;/td&gt; &#xA;      &lt;td&gt;× 失效&lt;/td&gt; &#xA;      &lt;td&gt;√ 生效&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;“忽略区域配置”只针对一种分辨率生效。假如配置的分辨率是1920x1080，那么批量识别图片时，只有符合1920x1080的图片才会排除干扰文本；1920x1081的图片中的文字会全部输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;拖入预览的图片必须分辨率相同。假如先拖入1920x1080的图片，再拖入其它分辨率的图片；软件会弹窗警告。只有点击 &lt;strong&gt;清空&lt;/strong&gt; 删除当前已配置的忽略区域，才能拖入其他分辨率图片，并应用此分辨率。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;添加多国语言&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;h5&gt;方法一：下载 [Umi-OCR 多国语言识别扩展包] ，拷贝到软件目录即可。&lt;/h5&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E4%B8%8B%E8%BD%BD&#34;&gt;点此跳转下载位置&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;扩展包内置语言：&lt;code&gt;繁中,英,日,韩,俄,德,法&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;方法二：手动下载添加 PP-OCR 模型库&lt;/h5&gt; &#xA; &lt;ol start=&#34;0&#34;&gt; &#xA;  &lt;li&gt;模型分为三种：det检测，cls方向分类，rec识别。其中det和cls是多语言通用的，只需下载新语言的rec识别模型即可。&lt;/li&gt; &#xA;  &lt;li&gt;前往 PP-OCR系列 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/release/2.6/doc/doc_ch/models_list.md#23-%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%E6%9B%B4%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD&#34;&gt;V3多语言识别模型列表&lt;/a&gt; ，下载一组&lt;strong&gt;rec识别&lt;/strong&gt;模型。 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;若V3模型列表里没有找到目标语言，可以去&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/release/2.6/doc/doc_ch/multi_languages.md#5-%E6%94%AF%E6%8C%81%E8%AF%AD%E7%A7%8D%E5%8F%8A%E7%BC%A9%E5%86%99&#34;&gt;支持语言列表&lt;/a&gt;查看PPOCR有没有提供这种语言。若有，则可能它暂未推出V3模型，可以先使用旧版V2模型。（V3模型网址中的2.x一路换成更小的数字可以查看旧版页面）&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;前往 PP-OCR系列 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.6/ppocr/utils/dict&#34;&gt;字典列表&lt;/a&gt; ，下载对应语言的字典文件。（但V3英文字典&lt;code&gt;en_dict.txt&lt;/code&gt;不是本目录下的那个，而是在&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/release/2.6/ppocr/utils/en_dict.txt&#34;&gt;上一级目录&lt;/a&gt;）&lt;/li&gt; &#xA;  &lt;li&gt;将下载好的文件解压放进软件目录的 &lt;code&gt;PaddleOCR-json&lt;/code&gt; 文件夹中。&lt;/li&gt; &#xA;  &lt;li&gt;复制一份 &lt;code&gt;PaddleOCR_json_config_[模板].txt&lt;/code&gt; ，改一下名。（文件名不允许有非英文字符！）&lt;/li&gt; &#xA;  &lt;li&gt;打开复制好的 &lt;code&gt;PaddleOCR_json_config_XX.txt&lt;/code&gt; ，将 rec路径 &lt;code&gt;rec_model_dir&lt;/code&gt; 和 字典路径 &lt;code&gt;rec_char_dict_path&lt;/code&gt; 改成目标语言的文件(夹)的名称。若模型库是v2版本，还必须加上一行 &lt;code&gt;rec_img_h 32&lt;/code&gt; 。&lt;/li&gt; &#xA;  &lt;li&gt;回到上一层目录 &lt;code&gt;Umi-OCR&lt;/code&gt; ，打开 &lt;code&gt;Umi-OCR_config.json&lt;/code&gt; ，在 &lt;code&gt;&#34;ocrConfig&#34;&lt;/code&gt; 中添加新语言的信息。键为语言名称，值的 &lt;code&gt;path&lt;/code&gt; 为config txt文件的名称。保持json格式，注意逗号。（修改config.json文件时，请确保未打开软件，否则配置可能被覆盖。）&lt;/li&gt; &#xA;  &lt;li&gt;打开软件，检查设置页的&lt;code&gt;识别语言&lt;/code&gt;下拉框是否已经能选择该语言。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a id=&#34;goto-2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;进阶操作 &amp;amp; 小技巧&lt;/h2&gt; &#xA;&lt;h4&gt;命令行调用&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;支持通过命令行调用Umi-OCR，执行部分识图任务。&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;若软件未在运行，则命令行会启动软件并执行任务。若软件已在后台运行，则命令行会直接调用后台的软件执行任务。这样多次调用时可以节省初始化的时间。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;注意命令行调用入口是程序目录的&lt;code&gt;extra&lt;/code&gt;中的&lt;code&gt;umiocr.exe&lt;/code&gt;，而不是软件常规入口（&lt;code&gt;Umi-OCR 文字识别.exe&lt;/code&gt;）。&lt;/p&gt; &#xA; &lt;p&gt;⚠︎ &lt;strong&gt;&lt;code&gt;umiocr.exe&lt;/code&gt;在程序目录的&lt;code&gt;extra&lt;/code&gt;文件夹中。&lt;/strong&gt; ⚠︎&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;命令行语法按照谷歌gflags规则： &lt;code&gt;-命令&lt;/code&gt; 或 &lt;code&gt;-命令=参数&lt;/code&gt; 或 &lt;code&gt;-命令 参数&lt;/code&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h5&gt;指令0：启动软件&lt;/h5&gt; &#xA; &lt;p&gt;若软件尚未启动，则任意指令均会启动软件主程序。&lt;/p&gt; &#xA; &lt;h5&gt;指令1：显示窗口&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe&lt;/code&gt; 或 &lt;code&gt;umiocr.exe -show&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;无论主窗口处于什么状态（最小化、收到托盘、被别的窗口覆盖），该指令都会让主窗口弹到最上层。&lt;/p&gt; &#xA; &lt;h5&gt;指令2：隐藏窗口&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -hide&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;将窗口收到托盘区或最小化。&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;show&lt;/code&gt;和&lt;code&gt;hide&lt;/code&gt;这两个指令可以与其它指令混用，如 &lt;code&gt;umiocr.exe -clipboard -show&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;指令3：关闭软件&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -exit&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;指令4：本地图片识别&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -img=图片.png&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;支持图片/文件夹；多个路径以逗号,分隔；含空格的路径加双引号&#34;&#34;。如：&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -img=&#34;D:/图库,E:/my img/图片.png&#34;&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;若路径含中文，请务必加双引号。&lt;/p&gt; &#xA; &lt;h5&gt;指令5：剪贴板识图&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -clipboard&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;指令6：截屏识图&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -screenshot&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;指令7：切换识别语言&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;umiocr.exe -language=序号&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;“序号”为软件设置里各个语言的排序，从0开始。从上往下数，比如简中排第一，那么是&lt;code&gt;-language=0&lt;/code&gt;。繁中排第二，那么是&lt;code&gt;-language=1&lt;/code&gt;。英文排第四，&lt;code&gt;-language=3&lt;/code&gt;。以此类推。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a id=&#34;goto-3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;复制后发送按键 &amp;amp; 联动翻译软件&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;h5&gt;发送指定按键&lt;/h5&gt; &#xA; &lt;p&gt;&lt;code&gt;v1.3.5&lt;/code&gt; 起，支持快捷识图完成并将结果写入剪贴板后，发送一组指定按键，触发翻译软件进行翻译。当然也可以用于触发你的AHK脚本等，实现更多奇奇怪怪的功能。&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;v1.3.6&lt;/code&gt; 起，截图联动是一个单独的功能，由独立快捷键触发，与常规的截图OCR互不影响。&lt;/p&gt; &#xA; &lt;p&gt;这是一个隐藏高级功能，请先勾选设置页底部的&lt;code&gt;高级选项&lt;/code&gt;，重启软件。设置页的&lt;code&gt;快捷识图&lt;/code&gt;板块会多出两组条目：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;截图联动 快捷键&lt;/strong&gt;：您可设置一组快捷键，来触发该功能。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;联动发送按键&lt;/strong&gt;：触发识图，并将识别结果写入剪贴板后，可以发送一组指定按键。&lt;strong&gt;次&lt;/strong&gt;表示重复发送按键的次数。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;经过测试，Umi-OCR可以顺利地与 &lt;a href=&#34;https://github.com/CopyTranslator/CopyTranslator&#34;&gt;CopyTranslator&lt;/a&gt; 及 &lt;a href=&#34;https://github.com/crimx/ext-saladict&#34;&gt;沙拉查词&lt;/a&gt; 联动触发翻译，以下是配置方法。&lt;/p&gt; &#xA; &lt;h5&gt;联动 CopyTranslator&lt;/h5&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;下载 &lt;a href=&#34;https://github.com/CopyTranslator/CopyTranslator&#34;&gt;CopyTranslator&lt;/a&gt;。这里示例所用的版本是 &lt;code&gt;v11&lt;/code&gt; 。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;如果不介意CopyTranslator监听剪贴板（每次剪贴板变动都尝试翻译），那么勾选Umi-OCR的&lt;code&gt;自动复制结果&lt;/code&gt; 和CopyTranslator的&lt;code&gt;监听剪贴板&lt;/code&gt;即可。 &lt;img src=&#34;https://tupian.li/images/2023/06/20/64915f826f16d.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;如果不一定始终开启监听剪贴板，又希望Umi-OCR在任何情况下能唤起CopyTranslator，可以这样处理：CopyTranslator在设置里勾选&lt;code&gt;双Ctrl+C翻译&lt;/code&gt;；Umi-OCR的&lt;code&gt;联动发送按键&lt;/code&gt;录制为&lt;code&gt;ctrl+c&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;次。 &lt;img src=&#34;https://tupian.li/images/2023/06/20/6491611305570.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h5&gt;联动 沙拉查词&lt;/h5&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/crimx/ext-saladict&#34;&gt;沙拉查词&lt;/a&gt; 是一款浏览器插件，支持Chrome、Edge等浏览器，&lt;a href=&#34;https://saladict.crimx.com/download.html&#34;&gt;这是下载页面&lt;/a&gt;。下面以Edge浏览器为例讲解配置方法。其他浏览器大同小异。（Firefox支持不完善，不推荐。）&lt;/li&gt; &#xA;  &lt;li&gt;打开沙拉查词的插件设置页面，左边栏选择&lt;code&gt;基本选项&lt;/code&gt;，右边栏勾选&lt;code&gt;后台保持运行&lt;/code&gt;。（如果不勾选也能使用，但必须保持浏览器开启。）&lt;/li&gt; &#xA;  &lt;li&gt;左边栏点击&lt;code&gt;隐私设置&lt;/code&gt;，右边栏点击&lt;code&gt;设置快捷键&lt;/code&gt;。 &lt;img src=&#34;https://tupian.li/images/2023/06/20/649165cae4b87.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;在弹出的新页面中，将沙拉查词的&lt;code&gt;在独立窗口中搜索剪贴板内容&lt;/code&gt;设置任意一组快捷键，然后右边改为&lt;code&gt;全局&lt;/code&gt;。Umi-OCR的&lt;code&gt;联动发送按键&lt;/code&gt;录制为相同快捷键，&lt;code&gt;1&lt;/code&gt;次。 &lt;img src=&#34;https://tupian.li/images/2023/06/20/649165faa434f.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;回到沙拉查词的设置页，左边栏点击&lt;code&gt;权限管理&lt;/code&gt;，勾选&lt;code&gt;读取剪贴板&lt;/code&gt;。 &lt;img src=&#34;https://tupian.li/images/2023/06/20/649165f7dbf18.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;自定义计划任务&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;除了默认的自动关机/待机外，您还可创建自己的计划任务，让软件在完成一次批量识别后执行自定义cmd命令。&lt;/li&gt; &#xA;  &lt;li&gt;在软件&lt;strong&gt;关闭&lt;/strong&gt;的情况下，打开配置文件 &lt;code&gt;Umi-OCR_config.json&lt;/code&gt; 。也可以先打开软件，点击设置页最底部的 &lt;strong&gt;打开设置文件&lt;/strong&gt; ，然后退出软件。&lt;/li&gt; &#xA;  &lt;li&gt;在&lt;code&gt;okMission&lt;/code&gt;中添加一项元素。&lt;/li&gt; &#xA;  &lt;li&gt;键为任务名称，值为字典，其中&lt;code&gt;code&lt;/code&gt;为cmd命令。多条命令可用&lt;code&gt;&amp;amp;&lt;/code&gt;分隔。例： &lt;pre&gt;&lt;code&gt;&#34;我的任务&#34;: {&#34;code&#34;: &#34;cmd命令1 &amp;amp; 命令2&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;内存清理&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;本功能默认关闭。&lt;/p&gt; &#xA; &lt;p&gt;供内存占用十分敏感的用户使用，&lt;strong&gt;会有偶尔阻慢任务速度的副作用。&lt;/strong&gt; 一般用户无需开启。&lt;/p&gt; &#xA; &lt;p&gt;若有需要开启，请在设置页拉到底部，勾选&lt;code&gt;高级选项&lt;/code&gt;，重启软件，然后：&lt;code&gt;OCR识别引擎设置&lt;/code&gt; → &lt;code&gt;自动清理内存&lt;/code&gt; → &lt;code&gt;将任一参数改成&amp;gt;0的值&lt;/code&gt; 。&lt;/p&gt; &#xA; &lt;p&gt;原理是满足任一条件（内存占用超限，或者一段时间没有执行任务）则重启引擎组件，释放当前引擎占用的所有内存。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2023/03/19/64168bf25e86c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;添加到运行（Win+R快捷键）&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;在任何地方创建一个文件夹，名字随意，将该文件夹的路径&lt;a href=&#34;https://www.bing.com/search?q=win10+%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;加入系统环境变量&lt;/a&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;软件创建一个快捷方式，改一个简短的名字，如&lt;code&gt;umi&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;将快捷方式扔进第1步的文件夹中。&lt;/li&gt; &#xA;  &lt;li&gt;任何时候按下&lt;code&gt;Win+R&lt;/code&gt;，在弹窗中输入&lt;code&gt;umi&lt;/code&gt;，即可打开软件。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;提示：请不要起名为&lt;code&gt;ocr&lt;/code&gt;，因为系统可能存在同名的注册路径，无法用此指令唤起第三方软件。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;问题排除&lt;/h2&gt; &#xA;&lt;h4&gt;无法启动引擎&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;PaddleOCR引擎暂不支持在没有AVX指令集的CPU上运行，遇到该问题可尝试换用RapidOCR引擎。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;下图指示如何判断该问题是否由缺失AVX引起。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/11/04/63651e9eed1df.png&#34; alt=&#34;CPUAVX.png&#34;&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;常见的家用CPU一般都支持AVX指令集，如下：&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;AVX&lt;/th&gt; &#xA;    &lt;th&gt;支持的产品系列&lt;/th&gt; &#xA;    &lt;th&gt;不支持&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Intel&lt;/td&gt; &#xA;    &lt;td&gt;酷睿Core，至强Xeon，11代及以后的赛扬Celeron和奔腾Pentium&lt;/td&gt; &#xA;    &lt;td&gt;凌动Atom，安腾Itanium，10代及以前的赛扬Celeron和奔腾Pentium&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;AMD&lt;/td&gt; &#xA;    &lt;td&gt;推土机架构及之后的产品，如锐龙Ryzen、速龙Athlon、FX 等&lt;/td&gt; &#xA;    &lt;td&gt;K10架构及之前的产品&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;可通过 &lt;a href=&#34;https://www.cpuid.com/downloads/cpu-z/cpu-z_2.03-cn.zip&#34;&gt;CPU-Z&lt;/a&gt; 软件查看自己CPU的指令集信息。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;多屏幕截图不正常&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;由于windows缩放对屏幕坐标系带来的影响，若外接多块屏幕，且缩放比例不一致时，可能导致Umi-OCR内置截图模块异常，如画面不完整、窗口变形、识别不出文字等。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;若出现这种情况，以下提供三种可替代的解决方案，您可选择一种使用。&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;在系统设置里的【更改文本、应用等项目的大小】将所有屏幕调到相同数值。见下图左。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/09/29/1-1-w--.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;软件附带了第二套截图方案：调用windows内置的“截图和草图”来完成截图并唤起OCR。可在软件设置里切换。（若系统截图后不能唤起OCR，请确保系统能通过 &lt;code&gt;win+shift+S&lt;/code&gt; 触发截图，且&lt;code&gt;自动复制到剪贴板&lt;/code&gt; 的开关不能关闭（默认是打开的）。见上图右。）&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;br&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;禁用软件的DPI缩放。对&lt;code&gt;Umi-OCR 文字识别.exe&lt;/code&gt;，右键 → 属性 → 兼容性 → 更改更高DPI设置 → 勾选&lt;code&gt;替代高DPI缩放行为&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;未找到引擎组件&lt;/h4&gt; &#xA;&lt;p&gt;请将引擎组件 &lt;code&gt;PaddleOCR-json 文件夹&lt;/code&gt; 放置于程序入口（main.py或exe）同目录下。&lt;/p&gt; &#xA;&lt;h2&gt;效率测试&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;测试机器：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;CPU&lt;/th&gt; &#xA;    &lt;th&gt;TDP&lt;/th&gt; &#xA;    &lt;th&gt;RAM&lt;/th&gt; &#xA;    &lt;th&gt;是否兼容mkldnn&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;r5 4600u&lt;/td&gt; &#xA;    &lt;td&gt;15w&lt;/td&gt; &#xA;    &lt;td&gt;16g&lt;/td&gt; &#xA;    &lt;td&gt;无报错&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;测试集：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;图片张数&lt;/th&gt; &#xA;    &lt;th&gt;测试条件&lt;/th&gt; &#xA;    &lt;th&gt;分辨率&lt;/th&gt; &#xA;    &lt;th&gt;平均字块数量&lt;/th&gt; &#xA;    &lt;th&gt;平均字符数量&lt;/th&gt; &#xA;    &lt;th&gt;文字语言&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;100&lt;/td&gt; &#xA;    &lt;td&gt;环境相同，多次测量取平均值&lt;/td&gt; &#xA;    &lt;td&gt;1920x1080&lt;/td&gt; &#xA;    &lt;td&gt;15&lt;/td&gt; &#xA;    &lt;td&gt;250&lt;/td&gt; &#xA;    &lt;td&gt;简体中文&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;测试结果：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Umi-OCR版本&lt;/th&gt; &#xA;    &lt;th&gt;1.2.5&lt;/th&gt; &#xA;    &lt;th&gt;1.2.5&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PaddleOCR-json版本&lt;/td&gt; &#xA;    &lt;td&gt;1.1.1&lt;/td&gt; &#xA;    &lt;td&gt;1.1.1&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;1.2.0&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PP-OCR C++版本&lt;/td&gt; &#xA;    &lt;td&gt;2.1&lt;/td&gt; &#xA;    &lt;td&gt;2.1&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;2.6&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;是否开启mkldnn&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PP-OCR模型库版本&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;v3&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;v3 slim&lt;/td&gt; &#xA;    &lt;td&gt;v3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;总耗时（秒）&lt;/td&gt; &#xA;    &lt;td&gt;90&lt;/td&gt; &#xA;    &lt;td&gt;120&lt;/td&gt; &#xA;    &lt;td&gt;65&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;63&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;170&lt;/td&gt; &#xA;    &lt;td&gt;400&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;平均单张耗时（秒）&lt;/td&gt; &#xA;    &lt;td&gt;0.9&lt;/td&gt; &#xA;    &lt;td&gt;1.2&lt;/td&gt; &#xA;    &lt;td&gt;0.65&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;0.63&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;1.7&lt;/td&gt; &#xA;    &lt;td&gt;4.0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;内存占用峰值（MB）&lt;/td&gt; &#xA;    &lt;td&gt;1000&lt;/td&gt; &#xA;    &lt;td&gt;350&lt;/td&gt; &#xA;    &lt;td&gt;1200&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;1700&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;5800&lt;/td&gt; &#xA;    &lt;td&gt;500&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;结论：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;在启用mkldnn情况下，&lt;code&gt;v1.2.6&lt;/code&gt; 及之后的版本，比前代的效率具有显著优势。新版调教倾向于榨干硬件的性能，内存占用高于旧版。&lt;/li&gt; &#xA;  &lt;li&gt;不启用mkldnn时，新版本效率不如前代。故您的CPU若不支持mkldnn（极早期AMD型号），可尝试使用 &lt;code&gt;v1.2.5&lt;/code&gt; 的旧版本Umi-OCR。&lt;/li&gt; &#xA;  &lt;li&gt;虽然Paddle官方文档中说经过压缩剪枝蒸馏量化的slim版模型的性能指标会超过传统算法，但实测 v3 slim 模型的性能远不如原始版本，还可能伴随着内存泄漏的问题。也许是 PP-OCR C++ 引擎不适配。在该问题解决之前，Umi-OCR发行版提供原始版本模型。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;开发说明&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;开发者滴碎碎念&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;如果想用接口调用OCR，可试试 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json#paddleocr-json-%E5%9B%BE%E7%89%87%E8%BD%AC%E6%96%87%E5%AD%97%E7%A8%8B%E5%BA%8F&#34;&gt;PaddleOCR-json 图片转文字程序&lt;/a&gt; 。&lt;/li&gt; &#xA;  &lt;li&gt;PPOCR v2.6 (PaddleOCR-json v1.2.0) 版本提高了批量处理的平均速度，但代价是需要花费更长时间进行初始化。提高了启用mkldnn加速时的识别速度，但代价时不开启加速时效率更低。（CPU只要不是特别早期的AMD，一般都能使用mkldnn，但加速幅度可能不如同档次的Intel。）&lt;/li&gt; &#xA;  &lt;li&gt;未来将增加 openblas 版识别引擎，进一步优化AMD的效率。（有 生 之 年）&lt;/li&gt; &#xA;  &lt;li&gt;使用&lt;code&gt;pyinstaller&lt;/code&gt;打包。可以运行根目录下的 &lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/to_exe.py&#34;&gt;to_exe.py&lt;/a&gt; 一键打包。&lt;/li&gt; &#xA;  &lt;li&gt;配置文件&lt;code&gt;Umi-OCR_config.json&lt;/code&gt;在第一次运行程序时生成。若想自定义引擎组件的路径，可以修改其中的&lt;code&gt;ocrToolPath&lt;/code&gt;属性。支持绝对/相对路径。可以实现多个前端共用一套引擎组件。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;v1.3.0&lt;/code&gt; 几乎重写了整个项目框架，将业务逻辑与UI代码解耦，划分出多个子模块。这些子模块我认为是比较方便拓展的： &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;文件输出模块 &lt;code&gt;ocr/output_*.py&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;文本块后处理模块 &lt;code&gt;ocr/tbou/*.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;添加一个新子模块的一般方法是： &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;在 &lt;code&gt;utils/config.py&lt;/code&gt; 里添加需要的配置项。在 &lt;code&gt;_ConfigDict&lt;/code&gt; 里编写配置项参数后，可以自动生成tk.var变量，读、写本地配置文件。程序运行过程中，参数发生更改就会自动写入本地。&lt;/li&gt; &#xA;    &lt;li&gt;在 &lt;code&gt;ui/win_main.py&lt;/code&gt; 里添加需要的UI。需要tk.var动态变量时，直接 &lt;code&gt;Config.getTK()&lt;/code&gt; 拿来绑定。&lt;/li&gt; &#xA;    &lt;li&gt;继承模块父类，写业务逻辑。初始化时读入配置，事件方法里写对应的处理。&lt;/li&gt; &#xA;    &lt;li&gt;模块尽量不要有过多对外接口，传参越多越容易乱。要什么去 &lt;code&gt;Config&lt;/code&gt; 里拿就是了，比如要调用主窗口类的方法就用 &lt;code&gt;Config.main&lt;/code&gt; ，要参数就 &lt;code&gt;Config.get()&lt;/code&gt;。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;反正 &lt;code&gt;Config&lt;/code&gt; 就是中枢，是各个模块之间、模块与配置之间交流的全局接口。尽量不要跨线程同时读写。我是设计在执行任务时能修改到配置项的UI都给锁定，以免影响任务线程读取。&lt;/li&gt; &#xA;  &lt;li&gt;个人喜欢小而美，所以尽量不使用体积大的包。一直用tkinter而不用功能强大的QT也是这个原因，PYQT的体积近50m，几乎是整个项目打包后（不含引擎）的两倍大了。&lt;/li&gt; &#xA;  &lt;li&gt;注释超级多，不怕看不懂~ 不过有些代码写得比较丑，请见谅。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;已完成&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;输出内容可选为markdown风格并嵌入图片路径。&lt;/li&gt; &#xA;  &lt;li&gt;设置项能保存。&lt;/li&gt; &#xA;  &lt;li&gt;自动打开输出文件or文件夹。&lt;/li&gt; &#xA;  &lt;li&gt;识别剪贴板中的图片。&lt;/li&gt; &#xA;  &lt;li&gt;任务进行时，禁用部分设置项。&lt;/li&gt; &#xA;  &lt;li&gt;计划任务：完成后自动关机/休眠等。&lt;/li&gt; &#xA;  &lt;li&gt;递归导入文件夹。&lt;/li&gt; &#xA;  &lt;li&gt;优化适配PaddleOCR v3模型。&lt;/li&gt; &#xA;  &lt;li&gt;增加OCR引擎进程常驻后台的模式，大幅缩短剪贴板识图等零碎任务动时间。&lt;/li&gt; &#xA;  &lt;li&gt;监控OCR引擎进程内存占用，并可随时强制停止该进程。&lt;/li&gt; &#xA;  &lt;li&gt;内置截图。&lt;/li&gt; &#xA;  &lt;li&gt;可最小化至系统托盘。&lt;/li&gt; &#xA;  &lt;li&gt;优化UI：以图标代替文字按钮。设置项悬停有气泡提示框。&lt;/li&gt; &#xA;  &lt;li&gt;自动检测Windows语言是否兼容&lt;/li&gt; &#xA;  &lt;li&gt;解决引擎Opencv对不同地区语言Windows的兼容性。&lt;/li&gt; &#xA;  &lt;li&gt;优化引擎参数设置。&lt;/li&gt; &#xA;  &lt;li&gt;排版后处理：匹配/合并同段落文本，支持横/竖排。&lt;/li&gt; &#xA;  &lt;li&gt;可设置窗口弹出模式（锁定置顶）。&lt;/li&gt; &#xA;  &lt;li&gt;重新快捷键模块，解决失效和录制不正确的Bug。&lt;/li&gt; &#xA;  &lt;li&gt;设置开机自启。&lt;/li&gt; &#xA;  &lt;li&gt;创建快捷方式到开始菜单、桌面。&lt;/li&gt; &#xA;  &lt;li&gt;多开提示。&lt;/li&gt; &#xA;  &lt;li&gt;截图时隐藏窗口。&lt;/li&gt; &#xA;  &lt;li&gt;结构输出到每个图片同名的单独txt文件&lt;/li&gt; &#xA;  &lt;li&gt;创建开机启动项时，可选&lt;code&gt;不显示主窗口&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;OCR结果输出到每个图片同名的单独txt文件。&lt;/li&gt; &#xA;  &lt;li&gt;增加独立的设置语言窗口，可在多处点开，便于切换语言。&lt;/li&gt; &#xA;  &lt;li&gt;合并段落添加&lt;code&gt;合并自然段-西文模式&lt;/code&gt;，可在英文段落换行时补充空格。&lt;/li&gt; &#xA;  &lt;li&gt;快捷识图可选&lt;code&gt;自动清空面板&lt;/code&gt;，只显示本次识别结果，且隐藏时间信息。&lt;/li&gt; &#xA;  &lt;li&gt;通过命令行控制Umi-OCR。&lt;/li&gt; &#xA;  &lt;li&gt;弹出悬浮的识别成功与否的提示。&lt;/li&gt; &#xA;  &lt;li&gt;定时或超过限度时自动清理引擎内存占用。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;画饼（有生之年）&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;文本纠错。&lt;/li&gt; &#xA;  &lt;li&gt;多国语言。&lt;/li&gt; &#xA;  &lt;li&gt;高分屏支持。&lt;/li&gt; &#xA;  &lt;li&gt;PDF文档识别。&lt;/li&gt; &#xA;  &lt;li&gt;对图片重命名。&lt;/li&gt; &#xA;  &lt;li&gt;提高初始化速度。&lt;/li&gt; &#xA;  &lt;li&gt;忽略区域能保存预设。&lt;/li&gt; &#xA;  &lt;li&gt;缩减离线OCR模块的体积。&lt;/li&gt; &#xA;  &lt;li&gt;自动检测CPU指令集是否兼容。&lt;/li&gt; &#xA;  &lt;li&gt;优化界面设计，分离功能模块到不同标签页。&lt;/li&gt; &#xA;  &lt;li&gt;离线OCR模块增加 &lt;code&gt;no_avx&lt;/code&gt; 和 &lt;code&gt;openblas&lt;/code&gt; 版本。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;p&gt;点击版本号链接可前往对应备份分支。&lt;/p&gt; &#xA;&lt;h5&gt;v1.3.7 &lt;code&gt;2023.10.10&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Paddle引擎兼容Win7 x64 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.6&#34;&gt;v1.3.6&lt;/a&gt; &lt;code&gt;2023.9.26&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：更强大的段落合并方案-&lt;code&gt;单行/多行自然段/多行代码段&lt;/code&gt;。支持自动判断中/英文段落，采取对应的合并规则。&lt;/li&gt; &#xA; &lt;li&gt;移除一些过时的段落合并方案。&lt;/li&gt; &#xA; &lt;li&gt;功能调整：&lt;code&gt;截图联动&lt;/code&gt; 划分为独立的功能，不受常规截图OCR影响。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.5&#34;&gt;v1.3.5&lt;/a&gt; &lt;code&gt;2023.6.20&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- 6.5k★ 撒花~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：复制识别结果后，可发送指定按键，以便联动唤起翻译器等工具。&lt;/li&gt; &#xA; &lt;li&gt;新功能：命令行增加切换识别语言的指令。&lt;/li&gt; &#xA; &lt;li&gt;修Bug：低配置机器上有概率误报&lt;code&gt;OCR init timeout: 5s&lt;/code&gt; 。&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/154&#34;&gt;#154&lt;/a&gt; , &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/156&#34;&gt;#156&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;调整：默认停止任务30秒后释放一次内存。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.4&#34;&gt;v1.3.4&lt;/a&gt; &lt;code&gt;2023.4.26&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- 一周年纪念！ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：截图预览窗口。&lt;/li&gt; &#xA; &lt;li&gt;新功能：可用方向键微调截图框位置。&lt;/li&gt; &#xA; &lt;li&gt;修Bug：拖入图片时有几率卡退主窗口 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/126&#34;&gt;issue #126&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;优化了一些处理流程。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.3&#34;&gt;v1.3.3&lt;/a&gt; &lt;code&gt;2023.3.19&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- 4.5k★ 撒花~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：命令行模式。&lt;/li&gt; &#xA; &lt;li&gt;新功能：识图完成的通知悬浮窗。&lt;/li&gt; &#xA; &lt;li&gt;新功能：自动清理引擎内存。&lt;/li&gt; &#xA; &lt;li&gt;修复了一些BUG，优化了一些UI表现。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.2&#34;&gt;v1.3.2&lt;/a&gt; &lt;code&gt;2022.12.1&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- 3k★ 撒花~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：创建开机启动项时，可选&lt;code&gt;不显示主窗口&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;新功能：OCR结果输出到每个图片同名的单独txt文件。&lt;/li&gt; &#xA; &lt;li&gt;新功能：增加独立的设置语言窗口，可在多处点开，便于切换语言。&lt;/li&gt; &#xA; &lt;li&gt;新功能：合并段落添加&lt;code&gt;合并自然段-西文模式&lt;/code&gt;，可在英文段落换行时补充空格。&lt;/li&gt; &#xA; &lt;li&gt;新功能：快捷识图可选&lt;code&gt;自动清空面板&lt;/code&gt;，只显示本次识别结果，且隐藏时间信息。&lt;/li&gt; &#xA; &lt;li&gt;修复了一些BUG。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.1&#34;&gt;v1.3.1&lt;/a&gt; &lt;code&gt;2022.11.4&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- 2k★ 撒花~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修Bug：快捷键模块重写，引入pynput库，舍弃keyboard库，解决几率失效、录制不正确等Bug。&lt;/li&gt; &#xA; &lt;li&gt;新功能：添加开机自启，桌面快捷方式，开始菜单快捷方式。&lt;/li&gt; &#xA; &lt;li&gt;新功能：多开软件时提示。&lt;/li&gt; &#xA; &lt;li&gt;新功能：截图时隐藏窗口。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：使用频率极低的设置项设为隐藏的高级选项。&lt;/li&gt; &#xA; &lt;li&gt;优化：检查引擎组件是否存在。&lt;/li&gt; &#xA; &lt;li&gt;优化：&lt;code&gt;横排-合并多行-自然段&lt;/code&gt; 优化逻辑，支持0~2全角空格首行缩进。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.0&#34;&gt;v1.3.0&lt;/a&gt; &lt;code&gt;2022.9.29&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：框选截屏。&lt;/li&gt; &#xA; &lt;li&gt;新功能：系统托盘图标。&lt;/li&gt; &#xA; &lt;li&gt;新功能：引擎进程常驻。&lt;/li&gt; &#xA; &lt;li&gt;新功能：文本块后处理模块。&lt;/li&gt; &#xA; &lt;li&gt;新功能：自定义主输出栏字体。&lt;/li&gt; &#xA; &lt;li&gt;新功能：设置窗口弹出模式（保持置顶）。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：自适应Win风格组件。&lt;/li&gt; &#xA; &lt;li&gt;修正了Bug：系统语言兼容性问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/16&#34;&gt;issue #16&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;修正了Bug：微信图片粘贴问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/22&#34;&gt;issue #22&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;更新PaddleOCR-json模块至&lt;code&gt;v1.2.1&lt;/code&gt;，提供剪贴板支持。快捷识图通过剪贴板中转，无需再保存临时文件到硬盘。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/tree/release/1.2.6&#34;&gt;v1.2.6&lt;/a&gt; &lt;code&gt;2022.9.1&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- Takahara Umi酱生日快乐~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新PaddleOCR-json模块至&lt;code&gt;v1.2.0&lt;/code&gt;，提高识别速度、准确度。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：更方便地用下拉框切换识别语言。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：可以从主窗口任意位置/任意选项卡拖入图片。&lt;/li&gt; &#xA; &lt;li&gt;修正了Bug：提高程序健壮性，增加启动子进程时的更多异常处理情况。&lt;/li&gt; &#xA; &lt;li&gt;修正了Bug：彻底解决了对边缘过窄的图片，识别结果不准确的问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/7&#34;&gt;issue #7&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;优化适配PP-OCRv3模型，彻底解决了v3版模型比v2慢、不准的问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/4#issuecomment-1141735773&#34;&gt;issue #4&lt;/a&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.5 &lt;code&gt;2022.7.22&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：计划任务。识图完成后执行自动关机等任务。&lt;/li&gt; &#xA; &lt;li&gt;新功能：可选拖入文件夹时递归导入子文件夹中所有图片。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：添加一些配置文件的快捷入口。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.4 &lt;code&gt;2022.6.4&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：可选识别剪贴板图片后自动复制识别的文本。&lt;/li&gt; &#xA; &lt;li&gt;补充功能：快捷键调用剪贴板识图时，若程序窗口被最小化，则恢复前台状态并挪到最前位置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.3 &lt;code&gt;2022.5.31&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：读取剪贴板图片。配置全局快捷键调用该功能。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.2 &lt;code&gt;2022.4.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：可选任务完成后自动打开输出文件或目录。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.1 &lt;code&gt;2022.4.16&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新PaddleOCR-json模块至&lt;code&gt;v1.1.1&lt;/code&gt;，修正了可能得到错误包围盒的漏洞。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.0 &lt;code&gt;2022.4.8&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可选生成图文链接.md文件，作为索引使用有更佳的观感。&lt;/li&gt; &#xA; &lt;li&gt;修改设置面板的样式，改为滚动面板以容纳更多设置选项。&lt;/li&gt; &#xA; &lt;li&gt;用户修改配置项后可自动保存。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.1.1 &lt;code&gt;2022.3.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修正了Bug：退出忽略区域窗口时，OCR子进程未关闭。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.1.0 &lt;code&gt;2022.3.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新功能：忽略区域窗口以虚线框 展示识别出的文字块。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.0.0 &lt;code&gt;2022.3.28&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;“梦开始的地方”&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;p&gt;本项目核心引擎组件源自 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddlePaddle/PaddleOCR&lt;/a&gt;：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Awesome multilingual OCR toolkits based on PaddlePaddle&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;本项目中所使用的库：&lt;/h5&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/google/python-gflags&#34;&gt;google/python-gflags&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Python implementation of the Google commandline flags module.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/moses-palmer/pynput&#34;&gt;moses-palmer/pynput&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This library allows you to control and monitor input devices.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/Infinidat/infi.systray&#34;&gt;Infinidat/infi.systray&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A Windows system tray icon with a right-click context menu.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://pmw.sourceforge.net/&#34;&gt;Pwm&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Pmw is a toolkit for building high-level compound widgets in Python using the Tkinter module.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Umi-系列图片处理软件&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Umi-OCR 批量图片转文字软件 ◁&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-CUT&#34;&gt;Umi-CUT 批量图片去黑边/裁剪/压缩软件&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/generative-ai-for-beginners</title>
    <updated>2023-11-04T01:24:14Z</updated>
    <id>tag:github.com,2023-11-04:/microsoft/generative-ai-for-beginners</id>
    <link href="https://github.com/microsoft/generative-ai-for-beginners" rel="alternate"></link>
    <summary type="html">&lt;p&gt;12 Lessons, Get Started Building with Generative AI 🔗 https://microsoft.github.io/generative-ai-for-beginners/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/img/1.png&#34; alt=&#34;Generative AI For Beginners&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;A 12 Lesson course teaching everything you need to know to start building Generative AI applications&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/Generative-AI-For-Beginners/raw/master/LICENSE?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/microsoft/Generative-AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/graphs/contributors/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/microsoft/Generative-AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/issues/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/Generative-AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/pulls/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/microsoft/Generative-AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub pull-requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/watchers/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/network/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/Generative-AI-For-Beginners/stargazers/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/microsoft/generative-ai-for-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?style=for-the-badge&amp;amp;label=GitHub+Codespaces&amp;amp;message=Open&amp;amp;color=lightgrey&amp;amp;logo=github&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/genai-discord&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/ByRwuEEgH4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Generative AI for Beginners - A Course&lt;/h1&gt; &#xA;&lt;p&gt;Learn the fundamentals of building Generative AI applications with our 12-lesson comprehensive course by Microsoft Cloud Advocates. Each lesson covers a key aspect of Generative AI principles and application development. Throughout this course, we will be building our own Generative AI startup so you can get an understanding of what it takes to launch your ideas.&lt;/p&gt; &#xA;&lt;h2&gt;🌱 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started, &lt;a href=&#34;https://github.com/microsoft/generative-ai-for-beginners/fork?WT.mc_id=academic-105485-koreyst&#34;&gt;fork this entire repo&lt;/a&gt; to your own GitHub account to be able to change any code and complete the challenges. You can also &lt;a href=&#34;https://docs.github.com/en/get-started/exploring-projects-on-github/saving-repositories-with-stars?WT.mc_id=academic-105485-koreyst&#34;&gt;star (🌟) this repo&lt;/a&gt; to find it easier later.&lt;/p&gt; &#xA;&lt;p&gt;Below are the links to each lesson. Feel free to explore and start at any lesson that interests you the most!&lt;/p&gt; &#xA;&lt;p&gt;Head to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/00-course-setup/README.md&#34;&gt;Course Setup Page&lt;/a&gt; to find the setup guide that works best for you.&lt;/p&gt; &#xA;&lt;h2&gt;🗣️ Meet Other Learners, Get Support&lt;/h2&gt; &#xA;&lt;p&gt;We believe one of the best ways to learn is learning with others! Join our &lt;a href=&#34;https://aka.ms/genai-discord&#34;&gt;official AI Discord server&lt;/a&gt; to meet and network with other learners taking this course and get support. Who knows? You might find your next co-founder there!&lt;/p&gt; &#xA;&lt;h3&gt;🚀 Are you a startup or got an idea you want to launch?&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://aka.ms/genai-foundershub&#34;&gt;Microsoft&#39;s Founders Hub&lt;/a&gt; where you can apply to receive &lt;strong&gt;free OpenAI credits&lt;/strong&gt; and up to &lt;strong&gt;$150k towards Azure&#39;s leading AI services&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🙏 Want to help?&lt;/h2&gt; &#xA;&lt;p&gt;Here are ways you can contribute to this course:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find spelling errors or code errors, &lt;a href=&#34;https://github.com/microsoft/generative-ai-for-beginners/issues?WT.mc_id=academic-105485-koreyst&#34;&gt;Raise an issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/microsoft/generative-ai-for-beginners/pulls?WT.mc_id=academic-105485-koreyst&#34;&gt;Create a pull request&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send us your ideas, maybe your ideas for new lessons or exercises, and let us know how we can improve.&lt;/li&gt; &#xA; &lt;li&gt;Translate to your language, every chapter has a &lt;em&gt;translations&lt;/em&gt; subdirectory, if you want to help with this one create the following structure:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;  Chapter NN/&#xA;    translations&#xA;      es/          &amp;lt;== your language code&#xA;       README.md   &amp;lt;== your translation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📂 Each lesson includes:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a short video introduction to the topic&lt;/li&gt; &#xA; &lt;li&gt;written lesson located in the README&lt;/li&gt; &#xA; &lt;li&gt;for project-based lessons, a Jupyter Notebook with code examples&lt;/li&gt; &#xA; &lt;li&gt;a challenge or assignment to apply your learning&lt;/li&gt; &#xA; &lt;li&gt;links to extra resources to continue your learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗃️ Lessons&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Lesson Link&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Concepts Taught&lt;/th&gt; &#xA;   &lt;th&gt;Learning Goal&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/00-course-setup/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Course Introduction - How to Take This Course&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Tech setup and course structure&lt;/td&gt; &#xA;   &lt;td&gt;Setting you up for success while learning in this course&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;01&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/01-introduction-to-genai/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Introduction to Generative AI and LLMs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Concept&lt;/strong&gt;: Generative AI and how we landed on the current technology landscape&lt;/td&gt; &#xA;   &lt;td&gt;Understanding what Generative AI is and how Large Language Models (LLMs) work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;02&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/02-exploring-and-comparing-different-llms/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Exploring and comparing different LLMs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Concept&lt;/strong&gt;: Testing, iterating, and comparing different Large Language Models&lt;/td&gt; &#xA;   &lt;td&gt;Select the right model for your use case&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/03-using-generative-ai-responsibly/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Using Generative AI Responsibly&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Concept:&lt;/strong&gt; Understanding the limitations of foundation models and the risks behind AI&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to build Generative AI Applications responsibly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/04-prompt-engineering-fundamentals/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Understanding Prompt Engineering Fundamentals&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code/Concept:&lt;/strong&gt; Hands-on application of Prompt Engineering Best Practices&lt;/td&gt; &#xA;   &lt;td&gt;Understand prompt structure &amp;amp; usage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/05-advanced-prompts/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Creating Advanced Prompts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code/Concept:&lt;/strong&gt; Extend your knowledge of prompt engineering by applying different techniques to your prompts&lt;/td&gt; &#xA;   &lt;td&gt;Apply prompt engineering techniques that improve the outcome of your prompts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;06&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/06-text-generation-apps/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Building Text Generation Applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code:&lt;/strong&gt; Build a text generation app using Azure OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;Understand how to efficiently use tokens and temperature to vary the model&#39;s output&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/07-building-chat-applications/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Building Chat Applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code&lt;/strong&gt;: Techniques for efficiently building and integrating chat applications.&lt;/td&gt; &#xA;   &lt;td&gt;Identify key metrics and considerations to effectively monitor and maintain the quality of AI-powered chat applications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;08&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/08-building-search-applications/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Building Search Apps Vector Databases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code&lt;/strong&gt;: Semantic vs Keyword search. What are text embeddings and how do they apply to search&lt;/td&gt; &#xA;   &lt;td&gt;Create an application that uses Embeddings to search for data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/09-building-image-applications/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Building Image Generation Applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code:&lt;/strong&gt; Image generation and why it&#39;s useful in building applications&lt;/td&gt; &#xA;   &lt;td&gt;Build an image generation application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/10-building-low-code-ai-applications/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Building Low Code AI Applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Low Code:&lt;/strong&gt; Introduction to Generative AI in Power Platform&lt;/td&gt; &#xA;   &lt;td&gt;Build a Student Assignment Tracker App for our education startup with Low Code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/11-integrating-with-function-calling/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Integrating External Applications with Function Calling&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Code:&lt;/strong&gt; What is function calling and its use cases for applications&lt;/td&gt; &#xA;   &lt;td&gt;Setup a function call to retrieve data from an external API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/12-designing-ux-for-ai-applications/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Designing UX for AI Applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Concept:&lt;/strong&gt; Designing AI Applications for Trust and Transparency&lt;/td&gt; &#xA;   &lt;td&gt;Apply UX design principles when developing Generative AI Applications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;xx&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/13-continued-learning/README.md?WT.mc_id=academic-105485-koreyst&#34;&gt;Continue Your Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Links to continue your learning from each lesson!&lt;/td&gt; &#xA;   &lt;td&gt;Mastering your Generative AI skills&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🎒 Other Courses&lt;/h2&gt; &#xA;&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aka.ms/ml-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;ML for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aka.ms/datascience-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;Data Science for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aka.ms/ai-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;AI for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aka.ms/webdev-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;Web Dev for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aka.ms/iot-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;IoT for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/xr-development-for-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;XR Development for Beginners&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>