<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-06T01:22:35Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HardhatChad/ore</title>
    <updated>2024-04-06T01:22:35Z</updated>
    <id>tag:github.com,2024-04-06:/HardhatChad/ore</id>
    <link href="https://github.com/HardhatChad/ore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ore&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ore is a digital currency you can mine from anywhere, at home or on your phone.&lt;/strong&gt; It uses a novel proof-of-work algorithm to guarantee no miner can ever be starved out from earning rewards.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The primary innovation of Ore is to offer non-exclusive mining rewards. This means one miner finding a valid solution does not prevent another miner from finding one as well. Rather than setting up every miner in a winner-take-all competition against one another, Ore gives each miner a personalized computational challenge. As long as a miner provides a valid solution to their own individual challenge, the protocol guarantees they will earn a piece of the supply. Since no miner can be censored from the network and valid solutions are non-exclusive, starvation is avoided.&lt;/p&gt; &#xA;&lt;h2&gt;Supply&lt;/h2&gt; &#xA;&lt;p&gt;Ore is designed to protect holders from runaway supply inflation. Regardless of how many miners are active in the world, supply growth is strictly bounded to a rate of &lt;code&gt;0 ‚â§ R ‚â§ 2 ORE/min&lt;/code&gt;. In other words, linear. The mining reward rate ‚Äì amount paid out to miners per valid solution ‚Äì is dynamically adjusted every 60 seconds to maintain an average supply growth of &lt;code&gt;1 ORE/min&lt;/code&gt;. This level was chosen for its straightforward simplicity, scale agnosticism, and for striking a balance between the extremes of exponential inflation on one hand and stagnant deflation on the other.&lt;/p&gt; &#xA;&lt;h2&gt;Program&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/consts.rs&#34;&gt;&lt;code&gt;Consts&lt;/code&gt;&lt;/a&gt; ‚Äì&amp;nbsp;Program constants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/lib.rs&#34;&gt;&lt;code&gt;Entrypoint&lt;/code&gt;&lt;/a&gt; ‚Äì&amp;nbsp;The program entrypoint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/error.rs&#34;&gt;&lt;code&gt;Errors&lt;/code&gt;&lt;/a&gt; ‚Äì&amp;nbsp;Custom program errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/idl/ore.json&#34;&gt;&lt;code&gt;Idl&lt;/code&gt;&lt;/a&gt; ‚Äì Interface for clients, explorers, and programs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/instruction.rs&#34;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; ‚Äì&amp;nbsp;Declared instructions and arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/loaders.rs&#34;&gt;&lt;code&gt;Loaders&lt;/code&gt;&lt;/a&gt; ‚Äì&amp;nbsp;Validation logic for loading Solana accounts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/initialize.rs&#34;&gt;&lt;code&gt;Initialize&lt;/code&gt;&lt;/a&gt;&amp;nbsp;‚Äì Initializes the Ore program, creating the bus, mint, and treasury accounts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/reset.rs&#34;&gt;&lt;code&gt;Reset&lt;/code&gt;&lt;/a&gt; ‚Äì Resets the program for a new epoch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/register.rs&#34;&gt;&lt;code&gt;Register&lt;/code&gt;&lt;/a&gt;&amp;nbsp;‚Äì Creates a new proof account for a prospective miner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/mine.rs&#34;&gt;&lt;code&gt;Mine&lt;/code&gt;&lt;/a&gt; ‚Äì Verifies a hash provided by a miner and issues claimable rewards.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/claim.rs&#34;&gt;&lt;code&gt;Claim&lt;/code&gt;&lt;/a&gt; ‚Äì Distributes claimable rewards as tokens from the treasury to a miner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/update_admin.rs&#34;&gt;&lt;code&gt;UpdateAdmin&lt;/code&gt;&lt;/a&gt;&amp;nbsp;‚Äì Updates the admin authority.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/processor/update_difficulty.rs&#34;&gt;&lt;code&gt;UpdateDifficulty&lt;/code&gt;&lt;/a&gt; - Updates the hashing difficulty.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;State&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/state/bus.rs&#34;&gt;&lt;code&gt;Bus&lt;/code&gt;&lt;/a&gt; - An account (8 total) which tracks and limits the amount mined rewards each epoch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/state/proof.rs&#34;&gt;&lt;code&gt;Proof&lt;/code&gt;&lt;/a&gt; - An account (1 per miner) which tracks a miner&#39;s hash, claimable rewards, and lifetime stats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HardhatChad/ore/master/src/state/treasury.rs&#34;&gt;&lt;code&gt;Treasury&lt;/code&gt;&lt;/a&gt; ‚Äì A singleton account which manages program-wide variables and authorities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;To run the test suite, use the Solana toolchain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo test-sbf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For line coverage, use llvm-cov:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo llvm-cov&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nilsherzig/LLocalSearch</title>
    <updated>2024-04-06T01:22:35Z</updated>
    <id>tag:github.com,2024-04-06:/nilsherzig/LLocalSearch</id>
    <link href="https://github.com/nilsherzig/LLocalSearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LLocalSearch is a completely locally running search aggregator using LLM Agents. The user can ask a question and the system will use a chain of LLMs to find the answer. The user can see the progress of the agents and the final answer. No OpenAI or Google API keys are needed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LLocalSearch&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] I&#39;ve pushed some very important performance upgrades and hotfixes to the container registry. Please run &#34;docker-compose pull&#34; to update your containers.&lt;/p&gt; &#xA; &lt;p&gt;05.04.2024 switching the embedding model, please update containers. I will add an update notification to the webui in the future :).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;What it is&lt;/h2&gt; &#xA;&lt;p&gt;LLocalSearch is a completely locally running search aggregator using LLM Agents. The user can ask a question and the system will use a chain of LLMs to find the answer. The user can see the progress of the agents and the final answer. No OpenAI or Google API keys are needed.&lt;/p&gt; &#xA;&lt;p&gt;Now with follow-up questions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nilsherzig/LLocalSearch/assets/72463901/8323be25-de2a-4ddf-853b-4a01557b5599&#34;&gt;https://github.com/nilsherzig/LLocalSearch/assets/72463901/8323be25-de2a-4ddf-853b-4a01557b5599&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nilsherzig/LLocalSearch/assets/72463901/9f6497aa-8047-4d11-9a12-66aff65d3faa&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üïµÔ∏è Completely local (no need for API keys)&lt;/li&gt; &#xA; &lt;li&gt;üí∏ Runs on &#34;low end&#34; LLM Hardware (demo video uses a 7b model)&lt;/li&gt; &#xA; &lt;li&gt;ü§ì Progress logs, allowing for a better understanding of the search process&lt;/li&gt; &#xA; &lt;li&gt;ü§î Follow-up questions&lt;/li&gt; &#xA; &lt;li&gt;üì± Mobile friendly interface&lt;/li&gt; &#xA; &lt;li&gt;üöÄ Fast and easy to deploy with Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;üåê Web interface, allowing for easy access from any device&lt;/li&gt; &#xA; &lt;li&gt;üíÆ Handcrafted UI with light and dark mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This project is still in its very early days. Expect some bugs.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/nilsherzig/LLocalSearch/issues/17&#34;&gt;infra&lt;/a&gt; to get the most up-to-date idea.&lt;/p&gt; &#xA;&lt;h2&gt;Self-hosting &amp;amp; Development&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A running &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt; server, reachable from the container &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GPU is not needed, but recommended&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the latest release&lt;/h3&gt; &#xA;&lt;p&gt;Recommended, if you don&#39;t intend to develop on this project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/nilsherzig/LLocalSearch.git&#xA;cd ./LLocalSearch&#xA;# üî¥ check the env vars inside the compose file (and `env-example` file) and change them if needed&#xA;docker-compose up &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;üéâ You should now be able to open the web interface on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;. Nothing else is exposed by default.&lt;/p&gt; &#xA;&lt;h3&gt;Run the current git version&lt;/h3&gt; &#xA;&lt;p&gt;Newer features, but potentially less stable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/nilsherzig/LLocalsearch.git&#xA;# 1. make sure to check the env vars inside the `docker-compose.dev.yaml`.&#xA;# 2. Make sure you&#39;ve really checked the dev compose file not the normal one.&#xA;&#xA;# 3. build the containers and start the services&#xA;make dev &#xA;# Both front and backend will hot reload on code changes. &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have &lt;code&gt;make&lt;/code&gt; installed, you can run the commands inside the Makefile manually.&lt;/p&gt; &#xA;&lt;p&gt;Now you should be able to access the frontend on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;stars&lt;/h2&gt; &#xA;&lt;p&gt;Kinda looks like im botting haha&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#nilsherzig/LLocalSearch&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=nilsherzig/LLocalSearch&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HardhatChad/ore-cli</title>
    <updated>2024-04-06T01:22:35Z</updated>
    <id>tag:github.com,2024-04-06:/HardhatChad/ore-cli</id>
    <link href="https://github.com/HardhatChad/ore-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ore CLI&lt;/h1&gt; &#xA;&lt;p&gt;A command line interface for the Ore program.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;To build the Ore CLI, you will need to have the Rust programming language installed. You can install Rust by following the instructions on the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Rust installed, you can build the Ore CLI by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>