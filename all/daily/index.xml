<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-10T01:28:56Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CopilotKit/CopilotKit</title>
    <updated>2024-07-10T01:28:56Z</updated>
    <id>tag:github.com,2024-07-10:/CopilotKit/CopilotKit</id>
    <link href="https://github.com/CopilotKit/CopilotKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A framework for building custom AI Copilots ü§ñ in-app AI chatbots, in-app AI Agents, &amp; AI-powered Textareas.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://ai88.substack.com/p/copilotkit-v1-launch&#34;&gt; CopilotKit v1.0 release! Read about it here. &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/5890217b-524e-49c5-a89e-b8743d2acd51&#34;&gt; &#xA;  &lt;img alt=&#34;CopilotKit Logo&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/bd5c9079-929b-4d55-bdc9-16d1c8181b71&#34; width=&#34;450px&#34; max-width=&#34;100%&#34;&gt; &#xA; &lt;/picture&gt;  &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/6dffbvGU3D&#34;&gt; &lt;img src=&#34;https://dcbadge.vercel.app/api/server/6dffbvGU3D?compact=true&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotKit/CopilotKit/actions/workflows/ci.yml&#34;&gt; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub CI&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@copilotkit/react-core&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@copilotkit/react-core&#34; alt=&#34;NPM&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/CopilotKit/CopilotKit&#34; alt=&#34;MIT&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://www.npmjs.com/package/@copilotkit/react-core&#34;&gt; &lt;h1 align=&#34;center&#34;&gt; The Open-Source Copilot Framework &lt;/h1&gt; &lt;h2 align=&#34;center&#34;&gt; Build, deploy, and operate fully custom AI Copilots. &lt;/h2&gt; &lt;h3 align=&#34;center&#34;&gt; in-app AI chatbots, AI agents, and AI Textareas. &lt;/h3&gt; &lt;/a&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/@copilotkit/react-core&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://discord.com/invite/6dffbvGU3D&#34;&gt; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/bf8d96ea-3aeb-4c9a-9043-96a868b7ad0f&#34; alt=&#34;Join our Discord&#34; height=&#34;30&#34;&gt; &lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href=&#34;https://docs.copilotkit.ai/getting-started/quickstart-chatbot&#34;&gt; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/a4a0fd04-6aee-4e02-9c3e-3f11d60b4e8b&#34; alt=&#34;Read the Docs&#34; height=&#34;30&#34;&gt; &lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href=&#34;https://cloud.copilotkit.ai&#34;&gt; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/28ca62a8-cf93-4d3f-96b0-dc11bf89b734&#34; alt=&#34;Try Copilot Cloud&#34; height=&#34;30&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/ea8edde4-dbde-40b4-bb60-e55bd1023094&#34; width=&#34;700px&#34; max-width=&#34;100%&#34; style=&#34;border-radius: 35px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/731a57bf-ece4-48aa-8792-7bf288fdc3fd&#34; width=&#34;700px&#34; max-width=&#34;100%&#34; style=&#34;border-radius: 35px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/2e47721d-01a1-4719-9871-1dbdbea638ac&#34; width=&#34;700px&#34; max-width=&#34;100%&#34; style=&#34;border-radius: 35px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/1d0373f6-5932-4c4e-84e9-bfdbad53f38f&#34; width=&#34;700px&#34; max-width=&#34;100%&#34; style=&#34;border-radius: 35px;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/1a420e0a-3731-4105-b95c-01e07652723b&#34; width=&#34;700px&#34; max-width=&#34;100%&#34; style=&#34;border-radius: 35px;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&#34;Hello World&#34; Templates&lt;/h2&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; PowerPoint + Copilot &lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-presentation&#34;&gt;https://github.com/CopilotKit/demo-presentation&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-presentation&#34;&gt; &lt;img alt=&#34;Presentation&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/6e1a448b-d153-431f-8132-46a668d8a0d1&#34; width=&#34;200px&#34; style=&#34;max-width:100%; border-radius: 10px;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &#34;Hello World&#34; (A Todo App) &lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-todo&#34;&gt;https://github.com/CopilotKit/demo-todo&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-todo&#34;&gt; &lt;img alt=&#34;Todo App&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/63798c02-1892-4d2d-bc9f-2994b7c88694&#34; width=&#34;200px&#34; style=&#34;max-width:100%; border-radius: 10px;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; Spreadsheets + Copilot &lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-spreadsheet&#34;&gt;https://github.com/CopilotKit/demo-spreadsheet&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-spreadsheet&#34;&gt; &lt;img alt=&#34;Presentation-Demo&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/871e4c9c-0ced-490b-9e3f-8594de7c5c89&#34; width=&#34;200px&#34; style=&#34;max-width:100%; border-radius: 10px;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; PowerPoint + Copilot + Voice &lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-presentation-voice&#34;&gt;https://github.com/CopilotKit/demo-presentation-voice&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/CopilotKit/demo-presentation-voice&#34;&gt; &lt;img alt=&#34;Presentation-Voice&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/131273140/6e1a448b-d153-431f-8132-46a668d8a0d1&#34; width=&#34;200px&#34; style=&#34;max-width:100%; border-radius: 10px;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;!--     &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt;&#xA;      Enterprise Onboarding &lt;br/&gt;&#xA;      &lt;a href=&#34;https://github.com/CopilotKit/campaign-manager-demo&#34;&gt;https://github.com/CopilotKit/campaign-manager-demo&lt;/a&gt; &lt;br/&gt;&lt;br&gt;&#xA;      &lt;a href=&#34;https://github.com/CopilotKit/campaign-manager-demo&#34;&gt;&#xA;        &lt;img alt=&#34;Presentation-Demo&#34; src=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/3cea8976-55bd-4687-aa53-1ce3b3a41643&#34; width=&#34;200px&#34; style=&#34;max-width:100%; border-radius: 10px;&#34;/&gt;&#xA;      &lt;/a&gt;&#xA;    &lt;/td&gt; --&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;üåü &lt;strong&gt;&amp;lt;CopilotChat /&amp;gt;:&lt;/strong&gt; &lt;br&gt; Build &lt;strong&gt;app-aware AI chatbots&lt;/strong&gt; that can &#34;see&#34; the current app state + take action inside your app. &lt;br&gt; The AI chatbot can talk to your app frontend &amp;amp; backend, and to 3rd party services (Salesforce, Dropbox, etc.) via plugins. &lt;br&gt; Supports generative UI. Start in seconds:&lt;/p&gt; &#xA;&lt;p&gt;üåü &lt;strong&gt;&amp;lt;CopilotTextarea /&amp;gt;:&lt;/strong&gt; &lt;br&gt; Drop-in replacement for any &lt;code&gt;&amp;lt;textarea /&amp;gt;.&lt;/code&gt; AI-assisted text generation. &lt;br&gt; Autocompletions + AI editing + generate from scratch. Grounded on your users&#39; data and Copilot application context.&lt;br&gt; Simply change &lt;code&gt;textarea&lt;/code&gt; to &lt;code&gt;CopilotTextarea&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;üåü &lt;strong&gt;In-App Agents (powered by LangChain):&lt;/strong&gt; &lt;br&gt; Give agents access to realtime application context, and let agents take action inside applications.&lt;/p&gt; &#xA;&lt;p&gt;üåü &lt;strong&gt;Co-Agents (powered by LangChain. Coming soon.):&lt;/strong&gt; &lt;br&gt; Allow end-users to observe and intervene in an in-app agent‚Äôs operations, with native application UX. End users can &lt;strong&gt;&lt;em&gt;correct&lt;/em&gt;&lt;/strong&gt; mistakes in intermediate steps if any were made, and &lt;strong&gt;restart agent operation from that point onwards&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How does it work&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Define the following simple entry-points&lt;/strong&gt; into your application, and the CopilotKitü™Å execution engine takes care of the rest!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application state&lt;/strong&gt; (frontend + backend + 3rd party)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application interaction&lt;/strong&gt; (via plain typescript code, frontend + backend)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose-specific LLM chains&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i @copilotkit/react-core @copilotkit/react-ui @copilotkit/react-textarea&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;See quickstart in the &lt;a href=&#34;https://docs.copilotkit.ai&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;3-min showcase + 3-min implementation tutorial:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CopilotKit/CopilotKit/assets/746397/b1749282-a3e4-4ef4-a780-7d03f30edf5b&#34;&gt;CopilotKit_Demo_Jan_zjgjk0.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building blocks&lt;/h2&gt; &#xA;&lt;p&gt;A more comprehensive and up-to-date overview is available in the &lt;a href=&#34;https://docs.copilotkit.ai&#34;&gt;docs&lt;/a&gt;. &lt;br&gt; But roughly:&lt;/p&gt; &#xA;&lt;h3&gt;Copilot entrypoints&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useCopilotReadable&lt;/code&gt;: give frontend state to the copilot&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useMakeCopilotDocumentReadable&lt;/code&gt;: give document state to the copilot, especially useful with 3rd party state (e.g. Gong call transcript).&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useCopilotAction&lt;/code&gt;: frontend application interaction&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;CopilotRuntime&lt;/code&gt;: server side runtime&lt;/li&gt; &#xA; &lt;li&gt;üöß &lt;code&gt;useCopilotChain&lt;/code&gt;: provide usecase-specific LLM chains&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Built-in UI components&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;&amp;lt;CopilotSidebar&amp;gt;&lt;/code&gt;: Built in, hackable Copilot UI (optional - you can bring your own UI).&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;&amp;lt;CopilotPopup&amp;gt;&lt;/code&gt;: Built in popup UI.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;&amp;lt;CopilotChat&amp;gt;&lt;/code&gt;: Standalone chat UI&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;&amp;lt;CopilotTextarea /&amp;gt;&lt;/code&gt;: drop-in &lt;code&gt;&amp;lt;textarea /&amp;gt;&lt;/code&gt; replacement with Copilot autocompletions.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useCopilotChat()&lt;/code&gt; for fully-custom UI component&lt;/li&gt; &#xA; &lt;li&gt;üöß use custom UX elements inside the chat (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;CopilotSidebar /&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import &#34;@copilotkit/react-ui/styles.css&#34;; // add to the app-global css&#xA;import { CopilotKit } from &#34;@copilotkit/react-core&#34;;&#xA;import { CopilotSidebar } from &#34;@copilotkit/react-ui&#34;;&#xA;&#xA;function MyAmazingContent() {&#xA;  const importantInfo = useImportantInfo();&#xA;  useCopilotReadable({&#xA;    description: &#34;Very important information&#34;,&#xA;    value: importantInfo,&#xA;  });&#xA;&#xA;  useCopilotAction(&#xA;    {&#xA;      name: `selectDestinations_${toCamelCase(heading)}`,&#xA;      description: `Set the given destinations as &#39;selected&#39;, on the ${heading} table`,&#xA;      parameters: [&#xA;        {&#xA;          name: &#34;destinationNames&#34;,&#xA;          type: &#34;string[]&#34;,&#xA;          description: &#34;The names of the destinations to select&#34;,&#xA;          required: true,&#xA;        },&#xA;      ],&#xA;      handler: async ({ destinationNames }) =&amp;gt; {&#xA;        setCheckedRows((prevState) =&amp;gt; {&#xA;          const newState = { ...prevState };&#xA;          destinationNames.forEach((destinationName) =&amp;gt; {&#xA;            newState[destinationName] = true;&#xA;          });&#xA;          return newState;&#xA;        });&#xA;      },&#xA;    },&#xA;    []&#xA;  );&#xA;&#xA;  return &amp;lt;YourContent /&amp;gt;;&#xA;}&#xA;&#xA;export default function App() {&#xA;  return (&#xA;    &amp;lt;CopilotKit url=&#34;/api/copilotkit/chat&#34;&amp;gt;&#xA;      {&#34; &#34;}&#xA;      {/* Global state &amp;amp; copilot logic. Put this around the entire app */}&#xA;      &amp;lt;CopilotSidebar&amp;gt;&#xA;        {&#34; &#34;}&#xA;        {/* A built-in Copilot UI (or bring your own UI). Put around individual pages, or the entire app. */}&#xA;        &amp;lt;MyAmazingContent /&amp;gt;&#xA;      &amp;lt;/CopilotSidebar&amp;gt;&#xA;    &amp;lt;/CopilotKit&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;CopilotTextarea /&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A drop-in &amp;lt;textarea /&amp;gt; replacement with autocompletions, AI insertions/edits, and generate-from-scratch. &lt;br&gt; Indexed on data provided to the Copilot.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CopilotKit/CopilotKit/main/assets/CopilotTextarea.gif&#34; width=&#34;648&#34; style=&#34;border-radius: 15px; max-width=&#34; 100%&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import &#34;@copilotkit/react-textarea/styles.css&#34;; // add to the app-global css&#xA;import { CopilotTextarea } from &#34;@copilotkit/react-textarea&#34;;&#xA;import { CopilotKit } from &#34;@copilotkit/react-core&#34;;&#xA;&#xA;// call ANYWHERE in your app to provide external context (make sure you wrap the app with a &amp;lt;CopilotKit &amp;gt;):&#xA;// See below for more features (parent/child hierarchy, categories, etc.)&#xA;useCopilotReadable({&#xA;  description: &#34;The description of your data&#34;,&#xA;  value: relevantInformation,&#xA;});&#xA;useMakeCopilotDocumentReadable(document);&#xA;&#xA;return (&#xA;  &amp;lt;CopilotKit url=&#34;/api/copilotkit/chat&#34;&amp;gt;&#xA;    {&#34; &#34;}&#xA;    {/* Global state &amp;amp; copilot logic. Put this around the entire app */}&#xA;    &amp;lt;CopilotTextarea&#xA;      className=&#34;p-4 w-1/2 aspect-square font-bold text-3xl bg-slate-800 text-white rounded-lg resize-none&#34;&#xA;      placeholder=&#34;A CopilotTextarea!&#34;&#xA;      autosuggestionsConfig={{&#xA;        purposePrompt:&#xA;          &#34;A COOL &amp;amp; SMOOTH announcement post about CopilotTextarea. Be brief. Be clear. Be cool.&#34;,&#xA;        forwardedParams: {&#xA;          // additional arguments to customize autocompletions&#xA;          max_tokens: 25,&#xA;          stop: [&#34;\n&#34;, &#34;.&#34;, &#34;,&#34;],&#xA;        },&#xA;      }}&#xA;    /&amp;gt;&#xA;  &amp;lt;/CopilotKit&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Near-Term Roadmap&lt;/h2&gt; &#xA;&lt;h3&gt;üìä Please vote on features via the Issues tab!&lt;/h3&gt; &#xA;&lt;h3&gt;Copilot-App Interaction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useCopilotReadable&lt;/code&gt;: give frontend state to the copilot&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useMakeCopilotDocumentReadable&lt;/code&gt;: give document state to the copilot, especially useful with 3rd party state (e.g. Gong call transcript)&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ &lt;code&gt;useCopilotAction&lt;/code&gt;: Let the copilot interact with the application&lt;/li&gt; &#xA; &lt;li&gt;üöß &lt;code&gt;useMakeCopilotAskable&lt;/code&gt;: let the copilot ask for additional information when needed (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;üöß &lt;code&gt;useCopilotChain&lt;/code&gt;: provide usecase-specific chain&lt;/li&gt; &#xA; &lt;li&gt;üöß &lt;code&gt;useEditCopilotMessage&lt;/code&gt;: edit the (unsent) typed user message to the copilot (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;üöß copilot-assisted navigation: go to the best page to achieve some objective.&lt;/li&gt; &#xA; &lt;li&gt;üöß Copilot Cloud: From hosting, chat history, analytics, and evals, to automatic Copilot personalization and self-improvement.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Vercel AI SDK&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ OpenAI APIs&lt;/li&gt; &#xA; &lt;li&gt;üöß Langchain&lt;/li&gt; &#xA; &lt;li&gt;üöß Additional LLM providers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ React&lt;/li&gt; &#xA; &lt;li&gt;üöß Vue&lt;/li&gt; &#xA; &lt;li&gt;üöß Svelte&lt;/li&gt; &#xA; &lt;li&gt;üöß Swift (Mac + iOS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! üéâ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/6dffbvGU3D&#34;&gt;Join the Discord&lt;/a&gt; &lt;a href=&#34;https://discord.gg/6dffbvGU3D&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/6dffbvGU3D?compact=true&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Discord](https://img.shields.io/discord/1122926057641742418.svg)](https://discord.gg/6dffbvGU3D) --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;atai &lt;code&gt;&amp;lt;at&amp;gt;&lt;/code&gt; copilotkit.ai&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ethereum-optimism/optimism</title>
    <updated>2024-07-10T01:28:56Z</updated>
    <id>tag:github.com,2024-07-10:/ethereum-optimism/optimism</id>
    <link href="https://github.com/ethereum-optimism/optimism" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Optimism is Ethereum, scaled.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://optimism.io&#34;&gt;&lt;img alt=&#34;Optimism&#34; src=&#34;https://raw.githubusercontent.com/ethereum-optimism/brand-kit/main/assets/svg/OPTIMISM-R.svg?sanitize=true&#34; width=&#34;600&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;h3&gt;&lt;a href=&#34;https://optimism.io&#34;&gt;Optimism&lt;/a&gt; is Ethereum, scaled.&lt;/h3&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#what-is-optimism&#34;&gt;What is Optimism?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#specification&#34;&gt;Specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#security-policy-and-vulnerability-reporting&#34;&gt;Security Policy and Vulnerability Reporting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#directory-structure&#34;&gt;Directory Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-and-release-process&#34;&gt;Development and Release Process&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#production-releases&#34;&gt;Production Releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-branch&#34;&gt;Development branch&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;What is Optimism?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.optimism.io/&#34;&gt;Optimism&lt;/a&gt; is a project dedicated to scaling Ethereum&#39;s technology and expanding its ability to coordinate people from across the world to build effective decentralized economies and governance systems. The &lt;a href=&#34;https://www.optimism.io/vision&#34;&gt;Optimism Collective&lt;/a&gt; builds open-source software that powers scalable blockchains and aims to address key governance and economic challenges in the wider Ethereum ecosystem. Optimism operates on the principle of &lt;strong&gt;impact=profit&lt;/strong&gt;, the idea that individuals who positively impact the Collective should be proportionally rewarded with profit. &lt;strong&gt;Change the incentives and you change the world.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this repository you&#39;ll find numerous core components of the OP Stack, the decentralized software stack maintained by the Optimism Collective that powers Optimism and forms the backbone of blockchains like &lt;a href=&#34;https://explorer.optimism.io/&#34;&gt;OP Mainnet&lt;/a&gt; and &lt;a href=&#34;https://base.org&#34;&gt;Base&lt;/a&gt;. The OP Stack is designed to be aggressively open-source ‚Äî you are welcome to explore, modify, and extend this code.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to build on top of OP Mainnet, refer to the &lt;a href=&#34;https://docs.optimism.io&#34;&gt;Optimism Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you want to build your own OP Stack based blockchain, refer to the &lt;a href=&#34;https://docs.optimism.io/stack/getting-started&#34;&gt;OP Stack Guide&lt;/a&gt; and make sure to understand this repository&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-and-release-process&#34;&gt;Development and Release Process&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Specification&lt;/h2&gt; &#xA;&lt;p&gt;Detailed specifications for the OP Stack can be found within the &lt;a href=&#34;https://github.com/ethereum-optimism/specs&#34;&gt;OP Stack Specs&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;General discussion happens most frequently on the &lt;a href=&#34;https://discord.gg/optimism&#34;&gt;Optimism discord&lt;/a&gt;. Governance discussion can also be found on the &lt;a href=&#34;https://gov.optimism.io/&#34;&gt;Optimism Governance Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The OP Stack is a collaborative project. By collaborating on free, open software and shared standards, the Optimism Collective aims to prevent siloed software development and rapidly accelerate the development of the Ethereum ecosystem. Come contribute, build the future, and redefine power, together.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; contains a detailed explanation of the contributing process for this repository. Make sure to use the &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/CONTRIBUTING.md#development-quick-start&#34;&gt;Developer Quick Start&lt;/a&gt; to properly set up your development environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ethereum-optimism/optimism/issues?q=is:open+is:issue+label:D-good-first-issue&#34;&gt;Good First Issues&lt;/a&gt; are a great place to look for tasks to tackle if you&#39;re not sure where to start.&lt;/p&gt; &#xA;&lt;h2&gt;Security Policy and Vulnerability Reporting&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the canonical &lt;a href=&#34;https://github.com/ethereum-optimism/.github/raw/master/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt; document for detailed information about how to report vulnerabilities in this codebase. Bounty hunters are encouraged to check out the &lt;a href=&#34;https://immunefi.com/bounty/optimism/&#34;&gt;Optimism Immunefi bug bounty program&lt;/a&gt;. The Optimism Immunefi program offers up to $2,000,042 for in-scope critical vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/docs&#34;&gt;docs&lt;/a&gt;: A collection of documents including audits and post-mortems&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-batcher&#34;&gt;op-batcher&lt;/a&gt;: L2-Batch Submitter, submits bundles of batches to L1&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-bootnode&#34;&gt;op-bootnode&lt;/a&gt;: Standalone op-node discovery bootnode&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-chain-ops&#34;&gt;op-chain-ops&lt;/a&gt;: State surgery utilities&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-challenger&#34;&gt;op-challenger&lt;/a&gt;: Dispute game challenge agent&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-e2e&#34;&gt;op-e2e&lt;/a&gt;: End-to-End testing of all bedrock components in Go&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-heartbeat&#34;&gt;op-heartbeat&lt;/a&gt;: Heartbeat monitor service&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-node&#34;&gt;op-node&lt;/a&gt;: rollup consensus-layer client&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-preimage&#34;&gt;op-preimage&lt;/a&gt;: Go bindings for Preimage Oracle&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-program&#34;&gt;op-program&lt;/a&gt;: Fault proof program&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-proposer&#34;&gt;op-proposer&lt;/a&gt;: L2-Output Submitter, submits proposals to L1&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-service&#34;&gt;op-service&lt;/a&gt;: Common codebase utilities&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-ufm&#34;&gt;op-ufm&lt;/a&gt;: Simulations for monitoring end-to-end transaction latency&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-wheel&#34;&gt;op-wheel&lt;/a&gt;: Database utilities&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/ops&#34;&gt;ops&lt;/a&gt;: Various operational packages&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/ops-bedrock&#34;&gt;ops-bedrock&lt;/a&gt;: Bedrock devnet work&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages&#34;&gt;packages&lt;/a&gt;&#xA;‚îÇ   ‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages/chain-mon&#34;&gt;chain-mon&lt;/a&gt;: Chain monitoring services&#xA;‚îÇ   ‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages/contracts-bedrock&#34;&gt;contracts-bedrock&lt;/a&gt;: OP Stack smart contracts&#xA;‚îÇ   ‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages/devnet-tasks&#34;&gt;devnet-tasks&lt;/a&gt;: Legacy Hardhat tasks used within devnet CI tests&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/proxyd&#34;&gt;proxyd&lt;/a&gt;: Configurable RPC request router and proxy&#xA;‚îú‚îÄ‚îÄ &lt;a href=&#34;https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/specs&#34;&gt;specs&lt;/a&gt;: Specs of the rollup starting at the Bedrock upgrade&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Development and Release Process&lt;/h2&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;Please read this section carefully if you&#39;re planning to fork or make frequent PRs into this repository.&lt;/p&gt; &#xA;&lt;h3&gt;Production Releases&lt;/h3&gt; &#xA;&lt;p&gt;Production releases are always tags, versioned as &lt;code&gt;&amp;lt;component-name&amp;gt;/v&amp;lt;semver&amp;gt;&lt;/code&gt;. For example, an &lt;code&gt;op-node&lt;/code&gt; release might be versioned as &lt;code&gt;op-node/v1.1.2&lt;/code&gt;, and smart contract releases might be versioned as &lt;code&gt;op-contracts/v1.0.0&lt;/code&gt;. Release candidates are versioned in the format &lt;code&gt;op-node/v1.1.2-rc.1&lt;/code&gt;. We always start with &lt;code&gt;rc.1&lt;/code&gt; rather than &lt;code&gt;rc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For contract releases, refer to the GitHub release notes for a given release which will list the specific contracts being released. Not all contracts are considered production ready within a release and many are under active development.&lt;/p&gt; &#xA;&lt;p&gt;Tags of the form &lt;code&gt;v&amp;lt;semver&amp;gt;&lt;/code&gt;, such as &lt;code&gt;v1.1.4&lt;/code&gt;, indicate releases of all Go code only, and &lt;strong&gt;DO NOT&lt;/strong&gt; include smart contracts. This naming scheme is required by Golang. In the above list, this means these &lt;code&gt;v&amp;lt;semver&lt;/code&gt; releases contain all &lt;code&gt;op-*&lt;/code&gt; components and exclude all &lt;code&gt;contracts-*&lt;/code&gt; components.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;op-geth&lt;/code&gt; embeds upstream geth‚Äôs version inside it‚Äôs own version as follows: &lt;code&gt;vMAJOR.GETH_MAJOR GETH_MINOR GETH_PATCH.PATCH&lt;/code&gt;. Basically, geth‚Äôs version is our minor version. For example if geth is at &lt;code&gt;v1.12.0&lt;/code&gt;, the corresponding op-geth version would be &lt;code&gt;v1.101200.0&lt;/code&gt;. Note that we pad out to three characters for the geth minor version and two characters for the geth patch version. Since we cannot left-pad with zeroes, the geth major version is not padded.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.optimism.io/builders/node-operators/releases&#34;&gt;Node Software Releases&lt;/a&gt; page of the documentation for more information about releases for the latest node components.&lt;/p&gt; &#xA;&lt;p&gt;The full set of components that have releases are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chain-mon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ci-builder&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ci-builder&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-batcher&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-contracts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-challenger&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-heartbeat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-node&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-proposer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;op-ufm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxyd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All other components and packages should be considered development components only and do not have releases.&lt;/p&gt; &#xA;&lt;h3&gt;Development branch&lt;/h3&gt; &#xA;&lt;p&gt;The primary development branch is &lt;a href=&#34;https://github.com/ethereum-optimism/optimism/tree/develop/&#34;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;develop&lt;/code&gt; contains the most up-to-date software that remains backwards compatible with the latest experimental &lt;a href=&#34;https://community.optimism.io/docs/useful-tools/networks/&#34;&gt;network deployments&lt;/a&gt;. If you&#39;re making a backwards compatible change, please direct your pull request towards &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Changes to contracts within &lt;code&gt;packages/contracts-bedrock/src&lt;/code&gt; are usually NOT considered backwards compatible.&lt;/strong&gt; Some exceptions to this rule exist for cases in which we absolutely must deploy some new contract after a tag has already been fully deployed. If you&#39;re changing or adding a contract and you&#39;re unsure about which branch to make a PR into, default to using a feature branch. Feature branches are typically used when there are conflicts between 2 projects touching the same code, to avoid conflicts from merging both into &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All other files within this repository are licensed under the &lt;a href=&#34;https://github.com/ethereum-optimism/optimism/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt; unless stated otherwise.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>techschool/simplebank</title>
    <updated>2024-07-10T01:28:56Z</updated>
    <id>tag:github.com,2024-07-10:/techschool/simplebank</id>
    <link href="https://github.com/techschool/simplebank" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backend master class: build a simple bank service in Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple Bank&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the codes of the &lt;a href=&#34;https://bit.ly/backendmaster&#34;&gt;Backend Master Class&lt;/a&gt; course by &lt;a href=&#34;https://bit.ly/m/techschool&#34;&gt;TECH SCHOOL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/techschool/simplebank/master/backend-master.png&#34; alt=&#34;Backend master class&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also find it on Udemy at &lt;a href=&#34;https://bit.ly/backendudemy&#34;&gt;this link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And don&#39;t hesitate to &lt;a href=&#34;https://bit.ly/techschooldc&#34;&gt;join Tech School&#39;s Discord group&lt;/a&gt; to chat directly with me and other students.&lt;/p&gt; &#xA;&lt;p&gt;In this course, you will learn step-by-step how to design, develop and deploy a backend web service from scratch. I believe the best way to learn programming is to build a real application. Therefore, throughout the course, you will learn how to build a backend web service for a simple bank. It will provide APIs for the frontend to do the following things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create and manage bank accounts.&lt;/li&gt; &#xA; &lt;li&gt;Record all balance changes to each of the accounts.&lt;/li&gt; &#xA; &lt;li&gt;Perform a money transfer between 2 accounts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The programming language we will use to develop the service is Golang, but the course is not just about coding in Go. You will learn a lot of different topics regarding backend web development. They are presented in 6 sections:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In the 1st section, you will learn deeply about how to design the database, generate codes to talk to the DB in a consistent and reliable way using transactions, understand the DB&amp;nbsp;isolation levels, and how to use it correctly in production. Besides the database, you will also learn how to use docker for local development, how to use Git to manage your codes, and how to use GitHub Action to run unit tests automatically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the 2nd section, you will learn how to build a set of RESTful HTTP&amp;nbsp;APIs&amp;nbsp;using Gin - one of the most popular Golang frameworks for building web services. This includes everything from loading app configs, mocking DB for more robust unit tests, handling errors, authenticating users, and securing the APIs with JWT and PASETO&amp;nbsp;access tokens.&amp;nbsp;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the 3rd section, you will learn how to build your app with Docker and deploy it to a production Kubernetes cluster on AWS. The lectures are very detailed with a step-by-step guide, from how to build a minimal docker image, set up a free-tier AWS account, create a production database, store and retrieve production secrets, create a Kubernetes cluster with EKS, use GitHub Action to automatically build and deploy the image to the EKS cluster, buy a domain name and route the traffics to the service, secure the connection with HTTPS and auto-renew TLS certificate from Let&#39;s Encrypt.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the 4th section, we will discuss several advanced backend topics such as managing user sessions, building gRPC APIs, using gRPC gateway to serve both gRPC and HTTP requests at the same time, embedding Swagger documentation as part of the backend service, partially updating a record using optional parameters, and writing structured logger HTTP&amp;nbsp;middlewares and gRPC interceptors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then the 5th section will introduce you to asynchronous processing in Golang using background workers and Redis as its message queue. We&#39;ll also learn how to create and send emails to users via Gmail SMTP&amp;nbsp;server. Along the way, we&#39;ll learn more about writing unit tests for our gRPC services that might involve mocking multiple dependencies at once.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The final section 6th concludes the course with lectures about how to improve the stability and security of the server. We&#39;ll keep updating dependency packages to the latest version, use Cookies to make the refresh token more secure, and learn how to gracefully shut down the server to protect the processing resources. As this part is still a work in progress, we will keep making and uploading new videos about new topics in the future. So please come back here to check them out from time to time.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This course is designed with a lot of details, so that everyone, even with very little programming experience can understand and do it by themselves. I strongly believe that after the course, you would be able to work much more confidently and effectively on your projects.&lt;/p&gt; &#xA;&lt;h2&gt;Course videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #0: &lt;a href=&#34;https://www.youtube.com/watch?v=TtCfDXfSw_0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Setup development environment on Windows: WSL2 + Go + VSCode + Docker + Make + Sqlc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 1: Working with database [Postgres]&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #1: &lt;a href=&#34;https://www.youtube.com/watch?v=rx6CPDK_5mU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Design DB schema and generate SQL code with dbdiagram.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #2: &lt;a href=&#34;https://www.youtube.com/watch?v=Q9ipbLeqmQo&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Install &amp;amp; use Docker + Postgres + TablePlus to create DB schema&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #3: &lt;a href=&#34;https://www.youtube.com/watch?v=0CYkrGIJkpw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to write &amp;amp; run database migration in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #4: &lt;a href=&#34;https://www.youtube.com/watch?v=prh0hTyI1sU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Generate CRUD Golang code from SQL | Compare db/sql, gorm, sqlx &amp;amp; sqlc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #5: &lt;a href=&#34;https://www.youtube.com/watch?v=phHDfOHB2PU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Write unit tests for database CRUD with random data in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #6: &lt;a href=&#34;https://www.youtube.com/watch?v=gBh__1eFwVI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;A clean way to implement database transaction in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #7: &lt;a href=&#34;https://www.youtube.com/watch?v=G2aggv_3Bbg&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;DB transaction lock &amp;amp; How to handle deadlock in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #8: &lt;a href=&#34;https://www.youtube.com/watch?v=qn3-5wdOfoA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to avoid deadlock in DB transaction? Queries order matters!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #9: &lt;a href=&#34;https://www.youtube.com/watch?v=4EajrPgJAk0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Deeply understand transaction isolation levels &amp;amp; read phenomena in MySQL &amp;amp; PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #10: &lt;a href=&#34;https://www.youtube.com/watch?v=3mzQRJY1GVE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Setup Github Actions for Golang + Postgres to run automated tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 2: Building RESTful HTTP JSON API [Gin]&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #11: &lt;a href=&#34;https://www.youtube.com/watch?v=n_Y_YisgqTw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement RESTful HTTP API in Go using Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #12: &lt;a href=&#34;https://www.youtube.com/watch?v=n5p8HkO6bnE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Load config from file &amp;amp; environment variables in Go with Viper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #13: &lt;a href=&#34;https://www.youtube.com/watch?v=rL0aeMutoJ0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Mock DB for testing HTTP API in Go and achieve 100% coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #14: &lt;a href=&#34;https://www.youtube.com/watch?v=5q_wsashJZA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement transfer money API with a custom params validator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #15: &lt;a href=&#34;https://www.youtube.com/watch?v=D4VtNC3vQUs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Add users table with unique &amp;amp; foreign key constraints in PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #16: &lt;a href=&#34;https://www.youtube.com/watch?v=mJ8b5GcvoxQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to handle DB errors in Golang correctly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #17: &lt;a href=&#34;https://www.youtube.com/watch?v=B3xnJI2lHmc&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to securely store passwords? Hash password in Go with Bcrypt!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #18: &lt;a href=&#34;https://www.youtube.com/watch?v=DuzBE0jKOgE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to write stronger unit tests with a custom gomock matcher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #19: &lt;a href=&#34;https://www.youtube.com/watch?v=nBGx-q52KAY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Why PASETO is better than JWT for token-based authentication?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #20: &lt;a href=&#34;https://www.youtube.com/watch?v=Oi4FHDGILuY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to create and verify JWT &amp;amp; PASETO token in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #21: &lt;a href=&#34;https://www.youtube.com/watch?v=lnHbZ9GOGAs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement login user API that returns PASETO or JWT access token in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #22: &lt;a href=&#34;https://www.youtube.com/watch?v=Pw8fVBRS4jA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement authentication middleware and authorization rules in Golang using Gin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 3: Deploying the application to production [Kubernetes + AWS]&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #23: &lt;a href=&#34;https://www.youtube.com/watch?v=p1dwLKAxUxA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Build a minimal Golang Docker image with a multistage Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #24: &lt;a href=&#34;https://www.youtube.com/watch?v=VcFnqQarpjI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to use docker network to connect 2 stand-alone containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #25: &lt;a href=&#34;https://www.youtube.com/watch?v=jf6sQsz0M1M&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to write docker-compose file and control service start-up orders with wait-for.sh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #26: &lt;a href=&#34;https://www.youtube.com/watch?v=4UqN1P8pIkM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to create a free tier AWS account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #27: &lt;a href=&#34;https://www.youtube.com/watch?v=3M4MPmSWt9E&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Auto build &amp;amp; push docker image to AWS ECR with Github Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #28: &lt;a href=&#34;https://www.youtube.com/watch?v=0EaG3T4Q5fQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to create a production DB on AWS RDS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #29: &lt;a href=&#34;https://www.youtube.com/watch?v=3i1mQ_Ye8jE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Store &amp;amp; retrieve production secrets with AWS secrets manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #30: &lt;a href=&#34;https://www.youtube.com/watch?v=TxnCMhYhqRU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Kubernetes architecture &amp;amp; How to create an EKS cluster on AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #31: &lt;a href=&#34;https://www.youtube.com/watch?v=hwMevai3_wQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to use kubectl &amp;amp; k9s to connect to a kubernetes cluster on AWS EKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #32: &lt;a href=&#34;https://www.youtube.com/watch?v=PH-Mcd0Rs1w&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to deploy a web app to Kubernetes cluster on AWS EKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #33: &lt;a href=&#34;https://www.youtube.com/watch?v=-JF2ukmW3i8&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Register a domain name &amp;amp; set up A-record using Route53&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #34: &lt;a href=&#34;https://www.youtube.com/watch?v=lBrqP6FkNsU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to use Ingress to route traffics to different services in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #35: &lt;a href=&#34;https://www.youtube.com/watch?v=nU4FTjrgSKI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Automatic issue TLS certificates in Kubernetes with Let&#39;s Encrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #36: &lt;a href=&#34;https://www.youtube.com/watch?v=GVY-zze0V_U&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Automatic deploy to Kubernetes with Github Action&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 4: Advanced Backend Topics [Sessions + gRPC]&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #37: &lt;a href=&#34;https://www.youtube.com/watch?v=rT20ylRLm5U&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to manage user session with refresh token - Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #38: &lt;a href=&#34;https://www.youtube.com/watch?v=dGfVwsPr-IU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Generate DB documentation page and schema SQL dump from DBML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #39: &lt;a href=&#34;https://www.youtube.com/watch?v=mRGnA3wPxMM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Introduction to gRPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #40: &lt;a href=&#34;https://www.youtube.com/watch?v=mVWgEmyAhvM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Define gRPC API and generate Go code with protobuf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #41: &lt;a href=&#34;https://www.youtube.com/watch?v=BkfBJIS0_ro&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to run a golang gRPC server and call its API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #42: &lt;a href=&#34;https://www.youtube.com/watch?v=7xiWqyZW9lE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement gRPC API to create and login users in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #43: &lt;a href=&#34;https://www.youtube.com/watch?v=3FfDH3d0aHs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;gRPC gateway: write code once, serve both gRPC &amp;amp; HTTP requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #44: &lt;a href=&#34;https://www.youtube.com/watch?v=Sno10WQ21Zs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to extract info from gRPC metadata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #45: &lt;a href=&#34;https://www.youtube.com/watch?v=Uwkxxee7tvk&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Automatic generate &amp;amp; serve Swagger docs from Go server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #46: &lt;a href=&#34;https://www.youtube.com/watch?v=xNgOIm86N5Q&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Embed static frontend files inside Golang backend server&#39;s binary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #47: &lt;a href=&#34;https://www.youtube.com/watch?v=CxZ9hMtmZtc&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Validate gRPC parameters and send human/machine friendly response&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #48: &lt;a href=&#34;https://www.youtube.com/watch?v=TG43cMpaxlI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Run DB migrations directly inside Golang code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #49: &lt;a href=&#34;https://www.youtube.com/watch?v=I2sbw1PzzW0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Partial update DB record with SQLC nullable parameters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #50: &lt;a href=&#34;https://www.youtube.com/watch?v=ygqSHIEc8sc&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Build gRPC update API with optional parameters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #51: &lt;a href=&#34;https://www.youtube.com/watch?v=_jqNs3d99ps&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Add authorization to protect gRPC API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #52: &lt;a href=&#34;https://www.youtube.com/watch?v=tTAxLGrDmPo&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Write structured logs for gRPC APIs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #53: &lt;a href=&#34;https://www.youtube.com/watch?v=Lbiz-PZNiU0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to write HTTP logger middleware in Go&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 5: Asynchronous processing with background workers [Asynq + Redis]&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #54: &lt;a href=&#34;https://www.youtube.com/watch?v=XOXdYs8mKkI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement background worker in Go with Redis and Asynq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #55: &lt;a href=&#34;https://www.youtube.com/watch?v=eXYKGPEXocM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Integrate async worker to Go web server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #56: &lt;a href=&#34;https://www.youtube.com/watch?v=ZfFxdPbgN88&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Send async tasks to Redis within a DB transaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #57: &lt;a href=&#34;https://www.youtube.com/watch?v=YgfmPIJRg2U&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to handle errors and print logs for Go Asynq workers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #58: &lt;a href=&#34;https://www.youtube.com/watch?v=ILNiZgseLUI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;A bit of delay might be good for your async tasks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #59: &lt;a href=&#34;https://www.youtube.com/watch?v=L9TbZxpykLQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to send emails in Go via Gmail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #60: &lt;a href=&#34;https://www.youtube.com/watch?v=0UwZGM9iqTE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to skip test in Go and config test flag in vscode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #61: &lt;a href=&#34;https://www.youtube.com/watch?v=lEHkwDPHrcc&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Email verification in Go: design DB and send email&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #62: &lt;a href=&#34;https://www.youtube.com/watch?v=50ZN-4UNwnY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement email verification API in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #63: &lt;a href=&#34;https://www.youtube.com/watch?v=QFxZlKb7W2k&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Unit test gRPC API with mock DB &amp;amp; Redis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #64: &lt;a href=&#34;https://www.youtube.com/watch?v=MI7ucbAlZPM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to test a gRPC API that requires authentication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Section 6: Improve the stability and security of the server&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #65: &lt;a href=&#34;https://www.youtube.com/watch?v=FfXE245HZB4&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Config sqlc version 2 for Go and Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #66: &lt;a href=&#34;https://www.youtube.com/watch?v=m9gYy5U0edQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Switch DB driver from lib/pq to pgx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #67: &lt;a href=&#34;https://www.youtube.com/watch?v=9vf3zxrMUgw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to handle DB errors with PGX driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #68: &lt;a href=&#34;https://www.youtube.com/watch?v=nJBT5SKENAw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Docker compose: port + volume mapping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #69: &lt;a href=&#34;https://www.youtube.com/watch?v=TnJ4ssoNvkY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;How to install &amp;amp; use binary packages in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #70: &lt;a href=&#34;https://www.youtube.com/watch?v=Py7dRhtuJ3E&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Implement role-based access control (RBAC) in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #71: &lt;a href=&#34;https://www.youtube.com/watch?v=pPXYu6QQGE8&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Grant AWS EKS cluster access to Postgres and Redis using security group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #72: &lt;a href=&#34;https://www.youtube.com/watch?v=Pd7aeh014nU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Deploy gRPC + HTTP server to AWS EKS cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #73: &lt;a href=&#34;https://www.youtube.com/watch?v=VEf7IpUn6BQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Don&#39;t lose money on AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #74: &lt;a href=&#34;https://www.youtube.com/watch?v=rIHO9TqJtQQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&#34;&gt;Go 1.22 fixed the most common for-loop trap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Simple bank service&lt;/h2&gt; &#xA;&lt;p&gt;The service that we‚Äôre going to build is a simple bank. It will provide APIs for the frontend to do following things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and manage bank accounts, which are composed of owner‚Äôs name, balance, and currency.&lt;/li&gt; &#xA; &lt;li&gt;Record all balance changes to each of the account. So every time some money is added to or subtracted from the account, an account entry record will be created.&lt;/li&gt; &#xA; &lt;li&gt;Perform a money transfer between 2 accounts. This should happen within a transaction, so that either both accounts‚Äô balance are updated successfully or none of them are.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setup local development&lt;/h2&gt; &#xA;&lt;h3&gt;Install tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker desktop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://tableplus.com/&#34;&gt;TablePlus&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Golang&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/golang-migrate/migrate/tree/master/cmd/migrate&#34;&gt;Migrate&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install golang-migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dbdocs.io/docs&#34;&gt;DB Docs&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g dbdocs&#xA;dbdocs login&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dbml.org/cli/#installation&#34;&gt;DBML CLI&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @dbml/cli&#xA;dbml2sql --version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kyleconroy/sqlc#installation&#34;&gt;Sqlc&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install sqlc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/golang/mock&#34;&gt;Gomock&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup infrastructure&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the bank-network&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make network&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start postgres container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create simple_bank database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make createdb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration up all versions:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migrateup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration up 1 version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migrateup1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration down all versions:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migratedown&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration down 1 version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migratedown1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate DB documentation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make db_docs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the DB documentation at &lt;a href=&#34;https://dbdocs.io/techschool.guru/simple_bank&#34;&gt;this address&lt;/a&gt;. Password: &lt;code&gt;secret&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to generate code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate schema SQL file with DBML:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make db_schema&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate SQL CRUD with sqlc:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make sqlc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate DB mock with gomock:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make mock&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new db migration:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make new_migration name=&amp;lt;migration_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy to kubernetes cluster&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/deploy/#aws&#34;&gt;Install nginx ingress controller&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.48.1/deploy/static/provider/aws/deploy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cert-manager.io/docs/installation/kubernetes/&#34;&gt;Install cert-manager&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.4.0/cert-manager.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>