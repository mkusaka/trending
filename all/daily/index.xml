<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-03T01:29:07Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amigoscode/full-stack-professional</title>
    <updated>2023-05-03T01:29:07Z</updated>
    <id>tag:github.com,2023-05-03:/amigoscode/full-stack-professional</id>
    <link href="https://github.com/amigoscode/full-stack-professional" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack Professional&lt;/h1&gt; &#xA;&lt;p&gt;Enrol &lt;a href=&#34;https://amigoscode.com/courses/full-stack-professional&#34;&gt;here&lt;/a&gt; with over &lt;em&gt;50 Hours&lt;/em&gt; of Content with Plenty of Exercises&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/40702606/228275106-73076517-ff4f-40e0-a993-4d05d5a2ea77.png&#34; alt=&#34;Curriculum&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Are you ready to level up your coding skills and become a full stack professional? Our new 50+ hours course is designed to equip you with the latest tools and techniques to build impressive, full stack applications that will impress the users and your team.&lt;/p&gt; &#xA;&lt;p&gt;Over the next three months you will learn how to craft stunning, responsive front-end interfaces that flawlessly communicate with robust, scalable back-end servers, all with the use of industry-standard technologies such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Spring Boot 3&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ HTTP &amp;amp; API development&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Developer tools for maximum productivity&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Robust error handling techniques&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Databases &amp;amp; PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Spring Data JPA&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Flyway for seamless database migrations&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ JDBC for efficient database communication&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Testing strategies for robust, reliable code&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Docker for containerization and deployment&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ AWS for cloud-based hosting and scaling&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ DevOps best practices for agile, collaborative development&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ JavaScript and React for front-end development&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Spring Security 6 for secure, authenticated applications&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Login/Registration systems for user management&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ TypeScript for type-safe, scalable code&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Angular for powerful, responsive front-end interfaces&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üéÅ Bonus 6-Month IntelliJ IDEA Ultimate license worth 117.83$&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FlowiseAI/Flowise</title>
    <updated>2023-05-03T01:29:07Z</updated>
    <id>tag:github.com,2023-05-03:/FlowiseAI/Flowise</id>
    <link href="https://github.com/FlowiseAI/Flowise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drag &amp; drop UI to build your customized LLM flow using LangchainJS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flowise - LangchainJS UI&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/FlowiseAI/Flowise&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://github.com/FlowiseAI/Flowise/raw/main/images/flowise.gif?raw=true&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;Drag &amp;amp; drop UI to build your customized LLM flow using &lt;a href=&#34;https://github.com/hwchase17/langchainjs&#34;&gt;LangchainJS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Flowise&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g flowise&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Flowise&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx flowise start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üê≥ Docker&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;docker&lt;/code&gt; folder at the root of the project&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;.env&lt;/code&gt; file and specify the &lt;code&gt;PORT&lt;/code&gt; (refer to &lt;code&gt;.env.example&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can bring the containers down by &lt;code&gt;docker-compose stop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Developers&lt;/h2&gt; &#xA;&lt;p&gt;Flowise has 3 different modules in a single mono repository.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;server&lt;/code&gt;: Node backend to serve API logics&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: React frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;components&lt;/code&gt;: Langchain components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Yarn &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/FlowiseAI/Flowise.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go into repository folder&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Flowise&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install all dependencies of all modules:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build all the code:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the app:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can now access the app on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For development build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Any code changes will reload the app automatically on &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Coming soon&lt;/p&gt; &#xA;&lt;h2&gt;üíª Cloud Hosted&lt;/h2&gt; &#xA;&lt;p&gt;Coming soon&lt;/p&gt; &#xA;&lt;h2&gt;üåê Self Host&lt;/h2&gt; &#xA;&lt;p&gt;Coming soon&lt;/p&gt; &#xA;&lt;h2&gt;üôã Support&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to ask any questions, raise problems, and request new features in &lt;a href=&#34;https://github.com/FlowiseAI/Flowise/discussions&#34;&gt;discussion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üôå Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/FlowiseAI/Flowise/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;. Reach out to us at &lt;a href=&#34;https://discord.gg/jbaHfsRVBW&#34;&gt;Discord&lt;/a&gt; if you have any questions or issues.&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;Source code in this repository is made available under the &lt;a href=&#34;https://raw.githubusercontent.com/FlowiseAI/Flowise/main/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>memorysafety/sudo-rs</title>
    <updated>2023-05-03T01:29:07Z</updated>
    <id>tag:github.com,2023-05-03:/memorysafety/sudo-rs</id>
    <link href="https://github.com/memorysafety/sudo-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A memory safe implementation of sudo and su.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sudo-rs&lt;/h1&gt; &#xA;&lt;p&gt;A safety oriented and memory safe implementation of sudo and su written in Rust.&lt;/p&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è WARNING&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sudo-rs is currently under active development and is not suited for any production environment. Using sudo-rs is only recommended for development and testing purposes, but you should expect any system that has sudo-rs installed to break easily and to not be secure.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Sudo-rs currently only supports Linux-based operating systems, although other unix-based operating systems may work, they are currently not actively supported or maintained.&lt;/p&gt; &#xA;&lt;p&gt;Sudo-rs is written in Rust. We currently only support the latest stable compiler toolchain. To get a recent compiler toolchain we recommend using &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt;. To build sudo-rs run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This produces a binary &lt;code&gt;target/release/sudo&lt;/code&gt;. However this binary must have the setuid flag set and must be owned by the root user in order to provide any useful functionality. Because we are in such an early stage we also require an environment variable &lt;code&gt;SUDO_RS_IS_UNSTABLE&lt;/code&gt; to be set, and it must have the value &lt;code&gt;I accept that my system may break unexpectedly&lt;/code&gt;. If you are unsure about how to set this up, then the current version of sudo is not intended for you.&lt;/p&gt; &#xA;&lt;p&gt;Sudo-rs needs the sudoers configuration file, but it currently reads it at &lt;code&gt;/etc/sudoers.test&lt;/code&gt;, instead of the default location. You must make sure that a valid sudoers configuration exists at that location. For an explanation of the sudoers syntax you can look at the &lt;a href=&#34;https://www.sudo.ws/docs/man/sudoers.man/&#34;&gt;original sudo man page&lt;/a&gt;. While most syntax should be supported as is, most functionality will currently not be implemented. Sudo-rs currently may not always warn about this, so your sudoers file may have a different meaning compared to the original sudo implementation.&lt;/p&gt; &#xA;&lt;p&gt;Sudo-rs always uses PAM for authentication at this time, your system must be set up for PAM. Sudo-rs will use the &lt;code&gt;sudo&lt;/code&gt; service configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Current work&lt;/h2&gt; &#xA;&lt;p&gt;Our current target is to build a drop-in replacement for most basic use cases of sudo. For the sudoers config syntax this means that we aim to at least support the default configuration files of some common Linux distributions (we currently aim to support both the Fedora and Debian default sudoers configs). Our implementation should eventually at least support all commonly used CLI flags from the original sudo implementation (e.g., flags like &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-g&lt;/code&gt; and &lt;code&gt;-s&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Some parts of the original sudo are explicitly not in scope. Sudo has a large and rich history and some of the features available in the original sudo implementation are largely unused or only available for legacy platforms. In order to determine which features make it we both consider whether the feature is relevant for modern systems, and whether it will receive at very least decent usage. Finally, of course, a feature should not compromise the safety of the whole program.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;su&lt;/code&gt; program is a much simpler program and will only include basic functionality. However, we think that the building blocks that make up our sudo implementation will be suited to be used for creating a simple su implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;While we are still working on getting the basic infrastructure and architecture of sudo-rs up and running, accepting arbitrary contributions will be difficult. If you have any small changes or suggestions please do leave those, but if you want to work on larger parts of sudo-rs please ask first, or we may risk doing work twice or not being able to include your work.&lt;/p&gt; &#xA;&lt;h2&gt;Future work&lt;/h2&gt; &#xA;&lt;p&gt;While our initial target is a drop-in replacement for most basic use cases of sudo, our work may evolve beyond that target. We are also looking into alternative ways to configure sudo without the sudoers config file syntax and to extract parts of our work in usable crates for other people.&lt;/p&gt;</summary>
  </entry>
</feed>