<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:30:40Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Joshua-Ashton/VPhysics-Jolt</title>
    <updated>2022-09-01T01:30:40Z</updated>
    <id>tag:github.com,2022-09-01:/Joshua-Ashton/VPhysics-Jolt</id>
    <link href="https://github.com/Joshua-Ashton/VPhysics-Jolt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Volt (VPhysics Jolt) is a replacement physics module for the Source Engine.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Joshua-Ashton/VPhysics-Jolt/main/assets/cube_base_nobg.png&#34; alt=&#34;VPhysics Jolt Logo&#34; title=&#34;VPhysics Jolt&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Volt? ⚡&lt;/h2&gt; &#xA;&lt;p&gt;Volt (VPhysics Jolt) is a replacement for Source&#39;s VPhysics which uses IVP/Havok&lt;br&gt; Created by &lt;a href=&#34;https://github.com/Joshua-Ashton&#34;&gt;Joshua Ashton (🐸✨)&lt;/a&gt; &lt;a href=&#34;https://twitter.com/phys_ballsocket&#34;&gt;@phys_ballsocket&lt;/a&gt; and &lt;a href=&#34;https://github.com/Slartibarty&#34;&gt;Josh Dowell (Slartibarty)&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Slartbarty&#34;&gt;@Slartbarty&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Volt is designed to be incredibly high performance, supporting thousands of objects at once without bringing tick/framerate down to a crawl.&lt;/p&gt; &#xA;&lt;p&gt;In our testing, the performance overhead from having thousands of objects moving at once, now comes from the client code needing to update/render, as going out of the PVS of these objects will still cause them to be simulated, but will no longer be rendered.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Volt is mostly feature complete, but is missing some things such as support for raycast vehicles, breakable constraints, and perhaps other things we&#39;ve missed!&lt;/p&gt; &#xA;&lt;p&gt;It is our goal to implement any missing features at some point.&lt;/p&gt; &#xA;&lt;p&gt;Below is a feature table of Volt vs VPhysics and the Bullet VPhysics project. If we missed anything we don&#39;t support or we do, feel free to add to it. It is not meant to be a bash on anyone elses work however, the Bullet VPhysics project was a great inspiration to us!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;VPhysics&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Volt (VPhysics Jolt)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Bullet VPhysics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Constraints (except Pulleys)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pulleys&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Breakable constraints&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Motors (Motion Controllers)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Motors (Constraint)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ragdolls&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (some bugs)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Triggers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Object touch callbacks&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prop damage/breaking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fluid events&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prop splashing effects&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wheeled Vehicles&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Raycast Vehicles (ie. Airboat)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;〰️ (janky)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NPCs/Doors (Shadow Controllers)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Save/Restore Support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Portal Support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Game per-object collide callback support&lt;br&gt;eg. no-collide&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crash-resistant solver&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(no data)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Supports thousands of objects without lag&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Multithreaded&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (partially)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Proper player controller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌ (needs work!)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (partially)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;VPhysics Jolt is not without its flaws, however. See the &lt;a href=&#34;https://github.com/Joshua-Ashton/VPhysics-Jolt/issues&#34;&gt;issue tracker&lt;/a&gt; for bugs that are known.&lt;/p&gt; &#xA;&lt;p&gt;There are definitely going to be bugs that we don&#39;t know about or haven&#39;t encountered, or different quirks across engine branches.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;The Volt code is provided as-is, it is up to you to build it for your SDK, etc.&lt;/p&gt; &#xA;&lt;p&gt;Volt should build fine against Source SDK 2013 and Alien Swarm SDK on a MSVC or GCC compiler with at least C++20 support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are building directly against the public SDK 2013 and Alien Swarm SDKs, you will need to do minor work to memoverride.cpp to make it compatible with the newer compilers and newer Windows SDKs.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately we cannot redistribute the additional code/headers needed to build Volt for games such as Garry&#39;s Mod which uses a different VPhysics interface (CS:GO&#39;s) to what is found in the Valve-provided public SDKs.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;For each release, binary builds are provided for Garry&#39;s Mod and Source SDK 2013 on the &lt;a href=&#34;https://github.com/Joshua-Ashton/VPhysics-Jolt/releases/&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Media&lt;/h2&gt; &#xA;&lt;h3&gt;Lots of Melons + Dumpster&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gPDQkmfQCsc&#34; title=&#34;Lots of Melons + Dumpster&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/gPDQkmfQCsc/0.jpg&#34; alt=&#34;Lots of Melons + Dumpster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Physically Simulated Chain&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tVmQTmbSJM0&#34; title=&#34;Physically Simulated Chain&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/tVmQTmbSJM0/0.jpg&#34; alt=&#34;Physically Simulated Chain&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lots of Balls Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tYfiTyRtmz8&#34; title=&#34;Lots of Balls Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/tYfiTyRtmz8/0.jpg&#34; alt=&#34;Lots of Balls Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wheels + Weld Car Dupe Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5_QbbXbIrg8&#34; title=&#34;Weld Car Dupe Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/5_QbbXbIrg8/0.jpg&#34; alt=&#34;Weld Car Dupe Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Door + NPC (Physics Shadowed Objects) Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SdEj7HTuJmU&#34; title=&#34;Door + NPC (Physics Shadowed Objects) Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/SdEj7HTuJmU/0.jpg&#34; alt=&#34;Door + NPC (Physics Shadowed Objects) Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lots of Cubes + Ragdolls + Funnel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CLVnSwg33Dk&#34; title=&#34;Lots of Cubes + Ragdolls + Funnel&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/CLVnSwg33Dk/0.jpg&#34; alt=&#34;Lots of Cubes + Ragdolls + Funnel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Slow Mo Cubes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GzW_4bufwEk&#34; title=&#34;Slow Mo Cubes&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/GzW_4bufwEk/0.jpg&#34; alt=&#34;Slow Mo Cubes&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Propane in Dumpster&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=10vvRJVHGQc&#34; title=&#34;Propane in Dumpster&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/10vvRJVHGQc/0.jpg&#34; alt=&#34;Propane in Dumpster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Have some cool media of stuff going on in Volt you&#39;d like to add? Feel free to make a pull request!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Projects using Volt&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://emberspark.games/desolation/&#34;&gt;Portal 2: Desolation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://prelude.online/&#34;&gt;Prelude: Online&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Have fun! 🐸⚡&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>zeeka-network/bazuka</title>
    <updated>2022-09-01T01:30:40Z</updated>
    <id>tag:github.com,2022-09-01:/zeeka-network/bazuka</id>
    <link href="https://github.com/zeeka-network/bazuka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust implementation of Zeeka protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ℤ - Bazuka!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zeeka-network/bazuka/actions/workflows/actions.yml&#34;&gt;&lt;img src=&#34;https://github.com/zeeka-network/bazuka/actions/workflows/actions.yml/badge.svg?sanitize=true&#34; alt=&#34;Bazuka&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/zeeka-network/bazuka&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/zeeka-network/bazuka/branch/master/graph/badge.svg?token=8XTLET5GQN&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bazuka is a wallet and node software for the Zeeka (ℤ) Protocol. Zeeka is a novel layer-1 cryptocurrency which uses Zero-Knowledge proofs as the backend of its smart-contract (I.e Zero Contracts).&lt;/p&gt; &#xA;&lt;p&gt;Bazuka ensures the availability of latest contract-states, so that they remain public and everybody is able to update and build on them, making Zeeka a more decentralized protocol compared to similar projects.&lt;/p&gt; &#xA;&lt;h3&gt;Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://zeeka.io&#34;&gt;https://zeeka.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Whitepaper: &lt;a href=&#34;https://hackmd.io/@keyvank/zeeka&#34;&gt;https://hackmd.io/@keyvank/zeeka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/4gbf9gZh8H&#34;&gt;https://discord.gg/4gbf9gZh8H&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to run a Bazuka node?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;&lt;strong&gt;Bazuka! is a very early-stage implementation of the Zeeka Protocol, highly unstable and not yet complete!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you only want to run a Zeeka node and do not want to execute Zero Contract or mine Zeeka, you will only need to install &lt;code&gt;bazuka&lt;/code&gt; (This repo). In case you also want to mine Zeeka, you will need to install &lt;img src=&#34;https://github.com/zeeka-network/zoro&#34; alt=&#34;zoro&#34;&gt; (The Main Payment Network executor) and also the &lt;img src=&#34;https://github.com/zeeka-network/uzi-miner&#34; alt=&#34;uzi-miner&#34;&gt; (A RandomX CPU miner).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to install &lt;code&gt;bazuka&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare a Linux machine.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have installed &lt;code&gt;libssl-dev&lt;/code&gt; and &lt;code&gt;cmake&lt;/code&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;Install the Rust toolchain (&lt;a href=&#34;https://rustup.rs/&#34;&gt;https://rustup.rs/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Clone the &lt;code&gt;bazuka&lt;/code&gt; repo: &lt;code&gt;git clone https://github.com/zeeka-network/bazuka&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Compile and install: &lt;code&gt;cd bazuka &amp;amp;&amp;amp; cargo install --path .&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now if you want to join the &lt;code&gt;debug&lt;/code&gt; testnet, you first have to initialize your node by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bazuka init --seed [your seed phrase] --network debug --node 127.0.0.1:8765&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your regular and zero-knowledge private-keys are derived from the &lt;code&gt;--seed&lt;/code&gt; value, so &lt;strong&gt;don&#39;t forget to keep them somewhere safe&lt;/strong&gt;! You can choose your target network (E.g &lt;code&gt;mainnet&lt;/code&gt;, &lt;code&gt;chaos&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt; or etc.) through the &lt;code&gt;--network&lt;/code&gt; option. You should also choose the node which you want to send your transactions to, through the &lt;code&gt;--node&lt;/code&gt; option. (Here we choose our local node which we will run later)&lt;/p&gt; &#xA;&lt;p&gt;Run your node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bazuka node --listen 0.0.0.0:8765 --external [your external ip]:8765 \&#xA;  --network debug --db ~/.bazuka-debug --bootstrap [bootstrap node 1] --bootstrap [bootstrap node 2] ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the nodes introduced by the community as your &lt;code&gt;--bootstrap&lt;/code&gt; nodes. You either have to run your node on a machine with a static IP, or configure a NAT Virtual Server in order to expose your node on a public IP. Specify your public IP through the &lt;code&gt;--external&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Highly recommended to also provide your Discord handle through the &lt;code&gt;--discord-handle&lt;/code&gt; flag. By providing your handle, you will leave our bots a way to contact you regarding the problems you may have in your node and its status.&lt;/p&gt; &#xA;&lt;h3&gt;What is the Main Payment Network?&lt;/h3&gt; &#xA;&lt;p&gt;The Main Payment Network (MPN) is a special, builtin smart-contract that is created in the genesis-block of the Zeeka Protocol. It manages a merkle-tree of millions of accounts that can transfer ℤ with each other with nearly zero-cost transactions. It uses the Groth16 proving system and has a fixed number of transaction slots per update.&lt;/p&gt; &#xA;&lt;p&gt;People who want to transfer their Zeeka tokens cheaply, would need to deposit their funds to MPN through the &lt;code&gt;deposit&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h3&gt;[WIP] How to mine ℤeeka?&lt;/h3&gt; &#xA;&lt;p&gt;In order to be a miner, besides working on a PoW puzzle, you will also need to execute the MPN contract on each block you generate. The &lt;code&gt;zoro&lt;/code&gt; software is a CPU-executor of MPN contract. First install &lt;code&gt;zoro&lt;/code&gt;, then make sure the proving-parameters are in the right place and then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zoro --node 127.0.0.1:8765 --seed [seed phrase for the executor account]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After a new block is generated, the &lt;code&gt;uzi-miner&lt;/code&gt; should start working on the PoW puzzle, so you will also need to have &lt;code&gt;uzi-miner&lt;/code&gt; running on your system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;uzi-miner --node 127.0.0.1:8765 --threads 32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Note: Change number of &lt;code&gt;--threads&lt;/code&gt; based on the spec of your system)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ksz-ksz/rxjs-insights</title>
    <updated>2022-09-01T01:30:40Z</updated>
    <id>tag:github.com,2022-09-01:/ksz-ksz/rxjs-insights</id>
    <link href="https://github.com/ksz-ksz/rxjs-insights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;See through the observables.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://badge.fury.io/js/@rxjs-insights%2Fcore&#34;&gt; &lt;img src=&#34;https://badge.fury.io/js/@rxjs-insights%2Fcore.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/ksz-ksz/rxjs-insights/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT license&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/resources/rxjs-insights.svg?sanitize=true&#34; width=&#34;256px&#34; alt=&#34;RxJS Insights&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;RxJS Insights&lt;/h1&gt; &#xA;&lt;p&gt;RxJS Insights is a toolset that helps you debug and visualize the observables in your app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;✨ Developer friendly&lt;/strong&gt;: Easy to set up. Easy to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;✨ Unobtrusive&lt;/strong&gt;: Does not require source code changes in order to identify observables.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;✨ Comprehensive&lt;/strong&gt;: Tracks all types of observable events and relations.&lt;/p&gt; &#xA;&lt;p&gt;The data gathered by the RxJS Insights includes the information about:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;constructor&lt;/strong&gt; calls, including the arguments passed to it, the name of the Observable (sub)class, and the source code location of the call,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;creation operator&lt;/strong&gt; calls, including the arguments passed to it, the name of the operator, and the source code location of the call,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pipeable operator&lt;/strong&gt; calls, including the arguments passed to it, the name of the operator, and the source code location of the call,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;subscribers&lt;/strong&gt; (i.e. the instances of the running observables), including the relation to the parent observable, as well as relations to other subscribers that are either sources or destinations of the given subscriber,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;callers&lt;/strong&gt; (i.e. the connection with the world outside the RxJS, e.g. direct &lt;code&gt;subscribe&lt;/code&gt; calls from the application), including the arguments passed to it, and the source code location of the call,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;events&lt;/strong&gt;, including the &lt;strong&gt;notification events&lt;/strong&gt; (i.e. &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;) and &lt;strong&gt;subscription events&lt;/strong&gt; (i.e. &lt;code&gt;subscribe&lt;/code&gt; and &lt;code&gt;unsubscribe&lt;/code&gt;), as well as relations to other events that either caused or are caused by the given event,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;async tasks&lt;/strong&gt; within which the events happened (e.g. &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, DOM events, REST events, etc.).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Try it out on &lt;a href=&#34;https://stackblitz.com/edit/rxjs-insights-playground?file=src%2Findex.ts&#34;&gt;StackBlitz ⚡&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/resources/rxjs-insights.gif&#34; alt=&#34;Example console output&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/index.md&#34;&gt;Instrumentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/setup/index.md&#34;&gt;Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/setup/angular.md&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/setup/webpack.md&#34;&gt;Webpack&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/setup/esbuild.md&#34;&gt;ESBuild&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/setup/others.md&#34;&gt;Other build systems&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/customization.md&#34;&gt;Customization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/customization.md#declarations&#34;&gt;Declarations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/customization.md#decorators&#34;&gt;Decorators&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/customization.md#operators&#34;&gt;Operators&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/plugin-configuration.md&#34;&gt;Plugin configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/instrumentation/async-actions-tracking.md&#34;&gt;Async actions tracking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/index.md&#34;&gt;Devtools&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/setup.md&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/usage.md&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/usage.md#inspecting-observables-and-subscribers&#34;&gt;Inspecting observables and subscribers&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/usage.md#using-the-rxjs-insights-devtools-sources-panel-extension&#34;&gt;RxJS Insights Devtools Sources Panel Extension&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/devtools/usage.md#using-the-rxjs-insights-devtools-panel&#34;&gt;RxJS Insights Devtools Panel&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/console/index.md&#34;&gt;Console&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/console/setup.md&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/console/usage.md&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/console/usage.md#interactive-output&#34;&gt;Interactive output&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ksz-ksz/rxjs-insights/master/docs/console/usage.md#inspections&#34;&gt;Inspections&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future work&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧩 Create plugins for other bundlers (e.g. Rollup, Parcel, etc.),&lt;/li&gt; &#xA; &lt;li&gt;🧩 Add more visualization options (e.g. marble diagrams),&lt;/li&gt; &#xA; &lt;li&gt;🧩 Allow for better customization.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>