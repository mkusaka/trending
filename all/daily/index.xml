<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-03T01:29:02Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HumanAIGC/AnimateAnyone</title>
    <updated>2023-12-03T01:29:02Z</updated>
    <id>tag:github.com,2023-12-03:/HumanAIGC/AnimateAnyone</id>
    <link href="https://github.com/HumanAIGC/AnimateAnyone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Animate Anyone: Consistent and Controllable Image-to-Video Synthesis for Character Animation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AnimateAnyone&lt;/h1&gt; &#xA;&lt;p&gt;Animate Anyone: Consistent and Controllable Image-to-Video Synthesis for Character Animation&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scholar.google.com/citations?view_op=list_works&amp;amp;hl=zh-CN&amp;amp;user=Arz3iGUAAAAJ&amp;amp;gmla=AJsN-F72u4R_vwVl2Jc0Sy_qIYuSwExx8ilpfrd-w5Yfi5FYFP_WhbJtHbAK_c5w-3KNBgTRjWiTvEFLtJSV5ryd1JuNVQdMVDMuSJS5dfn7NWbZQQpGGyyxlrfoq6cv6S_23QTSUWWY&#34;&gt;Li Hu&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=cze1sXQAAAAJ&amp;amp;hl=en&#34;&gt;Xin Gao&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=QTgxKmkAAAAJ&amp;amp;hl=zh-CN&#34;&gt;Peng Zhang&lt;/a&gt;, &lt;a href=&#34;https://dblp.org/pid/69/476-9.html&#34;&gt;Ke Sun&lt;/a&gt;, &lt;a href=&#34;https://dblp.org/pid/11/4046.html&#34;&gt;Bang Zhang&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=FJwtMf0AAAAJ&amp;amp;hl=zh-CN&#34;&gt;Liefeng Bo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://humanaigc.github.io/animate-anyone/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project-Page-Green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/pdf/2311.17117.pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Paper-Arxiv-red&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=8PCn5hLKNu4&#34;&gt;&lt;img src=&#34;https://badges.aleen42.com/src/youtube.svg?sanitize=true&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HumanAIGC/AnimateAnyone/main/docs/video_t1.png&#34; alt=&#34;Teaser Image&#34; title=&#34;Teaser&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{hu2023animateanyone,&#xA;  title={Animate Anyone: Consistent and Controllable Image-to-Video Synthesis for Character Animation},&#xA;  author={Li Hu and Xin Gao and Peng Zhang and Ke Sun and Bang Zhang and Liefeng Bo},&#xA;  journal={arXiv preprint arXiv:2311.17117},&#xA;  website={https://humanaigc.github.io/animate-anyone/},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kotlin-hands-on/advent-of-code-kotlin-template</title>
    <updated>2023-12-03T01:29:02Z</updated>
    <id>tag:github.com,2023-12-03:/kotlin-hands-on/advent-of-code-kotlin-template</id>
    <link href="https://github.com/kotlin-hands-on/advent-of-code-kotlin-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Advent of Code template project for Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Advent of Code Kotlin Template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; – an annual event in December since 2015. Every year since then, with the first day of December, a programming puzzles contest is published every day for twenty-four days. A set of Christmas-oriented challenges provides any input you have to use to answer using the language of your choice. We offer you a template prepared to use with &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; language within this repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/.github/readme/cover.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advent of Code Kotlin Template&lt;/strong&gt; is a particular type of GitHub repository that lets you speed up the setup phase and start writing your AoC solutions immediately.&lt;/p&gt; &#xA;&lt;p&gt;The general idea is straightforward – to create a new project based on this template, you need to log in to your GitHub account and use the &lt;strong&gt;Use this template&lt;/strong&gt; green button. And remember – &lt;strong&gt;do not fork it!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;After creating a new project based on this template in your account, a dedicated GitHub Actions workflow will start and clean up the code from redundant files. It will also personalize code to use your username and project name in namespaces and Gradle properties. How cool is that?&lt;/p&gt; &#xA;&lt;p&gt;You can clone it within the IntelliJ IDEA whenever the &lt;a href=&#34;https://github.com/actions-user&#34;&gt;@actions-user&lt;/a&gt; actor pushes the second commit to your repository.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;Right after opening the project in IntelliJ IDEA, verify if you use at least &lt;strong&gt;Java 11&lt;/strong&gt; as Project SDK. To do that, visit &lt;a href=&#34;https://www.jetbrains.com/help/idea/project-settings-and-structure.html&#34;&gt;Project Structure Settings&lt;/a&gt; (&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;&lt;kbd&gt;;&lt;/kbd&gt; on macOS or &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt; on Windows/Linux).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;From now on, everything&#39;s in your hands! Join the &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; contest to solve the &lt;em&gt;Day 01&lt;/em&gt; as soon as it is published.&lt;/p&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;Day01.kt&lt;/code&gt; solution file for the following days and increment the day number.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;Remember to join the Kotlin contest!&lt;/p&gt; &#xA; &lt;p&gt;To do that, edit your project&#39;s &lt;em&gt;About&lt;/em&gt; section with ⚙️ icon and add the &lt;code&gt;aoc-2023-in-kotlin&lt;/code&gt; topic to your project.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;We will find your repository and count you in our giveaway.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;After you create a new project based on the current template repository using the &lt;strong&gt;Use this template&lt;/strong&gt; button, a bare minimal scaffold will appear in your GitHub account with the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── README.md               README file&#xA;├── build.gradle.kts        Gradle configuration created with Kotlin DSL&#xA;├── settings.gradle.kts     Gradle project settings&#xA;├── gradle*                 Gradle wrapper files&#xA;└── src&#xA;    ├── Day01.kt            An empty implementation for the first AoC day&#xA;    ├── Utils.kt            A set of utility methods shared across your days&#xA;    │                       &#xA;    │                       (create those files manually)&#xA;    ├── Day01.txt           An empty file for the Day 01 input data&#xA;    └── Day01_test.txt      An optional Day 01 test input data used for checks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;All task input files (&lt;code&gt;src/*.txt&lt;/code&gt;) are excluded from the repository with &lt;code&gt;.gitignore&lt;/code&gt; – we should not post them publicly, as &lt;a href=&#34;https://twitter.com/ericwastl/status/1465805354214830081&#34;&gt;Eric Wastl requested for&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;When the first puzzle appears, go to the &lt;code&gt;Day01.kt&lt;/code&gt;, and for each &lt;code&gt;part1&lt;/code&gt; and &lt;code&gt;part2&lt;/code&gt; function, provide an algorithm implementation using the &lt;code&gt;input&lt;/code&gt; data loaded from the &lt;code&gt;src/Day01.txt&lt;/code&gt; file. This input data is common for both parts, and you can find it at the bottom of each day on the &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;To read the input data, you can go with the &lt;code&gt;readInput(name: String)&lt;/code&gt; utility method provided in the &lt;a href=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/src/Utils.kt&#34;&gt;&lt;code&gt;Utils.kt&lt;/code&gt;&lt;/a&gt; file, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    fun part1(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return input.size&#xA;    }&#xA;&#xA;    val input = readInput(&#34;Day01&#34;)&#xA;    println(part1(input))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To call the algorithm you&#39;re implementing, click the green Play button next to the &lt;code&gt;fun main()&lt;/code&gt; definition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/.github/readme/run.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;Create relevant files Before running tasks or tests, like: &lt;code&gt;src/Day01.txt&lt;/code&gt; or &lt;code&gt;src/Day01_test.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/src/Utils.kt&#34;&gt;&lt;code&gt;Utils.kt&lt;/code&gt;&lt;/a&gt; file also contains the &lt;code&gt;String.md5()&lt;/code&gt; method for generating MD5 hash out of the given string and expects more helper functions for the sake of the &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS principle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each puzzle describes some test conditions, a small portion of the information that helps check if the produced value for the given test input is valid. To handle that case, you can put such an input into a separate file and perform a check against the output, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    // ...&#xA;    &#xA;    val testInput = readInput(&#34;Day01_test&#34;)&#xA;    check(part1(testInput) == 13)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The current approach of providing both &lt;code&gt;part1&lt;/code&gt; and &lt;code&gt;part2&lt;/code&gt; solutions within the single &lt;code&gt;Day##.kt&lt;/code&gt; file may sometimes bring a disadvantage due to the first solution calculation when we expect to work on the second part only. With simple cases that don&#39;t consume too much of your time and resources that can be almost unnoticeable, but when the solution takes seconds, it is worth considering breaking the daily solution into two separated pieces, like &lt;code&gt;Day07_part1.kt&lt;/code&gt; and &lt;code&gt;Day07_part2.kt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The final result of your algorithm will be printed on the screen so that you can pass it to the Advent of Code website.&lt;/p&gt; &#xA;&lt;p&gt;To go with the next day, place the &lt;code&gt;Day02.txt&lt;/code&gt; file into the &lt;code&gt;src&lt;/code&gt; with relevant input data and create a &lt;code&gt;Day02.kt&lt;/code&gt; file with a similar code scaffold:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    fun part1(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return 0&#xA;    }&#xA;&#xA;    fun part2(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return 0&#xA;    }&#xA;&#xA;    val input = readInput(&#34;Day02&#34;)&#xA;    println(part1(input))&#xA;    println(part2(input))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;There is a fork of this repository available that utilizes the Amper tool for project configuration, recently &lt;a href=&#34;https://blog.jetbrains.com/blog/2023/11/09/amper-improving-the-build-tooling-user-experience/&#34;&gt;introduced by JetBrains&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;For more, see &lt;a href=&#34;https://github.com/kotlin-hands-on/advent-of-code-kotlin-template-amper&#34;&gt;Advent of Code Kotlin Template — Amper&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you are stuck with Kotlin-specific questions or anything related to this template, check out the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/home.html&#34;&gt;Kotlin docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveys.jetbrains.com/s3/kotlin-slack-sign-up&#34;&gt;Kotlin Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Template &lt;a href=&#34;https://github.com/kotlin-hands-on/advent-of-code-kotlin-template/issues&#34;&gt;issue tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LC044/WeChatMsg</title>
    <updated>2023-12-03T01:29:02Z</updated>
    <id>tag:github.com,2023-12-03:/LC044/WeChatMsg</id>
    <link href="https://github.com/LC044/WeChatMsg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;提取微信聊天记录，将其导出成HTML、Word、CSV文档永久保存，对聊天记录进行分析生成年度聊天报告&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;我的数据我做主&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/WeChat-留痕-blue.svg&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/LC044/WeChatMsg/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/LC044/WeChatMsg.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/LC044/WeChatMsg/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/LC044/WeChatMsg?color=0088ff&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/readme.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/文档-最新-brightgreen.svg&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/LC044/WeChatMsg&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/logo.png&#34; height=&#34;240&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;div style=&#34;background-color: #eaf7ea; border-radius: 10px; padding: 20px; position: relative;&#34;&gt; &#xA;  &lt;div style=&#34;position: relative;&#34;&gt; &#xA;   &lt;div style=&#34;position: absolute;top: 0;bottom: 0;left: 0;width: 2px;background-color: #000000;&#34;&gt;&lt;/div&gt; &#xA;   &lt;h2&gt;前言&lt;/h2&gt; &#xA;   &lt;div style=&#34;text-indent: 2em;&#34;&gt; &#xA;    &lt;p style=&#34;text-indent:2em;&#34;&gt;我深信有意义的不是微信，而是隐藏在对话框背后的一个个&lt;strong&gt;深刻故事&lt;/strong&gt;。未来，每个人都能拥有AI的陪伴，而你的数据能够赋予它有关与你过去的珍贵记忆。我希望看到每个人有将自己的生活痕迹👨‍👩‍👦👚🥗🏠️🚴🧋⛹️🛌🛀留存的权利，而不是遗忘💀。&lt;/p&gt; &#xA;    &lt;p style=&#34;text-indent:2em;&#34;&gt;AI的发展不仅仅是技术的提升，更是情感💞的延续。每一个对话、每一个互动都是生活中独一无二的片段，是真实而动人的情感交流。因此，我希望AI工作者们能够&lt;strong&gt;善用这些数据&lt;/strong&gt;，用于培训独特的、属于个体的人工智能。让&lt;strong&gt;个人AI成为生活中的朋友&lt;/strong&gt;，能够理解、记录并分享我们的欢笑、泪水和成长。&lt;/p&gt; &#xA;    &lt;p style=&#34;text-indent:2em;&#34;&gt;那天，AI不再是高不可攀的存在，而是融入寻常百姓家的一部分。因为&lt;strong&gt;每个人都有权利拥有自己的AI&lt;/strong&gt;，将科技的力量融入生活的方方面面。这是一场关于真情实感的革命，一场让技术变得更加人性化的探索，让我们共同见证未来的美好。&lt;/p&gt; &#xA;    &lt;p align=&#34;center&#34;&gt;&lt;strong&gt;所以《留痕》&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🍉功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;获得📱手机本地微信数据库的使用权🐶&lt;/li&gt; &#xA; &lt;li&gt;获得💻PC端本地微信数据库的使用权🐶&lt;/li&gt; &#xA; &lt;li&gt;还原微信聊天界面 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🗨文本✅&lt;/li&gt; &#xA;   &lt;li&gt;🏝图片✅&lt;/li&gt; &#xA;   &lt;li&gt;🐻‍❄️表情包✅&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;导出聊天记录 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sqlite数据库✅&lt;/li&gt; &#xA;   &lt;li&gt;HTML(文本、图片)✅&lt;/li&gt; &#xA;   &lt;li&gt;Word文档✅&lt;/li&gt; &#xA;   &lt;li&gt;CSV文档✅&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;分析聊天数据，做成可视化年报&lt;/li&gt; &#xA; &lt;li&gt;🔥&lt;strong&gt;项目持续更新中&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;导出全部表情包❎&lt;/li&gt; &#xA;   &lt;li&gt;合并多个备份数据❎&lt;/li&gt; &#xA;   &lt;li&gt;语音❎&lt;/li&gt; &#xA;   &lt;li&gt;视频❎&lt;/li&gt; &#xA;   &lt;li&gt;文件❎&lt;/li&gt; &#xA;   &lt;li&gt;回复❎&lt;/li&gt; &#xA;   &lt;li&gt;拍一拍❎&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;小伙伴们想要其他功能可以留言哦📬&lt;/li&gt; &#xA; &lt;li&gt;有任何问题可以随时联系我(&lt;a href=&#34;mailto:863909694@qq.com&#34;&gt;863909694@qq.com&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;为了方便大家交流，我新建了一个QQ群💬：&lt;strong&gt;474379264&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;大家有任何想法💡、建议或bug可以群里反馈给我&lt;/p&gt; &#xA;&lt;h2&gt;🥤效果&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;img alt=&#34;聊天界面&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/chat_.png&#34;&gt; &#xA; &lt;img alt=&#34;image-20230520235113261&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235113261.png&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235220104.png&#34; alt=&#34;image-20230520235220104&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235338305.png&#34; alt=&#34;image-20230520235338305&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235351749.png&#34; alt=&#34;image-20230520235351749&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235400772.png&#34; alt=&#34;image-20230520235400772&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235409112.png&#34; alt=&#34;image-20230520235409112&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235422128.png&#34; alt=&#34;image-20230520235422128&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235431091.png&#34; alt=&#34;image-20230520235431091&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;⌛使用&lt;/h1&gt; &#xA;&lt;p&gt;小白可以先点个star⭐(💘项目不断更新中),然后去旁边&lt;a href=&#34;https://github.com/LC044/WeChatMsg/releases&#34;&gt;Release&lt;/a&gt; 下载打包好的exe可执行文件，双击即可运行&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️注意：若出现闪退情况请右击选择用管理员身份运行exe程序，该程序不存在任何病毒，若杀毒软件提示有风险选择略过即可&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不懂编程的请移步&lt;a href=&#34;https://github.com/LC044/WeChatMsg/releases&#34;&gt;Release&lt;/a&gt;，下面的东西看了可能要长脑子啦🐶&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PC版微信&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;h3&gt;1. 安装&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Python&amp;gt;=3.10&#xA;git clone https://github.com/LC044/WeChatMsg&#xA;cd WeChatMsg&#xA;pip install -r requirements_pc.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;2. 使用&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;登录微信&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;手机端使用聊天记录迁移功能将聊天数据迁移到电脑上&lt;/p&gt; &#xA; &lt;p&gt;操作步骤：我-&amp;gt;设置-&amp;gt;聊天-&amp;gt;聊天记录迁移与备份-&amp;gt;迁移-&amp;gt; 迁移到电脑微信（迁移完成后重启微信）&lt;a href=&#34;https://github.com/LC044/WeChatMsg/issues/27&#34;&gt;否则&lt;/a&gt;&lt;/p&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;运行程序&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python main_pc.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;点击获取信息&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/pc_decrypt_info.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;设置微信安装路径(如果自动设置好了就&lt;strong&gt;不用管&lt;/strong&gt;了)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;可以到微信-&amp;gt;设置-&amp;gt;文件管理查看&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/setting.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;点击&lt;strong&gt;设置微信路径&lt;/strong&gt;按钮，选择该文件夹路径下的带有wxid_xxx的路径(没有wxid的话先选择其中一个文件夹不对的话换其他文件夹)&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/path_select.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;ol start=&#34;5&#34;&gt; &#xA;  &lt;li&gt;获取到密钥和微信路径之后点击开始解密&lt;/li&gt; &#xA;  &lt;li&gt;解密后的数据库文件保存在./app/DataBase/Msg路径下&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h3&gt;3. 查看&lt;/h3&gt; &#xA; &lt;p&gt;随便下载一个SQLite数据库查看软件就能打开数据库，例如&lt;a href=&#34;https://sqlitebrowser.org/dl/&#34;&gt;DB Browser for SQLite&lt;/a&gt; （不懂SQL的稍微学下SQL咱再来，或者自动跳过该步骤直接往下看最终效果）&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D.md&#34;&gt;数据库功能介绍&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/%E7%94%B5%E8%84%91%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.md&#34;&gt;更多功能介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;显示效果&lt;/p&gt; &#xA; &lt;img alt=&#34;聊天界面&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/chat_.png&#34;&gt; &#xA; &lt;h3&gt;4. pc端功能展示&lt;/h3&gt; &#xA; &lt;p&gt;恭喜你解密成功，来看看效果吧~&lt;/p&gt; &#xA; &lt;h4&gt;4.1 最上方导航栏&lt;/h4&gt; &#xA; &lt;p&gt;可以点击获取教程，相关信息，导出全部信息的csv文件。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/01f1f9eacb6063b980595ef769bbc183.image-20231201003914318.webp&#34; alt=&#34;image-20231201003914318.png&#34;&gt;&lt;/p&gt; &#xA; &lt;h4&gt;4.2 聊天界面&lt;/h4&gt; &#xA; &lt;p&gt;点击&lt;strong&gt;左侧导航栏——&amp;gt;聊天&lt;/strong&gt; ，会随机跳转到某一个好友的界面，滚轮滚动，可以向上翻看更早的聊天记录（温馨提示：可能在翻的时候会有卡顿的现象，是因为数据加载需要时间，后期我们会继续优化嗷~ ）。目前聊天记录中文字、图片、表情包基本可以正常显示~&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/da1103c0d40eac06e07a46a23fb0a138.image-20231130221954512.webp&#34; alt=&#34;image-20231130221954512.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;当你想要查找某一位好友的信息时，可以在图中红框输入信息，点击Enter回车键，进行检索&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/17746c59d1015164438e539abec6094e.image-20231130223621017.webp&#34; alt=&#34;image-20231130223621017.png&#34;&gt;&lt;/p&gt; &#xA; &lt;h4&gt;4.3 好友界面&lt;/h4&gt; &#xA; &lt;p&gt;点击&lt;strong&gt;左侧导航栏——&amp;gt;好友&lt;/strong&gt;，会跳转到好友的界面，同样可以选择好友，右上方导航栏中有（1）统计信息（2）情感分析（3）年度报告（4）退出（5）导出聊天记录：可选择导出为word、csv、html格式。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/80958f575ec8f2822af15ce1634029da.image-20231130224357480.webp&#34; alt=&#34;image-20231130224357480.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;功能部分未集成或开发，请您耐心等待呀~&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;PC端破解过程中部分问题解决（可参考）&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;h4&gt;🤔如果您在pc端使用的时候出现问题，可以先参考以下方面，如果仍未解决，可以在群里交流~&lt;/h4&gt; &#xA; &lt;p&gt;如果您遇到下图所示的问题，是由于没有在电脑端登录微信&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/db8e39b27d369851c73298b247b79c2f.image-20231130231701520.webp&#34; alt=&#34;image-20231130231701520.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果您遇到下图所示的问题，需要先运行&lt;code&gt;decrypt_window&lt;/code&gt;的可执行文件或者源代码文件&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;python decrypt_window.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/a3ea30edd2e63187283dcc55e344a095.image-20231130231503340.webp&#34; alt=&#34;image-20231130231503340.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果您在运行可执行程序的时候出现闪退的现象，请右击软件使用管理员权限运行。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/f18737d5a006aa5e7354b74f6e036d47.image-20231130233120492.webp&#34; alt=&#34;image-20231130233120492.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果您在获取信息的时候，&lt;code&gt;wxid&lt;/code&gt; 显示none，但是密钥是存在的，需要在微信文件保存的路径中选择该文件夹路径下的带有wxid_xxx的名字，填到wxid位置并继续点击&lt;code&gt;开始解密&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/5c3c53cb34701fb74283e01e52a2df04.image-20231130234120644.webp&#34; alt=&#34;image-20231130234120644.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果出现如图所示的报错信息，将&lt;code&gt;app/database/msg&lt;/code&gt;文件夹删除，重新运行&lt;code&gt;main_pc.py&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/884d8f930518b9b31bfa9df7fd5a53f8.image-20231130235155121.webp&#34; alt=&#34;image-20231130235155121.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;导出数据成功之后，该文件位置与exe文件位置相同（或者在源码.data文件下）&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://blog.lc044.love/static/img/1748d98033903dede564ce3d7e835bdf.image-20231201000202980.webp&#34; alt=&#34;image-20231201000202980.png&#34;&gt;&lt;/p&gt; &#xA; &lt;h4&gt;🤔注意&lt;/h4&gt; &#xA; &lt;p&gt;解密一个微信数据库之后，登录新的微信并不会实时更改&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;使用模拟器（支持可视化分析）&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;不推荐使用，PC端微信可视化功能马上实现&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;根据&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt;获得两个文件 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;auth_info_key_prefs.xml——解析数据库密码&lt;/li&gt; &#xA;    &lt;li&gt;EnMicroMsg.db——聊天数据库&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;上面这两个文件就可以&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;安装依赖库&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;python版本&amp;gt;=3.10&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;说明:用到了python3.10的match语法，不方便更换python版本的小伙伴可以把match(运行报错的地方)更改为if else&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;命令行运行以下代码（&lt;strong&gt;建议使用Pycharm打开项目，Pycharm会自动配置好所有东西，直接运行main.py即可&lt;/strong&gt;）&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;运行main.py&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;出现解密界面&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001305274.png&#34; alt=&#34;image-20230521001305274&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;按照提示选择上面获得的两个文件，等待解密完成，重新运行程序&lt;/p&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;进入主界面&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;这时候不显示头像，因为头像文件没有导入进来&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001547481.png&#34; alt=&#34;image-20230521001547481&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;根据&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt; 将头像文件夹avatar复制到工程目录./app/data/目录下&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001726799.png&#34; alt=&#34;image-20230521001726799&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果想要显示聊天图像就把&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt; 里的image2文件夹复制到./app/data文件夹里，效果跟上图一样&lt;/p&gt; &#xA; &lt;p&gt;复制进来之后再运行程序就有图像了&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235113261.png&#34; alt=&#34;image-20230520235113261&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;项目还有很多bug，希望大家能够及时反馈&lt;/h2&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/LC044/WeChatMsg&#34;&gt;https://github.com/LC044/WeChatMsg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🏆致谢&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PC微信解密工具:&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;https://github.com/xaoyaoo/PyWxDump&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;说明：该项目仅可用于交流学习，禁止任何非法用途，创作者不承担任何责任🙄&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/?utm_source=bestxtools.com#LC044/WeChatMsg&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=LC044/WeChatMsg&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🎄温馨提示&lt;/h1&gt; &#xA;&lt;p&gt;如果您在使用该软件的过程中&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;发现新的bug&lt;/li&gt; &#xA; &lt;li&gt;有新的功能诉求&lt;/li&gt; &#xA; &lt;li&gt;操作比较繁琐&lt;/li&gt; &#xA; &lt;li&gt;觉得UI不够美观&lt;/li&gt; &#xA; &lt;li&gt;等其他给您造成困扰的地方&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请提起&lt;a href=&#34;https://github.com/LC044/WeChatMsg/issues&#34;&gt;issue&lt;/a&gt;或者添加QQ群(进群前先点个⭐哦):&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/qq.jpg&#34;&gt;&lt;strong&gt;474379264&lt;/strong&gt;&lt;/a&gt; ，我将尽快为您解决问题&lt;/p&gt; &#xA;&lt;p&gt;如果您是一名开发者，有新的想法或建议，欢迎&lt;a href=&#34;https://github.com/LC044/WeChatMsg/forks&#34;&gt;fork&lt;/a&gt; 该项目并发起&lt;a href=&#34;https://github.com/LC044/WeChatMsg/pulls&#34;&gt;PR&lt;/a&gt;，我将把您的名字写入贡献者名单中&lt;/p&gt;</summary>
  </entry>
</feed>