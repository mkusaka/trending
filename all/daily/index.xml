<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-13T01:47:47Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>minio/minio</title>
    <updated>2025-04-13T01:47:47Z</updated>
    <id>tag:github.com,2025-04-13:/minio/minio</id>
    <link href="https://github.com/minio/minio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MinIO is a high-performance, S3 compatible object store, open sourced under GNU AGPLv3 license.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MinIO Quickstart Guide&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.min.io&#34;&gt;&lt;img src=&#34;https://slack.min.io/slack?type=svg&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/minio/minio/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/minio/minio.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/minio/minio/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-AGPL%20V3-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://min.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/minio/minio/master/.github/logo.svg?sanitize=true&#34; alt=&#34;MinIO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. It is API compatible with Amazon S3 cloud storage service. Use MinIO to build high performance infrastructure for machine learning, analytics and application data workloads. To learn more about what MinIO is doing for AI storage, go to &lt;a href=&#34;https://min.io/solutions/object-storage-for-ai&#34;&gt;AI storage documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This README provides quickstart instructions on running MinIO on bare metal hardware, including container-based installations. For Kubernetes environments, use the &lt;a href=&#34;https://github.com/minio/operator/raw/master/README.md&#34;&gt;MinIO Kubernetes Operator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Container Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to run a standalone MinIO server as a container.&lt;/p&gt; &#xA;&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Stable&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to run the latest stable image of MinIO as a container using an ephemeral data volume:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;podman run -p 9000:9000 -p 9001:9001 \&#xA;  quay.io/minio/minio server /data --console-address &#34;:9001&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: To deploy MinIO on with persistent storage, you must map local persistent directories from the host OS to the container using the &lt;code&gt;podman -v&lt;/code&gt; option. For example, &lt;code&gt;-v /mnt/data:/data&lt;/code&gt; maps the host OS drive at &lt;code&gt;/mnt/data&lt;/code&gt; to &lt;code&gt;/data&lt;/code&gt; on the container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;macOS&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to run a standalone MinIO server on macOS.&lt;/p&gt; &#xA;&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to install the latest stable MinIO package using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install minio/stable/minio&#xA;minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you previously installed minio using &lt;code&gt;brew install minio&lt;/code&gt; then it is recommended that you reinstall minio from &lt;code&gt;minio/stable/minio&lt;/code&gt; official repo instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew uninstall minio&#xA;brew install minio/stable/minio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html/&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html/&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;h3&gt;Binary Download&lt;/h3&gt; &#xA;&lt;p&gt;Use the following command to download and run a standalone MinIO server on macOS. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://dl.min.io/server/minio/release/darwin-amd64/minio&#xA;chmod +x minio&#xA;./minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;h2&gt;GNU/Linux&lt;/h2&gt; &#xA;&lt;p&gt;Use the following command to run a standalone MinIO server on Linux hosts running 64-bit Intel/AMD architectures. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://dl.min.io/server/minio/release/linux-amd64/minio&#xA;chmod +x minio&#xA;./minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following table lists supported architectures. Replace the &lt;code&gt;wget&lt;/code&gt; URL with the architecture for your Linux host.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit Intel/AMD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-amd64/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-amd64/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit ARM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-arm64/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-arm64/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit PowerPC LE (ppc64le)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-ppc64le/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-ppc64le/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Microsoft Windows&lt;/h2&gt; &#xA;&lt;p&gt;To run MinIO on 64-bit Windows hosts, download the MinIO executable from the following URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;https://dl.min.io/server/minio/release/windows-amd64/minio.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the following command to run a standalone MinIO server on the Windows host. Replace &lt;code&gt;D:\&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data. You must change the terminal or powershell directory to the location of the &lt;code&gt;minio.exe&lt;/code&gt; executable, &lt;em&gt;or&lt;/em&gt; add the path to that directory to the system &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;minio.exe server D:\&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Install from Source&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to compile and run a standalone MinIO server from source. Source installation is only intended for developers and advanced users. If you do not have a working Golang environment, please follow &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;How to install Golang&lt;/a&gt;. Minimum version required is &lt;a href=&#34;https://golang.org/dl/#stable&#34;&gt;go1.24&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/minio/minio@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;MinIO strongly recommends &lt;em&gt;against&lt;/em&gt; using compiled-from-source MinIO servers for production environments.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment Recommendations&lt;/h2&gt; &#xA;&lt;h3&gt;Allow port access for Firewalls&lt;/h3&gt; &#xA;&lt;p&gt;By default MinIO uses the port 9000 to listen for incoming connections. If your platform blocks the port by default, you may need to enable access to the port.&lt;/p&gt; &#xA;&lt;h3&gt;ufw&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with ufw enabled (Debian based distros), you can use &lt;code&gt;ufw&lt;/code&gt; command to allow traffic to specific ports. Use below command to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ufw allow 9000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ufw allow 9000:9010/tcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;firewall-cmd&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with firewall-cmd enabled (CentOS), you can use &lt;code&gt;firewall-cmd&lt;/code&gt; command to allow traffic to specific ports. Use below commands to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --get-active-zones&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command gets the active zone(s). Now, apply port rules to the relevant zones returned above. For example if the zone is &lt;code&gt;public&lt;/code&gt;, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --zone=public --add-port=9000/tcp --permanent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;permanent&lt;/code&gt; makes sure the rules are persistent across firewall start, restart or reload. Finally reload the firewall for changes to take effect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;iptables&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with iptables enabled (RHEL, CentOS, etc), you can use &lt;code&gt;iptables&lt;/code&gt; command to enable all traffic coming to specific ports. Use below command to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;iptables -A INPUT -p tcp --dport 9000 -j ACCEPT&#xA;service iptables restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;iptables -A INPUT -p tcp --dport 9000:9010 -j ACCEPT&#xA;service iptables restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Test MinIO Connectivity&lt;/h2&gt; &#xA;&lt;h3&gt;Test using MinIO Console&lt;/h3&gt; &#xA;&lt;p&gt;MinIO Server comes with an embedded web based object browser. Point your web browser to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; to ensure your server has started successfully.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: MinIO runs console on random port by default, if you wish to choose a specific port use &lt;code&gt;--console-address&lt;/code&gt; to pick a specific interface and port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Things to consider&lt;/h3&gt; &#xA;&lt;p&gt;MinIO redirects browser access requests to the configured server port (i.e. &lt;code&gt;127.0.0.1:9000&lt;/code&gt;) to the configured Console port. MinIO uses the hostname or IP address specified in the request when building the redirect URL. The URL and port &lt;em&gt;must&lt;/em&gt; be accessible by the client for the redirection to work.&lt;/p&gt; &#xA;&lt;p&gt;For deployments behind a load balancer, proxy, or ingress rule where the MinIO host IP address or port is not public, use the &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; environment variable to specify the external hostname for the redirect. The LB/Proxy must have rules for directing traffic to the Console port specifically.&lt;/p&gt; &#xA;&lt;p&gt;For example, consider a MinIO deployment behind a proxy &lt;code&gt;https://minio.example.net&lt;/code&gt;, &lt;code&gt;https://console.minio.example.net&lt;/code&gt; with rules for forwarding traffic on port :9000 and :9001 to MinIO and the MinIO Console respectively on the internal network. Set &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; to &lt;code&gt;https://console.minio.example.net&lt;/code&gt; to ensure the browser receives a valid reachable URL.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dashboard&lt;/th&gt; &#xA;   &lt;th&gt;Creating a bucket&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/minio/minio/raw/master/docs/screenshots/pic1.png?raw=true&#34; alt=&#34;Dashboard&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/minio/minio/raw/master/docs/screenshots/pic2.png?raw=true&#34; alt=&#34;Dashboard&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mc&lt;/code&gt; provides a modern alternative to UNIX commands like ls, cat, cp, mirror, diff etc. It supports filesystems and Amazon S3 compatible cloud storage services. Follow the MinIO Client &lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart&#34;&gt;Quickstart Guide&lt;/a&gt; for further instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading MinIO&lt;/h2&gt; &#xA;&lt;p&gt;Upgrades require zero downtime in MinIO, all upgrades are non-disruptive, all transactions on MinIO are atomic. So upgrading all the servers simultaneously is the recommended way to upgrade MinIO.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: requires internet access to update directly from &lt;a href=&#34;https://dl.min.io&#34;&gt;https://dl.min.io&lt;/a&gt;, optionally you can host any mirrors at &lt;a href=&#34;https://my-artifactory.example.com/minio/&#34;&gt;https://my-artifactory.example.com/minio/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For deployments that installed the MinIO server binary by hand, use &lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-update.html&#34;&gt;&lt;code&gt;mc admin update&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mc admin update &amp;lt;minio alias, e.g., myminio&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For deployments without external internet access (e.g. airgapped environments), download the binary from &lt;a href=&#34;https://dl.min.io&#34;&gt;https://dl.min.io&lt;/a&gt; and replace the existing MinIO binary let&#39;s say for example &lt;code&gt;/opt/bin/minio&lt;/code&gt;, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and proceed to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For installations using Systemd MinIO service, upgrade via RPM/DEB packages &lt;strong&gt;parallelly&lt;/strong&gt; on all servers or replace the binary lets say &lt;code&gt;/opt/bin/minio&lt;/code&gt; on all nodes, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and process to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Upgrade Checklist&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Test all upgrades in a lower environment (DEV, QA, UAT) before applying to production. Performing blind upgrades in production environments carries significant risk.&lt;/li&gt; &#xA; &lt;li&gt;Read the release notes for MinIO &lt;em&gt;before&lt;/em&gt; performing any upgrade, there is no forced requirement to upgrade to latest release upon every release. Some release may not be relevant to your setup, avoid upgrading production environments unnecessarily.&lt;/li&gt; &#xA; &lt;li&gt;If you plan to use &lt;code&gt;mc admin update&lt;/code&gt;, MinIO process must have write access to the parent directory where the binary is present on the host system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mc admin update&lt;/code&gt; is not supported and should be avoided in kubernetes/container environments, please upgrade containers by upgrading relevant container images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;We do not recommend upgrading one MinIO server at a time, the product is designed to support parallel upgrades please follow our recommended guidelines.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Explore Further&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc.html&#34;&gt;Use &lt;code&gt;mc&lt;/code&gt; with MinIO Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/developers/go/minio-go.html&#34;&gt;Use &lt;code&gt;minio-go&lt;/code&gt; SDK with MinIO Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/index.html&#34;&gt;The MinIO documentation website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute to MinIO Project&lt;/h2&gt; &#xA;&lt;p&gt;Please follow MinIO &lt;a href=&#34;https://github.com/minio/minio/raw/master/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MinIO source is licensed under the &lt;a href=&#34;https://github.com/minio/minio/raw/master/LICENSE&#34;&gt;GNU AGPLv3&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;MinIO &lt;a href=&#34;https://github.com/minio/minio/tree/master/docs&#34;&gt;documentation&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC BY 4.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minio/minio/raw/master/COMPLIANCE.md&#34;&gt;License Compliance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>crestalnetwork/intentkit</title>
    <updated>2025-04-13T01:47:47Z</updated>
    <id>tag:github.com,2025-04-13:/crestalnetwork/intentkit</id>
    <link href="https://github.com/crestalnetwork/intentkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open and fair framework for everyone to build AI agents equipped with powerful skills. Launch your agent, improve the world, your wallet, or both!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntentKit&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/images/intentkit_banner.png&#34; alt=&#34;IntentKit by Crestal&#34; width=&#34;100%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;IntentKit is an autonomous agent framework that enables the creation and management of AI agents with various capabilities including blockchain interaction, social media management, and custom skill integration.&lt;/p&gt; &#xA;&lt;h2&gt;Alpha Warning&lt;/h2&gt; &#xA;&lt;p&gt;This project is currently in alpha stage and is not recommended for production use.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Multiple Agent Support&lt;/li&gt; &#xA; &lt;li&gt;🔄 Autonomous Agent Management&lt;/li&gt; &#xA; &lt;li&gt;🔗 Blockchain Integration (EVM chains first)&lt;/li&gt; &#xA; &lt;li&gt;🐦 Social Media Integration (Twitter, Telegram, and more)&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Extensible Skill System&lt;/li&gt; &#xA; &lt;li&gt;🔌 Extensible Plugin System (WIP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;                                                                                    &#xA;                                 Entrypoints                                        &#xA;                       │                             │                              &#xA;                       │   Twitter/Telegram &amp;amp; more   │                              &#xA;                       └──────────────┬──────────────┘                              &#xA;                                      │                                             &#xA;  Storage:  ────┐                     │                      ┌──── Skills:          &#xA;                │                     │                      │                      &#xA;  Agent Config  │     ┌───────────────▼────────────────┐     │  Chain Integration   &#xA;                │     │                                │     │                      &#xA;  Credentials   │     │                                │     │  Wallet Management   &#xA;                │     │           The Agent            │     │                      &#xA;  Personality   │     │                                │     │  On-Chain Actions    &#xA;                │     │                                │     │                      &#xA;  Memory        │     │      Powered by LangGraph      │     │  Internet Search     &#xA;                │     │                                │     │                      &#xA;  Skill State   │     └────────────────────────────────┘     │  Image Processing    &#xA;            ────┘                                            └────                  &#xA;                                                                                    &#xA;                                                                More and More...    &#xA;                         ┌──────────────────────────┐                               &#xA;                         │                          │                               &#xA;                         │  Agent Config &amp;amp; Memory   │                               &#xA;                         │                          │                               &#xA;                         └──────────────────────────┘                               &#xA;                                                                                    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The architecture is a simplified view, and more details can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/architecture.md&#34;&gt;Architecture&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt; to get started with your setup.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/&#34;&gt;Documentation&lt;/a&gt; before you start.&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/abstracts/&#34;&gt;abstracts/&lt;/a&gt;: Abstract classes and interfaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/&#34;&gt;app/&lt;/a&gt;: Core application code &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/core/&#34;&gt;core/&lt;/a&gt;: Core modules&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/services/&#34;&gt;services/&lt;/a&gt;: Services&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/entrypoints/&#34;&gt;entrypoints/&lt;/a&gt;: Entrypoints means the way to interact with the agent&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/admin/&#34;&gt;admin/&lt;/a&gt;: Admin logic&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/config/&#34;&gt;config/&lt;/a&gt;: Configurations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/api.py&#34;&gt;api.py&lt;/a&gt;: REST API server&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/autonomous.py&#34;&gt;autonomous.py&lt;/a&gt;: Autonomous agent scheduler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/singleton.py&#34;&gt;singleton.py&lt;/a&gt;: Singleton agent scheduler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/scheduler.py&#34;&gt;scheduler.py&lt;/a&gt;: Scheduler for periodic tasks&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/readonly.py&#34;&gt;readonly.py&lt;/a&gt;: Readonly entrypoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/twitter.py&#34;&gt;twitter.py&lt;/a&gt;: Twitter listener&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/telegram.py&#34;&gt;telegram.py&lt;/a&gt;: Telegram listener&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/clients/&#34;&gt;clients/&lt;/a&gt;: Clients for external services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/&#34;&gt;docs/&lt;/a&gt;: Documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/models/&#34;&gt;models/&lt;/a&gt;: Database models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/scripts/&#34;&gt;scripts/&lt;/a&gt;: Scripts for agent management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/skills/&#34;&gt;skills/&lt;/a&gt;: Skill implementations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/plugins/&#34;&gt;plugins/&lt;/a&gt;: Reserved for Plugin implementations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/utils/&#34;&gt;utils/&lt;/a&gt;: Utility functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute Skills&lt;/h3&gt; &#xA;&lt;p&gt;First check &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/contributing/wishlist.md&#34;&gt;Wishlist&lt;/a&gt; for active requests.&lt;/p&gt; &#xA;&lt;p&gt;Once you are ready to start, see &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/contributing/skills.md&#34;&gt;Skill Development Guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GuijiAI/HeyGem.ai</title>
    <updated>2025-04-13T01:47:47Z</updated>
    <id>tag:github.com,2025-04-13:/GuijiAI/HeyGem.ai</id>
    <link href="https://github.com/GuijiAI/HeyGem.ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Heygem - Open Source Alternative to Heygen &lt;a href=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.md&#34;&gt;【切换中文】&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Announcement&lt;/h2&gt; &#xA;&lt;p&gt;Heygem digital human cloning intelligent agent and plugins have been successfully launched on the Coze platform. No complex deployment is required, even novice users can easily get started and use it directly.&lt;/p&gt; &#xA;&lt;p&gt;Click here to instantly access the Coze store experience👉&lt;a href=&#34;https://www.coze.cn/store/agent/7488696243959431206?bid=6ftfk9dtg0g12&#34;&gt;Silicon-based Intelligent Digital Human Cloning Agent&lt;/a&gt; | &lt;a href=&#34;https://www.coze.cn/store/plugin/7488926246634782746&#34;&gt;Silicon-based Intelligent Digital Human Cloning Plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scan the code to watch the operation video&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/coze-video.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;[New Ubuntu Version Notice]&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu Version Officially Released&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Adaptation and verification work for Ubuntu 22.04 Desktop version (kernel 6.8.0-52-generic) has been completed. Compatibility testing for other Linux versions has not yet been conducted.&lt;/li&gt; &#xA; &lt;li&gt;Added internationalization (English) for the client program interface.&lt;/li&gt; &#xA; &lt;li&gt;Fixed some known issues &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;#304&lt;/li&gt; &#xA;   &lt;li&gt;#292&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GuijiAI/HeyGem.ai?tab=readme-ov-file#ubuntu-2204-installation&#34;&gt;Ubuntu22.04 Installation Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Important Notice to Developer Partners&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Dear Heygem Open Source Community Members:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We sincerely thank you for your enthusiastic attention and active participation in the Heygem digital human open source project! We have noticed that some developers face challenges during local deployment. To better meet the needs of different scenarios, we are now announcing two parallel service solutions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Project&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;HeyGem Open Source Local Deployment&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Digital Human/Clone Voice API Service&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Usage&lt;/td&gt; &#xA;   &lt;td&gt;Open Source Local Deployment&lt;/td&gt; &#xA;   &lt;td&gt;Rapid Clone API Service&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Recommended&lt;/td&gt; &#xA;   &lt;td&gt;Technical Users&lt;/td&gt; &#xA;   &lt;td&gt;Business Users&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Technical Threshold&lt;/td&gt; &#xA;   &lt;td&gt;Developers with deep learning framework experience/pursuing deep customization/wishing to participate in community co-construction&lt;/td&gt; &#xA;   &lt;td&gt;Quick business integration/focus on upper-level application development/need enterprise-level SLA assurance for commercial scenarios&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hardware Requirements&lt;/td&gt; &#xA;   &lt;td&gt;Need to purchase GPU server&lt;/td&gt; &#xA;   &lt;td&gt;No need to purchase GPU server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customization&lt;/td&gt; &#xA;   &lt;td&gt;Can modify and extend the code according to your needs, fully controlling the software&#39;s functions and behavior&lt;/td&gt; &#xA;   &lt;td&gt;Cannot directly modify the source code, can only extend functions through API-provided interfaces, less flexible than open source projects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Technical Support&lt;/td&gt; &#xA;   &lt;td&gt;Community Support&lt;/td&gt; &#xA;   &lt;td&gt;Dynamic expansion support + professional technical response team&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maintenance Cost&lt;/td&gt; &#xA;   &lt;td&gt;High maintenance cost&lt;/td&gt; &#xA;   &lt;td&gt;Simple maintenance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lip Sync Effect&lt;/td&gt; &#xA;   &lt;td&gt;Usable effect&lt;/td&gt; &#xA;   &lt;td&gt;Stunning and higher definition effect&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Commercial Authorization&lt;/td&gt; &#xA;   &lt;td&gt;Supports global free commercial use (enterprises with more than 100,000 users or annual revenue exceeding 10 million USD need to sign a commercial license agreement)&lt;/td&gt; &#xA;   &lt;td&gt;Commercial use allowed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Iteration Speed&lt;/td&gt; &#xA;   &lt;td&gt;Slow updates, bug fixes depend on the community&lt;/td&gt; &#xA;   &lt;td&gt;Latest models/algorithms are prioritized, fast problem resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We always adhere to the open source spirit, and the launch of the API service aims to provide a more complete solution matrix for developers with different needs. No matter which method you choose, you can always obtain technical support documents through &lt;a href=&#34;mailto:James@toolwiz.com&#34;&gt;James@toolwiz.com&lt;/a&gt;. We look forward to working with you to promote the inclusive development of digital human technology!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Silicon-based Intelligent Developer Team&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vKiBR85E7JyRkr6CxLCppA?mpshare=1&amp;amp;scene=1&amp;amp;srcid=0319sszkopZO6870sGsU0TFc&amp;amp;sharer_shareinfo=cac5ec3bfa62ed558552c7c022821613&amp;amp;sharer_shareinfo_first=cac5ec3bfa62ed558552c7c022821613&amp;amp;from=industrynews#rd&#34; target=&#34;_blank&#34;&gt;From scratch, hand-in-hand to teach you how to create your own HeyGem open source AI digital human!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.guiji.cn/platform&#34;&gt;&lt;strong&gt;Rapid Clone API&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://guiji.cn/digital-docs/introduce/&#34;&gt;&lt;strong&gt;API Documentation Center&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.guiji.cn/platform&#34;&gt;&lt;strong&gt;Real-time Interaction SDK&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://guiji.cn/duix-light-document/introduce/&#34;&gt;&lt;strong&gt;SDK Documentation Center&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GuijiAI/duix.ai&#34;&gt;&lt;strong&gt;Local Real-time Interaction (realtime) duix.ai Open Source Address&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/GuijiAI/duix.ai/raw/main/duix-android/dh_aigc_android/README.md&#34;&gt;&lt;strong&gt;Android Version&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/GuijiAI/duix.ai/raw/main/duix-ios/GJLocalDigitalDemo/GJLocalDigitalSDK.md&#34;&gt;&lt;strong&gt;IOS Version&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/cb10263a14cc826e22c2be4bcae01a89.jpg&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;Open Source Co-Creation · Shared Glory&lt;/h2&gt; &#xA;&lt;p&gt;Since we open-sourced Heygem, global geeks have illuminated the digital avatar matrix in the code universe, with each commit reconstructing the future! But joy is better shared than enjoyed alone—now we invite all experts to join the &#34;Open Source Co-Creation Plan,&#34; empowering everyone with AI creativity and propelling the Chinese AI fleet towards the stars!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Co-Creation Content Direction&lt;/p&gt; &lt;p&gt;Share high-quality videos or articles on Heygem deployment tutorials, optimization guides, and practical cases (Bilibili, Douyin, Xiaohongshu, WeChat Official Accounts, Zhihu, etc.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Source Co-Creation Special Reward Pool (Real Cash Rewards!)&lt;/p&gt; &lt;p&gt;(1) Basic Rewards&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Content receiving 20-100 likes will be awarded the [Heygem.ai Master Award] and a 20 RMB cash red envelope.&#xA;&#xA;Content receiving 100+ likes will be awarded the [Heygem.ai God Award] and a 50 RMB cash red envelope.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(2) Special Achievements:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; The monthly MVP will unlock the Open Source Hall of Fame digital badge (permanently on-chain).&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Participation Method&lt;/p&gt; &lt;p&gt;Send your creativity to the customer service lady, add a friend with the note &#34;Name+999&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/2025-03-20_14-38-00.jpg&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;Outstanding Co-Creation Works Exhibition&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1awQqYZEqB/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=618f44772c5dafb47317bb728505d79c&#34;&gt;HeyGem Digital Human One-Click Start, 8G Video Memory Available, Model Size 10G, No Need for 100G Hard Disk Space, No Need for D Drive, Based on Docker Single Image, Silicon-Based Open Source&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1ACQSYEErF/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=618f44772c5dafb47317bb728505d79c&#34;&gt;Ai Digital Human 16 - Local Deployment! The Most Popular Open Source Digital Human HeyGem Zero-Basis Hands-On Teaching Setup Tutorial, 20% Generation Stuck Solution, Full Simplified Process with Supporting Files - T8 ComfyUI Tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1R3QpYsEY6/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=618f44772c5dafb47317bb728505d79c&#34;&gt;Heygem Open Source Witnessed History! Cyber Worker Revolution!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1eWQ6YgEcp/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=618f44772c5dafb47317bb728505d79c&#34;&gt;Digital Human Project Heygem Local Deployment Tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://xhslink.com/a/rQPYqoDSRih8&#34;&gt;So Tempting! From Paid to Open Source, AI Digital Humans Will Open a New Era&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://xhslink.com/a/tX3p5V5tajh8&#34;&gt;Open Source Free Digital Humans Are Here, Unlimited Times, Fast Cloning&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://xhslink.com/a/8UT1kQ7vxjh8&#34;&gt;AI Digital Humans Are Free! GitHub&#39;s Hot Project Can Run on Your Computer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1SkoCYpEwh/?share_source=copy_web&amp;amp;vd_source=c38dcdb72a68f2a4e0b3c0f4f9a5a03c&#34;&gt;The Most Popular Free AI Digital Human, HeyGem V1.0.3, Latest Update, One-Click Integration Package! Super Strong Lip-Sync Effect, Speed Up, Supports Long Videos, Batch Generation, 8G Video Memory Available!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1ZgovYGE3u/&#34;&gt;&lt;strong&gt;HeyGem One-Click Package Windows Direct Run Without Docker Silicon-Based Open Source Digital Human&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/image-20250304114114272.png&#34;&gt; &#xA;&lt;p&gt;Heygem is a fully offline video synthesis tool designed for Windows systems that can precisely clone your appearance and voice, digitalizing your image. You can create videos by driving virtual avatars through text and voice. No internet connection is required, protecting your privacy while enjoying convenient and efficient digital experiences.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Precise Appearance and Voice Cloning: Using advanced AI algorithms to capture human facial features with high precision, including facial features, contours, etc., to build realistic virtual models. It can also precisely clone voices, capturing and reproducing subtle characteristics of human voices, supporting various voice parameter settings to create highly similar cloning effects.&lt;/li&gt; &#xA;   &lt;li&gt;Text and Voice-Driven Virtual Avatars: Understanding text content through natural language processing technology, converting text into natural and fluent speech to drive virtual avatars. Voice input can also be used directly, allowing virtual avatars to perform corresponding actions and facial expressions based on the rhythm and intonation of the voice, making the virtual avatar&#39;s performance more natural and vivid.&lt;/li&gt; &#xA;   &lt;li&gt;Efficient Video Synthesis: Highly synchronizing digital human video images with sound, achieving natural and smooth lip-syncing, intelligently optimizing audio-video synchronization effects.&lt;/li&gt; &#xA;   &lt;li&gt;Multi-language Support: Scripts support eight languages - English, Japanese, Korean, Chinese, French, German, Arabic, and Spanish.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Key Advantages &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fully Offline Operation: No internet connection required, effectively protecting user privacy, allowing users to create in a secure, independent environment, avoiding potential data leaks during network transmission.&lt;/li&gt; &#xA;   &lt;li&gt;User-Friendly: Clean and intuitive interface, easy to use even for beginners with no technical background, quickly mastering the software&#39;s usage to start their digital human creation journey.&lt;/li&gt; &#xA;   &lt;li&gt;Multiple Model Support: Supports importing multiple models and managing them through one-click startup packages, making it convenient for users to choose suitable models based on different creative needs and application scenarios.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Technical Support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Voice Cloning Technology: Using advanced technologies like artificial intelligence to generate similar or identical voices based on given voice samples, covering context, intonation, speed, and other aspects of speech.&lt;/li&gt; &#xA;   &lt;li&gt;Automatic Speech Recognition: Technology that converts human speech vocabulary content into computer-readable input (text format), enabling computers to &#34;understand&#34; human speech.&lt;/li&gt; &#xA;   &lt;li&gt;Computer Vision Technology: Used in video synthesis for visual processing, including facial recognition and lip movement analysis, ensuring virtual avatar lip movements match voice and text content.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Nodejs 18&lt;/li&gt; &#xA; &lt;li&gt;Docker Images &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;docker pull guiji2025/fun-asr&lt;/li&gt; &#xA;   &lt;li&gt;docker pull guiji2025/fish-speech-ziming&lt;/li&gt; &#xA;   &lt;li&gt;docker pull guiji2025/heygem.ai&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Windows Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Must have D Drive: Mainly used for storing digital human and project data&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Free space requirement: More than 30GB&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;C Drive: Used for storing service image files&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Free space requirement: More than 100GB&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If less than 100GB is available, after installing Docker, you can choose a different disk folder with more than 100GB of remaining space at the location shown below.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/output.png&#34; alt=&#34;output&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;System Requirements:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Currently supports Windows 10 19042.1526 or higher&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Recommended Configuration:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CPU: 13th Gen Intel Core i5-13400F&lt;/li&gt; &#xA;   &lt;li&gt;Memory: 32GB&lt;/li&gt; &#xA;   &lt;li&gt;Graphics Card: RTX 4070&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you have an NVIDIA graphics card with properly installed drivers&lt;/p&gt; &lt;p&gt;NVIDIA driver download link: &lt;a href=&#34;https://www.nvidia.cn/drivers/lookup/&#34;&gt;https://www.nvidia.cn/drivers/lookup/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/nvidia.png&#34; alt=&#34;nvidia&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installing Windows Docker&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the command &lt;code&gt;wsl --list --verbose&lt;/code&gt; to check if WSL is installed. If it shows as below, it&#39;s already installed and no further installation is needed.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/wsl-list.png&#34; alt=&#34;wsl-list&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;WSL installation command: &lt;code&gt;wsl --install&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;May fail due to network issues, try multiple times&lt;/li&gt; &#xA;  &lt;li&gt;During installation, you&#39;ll need to set and remember a new username and password&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Update WSL using &lt;code&gt;wsl --update&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/updatewsl.png&#34; alt=&#34;updatewsl&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Download Docker for Windows&lt;/a&gt;, choose the appropriate installation package based on your CPU architecture.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you see this interface, installation is successful.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/61eb4c19-3e7a-4791-a266-de4209690cbd.png&#34; alt=&#34;61eb4c19-3e7a-4791-a266-de4209690cbd&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Docker&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/shortcut.png&#34; alt=&#34;shortcut&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Accept the agreement and skip login on first run&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/accept.png&#34; alt=&#34;accept&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/576746d5-5215-4973-b1ca-c8d7409a6403.png&#34; alt=&#34;576746d5-5215-4973-b1ca-c8d7409a6403&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/9a10b7b2-1eea-48c1-b7af-34129fe04446.png&#34; alt=&#34;9a10b7b2-1eea-48c1-b7af-34129fe04446&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installing the Server&lt;/h3&gt; &#xA;&lt;p&gt;Installation using Docker, docker-compose as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;docker-compose.yml&lt;/code&gt; file is in the &lt;code&gt;/deploy&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute &lt;code&gt;docker-compose up -d&lt;/code&gt; in the &lt;code&gt;/deploy&lt;/code&gt; directory, &lt;u&gt;if you want to use the lite version, execute &lt;code&gt;docker-compose -f docker-compose-lite.yml up -d&lt;/code&gt;&lt;/u&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait patiently (about half an hour, speed depends on network), download will consume about 70GB of traffic, make sure to use WiFi&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you see three services in Docker, it indicates success&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/README_zh.assets/e29d1922-7c58-46b4-b1e9-961f853f26d4.png&#34; alt=&#34;e29d1922-7c58-46b4-b1e9-961f853f26d4&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Directly download the &lt;a href=&#34;https://github.com/GuijiAI/HeyGem.ai/releases&#34;&gt;officially built installation package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Double-click &lt;code&gt;HeyGem-x.x.x-setup.exe&lt;/code&gt; to install&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Ubuntu 22.04 Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Recommended Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU: 13th Gen Intel Core i5-13400F&lt;/li&gt; &#xA; &lt;li&gt;Memory: 32GB or more (required)&lt;/li&gt; &#xA; &lt;li&gt;Graphics Card: RTX-4070 (ensure you have an NVIDIA graphics card and the driver is correctly installed)&lt;/li&gt; &#xA; &lt;li&gt;Hard Disk: More than 100GB of free space&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install Docker&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;First, check if Docker is installed using &lt;code&gt;docker --version&lt;/code&gt;. If it is installed, skip the following steps.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Directly download the &lt;a href=&#34;https://github.com/GuijiAI/HeyGem.ai/releases&#34;&gt;officially built installation package&lt;/a&gt; for the Linux version&lt;/li&gt; &#xA; &lt;li&gt;Double-click &lt;code&gt;HeyGem-x.x.x.AppImage&lt;/code&gt; to launch, no installation required&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Reminder: On Ubuntu systems, if you are using the &lt;code&gt;root&lt;/code&gt; user to access the desktop, double-clicking &lt;code&gt;HeyGem-x.x.x.AppImage&lt;/code&gt; may not work. You need to execute &lt;code&gt;./HeyGem-x.x.x.AppImage --no-sandbox&lt;/code&gt; in the terminal, adding the &lt;code&gt;--no-sandbox&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Open APIs&lt;/h2&gt; &#xA;&lt;p&gt;We have opened APIs for model training and video synthesis. After Docker starts, several ports will be exposed locally, accessible through &lt;code&gt;http://127.0.0.1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For specific code, refer to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;src/main/service/model.js&lt;/li&gt; &#xA; &lt;li&gt;src/main/service/video.js&lt;/li&gt; &#xA; &lt;li&gt;src/main/service/voice.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Model Training&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Separate video into silent video + audio&lt;/li&gt; &#xA; &lt;li&gt;Place audio in &lt;code&gt;D:\heygem_data\voice\data&lt;/code&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;D:\heygem_data\voice\data&lt;/code&gt; is agreed with the &lt;code&gt;guiji2025/fish-speech-ziming&lt;/code&gt; service, can be modified in docker-compose&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Call the &lt;code&gt;http://127.0.0.1:18180/v1/preprocess_and_tran&lt;/code&gt; interface &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Parameter example:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;format&#34;: &#34;.wav&#34;,&#xA;  &#34;reference_audio&#34;: &#34;xxxxxx/xxxxx.wav&#34;,&#xA;  &#34;lang&#34;: &#34;zh&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;Response example:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;asr_format_audio_url&#34;: &#34;xxxx/x/xxx/xxx.wav&#34;,&#xA;  &#34;reference_audio_text&#34;: &#34;xxxxxxxxxxxx&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Record the response results as they will be needed for subsequent audio synthesis&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Audio Synthesis&lt;/h3&gt; &#xA;&lt;p&gt;Interface: &lt;code&gt;http://127.0.0.1:18180/v1/invoke&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// Request parameters&#xA;{&#xA;  &#34;speaker&#34;: &#34;{uuid}&#34;, // A unique UUID&#xA;  &#34;text&#34;: &#34;xxxxxxxxxx&#34;, // Text content to synthesize&#xA;  &#34;format&#34;: &#34;wav&#34;, // Fixed parameter&#xA;  &#34;topP&#34;: 0.7, // Fixed parameter&#xA;  &#34;max_new_tokens&#34;: 1024, // Fixed parameter&#xA;  &#34;chunk_length&#34;: 100, // Fixed parameter&#xA;  &#34;repetition_penalty&#34;: 1.2, // Fixed parameter&#xA;  &#34;temperature&#34;: 0.7, // Fixed parameter&#xA;  &#34;need_asr&#34;: false, // Fixed parameter&#xA;  &#34;streaming&#34;: false, // Fixed parameter&#xA;  &#34;is_fixed_seed&#34;: 0, // Fixed parameter&#xA;  &#34;is_norm&#34;: 0, // Fixed parameter&#xA;  &#34;reference_audio&#34;: &#34;{voice.asr_format_audio_url}&#34;, // Return value from previous &#34;Model Training&#34; step&#xA;  &#34;reference_text&#34;: &#34;{voice.reference_audio_text}&#34; // Return value from previous &#34;Model Training&#34; step&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Video Synthesis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Synthesis interface: &lt;code&gt;http://127.0.0.1:8383/easy/submit&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// Request parameters&#xA;{&#xA;  &#34;audio_url&#34;: &#34;{audioPath}&#34;, // Audio path&#xA;  &#34;video_url&#34;: &#34;{videoPath}&#34;, // Video path&#xA;  &#34;code&#34;: &#34;{uuid}&#34;, // Unique key&#xA;  &#34;chaofen&#34;: 0, // Fixed value&#xA;  &#34;watermark_switch&#34;: 0, // Fixed value&#xA;  &#34;pn&#34;: 1 // Fixed value&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Progress query: &lt;code&gt;http://127.0.0.1:8383/easy/query?code=${taskCode}&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;GET request, the parameter &lt;code&gt;taskCode&lt;/code&gt; is the &lt;code&gt;code&lt;/code&gt; from the synthesis interface input above&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Self-Check Steps Before Asking Questions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Check if all three services are in Running status&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/doc/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.assets/e29d1922-7c58-46b4-b1e9-961f853f26d4.png&#34; alt=&#34;e29d1922-7c58-46b4-b1e9-961f853f26d4&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Confirm that your machine has an NVIDIA graphics card and drivers are correctly installed.&lt;/p&gt; &lt;p&gt;All computing power for this project is local. The three services won&#39;t start without an NVIDIA graphics card or proper drivers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure both server and client are updated to the latest version. The project is newly open-sourced, the community is very active, and updates are frequent. Your issue might have been resolved in a new version.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Server: Go to &lt;code&gt;/deploy&lt;/code&gt; directory and re-execute &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Client: &lt;code&gt;pull&lt;/code&gt; code and re-&lt;code&gt;build&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/GuijiAI/HeyGem.ai/issues&#34;&gt;GitHub Issues&lt;/a&gt; are continuously updated, issues are being resolved and closed daily. Check frequently, your issue might already be resolved.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Question Template&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Problem Description&lt;/p&gt; &lt;p&gt;Describe the reproduction steps in detail, with screenshots if possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide Error Logs&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;How to get client logs:&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/doc/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.assets/image-20250308205954494.png&#34; alt=&#34;image-20250308205954494&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Server logs:&lt;/p&gt; &lt;p&gt;Find the key location, or click on our three Docker services, and &#34;Copy&#34; as shown below.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/doc/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.assets/image-20250308215812201.png&#34; alt=&#34;image-20250308215812201&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;  James@toolwiz.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuijiAI/HeyGem.ai/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASR based on &lt;a href=&#34;https://github.com/modelscope/FunASR&#34;&gt;fun-asr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TTS based on &lt;a href=&#34;https://github.com/fishaudio/fish-speech&#34;&gt;fish-speech-ziming&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#GuijiAI/HeyGem.ai&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=GuijiAI/HeyGem.ai&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>