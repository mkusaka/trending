<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-16T01:25:04Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gregsadetsky/sagittarius</title>
    <updated>2023-12-16T01:25:04Z</updated>
    <id>tag:github.com,2023-12-16:/gregsadetsky/sagittarius</id>
    <link href="https://github.com/gregsadetsky/sagittarius" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Remake of the Google Gemini Fake Demo, Except Using GPT-4 and It&#39;s Real&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A Remake of the Google Gemini Fake Demo, Except Using GPT-4 and It&#39;s Real&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=__nL7Vc0OCg&#34;&gt;Original video here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1RrkRA7wuoE&#34;&gt;Heads-to-heads comparison of Gemini Pro and GPT-4&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;how to build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone this repo, cd into it&lt;/li&gt; &#xA; &lt;li&gt;duplicate &lt;code&gt;.env.example&lt;/code&gt; and name the copy &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;fill out the &lt;code&gt;VITE_OPENAI_KEY=&lt;/code&gt; value with your OpenAI api key. you must have access to the &lt;code&gt;gpt-4-vision-preview&lt;/code&gt; model &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;you can also try out the Gemini API if you have a key -- fill out &lt;code&gt;VITE_GEMINI_KEY&lt;/code&gt; in the same &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;then, run:&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;the demo will be running at &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;note: the in-browser speech recognition works best in Google Chrome&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; allow input of API keys as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; on the page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; deploy frontend to site i.e. sagittarius.greg.technology via vite+github actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; enable streaming output..!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; make new video with 1) uses of repo in the wild / forks 2) UI improvements 3) streaming output / comparison&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; enable selection of dictation language&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add allcontributors bot&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add dependabot&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>HumanAIGC/OutfitAnyone</title>
    <updated>2023-12-16T01:25:04Z</updated>
    <id>tag:github.com,2023-12-16:/HumanAIGC/OutfitAnyone</id>
    <link href="https://github.com/HumanAIGC/OutfitAnyone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Outfit Anyone: Ultra-high quality virtual try-on for Any Clothing and Any Person&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Outfit Anyone&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:red&#34;&gt; News&lt;/span&gt;&lt;/strong&gt;: Now you can try out OutfitAnyone v0.9 on &lt;a href=&#34;https://modelscope.cn/studios/DAMOXR/OutfitAnyone&#34;&gt;ModelScope 魔搭&lt;/a&gt; ( for Chinese users ) . Enjoy it and have fun!&lt;/p&gt; &#xA;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;&lt;strong&gt;News:&lt;/strong&gt;&lt;/font&gt; The experience demo of OutfitAnyone v0.9 is now available on &lt;a href=&#34;https://huggingface.co/spaces/HumanAIGC/OutfitAnyone&#34;&gt;Hugging Face&lt;/a&gt;. &lt;a href=&#34;https://huggingface.co/spaces/HumanAIGC/OutfitAnyone&#34; style=&#34;padding-left: 0.5rem;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-OutfitAnyone-orange&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To prevent the malicious use of personal photos, we have currently limited our feature to only allow the upload of clothing images. All models displayed are pre-set and generated using our AI model to ensure safety and privacy.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to enjoy OutfitAnyone and share your interesting results with us. If you have any questions or suggestions, don&#39;t hesitate to leave a message in the issues section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;&lt;strong&gt;Note: Please don&#39;t forget to give us a star if you like this project. Thanks!&lt;/strong&gt;&lt;/font&gt; &lt;span&gt;😜&lt;/span&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Outfit Anyone: Ultra-high quality virtual try-on for Any Clothing and Any Person&lt;/p&gt; &#xA;&lt;p&gt;Institute for Intelligent Computing, Alibaba Group&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://humanaigc.github.io/outfit-anyone/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project-Page-Green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/-KmoKYLbN4c&#34;&gt;&lt;img src=&#34;https://badges.aleen42.com/src/youtube.svg?sanitize=true&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OutfitAnyone+AnimateAnyone: &lt;a href=&#34;https://youtu.be/jnNHcLdoxNk&#34;&gt;&lt;img src=&#34;https://badges.aleen42.com/src/youtube.svg?sanitize=true&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HumanAIGC/OutfitAnyone/main/docs/1.gif&#34; alt=&#34;oufit animie&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HumanAIGC/OutfitAnyone/main/docs/2.gif&#34; alt=&#34;oufit animie&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sfter/evm-inscription-mint</title>
    <updated>2023-12-16T01:25:04Z</updated>
    <id>tag:github.com,2023-12-16:/sfter/evm-inscription-mint</id>
    <link href="https://github.com/sfter/evm-inscription-mint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;兼容 evm 的铭文 Mint 工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;兼容EVM链的铭文自动化Mint脚本&lt;/h1&gt; &#xA;&lt;h2&gt;🛠 使用说明&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1: 首先安装 nodejs&lt;/h3&gt; &#xA;&lt;p&gt;先去 Nodejs 官网下载安装自己电脑操作系统对应的版本&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://nodejs.org/en&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后看一下安装的版本，是否安装成功&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node -v&#xA;npm -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你更喜欢使用 yarn 则安装 yarn&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2: 下载脚本源代码&lt;/h3&gt; &#xA;&lt;p&gt;先用 git clone 源代码到本地&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sfter/evm-inscription-mint.git&#xA;&#xA;cd evm-inscription-mint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果是 Windows 电脑没有安装 git，先去下面网站下载安装 git 软件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://gitforwindows.org&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: 重命名当前目录下的 config.js.example 为 config.js 文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp config.js.example config.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 4: 修改当前目录下的 config.js 配置文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const config = {&#xA;    // 你想要打多少张，这里就设置多少，建议单次别超过 50，不然容易不上链&#xA;    repeatCount: 1,&#xA;&#xA;    // 在当前的 gas 基础上增加多少倍&#xA;    increaseGas: 1.2,&#xA;&#xA;    // 你钱包的私钥&#xA;    privateKey: &#34;&#34;,&#xA;&#xA;    // 铭文json数据（替换成你想打的铭文json格式数据）&#xA;    tokenJson: &#39;data:,{&#34;p&#34;:&#34;fair-20&#34;,&#34;op&#34;:&#34;mint&#34;,&#34;tick&#34;:&#34;fair&#34;,&#34;amt&#34;:&#34;1000&#34;}&#39;,&#xA;&#xA;    // RPC结点（兼容 evm 链都行）打哪条链就用哪条链的节点地址&#xA;    // eth =&amp;gt;  https://mainnet.infura.io/v3&#xA;    // arb =&amp;gt; https://arb1.arbitrum.io/rpc&#xA;    // polygon =&amp;gt; https://polygon-rpc.com&#xA;    // op =&amp;gt; https://mainnet.optimism.io&#xA;    // linea =&amp;gt; https://mainnet.infura.io/v3&#xA;    // scroll =&amp;gt; https://rpc.scroll.io&#xA;    // zks =&amp;gt; https://mainnet.era.zksync.io&#xA;    rpcUrl: &#34;https://arb1.arbitrum.io/rpc&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 5: 安装依赖包&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 6: 运行 Mint 脚本程序&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;node index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>