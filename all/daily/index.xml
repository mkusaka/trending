<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-08T01:22:23Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Crimson-Hawk/suyu</title>
    <updated>2024-03-08T01:22:23Z</updated>
    <id>tag:github.com,2024-03-08:/Crimson-Hawk/suyu</id>
    <link href="https://github.com/Crimson-Hawk/suyu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;moved to &lt;a href=&#34;https://gitlab.com/suyu-emu/suyu&#34;&gt;https://gitlab.com/suyu-emu/suyu&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;website: &lt;a href=&#34;https://suyu.dev&#34;&gt;https://suyu.dev&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To prevent microsoft from taking it down&lt;/p&gt; &#xA;&lt;h3&gt;To Nintendo Legal Team: You cannot defeat us, even if you take me down, more would come. If you taken them down as well, still more would come. You have lost this battle. &lt;/h3&gt; &#xA;&lt;h4&gt;This project DOES NOT suppot piracy, you are required to source your own games and keys, we make no money off this project (mainly so that Nintendon&#39;t sue us lol)&lt;/h4&gt; &#xA;&lt;h4&gt;This fork is to make sure Nintendo can&#39;t fuck over Yuzu. Long live emulation!&lt;/h4&gt; &#xA;&lt;p&gt;This repo is created based on Yuzu EA 4176. Please contribute&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu-assets/master/icons/icon.png&#34; alt=&#34;yuzu&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;b&gt;yuzu&lt;/b&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;&lt;b&gt;yuzu&lt;/b&gt; is the world&#39;s most popular, open-source, Nintendo Switch emulator — started by the creators of &lt;a href=&#34;https://citra-emu.org&#34; target=&#34;_blank&#34;&gt;Citra&lt;/a&gt;. &lt;br&gt; It is written in C++ with portability in mind, and we actively maintain builds for Windows, Linux and Android. &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dev.azure.com/yuzu-emu/yuzu/&#34;&gt; &lt;img src=&#34;https://dev.azure.com/yuzu-emu/yuzu/_apis/build/status/yuzu%20mainline?branchName=master&#34; alt=&#34;Azure Mainline CI Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/398318088170242053?color=5865F2&amp;amp;label=yuzu&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#compatibility&#34;&gt;Compatibility&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#development&#34;&gt;Development&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#building&#34;&gt;Building&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#download&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#support&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Crimson-Hawk/suyu/master/#license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The emulator is capable of running most commercial games at full speed, provided you meet the &lt;a href=&#34;https://yuzu-emu.org/help/quickstart/#hardware-requirements&#34;&gt;necessary hardware requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a full list of games yuzu supports, please visit our &lt;a href=&#34;https://yuzu-emu.org/game/&#34;&gt;Compatibility page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;website&lt;/a&gt; for the latest news on exciting features, monthly progress reports, and more!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project is completely free and open source, this project is made possible by many people who share the same interest.&lt;/p&gt; &#xA;&lt;p&gt;Most of the development happens on GitHub. For development discussion, please join us on &lt;a href=&#34;https://discord.gg/2gQRBp44KT&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute, please take a look at the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Contributing&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Developer-Information&#34;&gt;Developer Information&lt;/a&gt;. You can also contact any of the developers on Discord in order to know about the current state of the emulator.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to the user interface translation project, please check out the &lt;a href=&#34;https://www.transifex.com/yuzu-emulator/yuzu&#34;&gt;yuzu project on transifex&lt;/a&gt;. We centralize translation work there, and periodically upstream translations.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Windows&#34;&gt;Windows Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Linux&#34;&gt;Linux Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;This project is completely free and open source, this project is made possible by many people who share the same interest. Please join the discord server to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;yuzu vanced is licensed under the MIT license. Refer to the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/raw/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VAST-AI-Research/TripoSR</title>
    <updated>2024-03-08T01:22:23Z</updated>
    <id>tag:github.com,2024-03-08:/VAST-AI-Research/TripoSR</id>
    <link href="https://github.com/VAST-AI-Research/TripoSR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TripoSR &lt;a href=&#34;https://huggingface.co/stabilityai/TripoSR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Model_Card-Huggingface-orange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/stabilityai/TripoSR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Gradio%20Demo-Huggingface-orange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2403.02151&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Arxiv-2403.02151-B31B1B.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/VAST-AI-Research/TripoSR/main/figures/teaser800.gif&#34; alt=&#34;Teaser Video&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This is the official codebase for &lt;strong&gt;TripoSR&lt;/strong&gt;, a state-of-the-art open-source model for &lt;strong&gt;fast&lt;/strong&gt; feedforward 3D reconstruction from a single image, collaboratively developed by &lt;a href=&#34;https://www.tripo3d.ai/&#34;&gt;Tripo AI&lt;/a&gt; and &lt;a href=&#34;https://stability.ai/&#34;&gt;Stability AI&lt;/a&gt;. &lt;br&gt;&lt;br&gt; Leveraging the principles of the &lt;a href=&#34;https://yiconghong.me/LRM/&#34;&gt;Large Reconstruction Model (LRM)&lt;/a&gt;, TripoSR brings to the table key advancements that significantly boost both the speed and quality of 3D reconstruction. Our model is distinguished by its ability to rapidly process inputs, generating high-quality 3D models in less than 0.5 seconds on an NVIDIA A100 GPU. TripoSR has exhibited superior performance in both qualitative and quantitative evaluations, outperforming other open-source alternatives across multiple public datasets. The figures below illustrate visual comparisons and metrics showcasing TripoSR&#39;s performance relative to other leading models. Details about the model architecture, training process, and comparisons can be found in this &lt;a href=&#34;https://arxiv.org/abs/2403.02151&#34;&gt;technical report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  &lt;img src=&#34;figures/comparison800.gif&#34; alt=&#34;Teaser Video&#34;&gt;&#xA;&lt;/div&gt;&#xA;--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;800&#34; src=&#34;https://raw.githubusercontent.com/VAST-AI-Research/TripoSR/main/figures/visual_comparisons.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;450&#34; src=&#34;https://raw.githubusercontent.com/VAST-AI-Research/TripoSR/main/figures/scatter-comparison.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The model is released under the MIT license, which includes the source code, pretrained models, and an interactive online demo. Our goal is to empower researchers, developers, and creatives to push the boundaries of what&#39;s possible in 3D generative AI and 3D content creation.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.8&lt;/li&gt; &#xA; &lt;li&gt;Install CUDA if available&lt;/li&gt; &#xA; &lt;li&gt;Install PyTorch according to your platform: &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt; &lt;strong&gt;[Please make sure that the locally-installed CUDA major version matches the PyTorch-shipped CUDA major version. For example if you have CUDA 11.x installed, make sure to install PyTorch compiled with CUDA 11.x.]&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update setuptools by &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install other dependencies by &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Manual Inference&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python run.py examples/chair.png --output-dir output/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will save the reconstructed 3D model to &lt;code&gt;output/&lt;/code&gt;. You can also specify more than one image path separated by spaces. The default options takes about &lt;strong&gt;6GB VRAM&lt;/strong&gt; for a single image input.&lt;/p&gt; &#xA;&lt;p&gt;For detailed usage of this script, use &lt;code&gt;python run.py --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Local Gradio App&lt;/h3&gt; &#xA;&lt;p&gt;Install Gradio:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the Gradio App:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python gradio_app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AttributeError: module &#39;torchmcubes_module&#39; has no attribute &#39;mcubes_cuda&#39;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;torchmcubes was not compiled with CUDA support, use CPU version instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is because &lt;code&gt;torchmcubes&lt;/code&gt; is compiled without CUDA support. Please make sure that&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The locally-installed CUDA major version matches the PyTorch-shipped CUDA major version. For example if you have CUDA 11.x installed, make sure to install PyTorch compiled with CUDA 11.x.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;setuptools&amp;gt;=49.6.0&lt;/code&gt;. If not, upgrade by &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then re-install &lt;code&gt;torchmcubes&lt;/code&gt; by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip uninstall torchmcubes&#xA;pip install git+https://github.com/tatsy/torchmcubes.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@article{TripoSR2024,&#xA;  title={TripoSR: Fast 3D Object Reconstruction from a Single Image},&#xA;  author={Tochilkin, Dmitry and Pankratz, David and Liu, Zexiang and Huang, Zixuan and and Letts, Adam and Li, Yangguang and Liang, Ding and Laforte, Christian and Jampani, Varun and Cao, Yan-Pei},&#xA;  journal={arXiv preprint arXiv:2403.02151},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>max32002/tixcraft_bot</title>
    <updated>2024-03-08T01:22:23Z</updated>
    <id>tag:github.com,2024-03-08:/max32002/tixcraft_bot</id>
    <link href="https://github.com/max32002/tixcraft_bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Max搶票機器人(maxbot) help you quickly buy your tickets&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Max搶票機器人&lt;/h1&gt; &#xA;&lt;p&gt;MaxBot是一個免費、開放原始碼的搶票機器人。祝您搶票成功。&lt;/p&gt; &#xA;&lt;p&gt;MaxBot is a FREE and open source bot program. Good luck getting your expected ticket.&lt;/p&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;(搶票程式下載)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/max32002/tixcraft_bot/releases&#34;&gt;https://github.com/max32002/tixcraft_bot/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你是要用原始碼執行MaxBot, 在透過git clone 或在github按下載原始碼的 zip檔，你的python 版本可以使用3.7 / 3.8 / 3.9 / 3.10 這4個版號。&lt;/p&gt; &#xA;&lt;p&gt;如果有辦法的話，建議使用原始碼來執行MaxBot，執行上的效率與相容性的問題會較少，使用方法是先取得原始碼後，開啟 Terminal 視窗來下指令，應該是4行指令就可以了。&lt;/p&gt; &#xA;&lt;p&gt;請參看看文章: 如何用虛擬主機搶拓元的門票，這篇文章是以虛擬主機來示範，在 Windows / macOS / Linux 平台裡的 python 操作方式幾乎相同。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://max-everyday.com/2023/11/buy-ticket-by-vm/#maxbot&#34;&gt;https://max-everyday.com/2023/11/buy-ticket-by-vm/#maxbot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;p&gt;(示範影片)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/max32002/tixcraft_bot/raw/master/demo_video.md&#34;&gt;https://github.com/max32002/tixcraft_bot/blob/master/demo_video.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to Use&lt;/h1&gt; &#xA;&lt;p&gt;(如何使用教學)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;tixcraft / indievox / ticketmaster: &lt;a href=&#34;https://max-everyday.com/2018/03/tixcraft-bot/&#34;&gt;https://max-everyday.com/2018/03/tixcraft-bot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;kktix: &lt;a href=&#34;https://max-everyday.com/2018/12/kktix-bot/&#34;&gt;https://max-everyday.com/2018/12/kktix-bot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FamiTicket: &lt;a href=&#34;https://max-everyday.com/2019/01/maxbot-famiticket/&#34;&gt;https://max-everyday.com/2019/01/maxbot-famiticket/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ibon: &lt;a href=&#34;https://max-everyday.com/2023/01/ibon-bot/&#34;&gt;https://max-everyday.com/2023/01/ibon-bot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cityline: &lt;a href=&#34;https://max-everyday.com/2019/03/cityline-bot/&#34;&gt;https://max-everyday.com/2019/03/cityline-bot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;urbtix: &lt;a href=&#34;https://max-everyday.com/2019/02/urbtix-bot/&#34;&gt;https://max-everyday.com/2019/02/urbtix-bot/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;hkticketing / galaxymacau: &lt;a href=&#34;https://max-everyday.com/2023/01/hkticketing-bot/&#34;&gt;https://max-everyday.com/2023/01/hkticketing-bot/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to Execute Source Code&lt;/h1&gt; &#xA;&lt;p&gt;(透過原始碼的執行方法)&lt;/p&gt; &#xA;&lt;p&gt;透過原始碼執行MaxBot教學影片： &lt;a href=&#34;https://youtu.be/HpVG91j0lbI&#34;&gt;https://youtu.be/HpVG91j0lbI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Step 1: 取得source code:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone &lt;a href=&#34;https://github.com/max32002/tixcraft_bot.git&#34;&gt;https://github.com/max32002/tixcraft_bot.git&lt;/a&gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Step 2: 進入 clone 的資料夾: tixcraft_bot:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cd tixcraft_bot &lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Step 3: 安裝第三方套件:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 -m pip install -r pip-req.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Step 4: 執行設定介面主桯式:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 settings.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果不使用設定介面，直接執行主程式:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 chrome_tixcraft.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果不使用設定介面，直接執行主程式並套用特定的設定檔:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 chrome_tixcraft.py --input settings.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果遇到MaxBot 改版, 請重新操作上面4個步驟一次, 即可取得新的版本.&lt;/p&gt; &#xA;&lt;p&gt;如果MaxBot 沒改版, 第二次要再執行的話, 使用 Step 2 + Step 4, 這2行指令, 就可以執行 MaxBot.&lt;/p&gt; &#xA;&lt;p&gt;如果你是 ARM CPU 應該會在 Step 3 就顯示錯誤訊息, 解法: &lt;a href=&#34;https://github.com/max32002/tixcraft_bot/issues/82#issuecomment-1878986084&#34;&gt;https://github.com/max32002/tixcraft_bot/issues/82#issuecomment-1878986084&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;不管是 macOS 還是 Windows 預設都是沒有 git 這個指令，如果 Step 1 執行後, 沒有檔案被下載, 請先安裝 git 到你的作業系統。或是使用github 網頁裡的 Download 功能把python 腳本下載。&lt;/p&gt; &#xA;&lt;p&gt;如果你選擇下載 github 上的 zip 檔, 在 Step 2 進入目錄的指令可能會遇到問題, 因為「直接解壓縮」後的目錄名稱並不是 tixcraft_bot 而是 tixcraft_bot-master, 你在進入的資料夾名稱, 需要調整為你實際解壓縮後的目錄名稱。&lt;/p&gt; &#xA;&lt;p&gt;透過瀏覽器下載 github 上的 zip 檔, 在 Windows / macOS / Linux 平台, 預設的路徑在「下載」(~/Download) 的資料夾, 你在執行的 Terminal 視窗的路徑, 與你解壓縮的路徑可能不同, 直接執行上面的指令, 會無法進入到預期的資料夾內。&lt;/p&gt; &#xA;&lt;p&gt;PS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;請先確定你的python 執行環境下已安裝 selenium 及相關的套件，請參考 pip-req.txt 檔案內容。&lt;/li&gt; &#xA; &lt;li&gt;透過 python3 執行 settings.py 就可以有 GUI 的設定介面。&lt;/li&gt; &#xA; &lt;li&gt;如果你是使用 macOS 並且執行環境沒有 python3，請 python 官方網站(&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;https://www.python.org/downloads/&lt;/a&gt;)來安裝 python3.&lt;/li&gt; &#xA; &lt;li&gt;如果你是使用 Firefox, ChromeDriver 的元件是叫 geckodriver，下載點在：&lt;a href=&#34;https://github.com/mozilla/geckodriver/releases&#34;&gt;https://github.com/mozilla/geckodriver/releases&lt;/a&gt; ，與 ChromeDriver 的處理方式是一樣，如果是 mac 電腦，要在元件按右鍵開啟，做一次授權的動作，mac 有2個版本，-macos.tar.gz 與 -macos-aarch64.tar.gz ，如果是 intel CPU 的版本，請服用前面沒有 aarch64 的版本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PS：搶票程式可以多開chrome瀏覽器，如果你電腦效能高。&lt;/p&gt; &#xA;&lt;p&gt;PS：「掛機模式」的選項，指人不需要在電腦前，驗證碼會猜到對為止。&lt;/p&gt; &#xA;&lt;p&gt;Q: 是只有使用虛擬主機才要用程式碼執行搶票機器人嗎？&lt;/p&gt; &#xA;&lt;p&gt;A: 除了 Window 有打包的執行檔之外, macOS / Linux 只能使用原始碼來執行, 當然 Windows 也可以用原始碼來執行.&lt;/p&gt; &#xA;&lt;h1&gt;Introduce the Implement&lt;/h1&gt; &#xA;&lt;p&gt;(實作方法)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.max-everyday.com/2018/03/selenium-chrome-webdriver/&#34;&gt;https://stackoverflow.max-everyday.com/2018/03/selenium-chrome-webdriver/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Execute Suggestion&lt;/h1&gt; &#xA;&lt;p&gt;(搶票建議)&lt;/p&gt; &#xA;&lt;p&gt;please run this source code with high performance hardware computer and high speed + stable network.&lt;/p&gt; &#xA;&lt;p&gt;門票的「限量」是很殘酷的，建議不要用破舊的電腦或連線不穩的手機網路來搶票，因為只要比別人慢個 0.1 秒，票可能就沒了。為了要搶到限量的票真心建議去一下網咖或找一個網路連線穩定且快的地方並使用硬體不差的電腦來搶票。&lt;/p&gt; &#xA;&lt;h1&gt;TODO about Cpatcha&lt;/h1&gt; &#xA;&lt;p&gt;(關於驗證碼)&lt;/p&gt; &#xA;&lt;p&gt;目前自動輸入驗證碼用的元件是:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sml2h3/ddddocr&#34;&gt;https://github.com/sml2h3/ddddocr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;附註：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 新的電腦 arm 系列, 暫時沒有提供自動輸入驗證碼功能, 使用上的限制和 ddddocr 相同. 暫時的解法是透過Rosetta來模擬 Intel CPU 環境. 請參考: &lt;a href=&#34;https://github.com/max32002/tixcraft_bot/issues/82&#34;&gt;https://github.com/max32002/tixcraft_bot/issues/82&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS 舊款intel CPU 的電腦裡的 python 版本要降到低於等於 3.9版 或 3.10版, 例如: &lt;a href=&#34;https://www.python.org/downloads/release/python-31011/&#34;&gt;https://www.python.org/downloads/release/python-31011/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;猜測驗證碼時比較容易出錯的是字英 f 和 t，還有 q 和 g, v 和 u 還有 w.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;想自動輸入驗證碼，可以參考看看：實作基於CNN的台鐵訂票驗證碼辨識以及透過模仿及資料增強的訓練集產生器 (Simple captcha solver based on CNN and a training set generator by imitating the style of captcha and data augmentation)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JasonLiTW/simple-railway-captcha-solver&#34;&gt;https://github.com/JasonLiTW/simple-railway-captcha-solver&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Common Problems&lt;/h1&gt; &#xA;&lt;p&gt;(搶票常見問題整理)&lt;/p&gt; &#xA;&lt;p&gt;詳全文：&lt;a href=&#34;https://max-everyday.com/2023/02/common-problem-when-you-buy-ticket/&#34;&gt;https://max-everyday.com/2023/02/common-problem-when-you-buy-ticket/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;整理大家在搶票時常遇到的問題：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用搶票程式有違法嗎？&lt;/li&gt; &#xA; &lt;li&gt;沒講清楚成功後的報酬&lt;/li&gt; &#xA; &lt;li&gt;買到太多票&lt;/li&gt; &#xA; &lt;li&gt;如何處理多的票？&lt;/li&gt; &#xA; &lt;li&gt;使用搶票程式會讓自己的帳號被鎖住嗎？&lt;/li&gt; &#xA; &lt;li&gt;如何恢復拓元的「購票權限」？&lt;/li&gt; &#xA; &lt;li&gt;網頁刷新速度有推薦幾秒刷新一次嗎？&lt;/li&gt; &#xA; &lt;li&gt;拓元的搶票，要多少的網路頻寬才夠？&lt;/li&gt; &#xA; &lt;li&gt;使用VPN/代理伺服器(Proxy)來搶票會有用嗎？&lt;/li&gt; &#xA; &lt;li&gt;同一個IP短時間重試被系統視為惡意程式而封鎖怎麼辦？&lt;/li&gt; &#xA; &lt;li&gt;Firefox和chrome搶票上有差距嗎？我看大家基本上都用chrome 很少用Firefox.&lt;/li&gt; &#xA; &lt;li&gt;為什麼要設計搶票的機制？&lt;/li&gt; &#xA; &lt;li&gt;為什麼網頁會有驗證碼？&lt;/li&gt; &#xA; &lt;li&gt;你的硬體設備該不該升級？&lt;/li&gt; &#xA; &lt;li&gt;想組一台新的電腦，是不是可以給我一些建議呢？&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Extension Privacy&lt;/h1&gt; &#xA;&lt;p&gt;(MaxBot Plus擴充功能隱私權政策)&lt;/p&gt; &#xA;&lt;h2&gt;產品如何收集、使用及分享使用者資料&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;擴充取得會取得特定網頁內容, 並且自動輸入張數。&lt;/li&gt; &#xA; &lt;li&gt;擴充功能會移除特定網頁內容裡已售完的網頁區塊。&lt;/li&gt; &#xA; &lt;li&gt;擴充功能會取得特定網址資訊, 並置換為下一個新的網址。&lt;/li&gt; &#xA; &lt;li&gt;擴充取得會取得特定網頁內容, 判斷為需要重新整理時, 自動刷新頁面。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用者資料的所有分享對象。&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;擴充功能沒有分享使用者資料。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;擴充功能主要功能：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;特定的訂票網頁內容, 並且自動輸入張數。&lt;/li&gt; &#xA; &lt;li&gt;移除特定的訂票網頁內容裡已售完的網頁區塊。&lt;/li&gt; &#xA; &lt;li&gt;特定的訂票網址, 自動置換為下一步的新網址。&lt;/li&gt; &#xA; &lt;li&gt;當訂票網頁內容已經無票或沒有符合的關鍵字時, 自動刷新網頁。&lt;/li&gt; &#xA; &lt;li&gt;特定網頁支援驗證碼功能, 需要同時開啟 MaxBot 主程式。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supporting the Project&lt;/h1&gt; &#xA;&lt;p&gt;(贊助Max)&lt;/p&gt; &#xA;&lt;p&gt;如果這個項目對您有幫助，不妨請作者我喝杯咖啡 ：）&lt;/p&gt; &#xA;&lt;h2&gt;目前支援的贊助方式：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;台灣的ATM匯款: 中國信託 (代碼：822) 帳號：071512949756&lt;/li&gt; &#xA; &lt;li&gt;7-11 ATM的無卡存款&lt;/li&gt; &#xA; &lt;li&gt;街口支付： 901643378&lt;/li&gt; &#xA; &lt;li&gt;悠遊付&lt;/li&gt; &#xA; &lt;li&gt;PayPal： &lt;a href=&#34;mailto:weng.32002@gmail.com&#34;&gt;weng.32002@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支付寶: 13717075071&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;詳細的圖文贊助教學如下： &lt;a href=&#34;https://max-everyday.com/about/#donate&#34;&gt;https://max-everyday.com/about/#donate&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>