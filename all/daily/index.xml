<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-19T01:24:05Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>astral-sh/uv</title>
    <updated>2024-02-19T01:24:05Z</updated>
    <id>tag:github.com,2024-02-19:/astral-sh/uv</id>
    <link href="https://github.com/astral-sh/uv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extremely fast Python package installer and resolver, written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uv&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/astral-sh/uv&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json&#34; alt=&#34;uv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/uv&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/uv.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/uv&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/uv.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/uv&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/uv.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/astral-sh/uv/actions&#34;&gt;&lt;img src=&#34;https://github.com/astral-sh/uv/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/astral-sh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An extremely fast Python package installer and resolver, written in Rust. Designed as a drop-in replacement for &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;pip-compile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;uv is backed by &lt;a href=&#34;https://astral.sh&#34;&gt;Astral&lt;/a&gt;, the creators of &lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&gt;Ruff&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚öñÔ∏è Drop-in replacement for common &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, and &lt;code&gt;virtualenv&lt;/code&gt; commands.&lt;/li&gt; &#xA; &lt;li&gt;‚ö°Ô∏è &lt;a href=&#34;https://github.com/astral-sh/uv/raw/main/BENCHMARKS.md&#34;&gt;10-100x faster&lt;/a&gt; than &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;pip-tools&lt;/code&gt; (&lt;code&gt;pip-compile&lt;/code&gt; and &lt;code&gt;pip-sync&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;üíæ Disk-space efficient, with a global cache for dependency deduplication.&lt;/li&gt; &#xA; &lt;li&gt;üêç Installable via &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pipx&lt;/code&gt;, etc. uv is a static binary that can be installed without Rust or Python.&lt;/li&gt; &#xA; &lt;li&gt;üß™ Tested at-scale against the top 10,000 PyPI packages.&lt;/li&gt; &#xA; &lt;li&gt;üñ•Ô∏è Support for macOS, Linux, and Windows.&lt;/li&gt; &#xA; &lt;li&gt;üß∞ Advanced features such as &lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/uv/main/#dependency-overrides&#34;&gt;dependency version overrides&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/uv/main/#resolution-strategy&#34;&gt;alternative resolution strategies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;‚ÅâÔ∏è Best-in-class error messages with a conflict-tracking resolver.&lt;/li&gt; &#xA; &lt;li&gt;ü§ù Support for a wide range of advanced &lt;code&gt;pip&lt;/code&gt; features, including editable installs, Git dependencies, direct URL dependencies, local dependencies, constraints, source distributions, HTML and JSON indexes, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Install uv with our standalone installers, or from &lt;a href=&#34;https://pypi.org/project/uv/&#34;&gt;PyPI&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# On macOS and Linux.&#xA;curl -LsSf https://astral.sh/uv/install.sh | sh&#xA;&#xA;# On Windows.&#xA;irm https://astral.sh/uv/install.ps1 | iex&#xA;&#xA;# With pip.&#xA;pip install uv&#xA;&#xA;# With pipx.&#xA;pipx install uv&#xA;&#xA;# With Homebrew.&#xA;brew install uv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uv venv  # Create a virtual environment at .venv.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To activate the virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# On macOS and Linux.&#xA;source .venv/bin/activate&#xA;&#xA;# On Windows.&#xA;.\.venv\Scripts\activate.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a package into the virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uv pip install flask                # Install Flask.&#xA;uv pip install -r requirements.txt  # Install from a requirements.txt file.&#xA;uv pip install -e .                 # Install the current project in editable mode.&#xA;uv pip install &#34;package @ .&#34;        # Install the current project from disk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To generate a set of locked dependencies from an input file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uv pip compile pyproject.toml -o requirements.txt   # Read a pyproject.toml file.&#xA;uv pip compile requirements.in -o requirements.txt  # Read a requirements.in file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To sync a set of locked dependencies with the virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uv pip sync requirements.txt  # Install from a requirements.txt file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;uv&#39;s &lt;code&gt;pip-install&lt;/code&gt; and &lt;code&gt;pip-compile&lt;/code&gt; commands support many of the same command-line arguments as existing tools, including &lt;code&gt;-r requirements.txt&lt;/code&gt;, &lt;code&gt;-c constraints.txt&lt;/code&gt;, &lt;code&gt;-e .&lt;/code&gt; (for editable installs), &lt;code&gt;--index-url&lt;/code&gt;, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;uv does not support the entire &lt;code&gt;pip&lt;/code&gt; feature set. Namely, uv does not (and does not plan to) support the following &lt;code&gt;pip&lt;/code&gt; features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.egg&lt;/code&gt; dependencies&lt;/li&gt; &#xA; &lt;li&gt;Editable installs for Git and direct URL dependencies (editable installs &lt;em&gt;are&lt;/em&gt; supported for local dependencies)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the other hand, uv plans to (but does not currently) support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/astral-sh/uv/issues/474&#34;&gt;Hash-checking mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/astral-sh/uv/issues/313&#34;&gt;URL requirements without package names&lt;/a&gt; (e.g., &lt;code&gt;https://...&lt;/code&gt; instead of &lt;code&gt;package @ https://...&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Like &lt;code&gt;pip-compile&lt;/code&gt;, uv generates a platform-specific &lt;code&gt;requirements.txt&lt;/code&gt; file (unlike, e.g., &lt;code&gt;poetry&lt;/code&gt; and &lt;code&gt;pdm&lt;/code&gt;, which generate platform-agnostic &lt;code&gt;poetry.lock&lt;/code&gt; and &lt;code&gt;pdm.lock&lt;/code&gt; files). As such, uv&#39;s &lt;code&gt;requirements.txt&lt;/code&gt; files may not be portable across platforms and Python versions.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;uv is an extremely fast Python package resolver and installer, designed as a drop-in replacement for &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt; (&lt;code&gt;pip-compile&lt;/code&gt; and &lt;code&gt;pip-sync&lt;/code&gt;), and &lt;code&gt;virtualenv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;uv represents an intermediary goal in our pursuit of a &lt;a href=&#34;https://blog.rust-lang.org/2016/05/05/cargo-pillars.html#pillars-of-cargo&#34;&gt;&#34;Cargo for Python&#34;&lt;/a&gt;: a comprehensive project and package manager that is extremely fast, reliable, and easy to use.&lt;/p&gt; &#xA;&lt;p&gt;Think: a single binary that bootstraps your Python installation and gives you everything you need to be productive with Python, bundling not only &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, and &lt;code&gt;virtualenv&lt;/code&gt;, but also &lt;code&gt;pipx&lt;/code&gt;, &lt;code&gt;tox&lt;/code&gt;, &lt;code&gt;poetry&lt;/code&gt;, &lt;code&gt;pyenv&lt;/code&gt;, &lt;code&gt;ruff&lt;/code&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;Our goal is to evolve uv into such a tool.&lt;/p&gt; &#xA;&lt;p&gt;In the meantime, though, the narrower &lt;code&gt;pip-tools&lt;/code&gt; scope allows us to solve the low-level problems involved in building such a tool (like package installation) while shipping something immediately useful with a minimal barrier to adoption.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Python discovery&lt;/h3&gt; &#xA;&lt;p&gt;uv itself does not depend on Python, but it does need to locate a Python environment to (1) install dependencies into the environment and (2) build source distributions.&lt;/p&gt; &#xA;&lt;p&gt;When running &lt;code&gt;pip sync&lt;/code&gt; or &lt;code&gt;pip install&lt;/code&gt;, uv will search for a virtual environment in the following order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An activated virtual environment based on the &lt;code&gt;VIRTUAL_ENV&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;An activated Conda environment based on the &lt;code&gt;CONDA_PREFIX&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;A virtual environment at &lt;code&gt;.venv&lt;/code&gt; in the current directory, or in the nearest parent directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If no virtual environment is found, uv will prompt the user to create one in the current directory via &lt;code&gt;uv venv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running &lt;code&gt;pip compile&lt;/code&gt;, uv does not &lt;em&gt;require&lt;/em&gt; a virtual environment and will search for a Python interpreter in the following order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An activated virtual environment based on the &lt;code&gt;VIRTUAL_ENV&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;An activated Conda environment based on the &lt;code&gt;CONDA_PREFIX&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;A virtual environment at &lt;code&gt;.venv&lt;/code&gt; in the current directory, or in the nearest parent directory.&lt;/li&gt; &#xA; &lt;li&gt;The Python interpreter available as &lt;code&gt;python3&lt;/code&gt; on macOS and Linux, or &lt;code&gt;python.exe&lt;/code&gt; on Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If a &lt;code&gt;--python-version&lt;/code&gt; is provided to &lt;code&gt;pip compile&lt;/code&gt; (e.g., &lt;code&gt;--python-version=3.7&lt;/code&gt;), uv will search for a Python interpreter matching that version in the following order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An activated virtual environment based on the &lt;code&gt;VIRTUAL_ENV&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;An activated Conda environment based on the &lt;code&gt;CONDA_PREFIX&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;A virtual environment at &lt;code&gt;.venv&lt;/code&gt; in the current directory, or in the nearest parent directory.&lt;/li&gt; &#xA; &lt;li&gt;The Python interpreter available as, e.g., &lt;code&gt;python3.7&lt;/code&gt; on macOS and Linux. On Windows, uv will use the same mechanism as &lt;code&gt;py --list-paths&lt;/code&gt; to discover all available Python interpreters, and will select the first interpreter matching the requested version.&lt;/li&gt; &#xA; &lt;li&gt;The Python interpreter available as &lt;code&gt;python3&lt;/code&gt; on macOS and Linux, or &lt;code&gt;python.exe&lt;/code&gt; on Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since uv has no dependency on Python, it can even install into virtual environments other than its own. For example, setting &lt;code&gt;VIRTUAL_ENV=/path/to/venv&lt;/code&gt; will cause uv to install into &lt;code&gt;/path/to/venv&lt;/code&gt;, no matter where uv is installed.&lt;/p&gt; &#xA;&lt;h3&gt;Dependency caching&lt;/h3&gt; &#xA;&lt;p&gt;uv uses aggressive caching to avoid re-downloading (and re-building dependencies) that have already been accessed in prior runs.&lt;/p&gt; &#xA;&lt;p&gt;The specifics of uv&#39;s caching semantics vary based on the nature of the dependency:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For registry dependencies&lt;/strong&gt; (like those downloaded from PyPI), uv respects HTTP caching headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For direct URL dependencies&lt;/strong&gt;, uv respects HTTP caching headers, and also caches based on the URL itself.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Git dependencies&lt;/strong&gt;, uv caches based on the fully-resolved Git commit hash. As such, &lt;code&gt;uv pip compile&lt;/code&gt; will pin Git dependencies to a specific commit hash when writing the resolved dependency set.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For local dependencies&lt;/strong&gt;, uv caches based on the last-modified time of the &lt;code&gt;setup.py&lt;/code&gt; or &lt;code&gt;pyproject.toml&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re running into caching issues, uv includes a few escape hatches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To force uv to revalidate cached data for all dependencies, run &lt;code&gt;uv pip install --refresh ...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To force uv to revalidate cached data for a specific dependency, run, e.g., &lt;code&gt;uv pip install --refresh-package flask ...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To force uv to ignore existing installed versions, run &lt;code&gt;uv pip install --reinstall ...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To clear the global cache entirely, run &lt;code&gt;uv clean&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Resolution strategy&lt;/h3&gt; &#xA;&lt;p&gt;By default, uv follows the standard Python dependency resolution strategy of preferring the latest compatible version of each package. For example, &lt;code&gt;uv pip install flask&amp;gt;=2.0.0&lt;/code&gt; will install the latest version of Flask (at time of writing: &lt;code&gt;3.0.0&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;However, uv&#39;s resolution strategy can be configured to prefer the &lt;em&gt;lowest&lt;/em&gt; compatible version of each package (&lt;code&gt;--resolution=lowest&lt;/code&gt;), or even the lowest compatible version of any &lt;em&gt;direct&lt;/em&gt; dependencies (&lt;code&gt;--resolution=lowest-direct&lt;/code&gt;), both of which can be useful for library authors looking to test their packages against the oldest supported versions of their dependencies.&lt;/p&gt; &#xA;&lt;p&gt;For example, given the following &lt;code&gt;requirements.in&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;flask&amp;gt;=2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;uv pip compile requirements.in&lt;/code&gt; would produce the following &lt;code&gt;requirements.txt&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# This file was autogenerated by uv v0.0.1 via the following command:&#xA;#    uv pip compile requirements.in&#xA;blinker==1.7.0&#xA;    # via flask&#xA;click==8.1.7&#xA;    # via flask&#xA;flask==3.0.0&#xA;itsdangerous==2.1.2&#xA;    # via flask&#xA;jinja2==3.1.2&#xA;    # via flask&#xA;markupsafe==2.1.3&#xA;    # via&#xA;    #   jinja2&#xA;    #   werkzeug&#xA;werkzeug==3.0.1&#xA;    # via flask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, &lt;code&gt;uv pip compile --resolution=lowest requirements.in&lt;/code&gt; would instead produce:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# This file was autogenerated by uv v0.0.1 via the following command:&#xA;#    uv pip compile requirements.in --resolution=lowest&#xA;click==7.1.2&#xA;    # via flask&#xA;flask==2.0.0&#xA;itsdangerous==2.0.0&#xA;    # via flask&#xA;jinja2==3.0.0&#xA;    # via flask&#xA;markupsafe==2.0.0&#xA;    # via jinja2&#xA;werkzeug==2.0.0&#xA;    # via flask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-release handling&lt;/h3&gt; &#xA;&lt;p&gt;By default, uv will accept pre-release versions during dependency resolution in two cases:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If the package is a direct dependency, and its version markers include a pre-release specifier (e.g., &lt;code&gt;flask&amp;gt;=2.0.0rc1&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;If &lt;em&gt;all&lt;/em&gt; published versions of a package are pre-releases.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If dependency resolution fails due to a transitive pre-release, uv will prompt the user to re-run with &lt;code&gt;--prerelease=allow&lt;/code&gt;, to allow pre-releases for all dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can add the transitive dependency to your &lt;code&gt;requirements.in&lt;/code&gt; file with pre-release specifier (e.g., &lt;code&gt;flask&amp;gt;=2.0.0rc1&lt;/code&gt;) to opt in to pre-release support for that specific dependency.&lt;/p&gt; &#xA;&lt;p&gt;Pre-releases are &lt;a href=&#34;https://pubgrub-rs-guide.netlify.app/limitations/prerelease_versions&#34;&gt;notoriously difficult&lt;/a&gt; to model, and are a frequent source of bugs in other packaging tools. uv&#39;s pre-release handling is &lt;em&gt;intentionally&lt;/em&gt; limited and &lt;em&gt;intentionally&lt;/em&gt; requires user intervention to opt in to pre-releases to ensure correctness, though pre-release handling will be revisited in future releases.&lt;/p&gt; &#xA;&lt;h3&gt;Dependency overrides&lt;/h3&gt; &#xA;&lt;p&gt;Historically, &lt;code&gt;pip&lt;/code&gt; has supported &#34;constraints&#34; (&lt;code&gt;-c constraints.txt&lt;/code&gt;), which allows users to narrow the set of acceptable versions for a given package.&lt;/p&gt; &#xA;&lt;p&gt;uv supports constraints, but also takes this concept further by allowing users to &lt;em&gt;override&lt;/em&gt; the acceptable versions of a package across the dependency tree via overrides (&lt;code&gt;--override overrides.txt&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;In short, overrides allow the user to lie to the resolver by overriding the declared dependencies of a package. Overrides are a useful last resort for cases in which the user knows that a dependency is compatible with a newer version of a package than the package declares, but the package has not yet been updated to declare that compatibility.&lt;/p&gt; &#xA;&lt;p&gt;For example, if a transitive dependency declares &lt;code&gt;pydantic&amp;gt;=1.0,&amp;lt;2.0&lt;/code&gt;, but the user knows that the package is compatible with &lt;code&gt;pydantic&amp;gt;=2.0&lt;/code&gt;, the user can override the declared dependency with &lt;code&gt;pydantic&amp;gt;=2.0,&amp;lt;3&lt;/code&gt; to allow the resolver to continue.&lt;/p&gt; &#xA;&lt;p&gt;While constraints are purely &lt;em&gt;additive&lt;/em&gt;, and thus cannot &lt;em&gt;expand&lt;/em&gt; the set of acceptable versions for a package, overrides &lt;em&gt;can&lt;/em&gt; expand the set of acceptable versions for a package, providing an escape hatch for erroneous upper version bounds.&lt;/p&gt; &#xA;&lt;h3&gt;Multi-version resolution&lt;/h3&gt; &#xA;&lt;p&gt;uv&#39;s &lt;code&gt;pip-compile&lt;/code&gt; command produces a resolution that&#39;s known to be compatible with the current platform and Python version. Unlike Poetry, PDM, and other package managers, uv does not yet produce a machine-agnostic lockfile.&lt;/p&gt; &#xA;&lt;p&gt;However, uv &lt;em&gt;does&lt;/em&gt; support resolving for alternate Python versions via the &lt;code&gt;--python-version&lt;/code&gt; command line argument. For example, if you&#39;re running uv on Python 3.9, but want to resolve for Python 3.8, you can run &lt;code&gt;uv pip compile --python-version=3.8 requirements.in&lt;/code&gt; to produce a Python 3.8-compatible resolution.&lt;/p&gt; &#xA;&lt;h2&gt;Platform support&lt;/h2&gt; &#xA;&lt;p&gt;uv has Tier 1 support for the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS (Apple Silicon)&lt;/li&gt; &#xA; &lt;li&gt;macOS (x86_64)&lt;/li&gt; &#xA; &lt;li&gt;Linux (x86_64)&lt;/li&gt; &#xA; &lt;li&gt;Windows (x86_64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;uv is continuously built, tested, and developed against its Tier 1 platforms. Inspired by the Rust project, Tier 1 can be thought of as &lt;a href=&#34;https://doc.rust-lang.org/beta/rustc/platform-support.html&#34;&gt;&#34;guaranteed to work&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;uv has Tier 2 support (&lt;a href=&#34;https://doc.rust-lang.org/beta/rustc/platform-support.html&#34;&gt;&#34;guaranteed to build&#34;&lt;/a&gt;) for the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (PPC64)&lt;/li&gt; &#xA; &lt;li&gt;Linux (PPC64LE)&lt;/li&gt; &#xA; &lt;li&gt;Linux (aarch64)&lt;/li&gt; &#xA; &lt;li&gt;Linux (armv7)&lt;/li&gt; &#xA; &lt;li&gt;Linux (i686)&lt;/li&gt; &#xA; &lt;li&gt;Linux (s390x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;uv ships pre-built wheels to &lt;a href=&#34;https://pypi.org/project/uv/&#34;&gt;PyPI&lt;/a&gt; for its Tier 1 and Tier 2 platforms. However, while Tier 2 platforms are continuously built, they are not continuously tested or developed against, and so stability may vary in practice.&lt;/p&gt; &#xA;&lt;p&gt;Beyond the Tier 1 and Tier 2 platforms, uv is known to build on i686 Windows, and known &lt;em&gt;not&lt;/em&gt; to build on aarch64 Windows, but does not consider either platform to be supported at this time.&lt;/p&gt; &#xA;&lt;p&gt;uv supports and is tested against Python 3.8, 3.9, 3.10, 3.11, and 3.12.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;uv&#39;s dependency resolver uses &lt;a href=&#34;https://github.com/pubgrub-rs/pubgrub&#34;&gt;PubGrub&lt;/a&gt; under the hood. We&#39;re grateful to the PubGrub maintainers, especially &lt;a href=&#34;https://github.com/Eh2406&#34;&gt;Jacob Finkelman&lt;/a&gt;, for their support.&lt;/p&gt; &#xA;&lt;p&gt;uv&#39;s Git implementation is based on &lt;a href=&#34;https://github.com/rust-lang/cargo&#34;&gt;Cargo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some of uv&#39;s optimizations are inspired by the great work we&#39;ve seen in &lt;a href=&#34;https://pnpm.io/&#34;&gt;pnpm&lt;/a&gt;, &lt;a href=&#34;https://github.com/orogene/orogene&#34;&gt;Orogene&lt;/a&gt;, and &lt;a href=&#34;https://github.com/oven-sh/bun&#34;&gt;Bun&lt;/a&gt;. We&#39;ve also learned a lot from Nathaniel J. Smith&#39;s &lt;a href=&#34;https://github.com/njsmith/posy&#34;&gt;Posy&lt;/a&gt; and adapted its &lt;a href=&#34;https://github.com/njsmith/posy/tree/main/src/trampolines/windows-trampolines/posy-trampoline&#34;&gt;trampoline&lt;/a&gt; for Windows support.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;uv is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in uv by you, as defined in the Apache-2.0 license, shall be dually licensed as above, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a target=&#34;_blank&#34; href=&#34;https://astral.sh&#34; style=&#34;background:none&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/astral-sh/uv/main/assets/svg/Astral.svg?sanitize=true&#34; alt=&#34;Made by Astral&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>dair-ai/ML-YouTube-Courses</title>
    <updated>2024-02-19T01:24:05Z</updated>
    <id>tag:github.com,2024-02-19:/dair-ai/ML-YouTube-Courses</id>
    <link href="https://github.com/dair-ai/ML-YouTube-Courses" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì∫ Discover the latest machine learning / AI courses on YouTube.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì∫ ML YouTube Courses&lt;/h1&gt; &#xA;&lt;p&gt;At DAIR.AI we ‚ù§Ô∏è open AI education. In this repo, we index and organize some of the best and most recent machine learning courses available on YouTube.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#caltech-cs156-learning-from-data&#34;&gt;Caltech CS156: Learning from Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-cs229-machine-learning&#34;&gt;Stanford CS229: Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#making-friends-with-machine-learning&#34;&gt;Making Friends with Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#applied-machine-learning&#34;&gt;Applied Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#introduction-to-machine-learning-T%C3%BCbingen&#34;&gt;Introduction to Machine Learning (T√ºbingen)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#machine-learning-lecture-stefan-harmeling&#34;&gt;Machine Learning Lecture (Stefan Harmeling)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#statistical-machine-learning-T%C3%BCbingen&#34;&gt;Statistical Machine Learning (T√ºbingen)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#probabilistic-machine-learning&#34;&gt;Probabilistic Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#mit-6s897-machine-learning-for-healthcare-2019&#34;&gt;MIT 6.S897: Machine Learning for Healthcare (2019)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deep Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#neural-networks-zero-to-hero-by-andrej-karpathy&#34;&gt;Neural Networks: Zero to Hero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#mit-deep-learning-for-art-aesthetics-and-creativity&#34;&gt;MIT: Deep Learning for Art, Aesthetics, and Creativity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-cs230-deep-learning-2018&#34;&gt;Stanford CS230: Deep Learning (2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#introduction-to-deep-learning&#34;&gt;Introduction to Deep Learning (MIT)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cmu-introduction-to-deep-learning-11-785&#34;&gt;CMU Introduction to Deep Learning (11-785)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-learning-cs-182&#34;&gt;Deep Learning: CS 182&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-unsupervised-learning&#34;&gt;Deep Unsupervised Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#nyu-deep-learning-sp21&#34;&gt;NYU Deep Learning SP21&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#foundation-models&#34;&gt;Foundation Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-learning-T%C3%BCbingen&#34;&gt;Deep Learning (T√ºbingen)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Scientific Machine Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#parallel-computing-and-scientific-machine-learning&#34;&gt;Parallel Computing and Scientific Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Practical Machine Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#llmops-building-real-world-applications-with-large-language-models&#34;&gt;LLMOps: Building Real-World Applications With Large Language Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#evaluating-and-debugging-generative-ai&#34;&gt;Evaluating and Debugging Generative AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#chatgpt-prompt-engineering-for-developers&#34;&gt;ChatGPT Prompt Engineering for Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#langchain-for-llm-application-development&#34;&gt;LangChain for LLM Application Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#langchain-chat-with-your-data&#34;&gt;LangChain: Chat with Your Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#building-systems-with-the-chatgpt-api&#34;&gt;Building Systems with the ChatGPT API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#langchain--vector-databases-in-production&#34;&gt;LangChain &amp;amp; Vector Databases in Production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#building-llm-powered-apps&#34;&gt;Building LLM-Powered Apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#full-stack-llm-bootcamp&#34;&gt;Full Stack LLM Bootcamp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#full-stack-deep-learning&#34;&gt;Full Stack Deep Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#practical-deep-learning-for-coders&#34;&gt;Practical Deep Learning for Coders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-mlsys-seminars&#34;&gt;Stanford MLSys Seminars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#machine-learning-engineering-for-production-mlops&#34;&gt;Machine Learning Engineering for Production (MLOps)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#mit-introduction-to-data-centric-ai&#34;&gt;MIT Introduction to Data-Centric AI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Natural Language Processing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#xcs224u-natural-language-understanding-2023&#34;&gt;XCS224U: Natural Language Understanding (2023)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-cs25---transformers-united&#34;&gt;Stanford CS25 - Transformers United&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#nlp-course-hugging-face&#34;&gt;NLP Course (Hugging Face)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cs224n-natural-language-processing-with-deep-learning&#34;&gt;CS224N: Natural Language Processing with Deep Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cmu-neural-networks-for-nlp&#34;&gt;CMU Neural Networks for NLP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cs224u-natural-language-understanding&#34;&gt;CS224U: Natural Language Understanding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cmu-advanced-nlp&#34;&gt;CMU Advanced NLP 2021/2022/2024&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#multilingual-nlp&#34;&gt;Multilingual NLP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#advanced-nlp&#34;&gt;Advanced NLP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Computer Vision&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#cs231n-convolutional-neural-networks-for-visual-recognition&#34;&gt;CS231N: Convolutional Neural Networks for Visual Recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-learning-for-computer-vision&#34;&gt;Deep Learning for Computer Vision&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-learning-for-computer-vision-dl4cv&#34;&gt;Deep Learning for Computer Vision (DL4CV)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-learning-for-computer-vision-neuralearnai&#34;&gt;Deep Learning for Computer Vision (neuralearn.ai)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Reinforcement Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#deep-reinforcement-learning&#34;&gt;Deep Reinforcement Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#reinforcement-learning-lecture-series-deepmind&#34;&gt;Reinforcement Learning Lecture Series (DeepMind)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#reinforcement-learning-polytechnique-montreal-fall-2021&#34;&gt;Reinforcement Learning (Polytechnique Montreal, Fall 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#foundations-of-deep-rl&#34;&gt;Foundations of Deep RL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-cs234-reinforcement-learning&#34;&gt;Stanford CS234: Reinforcement Learning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Graph Machine Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#machine-learning-with-graphs-stanford&#34;&gt;Machine Learning with Graphs (Stanford)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#ammi-geometric-deep-learning-course&#34;&gt;AMMI Geometric Deep Learning Course&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multi-Task Learning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#stanford-cs330-deep-multi-task-and-meta-learning&#34;&gt;Multi-Task and Meta-Learning (Stanford)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#mit-deep-learning-in-life-sciences&#34;&gt;MIT Deep Learning in Life Sciences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#self-driving-cars-T%C3%BCbingen&#34;&gt;Self-Driving Cars (T√ºbingen)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dair-ai/ML-YouTube-Courses/main/#advanced-robotics-uc-berkeley&#34;&gt;Advanced Robotics (Berkeley)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Caltech CS156: Learning from Data&lt;/h2&gt; &#xA;&lt;p&gt;An introductory course in machine learning that covers the basic theory, algorithms, and applications.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture 1: The Learning Problem&lt;/li&gt; &#xA; &lt;li&gt;Lecture 2: Is Learning Feasible?&lt;/li&gt; &#xA; &lt;li&gt;Lecture 3: The Linear Model I&lt;/li&gt; &#xA; &lt;li&gt;Lecture 4: Error and Noise&lt;/li&gt; &#xA; &lt;li&gt;Lecture 5: Training versus Testing&lt;/li&gt; &#xA; &lt;li&gt;Lecture 6: Theory of Generalization&lt;/li&gt; &#xA; &lt;li&gt;Lecture 7: The VC Dimension&lt;/li&gt; &#xA; &lt;li&gt;Lecture 8: Bias-Variance Tradeoff&lt;/li&gt; &#xA; &lt;li&gt;Lecture 9: The Linear Model II&lt;/li&gt; &#xA; &lt;li&gt;Lecture 10: Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Lecture 11: Overfitting&lt;/li&gt; &#xA; &lt;li&gt;Lecture 12: Regularization&lt;/li&gt; &#xA; &lt;li&gt;Lecture 13: Validation&lt;/li&gt; &#xA; &lt;li&gt;Lecture 14: Support Vector Machines&lt;/li&gt; &#xA; &lt;li&gt;Lecture 15: Kernel Methods&lt;/li&gt; &#xA; &lt;li&gt;Lecture 16: Radial Basis Functions&lt;/li&gt; &#xA; &lt;li&gt;Lecture 17: Three Learning Principles&lt;/li&gt; &#xA; &lt;li&gt;Lecture 18: Epilogue&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLD63A284B7615313A&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford CS229: Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the basics of ML:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linear Regression and Gradient Descent&lt;/li&gt; &#xA; &lt;li&gt;Logistic Regression&lt;/li&gt; &#xA; &lt;li&gt;Naive Bayes&lt;/li&gt; &#xA; &lt;li&gt;SVMs&lt;/li&gt; &#xA; &lt;li&gt;Kernels&lt;/li&gt; &#xA; &lt;li&gt;Decision Trees&lt;/li&gt; &#xA; &lt;li&gt;Introduction to Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Debugging ML Models ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Making Friends with Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;A series of mini lectures covering various introductory topics in ML:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explainability in AI&lt;/li&gt; &#xA; &lt;li&gt;Classification vs. Regression&lt;/li&gt; &#xA; &lt;li&gt;Precession vs. Recall&lt;/li&gt; &#xA; &lt;li&gt;Statistical Significance&lt;/li&gt; &#xA; &lt;li&gt;Clustering and K-means&lt;/li&gt; &#xA; &lt;li&gt;Ensemble models ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLRKtJ4IpxJpDxl0NTvNYQWKCYzHNuy2xG&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Neural Networks: Zero to Hero (by Andrej Karpathy)&lt;/h2&gt; &#xA;&lt;p&gt;Course providing an in-depth overview of neural networks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backpropagation&lt;/li&gt; &#xA; &lt;li&gt;Spelled-out intro to Language Modeling&lt;/li&gt; &#xA; &lt;li&gt;Activation and Gradients&lt;/li&gt; &#xA; &lt;li&gt;Becoming a Backprop Ninja&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MIT: Deep Learning for Art, Aesthetics, and Creativity&lt;/h2&gt; &#xA;&lt;p&gt;Covers the application of deep learning for art, aesthetics, and creativity.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nostalgia -&amp;gt; Art -&amp;gt; Creativity -&amp;gt; Evolution as Data + Direction&lt;/li&gt; &#xA; &lt;li&gt;Efficient GANs&lt;/li&gt; &#xA; &lt;li&gt;Explorations in AI for Creativity&lt;/li&gt; &#xA; &lt;li&gt;Neural Abstractions&lt;/li&gt; &#xA; &lt;li&gt;Easy 3D Content Creation with Consistent Neural Fields ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLCpMvp7ftsnIbNwRnQJbDNRqO6qiN3EyH&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford CS230: Deep Learning (2018)&lt;/h2&gt; &#xA;&lt;p&gt;Covers the foundations of deep learning, how to build different neural networks(CNNs, RNNs, LSTMs, etc...), how to lead machine learning projects, and career advice for deep learning practitioners.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deep Learning Intuition&lt;/li&gt; &#xA; &lt;li&gt;Adversarial examples - GANs&lt;/li&gt; &#xA; &lt;li&gt;Full-cycle of a Deep Learning Project&lt;/li&gt; &#xA; &lt;li&gt;AI and Healthcare&lt;/li&gt; &#xA; &lt;li&gt;Deep Learning Strategy&lt;/li&gt; &#xA; &lt;li&gt;Interpretability of Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Career Advice and Reading Research Papers&lt;/li&gt; &#xA; &lt;li&gt;Deep Reinforcement Learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://youtube.com/playlist?list=PLoROMvodv4rOABXSygHTsbvUz4G_YQhOb&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://cs230.stanford.edu/syllabus/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Applied Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the most widely used techniques in ML:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimization and Calculus&lt;/li&gt; &#xA; &lt;li&gt;Overfitting and Underfitting&lt;/li&gt; &#xA; &lt;li&gt;Regularization&lt;/li&gt; &#xA; &lt;li&gt;Monte Carlo Estimation&lt;/li&gt; &#xA; &lt;li&gt;Maximum Likelihood Learning&lt;/li&gt; &#xA; &lt;li&gt;Nearest Neighbours&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL2UML_KCiC0UlY7iCQDSiGDMovaupqc83&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to Machine Learning (T√ºbingen)&lt;/h2&gt; &#xA;&lt;p&gt;The course serves as a basic introduction to machine learning and covers key concepts in regression, classification, optimization, regularization, clustering, and dimensionality reduction.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linear regression&lt;/li&gt; &#xA; &lt;li&gt;Logistic regression&lt;/li&gt; &#xA; &lt;li&gt;Regularization&lt;/li&gt; &#xA; &lt;li&gt;Boosting&lt;/li&gt; &#xA; &lt;li&gt;Neural networks&lt;/li&gt; &#xA; &lt;li&gt;PCA&lt;/li&gt; &#xA; &lt;li&gt;Clustering&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL05umP7R6ij35ShKLDqccJSDntugY4FQT&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Machine Learning Lecture (Stefan Harmeling)&lt;/h2&gt; &#xA;&lt;p&gt;Covers many fundamental ML concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bayes rule&lt;/li&gt; &#xA; &lt;li&gt;From logic to probabilities&lt;/li&gt; &#xA; &lt;li&gt;Distributions&lt;/li&gt; &#xA; &lt;li&gt;Matrix Differential Calculus&lt;/li&gt; &#xA; &lt;li&gt;PCA&lt;/li&gt; &#xA; &lt;li&gt;K-means and EM&lt;/li&gt; &#xA; &lt;li&gt;Causality&lt;/li&gt; &#xA; &lt;li&gt;Gaussian Processes&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLzrCXlf6ypbxS5OYOY3EN_0u2fDuIT6Gt&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Statistical Machine Learning (T√ºbingen)&lt;/h2&gt; &#xA;&lt;p&gt;The course covers the standard paradigms and algorithms in statistical machine learning.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;KNN&lt;/li&gt; &#xA; &lt;li&gt;Bayesian decision theory&lt;/li&gt; &#xA; &lt;li&gt;Convex optimization&lt;/li&gt; &#xA; &lt;li&gt;Linear and ridge regression&lt;/li&gt; &#xA; &lt;li&gt;Logistic regression&lt;/li&gt; &#xA; &lt;li&gt;SVM&lt;/li&gt; &#xA; &lt;li&gt;Random Forests&lt;/li&gt; &#xA; &lt;li&gt;Boosting&lt;/li&gt; &#xA; &lt;li&gt;PCA&lt;/li&gt; &#xA; &lt;li&gt;Clustering&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL05umP7R6ij2XCvrRzLokX6EoHWaGA2cC&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Practical Deep Learning for Coders&lt;/h2&gt; &#xA;&lt;p&gt;This course covers topics such as how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and train deep learning models for computer vision, natural language processing, tabular analysis, and collaborative filtering problems&lt;/li&gt; &#xA; &lt;li&gt;Create random forests and regression models&lt;/li&gt; &#xA; &lt;li&gt;Deploy models&lt;/li&gt; &#xA; &lt;li&gt;Use PyTorch, the world‚Äôs fastest growing deep learning software, plus popular libraries like fastai and Hugging Face&lt;/li&gt; &#xA; &lt;li&gt;Foundations and Deep Dive to Diffusion Models&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLfYUBJiXbdtSvpQjSnJJ_PmDQB_VyT5iU&#34;&gt;Link to Course - Part 1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/watch?v=_7rMfsA24Ls&amp;amp;ab_channel=JeremyHoward&#34;&gt;Link to Course - Part 2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford MLSys Seminars&lt;/h2&gt; &#xA;&lt;p&gt;A seminar series on all sorts of topics related to building machine learning systems.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLSrTvUm384I9PV10koj_cqit9OfbJXEkq&#34;&gt;Link to Lectures&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Machine Learning Engineering for Production (MLOps)&lt;/h2&gt; &#xA;&lt;p&gt;Specialization course on MLOPs by Andrew Ng.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLkDaE6sCZn6GMoA0wbpJLi3t34Gd8l0aK&#34;&gt;Link to Lectures&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MIT Introduction to Data-Centric AI&lt;/h2&gt; &#xA;&lt;p&gt;Covers the emerging science of Data-Centric AI (DCAI) that studies techniques to improve datasets, which is often the best way to improve performance in practical ML applications. Topics include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data-Centric AI vs. Model-Centric AI&lt;/li&gt; &#xA; &lt;li&gt;Label Errors&lt;/li&gt; &#xA; &lt;li&gt;Dataset Creation and Curation&lt;/li&gt; &#xA; &lt;li&gt;Data-centric Evaluation of ML Models&lt;/li&gt; &#xA; &lt;li&gt;Class Imbalance, Outliers, and Distribution Shift&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://dcai.csail.mit.edu/&#34;&gt;Course Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/watch?v=ayzOzZGHZy4&amp;amp;list=PLnSYPjg2dHQKdig0vVbN-ZnEU0yNJ1mo5&#34;&gt;Lecture Videos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://github.com/dcai-course/dcai-lab&#34;&gt;Lab Assignments&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Machine Learning with Graphs (Stanford)&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the latest graph techniques in machine learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PageRank&lt;/li&gt; &#xA; &lt;li&gt;Matrix Factorizing&lt;/li&gt; &#xA; &lt;li&gt;Node Embeddings&lt;/li&gt; &#xA; &lt;li&gt;Graph Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Knowledge Graphs&lt;/li&gt; &#xA; &lt;li&gt;Deep Generative Models for Graphs&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rPLKxIpqhjhPgdQy7imNkDn&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Probabilistic Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn the probabilistic paradigm of ML:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reasoning about uncertainty&lt;/li&gt; &#xA; &lt;li&gt;Continuous Variables&lt;/li&gt; &#xA; &lt;li&gt;Sampling&lt;/li&gt; &#xA; &lt;li&gt;Markov Chain Monte Carlo&lt;/li&gt; &#xA; &lt;li&gt;Gaussian Distributions&lt;/li&gt; &#xA; &lt;li&gt;Graphical Models&lt;/li&gt; &#xA; &lt;li&gt;Tuning Inference Algorithms&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL05umP7R6ij2YE8rRJSb-olDNbntAQ_Bx&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MIT 6.S897: Machine Learning for Healthcare (2019)&lt;/h2&gt; &#xA;&lt;p&gt;This course introduces students to machine learning in healthcare, including the nature of clinical data and the use of machine learning for risk stratification, disease progression modeling, precision medicine, diagnosis, subtype discovery, and improving clinical workflows.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLUl4u3cNGP60B0PQXVQyGNdCyCTDU1Q5j&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to Deep Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the fundamentals of deep learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to Deep Learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CMU Introduction to Deep Learning (11-785)&lt;/h2&gt; &#xA;&lt;p&gt;The course starts off gradually from MLPs (Multi Layer Perceptrons) and then progresses into concepts like attention and sequence-to-sequence models.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://deeplearning.cs.cmu.edu/F22/index.html&#34;&gt;Link to Course&lt;/a&gt; &lt;br&gt; üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLp-0K3kfddPxRmjgjm0P1WT6H-gTqE8j9&#34;&gt;Lectures&lt;/a&gt; &lt;br&gt; üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLp-0K3kfddPz8WXg8RqH0sEN6X2L65HUZ&#34;&gt;Tutorials/Recitations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Learning: CS 182&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the widely used techniques in deep learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Machine Learning Basics&lt;/li&gt; &#xA; &lt;li&gt;Error Analysis&lt;/li&gt; &#xA; &lt;li&gt;Optimization&lt;/li&gt; &#xA; &lt;li&gt;Backpropagation&lt;/li&gt; &#xA; &lt;li&gt;Initialization&lt;/li&gt; &#xA; &lt;li&gt;Batch Normalization&lt;/li&gt; &#xA; &lt;li&gt;Style transfer&lt;/li&gt; &#xA; &lt;li&gt;Imitation Learning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL_iWQOsE6TfVmKkQHucjPAoRtIJYt8a5A&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Unsupervised Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest and most widely used techniques in deep unsupervised learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autoregressive Models&lt;/li&gt; &#xA; &lt;li&gt;Flow Models&lt;/li&gt; &#xA; &lt;li&gt;Latent Variable Models&lt;/li&gt; &#xA; &lt;li&gt;Self-supervised learning&lt;/li&gt; &#xA; &lt;li&gt;Implicit Models&lt;/li&gt; &#xA; &lt;li&gt;Compression&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLwRJQ4m4UJjPiJP3691u-qWwPGVKzSlNP&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;NYU Deep Learning SP21&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the advanced techniques in deep learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neural Nets: rotation and squashing&lt;/li&gt; &#xA; &lt;li&gt;Latent Variable Energy Based Models&lt;/li&gt; &#xA; &lt;li&gt;Unsupervised Learning&lt;/li&gt; &#xA; &lt;li&gt;Generative Adversarial Networks&lt;/li&gt; &#xA; &lt;li&gt;Autoencoders&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLLHTzKZzVU9e6xUfG10TkTWApKSZCzuBI&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Foundation Models&lt;/h2&gt; &#xA;&lt;p&gt;To learn about foundation models like GPT-3, CLIP, Flamingo, Codex, and DINO.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL9t0xVFP90GD8hox0KipBkJcLX_C3ja67&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Learning (T√ºbingen)&lt;/h2&gt; &#xA;&lt;p&gt;This course introduces the practical and theoretical principles of deep neural networks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Computation graphs&lt;/li&gt; &#xA; &lt;li&gt;Activation functions and loss functions&lt;/li&gt; &#xA; &lt;li&gt;Training, regularization and data augmentation&lt;/li&gt; &#xA; &lt;li&gt;Basic and state-of-the-art deep neural network architectures including convolutional networks and graph neural networks&lt;/li&gt; &#xA; &lt;li&gt;Deep generative models such as auto-encoders, variational auto-encoders and generative adversarial networks&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL05umP7R6ij3NTWIdtMbfvX7Z-4WEXRqD&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Parallel Computing and Scientific Machine Learning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Basics of Scientific Simulators&lt;/li&gt; &#xA; &lt;li&gt;Introduction to Parallel Computing&lt;/li&gt; &#xA; &lt;li&gt;Continuous Dynamics&lt;/li&gt; &#xA; &lt;li&gt;Inverse Problems and Differentiable Programming&lt;/li&gt; &#xA; &lt;li&gt;Distributed Parallel Computing&lt;/li&gt; &#xA; &lt;li&gt;Physics-Informed Neural Networks and Neural Differential Equations&lt;/li&gt; &#xA; &lt;li&gt;Probabilistic Programming, AKA Bayesian Estimation on Programs&lt;/li&gt; &#xA; &lt;li&gt;Globalizing the Understanding of Models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLCAl7tjCwWyGjdzOOnlbGnVNZk0kB8VSa&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;XCS224U: Natural Language Understanding (2023)&lt;/h2&gt; &#xA;&lt;p&gt;This course covers topics such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contextual Word Representations&lt;/li&gt; &#xA; &lt;li&gt;Information Retrieval&lt;/li&gt; &#xA; &lt;li&gt;In-context learning&lt;/li&gt; &#xA; &lt;li&gt;Behavioral Evaluation of NLU models&lt;/li&gt; &#xA; &lt;li&gt;NLP Methods and Metrics&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rOwvldxftJTmoR3kRcWkJBp&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford CS25 - Transformers United&lt;/h2&gt; &#xA;&lt;p&gt;This course consists of lectures focused on Transformers, providing a deep dive and their applications&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to Transformers&lt;/li&gt; &#xA; &lt;li&gt;Transformers in Language: GPT-3, Codex&lt;/li&gt; &#xA; &lt;li&gt;Applications in Vision&lt;/li&gt; &#xA; &lt;li&gt;Transformers in RL &amp;amp; Universal Compute Engines&lt;/li&gt; &#xA; &lt;li&gt;Scaling transformers&lt;/li&gt; &#xA; &lt;li&gt;Interpretability with transformers&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rNiJRchCzutFw5ItR_Z27CM&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;NLP Course (Hugging Face)&lt;/h2&gt; &#xA;&lt;p&gt;Learn about different NLP concepts and how to apply language models and Transformers to NLP:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is Transfer Learning?&lt;/li&gt; &#xA; &lt;li&gt;BPE Tokenization&lt;/li&gt; &#xA; &lt;li&gt;Batching inputs&lt;/li&gt; &#xA; &lt;li&gt;Fine-tuning models&lt;/li&gt; &#xA; &lt;li&gt;Text embeddings and semantic search&lt;/li&gt; &#xA; &lt;li&gt;Model evaluation&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLo2EIpI_JMQvWfQndUesu0nPBAtZ9gP1o&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CS224N: Natural Language Processing with Deep Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest approaches for deep learning based NLP:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependency parsing&lt;/li&gt; &#xA; &lt;li&gt;Language models and RNNs&lt;/li&gt; &#xA; &lt;li&gt;Question Answering&lt;/li&gt; &#xA; &lt;li&gt;Transformers and pretraining&lt;/li&gt; &#xA; &lt;li&gt;Natural Language Generation&lt;/li&gt; &#xA; &lt;li&gt;T5 and Large Language Models&lt;/li&gt; &#xA; &lt;li&gt;Future of NLP&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CMU Neural Networks for NLP&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest neural network based techniques for NLP:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Language Modeling&lt;/li&gt; &#xA; &lt;li&gt;Efficiency tricks&lt;/li&gt; &#xA; &lt;li&gt;Conditioned Generation&lt;/li&gt; &#xA; &lt;li&gt;Structured Prediction&lt;/li&gt; &#xA; &lt;li&gt;Model Interpretation&lt;/li&gt; &#xA; &lt;li&gt;Advanced Search Algorithms&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8AkaHEJ7lOOrlex-pcxS-XV&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CS224U: Natural Language Understanding&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest concepts in natural language understanding:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grounded Language Understanding&lt;/li&gt; &#xA; &lt;li&gt;Relation Extraction&lt;/li&gt; &#xA; &lt;li&gt;Natural Language Inference (NLI)&lt;/li&gt; &#xA; &lt;li&gt;NLU and Neural Information Extraction&lt;/li&gt; &#xA; &lt;li&gt;Adversarial testing&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rPt5D0zs3YhbWSZA8Q_DyiJ&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CMU Advanced NLP&lt;/h2&gt; &#xA;&lt;p&gt;To learn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basics of modern NLP techniques&lt;/li&gt; &#xA; &lt;li&gt;Multi-task, Multi-domain, multi-lingual learning&lt;/li&gt; &#xA; &lt;li&gt;Prompting + Sequence-to-sequence pre-training&lt;/li&gt; &#xA; &lt;li&gt;Interpreting and Debugging NLP Models&lt;/li&gt; &#xA; &lt;li&gt;Learning from Knowledge-bases&lt;/li&gt; &#xA; &lt;li&gt;Adversarial learning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8AYSXn_GKVgwXVluCT9chJ6&#34;&gt;Link to 2021 Edition&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8D0UkqW2fEhgLrnlDW9QK7z&#34;&gt;Link to 2022 Edition&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8DZprnWryM4nR8IZl1ZXDjg&#34;&gt;Link to 2024 Edition&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Multilingual NLP&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest concepts for doing multilingual NLP:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Typology&lt;/li&gt; &#xA; &lt;li&gt;Words, Part of Speech, and Morphology&lt;/li&gt; &#xA; &lt;li&gt;Advanced Text Classification&lt;/li&gt; &#xA; &lt;li&gt;Machine Translation&lt;/li&gt; &#xA; &lt;li&gt;Data Augmentation for MT&lt;/li&gt; &#xA; &lt;li&gt;Low Resource ASR&lt;/li&gt; &#xA; &lt;li&gt;Active Learning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8CHhppU6n1Q9-04m96D9gt5&#34;&gt;Link to 2020 Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8PYTP1V4I8BhCpzfdKKdd1OnTfLcyZr7&#34;&gt;Link to 2022 Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advanced NLP&lt;/h2&gt; &#xA;&lt;p&gt;To learn advanced concepts in NLP:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Attention Mechanisms&lt;/li&gt; &#xA; &lt;li&gt;Transformers&lt;/li&gt; &#xA; &lt;li&gt;BERT&lt;/li&gt; &#xA; &lt;li&gt;Question Answering&lt;/li&gt; &#xA; &lt;li&gt;Model Distillation&lt;/li&gt; &#xA; &lt;li&gt;Vision + Language&lt;/li&gt; &#xA; &lt;li&gt;Ethics in NLP&lt;/li&gt; &#xA; &lt;li&gt;Commonsense Reasoning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLWnsVgP6CzadmQX6qevbar3_vDBioWHJL&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CS231N: Convolutional Neural Networks for Visual Recognition&lt;/h2&gt; &#xA;&lt;p&gt;Stanford&#39;s Famous CS231n course. The videos are only available for the Spring 2017 semester. The course is currently known as Deep Learning for Computer Vision, but the Spring 2017 version is titled Convolutional Neural Networks for Visual Recognition.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Image Classification&lt;/li&gt; &#xA; &lt;li&gt;Loss Functions and Optimization&lt;/li&gt; &#xA; &lt;li&gt;Introduction to Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Convolutional Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Training Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Deep Learning Software&lt;/li&gt; &#xA; &lt;li&gt;CNN Architectures&lt;/li&gt; &#xA; &lt;li&gt;Recurrent Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Detection and Segmentation&lt;/li&gt; &#xA; &lt;li&gt;Visualizing and Understanding&lt;/li&gt; &#xA; &lt;li&gt;Generative Models&lt;/li&gt; &#xA; &lt;li&gt;Deep Reinforcement Learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;http://cs231n.stanford.edu/2017/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Learning for Computer Vision&lt;/h2&gt; &#xA;&lt;p&gt;To learn some of the fundamental concepts in CV:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to deep learning for CV&lt;/li&gt; &#xA; &lt;li&gt;Image Classification&lt;/li&gt; &#xA; &lt;li&gt;Convolutional Networks&lt;/li&gt; &#xA; &lt;li&gt;Attention Networks&lt;/li&gt; &#xA; &lt;li&gt;Detection and Segmentation&lt;/li&gt; &#xA; &lt;li&gt;Generative Models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Learning for Computer Vision (DL4CV)&lt;/h2&gt; &#xA;&lt;p&gt;To learn modern methods for computer vision:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CNNs&lt;/li&gt; &#xA; &lt;li&gt;Advanced PyTorch&lt;/li&gt; &#xA; &lt;li&gt;Understanding Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;RNN, Attention and ViTs&lt;/li&gt; &#xA; &lt;li&gt;Generative Models&lt;/li&gt; &#xA; &lt;li&gt;GPU Fundamentals&lt;/li&gt; &#xA; &lt;li&gt;Self-Supervision&lt;/li&gt; &#xA; &lt;li&gt;Neural Rendering&lt;/li&gt; &#xA; &lt;li&gt;Efficient Architectures&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL_Z2_U9MIJdNgFM7-f2fZ9ZxjVRP_jhJv&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Learning for Computer Vision (neuralearn.ai)&lt;/h2&gt; &#xA;&lt;p&gt;To learn modern methods for computer vision:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Self-Supervised Learning&lt;/li&gt; &#xA; &lt;li&gt;Neural Rendering&lt;/li&gt; &#xA; &lt;li&gt;Efficient Architectures&lt;/li&gt; &#xA; &lt;li&gt;Machine Learning Operations (MLOps)&lt;/li&gt; &#xA; &lt;li&gt;Modern Convolutional Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Transformers in Vision&lt;/li&gt; &#xA; &lt;li&gt;Model Deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/watch?v=IA3WxTTPXqQ&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AMMI Geometric Deep Learning Course&lt;/h2&gt; &#xA;&lt;p&gt;To learn about concepts in geometric deep learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learning in High Dimensions&lt;/li&gt; &#xA; &lt;li&gt;Geometric Priors&lt;/li&gt; &#xA; &lt;li&gt;Grids&lt;/li&gt; &#xA; &lt;li&gt;Manifolds and Meshes&lt;/li&gt; &#xA; &lt;li&gt;Sequences and Time Warping&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLn2-dEmQeTfSLXW8yXP4q_Ii58wFdxb3C&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deep Reinforcement Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn the latest concepts in deep RL:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intro to RL&lt;/li&gt; &#xA; &lt;li&gt;RL algorithms&lt;/li&gt; &#xA; &lt;li&gt;Real-world sequential decision making&lt;/li&gt; &#xA; &lt;li&gt;Supervised learning of behaviors&lt;/li&gt; &#xA; &lt;li&gt;Deep imitation learning&lt;/li&gt; &#xA; &lt;li&gt;Cost functions and reward functions&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL_iWQOsE6TfURIIhCrlt-wj9ByIVpbfGc&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reinforcement Learning Lecture Series (DeepMind)&lt;/h2&gt; &#xA;&lt;p&gt;The Deep Learning Lecture Series is a collaboration between DeepMind and the UCL Centre for Artificial Intelligence.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to RL&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Programming&lt;/li&gt; &#xA; &lt;li&gt;Model-free algorithms&lt;/li&gt; &#xA; &lt;li&gt;Deep reinforcement learning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLqYmG7hTraZDVH599EItlEWsUOsJbAodm&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LLMOps: Building Real-World Applications With Large Language Models&lt;/h2&gt; &#xA;&lt;p&gt;Learn to build modern software with LLMs using the newest tools and techniques in the field.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.comet.com/site/llm-course/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Evaluating and Debugging Generative AI&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll learn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instrument A Jupyter Notebook&lt;/li&gt; &#xA; &lt;li&gt;Manage Hyperparameters Config&lt;/li&gt; &#xA; &lt;li&gt;Log Run Metrics&lt;/li&gt; &#xA; &lt;li&gt;Collect artifacts for dataset and model versioning&lt;/li&gt; &#xA; &lt;li&gt;Log experiment results&lt;/li&gt; &#xA; &lt;li&gt;Trace prompts and responses for LLMs&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.deeplearning.ai/short-courses/evaluating-debugging-generative-ai/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ChatGPT Prompt Engineering for Developers&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to use a large language model (LLM) to quickly build new and powerful applications.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LangChain for LLM Application Development&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll learn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Models, Prompt, and Parsers&lt;/li&gt; &#xA; &lt;li&gt;Memories for LLMs&lt;/li&gt; &#xA; &lt;li&gt;Chains&lt;/li&gt; &#xA; &lt;li&gt;Question Answering over Documents&lt;/li&gt; &#xA; &lt;li&gt;Agents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.deeplearning.ai/short-courses/langchain-for-llm-application-development/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LangChain: Chat with Your Data&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll learn about:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Document Loading&lt;/li&gt; &#xA; &lt;li&gt;Document Splitting&lt;/li&gt; &#xA; &lt;li&gt;Vector Stores and Embeddings&lt;/li&gt; &#xA; &lt;li&gt;Retrieval&lt;/li&gt; &#xA; &lt;li&gt;Question Answering&lt;/li&gt; &#xA; &lt;li&gt;Chat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.deeplearning.ai/short-courses/building-systems-with-chatgpt/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Systems with the ChatGPT API&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to automate complex workflows using chain calls to a large language model.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.deeplearning.ai/short-courses/building-systems-with-chatgpt/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LangChain &amp;amp; Vector Databases in Production&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to use LangChain and Vector DBs in Production:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LLMs and LangChain&lt;/li&gt; &#xA; &lt;li&gt;Learning how to Prompt&lt;/li&gt; &#xA; &lt;li&gt;Keeping Knowledge Organized with Indexes&lt;/li&gt; &#xA; &lt;li&gt;Combining Components Together with Chains&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://learn.activeloop.ai/courses/langchain&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building LLM-Powered Apps&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to build LLM-powered applications using LLM APIs&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unpacking LLM APIs&lt;/li&gt; &#xA; &lt;li&gt;Building a Baseline LLM Application&lt;/li&gt; &#xA; &lt;li&gt;Enhancing and Optimizing LLM Applications&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.wandb.courses/courses/building-llm-powered-apps&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Full Stack LLM Bootcamp&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to build and deploy LLM-powered applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn to Spell: Prompt Engineering&lt;/li&gt; &#xA; &lt;li&gt;LLMOPs&lt;/li&gt; &#xA; &lt;li&gt;UX for Language User Interfaces&lt;/li&gt; &#xA; &lt;li&gt;Augmented Language Models&lt;/li&gt; &#xA; &lt;li&gt;Launch an LLM App in One Hour&lt;/li&gt; &#xA; &lt;li&gt;LLM Foundations&lt;/li&gt; &#xA; &lt;li&gt;Project Walkthrough: askFSDL&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://fullstackdeeplearning.com/llm-bootcamp/spring-2023/&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Full Stack Deep Learning&lt;/h2&gt; &#xA;&lt;p&gt;To learn full-stack production deep learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ML Projects&lt;/li&gt; &#xA; &lt;li&gt;Infrastructure and Tooling&lt;/li&gt; &#xA; &lt;li&gt;Experiment Managing&lt;/li&gt; &#xA; &lt;li&gt;Troubleshooting DNNs&lt;/li&gt; &#xA; &lt;li&gt;Data Management&lt;/li&gt; &#xA; &lt;li&gt;Data Labeling&lt;/li&gt; &#xA; &lt;li&gt;Monitoring ML Models&lt;/li&gt; &#xA; &lt;li&gt;Web deployment&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL1T8fO7ArWlcWg04OgNiJy91PywMKT2lv&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to Deep Learning and Deep Generative Models&lt;/h2&gt; &#xA;&lt;p&gt;Covers the fundamental concepts of deep learning&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single-layer neural networks and gradient descent&lt;/li&gt; &#xA; &lt;li&gt;Multi-layer neural networks and backpropagation&lt;/li&gt; &#xA; &lt;li&gt;Convolutional neural networks for images&lt;/li&gt; &#xA; &lt;li&gt;Recurrent neural networks for text&lt;/li&gt; &#xA; &lt;li&gt;Autoencoders, variational autoencoders, and generative adversarial networks&lt;/li&gt; &#xA; &lt;li&gt;Encoder-decoder recurrent neural networks and transformers&lt;/li&gt; &#xA; &lt;li&gt;PyTorch code examples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/watch?v=1nqCZqDYPp0&amp;amp;list=PLTKMiZHVd_2KJtIXOW0zFhFfBaJJilH51&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://sebastianraschka.com/blog/2021/dl-course.html&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Self-Driving Cars (T√ºbingen)&lt;/h2&gt; &#xA;&lt;p&gt;Covers the most dominant paradigms of self-driving cars: modular pipeline-based approaches as well as deep-learning based end-to-end driving techniques.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Camera, lidar and radar-based perception&lt;/li&gt; &#xA; &lt;li&gt;Localization, navigation, path planning&lt;/li&gt; &#xA; &lt;li&gt;Vehicle modeling/control&lt;/li&gt; &#xA; &lt;li&gt;Deep Learning&lt;/li&gt; &#xA; &lt;li&gt;Imitation learning&lt;/li&gt; &#xA; &lt;li&gt;Reinforcement learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PL05umP7R6ij321zzKXK6XCQXAaaYjQbzr&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reinforcement Learning (Polytechnique Montreal, Fall 2021)&lt;/h2&gt; &#xA;&lt;p&gt;Designing autonomous decision making systems is one of the longstanding goals of Artificial Intelligence. Such decision making systems, if realized, can have a big impact in machine learning for robotics, game playing, control, health care to name a few. This course introduces Reinforcement Learning as a general framework to design such autonomous decision making systems.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to RL&lt;/li&gt; &#xA; &lt;li&gt;Multi-armed bandits&lt;/li&gt; &#xA; &lt;li&gt;Policy Gradient Methods&lt;/li&gt; &#xA; &lt;li&gt;Contextual Bandits&lt;/li&gt; &#xA; &lt;li&gt;Finite Markov Decision Process&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Programming&lt;/li&gt; &#xA; &lt;li&gt;Policy Iteration, Value Iteration&lt;/li&gt; &#xA; &lt;li&gt;Monte Carlo Methods&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLImtCgowF_ES_JdF_UcM60EXTcGZg67Ua&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://chandar-lab.github.io/INF8953DE/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Foundations of Deep RL&lt;/h2&gt; &#xA;&lt;p&gt;A mini 6-lecture series by Pieter Abbeel.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MDPs, Exact Solution Methods, Max-ent RL&lt;/li&gt; &#xA; &lt;li&gt;Deep Q-Learning&lt;/li&gt; &#xA; &lt;li&gt;Policy Gradients and Advantage Estimation&lt;/li&gt; &#xA; &lt;li&gt;TRPO and PPO&lt;/li&gt; &#xA; &lt;li&gt;DDPG and SAC&lt;/li&gt; &#xA; &lt;li&gt;Model-based RL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLwRJQ4m4UJjNymuBM9RdmB3Z9N5-0IlY0&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford CS234: Reinforcement Learning&lt;/h2&gt; &#xA;&lt;p&gt;Covers topics from basic concepts of Reinforcement Learning to more advanced ones:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Markov decision processes &amp;amp; planning&lt;/li&gt; &#xA; &lt;li&gt;Model-free policy evaluation&lt;/li&gt; &#xA; &lt;li&gt;Model-free control&lt;/li&gt; &#xA; &lt;li&gt;Reinforcement learning with function approximation &amp;amp; Deep RL&lt;/li&gt; &#xA; &lt;li&gt;Policy Search&lt;/li&gt; &#xA; &lt;li&gt;Exploration&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://web.stanford.edu/class/cs234/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stanford CS330: Deep Multi-Task and Meta Learning&lt;/h2&gt; &#xA;&lt;p&gt;This is a graduate-level course covering different aspects of deep multi-task and meta learning.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-task learning, transfer learning basics&lt;/li&gt; &#xA; &lt;li&gt;Meta-learning algorithms&lt;/li&gt; &#xA; &lt;li&gt;Advanced meta-learning topics&lt;/li&gt; &#xA; &lt;li&gt;Multi-task RL, goal-conditioned RL&lt;/li&gt; &#xA; &lt;li&gt;Meta-reinforcement learning&lt;/li&gt; &#xA; &lt;li&gt;Hierarchical RL&lt;/li&gt; &#xA; &lt;li&gt;Lifelong learning&lt;/li&gt; &#xA; &lt;li&gt;Open problems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLoROMvodv4rMC6zfYmnD7UG3LVvwaITY5&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://cs330.stanford.edu/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MIT Deep Learning in Life Sciences&lt;/h2&gt; &#xA;&lt;p&gt;A course introducing foundations of ML for applications in genomics and the life sciences more broadly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Interpreting ML Models&lt;/li&gt; &#xA; &lt;li&gt;DNA Accessibility, Promoters and Enhancers&lt;/li&gt; &#xA; &lt;li&gt;Chromatin and gene regulation&lt;/li&gt; &#xA; &lt;li&gt;Gene Expression, Splicing&lt;/li&gt; &#xA; &lt;li&gt;RNA-seq, Splicing&lt;/li&gt; &#xA; &lt;li&gt;Single cell RNA-sequencing&lt;/li&gt; &#xA; &lt;li&gt;Dimensionality Reduction, Genetics, and Variation&lt;/li&gt; &#xA; &lt;li&gt;Drug Discovery&lt;/li&gt; &#xA; &lt;li&gt;Protein Structure Prediction&lt;/li&gt; &#xA; &lt;li&gt;Protein Folding&lt;/li&gt; &#xA; &lt;li&gt;Imaging and Cancer&lt;/li&gt; &#xA; &lt;li&gt;Neuroscience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLypiXJdtIca5ElZMWHl4HMeyle2AzUgVB&#34;&gt;Link to Course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://mit6874.github.io/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Robotics: UC Berkeley&lt;/h2&gt; &#xA;&lt;p&gt;This is course is from Peter Abbeel and covers a review on reinforcement learning and continues to applications in robotics.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MDPs: Exact Methods&lt;/li&gt; &#xA; &lt;li&gt;Discretization of Continuous State Space MDPs&lt;/li&gt; &#xA; &lt;li&gt;Function Approximation / Feature-based Representations&lt;/li&gt; &#xA; &lt;li&gt;LQR, iterative LQR / Differential Dynamic Programming&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üîó &lt;a href=&#34;https://www.youtube.com/playlist?list=PLwRJQ4m4UJjNBPJdt8WamRAt4XKc639wF&#34;&gt;Link to Course&lt;/a&gt; üîó &lt;a href=&#34;https://people.eecs.berkeley.edu/~pabbeel/cs287-fa19/&#34;&gt;Link to Materials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Reach out on &lt;a href=&#34;https://twitter.com/omarsar0&#34;&gt;Twitter&lt;/a&gt; if you have any questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested to contribute, feel free to open a PR with a link to the course. It will take a bit of time, but I have plans to do many things with these individual lectures. We can summarize the lectures, include notes, provide additional reading material, include difficulty of content, etc.&lt;/p&gt; &#xA;&lt;p&gt;You can now find ML Course notes &lt;a href=&#34;https://github.com/dair-ai/ML-Course-Notes&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kijai/ComfyUI-DiffusersStableCascade</title>
    <updated>2024-02-19T01:24:05Z</updated>
    <id>tag:github.com,2024-02-19:/kijai/ComfyUI-DiffusersStableCascade</id>
    <link href="https://github.com/kijai/ComfyUI-DiffusersStableCascade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple inference with StableCascade using diffusers in ComfyUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComfyUI StableCascade using diffusers&lt;/h1&gt; &#xA;&lt;h1&gt;Update: This repo is already deprecated as the native support is in ComfyUI, more info: &lt;a href=&#34;https://gist.github.com/comfyanonymous/0f09119a342d0dd825bb2d99d19b781c&#34;&gt;https://gist.github.com/comfyanonymous/0f09119a342d0dd825bb2d99d19b781c&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Simple quick wrapper for &lt;a href=&#34;https://huggingface.co/stabilityai/stable-cascade&#34;&gt;https://huggingface.co/stabilityai/stable-cascade&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Comfy is going to implement this properly soon, this repo is just for quick testing for the impatient!&lt;/p&gt; &#xA;&lt;p&gt;Currently requires this diffusers branch: &lt;code&gt;pip install git+https://github.com/kashif/diffusers.git@wuerstchen-v3&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>