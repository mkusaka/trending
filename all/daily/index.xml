<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-19T01:23:23Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Orange-Cyberdefense/GOAD</title>
    <updated>2023-10-19T01:23:23Z</updated>
    <id>tag:github.com,2023-10-19:/Orange-Cyberdefense/GOAD</id>
    <link href="https://github.com/Orange-Cyberdefense/GOAD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;game of active directory&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;img alt=&#34;GOAD (Game Of Active Directory)&#34; src=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/logo_GOAD.png&#34;&gt;&lt;/h1&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;GOAD is a pentest active directory LAB project. The purpose of this lab is to give pentesters a vulnerable Active directory environment ready to use to practice usual attack techniques.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; This lab is extremely vulnerable, do not reuse recipe to build your environment and do not deploy this environment on internet without isolation (this is a recommendation, use it as your own risk).&lt;br&gt; This repository was build for pentest practice.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;This lab use free windows VM only (180 days). After that delay enter a license on each server or rebuild all the lab (may be it&#39;s time for an update ;))&lt;/p&gt; &#xA;&lt;h2&gt;Available labs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/ad/GOAD/README.md&#34;&gt;GOAD&lt;/a&gt; : 5 vms, 2 forests, 3 domains (full goad lab)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;GOAD&#34; width=&#34;800&#34; src=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/GOAD_schema.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/ad/GOAD-Light/README.md&#34;&gt;GOAD-Light&lt;/a&gt; : 3 vms, 1 forest, 2 domains (smaller goad lab for those with a smaller pc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;GOAD Light&#34; width=&#34;600&#34; src=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/GOAD-Light_schema.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Used space&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The lab takes about 77GB (but you have to get the space for the vms vagrant images windows server 2016 (22GB) / windows server 2019 (14GB) / ubuntu 18.04 (502M))&lt;/li&gt; &#xA;   &lt;li&gt;The total space needed for the lab is ~115 GB (and more if you take snapshots)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux operating system&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The lab intend to be installed from a &lt;strong&gt;Linux host&lt;/strong&gt; and was tested only on this.&lt;/li&gt; &#xA;   &lt;li&gt;Some people have successfully installed the lab from a windows OS, to do that they create the VMs with vagrant and have done the ansible provisioning part from a linux machine.&lt;/li&gt; &#xA;   &lt;li&gt;In this case the linux machine used to do the provisioning must be setup with one adapter on NAT and one adapter on the same virtual private network as the lab.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;tldr; quick install&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You are on linux, you already got virtualbox, vagrant and docker installed on your host and you know what you are doing, just run :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./goad.sh -t check -l GOAD -p virtualbox -m docker&#xA;./goad.sh -t install -l GOAD -p virtualbox  -m docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now you can grab a coffee &lt;span&gt;☕&lt;/span&gt; it will take time :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation depend of the provider you use, please follow the appropriate guide :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/install_with_virtualbox.md&#34;&gt;Install with Virtualbox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/install_with_vmware.md&#34;&gt;Install with VmWare&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/install_with_proxmox.md&#34;&gt;Install with Proxmox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/install_with_azure.md&#34;&gt;Install with Azure&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation is in three parts :&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Templating : this will create the template to use (needed only for proxmox)&lt;/li&gt; &#xA;   &lt;li&gt;Providing : this will instantiate the virtual machines depending on your provider&lt;/li&gt; &#xA;   &lt;li&gt;Provisioning : it is always made with ansible, it will install all the stuff to create the lab&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Check before install&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For linux users check dependencies installation before install :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./goad -t check -l &amp;lt;LAB&amp;gt; -p &amp;lt;PROVIDER&amp;gt; -m &amp;lt;ANSIBLE_RUN_METHOD&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;LAB: lab must be one of the following (folder in ad/)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GOAD&lt;/li&gt; &#xA;   &lt;li&gt;GOAD-Light&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PROVIDER : provider must be one of the following:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;virtualbox&lt;/li&gt; &#xA;   &lt;li&gt;vmware&lt;/li&gt; &#xA;   &lt;li&gt;azure&lt;/li&gt; &#xA;   &lt;li&gt;proxmox&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ANSIBLE_RUN_METHOD : ansible method to use :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;local : to use local ansible install&lt;/li&gt; &#xA;   &lt;li&gt;docker : to use docker ansible install&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Please install all the needed tools before run the install process&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There is no automatic installer for the dependencies tools (virtualbox, vagrant, python, ansible,... ) you will have to install them by yourself depending on your package manager an linux system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch all the install (vagrant or terraform) vms creation followed by ansible provisioning :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./goad -t install -l &amp;lt;LAB&amp;gt; -p &amp;lt;PROVIDER&amp;gt; -m &amp;lt;ANSIBLE_RUN_METHOD&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The goad install will run all the ansible playbook one by one with a failover to restart the ansible playbook if something goes wrong (sometimes vms or playbook hit timeout so this will restart the playbook automatically)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Provisioning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The provisioning is always done with ansible, more detail on the ansible provisioning here : &lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/provisioning.md&#34;&gt;Ansible provisioning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WriteUp&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All the writeups of the Game Of Active Directory lab are available on this blog : &lt;a href=&#34;https://mayfly277.github.io/categories/ad/&#34;&gt;mayfly blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshoot&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/troubleshoot.md&#34;&gt;troubleshoot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Road Map&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Password reuse between computer (PTH)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spray User = Password&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Password in description&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SMB share anonymous&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SMB not signed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Responder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Zerologon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Windows defender&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ASREPRoast&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Kerberoasting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AD Acl abuse&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Unconstraint delegation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ntlm relay&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Constrained delegation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Install MSSQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MSSQL trusted link&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MSSQL impersonate&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Install IIS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upload asp app&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiples forest&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Anonymous RPC user listing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Child parent domain&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Generate certificate and enable ldaps&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ADCS - ESC 1/2/3/8&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Certifry&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Samaccountname/nopac&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Petitpotam unauthent&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Printerbug&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Drop the mic&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Shadow credentials&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mitm6&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add LAPS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GPO abuse&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Webdav&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add RDP bot&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add full proxmox integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Gmsa (receipe created)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add azure support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Refactoring lab and providers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add PPL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add Credential Guard&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add Applocker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Zone transfert&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Wsus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sccm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Exchange&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lab organization&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The lab configuration is located on the ad/ folder&lt;/li&gt; &#xA; &lt;li&gt;Each Ad folder correspond to a lab and contains the following files :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ad/&#xA;  labname/            # The lab name must be the same as the variable : domain_name from the data/inventory&#xA;    data/&#xA;      config.json     #&amp;nbsp;The json file containing all the variables and configuration of the lab&#xA;      inventory       # The global lab inventory (provider independent) (this should no contains variables)&#xA;    files/            # This folder contains files you want to copy on your vms&#xA;    scripts/          # This folder contains ps1 scripts you want to play on your vm (Must be added in the &#34;scripts&#34; entries of your vms)&#xA;    providers/        # Your lab available provider&#xA;      vmware/&#xA;        inventory     # specific vmware inventory&#xA;        Vagrantfile   # specific vmware vagrantfile&#xA;      virtualbox/&#xA;        inventory     # specific virtualbox inventory&#xA;        Vagrantfile   # specific virtualbox vagrantfile&#xA;      proxmox/&#xA;        terraform/    # specific proxmox terraform recipe&#xA;        inventory     # specific proxmox inventory&#xA;      azure/&#xA;        terraform/    # specific azure terraform recipe&#xA;        inventory     # specific azure inventory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Special Thanks to&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Julien Arrault (Azure recipes)&lt;/li&gt; &#xA; &lt;li&gt;Thomas Rollain (tests &amp;amp; some vulns writing)&lt;/li&gt; &#xA; &lt;li&gt;Quentin Galliou (tests)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Socials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://twitter.com/intent/follow?screen_name=M4yFly&#34; title=&#34;Follow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/M4yFly?label=@M4yFly&amp;amp;style=social&#34; width=&#34;100&#34; height=&#34;30&#34; alt=&#34;Twitter Mayfly&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://discord.gg/NYy7rsMf3u&#34; title=&#34;Join us on Discord&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/discord.png&#34; width=&#34;100&#34; height=&#34;30&#34; alt=&#34;Join us on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unicornsec.com/home/siem-home-lab-series-part-1&#34;&gt;https://unicornsec.com/home/siem-home-lab-series-part-1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jckhmr/adlab&#34;&gt;https://github.com/jckhmr/adlab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jonathanmedd.net/2019/09/ansible-windows-and-powershell-the-basics-introduction.html&#34;&gt;https://www.jonathanmedd.net/2019/09/ansible-windows-and-powershell-the-basics-introduction.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.secframe.com/badblood/&#34;&gt;https://www.secframe.com/badblood/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://josehelps.com/blog/2019-08-06_building-a-windows-2016-dc/&#34;&gt;https://josehelps.com/blog/2019-08-06_building-a-windows-2016-dc/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vartaisecurity/lab-building-guide-virtual-active-directory-5f0d0c8eb907&#34;&gt;https://medium.com/@vartaisecurity/lab-building-guide-virtual-active-directory-5f0d0c8eb907&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ansible.com/blog/an-introduction-to-windows-security-with-ansible&#34;&gt;https://www.ansible.com/blog/an-introduction-to-windows-security-with-ansible&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rgl/windows-domain-controller-vagrant&#34;&gt;https://github.com/rgl/windows-domain-controller-vagrant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sconstantinou.com/powershell-active-directory-delegation-part-1/&#34;&gt;https://www.sconstantinou.com/powershell-active-directory-delegation-part-1/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shellandco.net/playing-acl-active-directory-objects/&#34;&gt;https://www.shellandco.net/playing-acl-active-directory-objects/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clong/DetectionLab&#34;&gt;https://github.com/clong/DetectionLab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-acls-aces&#34;&gt;https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-acls-aces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This repo is based on the work of &lt;a href=&#34;https://github.com/jckhmr/adlab&#34;&gt;jckhmr&lt;/a&gt; and &lt;a href=&#34;https://github.com/kkolk/mssql&#34;&gt;kkolk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>JonathonLuiten/Dynamic3DGaussians</title>
    <updated>2023-10-19T01:23:23Z</updated>
    <id>tag:github.com,2023-10-19:/JonathonLuiten/Dynamic3DGaussians</id>
    <link href="https://github.com/JonathonLuiten/Dynamic3DGaussians" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dynamic 3D Gaussians: Tracking by Persistent Dynamic View Synthesis&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://dynamic3dgaussians.github.io/&#34;&gt;Project Page&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/pdf/2308.09713.pdf&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2308.09713&#34;&gt;ArXiv&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/JonathonLuiten/status/1692346451668636100&#34;&gt;Tweet Thread&lt;/a&gt; | &lt;a href=&#34;https://omnomnom.vision.rwth-aachen.de/data/Dynamic3DGaussians/data.zip&#34;&gt;Data&lt;/a&gt; | &lt;a href=&#34;https://omnomnom.vision.rwth-aachen.de/data/Dynamic3DGaussians/output.zip&#34;&gt;Pretrained Models&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Official implementation of our approach for modelling the dynamic 3D world as a set of 3D Gaussians that move &amp;amp; rotate over time. This extends Gaussian Splatting to dynamic scenes, with accurate novel-view synthesis and dense 3D 6-DOF tracking.&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://dynamic3dgaussians.github.io/&#34;&gt;Dynamic 3D Gaussians: Tracking by Persistent Dynamic View Synthesis&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.vision.rwth-aachen.de/person/216/&#34;&gt;Jonathon Luiten&lt;/a&gt; &lt;sup&gt;1, 2&lt;/sup&gt;, &lt;a href=&#34;https://grgkopanas.github.io/&#34;&gt;Georgios Kopanas&lt;/a&gt; &lt;sup&gt;3&lt;/sup&gt;, &lt;a href=&#34;https://www.vision.rwth-aachen.de/person/1/&#34;&gt;Bastian Leibe&lt;/a&gt; &lt;sup&gt;2&lt;/sup&gt;, &lt;a href=&#34;https://www.cs.cmu.edu/~deva/&#34;&gt;Deva Ramanan&lt;/a&gt; &lt;sup&gt;1&lt;/sup&gt; &lt;br&gt; &lt;sup&gt;1&lt;/sup&gt; Carnegie Mellon University, &lt;sup&gt;2&lt;/sup&gt; RWTH Aachen University, &lt;sup&gt;3&lt;/sup&gt; Inria &amp;amp; Universite Cote d’Azur, France &lt;br&gt; International Conference on 3D Vision (3DV), 2024 &lt;br&gt; &lt;a href=&#34;mailto:jonoluiten@gmail.com&#34;&gt;jonoluiten@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p float=&#34;middle&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/teaser_figure.png&#34; width=&#34;99%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install this repo (pytorch)&#xA;git clone git@github.com:JonathonLuiten/Dynamic3DGaussians.git&#xA;conda env create --file environment.yml&#xA;conda activate dynamic_gaussians&#xA;&#xA;# Install rendering code (cuda)&#xA;git clone git@github.com:JonathonLuiten/diff-gaussian-rasterization-w-depth.git&#xA;cd diff-gaussian-rasterization-w-depth&#xA;python setup.py install&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run visualizer on pretrained models&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Dynamic3DGaussians&#xA;wget https://omnomnom.vision.rwth-aachen.de/data/Dynamic3DGaussians/output.zip  # Download pretrained models&#xA;unzip output.zip&#xA;python visualize.py  # See code for visualization options&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Train models yourself&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Dynamic3DGaussians&#xA;wget https://omnomnom.vision.rwth-aachen.de/data/Dynamic3DGaussians/data.zip  # Download training data&#xA;unzip data.zip&#xA;python train.py &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code Structure&lt;/h2&gt; &#xA;&lt;p&gt;I tried really hard to make this code really clean and useful for building upon. In my opinion it is now much nicer than the original code it was built upon. Everything is relatively &#39;functional&#39; and I tried to remove redundant classes and modules wherever possible. Almost all of the code is in &lt;a href=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/train.py&#34;&gt;train.py&lt;/a&gt; in a few core functions, with the overall training loop clearly laid out. There are only a few other helper functions used, divided between &lt;a href=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/helpers.py&#34;&gt;helpers.py&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/external.py&#34;&gt;external.py&lt;/a&gt; (depending on license). I have split all useful variables into two dicts: &#39;params&#39; (those updated with gradient descent), and &#39;variables&#39; (those not updated by gradient descent). There is also a custom visualization codebase build using Open3D (used for the cool visuals on the website) that is entirely in &lt;a href=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/visualize.py&#34;&gt;visualize.py&lt;/a&gt;. Please let me know if there is anyway you think the code could be cleaner.&lt;/p&gt; &#xA;&lt;h2&gt;Previous bugs&lt;/h2&gt; &#xA;&lt;p&gt;Before a recent &lt;a href=&#34;https://github.com/JonathonLuiten/Dynamic3DGaussians/commit/a246ec6065a86b8c3f1c83f38c66df8954ffc4bf&#34;&gt;commit&lt;/a&gt; there was a bug in this code. This has now been fixed and the code now seems like it is working bug free. On Oct 17 I also updated the pretrained model link to the most recent working code version. Please make sure to pull code to latest version AND redownload the pretrained models.&lt;/p&gt; &#xA;&lt;h2&gt;Differences to paper&lt;/h2&gt; &#xA;&lt;p&gt;This codebase contains some significant changes from the results presented in the currently public version of the paper. Both this codebase and the corresponding &lt;a href=&#34;https://arxiv.org/pdf/2308.09713.pdf&#34;&gt;paper&lt;/a&gt; are work-in-progress and likely to change in the near future. Until I find time to update the paper (ETA Dec 15th) the code here is the more up-to-date public facing version of these two.&lt;/p&gt; &#xA;&lt;p&gt;Differences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the paper we &#39;hard fixed&#39; the colour to be perfectly consistent over time for each Gaussian by simply not updating it after the first timestep. In this codebase the colour is only &#39;soft fixed&#39;. e.g. it is updated over time, but there is a regularization loss added which &#39;soft enforces&#39; it to be consistent over time.&lt;/li&gt; &#xA; &lt;li&gt;Because we know the ground-plane of the scenes we are using a &#39;floor loss&#39; to enforce Gassians don&#39;t go below the floor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please let me know if there are any other differences between the paper and the code so that I can include them here and remember to include them in future version of the paper.&lt;/p&gt; &#xA;&lt;h2&gt;Partial code release&lt;/h2&gt; &#xA;&lt;p&gt;So far we have released two parts of the code: training and visualization. There are three further parts to be released in the future when I find time to clean them up (ETA Dec 15):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Evaluation code for evaluating the method for both novel-view-synthesis and tracking.&lt;/li&gt; &#xA; &lt;li&gt;Data preparation code, to create the cleaned dataset (which I have provided), from the raw CMU panoptic capture data.&lt;/li&gt; &#xA; &lt;li&gt;Code for creative editing of scenes (scene composition, etc).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Calls for contributions: Let&#39;s make this code better together!&lt;/h2&gt; &#xA;&lt;p&gt;Happy to work together to make this code better. If you want to contrib either open and issue / pull request, or send me an email.&lt;/p&gt; &#xA;&lt;h3&gt;Speeding up the code&lt;/h3&gt; &#xA;&lt;p&gt;I do a number of dumb things which slows the code down ALOT. If someone is motivated improving these could significantly speed up training time.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To do the &#39;fg/bg&#39; segmentation loss I am doing the full rendering process twice. By diving into the cuda a little, changing this could easily make training ~2x faster. However, note that for full reproducibility maybe this should only be done after the first timestep, as in the first timestep the gradients from just the colour rendering are used for densification.&lt;/li&gt; &#xA; &lt;li&gt;The current implementation of the local-rigidity loss in pytorch slows the code down MUCH more than it should. Currently it adds something like 20ms per training iter (e.g. 50 iter/s with, 100 without) however I have a compiled jax version that is much faster only adding ~1ms which wouldn&#39;t really slow down training at all). Not sure how to speed this up in pure pytorch but there might be away. Other ideas include upgrading to pytorch 2.0 and using compile, writing this part in cuda, or somehow using jax here (or everywhere).&lt;/li&gt; &#xA; &lt;li&gt;Lots of other parts of this pytorch code are not super efficient. Lots of room to make speedups.&lt;/li&gt; &#xA; &lt;li&gt;Potentially the whole code could be ported to pure cuda. E.g. see &lt;a href=&#34;https://github.com/MrNeRF/gaussian-splatting-cuda&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visualization&lt;/h3&gt; &#xA;&lt;p&gt;In this codebase we provide an open3D based dynamic visualizer. This is makes adding 3D effects (like the track trajectories) really easy, although it definitely makes visualization slower than it should be. E.g. the code renders the scene at 800 FPS, but including open3D in order to display it on the scene (and add camera controls etc) slows it down to ~30 FPS.&lt;/p&gt; &#xA;&lt;p&gt;I have seen lots of cool renderers for Gaussians for static scenes. It would be cool to make my dynamic scenes work on these.&lt;/p&gt; &#xA;&lt;p&gt;In particular, I have seen various things that (a) somehow run on my phone and old laptop (e.g. &lt;a href=&#34;https://gsplat.tech/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/spaces/cakewalk/splat&#34;&gt;here&lt;/a&gt;) (b) run on VR headsets (e.g. &lt;a href=&#34;https://twitter.com/charshenton/status/1704358063036375548&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/s1ddok/status/1696249177250931086&#34;&gt;here&lt;/a&gt;) (c) run in commonly used tools like unity (e.g. &lt;a href=&#34;https://github.com/aras-p/UnityGaussianSplatting&#34;&gt;here&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Dylan made a helpful list that can be found &lt;a href=&#34;https://huggingface.co/spaces/dylanebert/list-of-splats&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Better (or no) FG / BG segmentations&lt;/h3&gt; &#xA;&lt;p&gt;The current FG/BG segmentations I use are REALLY bad. I made them very quickly by using simple background subtraction using a background image (image with no objects) for each camera with some smoothing. The badness of these segmentation masks causes a noticable degradation of the results. Especially around the feet of people / near the floor. It should be very easy to get much better segmentation masks (e.g. using pretrained networks), but I think it also probably isn&#39;t too hard to get the method to work without segmentation masks as all.&lt;/p&gt; &#xA;&lt;h2&gt;Further research&lt;/h2&gt; &#xA;&lt;p&gt;There are ALOT of cool things still to be done building upon Dynamic 3D Gaussians. If you&#39;re doing so (especially research projects) feel free to reach out if you want to discuss (email / issue / twitter)&lt;/p&gt; &#xA;&lt;h2&gt;Notes on license&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository (except in external.py) is licensed under the MIT licence.&lt;/p&gt; &#xA;&lt;p&gt;However, for this code to run it uses the cuda rasterizer code from &lt;a href=&#34;https://github.com/JonathonLuiten/diff-gaussian-rasterization-w-depth&#34;&gt;here&lt;/a&gt;, as well as various code in &lt;a href=&#34;https://raw.githubusercontent.com/JonathonLuiten/Dynamic3DGaussians/main/external.py&#34;&gt;external.py&lt;/a&gt; which has been taken or adapted from &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;here&lt;/a&gt;. These are required for this project, and for these a much more restrictive license from Inria applies which can be found &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting/raw/main/LICENSE.md&#34;&gt;here&lt;/a&gt;. This requires express permission (licensing agreements) from Inria for use in any commercial application, but is otherwise freely distributed for research and experimentation.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{luiten2023dynamic,&#xA;  title={Dynamic 3D Gaussians: Tracking by Persistent Dynamic View Synthesis},&#xA;  author={Luiten, Jonathon and Kopanas, Georgios and Leibe, Bastian and Ramanan, Deva},&#xA;  booktitle={3DV},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>oceanbase/miniob</title>
    <updated>2023-10-19T01:23:23Z</updated>
    <id>tag:github.com,2023-10-19:/oceanbase/miniob</id>
    <link href="https://github.com/oceanbase/miniob" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MiniOB is a compact database that assists developers in understanding the fundamental workings of a database.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MiniOB 概述&lt;/h1&gt; &#xA;&lt;p&gt;MiniOB 是 &lt;a href=&#34;https://github.com/oceanbase/oceanbase&#34;&gt;OceanBase&lt;/a&gt; 团队基于华中科技大学数据库课程原型，联合多所高校重新开发的、专为零基础的同学设计的数据库入门学习项目。我们的目标是为在校学生、数据库从业者、爱好者或对基础技术感兴趣的人提供一个友好的数据库学习项目。&lt;/p&gt; &#xA;&lt;p&gt;MiniOB 整体代码简洁，容易上手，设计了一系列由浅入深的题目，帮助同学们从零基础入门，迅速了解数据库并深入学习数据库内核。MiniOB 简化了许多模块，例如不考虑并发操作、安全特性和复杂的事务管理等功能，以便更好地学习数据库实现原理。我们期望通过 MiniOB 的训练，同学们能够熟练掌握数据库内核模块的功能和协同关系，并具备一定的工程编码能力，例如内存管理、网络通信和磁盘 I/O 处理等, 这将有助于同学在未来的面试和工作中脱颖而出。&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/&#34;&gt;文档&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;代码配套文档和相关代码注释已经生成文档，并通过 GitHub Pages 发布。您可以直接访问：&lt;a href=&#34;https://oceanbase.github.io/miniob/&#34;&gt;MiniOB GitHub Pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;快速上手&lt;/h2&gt; &#xA;&lt;p&gt;为了帮助开发者更好地上手并学习 MiniOB，建议阅读以下内容：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/miniob-introduction.html&#34;&gt;MiniOB 框架介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/how_to_build.html&#34;&gt;如何编译 MiniOB 源码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/how_to_run.html&#34;&gt;如何运行 MiniOB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/dev-env/dev_by_gitpod.html&#34;&gt;使用 GitPod 开发 MiniOB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/design/doxy/html/index.html&#34;&gt;doxygen 代码文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;为了帮助大家更好地学习数据库基础知识，OceanBase社区提供了一系列教程。更多文档请参考 &lt;a href=&#34;https://oceanbase.github.io/miniob/&#34;&gt;MiniOB GitHub Pages&lt;/a&gt;。建议学习：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.oceanbase.com/activities/4921877?id=4921946&#34;&gt;《从0到1数据库内核实战教程》 视频教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oceanbase/kernel-quickstart&#34;&gt;《从0到1数据库内核实战教程》 基础讲义&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/lectures/index.html&#34;&gt;《数据库管理系统实现》 华中科技大学实现教材&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;系统架构&lt;/h2&gt; &#xA;&lt;p&gt;MiniOB 整体架构如下图所示: &lt;img src=&#34;https://raw.githubusercontent.com/oceanbase/miniob/main/docs/src/images/miniob-introduction-sql-flow.png&#34; alt=&#34;架构&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;其中:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;网络模块：负责与客户端交互，收发客户端请求与应答；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SQL解析：将用户输入的SQL语句解析成语法树；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行计划缓存：执行计划缓存模块会将该 SQL第一次生成的执行计划缓存在内存中，后续的执行可以反复执行这个计划，避免了重复查询优化的过程（未实现）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;语义解析模块：将生成的语法树，转换成数据库内部数据结构（部分实现）；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;查询缓存：将执行的查询结果缓存在内存中，下次查询时，可以直接返回（未实现）；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;查询优化：根据一定规则和统计数据，调整/重写语法树。(部分实现)；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;计划执行：根据语法树描述，执行并生成结果；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;会话管理：管理用户连接、调整某个连接的参数；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;元数据管理：记录当前的数据库、表、字段和索引元数据信息；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;客户端：作为测试工具，接收用户请求，向服务端发起请求。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://open.oceanbase.com/competition&#34;&gt;OceanBase 大赛&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;2022 OceanBase 数据库大赛是由中国计算机学会（CCF）数据库专业委员会指导，OceanBase 与蚂蚁技术研究院学术合作团队联合举办的数据库内核实战赛事。本次大赛主要面向全国爱好数据库的高校学生，以“竞技、交流、成长”为宗旨，搭建基于赛事的技术交流平台，促进高校创新人才培养机制，不仅帮助学生从0开始系统化学习数据库理论知识，提升学生数据库实践能力，更能帮助学生走向企业积累经验，促进国内数据库人才的发展，碰撞出创新的火花。&lt;/p&gt; &#xA;&lt;p&gt;OceanBase 初赛基于一套适合初学者实践的数据库实训平台 MiniOB，代码量少，易于上手学习，包含了数据库的各个关键模块，是一个系统性的数据库学习平台。基于该平台设置了一系列由浅入深的题目，以帮助同学们更好&#34;零&#34;基础入门。&lt;/p&gt; &#xA;&lt;p&gt;2023 OceanBase 数据库大赛正在火热进行, 更多详情, 请参考 &lt;a href=&#34;https://open.oceanbase.com/competition/index&#34;&gt;OceanBase 大赛&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;1. 大赛手把手入门教程&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/game/gitee-instructions.html&#34;&gt;大赛入门教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. 大赛赛题&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oceanbase.github.io/miniob/game/miniob_topics.html&#34;&gt;赛题介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. 提交测试&lt;/h3&gt; &#xA;&lt;p&gt;题目完成并通过自测后，大家可以在 &lt;a href=&#34;https://open.oceanbase.com/train?questionId=500003&#34;&gt;MiniOB 训练营&lt;/a&gt; 上提交代码进行测试。&lt;/p&gt; &#xA;&lt;p&gt;在提交前, 请参考并学习 &lt;a href=&#34;https://ask.oceanbase.com/t/topic/35600372&#34;&gt;训练营使用说明&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;4. 大赛FAQ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ask.oceanbase.com/t/topic/35601465&#34;&gt;大赛 FAQ &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;在线开发平台&lt;/h1&gt; &#xA;&lt;p&gt;本仓库基于 Gitpod 建立了快速在线开发平台。点击下面的按钮即可一键体验（建议使用 Chrome 浏览器）。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/oceanbase/miniob&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;首次进入 Gitpod 时需要安装一些依赖。安装完成后，终端界面会显示 &#34;Dependency installed successfully&#34;。运行 &lt;code&gt;bash build.sh --make -j4&lt;/code&gt; 命令即可编译 MiniOB。&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;OceanBase 社区热情欢迎每一位对数据库技术热爱的开发者，期待与您携手开启思维碰撞之旅。无论是文档格式调整或文字修正、问题修复还是增加新功能，都是参与和贡献 OceanBase 社区的方式之一。现在就开始您的首次贡献吧！更多详情，请参考 &lt;a href=&#34;https://raw.githubusercontent.com/oceanbase/miniob/main/CONTRIBUTING.md&#34;&gt;社区贡献&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MiniOB 采用 &lt;a href=&#34;https://license.coscl.org.cn/MulanPSL2&#34;&gt;木兰宽松许可证，第2版&lt;/a&gt;, 可以自由拷贝和使用源码, 当做修改或分发时, 请遵守 &lt;a href=&#34;https://license.coscl.org.cn/MulanPSL2&#34;&gt;木兰宽松许可证，第2版&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;社区组织&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://h5.dingtalk.com/circle/healthCheckin.html?corpId=dingd88359ef5e4c49ef87cda005313eea7a&amp;amp;1fe0ca69-72d=16c86a07-83c&amp;amp;cbdbhh=qwertyuiop&amp;amp;origin=1&#34;&gt;OceanBase 社区交流群 33254054&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qr.dingtalk.com/action/joingroup?code=v1,k1,g61jI0RwHQA8UMocuTbys2cyM7vck2c6jNE87vdxz9o=&amp;amp;_dt_no_comment=1&amp;amp;origin=11&#34;&gt;OceanBase 大赛官方交流群 35326455&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ask.oceanbase.com/&#34;&gt;OceanBase 官方论坛&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>