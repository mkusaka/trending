<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:28:51Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>casey/runestone</title>
    <updated>2023-10-01T01:28:51Z</updated>
    <id>tag:github.com,2023-10-01:/casey/runestone</id>
    <link href="https://github.com/casey/runestone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Runes: terrible idea or id√©e terrible?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;runestone&lt;/h1&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;runestone&lt;/code&gt; implements runes, a fungible token protocol for Bitcoin.&lt;/p&gt; &#xA;&lt;p&gt;Fungible tokens are, without exaggeration and nearly without exception, a vile abyss of hopium, scams, and incompetence.&lt;/p&gt; &#xA;&lt;p&gt;Runes are no different.&lt;/p&gt; &#xA;&lt;p&gt;If you want to make money, buy bitcoin.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dreamgaussian/dreamgaussian</title>
    <updated>2023-10-01T01:28:51Z</updated>
    <id>tag:github.com,2023-10-01:/dreamgaussian/dreamgaussian</id>
    <link href="https://github.com/dreamgaussian/dreamgaussian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generative Gaussian Splatting for Efficient 3D Content Creation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DreamGaussian&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the official implementation for &lt;a href=&#34;https://arxiv.org/abs/2309.16653&#34;&gt;DreamGaussian: Generative Gaussian Splatting for Efficient 3D Content Creation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://dreamgaussian.github.io&#34;&gt;Project Page&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2309.16653&#34;&gt;Arxiv&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dreamgaussian/dreamgaussian/assets/25863658/db860801-7b9c-4b30-9eb9-87330175f5c8&#34;&gt;https://github.com/dreamgaussian/dreamgaussian/assets/25863658/db860801-7b9c-4b30-9eb9-87330175f5c8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/camenduru/dreamgaussian-colab&#34;&gt;Colab demo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Image-to-3D: &lt;a href=&#34;https://colab.research.google.com/drive/1sLpYmmLS209-e5eHgcuqdryFRRO6ZhFS?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Text-to-3D: &lt;a href=&#34;https://colab.research.google.com/github/camenduru/dreamgaussian-colab/blob/main/dreamgaussian_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&#xA;# a modified gaussian splatting (+ depth, alpha rendering)&#xA;git clone --recursive https://github.com/ashawkey/diff-gaussian-rasterization&#xA;pip install ./diff-gaussian-rasterization&#xA;&#xA;# simple-knn&#xA;pip install ./simple-knn&#xA;&#xA;# nvdiffrast&#xA;pip install git+https://github.com/NVlabs/nvdiffrast/&#xA;&#xA;# kiuikit&#xA;pip install git+https://github.com/ashawkey/kiuikit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tested on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 22 with torch 1.12 &amp;amp; CUDA 11.6 on a V100.&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 with torch 2.1 &amp;amp; CUDA 12.1 on a 3070.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Image-to-3D:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### preprocess&#xA;# background removal and recenter, save rgba at 256x256&#xA;python process.py data/name.jpg&#xA;&#xA;# save at a larger resolution&#xA;python process.py data/name.jpg --size 512&#xA;&#xA;# process all jpg images under a dir&#xA;python process.py data&#xA;&#xA;### training gaussian stage&#xA;# train 500 iters (~1min) and export ckpt &amp;amp; coarse_mesh to logs&#xA;python main.py --config configs/image.yaml input=data/name_rgba.png save_path=name&#xA;&#xA;# gui mode (supports visualizing training)&#xA;python main.py --config configs/image.yaml input=data/name_rgba.png save_path=name gui=True&#xA;&#xA;# load and visualize a saved ckpt&#xA;python main.py --config configs/image.yaml load=logs/name_model.ply gui=True&#xA;&#xA;# use an estimated elevation angle if image is not front-view (e.g., common looking-down image can use -30)&#xA;python main.py --config configs/image.yaml input=data/name_rgba.png save_path=name elevation=-30&#xA;&#xA;### training mesh stage&#xA;# auto load coarse_mesh.obj and refine 50 iters (~1min), export fine_mesh to logs&#xA;python main2.py --config configs/image.yaml input=data/name_rgba.png save_path=name&#xA;&#xA;# specify coarse mesh path explicity&#xA;python main2.py --config configs/image.yaml input=data/name_rgba.png save_path=name mesh=logs/name_mesh.obj&#xA;&#xA;# gui mode&#xA;python main2.py --config configs/image.yaml input=data/name_rgba.png save_path=name gui=True&#xA;&#xA;### visualization&#xA;# gui for visualizing mesh&#xA;python -m kiui.render logs/name.obj&#xA;&#xA;# save 360 degree video of mesh (can run without gui)&#xA;python -m kiui.render logs/name.obj --save_video name.mp4 --wogui&#xA;&#xA;# save 8 view images of mesh (can run without gui)&#xA;python -m kiui.render logs/name.obj --save images/name/ --wogui&#xA;&#xA;### evaluation of CLIP-similarity&#xA;python -m kiui.cli.clip_sim data/name_rgba.png logs/name.obj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please check &lt;code&gt;./configs/image.yaml&lt;/code&gt; for more options.&lt;/p&gt; &#xA;&lt;p&gt;Text-to-3D:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### training gaussian stage&#xA;python main.py --config configs/text.yaml prompt=&#34;a photo of an icecream&#34; save_path=icecream&#xA;&#xA;### training mesh stage&#xA;python main2.py --config configs/text.yaml prompt=&#34;a photo of an icecream&#34; save_path=icecream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please check &lt;code&gt;./configs/text.yaml&lt;/code&gt; for more options.&lt;/p&gt; &#xA;&lt;p&gt;Helper scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run all image samples (*_rgba.png) in ./data&#xA;python scripts/runall.py --dir ./data --gpu 0&#xA;&#xA;# run all text samples (hardcoded in runall_sd.py)&#xA;python scripts/runall_sd.py --gpu 0&#xA;&#xA;# export all ./logs/*.obj to mp4 in ./videos&#xA;python scripts/convert_obj_to_video.py --dir ./logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;This work is built on many amazing research works and open-source projects, thanks a lot to all the authors for sharing!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;gaussian-splatting&lt;/a&gt; and &lt;a href=&#34;https://github.com/graphdeco-inria/diff-gaussian-rasterization&#34;&gt;diff-gaussian-rasterization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/threestudio-project/threestudio&#34;&gt;threestudio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NVlabs/nvdiffrast&#34;&gt;nvdiffrast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoffstadt/DearPyGui&#34;&gt;dearpygui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{tang2023dreamgaussian,&#xA;  title={DreamGaussian: Generative Gaussian Splatting for Efficient 3D Content Creation},&#xA;  author={Tang, Jiaxiang and Ren, Jiawei and Zhou, Hang and Liu, Ziwei and Zeng, Gang},&#xA;  journal={arXiv preprint arXiv:2309.16653},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>CodeWithHarry/Sigma-Web-Dev-Course</title>
    <updated>2023-10-01T01:28:51Z</updated>
    <id>tag:github.com,2023-10-01:/CodeWithHarry/Sigma-Web-Dev-Course</id>
    <link href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source Code for Sigma Web Development Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sigma-Web-Dev-Course&lt;/h1&gt; &#xA;&lt;p&gt;Source Code for Sigma Web Development Course&lt;/p&gt;</summary>
  </entry>
</feed>