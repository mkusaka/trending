<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-20T01:29:10Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudflare/ai</title>
    <updated>2025-06-20T01:29:10Z</updated>
    <id>tag:github.com,2025-06-20:/cloudflare/ai</id>
    <link href="https://github.com/cloudflare/ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cloudflare AI&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains various packages and demo apps related consuming Cloudflare&#39;s AI offerings on the client-side. It is a monorepo powered by &lt;a href=&#34;https://nx.dev/&#34;&gt;Nx&lt;/a&gt; and &lt;a href=&#34;https://github.com/changesets/changesets&#34;&gt;Changesets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/ai/main/packages/workers-ai-provider/README.md&#34;&gt;&lt;code&gt;workers-ai-provider&lt;/code&gt;&lt;/a&gt;: A custom provider that enables &lt;a href=&#34;https://ai.cloudflare.com/&#34;&gt;Workers AI&lt;/a&gt;&#39;s models for the &lt;a href=&#34;https://sdk.vercel.ai/&#34;&gt;Vercel AI SDK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/ai/main/packages/ai-gateway-provider/README.md&#34;&gt;&lt;code&gt;ai-gateway-provider&lt;/code&gt;&lt;/a&gt;: &lt;a href=&#34;https://developers.cloudflare.com/ai-gateway/&#34;&gt;AI Gateway&lt;/a&gt; Provider for &lt;a href=&#34;https://sdk.vercel.ai/&#34;&gt;Vercel AI SDK&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:cloudflare/ai.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Dependencies.&lt;/p&gt; &lt;p&gt;From the root directory, run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ai&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Develop.&lt;/p&gt; &lt;p&gt;To start a development server for a specific app (for instance, &lt;code&gt;tool-calling&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx dev tool-calling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Ideally all commands should be executed from the repository root with the &lt;code&gt;pnpm nx&lt;/code&gt; prefix. This will ensure that the dependency graph is managed correctly, e.g. if one package relies on the output of an other.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Testing and Linting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To execute your continuous integration tests for a specific project (e.g., &lt;code&gt;workers-ai-provider&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx test:ci workers-ai-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To lint a specific project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx lint my-project&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run a more comprehensive sweep of tasks (lint, tests, type checks, build) against one or more projects:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx run-many -t lint test:ci type-check build -p &#34;my-project other-project&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Other Nx Tasks.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;build&lt;/code&gt;: Compiles a project or a set of projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Runs project tests in watch mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test:ci&lt;/code&gt;: Runs tests in CI mode (no watch).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test:smoke&lt;/code&gt;: Runs smoke tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type-check&lt;/code&gt;: Performs TypeScript type checks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a New Demo App&lt;/h2&gt; &#xA;&lt;p&gt;In order to scaffold a new demo app, you can use the &lt;code&gt;create-demo&lt;/code&gt; script. This script will create a new demo app in the &lt;code&gt;demos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm create-demo &amp;lt;demo-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After creating the app, &lt;code&gt;pnpm install&lt;/code&gt; will be run to install the dependencies, and &lt;code&gt;pnpm nx cf-typegen &amp;lt;demo-name&amp;gt;&lt;/code&gt; will be run to generate the types for the demo app. Then it&#39;s simply a case of starting the app with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx dev &amp;lt;demo-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate contributions and encourage pull requests. Please follow these guidelines:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Project Setup: After forking or cloning, install dependencies with &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Branching: Create a new branch for your feature or fix.&lt;/li&gt; &#xA; &lt;li&gt;Making Changes:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add or update relevant tests.&lt;/li&gt; &#xA; &lt;li&gt;On pushing your changes, automated tasks will be run (courtesy of a Husky pre-push hook).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Changesets: If your changes affect a published package, run &lt;code&gt;pnpm changeset&lt;/code&gt; to create a changeset. Provide a concise summary of your changes in the changeset prompt.&lt;/li&gt; &#xA; &lt;li&gt;Pull Request: Submit a pull request to the &lt;code&gt;main&lt;/code&gt; branch. The team will review it and merge if everything is in order.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Release Process&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://github.com/changesets/changesets&#34;&gt;Changesets&lt;/a&gt; to manage versioning and publication:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Changeset Creation&lt;/strong&gt;: Whenever a change is made that warrants a new release (e.g., bug fixes, new features), run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm changeset&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Provide a clear description of the changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Merging&lt;/strong&gt;: Once the changeset is merged into &lt;code&gt;main&lt;/code&gt;, our GitHub Actions workflows will:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detect the changed packages, and create a Version Packages PR.&lt;/li&gt; &#xA; &lt;li&gt;Increment versions automatically (via Changesets).&lt;/li&gt; &#xA; &lt;li&gt;Publish any package that has a version number to npm. (Demos and other internal items do not require versioning.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Publication&lt;/strong&gt;: The release workflow (&lt;code&gt;.github/workflows/release.yml&lt;/code&gt;) will run on every push to &lt;code&gt;main&lt;/code&gt;. It ensures each published package is tagged and released on npm. Any package with a version field in its &lt;code&gt;package.json&lt;/code&gt; will be included in this process.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For any queries or guidance, kindly open an issue or submit a pull request. We hope this structure and process help you to contribute effectively.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firebase/genkit</title>
    <updated>2025-06-20T01:29:10Z</updated>
    <id>tag:github.com,2025-06-20:/firebase/genkit</id>
    <link href="https://github.com/firebase/genkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source framework for building AI-powered apps with familiar code-centric patterns. Genkit makes it easy to develop, integrate, and test AI features with observability and evaluations. Genkit works with various models and platforms.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo-dark.png#gh-dark-mode-only&#34; alt=&#34;Genkit logo&#34; title=&#34;Genkit&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo.png#gh-light-mode-only&#34; alt=&#34;Genkit logo&#34; title=&#34;Genkit&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Genkit is an open-source framework for building full-stack AI-powered applications, built and used in production by Google&#39;s Firebase. It provides SDKs for multiple programming languages with varying levels of stability:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;JavaScript/TypeScript (Stable)&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go (Beta)&lt;/strong&gt;: Feature-complete but may have breaking changes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python (Alpha)&lt;/strong&gt;: Early development with core functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It offers a unified interface for integrating AI models from providers like &lt;a href=&#34;https://genkit.dev/docs/plugins/google-genai&#34;&gt;Google&lt;/a&gt;, &lt;a href=&#34;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-openai&#34;&gt;OpenAI&lt;/a&gt;, &lt;a href=&#34;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic&#34;&gt;Anthropic&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/plugins/ollama/&#34;&gt;Ollama&lt;/a&gt;, and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.&lt;/p&gt; &#xA;&lt;p&gt;Get started with just a few lines of code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { genkit } from &#39;genkit&#39;;&#xA;import { googleAI } from &#39;@genkit-ai/googleai&#39;;&#xA;&#xA;const ai = genkit({ plugins: [googleAI()] });&#xA;&#xA;const { text } = await ai.generate({&#xA;    model: googleAI.model(&#39;gemini-2.0-flash&#39;),&#xA;    prompt: &#39;Why is Firebase awesome?&#39;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Explore &amp;amp; build with Genkit&lt;/h2&gt; &#xA;&lt;p&gt;Play with AI sample apps, with visualizations of the Genkit code that powers them, at no cost to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://examples.genkit.dev&#34;&gt;Explore Genkit by Example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key capabilities&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href=&#34;https://genkit.dev/docs/plugins/google-genai&#34;&gt;Google&lt;/a&gt;, &lt;a href=&#34;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-openai&#34;&gt; OpenAI&lt;/a&gt;, &lt;a href=&#34;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic&#34;&gt; Anthropic&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/plugins/ollama&#34;&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href=&#34;https://genkit.dev/docs/models#structured-output&#34;&gt; structured output&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/tool-calling&#34;&gt;agentic tool calling&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/rag&#34;&gt;context-aware generation&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/models#multimodal&#34;&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href=&#34;https://genkit.dev/docs/firebase&#34;&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript (Stable), Go (Beta), and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href=&#34;https://genkit.dev/docs/firebase&#34;&gt;Cloud Functions for Firebase&lt;/a&gt;, &lt;a href=&#34;https://genkit.dev/docs/cloud-run&#34;&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href=&#34;https://genkit.dev/docs/deploy-node&#34;&gt;third-party platforms&lt;/a&gt;, with or without Google services.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href=&#34;https://genkit.dev/docs/devtools&#34;&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href=&#34;https://genkit.dev/docs/observability/getting-started&#34;&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;Genkit simplifies AI integration with an open-source SDK and unified APIs that work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.&lt;/p&gt; &#xA;&lt;p&gt;Some key features offered by Genkit include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/models&#34;&gt;Text and image generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/models#structured-output&#34;&gt;Type-safe, structured data generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/tool-calling&#34;&gt;Tool calling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/dotprompt&#34;&gt;Prompt templating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/chat&#34;&gt;Persisted chat interfaces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/flows&#34;&gt;AI workflows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/rag&#34;&gt;AI-powered data retrieval (RAG)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and &lt;a href=&#34;https://genkit.dev/docs/firebase&#34;&gt;client SDKs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Implementation path&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose your language and model provider&lt;/td&gt; &#xA;   &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript (Stable), Go (Beta), or Python (Alpha)). Choose a model provider like &lt;a href=&#34;https://genkit.dev/docs/plugins/google-genai&#34;&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href=&#34;https://genkit.dev/docs/plugins/vertex-ai&#34;&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Install the SDK and initialize&lt;/td&gt; &#xA;   &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Write and test AI features&lt;/td&gt; &#xA;   &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy and monitor&lt;/td&gt; &#xA;   &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/docs/get-started&#34;&gt;JavaScript/TypeScript quickstart&lt;/a&gt; (Stable)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/go/docs/get-started-go&#34;&gt;Go quickstart&lt;/a&gt; (Beta)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genkit.dev/python/docs/get-started/&#34;&gt;Python quickstart&lt;/a&gt; (Alpha)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development tools&lt;/h2&gt; &#xA;&lt;p&gt;Genkit provides a CLI and a local UI to streamline your AI development workflow.&lt;/p&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install:&lt;/strong&gt; &lt;code&gt;npm install -g genkit-cli&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run a command, wrapped with telemetry, a interactive developer UI, etc:&lt;/strong&gt; &lt;code&gt;genkit start -- &amp;lt;command to run your code&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer UI&lt;/h3&gt; &#xA;&lt;p&gt;The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.&lt;/p&gt; &#xA;&lt;p&gt;Key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Inspect:&lt;/strong&gt; Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evaluate:&lt;/strong&gt; Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/readme-ui-traces-screenshot.png&#34; width=&#34;700&#34; alt=&#34;Screenshot of Genkit Developer UI showing traces&#34;&gt; &#xA;&lt;h2&gt;Try Genkit in Firebase Studio&lt;/h2&gt; &#xA;&lt;p&gt;Want to skip the local setup? Click below to try out Genkit using &lt;a href=&#34;https://firebase.studio&#34;&gt;Firebase Studio&lt;/a&gt;, Google&#39;s AI-assisted workspace for full-stack app development in the cloud.&lt;/p&gt; &#xA;&lt;a href=&#34;https://studio.firebase.google.com/new/genkit&#34;&gt; &lt;img height=&#34;32&#34; alt=&#34;Open in Firebase Studio&#34; src=&#34;https://cdn.firebasestudio.dev/btn/open_bright_32.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Connect with us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/qXt5zzQKpc&#34;&gt;&lt;strong&gt;Join us on Discord&lt;/strong&gt;&lt;/a&gt; – Get help, share ideas, and chat with other developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/firebase/genkit/issues&#34;&gt;&lt;strong&gt;Contribute on GitHub&lt;/strong&gt;&lt;/a&gt; – Report bugs, suggest features, or explore the source code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to Genkit are welcome and highly appreciated! See our &lt;a href=&#34;https://raw.githubusercontent.com/firebase/genkit/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Genkit is built by &lt;a href=&#34;https://firebase.google.com/products/genkit&#34;&gt;Firebase&lt;/a&gt; with contributions from the &lt;a href=&#34;https://github.com/firebase/genkit/graphs/contributors&#34;&gt;Open Source Community&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>php/frankenphp</title>
    <updated>2025-06-20T01:29:10Z</updated>
    <id>tag:github.com,2025-06-20:/php/frankenphp</id>
    <link href="https://github.com/php/frankenphp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧟 The modern PHP app server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FrankenPHP: Modern App Server for PHP&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://frankenphp.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/php/frankenphp/main/frankenphp.png&#34; alt=&#34;FrankenPHP&#34; width=&#34;600&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;FrankenPHP is a modern application server for PHP built on top of the &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy&lt;/a&gt; web server.&lt;/p&gt; &#xA;&lt;p&gt;FrankenPHP gives superpowers to your PHP apps thanks to its stunning features: &lt;a href=&#34;https://frankenphp.dev/docs/early-hints/&#34;&gt;&lt;em&gt;Early Hints&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://frankenphp.dev/docs/worker/&#34;&gt;worker mode&lt;/a&gt;, &lt;a href=&#34;https://frankenphp.dev/docs/mercure/&#34;&gt;real-time capabilities&lt;/a&gt;, automatic HTTPS, HTTP/2, and HTTP/3 support...&lt;/p&gt; &#xA;&lt;p&gt;FrankenPHP works with any PHP app and makes your Laravel and Symfony projects faster than ever thanks to their official integrations with the worker mode.&lt;/p&gt; &#xA;&lt;p&gt;FrankenPHP can also be used as a standalone Go library to embed PHP in any app using &lt;code&gt;net/http&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://frankenphp.dev&#34;&gt;&lt;strong&gt;Learn more&lt;/strong&gt; on &lt;em&gt;frankenphp.dev&lt;/em&gt;&lt;/a&gt; and in this slide deck:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dunglas.dev/2022/10/frankenphp-the-modern-php-app-server-written-in-go/&#34;&gt;&lt;img src=&#34;https://dunglas.dev/wp-content/uploads/2022/10/frankenphp.png&#34; alt=&#34;Slides&#34; width=&#34;600&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone Binary&lt;/h3&gt; &#xA;&lt;p&gt;We provide static FrankenPHP binaries for Linux and macOS containing &lt;a href=&#34;https://www.php.net/releases/8.4/en.php&#34;&gt;PHP 8.4&lt;/a&gt; and most popular PHP extensions.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, use &lt;a href=&#34;https://learn.microsoft.com/windows/wsl/&#34;&gt;WSL&lt;/a&gt; to run FrankenPHP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dunglas/frankenphp/releases&#34;&gt;Download FrankenPHP&lt;/a&gt; or copy this line into your terminal to automatically install the version appropriate for your platform:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl https://frankenphp.dev/install.sh | sh&#xA;mv frankenphp /usr/local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To serve the content of the current directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;frankenphp php-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run command-line scripts with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;frankenphp php-cli /path/to/your/script.php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, &lt;a href=&#34;https://frankenphp.dev/docs/docker/&#34;&gt;Docker images&lt;/a&gt; are available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker run -v .:/app/public \&#xA;    -p 80:80 -p 443:443 -p 443:443/udp \&#xA;    dunglas/frankenphp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to &lt;code&gt;https://localhost&lt;/code&gt;, and enjoy!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Do not attempt to use &lt;code&gt;https://127.0.0.1&lt;/code&gt;. Use &lt;code&gt;https://localhost&lt;/code&gt; and accept the self-signed certificate. Use the &lt;a href=&#34;https://raw.githubusercontent.com/php/frankenphp/main/docs/config.md#environment-variables&#34;&gt;&lt;code&gt;SERVER_NAME&lt;/code&gt; environment variable&lt;/a&gt; to change the domain to use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;FrankenPHP is also available as a &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; package for macOS and Linux.&lt;/p&gt; &#xA;&lt;p&gt;To install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install dunglas/frankenphp/frankenphp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To serve the content of the current directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;frankenphp php-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/classic/&#34;&gt;Classic mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/worker/&#34;&gt;Worker mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/early-hints/&#34;&gt;Early Hints support (103 HTTP status code)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/mercure/&#34;&gt;Real-time&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/x-sendfile/&#34;&gt;Efficiently Serving Large Static Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/config/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/docker/&#34;&gt;Docker images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/production/&#34;&gt;Deploy in production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/performance/&#34;&gt;Performance optimization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/embed/&#34;&gt;Create &lt;strong&gt;standalone&lt;/strong&gt;, self-executable PHP apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/static/&#34;&gt;Create static binaries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/compile/&#34;&gt;Compile from sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/metrics/&#34;&gt;Monitoring FrankenPHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/laravel/&#34;&gt;Laravel integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/known-issues/&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dunglas/frankenphp-demo&#34;&gt;Demo app (Symfony) and benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/dunglas/frankenphp&#34;&gt;Go library documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/contributing/&#34;&gt;Contributing and debugging&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples and Skeletons&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dunglas/symfony-docker&#34;&gt;Symfony&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api-platform.com/docs/symfony&#34;&gt;API Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frankenphp.dev/docs/laravel/&#34;&gt;Laravel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sulu.io/blog/running-sulu-with-frankenphp&#34;&gt;Sulu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StephenMiracle/frankenwp&#34;&gt;WordPress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dunglas/frankenphp-drupal&#34;&gt;Drupal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexandreelise/frankenphp-joomla&#34;&gt;Joomla&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ochorocho/franken-typo3&#34;&gt;TYPO3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ekino/frankenphp-magento2&#34;&gt;Magento2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>