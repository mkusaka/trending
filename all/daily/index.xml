<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-14T01:29:45Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>open-duelyst/duelyst</title>
    <updated>2023-01-14T01:29:45Z</updated>
    <id>tag:github.com,2023-01-14:/open-duelyst/duelyst</id>
    <link href="https://github.com/open-duelyst/duelyst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Duelyst is a digital collectible card game and turn-based strategy hybrid, developed by Counterplay Games.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenDuelyst&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/app/resources/ui/brand_duelyst.png&#34; alt=&#34;Duelyst Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the source code for Duelyst, a digital collectible card game and turn-based strategy hybrid developed by Counterplay Games and released in 2016.&lt;/p&gt; &#xA;&lt;h2&gt;Production Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Work is underway to deploy OpenDuelyst as &#34;Duelyst Classic&#34;: a version of the game exactly as it was in v1.96.17, before the servers were shut down. This is being tracked in &lt;a href=&#34;https://github.com/open-duelyst/duelyst/issues/3&#34;&gt;issue #3&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Staging Deployment&lt;/h2&gt; &#xA;&lt;p&gt;The staging deployment is up and running at &lt;a href=&#34;https://staging.duelyst.org&#34;&gt;https://staging.duelyst.org&lt;/a&gt;. Both single-player and multi-player games are available.&lt;/p&gt; &#xA;&lt;h2&gt;Downloading the Desktop Clients&lt;/h2&gt; &#xA;&lt;p&gt;Desktop clients for Windows, Mac, and Linux can be downloaded on the &lt;a href=&#34;https://github.com/open-duelyst/duelyst/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Desktop clients currently use the staging environment. They&#39;ll use the production environment once it&#39;s available.&lt;/p&gt; &#xA;&lt;h2&gt;Playing on Android or iOS&lt;/h2&gt; &#xA;&lt;p&gt;We have basic support for playing on mobile web currently. From your phone&#39;s browser, head to &lt;a href=&#34;https://staging.duelyst.org&#34;&gt;https://staging.duelyst.org&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;To hide the status/navigation bar in Chrome or Safari, open the game and select &#34;Add to Home Screen&#34;. When you open the game from the home screen, the status bar will be hidden.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to OpenDuelyst&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to OpenDuelyst, check out our &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/README.md&#34;&gt;Documentation&lt;/a&gt;, especially the &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join the OpenDuelyst developer Discord server &lt;a href=&#34;https://discord.gg/HhUWfZ9cxe&#34;&gt;here&lt;/a&gt;. This Discord server is focused on the development of OpenDuelyst, and has channels for frontend, backend, and infrastructure discussions, but it is open for anyone to join.&lt;/p&gt; &#xA;&lt;h2&gt;Filing Issues and Reporting Bugs&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a bug and would like to report it, first check the &lt;a href=&#34;https://github.com/open-duelyst/duelyst/issues/&#34;&gt;Open Issues&lt;/a&gt; to see if the bug has already been reported. If not, feel free to create a new issue with the &lt;code&gt;bug&lt;/code&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to request a technical feature or enhancement to the code, you can create a new issue with the &lt;code&gt;enhancement&lt;/code&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;Since OpenDuelyst is currently focused on recreating the game as it last existed in v1.96.17, please avoid creating feature requests related to balance changes.&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;The game currently includes English and German localization. If you&#39;d like to contribute translations for another language, take a look at the &lt;code&gt;app/localization/locales&lt;/code&gt; directory. You can copy the &lt;code&gt;en&lt;/code&gt; folder and start updating strings for the new language, then submit a Pull Request with your contribution.&lt;/p&gt; &#xA;&lt;p&gt;There are about 4,500 localized strings, so this can also be done a little bit at a time. Once the translations are in, we can help get the language included in the game.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenDuelyst is licensed under the Creative Commons Zero v1.0 Universal license. You can see a copy of the license &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ultralytics/ultralytics</title>
    <updated>2023-01-14T01:29:45Z</updated>
    <id>tag:github.com,2023-01-14:/ultralytics/ultralytics</id>
    <link href="https://github.com/ultralytics/ultralytics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;YOLOv8 🚀 in PyTorch &gt; ONNX &gt; CoreML &gt; TFLite&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a align=&#34;center&#34; href=&#34;https://ultralytics.com/yolov8&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ultralytics/ultralytics/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ultralytics/ultralytics/main/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;Ultralytics CI&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://zenodo.org/badge/latestdoi/264818686&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/264818686.svg?sanitize=true&#34; alt=&#34;YOLOv8 Citation&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://hub.docker.com/r/ultralytics/ultralytics&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ultralytics/ultralytics?logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://console.paperspace.com/github/ultralytics/ultralytics&#34;&gt;&lt;img src=&#34;https://assets.paperspace.io/img/gradient-badge.svg?sanitize=true&#34; alt=&#34;Run on Gradient&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.kaggle.com/ultralytics/yolov8&#34;&gt;&lt;img src=&#34;https://kaggle.com/static/images/open-in-kaggle.svg?sanitize=true&#34; alt=&#34;Open In Kaggle&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ultralytics/ultralytics&#34;&gt;Ultralytics YOLOv8&lt;/a&gt;, developed by &lt;a href=&#34;https://ultralytics.com&#34;&gt;Ultralytics&lt;/a&gt;, is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection, image segmentation and image classification tasks.&lt;/p&gt; &#xA; &lt;p&gt;To request an Enterprise License please complete the form at &lt;a href=&#34;https://ultralytics.com/license&#34;&gt;Ultralytics Licensing&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png&#34;&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://www.linkedin.com/company/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://twitter.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://www.producthunt.com/@glenn_jocher&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-producthunt.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://youtube.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://www.facebook.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-facebook.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt; &#xA;  &lt;a href=&#34;https://www.instagram.com/ultralytics/&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png&#34; width=&#34;2%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Documentation&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;See below for a quickstart installation and usage example, and see the &lt;a href=&#34;https://docs.ultralytics.com&#34;&gt;YOLOv8 Docs&lt;/a&gt; for full documentation on training, validation, prediction and deployment.&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Install&lt;/summary&gt; &#xA; &lt;p&gt;Pip install the ultralytics package including all &lt;a href=&#34;https://github.com/ultralytics/ultralytics/raw/main/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; in a &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;Python&amp;gt;=3.7.0&lt;/strong&gt;&lt;/a&gt; environment, including &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;&lt;strong&gt;PyTorch&amp;gt;=1.7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ultralytics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Usage&lt;/summary&gt; &#xA; &lt;p&gt;YOLOv8 may be used directly in the Command Line Interface (CLI) with a &lt;code&gt;yolo&lt;/code&gt; command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yolo task=detect mode=predict model=yolov8n.pt source=&#34;https://ultralytics.com/images/bus.jpg&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;code&gt;yolo&lt;/code&gt; can be used for a variety of tasks and modes and accepts additional arguments, i.e. &lt;code&gt;imgsz=640&lt;/code&gt;. See a full list of available &lt;code&gt;yolo&lt;/code&gt; &lt;a href=&#34;https://docs.ultralytics.com/config/&#34;&gt;arguments&lt;/a&gt; in the YOLOv8 &lt;a href=&#34;https://docs.ultralytics.com&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yolo task=detect    mode=train    model=yolov8n.pt        args...&#xA;          classify       predict        yolov8n-cls.yaml  args...&#xA;          segment        val            yolov8n-seg.yaml  args...&#xA;                         export         yolov8n.pt        format=onnx  args...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;YOLOv8 may also be used directly in a Python environment, and accepts the same &lt;a href=&#34;https://docs.ultralytics.com/config/&#34;&gt;arguments&lt;/a&gt; as in the CLI example above:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from ultralytics import YOLO&#xA;&#xA;# Load a model&#xA;model = YOLO(&#34;yolov8n.yaml&#34;)  # build a new model from scratch&#xA;model = YOLO(&#34;yolov8n.pt&#34;)  # load a pretrained model (recommended for training)&#xA;&#xA;# Use the model&#xA;results = model.train(data=&#34;coco128.yaml&#34;, epochs=3)  # train the model&#xA;results = model.val()  # evaluate model performance on the validation set&#xA;results = model(&#34;https://ultralytics.com/images/bus.jpg&#34;)  # predict on an image&#xA;success = model.export(format=&#34;onnx&#34;)  # export the model to ONNX format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ultralytics/ultralytics/tree/main/ultralytics/models&#34;&gt;Models&lt;/a&gt; download automatically from the latest Ultralytics &lt;a href=&#34;https://github.com/ultralytics/assets/releases&#34;&gt;release&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h3&gt;Known Issues / TODOs&lt;/h3&gt; &#xA; &lt;p&gt;We are still working on several parts of YOLOv8! We aim to have these completed soon to bring the YOLOv8 feature set up to par with YOLOv5, including export and inference to all the same formats. We are also writing a YOLOv8 paper which we will submit to &lt;a href=&#34;https://arxiv.org&#34;&gt;arxiv.org&lt;/a&gt; once complete.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TensorFlow exports&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; DDP resume&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://arxiv.org&#34;&gt;arxiv.org&lt;/a&gt; paper&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Models&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;All YOLOv8 pretrained models are available here. Detection and Segmentation models are pretrained on the COCO dataset, while Classification models are pretrained on the ImageNet dataset.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ultralytics/ultralytics/tree/main/ultralytics/models&#34;&gt;Models&lt;/a&gt; download automatically from the latest Ultralytics &lt;a href=&#34;https://github.com/ultralytics/assets/releases&#34;&gt;release&lt;/a&gt; on first use.&lt;/p&gt; &#xA;&lt;details open&gt;&#xA; &lt;summary&gt;Detection&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://docs.ultralytics.com/tasks/detection/&#34;&gt;Detection Docs&lt;/a&gt; for usage examples with these models.&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Model&lt;/th&gt; &#xA;    &lt;th&gt;size&lt;br&gt;&lt;sup&gt;(pixels)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;mAP&lt;sup&gt;val&lt;br&gt;50-95&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;CPU ONNX&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;A100 TensorRT&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;params&lt;br&gt;&lt;sup&gt;(M)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;FLOPs&lt;br&gt;&lt;sup&gt;(B)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt&#34;&gt;YOLOv8n&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;37.3&lt;/td&gt; &#xA;    &lt;td&gt;80.4&lt;/td&gt; &#xA;    &lt;td&gt;0.99&lt;/td&gt; &#xA;    &lt;td&gt;3.2&lt;/td&gt; &#xA;    &lt;td&gt;8.7&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s.pt&#34;&gt;YOLOv8s&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;44.9&lt;/td&gt; &#xA;    &lt;td&gt;128.4&lt;/td&gt; &#xA;    &lt;td&gt;1.20&lt;/td&gt; &#xA;    &lt;td&gt;11.2&lt;/td&gt; &#xA;    &lt;td&gt;28.6&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m.pt&#34;&gt;YOLOv8m&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;50.2&lt;/td&gt; &#xA;    &lt;td&gt;234.7&lt;/td&gt; &#xA;    &lt;td&gt;1.83&lt;/td&gt; &#xA;    &lt;td&gt;25.9&lt;/td&gt; &#xA;    &lt;td&gt;78.9&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l.pt&#34;&gt;YOLOv8l&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;52.9&lt;/td&gt; &#xA;    &lt;td&gt;375.2&lt;/td&gt; &#xA;    &lt;td&gt;2.39&lt;/td&gt; &#xA;    &lt;td&gt;43.7&lt;/td&gt; &#xA;    &lt;td&gt;165.2&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x.pt&#34;&gt;YOLOv8x&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;53.9&lt;/td&gt; &#xA;    &lt;td&gt;479.1&lt;/td&gt; &#xA;    &lt;td&gt;3.53&lt;/td&gt; &#xA;    &lt;td&gt;68.2&lt;/td&gt; &#xA;    &lt;td&gt;257.8&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;mAP&lt;sup&gt;val&lt;/sup&gt;&lt;/strong&gt; values are for single-model single-scale on &lt;a href=&#34;http://cocodataset.org&#34;&gt;COCO val2017&lt;/a&gt; dataset. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=detect data=coco.yaml device=0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; averaged over COCO val images using an &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/p4/&#34;&gt;Amazon EC2 P4d&lt;/a&gt; instance. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=detect data=coco128.yaml batch=1 device=0/cpu&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Segmentation&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://docs.ultralytics.com/tasks/segmentation/&#34;&gt;Segmentation Docs&lt;/a&gt; for usage examples with these models.&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Model&lt;/th&gt; &#xA;    &lt;th&gt;size&lt;br&gt;&lt;sup&gt;(pixels)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;mAP&lt;sup&gt;box&lt;br&gt;50-95&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;mAP&lt;sup&gt;mask&lt;br&gt;50-95&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;CPU ONNX&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;A100 TensorRT&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;params&lt;br&gt;&lt;sup&gt;(M)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;FLOPs&lt;br&gt;&lt;sup&gt;(B)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-seg.pt&#34;&gt;YOLOv8n&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;36.7&lt;/td&gt; &#xA;    &lt;td&gt;30.5&lt;/td&gt; &#xA;    &lt;td&gt;96.1&lt;/td&gt; &#xA;    &lt;td&gt;1.21&lt;/td&gt; &#xA;    &lt;td&gt;3.4&lt;/td&gt; &#xA;    &lt;td&gt;12.6&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-seg.pt&#34;&gt;YOLOv8s&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;44.6&lt;/td&gt; &#xA;    &lt;td&gt;36.8&lt;/td&gt; &#xA;    &lt;td&gt;155.7&lt;/td&gt; &#xA;    &lt;td&gt;1.47&lt;/td&gt; &#xA;    &lt;td&gt;11.8&lt;/td&gt; &#xA;    &lt;td&gt;42.6&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-seg.pt&#34;&gt;YOLOv8m&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;49.9&lt;/td&gt; &#xA;    &lt;td&gt;40.8&lt;/td&gt; &#xA;    &lt;td&gt;317.0&lt;/td&gt; &#xA;    &lt;td&gt;2.18&lt;/td&gt; &#xA;    &lt;td&gt;27.3&lt;/td&gt; &#xA;    &lt;td&gt;110.2&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-seg.pt&#34;&gt;YOLOv8l&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;52.3&lt;/td&gt; &#xA;    &lt;td&gt;42.6&lt;/td&gt; &#xA;    &lt;td&gt;572.4&lt;/td&gt; &#xA;    &lt;td&gt;2.79&lt;/td&gt; &#xA;    &lt;td&gt;46.0&lt;/td&gt; &#xA;    &lt;td&gt;220.5&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-seg.pt&#34;&gt;YOLOv8x&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;640&lt;/td&gt; &#xA;    &lt;td&gt;53.4&lt;/td&gt; &#xA;    &lt;td&gt;43.4&lt;/td&gt; &#xA;    &lt;td&gt;712.1&lt;/td&gt; &#xA;    &lt;td&gt;4.02&lt;/td&gt; &#xA;    &lt;td&gt;71.8&lt;/td&gt; &#xA;    &lt;td&gt;344.1&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;mAP&lt;sup&gt;val&lt;/sup&gt;&lt;/strong&gt; values are for single-model single-scale on &lt;a href=&#34;http://cocodataset.org&#34;&gt;COCO val2017&lt;/a&gt; dataset. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=segment data=coco.yaml device=0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; averaged over COCO val images using an &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/p4/&#34;&gt;Amazon EC2 P4d&lt;/a&gt; instance. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=segment data=coco128-seg.yaml batch=1 device=0/cpu&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Classification&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://docs.ultralytics.com/tasks/classification/&#34;&gt;Classification Docs&lt;/a&gt; for usage examples with these models.&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Model&lt;/th&gt; &#xA;    &lt;th&gt;size&lt;br&gt;&lt;sup&gt;(pixels)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;acc&lt;br&gt;&lt;sup&gt;top1&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;acc&lt;br&gt;&lt;sup&gt;top5&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;CPU ONNX&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;A100 TensorRT&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;params&lt;br&gt;&lt;sup&gt;(M)&lt;/sup&gt;&lt;/th&gt; &#xA;    &lt;th&gt;FLOPs&lt;br&gt;&lt;sup&gt;(B) at 640&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-cls.pt&#34;&gt;YOLOv8n&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;224&lt;/td&gt; &#xA;    &lt;td&gt;66.6&lt;/td&gt; &#xA;    &lt;td&gt;87.0&lt;/td&gt; &#xA;    &lt;td&gt;12.9&lt;/td&gt; &#xA;    &lt;td&gt;0.31&lt;/td&gt; &#xA;    &lt;td&gt;2.7&lt;/td&gt; &#xA;    &lt;td&gt;4.3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-cls.pt&#34;&gt;YOLOv8s&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;224&lt;/td&gt; &#xA;    &lt;td&gt;72.3&lt;/td&gt; &#xA;    &lt;td&gt;91.1&lt;/td&gt; &#xA;    &lt;td&gt;23.4&lt;/td&gt; &#xA;    &lt;td&gt;0.35&lt;/td&gt; &#xA;    &lt;td&gt;6.4&lt;/td&gt; &#xA;    &lt;td&gt;13.5&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-cls.pt&#34;&gt;YOLOv8m&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;224&lt;/td&gt; &#xA;    &lt;td&gt;76.4&lt;/td&gt; &#xA;    &lt;td&gt;93.2&lt;/td&gt; &#xA;    &lt;td&gt;85.4&lt;/td&gt; &#xA;    &lt;td&gt;0.62&lt;/td&gt; &#xA;    &lt;td&gt;17.0&lt;/td&gt; &#xA;    &lt;td&gt;42.7&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-cls.pt&#34;&gt;YOLOv8l&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;224&lt;/td&gt; &#xA;    &lt;td&gt;78.0&lt;/td&gt; &#xA;    &lt;td&gt;94.1&lt;/td&gt; &#xA;    &lt;td&gt;163.0&lt;/td&gt; &#xA;    &lt;td&gt;0.87&lt;/td&gt; &#xA;    &lt;td&gt;37.5&lt;/td&gt; &#xA;    &lt;td&gt;99.7&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-cls.pt&#34;&gt;YOLOv8x&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;224&lt;/td&gt; &#xA;    &lt;td&gt;78.4&lt;/td&gt; &#xA;    &lt;td&gt;94.3&lt;/td&gt; &#xA;    &lt;td&gt;232.0&lt;/td&gt; &#xA;    &lt;td&gt;1.01&lt;/td&gt; &#xA;    &lt;td&gt;57.4&lt;/td&gt; &#xA;    &lt;td&gt;154.8&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;acc&lt;/strong&gt; values are model accuracies on the &lt;a href=&#34;https://www.image-net.org/&#34;&gt;ImageNet&lt;/a&gt; dataset validation set. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=classify data=path/to/ImageNet device=0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; averaged over ImageNet val images using an &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/p4/&#34;&gt;Amazon EC2 P4d&lt;/a&gt; instance. &lt;br&gt;Reproduce by &lt;code&gt;yolo mode=val task=classify data=path/to/ImageNet batch=1 device=0/cpu&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Integrations&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;a align=&#34;center&#34; href=&#34;https://bit.ly/ultralytics_hub&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://github.com/ultralytics/assets/raw/main/yolov8/banner-integrations.png&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://roboflow.com/?ref=ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-roboflow.png&#34; width=&#34;10%&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;15%&#34; height=&#34;0&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://cutt.ly/yolov5-readme-clearml&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-clearml.png&#34; width=&#34;10%&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;15%&#34; height=&#34;0&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://bit.ly/yolov5-readme-comet&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-comet.png&#34; width=&#34;10%&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;15%&#34; height=&#34;0&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://bit.ly/yolov5-neuralmagic&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-neuralmagic.png&#34; width=&#34;10%&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Roboflow&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ClearML ⭐ NEW&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Comet ⭐ NEW&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Neural Magic ⭐ NEW&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Label and export your custom datasets directly to YOLOv8 for training with &lt;a href=&#34;https://roboflow.com/?ref=ultralytics&#34;&gt;Roboflow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Automatically track, visualize and even remotely train YOLOv8 using &lt;a href=&#34;https://cutt.ly/yolov5-readme-clearml&#34;&gt;ClearML&lt;/a&gt; (open-source!)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Free forever, &lt;a href=&#34;https://bit.ly/yolov5-readme-comet2&#34;&gt;Comet&lt;/a&gt; lets you save YOLOv8 models, resume training, and interactively visualize and debug predictions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Run YOLOv8 inference up to 6x faster with &lt;a href=&#34;https://bit.ly/yolov5-neuralmagic&#34;&gt;Neural Magic DeepSparse&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Ultralytics HUB&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bit.ly/ultralytics_hub&#34;&gt;Ultralytics HUB&lt;/a&gt; is our ⭐ &lt;strong&gt;NEW&lt;/strong&gt; no-code solution to visualize datasets, train YOLOv8 🚀 models, and deploy to the real world in a seamless experience. Get started for &lt;strong&gt;Free&lt;/strong&gt; now! Also run YOLOv8 models on your iOS or Android device by downloading the &lt;a href=&#34;https://ultralytics.com/app_install&#34;&gt;Ultralytics App&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;a align=&#34;center&#34; href=&#34;https://bit.ly/ultralytics_hub&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png&#34;&gt;&lt;/a&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contribute&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We love your input! YOLOv5 and YOLOv8 would not be possible without help from our community. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/ultralytics/ultralytics/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started, and fill out our &lt;a href=&#34;https://ultralytics.com/survey?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_campaign=Survey&#34;&gt;Survey&lt;/a&gt; to send us feedback on your experience. Thank you 🙏 to all our contributors!&lt;/p&gt; &#xA;&lt;!-- SVG image from https://opencollective.com/ultralytics/contributors.svg?width=990 --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ultralytics/ultralytics/graphs/contributors&#34;&gt;&lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/image-contributors-1280.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  License&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;YOLOv8 is available under two different licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPL-3.0 License&lt;/strong&gt;: See &lt;a href=&#34;https://github.com/ultralytics/ultralytics/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enterprise License&lt;/strong&gt;: Provides greater flexibility for commercial product development without the open-source requirements of GPL-3.0. Typical use cases are embedding Ultralytics software and AI models in commercial products and applications. Request an Enterprise License at &lt;a href=&#34;https://ultralytics.com/license&#34;&gt;Ultralytics Licensing&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contact&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For YOLOv8 bugs and feature requests please visit &lt;a href=&#34;https://github.com/ultralytics/ultralytics/issues&#34;&gt;GitHub Issues&lt;/a&gt;. For professional support please &lt;a href=&#34;https://ultralytics.com/contact&#34;&gt;Contact Us&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://www.linkedin.com/company/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://twitter.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://www.producthunt.com/@glenn_jocher&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-producthunt.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://youtube.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://www.facebook.com/ultralytics&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-facebook.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://www.instagram.com/ultralytics/&#34; style=&#34;text-decoration:none;&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png&#34; width=&#34;3%&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>tallyhowallet/extension</title>
    <updated>2023-01-14T01:29:45Z</updated>
    <id>tag:github.com,2023-01-14:/tallyhowallet/extension</id>
    <link href="https://github.com/tallyhowallet/extension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tally Ho, the community owned and operated Web3 wallet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tally-extension&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img alt=&#34;The community owned &amp;amp; operated wallet.&#34; src=&#34;https://raw.githubusercontent.com/tallyhowallet/extension/main/github_cover@2x.png&#34; width=&#34;630&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.tally.cash/a-community-owned-wallet-for-the-new-internet/&#34;&gt;Tally Ho&lt;/a&gt; is a community owned and operated Web3 wallet, built as a &lt;a href=&#34;https://browserext.github.io/browserext/&#34;&gt;browser extension&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why not MetaMask?&lt;/h2&gt; &#xA;&lt;p&gt;Today&#39;s Web3 landscape is dominated by a &lt;a href=&#34;https://metamask.io/&#34;&gt;single wallet&lt;/a&gt; and a &lt;a href=&#34;https://infura.io/&#34;&gt;single infrastructure provider&lt;/a&gt;, both owned by a &lt;a href=&#34;https://consensys.net/&#34;&gt;single conglomerate&lt;/a&gt;. These facts undermine the censorship resistance of Ethereum today... and they&#39;re also against Web3&#39;s spirit of community ownership.&lt;/p&gt; &#xA;&lt;p&gt;We can do better.&lt;/p&gt; &#xA;&lt;p&gt;Tally Ho will be&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fairly launched ⚖️&lt;/li&gt; &#xA; &lt;li&gt;Sustainably aligned with users 🤲&lt;/li&gt; &#xA; &lt;li&gt;Wholly owned by the community 👪&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Try this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm use&#xA;$ nvm install&#xA;$ npm install -g yarn # if you don&#39;t have yarn globally installed&#xA;$ yarn install # install all dependencies; rerun with --ignore-scripts if&#xA;               # scrypt node-gyp failures prevent the install from completing&#xA;$ yarn start # start a continuous webpack build that will auto-update with changes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the build is running, you can install the extension in your browser of choice:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox/&#34;&gt;Firefox instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.chrome.com/docs/extensions/mv3/getstarted/#manifest&#34;&gt;Chrome, Brave, Edge, and Opera instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that these instructions are for Chrome, but substituting &lt;code&gt;brave://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt; or &lt;code&gt;opera://extensions&lt;/code&gt; for &lt;code&gt;chrome://extensions&lt;/code&gt; depending on browser should get you to the same buttons.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Extension bundles for each browser are in &lt;code&gt;dist/&amp;lt;browser&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;yarn start&lt;/code&gt; command rebuilds the extension for each browser on save. You can target a particular browser by specifying it in the command, e.g. to only rebuild the Firefox extension on change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# On change, rebuild the firefox extension but not others.&#xA;$ yarn start --config-name firefox&#xA;# On change, rebuild the firefox and brave extensions but not others.&#xA;$ yarn start --config-name firefox --config-name brave&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Note for some Linux distributions&lt;/h3&gt; &#xA;&lt;p&gt;In some Linux distributions such as Ubuntu 20.04, you need to explicitly tell npm where your &lt;code&gt;python3&lt;/code&gt; executable is located before running the above commands successfully:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm config set python /usr/bin/python3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Package Structure, Build Structure, and Threat Model&lt;/h2&gt; &#xA;&lt;p&gt;The extension is built as two packages, &lt;code&gt;background&lt;/code&gt; and &lt;code&gt;ui&lt;/code&gt;. &lt;code&gt;background&lt;/code&gt; contains the bulk of the extension&#39;s &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/background&#34;&gt;background script&lt;/a&gt;, while &lt;code&gt;ui&lt;/code&gt; contains the code powering extension popups.&lt;/p&gt; &#xA;&lt;p&gt;These are separate packages in order to emphasize the difference in attack surface and clearly separate the threat models of each. In particular, &lt;code&gt;ui&lt;/code&gt; is considered untrusted code, while &lt;code&gt;background&lt;/code&gt; is considered trusted code. Only &lt;code&gt;background&lt;/code&gt; should interact with key material regularly, while &lt;code&gt;ui&lt;/code&gt; should only interact with key material via a carefully maintained API.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;background&lt;/code&gt; package is also intended to minimize external dependencies where possible, reducing the surface exposed to a supply chain attack. Dependencies are generally version-pinned, and &lt;code&gt;yarn&lt;/code&gt; is used to ensure the integrity of builds.&lt;/p&gt; &#xA;&lt;h2&gt;Building and Developing&lt;/h2&gt; &#xA;&lt;p&gt;Builds are designed to be run from the top level of the repository.&lt;/p&gt; &#xA;&lt;h3&gt;Development Setup&lt;/h3&gt; &#xA;&lt;p&gt;If you’re on macOS, install Homebrew and run &lt;code&gt;scripts/macos-setup.sh&lt;/code&gt;. Note that if you don’t have Homebrew or you’re not on macOS, the below information details what you’ll need. The script additionally sets up pre-commit hooks.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./scripts/macos-setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Validators&lt;/h3&gt; &#xA;&lt;p&gt;If you need to create or update a validation function then:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to write the schema in the &lt;code&gt;.ts&lt;/code&gt; file to have correct typing.&lt;/li&gt; &#xA; &lt;li&gt;Add the new schema with the validator function name to the &lt;code&gt;generate-validators.ts&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;You need to update the &lt;code&gt;jtd-validators.d.ts&lt;/code&gt; or &lt;code&gt;json-validators.d.ts&lt;/code&gt; files with the typing definition&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;yarn run generate:validators&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;import it in your code and happy validating :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This setup is necessary so we don&#39;t need to include &lt;code&gt;unsafe-eval&lt;/code&gt; in the CSP policy.&lt;/p&gt; &#xA;&lt;h4&gt;Required Software&lt;/h4&gt; &#xA;&lt;p&gt;If you can&#39;t use the macOS setup script, here is the software you&#39;ll need to install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;jq&lt;/code&gt;: &lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm&lt;/code&gt;: &lt;a href=&#34;https://github.com/nvm-sh/nvm#installing-and-updating&#34;&gt;Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pre-commit&lt;/code&gt;: &lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;Instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing pre-commit hooks&lt;/h4&gt; &#xA;&lt;p&gt;Before committing code to this repository or a fork/branch that you intend to submit for inclusion, please make sure you&#39;ve installed the pre-commit hooks by running &lt;code&gt;pre-commit install&lt;/code&gt;. The macOS setup script does this for you.&lt;/p&gt; &#xA;&lt;h4&gt;Local mainnet fork setup for development&lt;/h4&gt; &#xA;&lt;p&gt;For more detailed description see &lt;code&gt;./dev-utils/local-chain/README.md&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quick Start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd dev-utils/local-chain&#xA;$ yarn install&#xA;$ yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commit signing&lt;/h3&gt; &#xA;&lt;p&gt;Commits on the Tally Ho repository are all required to be signed. No PR will be merged if it has unsigned commits. See the &lt;a href=&#34;https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification&#34;&gt;GitHub documentation on commit signing&lt;/a&gt; to get it set up.&lt;/p&gt; &#xA;&lt;h3&gt;Releasing a version&lt;/h3&gt; &#xA;&lt;p&gt;This repository uses &lt;code&gt;yarn version&lt;/code&gt; to create new versions. Typical usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn version --patch # bump patch version, e.g. 0.0.5-&amp;gt;0.0.6&#xA;$ yarn version --minor # bump minor version, e.g. 0.1.5-&amp;gt;0.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Major releases generally require more discussion than this automation allows, but can be managed the same way.&lt;/p&gt; &#xA;&lt;p&gt;Bumping a version in this way will do a few things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure the commit is running on the correct branch (&lt;code&gt;release-&amp;lt;new-version&amp;gt;&lt;/code&gt;) for review. If you are on a different branch, the script attempts to switch to a new branch based on the latest origin/main. Releases should generally only add version bumps to the main branch.&lt;/li&gt; &#xA; &lt;li&gt;Synchronize the extension manifest version to the updated package version.&lt;/li&gt; &#xA; &lt;li&gt;Commit, tag, and push the new version and branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once the branch is pushed, you should open a pull request. This will do any further processing, including potentially managing automated submission of the new version to extension directories (as relevant).&lt;/p&gt; &#xA;&lt;h3&gt;Additional Scripts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn build # create a production build of the extension&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The build script will generate a ZIP file for each browser bundle under the &lt;code&gt;dist/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn lint # lint all sources in all projects&#xA;$ yarn lint-fix # auto-fix any auto-fixable lint issues&#xA;$ yarn test # run all tests in all projects&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;A note on &lt;code&gt;git blame&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Because lint configurations can occasionally evolve in a way that hits many files in the repository at once and obscures the functional blame readout for files, this repository has a &lt;code&gt;.git-blame-ignore-revs&lt;/code&gt; file. This file can be used to run &lt;code&gt;git blame&lt;/code&gt; while skipping over the revisions it lists, as described in &lt;a href=&#34;https://www.git-scm.com/docs/git-blame#Documentation/git-blame.txt---ignore-revs-fileltfilegt&#34;&gt;the Pro Git book reference&lt;/a&gt; and &lt;a href=&#34;https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame&#34;&gt;this Moxio blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To make use of this, you can do one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;git config --global blame.ignoreRevsFile .git-blame-ignore-revs&lt;/code&gt; to configure git to globally look for such a file. The filename is relatively standard across projects, so this should save time for other projects that use a similar setup.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;git config blame.ignoreRevsFile .git-blame-ignore-revs&lt;/code&gt; to configure your local checkout to always ignore these files.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;--ignore-revs-file .git-blame-ignore-revs&lt;/code&gt; to your &lt;code&gt;git blame&lt;/code&gt; invocation to ignore the file one time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The GitHub UI does not yet ignore these commits, though there is a &lt;a href=&#34;https://github.community/t/support-ignore-revs-file-in-githubs-blame-view/3256&#34;&gt;community thread requesting the feature&lt;/a&gt;. In the meantime, the GitHub blame UI does allow you to zoom to the previous round of changes on a given line, which relieves much of the annoyance; see &lt;a href=&#34;https://docs.github.com/en/github/managing-files-in-a-repository/managing-files-on-github/tracking-changes-in-a-file&#34;&gt;the GitHub blame docs for more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Here is a light architecture diagram describing the relationship between services (in the API package) and the interface and browser notifications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────────────────────────────────────────────────┐&#xA;│                                                                                                     │&#xA;│   ____                  _                                                                           │&#xA;│  / ___|  ___ _ ____   _(_) ___ ___  ___                                                             │&#xA;│  \___ \ / _ \ &#39;__\ \ / / |/ __/ _ \/ __|                                       ┌────────────────────┼──┐&#xA;│   ___) |  __/ |   \ V /| | (_|  __/\__ \                                       │                    │  │&#xA;│  |____/ \___|_|    \_/ |_|\___\___||___/                                       │                    │  │   ┌─────────────────┐&#xA;│                                                                     Chain                           │  │   │External Services│&#xA;│                                                                     - Blocks      ━━━━━━━━━━━━┓     │  │   │                 │&#xA;│                 ┌────subscribe (incoming or outgoing tx status)───▶ - Transactions            ┃     │  │   │  Local node     │&#xA;│                 │                                                                             ┃     │  │   │                 │&#xA;│                 │                                                                             ┃     │  │   │  Alchemy        │&#xA;│                 │                                                                             ┃     │  ├───▶                 │&#xA;│                 │                                                    Indexing                 ┃     │  │   │  BlockNative    │&#xA;│                 │                                                    - Accounts               ┃     │  │   │                 │&#xA;│                 │                                                    - ERC-20 balances    ━━━━╋─────┼──┘   │  CoinGecko      │&#xA;│                 ├───subscribe (eg balance changes), get balances───▶ - ERC-721 ownership      ┃     │      │                 │&#xA;│                 │                                                    - Governance proposals   ┃     │      │                 │&#xA;│                 │                                                    - On-chain prices        ┃     │      └─────────────────┘&#xA;│                 │                                                                             ┃     │&#xA;│                 │                                                                             ┃     │      ┌────────────────┐&#xA;│                 │                                                   Keyring                   ┃     │      │                │&#xA;│                 ├──────list accounts, sign tx, sign message───────▶ - Native  ────────────────╋─────┼──────▶   Extension    │&#xA;│                 │                                                   - Remote                  ┃     │      │  Storage API   │&#xA;│      ┌──────────┴──────────┐                                                                  ┃     │      │                │&#xA;│      │                     │                                                                  ┃     │      └────────────────┘&#xA;│      │                     │                                                                  ┃     │&#xA;│      │     Wallet API      │──────┐                                 Preferences  ━━━━━━━━━━━━━┫     │&#xA;│      │                     │      │                                                           ┃     │      ┌────────────────┐&#xA;│      │                     │      │                                                           ┃     │      │                │&#xA;│      └──────────▲──────────┘      │                                 Notifications             ┃     │      │                │&#xA;│                 │                 │                                 - Ephemeral               ┣━━━━━╋━━━━━━▶   IndexedDB    │&#xA;│                 │                 └──────pull and subscribe───────▶ - Application      ━━━━━━━┛     │      │                │&#xA;│                 │                                                   - Security-critical             │      │                │&#xA;│             subscribe                                                          │                    │      └────────────────┘&#xA;│              and get                                                           │                    │&#xA;│                 │                                                              │                    │&#xA;│                 │                                                            push                   │&#xA;│                 │                                                              │                    │&#xA;└─────────────────▼──────────────────────────────────────────────────────────────┼────────────────────┘&#xA;┌──────────────────────────────────┐                             ┌───────────────▼───────────────┐&#xA;│                                  │                             │                               │&#xA;│                                  │                             │                               │&#xA;│         Wallet interface         │                             │     Browser notifications     │&#xA;│                                  │                             │                               │&#xA;│                                  │                             │                               │&#xA;└──────────────────────────────────┘                             └───────────────────────────────┘&#xA;                   ┌───────────────┐&#xA;                   │               │&#xA;                   │ Internal dApp │&#xA;                   │               │&#xA;                   └───────────────┘&#xA;                   ┌──────┐ ┌──────┐&#xA;                   │ Earn │ │ Swap │&#xA;                   └──────┘ └──────┘&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;File Structure&lt;/h2&gt; &#xA;&lt;p&gt;Extension content lives directly under the root directory alongside project-level configuration and utilities, including GitHub-specific functionality in &lt;code&gt;.github&lt;/code&gt;. Extension content should be minimal, and largely simply glue together UI and wallet code. Manifest information is managed in the &lt;code&gt;manifest/&lt;/code&gt; subdirectory as described below.&lt;/p&gt; &#xA;&lt;p&gt;Here is a light guide to the directory structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.github/ # GitHub-specific tooling&#xA;&#xA;package.json      # private extension package&#xA;webpack.config.js # Webpack build for extension&#xA;&#xA;src/ # extension source files&#xA;  background.js # entry file for the background extension script; should be&#xA;                # minimal and call in to @tallyho/tally-wallet&#xA;  ui.js         # entry file for the frontend UI; should be minimal and bind&#xA;                # the functionality in @tallyho/tally-ui&#xA;&#xA;dist/ # output directory for builds&#xA;  brave/   # browser-specific&#xA;  chrome/  # build&#xA;  edge/    # directories&#xA;  firefox/&#xA;  brave.zip  # browser-specific&#xA;  chrome.zip # production&#xA;  edge.zip   # bundles&#xA;  firefox.zip&#xA;&#xA;build-utils/ # build-related helpers, used in webpack.config.js&#xA;  *.js&#xA;dev-utils/          # dev-mode helpers for the extension&#xA;  extension-reload.js # LiveReload support for the extension.&#xA;manifest/         # extension manifest data&#xA;  manifest.json             # common manifest data for all browsers&#xA;  manifest.chrome.json      # manifest adjustments for Chrome&#xA;  manifest.dev.json         # manifest adjustments for dev environment&#xA;  manifest.firefox.dev.json # manifest adjustments for Firefox in dev&#xA;&#xA;background/ # @tallyho/tally-background package with trusted wallet core&#xA;  package.json&#xA;&#xA;ui/ # @tallyho/tally-ui package&#xA;  package.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Firefox store build&lt;/h2&gt; &#xA;&lt;p&gt;Firefox requires to upload source code if minifier is used and to be able to compile identical output to the uploaded package. Our builds are environment dependent at the moment because of the minification and source map process. Long term solution will be to upgrade our build process to be able to produce identical file assets, but until then we use Docker.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install and setup docker: &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;git clone &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:tallycash/extension.git tallyho-firefox&lt;/li&gt; &#xA; &lt;li&gt;cd tallyho-firefox&lt;/li&gt; &#xA; &lt;li&gt;git checkout tags/latest_release-tag&lt;/li&gt; &#xA; &lt;li&gt;.env.prod: fill in the prod API keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./firefox-build.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;mv firefox.zip ../&lt;/li&gt; &#xA; &lt;li&gt;git clean -fdx&lt;/li&gt; &#xA; &lt;li&gt;rm -rf .git&lt;/li&gt; &#xA; &lt;li&gt;cd ..&lt;/li&gt; &#xA; &lt;li&gt;zip -r tallyho-firefox.zip tallyho-firefox&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;Tally currently only supports English as the default language. We distill english strings to &lt;a href=&#34;https://github.com/tallycash/extension/raw/main/ui/_locales/en/messages.json&#34;&gt;_locales&lt;/a&gt; to prepare for localization.&lt;/p&gt; &#xA;&lt;p&gt;For other languages, we will use language code defined in &lt;a href=&#34;https://developer.chrome.com/docs/webstore/i18n/#choosing-locales-to-support&#34;&gt;Support locales&lt;/a&gt;. We will use &lt;a href=&#34;https://hosted.weblate.org/projects/tallycash/extension/&#34;&gt;weblate&lt;/a&gt; for crowd translation, and will commit back to the github periodically after these translations are QA&#39;ed.&lt;/p&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/tallycash/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/tallycash/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>