<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-18T01:24:32Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hustvl/4DGaussians</title>
    <updated>2023-10-18T01:24:32Z</updated>
    <id>tag:github.com,2023-10-18:/hustvl/4DGaussians</id>
    <link href="https://github.com/hustvl/4DGaussians" rel="alternate"></link>
    <summary type="html">&lt;p&gt;4D Gaussian Splatting for Real-Time Dynamic Scene Rendering&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;4D Gaussian Splatting for Real-Time Dynamic Scene Rendering&lt;/h1&gt; &#xA;&lt;h2&gt;arXiv Preprint&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://guanjunwu.github.io/4dgs/index.html&#34;&gt;Project Page&lt;/a&gt;| &lt;a href=&#34;https://arxiv.org/abs/2310.08528&#34;&gt;arXiv Paper&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://guanjunwu.github.io/&#34;&gt;Guanjun Wu&lt;/a&gt;&lt;sup&gt;1*&lt;/sup&gt;, &lt;a href=&#34;https://github.com/taoranyi&#34;&gt;Taoran Yi&lt;/a&gt;&lt;sup&gt;2*&lt;/sup&gt;, &lt;a href=&#34;https://jaminfong.cn/&#34;&gt;Jiemin Fang&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt;, &lt;a href=&#34;http://lingxixie.com/&#34;&gt;Lingxi Xie&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt;, &lt;br&gt;&lt;a href=&#34;https://scholar.google.com/citations?user=Ud6aBAcAAAAJ&amp;amp;hl=zh-CN&#34;&gt;Xiaopeng Zhang&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt;, &lt;a href=&#34;https://www.eric-weiwei.com/&#34;&gt;Wei Wei&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt;,&lt;a href=&#34;http://eic.hust.edu.cn/professor/liuwenyu/&#34;&gt;Wenyu Liu&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt;, &lt;a href=&#34;https://www.qitian1987.com/&#34;&gt;Qi Tian&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt; , &lt;a href=&#34;https://xwcv.github.io&#34;&gt;Xinggang Wang&lt;/a&gt;&lt;sup&gt;2✉&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;School of CS, HUST   &lt;sup&gt;2&lt;/sup&gt;School of EIC, HUST   &lt;sup&gt;3&lt;/sup&gt;Huawei Inc.  &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hustvl/4DGaussians/master/assets/teaserfig.png&#34; alt=&#34;block&#34;&gt;&lt;br&gt; Our method converges very quickly and achieves real-time rendering speed.&lt;/p&gt; &#xA;&lt;p&gt;Colab demo:&lt;a href=&#34;https://colab.research.google.com/github/camenduru/4DGaussians-colab/blob/main/4DGaussians_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; (Thanks &lt;a href=&#34;https://github.com/camenduru/4DGaussians-colab&#34;&gt;camenduru&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;video width=&#34;320&#34; height=&#34;240&#34; controls&gt; &#xA; &lt;sourc src=&#34;assets/teaservideo.mp4&#34; type=&#34;video/mp4&#34;&gt; &#xA; &lt;/sourc&gt;&#xA;&lt;/video&gt; &#xA;&lt;video width=&#34;320&#34; height=&#34;240&#34; controls&gt; &#xA; &lt;source src=&#34;assets/cut_roasted_beef_time.mp4&#34; type=&#34;video/mp4&#34;&gt; &#xA;&lt;/video&gt; &#xA;&lt;h2&gt;Environmental Setups&lt;/h2&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;3D-GS&lt;/a&gt; to install the relative packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/hustvl/4DGaussians&#xA;cd 4DGaussians&#xA;git submodule update --init --recursive&#xA;conda create -n Gaussians4D python=3.7 &#xA;conda activate Gaussians4D&#xA;&#xA;pip install -r requirements.txt&#xA;pip install -e submodules/depth-diff-gaussian-rasterization&#xA;pip install -e submodules/simple-knn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In our environment, we use pytorch=1.13.1+cu116.&lt;/p&gt; &#xA;&lt;h2&gt;Data Preparation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;For synthetic scenes:&lt;/strong&gt;&lt;br&gt; The dataset provided in &lt;a href=&#34;https://github.com/albertpumarola/D-NeRF&#34;&gt;D-NeRF&lt;/a&gt; is used. You can download the dataset from &lt;a href=&#34;https://www.dropbox.com/s/0bf6fl0ye2vz3vr/data.zip?dl=0&#34;&gt;dropbox&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For real dynamic scenes:&lt;/strong&gt;&lt;br&gt; The dataset provided in &lt;a href=&#34;https://github.com/google/hypernerf&#34;&gt;HyperNeRF&lt;/a&gt; is used. You can download scenes from &lt;a href=&#34;https://github.com/google/hypernerf/releases/tag/v0.1&#34;&gt;Hypernerf Dataset&lt;/a&gt; and organize them as &lt;a href=&#34;https://github.com/google/nerfies#datasets&#34;&gt;Nerfies&lt;/a&gt;. Meanwhile, &lt;a href=&#34;https://github.com/facebookresearch/Neural_3D_Video&#34;&gt;Plenoptic Dataset&lt;/a&gt; could be downloaded from their official websites. To save the memory, you should extract the frames of each video and then organize your dataset as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── data&#xA;│   | dnerf &#xA;│     ├── mutant&#xA;│     ├── standup &#xA;│     ├── ...&#xA;│   | hypernerf&#xA;│     ├── interp&#xA;│     ├── misc&#xA;│     ├── virg&#xA;│   | dynerf&#xA;│     ├── cook_spinach&#xA;│       ├── cam00&#xA;│           ├── images&#xA;│               ├── 0000.png&#xA;│               ├── 0001.png&#xA;│               ├── 0002.png&#xA;│               ├── ...&#xA;│       ├── cam01&#xA;│           ├── images&#xA;│               ├── 0000.png&#xA;│               ├── 0001.png&#xA;│               ├── ...&#xA;│     ├── cut_roasted_beef&#xA;|     ├── ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;For training synthetic scenes such as &lt;code&gt;lego&lt;/code&gt;, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python train.py -s data/dnerf/bouncingballs --port 6017 --expname &#34;dnerf/bouncingballs&#34; --configs arguments/dnerf/bouncingballs.py &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can customize your training config through the config files.&lt;/p&gt; &#xA;&lt;h2&gt;Rendering&lt;/h2&gt; &#xA;&lt;p&gt;Run the following script to render the images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python render.py --model_path &#34;output/dnerf/bouncingballs/&#34;  --skip_train --configs arguments/dnerf/bouncingballs.py  &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Evaluation&lt;/h2&gt; &#xA;&lt;p&gt;You can just run the following script to evaluate the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python metrics.py --model_path &#34;output/dnerf/bouncingballs/&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;There are some helpful scripts in &lt;code&gt;scripts/&lt;/code&gt;, please feel free to use them.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Some source code of ours is borrowed from&amp;nbsp;&lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;3DGS&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://github.com/Giodiro/kplanes_nerfstudio&#34;&gt;k-planes&lt;/a&gt;,&lt;a href=&#34;https://github.com/Caoang327/HexPlane&#34;&gt;HexPlane&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://github.com/hustvl/TiNeuVox&#34;&gt;TiNeuVox&lt;/a&gt;. We sincerely appreciate the excellent works of these authors.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We would like to express our sincere gratitude to @zhouzhenghong-gt for his revisions to our code and discussions on the content of our paper.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this repository/work helpful in your research, welcome to cite the paper and give a ⭐.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{wu20234dgaussians,&#xA;  title={4D Gaussian Splatting for Real-Time Dynamic Scene Rendering},&#xA;  author={Wu, Guanjun and Yi, Taoran and Fang, Jiemin and Xie, Lingxi and Zhang, Xiaopeng and Wei Wei and Liu, Wenyu and Tian, Qi and Wang Xinggang},&#xA;  journal={arXiv preprint arXiv:2310.08528},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>omnivore-app/omnivore</title>
    <updated>2023-10-18T01:24:32Z</updated>
    <id>tag:github.com,2023-10-18:/omnivore-app/omnivore</id>
    <link href="https://github.com/omnivore-app/omnivore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Omnivore is a complete, open source read-it-later solution for people who like reading.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Omnivore&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/omnivore-app/omnivore/actions/workflows/run-tests.yaml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/omnivore-app/omnivore/Run%20tests&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/h2z5rppzz9&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/844965259462311966?label=Join%20our%20Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkm.social/@omnivore&#34;&gt;&lt;img src=&#34;https://img.shields.io/mastodon/follow/109458738600914558?domain=https%3A%2F%2Fpkm.social&#34; alt=&#34;Mastodon Follow&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/OmnivoreApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/omnivoreapp&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/omnivore-app/omnivore&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://avatars.githubusercontent.com/u/70113176?s=400&amp;amp;u=506b21d9f019f3160963c010ef363667fb24c7c9&amp;amp;v=4&#34; height=&#34;150px&#34; alt=&#34;Omnivore Logo&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://omnivore.app&#34;&gt;Omnivore&lt;/a&gt; is a complete, open source read-it-later solution for people who like text.&lt;/p&gt; &#xA;&lt;p&gt;We built Omnivore because we love reading and we want it to be more social. Join us!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Highlighting, notes, search, and sharing&lt;/li&gt; &#xA; &lt;li&gt;Full keyboard navigation&lt;/li&gt; &#xA; &lt;li&gt;Automatically saves your place in long articles&lt;/li&gt; &#xA; &lt;li&gt;Add newsletter articles via email (with substack support!)&lt;/li&gt; &#xA; &lt;li&gt;PDF support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/&#34;&gt;Web app&lt;/a&gt; written in Node.js and TypeScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/install/ios&#34;&gt;Native iOS app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/install/android&#34;&gt;Android app&lt;/a&gt; (&lt;a href=&#34;https://github.com/omnivore-app/omnivore/tree/main/android/Omnivore&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Progressive web app for Android users&lt;/li&gt; &#xA; &lt;li&gt;Browser extensions for &lt;a href=&#34;https://omnivore.app/install/chrome&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;https://omnivore.app/install/safari&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;https://omnivore.app/install/firefox&#34;&gt;Firefox&lt;/a&gt;, and &lt;a href=&#34;https://omnivore.app/install/edge&#34;&gt;Edge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Labels (aka tagging)&lt;/li&gt; &#xA; &lt;li&gt;Offline support&lt;/li&gt; &#xA; &lt;li&gt;Text to speech (iOS only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://logseq.com/&#34;&gt;Logseq&lt;/a&gt; support via our &lt;a href=&#34;https://github.com/omnivore-app/logseq-omnivore&#34;&gt;Logseq Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; support via our &lt;a href=&#34;https://github.com/omnivore-app/obsidian-omnivore&#34;&gt;Obsidian Plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Every single part is fully open source! Fork it, extend it, or deploy it to your own server.&lt;/p&gt; &#xA;&lt;p&gt;We also have a free hosted version of Omnivore at &lt;a href=&#34;https://omnivore.app/&#34;&gt;omnivore.app&lt;/a&gt; -- try it now!&lt;/p&gt; &#xA;&lt;img width=&#34;981&#34; alt=&#34;web-screenshot-listview&#34; src=&#34;https://github.com/omnivore-app/omnivore/assets/75189/df7c797a-4255-42f4-a686-ad94866cb580&#34;&gt; &#xA;&lt;h2&gt;Join us on Discord! &lt;span&gt;💬&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re building our community on Discord. &lt;a href=&#34;https://discord.gg/h2z5rppzz9&#34;&gt;Join us!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about Omnivore on our blog. &lt;a href=&#34;https://blog.omnivore.app/p/getting-started-with-omnivore&#34;&gt;https://blog.omnivore.app/p/getting-started-with-omnivore&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shoutouts &lt;span&gt;🎉&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore takes advantage of some great open source software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; - Most of our backend and frontend are written in TypeScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; - Our frontend is a Next.JS app and is hosted on &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swr.vercel.app/&#34;&gt;SWR&lt;/a&gt; - We do all our data fetching on the web using SWR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stitches.dev/&#34;&gt;Stitches&lt;/a&gt; - We use Stitches on the frontend to style our components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/readability&#34;&gt;Mozilla Readability&lt;/a&gt; - We use Mozilla&#39;s Readability library to make pages easier to read.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.swift-graphql.com/&#34;&gt;Swift GraphQL&lt;/a&gt; - We generate our GraphQL queries on iOS using Swift GraphQL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.radix-ui.com/&#34;&gt;Radix&lt;/a&gt; - We use Radix UI&#39;s components on our frontend.&lt;/li&gt; &#xA; &lt;li&gt;And many more awesome libraries, just checkout our package files to see what we are using.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Importing Libraries&lt;/h2&gt; &#xA;&lt;p&gt;If you have a library you&#39;d like to import, &lt;a href=&#34;https://github.com/davidohlin&#34;&gt;@davidohlin&lt;/a&gt; has created a tool that imports a list of CSV URLs: &lt;a href=&#34;https://github.com/davidohlin/instapaper-to-omnivore-import&#34;&gt;omnivore-import&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to setup local development &lt;span&gt;💻&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started with local development is to use &lt;code&gt;docker compose up&lt;/code&gt;. This will start a postgres container, our web frontend, an API server, and our content fetching microservice.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements for development&lt;/h3&gt; &#xA;&lt;p&gt;Omnivore is written in TypeScript and JavaScript.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt; -- currently we are using Node.js v14.18&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chromium.org/chromium-projects/&#34;&gt;Chromium&lt;/a&gt; -- see below for installation info&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the web and API services&lt;/h3&gt; &#xA;&lt;h3&gt;1. Start docker compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/omnivore-app/omnivore&#xA;cd omnivore&#xA;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start postgres, initialize the database, and start the web and api services.&lt;/p&gt; &#xA;&lt;h3&gt;2. Open the browser&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; and confirm Omnivore is running&lt;/p&gt; &#xA;&lt;h3&gt;3. Login with the test account&lt;/h3&gt; &#xA;&lt;p&gt;During database setup docker compose creates an account &lt;code&gt;demo@omnivore.app&lt;/code&gt;, password: &lt;code&gt;demo_password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; in your browser and choose &lt;code&gt;Continue with Email&lt;/code&gt; to login.&lt;/p&gt; &#xA;&lt;h3&gt;Frontend Development&lt;/h3&gt; &#xA;&lt;p&gt;If you want to work on just the frontend of Omnivore you can run the backend services with docker compose and the frontend locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up api content-fetch&#xA;cd packages/web&#xA;cp .env.template .env&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the puppeteer-parse service outside of Docker&lt;/h3&gt; &#xA;&lt;p&gt;To save pages you need to run the &lt;code&gt;puppeteer-parse&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;h3&gt;1. Install and configure Chromium&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install chromium --no-quarantine&#xA;export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true&#xA;export CHROMIUM_PATH=`which chromium`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Navigate to the service directory, setup your env file, and install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd packages/puppeteer-parse&#xA;cp .env.example .env&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start the service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the puppeteer-parse service on port 9090.&lt;/p&gt; &#xA;&lt;p&gt;In your browser go to &lt;a href=&#34;http://localhost:3000/home&#34;&gt;http://localhost:3000/home&lt;/a&gt;, click the &lt;code&gt;Add Link&lt;/code&gt; button, and enter a URL such as &lt;code&gt;https://blog.omnivore.app/p/getting-started-with-omnivore&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should see a Chromium window open and navigate to your link. When the service is done fetching your content you will see it in your library.&lt;/p&gt; &#xA;&lt;h2&gt;How to deploy to your own server&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore was originally designed to be deployed on GCP and takes advantage of some of GCP&#39;s PaaS features. We are working to make Omnivore more portable so you can easily run the service on your own infrastructure. You can track progress here: &lt;a href=&#34;https://github.com/omnivore-app/omnivore/issues/25&#34;&gt;https://github.com/omnivore-app/omnivore/issues/25&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To deploy Omnivore on your own hardware you will need to deploy three dockerized services and configure access to a postgres service. To handle PDF documents you will need to configure access to a Google Cloud Storage bucket.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/api&lt;/code&gt; - the backend API service&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/web&lt;/code&gt; - the web frontend (can easily be deployed to vercel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/puppeteer-parse&lt;/code&gt; - the content fetching service (can easily be deployed as an AWS lambda or GCP Cloud Function)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, you will need to run our database migrations to initialize your database. These are dockerized and can be run with the &lt;code&gt;packages/db&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore and our extensions to Readability.js are under the AGPL-3.0 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FreeTubeApp/FreeTube</title>
    <updated>2023-10-18T01:24:32Z</updated>
    <id>tag:github.com,2023-10-18:/FreeTubeApp/FreeTube</id>
    <link href="https://github.com/FreeTubeApp/FreeTube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://docs.freetubeapp.io/images/logoColor.png&#34; width=&#34;500&#34; align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows, Mac &amp;amp; Linux thanks to Electron.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/releases&#34;&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml&#34;&gt; &lt;img alt=&#34;Build status&#34; src=&#34;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/free-tube/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#screenshots&#34;&gt;Screenshots&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#how-does-it-work&#34;&gt;How does it work?&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#download-links&#34;&gt;Download Links&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contributing&#34;&gt;Contributing&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#localization&#34;&gt;Localization&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contact&#34;&gt;Contact&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#donate&#34;&gt;Donate&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#license&#34;&gt;License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://freetubeapp.io/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://blog.freetubeapp.io/&#34;&gt;Blog&lt;/a&gt; • &lt;a href=&#34;https://docs.freetubeapp.io/&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://docs.freetubeapp.io/faq/&#34;&gt;FAQ&lt;/a&gt; • &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;b&gt;Please note that FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed. If you have an idea or if you found a bug, please submit a &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/issues/new/choose&#34;&gt;GitHub issue&lt;/a&gt; so that we can track it. Please search &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/issues&#34;&gt;the existing issues&lt;/a&gt; before submitting to prevent duplicates!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/zFgZUUV.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://i.imgur.com/9evYHgN.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://i.imgur.com/yT2UzPa.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://i.imgur.com/47zIEt4.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://i.imgur.com/hFB2fKC.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href=&#34;https://github.com/iv-org/invidious&#34;&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions and history are stored locally on your computer and never sent out. Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Watch videos without ads&lt;/li&gt; &#xA; &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; &#xA; &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; &#xA; &lt;li&gt;Connect to an externally setup proxy such as Tor&lt;/li&gt; &#xA; &lt;li&gt;View and search your local subscriptions, history, and saved videos&lt;/li&gt; &#xA; &lt;li&gt;Organize your subscriptions into &#34;Profiles&#34; to create a more focused feed&lt;/li&gt; &#xA; &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; &#xA; &lt;li&gt;Youtube Trending&lt;/li&gt; &#xA; &lt;li&gt;Youtube Chapters&lt;/li&gt; &#xA; &lt;li&gt;Most popular videos page based on the set Invidious instance&lt;/li&gt; &#xA; &lt;li&gt;SponsorBlock&lt;/li&gt; &#xA; &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; &#xA; &lt;li&gt;Watch videos using an external player&lt;/li&gt; &#xA; &lt;li&gt;Full Theme support&lt;/li&gt; &#xA; &lt;li&gt;Make a screenshot of a video&lt;/li&gt; &#xA; &lt;li&gt;Multiple windows&lt;/li&gt; &#xA; &lt;li&gt;Mini Player (Picture-in-Picture)&lt;/li&gt; &#xA; &lt;li&gt;Keyboard shortcuts&lt;/li&gt; &#xA; &lt;li&gt;Option to show only family friendly content&lt;/li&gt; &#xA; &lt;li&gt;Show/hide functionality or elements within the app using the distraction free settings&lt;/li&gt; &#xA; &lt;li&gt;View channel community posts&lt;/li&gt; &#xA; &lt;li&gt;View most age restricted videos&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Browser Extension&lt;/h3&gt; &#xA;&lt;p&gt;FreeTube is supported by the &lt;a href=&#34;https://github.com/SimonBrazell/privacy-redirect&#34;&gt;Privacy Redirect&lt;/a&gt; and &lt;a href=&#34;https://github.com/libredirect/libredirect&#34;&gt;LibRedirect&lt;/a&gt; extensions, which will allow you to open YouTube links into FreeTube. You must enable the option within the advanced settings of the extension for it to work.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download Privacy Redirect for &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/privacy-redirect/&#34;&gt;Firefox&lt;/a&gt; or &lt;a href=&#34;https://chrome.google.com/webstore/detail/privacy-redirect/pmcmeagblkinmogikoikkdjiligflglb&#34;&gt;Google Chrome&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download LibRedirect for &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/libredirect/&#34;&gt;Firefox&lt;/a&gt; or &lt;a href=&#34;https://libredirect.github.io/download_chromium.html&#34;&gt;Google Chrome&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository. This extension does not work on Linux portable builds!&lt;/p&gt; &#xA;&lt;h2&gt;Download Links&lt;/h2&gt; &#xA;&lt;h3&gt;Official Downloads&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/releases&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://freetubeapp.io/#download&#34;&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flatpak on Flathub: &lt;a href=&#34;https://flathub.org/apps/details/io.freetubeapp.FreeTube&#34;&gt;Download&lt;/a&gt; and &lt;a href=&#34;https://github.com/flathub/io.freetubeapp.FreeTube&#34;&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Automated Builds (Nightly / Weekly)&lt;/h4&gt; &#xA;&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild&#34;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The first build with a green check mark is the latest build. You will need to have a GitHub account to download these builds.&lt;/p&gt; &#xA;&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; &#xA;&lt;p&gt;These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. &lt;b&gt;Make sure u always try an &lt;a href=&#34;https://github.com/freetubeapp/freetube/#official-downloads&#34;&gt;official download&lt;/a&gt; before reporting your issue to us!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Arch User Repository (AUR): &lt;a href=&#34;https://aur.archlinux.org/packages/freetube-bin/&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Chocolatey: &lt;a href=&#34;https://chocolatey.org/packages/freetube/&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;FreeTubeCordova (FreeTube port for Android and PWA): &lt;a href=&#34;https://github.com/MarmadileManteater/FreeTubeCordova/releases&#34;&gt;Download&lt;/a&gt; and &lt;a href=&#34;https://github.com/MarmadileManteater/FreeTubeCordova&#34;&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;makedeb Package Repository (MPR): &lt;a href=&#34;https://mpr.makedeb.org/packages/freetube-bin&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nix Packages: &lt;a href=&#34;https://search.nixos.org/packages?query=freetube&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PortableApps (Windows Only): &lt;a href=&#34;https://github.com/rddim/FreeTubePortable/releases&#34;&gt;Download&lt;/a&gt; and &lt;a href=&#34;https://github.com/rddim/FreeTubePortable&#34;&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scoop (Windows Only): &lt;a href=&#34;https://github.com/ScoopInstaller/Scoop&#34;&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Snap: &lt;a href=&#34;https://snapcraft.io/freetube&#34;&gt;Download&lt;/a&gt; and &lt;a href=&#34;https://git.launchpad.net/freetube&#34;&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows Package Manager (winget): &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/package-manager/winget/&#34;&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code. Please follow the &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/raw/development/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; &#xA;&lt;p&gt;Thank you very much to the &lt;a href=&#34;https://docs.freetubeapp.io/credits/&#34;&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/free-tube/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;We are actively looking for translations! We use &lt;a href=&#34;https://hosted.weblate.org/engage/free-tube/&#34;&gt;Weblate&lt;/a&gt; to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; &#xA;&lt;p&gt;For the Linux Flatpak, the desktop entry comment string can be translated at our &lt;a href=&#34;https://github.com/flathub/io.freetubeapp.FreeTube/raw/master/io.freetubeapp.FreeTube.desktop&#34;&gt;Flatpak repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you ever have any questions, feel free to ask it on our &lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube/discussions&#34;&gt;Discussions&lt;/a&gt; page. Alternatively, you can email us at &lt;a href=&#34;mailto:FreeTubeApp@protonmail.com&#34;&gt;FreeTubeApp@protonmail.com&lt;/a&gt; or you can join our &lt;a href=&#34;https://matrix.to/#/+freetube:matrix.org&#34;&gt;Matrix Community&lt;/a&gt;. Don&#39;t forget to check out the &lt;a href=&#34;https://docs.freetubeapp.io/community/matrix/&#34;&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy using FreeTube, you&#39;re welcome to leave a donation using the following methods.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://liberapay.com/FreeTube&#34;&gt;FreeTube on Liberapay&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bitcoin Address: &lt;code&gt;1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Monero Address: &lt;code&gt;48WyAPdjwc6VokeXACxSZCFeKEXBiYPV6GjfvBsfg4CrUJ95LLCQSfpM9pvNKy5GE5H4hNaw99P8RZyzmaU9kb1pD7kzhCB&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs. If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the &lt;a href=&#34;https://invidious.io/donate/&#34;&gt;Invidious team&lt;/a&gt; or the &lt;a href=&#34;https://github.com/sponsors/LuanRT&#34;&gt;Local API developer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;&lt;img src=&#34;https://www.gnu.org/graphics/agplv3-155x51.png&#34; alt=&#34;GNU AGPLv3 Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</summary>
  </entry>
</feed>