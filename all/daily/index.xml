<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-17T01:28:47Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MervinPraison/PraisonAI</title>
    <updated>2024-07-17T01:28:47Z</updated>
    <id>tag:github.com,2024-07-17:/MervinPraison/PraisonAI</id>
    <link href="https://github.com/MervinPraison/PraisonAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PraisonAI application combines AutoGen and CrewAI or similar frameworks into a low-code solution for building and managing multi-agent LLM systems, focusing on simplicity, customisation, and efficient human-agent collaboration.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/images/praisonai-logo-large.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;docs/images/praisonai-logo-black-large.png&#34;&gt; &#xA;  &lt;img alt=&#34;PraisonAI Logo&#34; src=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/docs/images/praisonai-logo-black-large.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Praison AI&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Praison AI, leveraging both AutoGen and CrewAI or any other agent framework, represents a low-code, centralised framework designed to simplify the creation and orchestration of multi-agent systems for various LLM applications, emphasizing ease of use, customization, and human-agent interaction.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Cookbook&lt;/th&gt; &#xA;   &lt;th&gt;Open in Colab&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Basic&lt;/td&gt; &#xA;   &lt;td&gt;PraisonAI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://colab.research.google.com/github/MervinPraison/PraisonAI/blob/main/cookbooks/praisonai-googlecolab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Include Tools&lt;/td&gt; &#xA;   &lt;td&gt;PraisonAI Tools&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://colab.research.google.com/github/MervinPraison/PraisonAI/blob/main/cookbooks/praisonai-tools-googlecolab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;TL;DR&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;praisonai --init create a movie script about dog in moon&#xA;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#initialise&#34;&gt;Initialise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#run&#34;&gt;Run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#full-automatic-mode&#34;&gt;Full Automatic Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#user-interface&#34;&gt;User Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#praison-ai-chat&#34;&gt;Praison AI Chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#create-custom-tools&#34;&gt;Create Custom Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#agents-playbook&#34;&gt;Agents Playbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#include-praisonai-package-in-your-project&#34;&gt;Include praisonai package in your project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#commands-to-install-dependencies&#34;&gt;Commands to Install Dev Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#other-models&#34;&gt;Other Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Initialise&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate your OPENAI API KEY from here: &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;https://platform.openai.com/api-keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: You can use other providers such as Ollama, Mistral ... etc. Details are provided at the bottom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --init create a movie script about dog in moon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create agents.yaml file in the current directory.&lt;/p&gt; &#xA;&lt;h3&gt;To initialse with a specific agent framework (Optional):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --framework autogen --init create movie script about cat in mars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the agent framework (Optional):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --framework autogen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full Automatic Mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --auto create a movie script about Dog in Moon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Interface&lt;/h2&gt; &#xA;&lt;h2&gt;PraisonAI User Interfaces:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Interface&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;UI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi Agents such as CrewAI or AutoGen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/ui&#34;&gt;https://docs.praisonai.com/ui/ui&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with 100+ LLMs, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/chat&#34;&gt;https://docs.praisonai.com/ui/chat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with entire Codebase, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/code&#34;&gt;https://docs.praisonai.com/ui/code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U &#34;praisonai[ui]&#34;&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;chainlit create-secret&#xA;export CHAINLIT_AUTH_SECRET=xxxxxxxx&#xA;praisonai ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m praisonai ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Praison AI Chat&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/chat/&#34;&gt;https://docs.praison.ai/chat/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;praisonai[chat]&#34;&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;praisonai chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create Custom Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/tools/custom/&#34;&gt;https://docs.praison.ai/tools/custom/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: Pre-requisite to Create a Custom Tool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;agents.yaml&lt;/code&gt; file should be present in the current directory.&lt;/p&gt; &#xA;&lt;p&gt;If it doesn&#39;t exist, create it by running the command &lt;code&gt;praisonai --init research about the latest AI News and prepare a detailed report&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: to Create a Custom Tool&lt;/h3&gt; &#xA;&lt;p&gt;Create a file called tools.py in the same directory as the agents.yaml file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# example tools.py&#xA;from duckduckgo_search import DDGS&#xA;from praisonai_tools import BaseTool&#xA;&#xA;class InternetSearchTool(BaseTool):&#xA;    name: str = &#34;InternetSearchTool&#34;&#xA;    description: str = &#34;Search Internet for relevant information based on a query or latest news&#34;&#xA;&#xA;    def _run(self, query: str):&#xA;        ddgs = DDGS()&#xA;        results = ddgs.text(keywords=query, region=&#39;wt-wt&#39;, safesearch=&#39;moderate&#39;, max_results=5)&#xA;        return results&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: to Create a Custom Tool&lt;/h3&gt; &#xA;&lt;p&gt;Add the tool to the agents.yaml file as show below under the tools section &lt;code&gt;- InternetSearchTool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;framework: crewai&#xA;topic: research about the latest AI News and prepare a detailed report&#xA;roles:&#xA;  research_analyst:&#xA;    backstory: Experienced in gathering and analyzing data related to AI news trends.&#xA;    goal: Analyze AI News trends&#xA;    role: Research Analyst&#xA;    tasks:&#xA;      gather_data:&#xA;        description: Conduct in-depth research on the latest AI News trends from reputable&#xA;          sources.&#xA;        expected_output: Comprehensive report on current AI News trends.&#xA;    tools:&#xA;    - InternetSearchTool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Agents Playbook&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Playbook Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;framework: crewai&#xA;topic: Artificial Intelligence&#xA;roles:&#xA;  screenwriter:&#xA;    backstory: &#39;Skilled in crafting scripts with engaging dialogue about {topic}.&#39;&#xA;    goal: Create scripts from concepts.&#xA;    role: Screenwriter&#xA;    tasks:&#xA;      scriptwriting_task:&#xA;        description: &#39;Develop scripts with compelling characters and dialogue about {topic}.&#39;&#xA;        expected_output: &#39;Complete script ready for production.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use 100+ Models&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/models/&#34;&gt;https://docs.praison.ai/models/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Include praisonai package in your project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/developers/wrapper&#34;&gt;https://docs.praison.ai/developers/wrapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/developers/wrapper-tools/&#34;&gt;https://docs.praison.ai/developers/wrapper-tools/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Option 1: Using RAW YAML&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from praisonai import PraisonAI&#xA;&#xA;# Example agent_yaml content&#xA;agent_yaml = &#34;&#34;&#34;&#xA;framework: &#34;crewai&#34;&#xA;topic: &#34;Space Exploration&#34;&#xA;&#xA;roles:&#xA;  astronomer:&#xA;    role: &#34;Space Researcher&#34;&#xA;    goal: &#34;Discover new insights about {topic}&#34;&#xA;    backstory: &#34;You are a curious and dedicated astronomer with a passion for unraveling the mysteries of the cosmos.&#34;&#xA;    tasks:&#xA;      investigate_exoplanets:&#xA;        description: &#34;Research and compile information about exoplanets discovered in the last decade.&#34;&#xA;        expected_output: &#34;A summarized report on exoplanet discoveries, including their size, potential habitability, and distance from Earth.&#34;&#xA;&#34;&#34;&#34;&#xA;&#xA;# Create a PraisonAI instance with the agent_yaml content&#xA;praisonai = PraisonAI(agent_yaml=agent_yaml)&#xA;&#xA;# Run PraisonAI&#xA;result = praisonai.run()&#xA;&#xA;# Print the result&#xA;print(result)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Option 2: Using separate agents.yaml file&lt;/h2&gt; &#xA;&lt;p&gt;Note: Please create agents.yaml file before hand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from praisonai import PraisonAI&#xA;&#xA;def basic(): # Basic Mode&#xA;    praisonai = PraisonAI(agent_file=&#34;agents.yaml&#34;)&#xA;    praisonai.run()&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    basic()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands to Install Dependencies:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install all dependencies, including dev dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install only documentation dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;poetry install --with docs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install only test dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;poetry install --with test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install only dev dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;poetry install --with dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This configuration ensures that your development dependencies are correctly categorized and installed as needed.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork on GitHub: Use the &#34;Fork&#34; button on the repository page.&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork: &lt;code&gt;git clone https://github.com/yourusername/praisonAI.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a branch: &lt;code&gt;git checkout -b new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make changes and commit: &lt;code&gt;git commit -am &#34;Add some feature&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push to your fork: &lt;code&gt;git push origin new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request via GitHub&#39;s web interface.&lt;/li&gt; &#xA; &lt;li&gt;Await feedback from project maintainers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.praison.ai&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=MervinPraison/PraisonAI&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaddlePaddle/Paddle</title>
    <updated>2024-07-17T01:28:47Z</updated>
    <id>tag:github.com,2024-07-17:/PaddlePaddle/Paddle</id>
    <link href="https://github.com/PaddlePaddle/Paddle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PArallel Distributed Deep LEarning: Machine Learning Framework from Industrial Practice （『飞桨』核心框架，深度学习&amp;机器学习高性能单机、分布式训练和跨平台部署）&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/doc/imgs/logo.png&#34; , width=&#34;1600&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/README_cn.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/README_ja.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/zh/guides/index_cn.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E6%9C%80%E6%96%B0-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/PaddlePaddle/Paddle.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/PaddlePaddle&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1ca0f1.svg?logo=twitter&amp;amp;logoColor=white&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the PaddlePaddle GitHub.&lt;/p&gt; &#xA;&lt;p&gt;PaddlePaddle, as the first independent R&amp;amp;D deep learning platform in China, has been officially open-sourced to professional communities since 2016. It is an industrial platform with advanced technologies and rich features that cover core deep learning frameworks, basic model libraries, end-to-end development kits, tools &amp;amp; components as well as service platforms. PaddlePaddle is originated from industrial practices with dedication and commitments to industrialization. It has been widely adopted by a wide range of sectors including manufacturing, agriculture, enterprise service, and so on while serving more than 10.7 million developers, 235,000 companies and generating 860,000 models. With such advantages, PaddlePaddle has helped an increasing number of partners commercialize AI.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Latest PaddlePaddle Release: &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/tree/release/2.6&#34;&gt;v2.6&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Our vision is to enable deep learning for everyone via PaddlePaddle. Please refer to our &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;release announcement&lt;/a&gt; to track the latest features of PaddlePaddle.&lt;/p&gt; &#xA;&lt;h3&gt;Install Latest Stable Release&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# CPU&#xA;pip install paddlepaddle&#xA;# GPU&#xA;pip install paddlepaddle-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about installation, please view &lt;a href=&#34;https://www.paddlepaddle.org.cn/install/quick&#34;&gt;Quick Install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now our developers can acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you will obtain 8 hours to train models online per day. &lt;a href=&#34;https://aistudio.baidu.com/aistudio/index&#34;&gt;Click here to start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FOUR LEADING TECHNOLOGIES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Agile Framework for Industrial Development of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The PaddlePaddle deep learning framework facilitates the development while lowering the technical burden, through leveraging a programmable scheme to architect the neural networks. It supports both declarative programming and imperative programming with both development flexibility and high runtime performance preserved. The neural architectures could be automatically designed by algorithms with better performance than the ones designed by human experts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support Ultra-Large-Scale Training of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle has made breakthroughs in ultra-large-scale deep neural networks training. It launched the world&#39;s first large-scale open-source training platform that supports the training of deep networks with 100 billion features and trillions of parameters using data sources distributed over hundreds of nodes. PaddlePaddle overcomes the online deep learning challenges for ultra-large-scale deep learning models, and further achieved real-time model updating with more than 1 trillion parameters. &lt;a href=&#34;https://github.com/PaddlePaddle/Fleet&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;High-Performance Inference Engines for Comprehensive Deployment Environments&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle is not only compatible with models trained in 3rd party open-source frameworks , but also offers complete inference products for various production scenarios. Our inference product line includes &lt;a href=&#34;https://www.paddlepaddle.org.cn/inference/master/guides/introduction/index_intro.html&#34;&gt;Paddle Inference&lt;/a&gt;: Native inference library for high-performance server and cloud inference; &lt;a href=&#34;https://github.com/PaddlePaddle/FastDeploy&#34;&gt;FastDeploy&lt;/a&gt;: Easy-to-use and High Performance AI model deployment toolkit for Cloud, Mobile and Edge without-of-the-box and unified experience; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle-Lite&#34;&gt;Paddle Lite&lt;/a&gt;: Ultra-Lightweight inference engine for mobile and IoT environments; &lt;a href=&#34;https://www.paddlepaddle.org.cn/paddle/paddlejs&#34;&gt;Paddle.js&lt;/a&gt;: A frontend inference engine for browser and mini-apps. Furthermore, by great amounts of optimization with leading hardware in each scenario, Paddle inference engines outperform most of the other mainstream frameworks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Industry-Oriented Models and Libraries with Open Source Repositories&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle includes and maintains more than 100 mainstream models that have been practiced and polished for a long time in the industry. Some of these models have won major prizes from key international competitions. In the meanwhile, PaddlePaddle has further more than 200 pre-training models (some of them with source codes) to facilitate the rapid development of industrial applications. &lt;a href=&#34;https://github.com/PaddlePaddle/models&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;English&lt;/a&gt; and &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/guide/index_cn.html&#34;&gt;Chinese&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;Guides&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You might want to start from how to implement deep learning basics with PaddlePaddle.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/tutorial/index_cn.html&#34;&gt;Practice&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So far you have already been familiar with Fluid. And the next step should be building a more efficient model or inventing your original Operator.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/api/index_en.html&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Our new API enables much shorter programs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/08_contribution/index_en.html&#34;&gt;How to Contribute&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We appreciate your contributions!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues&#34;&gt;Github Issues&lt;/a&gt;: bug reports, feature requests, install issues, usage issues, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Source Contribution Activities:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Beginner: Happy Open Source Activity（&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/56689&#34;&gt;Regular Season&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/58497&#34;&gt;Pre-Hackathon Camp&lt;/a&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;Advanced: PaddlePaddle Hackathon（&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57262&#34;&gt;Personal Challenge Competition&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57585&#34;&gt;LLM Application Competition&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57264&#34;&gt;Hackathon Code Camp&lt;/a&gt;）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Community Organizations:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Technical Organization: &lt;a href=&#34;https://github.com/PaddlePaddle/community/tree/master/pfcc&#34;&gt;Paddle Framework Contributor Club, PFCC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Community Governance Organization: &lt;a href=&#34;https://github.com/PaddlePaddle/community/tree/master/pposdwg&#34;&gt;PaddlePaddle OpenSource Development Working Group, PPOSDWG&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Community Blog: &lt;a href=&#34;https://pfcc.blog/&#34;&gt;https://pfcc.blog/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/19084&#34;&gt;Server Deployments&lt;/a&gt;: Courses introducing high performance server deployments via local and remote services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/22690&#34;&gt;Edge Deployments&lt;/a&gt;: Courses introducing edge deployments from mobile, IoT to web and applets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;PaddlePaddle is provided under the &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>free-educa/books</title>
    <updated>2024-07-17T01:28:47Z</updated>
    <id>tag:github.com,2024-07-17:/free-educa/books</id>
    <link href="https://github.com/free-educa/books" rel="alternate"></link>
    <summary type="html">&lt;p&gt;o armazém de livros&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;📚Dev-Books Repository&lt;/h1&gt; &#xA;&lt;p&gt;powered by Free-Educa ❤&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the Dev-Books repository, your go-to resource for a curated collection of books related to development and programming. Whether you&#39;re an aspiring programmer, an experienced developer, or simply someone interested in keeping up with the latest software changes and trends, this repository has something for you.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;In the ever-evolving world of technology, staying updated with the latest trends, tools, and best practices is crucial. This repository aims to provide a comprehensive library of books that cover a wide range of topics in development and programming. From programming languages and frameworks to software architecture, design patterns, and beyond, our collection is carefully selected to empower you with the knowledge you need to succeed in the fast-paced world of software development.&lt;/p&gt; &#xA;&lt;h2&gt;Topics&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve organized our books into various topics, making it easy for you to explore the areas that interest you the most. Some of the key topics you&#39;ll find in this repository include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Languages: Explore books on popular programming languages like Python, Java, JavaScript, C++, and more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Web Development: Dive into web development with books on front-end and back-end technologies, web design, and best practices for creating responsive and engaging websites.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mobile App Development: Learn the ins and outs of developing mobile applications for iOS, Android, and cross-platform development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Software Engineering: Discover software engineering principles, agile methodologies, and best practices for building robust and scalable software systems.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Data Science and Machine Learning: Explore the world of data science and machine learning with books that cover data analysis, machine learning algorithms, and AI applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DevOps and Infrastructure: Gain insights into the world of DevOps, infrastructure as code, containerization, and cloud computing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Software Architecture: Understand the art of designing software systems with a focus on scalability, maintainability, and performance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cybersecurity: Learn about the latest cybersecurity threats, best practices, and strategies to protect your applications and data.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Use This Repository&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Browse Topics:&lt;/strong&gt; Use the folders to navigate through the topics that interest you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; We encourage contributions to this repository. If you have a valuable development or programming book to share, feel free to create a pull request. Let&#39;s build this resource together!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download and Read:&lt;/strong&gt; Once you&#39;ve found a book you&#39;d like to read, click on it to access the PDF or online version. All books in this repository are available for free.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feedback:&lt;/strong&gt; If you have any feedback, suggestions, or requests for additional topics or books, please open an issue. Your input is highly valuable to us!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All books in this repository are provided under various open-source licenses, and their respective licensing details can be found in each book&#39;s folder. Please respect the terms of these licenses when using and sharing the content.&lt;/p&gt; &#xA;&lt;p&gt;Happy reading and happy coding!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;📈 Repository Stats&lt;/strong&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-yes-green.svg?sanitize=true&#34; alt=&#34;Maintained - yes&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Made%20with-Markdown-1f425f.svg?sanitize=true&#34; alt=&#34;Made with markdown&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/free-educa/books.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/free-educa/books.svg?sanitize=true&#34; alt=&#34;forks number&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/free-educa/books.svg?sanitize=true&#34; alt=&#34;stars number&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/watchers/free-educa/books.svg?sanitize=true&#34; alt=&#34;watchers number&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/free-educa/books.svg?sanitize=true&#34; alt=&#34;Opened issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed/free-educa/books.svg?sanitize=true&#34; alt=&#34;Closed issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/free-educa/books.svg?sanitize=true&#34; alt=&#34;Opened PR&#39;s&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/free-educa/books.svg?sanitize=true&#34; alt=&#34;Closed PR&#39;s&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;📚Free-Educa Team&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>