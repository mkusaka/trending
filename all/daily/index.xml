<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-19T01:28:40Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>onetable-io/onetable</title>
    <updated>2023-11-19T01:28:40Z</updated>
    <id>tag:github.com,2023-11-19:/onetable-io/onetable</id>
    <link href="https://github.com/onetable-io/onetable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneTable is an omni-directional converter for table formats that facilitates interoperability across data processing systems and query engines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OneTable&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/onetable-io/onetable-io/_build/latest?definitionId=1&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/onetable-io/onetable-io/_apis/build/status%2Fonetable-io.onetable?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OneTable is an omni-directional converter for table formats that facilitates interoperability across data processing systems and query engines. Currently, OneTable supports widely adopted open-source table formats such as Apache Hudi, Apache Iceberg, and Delta Lake.&lt;/p&gt; &#xA;&lt;p&gt;OneTable simplifies data lake operations by leveraging a common model for table representation. This allows users to write data in one format while still benefiting from integrations and features available in other formats. For instance, OneTable enables existing Hudi users to seamlessly work with Databricks&#39;s Photon Engine or query Iceberg tables with Snowflake. Creating transformations from one format to another is straightforward and only requires the implementation of a few interfaces, which we believe will facilitate the expansion of supported source and target formats in the future.&lt;/p&gt; &#xA;&lt;h1&gt;Building the project and running tests.&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Java11 for building the project. If you are using some other java version, you can use &lt;a href=&#34;https://github.com/jenv/jenv&#34;&gt;jenv&lt;/a&gt; to use multiple java versions locally.&lt;/li&gt; &#xA; &lt;li&gt;Build the project using &lt;code&gt;mvn clean package&lt;/code&gt;. Use &lt;code&gt;mvn clean package -DskipTests&lt;/code&gt; to skip tests while building.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;mvn clean test&lt;/code&gt; or &lt;code&gt;mvn test&lt;/code&gt; to run all unit tests. If you need to run only a specific test you can do this by something like &lt;code&gt;mvn test -Dtest=TestDeltaSync -pl core&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Similarly, use &lt;code&gt;mvn clean verify&lt;/code&gt; or &lt;code&gt;mvn verify&lt;/code&gt; to run integration tests.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Style guide&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;We use &lt;a href=&#34;https://github.com/diffplug/spotless/tree/main/plugin-maven&#34;&gt;Maven Spotless plugin&lt;/a&gt; and &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;Google java format&lt;/a&gt; for code style.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;mvn spotless:check&lt;/code&gt; to find out code style violations and &lt;code&gt;mvn spotless:apply&lt;/code&gt; to fix them. Code style check is tied to compile phase by default, so code style violations will lead to build failures.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Running the bundled jar&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get a pre-built bundled jar or create the jar with &lt;code&gt;mvn install -DskipTests&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;create a yaml file that follows the format below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sourceFormat: HUDI&#xA;targetFormats:&#xA;  - DELTA&#xA;  - ICEBERG&#xA;datasets:&#xA;  -&#xA;    tableBasePath: s3://tpc-ds-datasets/1GB/hudi/call_center&#xA;    tableDataPath: s3://tpc-ds-datasets/1GB/hudi/call_center/data&#xA;    tableName: call_center&#xA;    namespace: my.db&#xA;  -&#xA;    tableBasePath: s3://tpc-ds-datasets/1GB/hudi/catalog_sales&#xA;    tableName: catalog_sales&#xA;    partitionSpec: cs_sold_date_sk:VALUE&#xA;  -&#xA;    tableBasePath: s3://hudi/multi-partition-dataset&#xA;    tableName: multi_partition_dataset&#xA;    partitionSpec: time_millis:DAY:yyyy-MM-dd,type:VALUE&#xA;  -&#xA;    tableBasePath: abfs://container@storage.dfs.core.windows.net/multi-partition-dataset&#xA;    tableName: multi_partition_dataset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tableFormats&lt;/code&gt; is a list of formats you want to create from your source tables&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tableBasePath&lt;/code&gt; is the basePath of the table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tableDataPath&lt;/code&gt; is an optional field specifying the path to the data files. If not specified, the tableBasePath will be used. For Iceberg source tables, you will need to specify the &lt;code&gt;/data&lt;/code&gt; path.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;namespace&lt;/code&gt; is an optional field specifying the namespace of the table and will be used when syncing to a catalog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;partitionSpec&lt;/code&gt; is a spec that allows us to infer partition values. This is only required for Hudi source tables. If the table is not partitioned, leave it blank. If it is partitioned, you can specify a spec with a comma separated list with format &lt;code&gt;path:type:format&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;path&lt;/code&gt; is a dot separated path to the partition field&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;type&lt;/code&gt; describes how the partition value was generated from the column value &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;VALUE&lt;/code&gt;: an identity transform of field value to partition value&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;YEAR&lt;/code&gt;: data is partitioned by a field representing a date and year granularity is used&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;MONTH&lt;/code&gt;: same as &lt;code&gt;YEAR&lt;/code&gt; but with month granularity&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;DAY&lt;/code&gt;: same as &lt;code&gt;YEAR&lt;/code&gt; but with day granularity&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;HOUR&lt;/code&gt;: same as &lt;code&gt;YEAR&lt;/code&gt; but with hour granularity&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: if your partition type is &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY&lt;/code&gt;, or &lt;code&gt;HOUR&lt;/code&gt; specify the format for the date string as it appears in your file paths&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;The default implementations of table format clients can be replaced with custom implementations by specifying a client configs yaml file in the format below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# sourceClientProviderClass: The class name of a table format&#39;s client factory, where the client is&#xA;#     used for reading from a table of this format. All user configurations, including hadoop config&#xA;#     and client specific configuration, will be available to the factory for instantiation of the&#xA;#     client.&#xA;# targetClientProviderClass: The class name of a table format&#39;s client factory, where the client is&#xA;#     used for writing to a table of this format.&#xA;# configuration: A map of configuration values specific to this client.&#xA;tableFormatsClients:&#xA;    HUDI:&#xA;      sourceClientProviderClass: io.onetable.hudi.HudiSourceClientProvider&#xA;    DELTA:&#xA;      targetClientProviderClass: io.onetable.delta.DeltaClient&#xA;      configuration:&#xA;        spark.master: local[2]&#xA;        spark.app.name: onetableclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;A catalog can be used when reading and updating Iceberg tables. The catalog can be specified in a yaml file and passed in with the &lt;code&gt;--icebergCatalogConfig&lt;/code&gt; option. The format of the catalog config file is:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;catalogImpl: io.my.CatalogImpl&#xA;catalogName: name&#xA;catalogOptions: # all other options are passed through in a map&#xA;  key1: value1&#xA;  key2: value2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;run with &lt;code&gt;java -jar utilities/target/utilities-0.1.0-SNAPSHOT-bundled.jar --datasetConfig my_config.yaml [--hadoopConfig hdfs-site.xml] [--clientsConfig clients.yaml] [--icebergCatalogConfig catalog.yaml]&lt;/code&gt; The bundled jar includes hadoop dependencies for AWS, Azure, and GCP. Authentication for AWS is done with &lt;code&gt;com.amazonaws.auth.DefaultAWSCredentialsProviderChain&lt;/code&gt;. To override this setting, specify a different implementation with the &lt;code&gt;--awsCredentialsProvider&lt;/code&gt; option.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;For setting up the repo on IntelliJ, open the project and change the java version to Java11 in File-&amp;gt;ProjectStructure &lt;img src=&#34;https://raw.githubusercontent.com/onetable-io/onetable/main/style/IDE.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You have found a bug, or have a cool idea you that want to contribute to the project ? Please file a GitHub issue &lt;a href=&#34;https://github.com/onetable-io/onetable/issues&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Adding a new target format&lt;/h2&gt; &#xA;&lt;p&gt;Adding a new target format requires a developer implement &lt;a href=&#34;https://raw.githubusercontent.com/onetable-io/onetable/main/api/src/main/java/io/onetable/spi/sync/TargetClient.java&#34;&gt;TargetClient&lt;/a&gt;. Once you have implemented that interface, you can integrate it into the &lt;a href=&#34;https://raw.githubusercontent.com/onetable-io/onetable/main/core/src/main/java/io/onetable/client/OneTableClient.java&#34;&gt;OneTableClient&lt;/a&gt;. If you think others may find that target useful, please raise a Pull Request to add it to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Overview of the sync process&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/onetable-io/onetable/main/assets/images/sync_flow.jpg&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>loro-dev/loro</title>
    <updated>2023-11-19T01:28:40Z</updated>
    <id>tag:github.com,2023-11-19:/loro-dev/loro</id>
    <link href="https://github.com/loro-dev/loro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reimagine state management with CRDTs. Easily enable collaboration and time-travel on your app.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://loro.dev&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/loro-dev/loro/main/docs/Loro.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://loro.dev&#34; alt=&#34;loro-site&#34;&gt;Loro&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Reimagine state management with CRDTs 🦜&lt;/b&gt;&lt;br&gt; Make your app state synchronized and collaborative effortlessly. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;X&#34; href=&#34;https://x.com/loro_dev&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Twitter-black?style=for-the-badge&amp;amp;logo=Twitter&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Discord-Link&#34; href=&#34;https://discord.gg/tUsBSVfqzf&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Discord-black?style=for-the-badge&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/nr2SLHQB/202311120101-2.gif&#34; alt=&#34;Rich text example&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ &lt;strong&gt;Notice&lt;/strong&gt;: The current API and encoding schema of Loro are &lt;strong&gt;experimental&lt;/strong&gt; and &lt;strong&gt;subject to change&lt;/strong&gt;. You should not use it in production.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Loro is a CRDTs(Conflict-free Replicated Data Types) library that makes building &lt;a href=&#34;https://www.inkandswitch.com/local-first/&#34;&gt;local-first apps&lt;/a&gt; easier.&lt;/p&gt; &#xA;&lt;p&gt;Explore our vision for the local-first development paradigm in our blog post: &lt;a href=&#34;https://loro.dev/blog/loro-now-open-source&#34;&gt;&lt;strong&gt;Reimagine State Management with CRDTs&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Supported CRDT Algorithms&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Common Data Structures&lt;/strong&gt;: Support for &lt;code&gt;List&lt;/code&gt; for ordered collections, LWW(Last Write Win) &lt;code&gt;Map&lt;/code&gt; for key-value pairs, &lt;code&gt;Tree&lt;/code&gt; for hierarchical data, and &lt;code&gt;Text&lt;/code&gt; for rich text manipulation, enabling various applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Text Editing with Fugue&lt;/strong&gt;: Loro integrates &lt;a href=&#34;https://arxiv.org/abs/2305.00583&#34;&gt;Fugue&lt;/a&gt;, a CRDT algorithm designed to minimize interleaving anomalies in concurrent text editing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Peritext-like Rich Text CRDT&lt;/strong&gt;: Drawing inspiration from &lt;a href=&#34;https://www.inkandswitch.com/peritext/&#34;&gt;Peritext&lt;/a&gt;, Loro manages rich text CRDTs that excel at merging concurrent rich text style edits, maintaining the original intent of users input as much as possible. Details on this will be explored further in an upcoming blog post.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Moveable Tree&lt;/strong&gt;: For applications requiring directory-like data manipulation, Loro utilizes the algorithm from &lt;a href=&#34;https://ieeexplore.ieee.org/document/9563274&#34;&gt;&lt;em&gt;A Highly-Available Move Operation for Replicated Trees&lt;/em&gt;&lt;/a&gt;, which simplifies the process of moving hierarchical data structures.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced Features in Loro&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Preserve Editing History&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;With Loro, you can track changes effortlessly as it records the editing history with low overhead.&lt;/li&gt; &#xA;   &lt;li&gt;This feature is essential for audit trails, undo/redo functionality, and understanding the evolution of your data over time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Time Travel Through History&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It allows users to compare and merge manually when needed, although CRDTs typically resolve conflicts well.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.loro.dev/docs/performance&#34;&gt;See benchmarks&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build time travel feature easily for large documents&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/loro-dev/loro/assets/18425020/ec2d20a3-3d8c-4483-a601-b200243c9792&#34;&gt;https://github.com/loro-dev/loro/assets/18425020/ec2d20a3-3d8c-4483-a601-b200243c9792&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features Provided by CRDTs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decentralized Synchronization&lt;/strong&gt;: Loro allows your app&#39;s state synced via p2p connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic Merging&lt;/strong&gt;: CRDTs guarantee strong eventual consistency by automating the merging of concurrent changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Availability&lt;/strong&gt;: Data can be persisted on users&#39; devices, supporting offline functionality and real-time responsiveness.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Effortlessly scale your application horizontally thanks to the inherently distributed nature of CRDTs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Delta Updates&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h3&gt;Development Environment Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust&lt;/strong&gt;: Install from the official Rust website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deno&lt;/strong&gt;: Download and install from Deno&#39;s website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node&lt;/strong&gt;: Install from the Node.js website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pnpm&lt;/strong&gt;: Run &lt;code&gt;npm i -g pnpm&lt;/code&gt; for global installation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust Target&lt;/strong&gt;: Add with &lt;code&gt;rustup target add wasm32-unknown-unknown&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;wasm-bindgen-cli&lt;/strong&gt;: Install version 0.2.86 via &lt;code&gt;cargo install wasm-bindgen-cli --version 0.2.86&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cargo-nextest&lt;/strong&gt;: Install using &lt;code&gt;cargo install cargo-nextest --locked&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cargo-fuzz&lt;/strong&gt;: Run &lt;code&gt;cargo install cargo-fuzz&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Test&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;deno task test&#xA;&#xA;# Build and test WASM&#xA;deno task test-wasm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;Loro draws inspiration from the innovative work of the following projects and individuals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inkandswitch.com/&#34;&gt;Ink &amp;amp; Switch&lt;/a&gt;: The principles of Local-first Software have greatly influenced this project. The &lt;a href=&#34;https://www.inkandswitch.com/peritext/&#34;&gt;Peritext&lt;/a&gt; project has also shaped our approach to rich text CRDTs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/josephg/diamond-types&#34;&gt;Diamond-types&lt;/a&gt;: The ingenious OT-like merging algorithm from @josephg has been adapted to reduce the computation and space usage of CRDTs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/automerge/automerge&#34;&gt;Automerge&lt;/a&gt;: Their use of columnar encoding for CRDTs has informed our strategies for efficient data encoding.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yjs/yjs&#34;&gt;Yjs&lt;/a&gt;: We have incorporated a similar algorithm for effectively merging collaborative editing operations, thanks to their pioneering contributions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mattweidner.com/&#34;&gt;Matthew Weidner&lt;/a&gt;: His work on the &lt;a href=&#34;https://arxiv.org/abs/2305.00583&#34;&gt;Fugue&lt;/a&gt; algorithm has been invaluable, enhancing our text editing capabilities.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pandora-next/deploy</title>
    <updated>2023-11-19T01:28:40Z</updated>
    <id>tag:github.com,2023-11-19:/pandora-next/deploy</id>
    <link href="https://github.com/pandora-next/deploy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pandora Cloud + Pandora Server + Shared Chat = PandoraNext. New GPTs(Gizmo) UI, All in one!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PandoraNext&lt;/h1&gt; &#xA;&lt;h2&gt;简单介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pandora Cloud + Pandora Server + Shared Chat = &lt;code&gt;PandoraNext&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持GPTs，最新UI。&lt;/li&gt; &#xA; &lt;li&gt;支持多种登录方式：（相当于Pandora Cloud） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;账号/密码&lt;/li&gt; &#xA;   &lt;li&gt;Access Token&lt;/li&gt; &#xA;   &lt;li&gt;Session Token&lt;/li&gt; &#xA;   &lt;li&gt;Refresh Token&lt;/li&gt; &#xA;   &lt;li&gt;Share Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;可内置tokens（可使用上述所有Token），支持设置密码。（相当于Pandora Server）&lt;/li&gt; &#xA; &lt;li&gt;可配置共享的tokens，会有一个功能等同&lt;code&gt;chat-shared3.zhile.io&lt;/code&gt;的共享站。&lt;/li&gt; &#xA; &lt;li&gt;为全代理模式，你的用户只需要跟你的部署网络能通即可。&lt;/li&gt; &#xA; &lt;li&gt;还有疑问，那就进Telegram群让大家围观围观：&lt;a href=&#34;https://t.me/ja_netfilter_group&#34;&gt;@ja_netfilter_group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;手动部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;a href=&#34;https://github.com/pandora-next/deploy/releases&#34;&gt;Releases&lt;/a&gt;中下载对应操作系统和架构的包。&lt;/li&gt; &#xA; &lt;li&gt;解压后修改同目录中的&lt;code&gt;config.json&lt;/code&gt;至你需要的参数。&lt;/li&gt; &#xA; &lt;li&gt;将获取到的&lt;code&gt;JWT Token&lt;/code&gt;内容写进同目录的&lt;a href=&#34;https://raw.githubusercontent.com/pandora-next/deploy/master/#%E5%85%B3%E4%BA%8E-licensejwt%E6%96%87%E4%BB%B6&#34;&gt;license.jwt&lt;/a&gt;文件中。&lt;/li&gt; &#xA; &lt;li&gt;启动&lt;code&gt;PandoraNext&lt;/code&gt;或&lt;code&gt;PandoraNext.ext&lt;/code&gt;即可。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker 部署&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker pull pengzhile/pandora-next&#xA;$ docker run -d --restart always --name PandoraNext --net=bridge -p 8181:8181 \&#xA;             -e PANDORA_NEXT_LICENSE=&#34;&amp;lt;JWT Token&amp;gt;&#34; pengzhile/pandora-next&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;容器内默认监听&lt;code&gt;8181&lt;/code&gt;端口，映射宿主机的&lt;code&gt;8181&lt;/code&gt;端口，可自行修改。&lt;/li&gt; &#xA; &lt;li&gt;你可以映射目录到容器内的&lt;code&gt;/data&lt;/code&gt;目录，&lt;code&gt;config.json&lt;/code&gt;和&lt;code&gt;tokens.json&lt;/code&gt;放在其中。&lt;/li&gt; &#xA; &lt;li&gt;自行使用真实的&lt;code&gt;JWT Token&lt;/code&gt;替换命令中的&lt;code&gt;&amp;lt;JWT Token&amp;gt;&lt;/code&gt;，没有&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;，不要搞错。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker Compose 模版&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  pandora-next:&#xA;    image: pengzhile/pandora-next&#xA;    container_name: PandoraNext&#xA;    network_mode: bridge&#xA;    restart: always&#xA;    ports:&#xA;      - &#34;8181:8181&#34;&#xA;    environment:&#xA;      - PANDORA_NEXT_LICENSE=&amp;lt;JWT Token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;对照上述&lt;code&gt;Docker 部署&lt;/code&gt;的内容自行修改。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你映射了&lt;code&gt;/data&lt;/code&gt;目录，要提供&lt;code&gt;config.json&lt;/code&gt;，同样&lt;code&gt;tokens.json&lt;/code&gt;也放在这里。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nginx 配置&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;&#x9;listen 443 ssl http2;&#xA;&#x9;server_name chat.zhile.io;&#xA;&#x9;&#xA;&#x9;charset utf-8;&#xA;&#x9;&#xA;&#x9;ssl_certificate      certs/chat.zhile.io.crt;&#xA;&#x9;ssl_certificate_key  certs/chat.zhile.io.key;&#xA;&#xA;&#x9;...省略若干其他配置...&#xA;&#x9;&#xA;&#x9;location / {&#xA;&#x9;&#x9;proxy_http_version &#x9;1.1;&#xA;&#x9;&#x9;proxy_pass &#x9;&#x9;http://127.0.0.1:8181/;&#xA;&#x9;&#x9;proxy_set_header&#x9;Connection&#x9;&#x9;&#34;&#34;;&#xA;&#x9;&#x9;proxy_set_header   &#x9;Host&#x9;&#x9;&#x9;$http_host;&#xA;&#x9;&#x9;proxy_set_header &#x9;X-Forwarded-Proto &#x9;$scheme;&#xA;&#x9;&#x9;proxy_set_header   &#x9;X-Real-IP          &#x9;$remote_addr;&#xA;&#x9;&#x9;proxy_set_header   &#x9;X-Forwarded-For    &#x9;$proxy_add_x_forwarded_for;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;proxy_buffering off;&#xA;&#x9;&#x9;proxy_cache off;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;send_timeout 600;&#xA;&#x9;&#x9;proxy_connect_timeout 600;&#xA;&#x9;&#x9;proxy_send_timeout 600;&#xA;&#x9;&#x9;proxy_read_timeout 600;&#xA;&#x9;}&#xA;&#xA;&#x9;...省略若干其他配置...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nginx建议开启&lt;code&gt;http2&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;以上仅为推荐配置，可根据具体情况进行改动。&lt;/li&gt; &#xA; &lt;li&gt;建议开启&lt;code&gt;ssl&lt;/code&gt;也即&lt;code&gt;https&lt;/code&gt;，否则浏览器限制将无法复制网页内容。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;config 配置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以下是一个示例&lt;code&gt;config.json&lt;/code&gt;文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;bind&#34;: &#34;127.0.0.1:8181&#34;,&#xA;  &#34;timeout&#34;: 600,&#xA;  &#34;proxy_url&#34;: &#34;&#34;,&#xA;  &#34;public_share&#34;: false,&#xA;  &#34;site_password&#34;: &#34;&#34;,&#xA;  &#34;whitelist&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bind&lt;/code&gt;指定绑定IP和端口，在docker内，IP只能用&lt;code&gt;0.0.0.0&lt;/code&gt;，否则映射不出来。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;是请求的超时时间，单位为&lt;code&gt;秒&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_url&lt;/code&gt;指定部署服务流量走代理，如：&lt;code&gt;http://127.0.0.1:8888&lt;/code&gt;、&lt;code&gt;socks5://127.0.0.1:7980&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;public_share&lt;/code&gt;对于GPT中创建的对话分享，是否需要登录才能查看。为&lt;code&gt;true&lt;/code&gt;则无需登录即可查看。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;site_password&lt;/code&gt;设置整站密码，需要先输入这个密码，正确才能进行后续步骤。充分保障私密性。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;whitelist&lt;/code&gt;邮箱数组指定哪些用户可以登录使用，用户名/密码登录受限制，各种Token登录受限。内置tokens不受限。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;whitelist&lt;/code&gt;为&lt;code&gt;null&lt;/code&gt;则不限制，为空数组&lt;code&gt;[]&lt;/code&gt;则限制所有账号，同样内置tokens不受限。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;tokens 配置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以下是一个示例&lt;code&gt;tokens.json&lt;/code&gt;文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;test-1&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token / share token&#34;,&#xA;    &#34;shared&#34;: true,&#xA;    &#34;show_user_info&#34;: false&#xA;  },&#xA;  &#34;test-2&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token / share token&#34;,&#xA;    &#34;shared&#34;: true,&#xA;    &#34;show_user_info&#34;: true,&#xA;    &#34;plus&#34;: true&#xA;  },&#xA;  &#34;test2&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token / share token&#34;,&#xA;    &#34;password&#34;: &#34;12345&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;token&lt;/code&gt;支持示例文件中所写的所有类型。&lt;code&gt;session token&lt;/code&gt;和&lt;code&gt;refresh token&lt;/code&gt;可自动刷新。&lt;/li&gt; &#xA; &lt;li&gt;每个key被称为&lt;code&gt;token key&lt;/code&gt;，可在登录框作用户名输入。如上：&lt;code&gt;test-1&lt;/code&gt;、&lt;code&gt;test-2&lt;/code&gt;等。&lt;/li&gt; &#xA; &lt;li&gt;如果设置了&lt;code&gt;password&lt;/code&gt;则输入完&lt;code&gt;token key&lt;/code&gt;进入输入密码页面输入匹配。&lt;/li&gt; &#xA; &lt;li&gt;如果设置&lt;code&gt;shared&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;，则这个账号会出现在&lt;code&gt;/shared.html&lt;/code&gt;中，登录页面会出现它的链接。&lt;/li&gt; &#xA; &lt;li&gt;如果设置&lt;code&gt;shared&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;，则这个账号不能再在用户名登录框进行登录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/shared.html&lt;/code&gt;中的账号和共享站功能相同，可以自行设置隔离密码进行会话隔离。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;plus&lt;/code&gt;用来标识&lt;code&gt;/shared.html&lt;/code&gt;上账号是否有金光，没有其他作用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;show_user_info&lt;/code&gt;表示&lt;code&gt;/shared.html&lt;/code&gt;共享时是否显示账号邮箱信息，GPTs建议开启。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于 license.jwt文件&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在这里获取：&lt;a href=&#34;https://dash.pandoranext.com&#34;&gt;https://dash.pandoranext.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;没有固定IP的情况&lt;/strong&gt;，IP变动后在上述服务重新拉取授权即可。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PHP&lt;/code&gt;是世界上最好的编程语言。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;贡献者们&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;感谢所有让这个项目变得更好的贡献者们！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pandora-next/deploy/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=pandora-next/deploy&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star历史&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=pandora-next/deploy&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>