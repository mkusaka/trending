<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-13T01:29:06Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>i-am-alice/3rd-devs</title>
    <updated>2025-05-13T01:29:06Z</updated>
    <id>tag:github.com,2025-05-13:/i-am-alice/3rd-devs</id>
    <link href="https://github.com/i-am-alice/3rd-devs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI_devs 3&lt;/h1&gt; &#xA;&lt;p&gt;Repozytorium zawiera przykłady z lekcji kursu AI_devs 3. Więcej informacji znajdziesz na &lt;a href=&#34;https://aidevs.pl&#34;&gt;aidevs.pl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Wymagania&lt;/h2&gt; &#xA;&lt;p&gt;Wszystkie przykłady zostały napisane w JavaScript / TypeScript i większość z nich zawiera kod backendowy do którego uruchomienia potrzebny jest Node.js oraz Bun.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bun.sh&#34;&gt;Bun&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upewnij się, że posiadasz najnowsze wersje Node.js oraz Bun zainstalowane na swoim komputerze.&lt;/p&gt; &#xA;&lt;h2&gt;Instalacja&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Pobierz repozytorium:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:i-am-alice/3rd-devs.git&#xA;cd 3rd-devs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Zainstaluj zależności:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Skopiuj plik &lt;code&gt;.env.example&lt;/code&gt; do &lt;code&gt;.env&lt;/code&gt; i wypełnij go kluczami API (na początek wystarczy klucz OpenAI).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Uruchom dostępne przykłady z pliku &lt;code&gt;package.json&lt;/code&gt;, według poniższej instrukcji.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Instalacja — DOCKER&lt;/h2&gt; &#xA;&lt;p&gt;Jeśli posiadasz w swoim systemie możliwość uruchamiania kontenerów Dockera (na Windows użyj np. WSL/WSL2), możesz wykorzystać&amp;nbsp;skrypt, który zbuduje i uruchomi dla Ciebie kontener ze środowiskiem gotowym do pracy.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Wejdź&amp;nbsp;do katalogu, w którym chcesz przetrzymywać pliki środowiska i wydaj następujące polecenia:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://env.ag3nts.org -o setup.sh&#xA;bash setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Powyższy skrypt NIE zmienia niczego w systemie. Wykonuje on następujące czynności:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;klonowanie repozytorium do katalogu &#34;3rd-devs&#34; (poza kontenerem, w aktualnym katalogu)&lt;/li&gt; &#xA;   &lt;li&gt;przygotowanie pliku Dockerfile&lt;/li&gt; &#xA;   &lt;li&gt;usunięcie starego obrazu Dockera o nazwie &#34;aidevs&#34; (jeśli istnieje)&lt;/li&gt; &#xA;   &lt;li&gt;uruchomienie procesu budowy obrazu Dockera&lt;/li&gt; &#xA;   &lt;li&gt;instalacja wymaganych paczek wewnątrz zdokeryzowanego środowiska&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Po pomyślnym zbudowaniu obrazu możesz uruchomić&amp;nbsp;go poleceniem (jeśli port 3000 masz zajęty, wybierz inny):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it -p 3000:3000 --name aidevs -v ${PWD}/3rd-devs:/app aidevs3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pliki w katalogu &#34;3rd-devs&#34; możesz modyfikować&amp;nbsp;w dowolnym IDE. Będą one bezpośrednio widoczne wewnątrz kontenera&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Będąc już wewnątrz kontenera, skopiuj plik &lt;code&gt;.env.example&lt;/code&gt; do &lt;code&gt;.env&lt;/code&gt; i wypełnij go wymaganymi kluczami API (na początek wystarczy klucz OpenAI).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Twoje środowisko jest gotowe do pracy.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;S01E01&lt;/h2&gt; &#xA;&lt;h3&gt;Thread&lt;/h3&gt; &#xA;&lt;p&gt;Przykład przedstawia konwersację między użytkownikiem i asystentem, w której działa mechanizm podsumowania konwersacji.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun run thread&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja demo: &lt;code&gt;curl -X POST http://localhost:3000/api/demo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja chat: &lt;code&gt;curl -X POST http://localhost:3000/api/chat -H &#34;Content-Type: application/json&#34; -d &#39;{&#34;message&#34;: { &#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hi&#34;}}&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Wywołanie powyższego endpointu uruchomi trzy niezależne zapytania do OpenAI, jednak w wiadomości systemowej zostanie przekazane podsumowanie poprzedniej interakcji, dzięki czemu model będzie miał możliwość odwołać się&amp;nbsp;do ich treści.&lt;/p&gt; &#xA;&lt;p&gt;W przykładzie uwzględniony jest także endpoint &lt;code&gt;/api/chat&lt;/code&gt; na który można przesłać obiekt { &#34;message&#34;: &#34;...&#34; } zawierający treść wiadomości do modelu. Wątek zostanie zresetowany &lt;strong&gt;dopiero po ponownym uruchomieniu serwera&lt;/strong&gt; (wciśnij CMD + C / Control + C i ponownie &lt;code&gt;bun run thread&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Use Search&lt;/h3&gt; &#xA;&lt;p&gt;UWAGA: przykład wymaga zainstalowania &lt;code&gt;promptfoo&lt;/code&gt; w przypadku którego prawdopodobnie musisz to zrobić poleceniem &lt;code&gt;npm install promptfoo&lt;/code&gt; ponieważ &lt;code&gt;bun install promptfoo&lt;/code&gt; nie działa poprawnie w każdej sytuacji.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie skryptu: &lt;code&gt;bun use_search&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu decydującego o tym, czy skorzystanie z wyszukiwarki jest potrzebne.&lt;/p&gt; &#xA;&lt;h3&gt;Pick domains&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie skryptu: &lt;code&gt;bun pick_domains&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu generującego zapytania do wyszukiwarki Internetowej, wskazując także odpowiednie domeny.&lt;/p&gt; &#xA;&lt;h3&gt;Rate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie skryptu: &lt;code&gt;bun rate&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu oceniającego, czy odpowiedź modelu zawiera odpowiednie informacje.&lt;/p&gt; &#xA;&lt;h3&gt;Websearch&lt;/h3&gt; &#xA;&lt;p&gt;Przykład ten korzysta z &lt;a href=&#34;https://www.firecrawl.dev&#34;&gt;Firecrawl&lt;/a&gt; do przeszukiwania Internetu oraz pobierania treści stron &lt;a href=&#34;http://www&#34;&gt;www&lt;/a&gt;. Konieczne jest więc uzupełnienie pliku &lt;code&gt;.env&lt;/code&gt; wartości FIRECRAWL_API_KEY ustawionej na klucz API. (Firecrawl oferuje bezpłatny plan).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun websearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Search wiki for &#39;John Wick&#39;&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ważne: w pliku &lt;code&gt;websearch/app.ts&lt;/code&gt; można zmienić listę domen, które są&amp;nbsp;dopuszczalne do przeszukiwania i pobierania treści.&lt;/p&gt; &#xA;&lt;h2&gt;S01E02&lt;/h2&gt; &#xA;&lt;h3&gt;Linear&lt;/h3&gt; &#xA;&lt;p&gt;Uruchomienie tego przykładu wymaga uzupełnienia pliku &lt;code&gt;.env&lt;/code&gt; i wartości &lt;code&gt;LINEAR_API_KEY&lt;/code&gt; oraz &lt;code&gt;LINEAR_WEBHOOK_SECRET&lt;/code&gt;. Obie wartości można znaleźć w &lt;a href=&#34;https://linear.app/overment/settings/api&#34;&gt;ustawieniach API&lt;/a&gt;. Dodatkowo Twój localhost musi być&amp;nbsp;dostępny z poza Twojej sieci lokalnej, np. za pomocą &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok&lt;/a&gt;. Publiczny adres URL należy także wskazać w panelu Linear w sekcji Webhooks, np.: &lt;code&gt;https://&amp;lt;ngrok-url&amp;gt;/api/linear/watch-issue&lt;/code&gt; (pamiętaj o dodaniu właściwego endpointu do adresu).&lt;/p&gt; &#xA;&lt;p&gt;WAŻNE: w pliku &lt;code&gt;linear/prompts.ts&lt;/code&gt; znajduje się prompt w którym zostały opisane &lt;strong&gt;moje projekty&lt;/strong&gt; w Linear. Aby skrypt działał poprawnie, musisz zmodyfikować ten prompt, tak aby zawierał identyfikatory oraz opisy Twoich projektów.&lt;/p&gt; &#xA;&lt;p&gt;Listę projektów i ich identyfikatory możesz pobrać korzystając z endpointu &lt;code&gt;/api/linear/projects&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun linear&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pobranie listy projektów: &lt;code&gt;curl http://localhost:3000/api/linear/projects&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Po dodaniu nowego wpisu w Twoim linearze, zostanie on automatycznie przypisany do projektu zgodnie z zasadami w promptach, o ile nie został&amp;nbsp;przypisany przez Ciebie ręcznie.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Files&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun files&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hey there, what\&#39;s up?&#34;}], &#34;conversation_id&#34;: &#34;d7582176-bc52-4ef3-980a-047b868f9f49&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Przykład ten pokazuje mechanizm podejmowania decyzji o zapamiętywaniu informacji na podstawie kontekstu rozmowy. Dodatkowo w przypadku podania &lt;code&gt;conversation_id&lt;/code&gt; w obiekcie żądania, do rozmowy zostaną&amp;nbsp;wczytane wszystkie wiadomości dotyczące konkretnej rozmowy.&lt;/p&gt; &#xA;&lt;p&gt;Wszystkie pliki zapisywane są w folderze &lt;code&gt;files/context&lt;/code&gt;, a sam katalog można otworzyć&amp;nbsp;w aplikacji &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; aby zobaczyć powiązania pomiędzy wspomnieniami.&lt;/p&gt; &#xA;&lt;h2&gt;S01E03&lt;/h2&gt; &#xA;&lt;h3&gt;Langfuse&lt;/h3&gt; &#xA;&lt;p&gt;Ten przykład wymaga uzupełnienia pliku &lt;code&gt;.env&lt;/code&gt; o wartości &lt;code&gt;LANGFUSE_PUBLIC_KEY&lt;/code&gt;, &lt;code&gt;LANGFUSE_SECRET_KEY&lt;/code&gt; oraz &lt;code&gt;LANGFUSE_HOST&lt;/code&gt;. Można je uzyskać zakładając bezpłatne konto na &lt;a href=&#34;https://langfuse.com/&#34;&gt;Langfuse&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;UWAGA: Aby uruchomić ten przykład, musisz w panelu Langfuse utworzyć&amp;nbsp;nowy prompt o nazwie &lt;code&gt;Answer&lt;/code&gt;, którego wartość możesz ustawić&amp;nbsp;na np. &#39;Odpowiadaj pisząc wyłącznie wielkimi literami&#39;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun langfuse&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hey there, what\&#39;s up?&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Po wykonaniu zapytania, zostanie ono automatycznie zalogowane do Langfuse, a wynik wyświetlony w panelu.&lt;/p&gt; &#xA;&lt;h3&gt;Tiktokenizer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun tiktokenizer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hey there, what\&#39;s up?&#34;}], &#34;model&#34;: &#34;gpt-4o&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Przykład ten pokazuje mechanizm liczenia tokenów w zapytaniach do modeli OpenAI (np. gpt-4o).&lt;/p&gt; &#xA;&lt;h3&gt;Max tokens&lt;/h3&gt; &#xA;&lt;p&gt;Przykład ten pokazuje jeden mechanizm pozwalający na kontynuowanie wypowiedzi modelu, pomimo osiągnięcia maksymalnej liczby tokenów wyjściowych (output tokens).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun max_tokens&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Write ten sentences about apples and put them in order.&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Constitution&lt;/h3&gt; &#xA;&lt;p&gt;Przykład ten przedstawia mechanizm blokowania zapytań, które nie spełniają warunków określonych w prompcie &lt;code&gt;/constitution/prompts.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun constitution&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S01E04&lt;/h2&gt; &#xA;&lt;h3&gt;Memory&lt;/h3&gt; &#xA;&lt;p&gt;Ten przykład po uruchomieniu tworzy katalog memories w którym zapisywane są pliki markdown, pełniące rolę&amp;nbsp;pamięci modelu. Nie jest to przykład nadający się na produkcję, lecz przedstawia ogólne mechaniki pamięci długoterminowej, które będziemy rozwijać w dalszych lekcjach.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun memory&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; curl -X POST http://localhost:3000/api/chat \&#xA;   -H &#34;Content-Type: application/json&#34; \&#xA;   -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;S01E05&lt;/h2&gt; &#xA;&lt;h3&gt;External&lt;/h3&gt; &#xA;&lt;p&gt;Ten przykład zawiera standardową&amp;nbsp;logikę&amp;nbsp;interakcji z modelem, ale wymaga podania klucza API w nagłówku &lt;code&gt;Authorization&lt;/code&gt; w formacie &lt;code&gt;Bearer &amp;lt;klucz&amp;gt;&lt;/code&gt;. Wartość&amp;nbsp;klucza zostaje wczytana z pliku &lt;code&gt;.env&lt;/code&gt; jako &lt;code&gt;PERSONAL_API_KEY&lt;/code&gt;. Dodatkowo zostały dodane mechanizmy ograniczania liczby zapytań, więc po kilku próbach ponowne wywołanie zapytania zwróci błąd 429.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun external&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prompts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;UWAGA&lt;/strong&gt;: Aby uruchomić ten przykład konieczne jest nawiązanie połączenie z Langfuse poprzez uzupełnienie pliku &lt;code&gt;.env&lt;/code&gt; o wartości &lt;code&gt;LANGFUSE_PUBLIC_KEY&lt;/code&gt;, &lt;code&gt;LANGFUSE_SECRET_KEY&lt;/code&gt; oraz &lt;code&gt;LANGFUSE_HOST&lt;/code&gt;. Dodatkowo na Twoim koncie musisz utworzyć nowy prompt o nazwie &lt;code&gt;Answer&lt;/code&gt;, którego wartość możesz ustawić&amp;nbsp;na np. &#39;Odpowiadaj pisząc wyłącznie wielkimi literami&#39;, aby tylko sprawdzić&amp;nbsp;działanie mechanizmu. Dodatkowo prompt &#34;Answer&#34; należy dodać w ustawieniu &#34;Chat&#34;, a nie &#34;Text&#34; (tryb można zmienić&amp;nbsp;z pomocą zakładek w Langfuse)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun prompts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;p&gt;Ten przykład nie dotyczy bezpośrednio działania LLM, lecz przedstawia sposób organizacji informacji w bazie danych, takich jak konwersacje czy historia wiadomości.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun database&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Qdrant&lt;/h3&gt; &#xA;&lt;p&gt;Przykład ten przedstawia &lt;strong&gt;absolutnie podstawowe&lt;/strong&gt; połączenie z bazą&amp;nbsp;wektorową Qdrant. Jego zadaniem jest zapisywanie historii wiadomości, a następnie wyszukiwanie i wczytywanie do kontekstu rozmowy najbardziej podobnych wiadomości. Przykład ten będziemy rozbudowywać w dalszych lekcjach, łącząc się z Qdrant w bardziej złożonych konfiguracjach.&lt;/p&gt; &#xA;&lt;p&gt;UWAGA: Aby uruchomić ten przykład, musisz w panelu Langfuse utworzyć&amp;nbsp;nowy prompt o nazwie &lt;code&gt;Answer&lt;/code&gt;, którego wartość możesz ustawić&amp;nbsp;na np. &#39;Odpowiadaj pisząc wyłącznie wielkimi literami&#39;. Powodem jest fakt, że w ten przykład został powiązany z przykładem &lt;code&gt;langfuse&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie serwera: &lt;code&gt;bun qdrant&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://localhost:3000/api/chat \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S02E01&lt;/h2&gt; &#xA;&lt;h3&gt;Audio&lt;/h3&gt; &#xA;&lt;p&gt;UWAGA: Ten przykład wymaga uruchomienia frontendu w folderze &lt;code&gt;audio-frontend&lt;/code&gt; oraz backendu w folderze &lt;code&gt;audio-backend&lt;/code&gt;. W związku z tym przykład &lt;strong&gt;trzeba&lt;/strong&gt; uruchomić na własnym komputerze.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie frontendu: &lt;code&gt;bun audio:dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uruchomienie backendu: &lt;code&gt;bun audio&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: Otwórz w przeglądarce stronę &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;WAŻNE: Jakość działania tego przykładu zależy głównie od jakości mikrofonu oraz dźwięków otoczenia. Upewnij się&amp;nbsp;więc, że jakość nagrania jest dobra i że nie ma zakłóceń uniemożliwiających wykrywanie końca wypowiedzi.&lt;/p&gt; &#xA;&lt;h2&gt;S02E02&lt;/h2&gt; &#xA;&lt;h3&gt;Vision&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun vision&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recognize&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun recognize&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recognize-Pixtral&lt;/h3&gt; &#xA;&lt;p&gt;Do uruchomienia tego przykładu należy uzupełnić plik &lt;code&gt;.env&lt;/code&gt; o wartość &lt;code&gt;MISTRAL_API_KEY&lt;/code&gt;. Można go pobrać tutaj na &lt;a href=&#34;https://auth.mistral.ai/ui/login?flow=d2707d87-5325-4ff5-a7cd-25a2e21323d5&#34;&gt;Mistral.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun recognize_pixtral&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S02E02&lt;/h2&gt; &#xA;&lt;h3&gt;Vision&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun vision&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na pliku &lt;code&gt;vision/lessons.png&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recognize&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun recognize&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na plikach z katalogu &lt;code&gt;recognize/avatars&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recognize-Pixtral&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun recognize_pixtral&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na plikach z katalogu &lt;code&gt;recognize_pixtral/avatars&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S02E03&lt;/h2&gt; &#xA;&lt;p&gt;--- brak przykładów ---&lt;/p&gt; &#xA;&lt;h2&gt;S02E04&lt;/h2&gt; &#xA;&lt;h3&gt;Captions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun captions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na pliku &lt;code&gt;captions/article.md&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun summary&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: skrypt wykonuje się&amp;nbsp;automatycznie na pliku &lt;code&gt;summary/article.md&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video&lt;/h3&gt; &#xA;&lt;p&gt;Do uruchomienia tego przykładu należy uzupełnić plik &lt;code&gt;.env&lt;/code&gt; o wartość &lt;code&gt;GOOGLE_AI_STUDIO_API_KEY&lt;/code&gt;, który można pobrać&amp;nbsp;z &lt;a href=&#34;https://aistudio.google.com/&#34;&gt;Google AI Studio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun video&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na pliku &lt;code&gt;video/test.mp3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Narration&lt;/h3&gt; &#xA;&lt;p&gt;UWAGA: Ten przykład może zużywać&amp;nbsp;duże ilości kredytów na ElevenLabs, więc jeśli chcesz zobaczyć&amp;nbsp;rezultat jego działania, to w katalogu &lt;code&gt;narration&lt;/code&gt; znajdują&amp;nbsp;się dwa przykładowe pliki audio, które możesz odtworzyć bez uruchamiania kodu.&lt;/p&gt; &#xA;&lt;p&gt;Do uruchomienia tego przykładu należy uzupełnić plik &lt;code&gt;.env&lt;/code&gt; o wartość &lt;code&gt;GOOGLE_AI_STUDIO_API_KEY&lt;/code&gt;, który można pobrać&amp;nbsp;z &lt;a href=&#34;https://aistudio.google.com/&#34;&gt;Google AI Studio&lt;/a&gt; oraz &lt;code&gt;ELEVEN_LABS_API_KEY&lt;/code&gt;, który można pobrać&amp;nbsp;z &lt;a href=&#34;https://elevenlabs.io/&#34;&gt;ElevenLabs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun narration&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na treści wiadomości użytkownika przekazanej w funkcji &lt;code&gt;generateNarration&lt;/code&gt; w pliku &lt;code&gt;narration/app.ts&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S02E05&lt;/h2&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun read&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na pliku &lt;code&gt;read/article.md&lt;/code&gt; i generuje plik audio w folderze read/summary.wav&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mindmap&lt;/h3&gt; &#xA;&lt;p&gt;Ten przykład wymaga uruchomienia frontendu w folderze &lt;code&gt;audio-map-frontend&lt;/code&gt; oraz backendu w folderze &lt;code&gt;audio-map&lt;/code&gt;. W związku z tym przykład &lt;strong&gt;trzeba&lt;/strong&gt; uruchomić na własnym komputerze.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie frontendu: &lt;code&gt;bun map:dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uruchomienie backendu: &lt;code&gt;bun audio-map&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: Otwórz w przeglądarce stronę &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun notes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na wiadomości wpisanej w treść pliku &lt;code&gt;notes/app.ts&lt;/code&gt; (jest tam kilka przykładów innych wiadomości, które można podmienić).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S03E01&lt;/h2&gt; &#xA;&lt;h3&gt;Text Splitter&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun text-splitter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na plikach markdown z katalogu &#34;text-splitter&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Unstructured&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun unstructured&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na pliku source.md z katalogu &#34;unstructured&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S03E02&lt;/h2&gt; &#xA;&lt;h3&gt;Embedding&lt;/h3&gt; &#xA;&lt;p&gt;Uruchomienie tego przykładu wymaga uzupełnienia pliku &lt;code&gt;.env&lt;/code&gt; o wartości &#34;QDRANT_URL&#34; oraz &#34;QDRANT_API_KEY&#34;. Wartości te można znaleźć w panelu Qdrant po zalogowaniu na bezpłatne konto na stronie &lt;a href=&#34;https://cloud.qdrant.io/&#34;&gt;Qdrant Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.overment.com/aidevs3_cluster-1732010353.png&#34; alt=&#34;Qdrant Cloud&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Natomiast klucz API można pobrać w zakładce &#34;Data Access Control&#34;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun embedding&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku embedding/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rerank&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun rerank&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku rerank/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Naive RAG&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun naive-rag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku naive-rag/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Better RAG&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun better-rag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku better-rag/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Semantic&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun semantic&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku semantic/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S03E03&lt;/h2&gt; &#xA;&lt;h3&gt;Algolia&lt;/h3&gt; &#xA;&lt;p&gt;Do uruchomienia tego przykładu konieczne jest uzupełnienie &lt;code&gt;ALGOLIA_APP_ID&lt;/code&gt; oraz &lt;code&gt;ALGOLIA_API_KEY&lt;/code&gt; w pliku &lt;code&gt;.env&lt;/code&gt;. &lt;strong&gt;UWAGA&lt;/strong&gt;: przy pierwszym uruchomieniu przykładu pojawi się błąd ale spowoduje to utworzenie indeksu w Algolia. Wówczas należy przejść do panelu Algolia i w zakładce &#34;Facets&#34; dodać nowy facet o nazwie &lt;code&gt;author&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.overment.com/2024-11-20/aidevs3_algolia-09eeb970-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun algolia&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku algolia/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sync&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;UWAGA&lt;/strong&gt;: Do uruchomienia tego przykładu konieczne jest uzupełnienie &lt;code&gt;ALGOLIA_APP_ID&lt;/code&gt; oraz &lt;code&gt;ALGOLIA_API_KEY&lt;/code&gt; w pliku &lt;code&gt;.env&lt;/code&gt;. Wymagane jest bezpłatne konto na &lt;a href=&#34;https://www.algolia.com/&#34;&gt;Algolia&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dodatkowo jeśli wyniki wyszukiwania nie są poprawnie zwracane, należy sprawdzić&amp;nbsp;czy pole &lt;code&gt;text&lt;/code&gt; zostało poprawnie ustawione w panelu Algolia jako &lt;code&gt;searchableAttributes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.overment.com/2024-11-19/aidevs3_cleanshot-3e7fd444-c.png&#34; alt=&#34;Algolia&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun sync&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku sync/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hybrid&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;UWAGA&lt;/strong&gt;: Do uruchomienia tego przykładu konieczne jest uzupełnienie &lt;code&gt;QDRANT_URL&lt;/code&gt; oraz &lt;code&gt;QDRANT_API_KEY&lt;/code&gt; w pliku &lt;code&gt;.env&lt;/code&gt;. Konieczne jest także połączenie z Algolia podobnie jak w przypadku przykładu &lt;code&gt;sync&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun hybrid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku hybrid/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;S03E05&lt;/h2&gt; &#xA;&lt;p&gt;Do uruchomienia tego przykładu konieczne jest połączenie z bazą Neo4j. Można ją&amp;nbsp;zainstalować lokalnie, a następnie uzupełnić plik &lt;code&gt;.env&lt;/code&gt; o wartości &lt;code&gt;NEO4J_URI&lt;/code&gt;, &lt;code&gt;NEO4J_USER&lt;/code&gt; oraz &lt;code&gt;NEO4J_PASSWORD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Neo4j-101&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun neo4j-101&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku neo4j-101/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Neo4j&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uruchomienie kodu: &lt;code&gt;bun neo4j&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interakcja: przykład wykonuje się&amp;nbsp;automatycznie na danych osadzonych w pliku neo4j/app.ts&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bytedance/UI-TARS-desktop</title>
    <updated>2025-05-13T01:29:06Z</updated>
    <id>tag:github.com,2025-05-13:/bytedance/UI-TARS-desktop</id>
    <link href="https://github.com/bytedance/UI-TARS-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A GUI Agent application based on UI-TARS(Vision-Language Model) that allows you to control your computer using natural language.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/agent-tars/README.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/agent-tars/static/hero.png&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;[2025-03-18]&lt;/strong&gt; We released a &lt;strong&gt;technical preview&lt;/strong&gt; version of a new desktop app - &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/agent-tars/README.md&#34;&gt;Agent TARS&lt;/a&gt;, a multimodal AI agent that leverages browser operations by visually interpreting web pages and seamlessly integrating with command lines and file systems.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;UI-TARS&#34; width=&#34;260&#34; src=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;UI-TARS Desktop&lt;/h1&gt; &#xA;&lt;p&gt;UI-TARS Desktop is a GUI Agent application based on &lt;a href=&#34;https://github.com/bytedance/UI-TARS&#34;&gt;UI-TARS (Vision-Language Model)&lt;/a&gt; that allows you to control your computer using natural language.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &amp;nbsp;&amp;nbsp; 📑 &lt;a href=&#34;https://arxiv.org/abs/2501.12326&#34;&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | 🤗 &lt;a href=&#34;https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B&#34;&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🫨 &lt;a href=&#34;https://discord.gg/pTXwYVjfcs&#34;&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🤖 &lt;a href=&#34;https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640&#34;&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br&gt; 🖥️ Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; 👓 &lt;a href=&#34;https://github.com/web-infra-dev/midscene&#34;&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://deepwiki.com/bytedance/UI-TARS-desktop&#34;&gt; &lt;img alt=&#34;Ask DeepWiki.com&#34; src=&#34;https://devin.ai/assets/deepwiki-badge.png&#34; style=&#34;height: 18px; vertical-align: middle;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/13584&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/13584&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Showcases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Instruction&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Video&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27&#34; height=&#34;300&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;video src=&#34;https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199&#34; height=&#34;300&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - 🎉 We&#39;re thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href=&#34;https://seed-tars.com/1.5&#34;&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - 📦 Introduced &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md&#34;&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - 🚀 We updated the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment&#34;&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the 中文版: &lt;a href=&#34;https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb&#34;&gt;GUI模型部署教程&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Natural language control powered by Vision-Language Model&lt;/li&gt; &#xA; &lt;li&gt;🖥️ Screenshot and visual recognition support&lt;/li&gt; &#xA; &lt;li&gt;🎯 Precise mouse and keyboard control&lt;/li&gt; &#xA; &lt;li&gt;💻 Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; &#xA; &lt;li&gt;🔄 Real-time feedback and status display&lt;/li&gt; &#xA; &lt;li&gt;🔐 Private and secure - fully local processing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md&#34;&gt;Quick Start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/bytedance/UI-TARS/raw/main/README_deploy.md&#34;&gt;Deployment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SDK (Experimental)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md&#34;&gt;@ui-tars/sdk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;UI-TARS Desktop is licensed under the Apache License 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@article{qin2025ui,&#xA;  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},&#xA;  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},&#xA;  journal={arXiv preprint arXiv:2501.12326},&#xA;  year={2025}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>