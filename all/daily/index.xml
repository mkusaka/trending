<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-25T01:28:30Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Flowseal/zapret-discord-youtube</title>
    <updated>2025-02-25T01:28:30Z</updated>
    <id>tag:github.com,2025-02-25:/Flowseal/zapret-discord-youtube</id>
    <link href="https://github.com/Flowseal/zapret-discord-youtube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/5968/5968756.png&#34; height=&#34;28&#34;&gt; &lt;a href=&#34;https://github.com/Flowseal/&#34;&gt;Flowseal&lt;/a&gt;&lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube&#34;&gt;/zapret-discord-youtube&lt;/a&gt; &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/1384/1384060.png&#34; height=&#34;28&#34;&gt;&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;&#34;Plug &amp;amp; Play&#34;&lt;/em&gt; обход блокировок &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/5968/5968756.png&#34; height=&#34;15&#34;&gt; Discord и &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/1384/1384060.png&#34; height=&#34;15&#34;&gt; YouTube для Windows&lt;/p&gt; &#xA; &lt;p&gt;Альтернатива &lt;a href=&#34;https://github.com/bol-van&#34;&gt;bol-van&lt;/a&gt;&lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle&#34;&gt;/zapret-win-bundle&lt;/a&gt;&lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle/tree/master/zapret-winws&#34;&gt;/zapret-winws&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION]&lt;/p&gt; &#xA; &lt;h3&gt;АНТИВИРУСЫ&lt;/h3&gt; &#xA; &lt;p&gt;WinDivert может вызвать реакцию антивируса. WinDivert - это инструмент для перехвата и фильтрации трафика, необходимый для работы zapret. Замена iptables и NFQUEUE в Linux, которых нет под Windows. Он может использоваться как хорошими, так и плохими программами, но сам по себе не является вирусом. Драйвер WinDivert64.sys подписан для возможности загрузки в 64-битное ядро Windows. Но антивирусы склонны относить подобное к классам повышенного риска или хакерским инструментам. В случае проблем используйте исключения или выключайте антивирус совсем.&lt;/p&gt; &#xA; &lt;p&gt;*&lt;em&gt;Выдержка из &lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle/raw/master/readme.md#%D0%B0%D0%BD%D1%82%D0%B8%D0%B2%D0%B8%D1%80%D1%83%D1%81%D1%8B&#34;&gt;&lt;code&gt;readme.md&lt;/code&gt;&lt;/a&gt; репозитория &lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle&#34;&gt;bol-van/zapret-win-bundle&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Все файлы в папке &lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/bin&#34;&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/a&gt; взяты из &lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle/tree/master/zapret-winws&#34;&gt;zapret-win-bundle/zapret-winws&lt;/a&gt;. Вы можете это проверить с помощью хэшей/контрольных сумм.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⚙️Использование&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Загрузите архив (zip/rar) со &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/releases/latest&#34;&gt;страницы последнего релиза&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Распакуйте содержимое архива по пути, который не содержит кириллицу/спец. символы&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Запустите нужный файл&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ℹ️Краткие описания файлов&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/discord.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;discord.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - запуск со стратегией для обхода блокировки &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/5968/5968756.png&#34; height=&#34;15&#34;&gt; Discord&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/general.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;general.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - запуск со стратегией для обхода блокировок &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/5968/5968756.png&#34; height=&#34;15&#34;&gt; Discord и &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/1384/1384060.png&#34; height=&#34;12&#34;&gt; YouTube&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/service_install.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;service_install.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - установка на автозапуск (как службы Windows: &lt;code&gt;zapret&lt;/code&gt;, &lt;code&gt;WinDivert&lt;/code&gt;), можно выбрать любую стратегию (название файла стратегии &lt;strong&gt;НЕ&lt;/strong&gt; должно начинаться со слова &lt;code&gt;service&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/service_remove.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;service_remove.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - остановка и удаление служб &lt;code&gt;zapret&lt;/code&gt; и &lt;code&gt;WinDivert&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/service_status.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;service_status.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - проверка состояния служб &lt;code&gt;zapret&lt;/code&gt; и &lt;code&gt;WinDivert&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/check_updates.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;check_updates.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; - проверка обновлений&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;☑️Распространенные проблемы&lt;/h2&gt; &#xA;&lt;h3&gt;Не работает &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/5968/5968756.png&#34; height=&#34;18&#34;&gt; Discord&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;См. &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/discussions/252&#34;&gt;#252&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Не работает &lt;img src=&#34;https://cdn-icons-png.flaticon.com/128/1384/1384060.png&#34; height=&#34;18&#34;&gt; YouTube&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;См. &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/discussions/251&#34;&gt;#251&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Обход не работает&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;Стратегии блокировок со временем изменяются.&lt;/strong&gt; Определенная стратегия обхода zapret может работать какое-то время, но если меняется способ блокировки или обнаружения обхода блокировки, то она перестанет работать. В репозитории представлены множество различных стратегий для обхода. Если ни одна из них вам не помогает, то вам необходимо создать новую, взяв за основу одну из представленных здесь и изменив её параметры. Информацию про параметры стратегий вы можете найти &lt;a href=&#34;https://github.com/bol-van/zapret/raw/master/docs/readme.md#nfqws&#34;&gt;тут&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Проверьте другие стратегии (&lt;strong&gt;&lt;code&gt;ALT&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;МГТС&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Обновите файлы в папке &lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/bin&#34;&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/a&gt;, взяв новые из &lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle/tree/master/zapret-winws&#34;&gt;zapret-win-bundle/zapret-winws&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;См. &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/issues/765&#34;&gt;#765&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Файлы не запускаются&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;См. &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/issues/522&#34;&gt;#522&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Требуется цифровая подпись драйвера WinDivert (Windows 7)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Замените файлы &lt;code&gt;WinDivert.dll&lt;/code&gt; и &lt;code&gt;WinDivert64.sys&lt;/code&gt; в папке &lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/bin&#34;&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/a&gt; на одноименные из &lt;a href=&#34;https://github.com/bol-van/zapret-win-bundle/tree/master/win7&#34;&gt;zapret-win-bundle/win7&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Не работает вместе с VPN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Отключите функцию &lt;strong&gt;TUN&lt;/strong&gt; (Tunneling) в настройках вашего VPN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;При удалении с помощью &lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/service_remove.bat&#34;&gt;&lt;strong&gt;&lt;code&gt;service_remove.bat&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, WinDivert остается в службах&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Узнайте название службы с помощью команды, в командной строке Windows (Win+R, &lt;code&gt;cmd&lt;/code&gt;):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;driverquery | find &#34;Divert&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Остановите и удалите службу командами:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;sc stop {название, которые вы узнали в шаге 1}&#xA;&#xA;sc delete {название, которые вы узнали в шаге 1}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Не нашли своей проблемы&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Создайте её &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/issues&#34;&gt;тут&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗒️Добавление адресов прочих заблокированных ресурсов&lt;/h2&gt; &#xA;&lt;p&gt;Список блокирующихся адресов для обхода можно расширить, добавляя их в:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/list-general.txt&#34;&gt;&lt;code&gt;list-general.txt&lt;/code&gt;&lt;/a&gt; для файлов &lt;code&gt;general *.bat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/list-discord.txt&#34;&gt;&lt;code&gt;list-discord.txt&lt;/code&gt;&lt;/a&gt; для файла &lt;a href=&#34;https://raw.githubusercontent.com/Flowseal/zapret-discord-youtube/main/discord.bat&#34;&gt;&lt;code&gt;discord.bat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; После обновления списка адресов zapret необходимо перезапустить.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⭐Поддержка проекта&lt;/h2&gt; &#xA;&lt;p&gt;Вы можете поддержать проект, поставив &lt;span&gt;⭐&lt;/span&gt; этому репозиторию (сверху справа этой страницы)&lt;/p&gt; &#xA;&lt;p&gt;Также, вы можете материально поддержать разработчика zapret &lt;a href=&#34;https://github.com/bol-van/zapret/issues/590#issuecomment-2408866758&#34;&gt;тут&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#Flowseal/zapret-discord-youtube&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Flowseal/zapret-discord-youtube&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Flowseal/zapret-discord-youtube&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=Flowseal/zapret-discord-youtube&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;⚖️Лицензирование&lt;/h2&gt; &#xA;&lt;p&gt;Проект распространяется на условиях лицензии &lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/raw/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🩷Благодарность участникам проекта&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Flowseal/zapret-discord-youtube/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=Flowseal/zapret-discord-youtube&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💖 Отдельная благодарность разработчику &lt;a href=&#34;https://github.com/bol-van/zapret&#34;&gt;zapret&lt;/a&gt; - &lt;a href=&#34;https://github.com/bol-van&#34;&gt;bol-van&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mishushakov/llm-scraper</title>
    <updated>2025-02-25T01:28:30Z</updated>
    <id>tag:github.com,2025-02-25:/mishushakov/llm-scraper</id>
    <link href="https://github.com/mishushakov/llm-scraper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turn any webpage into structured data using LLMs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LLM Scraper&lt;/h1&gt; &#xA;&lt;img width=&#34;1800&#34; alt=&#34;Screenshot 2024-04-20 at 23 11 16&#34; src=&#34;https://github.com/mishushakov/llm-scraper/assets/10400064/ab00e048-a9ff-43b6-81d5-2e58090e2e65&#34;&gt; &#xA;&lt;p&gt;LLM Scraper is a TypeScript library that allows you to extract structured data from &lt;strong&gt;any&lt;/strong&gt; webpage using LLMs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;a href=&#34;https://raw.githubusercontent.com/mishushakov/llm-scraper/main/#code-generation&#34;&gt;Code-generation&lt;/a&gt; is now supported in LLM Scraper.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Under the hood, it uses function calling to convert pages to structured data. You can find more about this approach &lt;a href=&#34;https://til.simonwillison.net/gpt3/openai-python-functions-data-extraction&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports &lt;strong&gt;Local (Ollama, GGUF)&lt;/strong&gt;, OpenAI, Vercel AI SDK Providers&lt;/li&gt; &#xA; &lt;li&gt;Schemas defined with Zod&lt;/li&gt; &#xA; &lt;li&gt;Full type-safety with TypeScript&lt;/li&gt; &#xA; &lt;li&gt;Based on Playwright framework&lt;/li&gt; &#xA; &lt;li&gt;Streaming objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NEW&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mishushakov/llm-scraper/main/#code-generation&#34;&gt;Code-generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports 4 formatting modes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;html&lt;/code&gt; for loading raw HTML&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; for loading markdown&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;text&lt;/code&gt; for loading extracted text (using &lt;a href=&#34;https://github.com/mozilla/readability&#34;&gt;Readability.js&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image&lt;/code&gt; for loading a screenshot (multi-modal only)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure to give it a star!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;165&#34; alt=&#34;Screenshot 2024-04-20 at 22 13 32&#34; src=&#34;https://github.com/mishushakov/llm-scraper/assets/10400064/11e2a79f-a835-48c4-9f85-5c104ca7bb49&#34;&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the required dependencies from npm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm i zod playwright llm-scraper&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize your LLM:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm i @ai-sdk/openai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { openai } from &#39;@ai-sdk/openai&#39;&#xA;&#xA;const llm = openai.chat(&#39;gpt-4o&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Groq&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm i @ai-sdk/openai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { createOpenAI } from &#39;@ai-sdk/openai&#39;&#xA;const groq = createOpenAI({&#xA;  baseURL: &#39;https://api.groq.com/openai/v1&#39;,&#xA;  apiKey: process.env.GROQ_API_KEY,&#xA;})&#xA;&#xA;const llm = groq(&#39;llama3-8b-8192&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Ollama&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm i ollama-ai-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { ollama } from &#39;ollama-ai-provider&#39;&#xA;&#xA;const llm = ollama(&#39;llama3&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;GGUF&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { LlamaModel } from &#39;node-llama-cpp&#39;&#xA;&#xA;const llm = new LlamaModel({ modelPath: &#39;model.gguf&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new scraper instance provided with the llm:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import LLMScraper from &#39;llm-scraper&#39;&#xA;&#xA;const scraper = new LLMScraper(llm)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;In this example, we&#39;re extracting top stories from HackerNews:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { chromium } from &#39;playwright&#39;&#xA;import { z } from &#39;zod&#39;&#xA;import { openai } from &#39;@ai-sdk/openai&#39;&#xA;import LLMScraper from &#39;llm-scraper&#39;&#xA;&#xA;// Launch a browser instance&#xA;const browser = await chromium.launch()&#xA;&#xA;// Initialize LLM provider&#xA;const llm = openai.chat(&#39;gpt-4o&#39;)&#xA;&#xA;// Create a new LLMScraper&#xA;const scraper = new LLMScraper(llm)&#xA;&#xA;// Open new page&#xA;const page = await browser.newPage()&#xA;await page.goto(&#39;https://news.ycombinator.com&#39;)&#xA;&#xA;// Define schema to extract contents into&#xA;const schema = z.object({&#xA;  top: z&#xA;    .array(&#xA;      z.object({&#xA;        title: z.string(),&#xA;        points: z.number(),&#xA;        by: z.string(),&#xA;        commentsURL: z.string(),&#xA;      })&#xA;    )&#xA;    .length(5)&#xA;    .describe(&#39;Top 5 stories on Hacker News&#39;),&#xA;})&#xA;&#xA;// Run the scraper&#xA;const { data } = await scraper.run(page, schema, {&#xA;  format: &#39;html&#39;,&#xA;})&#xA;&#xA;// Show the result from LLM&#xA;console.log(data.top)&#xA;&#xA;await page.close()&#xA;await browser.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Streaming&lt;/h2&gt; &#xA;&lt;p&gt;Replace your &lt;code&gt;run&lt;/code&gt; function with &lt;code&gt;stream&lt;/code&gt; to get a partial object stream (Vercel AI SDK only).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run the scraper in streaming mode&#xA;const { stream } = await scraper.stream(page, schema)&#xA;&#xA;// Stream the result from LLM&#xA;for await (const data of stream) {&#xA;  console.log(data.top)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code-generation&lt;/h2&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;generate&lt;/code&gt; function you can generate re-usable playwright script that scrapes the contents according to a schema.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Generate code and run it on the page&#xA;const { code } = await scraper.generate(page, schema)&#xA;const result = await page.evaluate(code)&#xA;const data = schema.parse(result)&#xA;&#xA;// Show the parsed result&#xA;console.log(data.news)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open-source project, we welcome contributions from the community. If you are experiencing any bugs or want to add some improvements, please feel free to open an issue or pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vllm-project/aibrix</title>
    <updated>2025-02-25T01:28:30Z</updated>
    <id>tag:github.com,2025-02-25:/vllm-project/aibrix</id>
    <link href="https://github.com/vllm-project/aibrix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cost-efficient and pluggable Infrastructure components for GenAI inference&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AIBrix&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to AIBrix, an open-source initiative designed to provide essential building blocks to construct scalable GenAI inference infrastructure. AIBrix delivers a cloud-native solution optimized for deploying, managing, and scaling large language model (LLM) inference, tailored specifically to enterprise needs.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; | &lt;a href=&#34;https://aibrix.readthedocs.io/latest/&#34;&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://aibrix.github.io/&#34;&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/vllm-project/aibrix/raw/main/docs/paper/AIBrix_White_Paper_0219_2025.pdf&#34;&gt;&lt;b&gt;White Paper&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://x.com/vllm_project&#34;&gt;&lt;b&gt;Twitter/X&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://vllm-dev.slack.com/archives/C08EQ883CSV&#34;&gt;&lt;b&gt;Developer Slack&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;p&gt;The initial release includes the following key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;High-Density LoRA Management&lt;/strong&gt;: Streamlined support for lightweight, low-rank adaptations of models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM Gateway and Routing&lt;/strong&gt;: Efficiently manage and direct traffic across multiple models and replicas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM App-Tailored Autoscaler&lt;/strong&gt;: Dynamically scale inference resources based on real-time demand.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unified AI Runtime&lt;/strong&gt;: A versatile sidecar enabling metric standardization, model downloading, and management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distributed Inference&lt;/strong&gt;: Scalable architecture to handle large workloads across multiple nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distributed KV Cache&lt;/strong&gt;: Enables high-capacity, cross-engine KV reuse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost-efficient Heterogeneous Serving&lt;/strong&gt;: Enables mixed GPU inference to reduce costs with SLO guarantees.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPU Hardware Failure Detection&lt;/strong&gt;: Proactive detection of GPU hardware issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vllm-project/aibrix/main/docs/source/assets/images/aibrix-architecture-v1.jpeg&#34; alt=&#34;aibrix-architecture-v1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To get started with AIBrix, clone this repository and follow the setup instructions in the documentation. Our comprehensive guide will help you configure and deploy your first LLM infrastructure seamlessly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Local Testing&#xA;git clone https://github.com/vllm-project/aibrix.git&#xA;cd aibrix&#xA;&#xA;# Install nightly aibrix dependencies&#xA;kubectl create -k config/dependency&#xA;&#xA;# Install nightly aibrix components&#xA;kubectl create -k config/default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install stable distribution&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install component dependencies&#xA;kubectl create -k &#34;github.com/vllm-project/aibrix/config/dependency?ref=v0.2.0&#34;&#xA;&#xA;# Install aibrix components&#xA;kubectl create -k &#34;github.com/vllm-project/aibrix/config/overlays/release?ref=v0.2.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed documentation on installation, configuration, and usage, please visit our &lt;a href=&#34;https://aibrix.readthedocs.io/latest/&#34;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! Check out our &lt;a href=&#34;https://github.com/vllm-project/aibrix/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to see how you can make a difference.&lt;/p&gt; &#xA;&lt;p&gt;Slack Channel: &lt;a href=&#34;https://vllm-dev.slack.com/archives/C08EQ883CSV&#34;&gt;#aibrix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;AIBrix is licensed under the &lt;a href=&#34;https://github.com/vllm-project/aibrix/LICENSE&#34;&gt;APACHE 2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or encounter any issues, please submit an issue on our &lt;a href=&#34;https://github.com/vllm-project/aibrix/issues&#34;&gt;GitHub issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for choosing AIBrix for your GenAI infrastructure needs!&lt;/p&gt;</summary>
  </entry>
</feed>