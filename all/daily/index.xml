<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:28:47Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jmpoep/vmprotect-3.5.1</title>
    <updated>2023-12-10T01:28:47Z</updated>
    <id>tag:github.com,2023-12-10:/jmpoep/vmprotect-3.5.1</id>
    <link href="https://github.com/jmpoep/vmprotect-3.5.1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;VMProtect project&lt;/h2&gt; &#xA;&lt;p&gt;Building&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;POSIX:&#xA;&#x9;$ ./build.sh&#xA;&#xA;Windows:&#xA;&#x9;&amp;gt; build.bat&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>catchorg/Catch2</title>
    <updated>2023-12-10T01:28:47Z</updated>
    <id>tag:github.com,2023-12-10:/catchorg/Catch2</id>
    <link href="https://github.com/catchorg/Catch2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern, C++-native, test framework for unit-tests, TDD and BDD - using C++14, C++17 and later (C++11 support is in v2.x branch, and C++03 on the Catch1.x branch)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a id=&#34;top&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/data/artwork/catch2-logo-small-with-background.png&#34; alt=&#34;Catch2 logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/catchorg/catch2/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/catchorg/catch2.svg?sanitize=true&#34; alt=&#34;Github Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/catchorg/catch2&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true&amp;amp;branch=devel&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/catchorg/Catch2&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/catchorg/Catch2/branch/devel/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godbolt.org/z/EdoY15q9G&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/try-online-blue.svg?sanitize=true&#34; alt=&#34;Try online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Chat!-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat in Discord: https://discord.gg/4CWS9zD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Catch2?&lt;/h2&gt; &#xA;&lt;p&gt;Catch2 is mainly a unit testing framework for C++, but it also provides basic micro-benchmarking features, and simple BDD macros.&lt;/p&gt; &#xA;&lt;p&gt;Catch2&#39;s main advantage is that using it is both simple and natural. Test names do not have to be valid identifiers, assertions look like normal C++ boolean expressions, and sections provide a nice and local way to share set-up and tear-down code in tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example unit test&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;catch2/catch_test_macros.hpp&amp;gt;&#xA;&#xA;#include &amp;lt;cstdint&amp;gt;&#xA;&#xA;uint32_t factorial( uint32_t number ) {&#xA;    return number &amp;lt;= 1 ? number : factorial(number-1) * number;&#xA;}&#xA;&#xA;TEST_CASE( &#34;Factorials are computed&#34;, &#34;[factorial]&#34; ) {&#xA;    REQUIRE( factorial( 1) == 1 );&#xA;    REQUIRE( factorial( 2) == 2 );&#xA;    REQUIRE( factorial( 3) == 6 );&#xA;    REQUIRE( factorial(10) == 3&#39;628&#39;800 );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example microbenchmark&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;catch2/catch_test_macros.hpp&amp;gt;&#xA;#include &amp;lt;catch2/benchmark/catch_benchmark.hpp&amp;gt;&#xA;&#xA;#include &amp;lt;cstdint&amp;gt;&#xA;&#xA;uint64_t fibonacci(uint64_t number) {&#xA;    return number &amp;lt; 2 ? number : fibonacci(number - 1) + fibonacci(number - 2);&#xA;}&#xA;&#xA;TEST_CASE(&#34;Benchmark Fibonacci&#34;, &#34;[!benchmark]&#34;) {&#xA;    REQUIRE(fibonacci(5) == 5);&#xA;&#xA;    REQUIRE(fibonacci(20) == 6&#39;765);&#xA;    BENCHMARK(&#34;fibonacci 20&#34;) {&#xA;        return fibonacci(20);&#xA;    };&#xA;&#xA;    REQUIRE(fibonacci(25) == 75&#39;025);&#xA;    BENCHMARK(&#34;fibonacci 25&#34;) {&#xA;        return fibonacci(25);&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that benchmarks are not run by default, so you need to run it explicitly with the &lt;code&gt;[!benchmark]&lt;/code&gt; tag.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Catch2 v3 has been released!&lt;/h2&gt; &#xA;&lt;p&gt;You are on the &lt;code&gt;devel&lt;/code&gt; branch, where the v3 version is being developed. v3 brings a bunch of significant changes, the big one being that Catch2 is no longer a single-header library. Catch2 now behaves as a normal library, with multiple headers and separately compiled implementation.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is slowly being updated to take these changes into account, but this work is currently still ongoing.&lt;/p&gt; &#xA;&lt;p&gt;For migrating from the v2 releases to v3, you should look at &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/migrate-v2-to-v3.md#top&#34;&gt;our documentation&lt;/a&gt;. It provides a simple guidelines on getting started, and collects most common migration problems.&lt;/p&gt; &#xA;&lt;p&gt;For the previous major version of Catch2 &lt;a href=&#34;https://github.com/catchorg/Catch2/tree/v2.x&#34;&gt;look into the &lt;code&gt;v2.x&lt;/code&gt; branch here on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/why-catch.md#top&#34;&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/tutorial.md#top&#34;&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/Readme.md#top&#34;&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues and bugs can be raised on the &lt;a href=&#34;https://github.com/catchorg/Catch2/issues&#34;&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For discussion or questions please use &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;our Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See who else is using Catch2 in &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/opensource-users.md#top&#34;&gt;Open Source Software&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/commercial-users.md#top&#34;&gt;commercially&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>keyvanakbary/learning-notes</title>
    <updated>2023-12-10T01:28:47Z</updated>
    <id>tag:github.com,2023-12-10:/keyvanakbary/learning-notes</id>
    <link href="https://github.com/keyvanakbary/learning-notes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Notes on books I read, talks I watch, articles I study, and papers I love&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Learning Notes&lt;/h1&gt; &#xA;&lt;p&gt;Taking notes on books I read, talks I watch, articles I study, and papers I love – recalling them right afterward by creating short summaries – helps a lot in my learning process. Here you&#39;ll find some of those little pieces.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for an easy way to consume these notes, please check out &lt;a href=&#34;https://keyvanakbary.github.io/learning-notes/&#34;&gt;keyvanakbary.github.io/learning-notes/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Books&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/99-bottles-of-oop.md&#34;&gt;99 Bottles of OOP&lt;/a&gt; by &lt;strong&gt;Sandi Metz&lt;/strong&gt; and &lt;strong&gt;Katrina Owen&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/an-elegant-puzzle.md&#34;&gt;An Elegant Puzzle: Systems of Engineering Management&lt;/a&gt; by &lt;strong&gt;Will Larson&lt;/strong&gt;, 2019.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/a-guide-to-the-good-life.md&#34;&gt;A Guide to the Good Life: The Ancient Art of Stoic Joy&lt;/a&gt; by &lt;strong&gt;William B. Irvine&lt;/strong&gt;, 2008.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/designing-data-intensive-applications.md&#34;&gt;Designing Data-Intensive Applications&lt;/a&gt; by &lt;strong&gt;Martin Kleppmann&lt;/strong&gt;, 2015.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/distributed-systems-observability.md&#34;&gt;Distributed Systems Observability&lt;/a&gt; by &lt;strong&gt;Cindy Sridharan&lt;/strong&gt;, 2018.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/effective-java.md&#34;&gt;Effective Java&lt;/a&gt; by &lt;strong&gt;Joshua Bloch&lt;/strong&gt;, 2001.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/elements-of-programming-style.md&#34;&gt;Elements of Programming Style&lt;/a&gt; by &lt;strong&gt;Brian W. Kernighan&lt;/strong&gt; and &lt;strong&gt;P.J. Plauger&lt;/strong&gt;, 1988.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/el-cerebro-del-nino-explicado-a-los-padres.md&#34;&gt;El cerebro del niño explicado a los padres&lt;/a&gt; by &lt;strong&gt;Álvaro de Bilbao&lt;/strong&gt;, 2015,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/escaping-the-build-trap.md&#34;&gt;Escaping the Build Trap&lt;/a&gt; by &lt;strong&gt;Melissa Perri&lt;/strong&gt;, 2019.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/how-to-win-friends-and-influence-people.md&#34;&gt;How to Win Friends and Influence People&lt;/a&gt; by &lt;strong&gt;Dale Carnegie&lt;/strong&gt;, 1936.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/kanban.md&#34;&gt;Kanban: Successful Evolutionary Change for Your Technology Business&lt;/a&gt; by &lt;strong&gt;David J. Anderson&lt;/strong&gt;, 2010.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/peopleware.md&#34;&gt;Peopleware: Productive Projects and Teams&lt;/a&gt; by &lt;strong&gt;Tom DeMarco&lt;/strong&gt; and &lt;strong&gt;Timothy R. Lister&lt;/strong&gt;, 1999.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/personal-kanban.md&#34;&gt;Personal Kanban: Mapping Work, Navigating Life&lt;/a&gt; by &lt;strong&gt;Jim Benson&lt;/strong&gt; and &lt;strong&gt;Tonianne DeMaria Barry&lt;/strong&gt;, 2011.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/radical-focus.md&#34;&gt;Radical Focus: Achieving Your Most Important Goals with Objectives and Key Results&lt;/a&gt; by &lt;strong&gt;Christina Wodtke&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/resilient-management.md&#34;&gt;Resilient Management&lt;/a&gt; by &lt;strong&gt;Lara Hogan&lt;/strong&gt;, 2019.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/screw-it-lets-do-it.md&#34;&gt;Screw It, Let&#39;s Do It: Lessons In Life&lt;/a&gt; by &lt;strong&gt;Richard Branson&lt;/strong&gt;, 2006.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/test-driven-development.md&#34;&gt;Test Driven Development: By Example&lt;/a&gt; by &lt;strong&gt;Kent Beck&lt;/strong&gt;, 2002.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-elements-of-style.md&#34;&gt;The Elements of Style&lt;/a&gt; by &lt;strong&gt;William Strunk Jr.&lt;/strong&gt; and &lt;strong&gt;E.B. White&lt;/strong&gt;, 1918.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-lean-startup.md&#34;&gt;The Lean Startup&lt;/a&gt; by &lt;strong&gt;Eric Ries&lt;/strong&gt;, 2011.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-managers-path.md&#34;&gt;The Manager&#39;s Path: A Guide for Tech Leaders Navigating Growth and Change&lt;/a&gt; by &lt;strong&gt;Camille Fournier&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-manual.md&#34;&gt;The Manual: A Philosopher&#39;s Guide to Life&lt;/a&gt; by &lt;strong&gt;Epictetus&lt;/strong&gt; and &lt;strong&gt;Sam Torode&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-phoenix-project.md&#34;&gt;The Phoenix Project: A Novel About IT, DevOps&lt;/a&gt; by &lt;strong&gt;Gene Kim&lt;/strong&gt;, &lt;strong&gt;Kevin Behr&lt;/strong&gt; and &lt;strong&gt;George Spafford&lt;/strong&gt;, 2013.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/the-subtle-art-of-not-giving-a-fuck.md&#34;&gt;The Subtle Art of Not Giving a Fuck: A Counterintuitive Approach to Living a Good Life&lt;/a&gt; by &lt;strong&gt;Mark Manson&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/books/understanding-the-four-rules-of-simple-design.md&#34;&gt;Understanding the Four Rules of Simple Design&lt;/a&gt; by &lt;strong&gt;Corey Haines&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are interested in the books I read, &lt;a href=&#34;https://www.goodreads.com/keyvanakbary&#34;&gt;follow me in Goodreads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Talks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/8-lines-of-code.md&#34;&gt;8 Lines of Code&lt;/a&gt; by &lt;strong&gt;Greg Young&lt;/strong&gt;, 2011.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/am-i-senior-yet.md&#34;&gt;Am I senior yet?&lt;/a&gt; by &lt;strong&gt;Katlyn Parvin&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/clean-architecture-and-design.md&#34;&gt;Clean Architecture and Design&lt;/a&gt; by &lt;strong&gt;Robert C. Martin&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/everything-you-wanted-to-know-about-distributed-tracing.md&#34;&gt;Everything You Wanted to Know About Distributed Tracing&lt;/a&gt; by &lt;strong&gt;Hungai Kevin&lt;/strong&gt;, 2019.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/grinding-the-monolith.md&#34;&gt;Grinding the Monolith&lt;/a&gt; by &lt;strong&gt;Michael Nygard&lt;/strong&gt;, 2018.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/how-to-make-a-sandwich.md&#34;&gt;How to Make a Sandwich&lt;/a&gt; by &lt;strong&gt;Dan North&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/mastering-chaos-a-netflix-guide-to-microservices.md&#34;&gt;Mastering Chaos: A Netflix Guide to Microservices&lt;/a&gt; by &lt;strong&gt;Josh Evans&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/probabilistic-data-structures.md&#34;&gt;Probabilistic Data Structures&lt;/a&gt; by &lt;strong&gt;James Stanier&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/programming-accross-paradigms.md&#34;&gt;Programming Across Paradigms&lt;/a&gt; by &lt;strong&gt;Anjana Vakil&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/refactoring-from-good-to-great.md&#34;&gt;Refactoring, from good to great&lt;/a&gt; by &lt;strong&gt;Ben Orenstein&lt;/strong&gt;, 2012.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/rethinking-the-developer-career-path.md&#34;&gt;Rethinking the developer career path&lt;/a&gt; by &lt;strong&gt;Randall Koutnik&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/simplicity-is-complicated.md&#34;&gt;Simplicity is Complicated&lt;/a&gt; by &lt;strong&gt;Rob Pike&lt;/strong&gt;, 2015.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/tdd-where-did-it-all-go-wrong.md&#34;&gt;TDD, where did it all go wrong&lt;/a&gt; by &lt;strong&gt;Ian Cooper&lt;/strong&gt;, 2013.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/the-art-of-destroying-software.md&#34;&gt;The Art of Destroying Software&lt;/a&gt; by &lt;strong&gt;Greg Young&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/the-dos-and-donts-of-error-handling.md&#34;&gt;The Do&#39;s and Don&#39;ts of Error Handling&lt;/a&gt; by &lt;strong&gt;Joe Armstrong&lt;/strong&gt;, 2018.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/the-mess-we-are-in.md&#34;&gt;The Mess We Are In&lt;/a&gt; by &lt;strong&gt;Joe Armstrong&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/the-world-after-microservice-migration.md&#34;&gt;The World after Microservice Migration&lt;/a&gt; by &lt;strong&gt;Dejan Mitrovic&lt;/strong&gt;, 2018.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/what-i-learned-doing-250-interviews-at-google.md&#34;&gt;What I Learned Doing 250 Interviews at Google&lt;/a&gt; by &lt;strong&gt;Moishe Lettvin&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/talks/what-i-wish-i-had-known-before-scaling-uber-to-1000-services.md&#34;&gt;What I wish I had known before scaling Uber to 1000 services&lt;/a&gt; by &lt;strong&gt;Matt Ranney&lt;/strong&gt;, 2016.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Articles&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/articles/microservices.md&#34;&gt;Microservices&lt;/a&gt; by &lt;strong&gt;Martin Fowler&lt;/strong&gt;, 2014.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Papers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/gender-stereotypes-about-intellectualability.md&#34;&gt;Gender Stereotypes About Intellectualability&lt;/a&gt; by &lt;strong&gt;Lin Bian&lt;/strong&gt;, &lt;strong&gt;Sarah-Jane Leslie&lt;/strong&gt;, and &lt;strong&gt;Andrei Cimpian&lt;/strong&gt;, 2017.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/how-measurable-is-success.md&#34;&gt;How Measurable is Success?&lt;/a&gt; by &lt;strong&gt;Chester H. Bartoo&lt;/strong&gt;, 1939.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/managing-the-development-of-large-software-systems.md&#34;&gt;Managing The Development of Large Software Systems&lt;/a&gt; by &lt;strong&gt;Winston W. Royce&lt;/strong&gt;, 1970.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/map-reduce.md&#34;&gt;MapReduce: Simplified Data Processing on Large Clusters&lt;/a&gt;, by &lt;strong&gt;Jeffrey Dean&lt;/strong&gt; and &lt;strong&gt;Sanjay Ghemawat&lt;/strong&gt;, 2004.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/out-of-the-tar-pit.md&#34;&gt;Out of the Tar Pit&lt;/a&gt; by &lt;strong&gt;Ben Moseley&lt;/strong&gt; and &lt;strong&gt;Peter Marks&lt;/strong&gt;, 2006.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/papers/reflections-on-trusting-trust.md&#34;&gt;Reflections on Trusting Trust&lt;/a&gt; by &lt;strong&gt;Ken Thomson&lt;/strong&gt;, 1984.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Taking notes&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in my process to take notes, check out &lt;a href=&#34;https://raw.githubusercontent.com/keyvanakbary/learning-notes/master/taking-notes.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This is my personal learning space. I keep it for my enjoyment, if you are thinking about adding your summaries it may be a better idea to start your own.&lt;/p&gt; &#xA;&lt;p&gt;If you have any suggestions for improvement please feel free to open a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt;</summary>
  </entry>
</feed>