<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-27T01:28:00Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spotDL/spotify-downloader</title>
    <updated>2024-08-27T01:28:00Z</updated>
    <id>tag:github.com,2024-08-27:/spotDL/spotify-downloader</id>
    <link href="https://github.com/spotDL/spotify-downloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Download your Spotify playlists and songs along with album art and metadata (from YouTube if a match is found).&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;spotDL v4&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;spotDL&lt;/strong&gt; finds songs from Spotify playlists on YouTube and downloads them - along with album art, lyrics and metadata.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/spotDL/spotify-downloader/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/spotdl/spotify-downloader?color=44CC11&amp;amp;style=flat-square&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/spotdl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/spotDL?color=%2344CC11&amp;amp;style=flat-square&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/spotdl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dw/spotDL?label=downloads@pypi&amp;amp;color=344CC11&amp;amp;style=flat-square&#34; alt=&#34;PyPi downloads&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/spotDL/spotify-downloader?style=flat-square&#34; alt=&#34;Contributors&#34;&gt; &lt;a href=&#34;https://discord.gg/xCa23pwJWY&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/771628785447337985?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;spotDL: The fastest, easiest and most accurate command-line music downloader.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://spotdl.readthedocs.io&#34;&gt;Read the documentation on ReadTheDocs!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://spotdl.rtfd.io/en/latest/installation/&#34;&gt;Installation Guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Python (Recommended Method)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;spotDL&lt;/em&gt; can be installed by running &lt;code&gt;pip install spotdl&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To update spotDL run &lt;code&gt;pip install --upgrade spotdl&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;On some systems you might have to change &lt;code&gt;pip&lt;/code&gt; to &lt;code&gt;pip3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-size:1.25em&#34;&gt;&lt;strong&gt;Other options&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Prebuilt executable&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;You can download the latest version from the &lt;a href=&#34;https://github.com/spotDL/spotify-downloader/releases&#34;&gt;Releases Tab&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;On Termux&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/spotDL/spotify-downloader/master/scripts/termux.sh | sh&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Arch&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;There is an &lt;a href=&#34;https://aur.archlinux.org/packages/python-spotdl/&#34;&gt;Arch User Repository (AUR) package&lt;/a&gt; for spotDL.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Docker&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Build image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t spotdl .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Launch container with spotDL parameters (see section below). You need to create mapped volume to access song files&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -v $(pwd):/music spotdl download [trackUrl]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build from source&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/spotDL/spotify-downloader &amp;amp;&amp;amp; cd spotify-downloader&#xA;pip install poetry&#xA;poetry install&#xA;poetry run python3 scripts/build.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;An executable is created in &lt;code&gt;spotify-downloader/dist/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Installing FFmpeg&lt;/h3&gt; &#xA;&lt;p&gt;FFmpeg is required for spotDL. If using FFmpeg only for spotDL, you can simply install FFmpeg to your spotDL installation directory: &lt;code&gt;spotdl --download-ffmpeg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We recommend the above option, but if you want to install FFmpeg system-wide, follow these instructions&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://windowsloop.com/install-ffmpeg-windows-10/&#34;&gt;Windows Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OSX - &lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux - &lt;code&gt;sudo apt install ffmpeg&lt;/code&gt; or use your distro&#39;s package manager&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Using SpotDL without options::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;spotdl [urls]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run &lt;em&gt;spotDL&lt;/em&gt; as a package if running it as a script doesn&#39;t work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python -m spotdl [urls]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;General usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;spotdl [operation] [options] QUERY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are different &lt;strong&gt;operations&lt;/strong&gt; spotDL can perform. The &lt;em&gt;default&lt;/em&gt; is &lt;code&gt;download&lt;/code&gt;, which simply downloads the songs from YouTube and embeds metadata.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;query&lt;/strong&gt; for spotDL is usually a list of Spotify URLs, but for some operations like &lt;strong&gt;sync&lt;/strong&gt;, only a single link or file is required. For a list of all &lt;strong&gt;options&lt;/strong&gt; use &lt;code&gt;spotdl -h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-size:1em&#34;&gt;&lt;strong&gt;Supported operations&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;save&lt;/code&gt;: Saves only the metadata from Spotify without downloading anything.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Usage: &lt;code&gt;spotdl save [query] --save-file {filename}.spotdl&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;web&lt;/code&gt;: Starts a web interface instead of using the command line. However, it has limited features and only supports downloading single songs.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;url&lt;/code&gt;: Get direct download link for each song from the query.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Usage: &lt;code&gt;spotdl url [query]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;sync&lt;/code&gt;: Updates directories. Compares the directory with the current state of the playlist. Newly added songs will be downloaded and removed songs will be deleted. No other songs will be downloaded and no other files will be deleted.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Usage: &lt;code&gt;spotdl sync [query] --save-file {filename}.spotdl&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This create a new &lt;strong&gt;sync&lt;/strong&gt; file, to update the directory in the future, use:&lt;/p&gt; &lt;p&gt;&lt;code&gt;spotdl sync {filename}.spotdl&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;meta&lt;/code&gt;: Updates metadata for the provided song files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Music Sourcing and Audio Quality&lt;/h2&gt; &#xA;&lt;p&gt;spotDL uses YouTube as a source for music downloads. This method is used to avoid any issues related to downloading music from Spotify.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Users are responsible for their actions and potential legal consequences. We do not support unauthorized downloading of copyrighted material and take no responsibility for user actions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Audio Quality&lt;/h3&gt; &#xA;&lt;p&gt;spotDL downloads music from YouTube and is designed to always download the highest possible bitrate; which is 128 kbps for regular users and 256 kbps for YouTube Music premium users.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/spotDL/spotify-downloader/master/docs/usage.md#audio-formats-and-quality&#34;&gt;Audio Formats&lt;/a&gt; page for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in contributing? Check out our &lt;a href=&#34;https://raw.githubusercontent.com/spotDL/spotify-downloader/master/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to find resources around contributing along with a guide on how to set up a development environment.&lt;/p&gt; &#xA;&lt;h4&gt;Join our amazing community as a code contributor, and help accelerate&lt;/h4&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/spotDL/spotify-downloader/graphs/contributors&#34;&gt; &lt;img class=&#34;dark-light&#34; src=&#34;https://contrib.rocks/image?repo=spotDL/spotify-downloader&amp;amp;anon=0&amp;amp;columns=25&amp;amp;max=100&amp;amp;r=true&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;help support the development and maintenance of the software ❤️&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/kko7&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/paypal-%2300457C.svg?&amp;amp;style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/xnetcat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kofi-%23F16061.svg?&amp;amp;style=for-the-badge&amp;amp;logo=ko-fi&amp;amp;logoColor=white&#34; alt=&#34;kofi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/spotDL/spotify-downloader/master/LICENSE&#34;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>telegramdesktop/tdesktop</title>
    <updated>2024-08-27T01:28:00Z</updated>
    <id>tag:github.com,2024-08-27:/telegramdesktop/tdesktop</id>
    <link href="https://github.com/telegramdesktop/tdesktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telegram Desktop messaging app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://desktop.telegram.org&#34;&gt;Telegram Desktop&lt;/a&gt; – Official Messenger&lt;/h1&gt; &#xA;&lt;p&gt;This is the complete source code and the build instructions for the official &lt;a href=&#34;https://telegram.org&#34;&gt;Telegram&lt;/a&gt; messenger desktop client, based on the &lt;a href=&#34;https://core.telegram.org&#34;&gt;Telegram API&lt;/a&gt; and the &lt;a href=&#34;https://core.telegram.org/mtproto&#34;&gt;MTProto&lt;/a&gt; secure protocol.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/telegramdesktop/tdesktop/releases&#34;&gt;&lt;img src=&#34;https://badge.fury.io/gh/telegramdesktop%2Ftdesktop.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/telegramdesktop/tdesktop/actions&#34;&gt;&lt;img src=&#34;https://github.com/telegramdesktop/tdesktop/workflows/Windows./badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/telegramdesktop/tdesktop/actions&#34;&gt;&lt;img src=&#34;https://github.com/telegramdesktop/tdesktop/workflows/MacOS./badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/telegramdesktop/tdesktop/actions&#34;&gt;&lt;img src=&#34;https://github.com/telegramdesktop/tdesktop/workflows/Linux./badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/docs/assets/preview.png&#34;&gt;&lt;img src=&#34;https://github.com/telegramdesktop/tdesktop/raw/dev/docs/assets/preview.png&#34; alt=&#34;Preview of Telegram Desktop&#34; title=&#34;Preview of Telegram Desktop&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The source code is published under GPLv3 with OpenSSL exception, the license is available &lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported systems&lt;/h2&gt; &#xA;&lt;p&gt;The latest version is available for&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegram.org/dl/desktop/win64&#34;&gt;Windows 7 and above (64 bit)&lt;/a&gt; (&lt;a href=&#34;https://telegram.org/dl/desktop/win64_portable&#34;&gt;portable&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegram.org/dl/desktop/win&#34;&gt;Windows 7 and above (32 bit)&lt;/a&gt; (&lt;a href=&#34;https://telegram.org/dl/desktop/win_portable&#34;&gt;portable&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegram.org/dl/desktop/mac&#34;&gt;macOS 10.13 and above&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegram.org/dl/desktop/linux&#34;&gt;Linux static build for 64 bit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snapcraft.io/telegram-desktop&#34;&gt;Snap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flathub.org/apps/details/org.telegram.desktop&#34;&gt;Flatpak&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Old system versions&lt;/h2&gt; &#xA;&lt;p&gt;Version &lt;strong&gt;4.9.9&lt;/strong&gt; was the last that supports older systems&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tmac/tsetup.4.9.9.dmg&#34;&gt;macOS 10.12&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tlinux/tsetup.4.9.9.tar.xz&#34;&gt;Linux with glibc &amp;lt; 2.28 static build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Version &lt;strong&gt;2.4.4&lt;/strong&gt; was the last that supports older systems&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tosx/tsetup-osx.2.4.4.dmg&#34;&gt;OS X 10.10 and 10.11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tlinux32/tsetup32.2.4.4.tar.xz&#34;&gt;Linux static build for 32 bit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Version &lt;strong&gt;1.8.15&lt;/strong&gt; was the last that supports older systems&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tsetup/tsetup.1.8.15.exe&#34;&gt;Windows XP and Vista&lt;/a&gt; (&lt;a href=&#34;https://updates.tdesktop.com/tsetup/tportable.1.8.15.zip&#34;&gt;portable&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tmac/tsetup.1.8.15.dmg&#34;&gt;OS X 10.8 and 10.9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://updates.tdesktop.com/tmac32/tsetup32.1.8.15.dmg&#34;&gt;OS X 10.6 and 10.7&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third-party&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qt 6 (&lt;a href=&#34;http://doc.qt.io/qt-6/lgpl.html&#34;&gt;LGPL&lt;/a&gt;) and Qt 5.15 (&lt;a href=&#34;http://doc.qt.io/qt-5/lgpl.html&#34;&gt;LGPL&lt;/a&gt;) slightly patched&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL 3.2.1 (&lt;a href=&#34;https://www.openssl.org/source/apache-license-2.0.txt&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;WebRTC (&lt;a href=&#34;https://github.com/desktop-app/tg_owt/raw/master/LICENSE&#34;&gt;New BSD License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;zlib 1.2.11 (&lt;a href=&#34;http://www.zlib.net/zlib_license.html&#34;&gt;zlib License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;LZMA SDK 9.20 (&lt;a href=&#34;http://www.7-zip.org/sdk.html&#34;&gt;public domain&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;liblzma (&lt;a href=&#34;http://tukaani.org/xz/&#34;&gt;public domain&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google Breakpad (&lt;a href=&#34;https://chromium.googlesource.com/breakpad/breakpad/+/master/LICENSE&#34;&gt;License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google Crashpad (&lt;a href=&#34;https://chromium.googlesource.com/crashpad/crashpad/+/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;GYP (&lt;a href=&#34;https://github.com/bnoordhuis/gyp/raw/master/LICENSE&#34;&gt;BSD License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ninja (&lt;a href=&#34;https://github.com/ninja-build/ninja/raw/master/COPYING&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;OpenAL Soft (&lt;a href=&#34;https://github.com/kcat/openal-soft/raw/master/COPYING&#34;&gt;LGPL&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Opus codec (&lt;a href=&#34;http://www.opus-codec.org/license/&#34;&gt;BSD License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;FFmpeg (&lt;a href=&#34;https://www.ffmpeg.org/legal.html&#34;&gt;LGPL&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Guideline Support Library (&lt;a href=&#34;https://github.com/Microsoft/GSL/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Range-v3 (&lt;a href=&#34;https://github.com/ericniebler/range-v3/raw/master/LICENSE.txt&#34;&gt;Boost License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open Sans font (&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Vazir font (&lt;a href=&#34;https://github.com/rastikerdar/vazir-font/raw/master/OFL.txt&#34;&gt;SIL Open Font License 1.1&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Emoji alpha codes (&lt;a href=&#34;https://github.com/emojione/emojione/raw/master/extras/alpha-codes/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;xxHash (&lt;a href=&#34;https://github.com/Cyan4973/xxHash/raw/dev/LICENSE&#34;&gt;BSD License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;QR Code generator (&lt;a href=&#34;https://github.com/nayuki/QR-Code-generator#license&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;CMake (&lt;a href=&#34;https://github.com/Kitware/CMake/raw/master/Copyright.txt&#34;&gt;New BSD License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Hunspell (&lt;a href=&#34;https://github.com/hunspell/hunspell/raw/master/COPYING.LESSER&#34;&gt;LGPL&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows &lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/docs/building-win.md&#34;&gt;(32-bit)&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/docs/building-win-x64.md&#34;&gt;(64-bit)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/docs/building-mac.md&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telegramdesktop/tdesktop/dev/docs/building-linux.md&#34;&gt;GNU/Linux using Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>TelegramMessenger/Telegram-iOS</title>
    <updated>2024-08-27T01:28:00Z</updated>
    <id>tag:github.com,2024-08-27:/TelegramMessenger/Telegram-iOS</id>
    <link href="https://github.com/TelegramMessenger/Telegram-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telegram-iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Telegram iOS Source Code Compilation Guide&lt;/h1&gt; &#xA;&lt;p&gt;We welcome all developers to use our API and source code to create applications on our platform. There are several things we require from &lt;strong&gt;all developers&lt;/strong&gt; for the moment.&lt;/p&gt; &#xA;&lt;h1&gt;Creating your Telegram Application&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34;&gt;&lt;strong&gt;Obtain your own api_id&lt;/strong&gt;&lt;/a&gt; for your application.&lt;/li&gt; &#xA; &lt;li&gt;Please &lt;strong&gt;do not&lt;/strong&gt; use the name Telegram for your app — or make sure your users understand that it is unofficial.&lt;/li&gt; &#xA; &lt;li&gt;Kindly &lt;strong&gt;do not&lt;/strong&gt; use our standard logo (white paper plane in a blue circle) as your app&#39;s logo.&lt;/li&gt; &#xA; &lt;li&gt;Please study our &lt;a href=&#34;https://core.telegram.org/mtproto/security_guidelines&#34;&gt;&lt;strong&gt;security guidelines&lt;/strong&gt;&lt;/a&gt; and take good care of your users&#39; data and privacy.&lt;/li&gt; &#xA; &lt;li&gt;Please remember to publish &lt;strong&gt;your&lt;/strong&gt; code too in order to comply with the licences.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Quick Compilation Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Get the Code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive -j8 https://github.com/TelegramMessenger/Telegram-iOS.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup Xcode&lt;/h2&gt; &#xA;&lt;p&gt;Install Xcode (directly from &lt;a href=&#34;https://developer.apple.com/download/applications&#34;&gt;https://developer.apple.com/download/applications&lt;/a&gt; or using the App Store).&lt;/p&gt; &#xA;&lt;h2&gt;Adjust Configuration&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate a random identifier:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl rand -hex 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create a new Xcode project. Use &lt;code&gt;Telegram&lt;/code&gt; as the Product Name. Use &lt;code&gt;org.{identifier from step 1}&lt;/code&gt; as the Organization Identifier.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Keychain Access&lt;/code&gt; and navigate to &lt;code&gt;Certificates&lt;/code&gt;. Locate &lt;code&gt;Apple Development: your@email.address (XXXXXXXXXX)&lt;/code&gt; and double tap the certificate. Under &lt;code&gt;Details&lt;/code&gt;, locate &lt;code&gt;Organizational Unit&lt;/code&gt;. This is the Team ID.&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;build-system/template_minimal_development_configuration.json&lt;/code&gt;. Use data from the previous steps.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Generate an Xcode project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=build-system/template_minimal_development_configuration.json \&#xA;    --xcodeManagedCodesigning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Advanced Compilation Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Xcode&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy and edit &lt;code&gt;build-system/appstore-configuration.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;build-system/fake-codesigning&lt;/code&gt;. Create and download provisioning profiles, using the &lt;code&gt;profiles&lt;/code&gt; folder as a reference for the entitlements.&lt;/li&gt; &#xA; &lt;li&gt;Generate an Xcode project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=configuration_from_step_1.json \&#xA;    --codesigningInformationPath=directory_from_step_2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;IPA&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Repeat the steps from the previous section. Use distribution provisioning profiles.&lt;/li&gt; &#xA; &lt;li&gt;Run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    build \&#xA;    --configurationPath=...see previous section... \&#xA;    --codesigningInformationPath=...see previous section... \&#xA;    --buildNumber=100001 \&#xA;    --configuration=release_arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Xcode is stuck at &#34;build-request.json not updated yet&#34;&lt;/h2&gt; &#xA;&lt;p&gt;Occasionally, you might observe the following message in your build log:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;/Users/xxx/Library/Developer/Xcode/DerivedData/Telegram-xxx/Build/Intermediates.noindex/XCBuildData/xxx.xcbuilddata/build-request.json&#34; not updated yet, waiting...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should this occur, simply cancel the ongoing build and initiate a new one.&lt;/p&gt; &#xA;&lt;h2&gt;Telegram_xcodeproj: no such package&lt;/h2&gt; &#xA;&lt;p&gt;Following a system restart, the auto-generated Xcode project might encounter a build failure accompanied by this error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ERROR: Skipping &#39;@rules_xcodeproj_generated//generator/Telegram/Telegram_xcodeproj:Telegram_xcodeproj&#39;: no such package &#39;@rules_xcodeproj_generated//generator/Telegram/Telegram_xcodeproj&#39;: BUILD file not found in directory &#39;generator/Telegram/Telegram_xcodeproj&#39; of external repository @rules_xcodeproj_generated. Add a BUILD file to a directory to mark it as a package.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you encounter this issue, re-run the project generation steps in the README.&lt;/p&gt; &#xA;&lt;h1&gt;Tips&lt;/h1&gt; &#xA;&lt;h2&gt;Codesigning is not required for simulator-only builds&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;--disableProvisioningProfiles&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=path-to-configuration.json \&#xA;    --codesigningInformationPath=path-to-provisioning-data \&#xA;    --disableProvisioningProfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;Each release is built using a specific Xcode version (see &lt;code&gt;versions.json&lt;/code&gt;). The helper script checks the versions of the installed software and reports an error if they don&#39;t match the ones specified in &lt;code&gt;versions.json&lt;/code&gt;. It is possible to bypass these checks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py --overrideXcodeVersion build ... # Don&#39;t check the version of Xcode&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>