<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-20T01:28:30Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>satnaing/shadcn-admin</title>
    <updated>2025-03-20T01:28:30Z</updated>
    <id>tag:github.com,2025-03-20:/satnaing/shadcn-admin</id>
    <link href="https://github.com/satnaing/shadcn-admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Admin Dashboard UI built with Shadcn and Vite.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shadcn Admin Dashboard&lt;/h1&gt; &#xA;&lt;p&gt;Admin Dashboard UI crafted with Shadcn and Vite. Built with responsiveness and accessibility in mind.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/satnaing/shadcn-admin/main/public/images/shadcn-admin.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve been creating dashboard UIs at work and for my personal projects. I always wanted to make a reusable collection of dashboard UI for future projects; and here it is now. While I&#39;ve created a few custom components, some of the code is directly adapted from ShadcnUI examples.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is not a starter project (template) though. I&#39;ll probably make one in the future.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Light/dark mode&lt;/li&gt; &#xA; &lt;li&gt;Responsive&lt;/li&gt; &#xA; &lt;li&gt;Accessible&lt;/li&gt; &#xA; &lt;li&gt;With built-in Sidebar component&lt;/li&gt; &#xA; &lt;li&gt;Global Search Command&lt;/li&gt; &#xA; &lt;li&gt;10+ pages&lt;/li&gt; &#xA; &lt;li&gt;Extra custom components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;UI:&lt;/strong&gt; &lt;a href=&#34;https://ui.shadcn.com&#34;&gt;ShadcnUI&lt;/a&gt; (TailwindCSS + RadixUI)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build Tool:&lt;/strong&gt; &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Routing:&lt;/strong&gt; &lt;a href=&#34;https://tanstack.com/router/latest&#34;&gt;TanStack Router&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Type Checking:&lt;/strong&gt; &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linting/Formatting:&lt;/strong&gt; &lt;a href=&#34;https://eslint.org/&#34;&gt;Eslint&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Icons:&lt;/strong&gt; &lt;a href=&#34;https://tabler.io/icons&#34;&gt;Tabler Icons&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Locally&lt;/h2&gt; &#xA;&lt;p&gt;Clone the project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  git clone https://github.com/satnaing/shadcn-admin.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the project directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd shadcn-admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Crafted with ü§ç by &lt;a href=&#34;https://github.com/satnaing&#34;&gt;@satnaing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>subframe7536/maple-font</title>
    <updated>2025-03-20T01:28:30Z</updated>
    <id>tag:github.com,2025-03-20:/subframe7536/maple-font</id>
    <link href="https://github.com/subframe7536/maple-font" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Maple Mono: Open source monospace font with round corner, ligatures and Nerd-Font for IDE and terminal, fine-grained customization options. Â∏¶ËøûÂ≠óÂíåÊéßÂà∂Âè∞ÂõæÊ†áÁöÑÂúÜËßíÁ≠âÂÆΩÂ≠ó‰ΩìÔºå‰∏≠Ëã±ÊñáÂÆΩÂ∫¶ÂÆåÁæé2:1ÔºåÁªÜÁ≤íÂ∫¶ÁöÑËá™ÂÆö‰πâÈÄâÈ°π&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/resources/header.png&#34; alt=&#34;Cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/subframe7536/maple-font&#34;&gt; &lt;img alt=&#34;GitHub Downloads (all assets, all releases)&#34; src=&#34;https://img.shields.io/github/downloads/subframe7536/maple-font/total&#34;&gt; &lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/v/release/subframe7536/maple-font&#34;&gt; &lt;img alt=&#34;X (formerly Twitter) Follow&#34; src=&#34;https://img.shields.io/twitter/follow/subframe7536&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/#download&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://font.subf.dev&#34;&gt;Website&lt;/a&gt; | English | &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/README_CN.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Maple Mono&lt;/h1&gt; &#xA;&lt;p&gt;Maple Mono is an open source monospace font focused on smoothing your coding flow.&lt;/p&gt; &#xA;&lt;p&gt;I create it to enhance my working experience, and hope that it can be useful to others.&lt;/p&gt; &#xA;&lt;p&gt;V7 is a completely remade version, providing variable font format and source files of font project, redesigning more than half of the glyphs and offering smarter ligatures. You can checkout V6 &lt;a href=&#34;https://github.com/subframe7536/maple-font/tree/main&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ú® Variable - Infinity font weights with fine-grained italic glyphs.&lt;/li&gt; &#xA; &lt;li&gt;‚òÅÔ∏è Smooth - Round corner, brand-new glyph of &lt;code&gt;@ $ % &amp;amp; Q -&amp;gt;&lt;/code&gt; and cursive &lt;code&gt;f i j k l x y&lt;/code&gt; in italic style.&lt;/li&gt; &#xA; &lt;li&gt;üí™ Useful - Large amount of smart ligatures, see in &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/source/features/README.md&#34;&gt;&lt;code&gt;features/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üé® Icon - First-Class &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd-Font&lt;/a&gt; support, make your terminal more vivid.&lt;/li&gt; &#xA; &lt;li&gt;üî® Customize - Enable or disable font features as you want, just make your own font.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Simpified Chinese, Traditional Chinese and Japanese&lt;/h3&gt; &#xA;&lt;p&gt;CN version based on &lt;a href=&#34;https://github.com/CyanoHao/Resource-Han-Rounded&#34;&gt;Resource Han Rounded&lt;/a&gt; provides complete character set support for Chinese development environments, including Simplified Chinese, Traditional Chinese, and Japanese. Meanwhile, the characteristic of perfect 2:1 alignment between Chinese and English allows this font to achieve a neat, uniform, beautiful, and comfortable appearance in scenarios such as multilingual display and Markdown tables. However, the spacing of Chinese characters is larger compared to other popular Chinese fonts. See details in &lt;a href=&#34;https://github.com/subframe7536/maple-font/releases/tag/cn-base&#34;&gt;release notes&lt;/a&gt; and &lt;a href=&#34;https://github.com/subframe7536/maple-font/issues/211&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/resources/2-1.png&#34; alt=&#34;2-1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ScreenShots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/resources/showcase.png&#34; alt=&#34;showcase.png&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pictured by &lt;a href=&#34;https://github.com/subframe7536/vscode-codeimg&#34;&gt;CodeImg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Theme: &lt;a href=&#34;https://github.com/subframe7536/vscode-theme-maple&#34;&gt;Maple&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Config: font size 16px, line height 1.8, default letter spacing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;You can download all the font archives from &lt;a href=&#34;https://github.com/subframe7536/maple-font/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Add bucket&#xA;scoop bucket add nerd-fonts&#xA;# Maple Mono (ttf format)&#xA;scoop install Maple-Mono&#xA;# Maple Mono (hinted ttf format)&#xA;scoop install Maple-Mono-autohint&#xA;# Maple Mono (otf format)&#xA;scoop install Maple-Mono-otf&#xA;# Maple Mono NF&#xA;scoop install Maple-Mono-NF&#xA;# Maple Mono NF CN&#xA;scoop install Maple-Mono-NF-CN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew (MacOS, Linux)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Maple Mono&#xA;brew install --cask font-maple-mono&#xA;# Maple Mono NF&#xA;brew install --cask font-maple-mono-nf&#xA;# Maple Mono CN&#xA;brew install --cask font-maple-mono-cn&#xA;# Maple Mono NF CN&#xA;brew install --cask font-maple-mono-nf-cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AUR (Arch Linux)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Maple Mono&#xA;paru -S ttf-maple-beta&#xA;# Maple Mono NF&#xA;paru -S ttf-maple-beta-nf&#xA;# Maple Mono NF CN&#xA;paru -S ttf-maple-beta-nf-cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CDN&lt;/h2&gt; &#xA;&lt;h3&gt;Maple Mono&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fontsource.org/fonts/maple-mono&#34;&gt;fontsource&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fonts.zeoseven.com/items/443/&#34;&gt;ZeoSeven Fonts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Maple Mono CN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chinese-font.netlify.app/zh-cn/fonts/maple-mono-cn/MapleMono-CN-Regular&#34;&gt;The Chinese Web Fonts Plan (‰∏≠ÊñáÁΩëÂ≠óËÆ°Âàí)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fonts.zeoseven.com/items/442/&#34;&gt;ZeoSeven Fonts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage &amp;amp; Feature Configurations&lt;/h2&gt; &#xA;&lt;p&gt;See in &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/source/features/README.md&#34;&gt;document&lt;/a&gt; or try it in &lt;a href=&#34;https://font.subf.dev/en/playground&#34;&gt;Playground&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!note] The web tool for custom build is under development.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Naming FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ligature&lt;/strong&gt;: Default version with ligatures (&lt;code&gt;Maple Mono&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No-Ligature&lt;/strong&gt;: Default version without ligatures (&lt;code&gt;Maple Mono NL&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal-Ligature&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/#preset&#34;&gt;&lt;code&gt;--normal&lt;/code&gt; preset&lt;/a&gt; with ligatures (&lt;code&gt;Maple Mono Normal&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal-No-Ligature&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/#preset&#34;&gt;&lt;code&gt;--normal&lt;/code&gt; preset&lt;/a&gt; without ligatures (&lt;code&gt;Maple Mono Normal NL&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Format and Glyph Set&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Variable&lt;/strong&gt;: Minimal version, smoothly change font weight by variable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TTF&lt;/strong&gt;: Minimal version, ttf format [Recommend!]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OTF&lt;/strong&gt;: Minimal version, otf format&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WOFF2&lt;/strong&gt;: Minimal version, woff2 format, for small size on web pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NF&lt;/strong&gt;: Nerd-Font patched version, add icons for terminal (With &lt;code&gt;-NF&lt;/code&gt; suffix)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CN&lt;/strong&gt;: Chinese version, embed with Chinese and Japanese glyphs (With &lt;code&gt;-CN&lt;/code&gt; suffix)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NF-CN&lt;/strong&gt;: Full version, embed with icons, Chinese and Japanese glyphs (With &lt;code&gt;-NF-CN&lt;/code&gt; suffix)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Font Hint&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hinted font&lt;/strong&gt; is used for low resolution screen to have better render effect. From my experience, if your screen resolution is lower or equal than 1080P, it is recommended to use &#34;hinted font&#34;. Using &#34;unhinted font&#34; will lead to misalignment or uneven thickness on your text. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In this case, you can choose &lt;code&gt;MapleMono-TTF-AutoHint&lt;/code&gt; / &lt;code&gt;MapleMono-NF&lt;/code&gt; / &lt;code&gt;MapleMono-NF-CN&lt;/code&gt;, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unhinted font&lt;/strong&gt; is used for high resolution screen (e.g. for MacBook). Using &#34;hinted font&#34; will blur your text or make it looks weird. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In this case, you can choose &lt;code&gt;MapleMono-OTF&lt;/code&gt; / &lt;code&gt;MapleMono-TTF&lt;/code&gt; / &lt;code&gt;MapleMono-NF-unhinted&lt;/code&gt; / &lt;code&gt;MapleMono-NF-CN-unhinted&lt;/code&gt;, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Why there exists &lt;code&gt;-AutoHint&lt;/code&gt; and &lt;code&gt;-unhinted&lt;/code&gt; suffix? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for backward compatibility, I keep the original naming scheme. &lt;code&gt;-AutoHint&lt;/code&gt; is only used for &lt;code&gt;TTF&lt;/code&gt; format.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Custom Build&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/config.json&#34;&gt;&lt;code&gt;config.json&lt;/code&gt;&lt;/a&gt; file is used to configure the build process. Checkout the &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/source/schema.json&#34;&gt;schema&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/source/features/README.md&#34;&gt;document&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;There also have some &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/#build-script-usage&#34;&gt;command line options&lt;/a&gt; for customizing the build process. Cli options have higher priority than options in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Use Github Actions&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/subframe7536/maple-font/actions/workflows/custom.yml&#34;&gt;Github Actions&lt;/a&gt; to build the font.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Change the content in &lt;code&gt;config.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to Actions tab&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Custom Build&lt;/code&gt; menu item on the left&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Run workflow&lt;/code&gt; button with options setup&lt;/li&gt; &#xA; &lt;li&gt;Wait for the build to finish&lt;/li&gt; &#xA; &lt;li&gt;Download the font archives from Releases&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Use Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/subframe7536/maple-font --depth 1 -b variable&#xA;docker build -t maple-font .&#xA;docker run -v &#34;$(pwd)/fonts:/app/fonts&#34; -e BUILD_ARGS=&#34;--normal&#34; maple-font&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Build&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repo and run on your local machine. Make sure you have &lt;code&gt;python3&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/subframe7536/maple-font --depth 1 -b variable&#xA;pip install -r requirements.txt&#xA;python build.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;code&gt;Ubuntu&lt;/code&gt; or &lt;code&gt;Debian&lt;/code&gt;, maybe &lt;code&gt;python-is-python3&lt;/code&gt; is needed as well&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have trouble installing the dependencies, just create a new GitHub Codespace and run the commands there&lt;/p&gt; &#xA;&lt;h4&gt;Custom Nerd-Font&lt;/h4&gt; &#xA;&lt;p&gt;For custom &lt;code&gt;font-patcher&lt;/code&gt; args, &lt;code&gt;font-forge&lt;/code&gt; (and maybe &lt;code&gt;python3-fontforge&lt;/code&gt; as well) is required.&lt;/p&gt; &#xA;&lt;p&gt;Maybe you should also change &lt;code&gt;&#34;nerd_font.extra_args&#34;&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/config.json&#34;&gt;config.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default args: &lt;code&gt;-l --careful --outputdir dir&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if &lt;code&gt;&#34;nerd_font.mono&#34;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then add &lt;code&gt;--mono&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Preset&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;build.py&lt;/code&gt; with &lt;code&gt;--normal&lt;/code&gt; flag, make the font looks not such &#34;Opinioned&#34; , just like &lt;code&gt;JetBrains Mono&lt;/code&gt; (with slashed zero).&lt;/p&gt; &#xA;&lt;h4&gt;Font Feature Freeze&lt;/h4&gt; &#xA;&lt;p&gt;There are three kind of options for feature freeze (&lt;a href=&#34;https://github.com/subframe7536/maple-font/issues/233#issuecomment-2410170270&#34;&gt;Why&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;enable&lt;/code&gt;: Forcely enable the features without setting up &lt;code&gt;cvXX&lt;/code&gt; / &lt;code&gt;ssXX&lt;/code&gt; / &lt;code&gt;zero&lt;/code&gt; in font features config, just as default glyphs / ligatures&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disable&lt;/code&gt;: Remove the features in &lt;code&gt;cvXX&lt;/code&gt; / &lt;code&gt;ssXX&lt;/code&gt; / &lt;code&gt;zero&lt;/code&gt;, which will no longer effect, even if you enable it manually&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignore&lt;/code&gt;: Do nothing&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Load Custom Feature File&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;build.py&lt;/code&gt; with &lt;code&gt;--apply-fea-file&lt;/code&gt; flag, the feature file from &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/source/features&#34;&gt;&lt;code&gt;source/features/{regular,italic}.fea&lt;/code&gt;&lt;/a&gt; will be applied into variable font. You can modify it to change all features, e.g. remove some ligatures in &lt;code&gt;calt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Chinese version&lt;/h3&gt; &#xA;&lt;p&gt;CN version is disabled by default. Run &lt;code&gt;python build.py&lt;/code&gt; with &lt;code&gt;--cn&lt;/code&gt; flag, the CN base fonts (about 130 MB) will download from GitHub.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build CN base fonts from variable (about 35 MB), setup &lt;code&gt;&#34;cn.use_static_base_font&#34;: false&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/config.json&#34;&gt;config.json&lt;/a&gt; and &lt;strong&gt;BE PATIENT&lt;/strong&gt;, instantiation will take about 20-30 minutes.&lt;/p&gt; &#xA;&lt;h4&gt;Narrow spacing in CN glyphs&lt;/h4&gt; &#xA;&lt;p&gt;If you think that CN glyphs spacing is &lt;strong&gt;tooooo large&lt;/strong&gt;, there is a &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt; build option &lt;code&gt;cn.narrow&lt;/code&gt; or flag &lt;code&gt;--cn-narrow&lt;/code&gt; to narrow spacing in CN glyphs. You can see effect and track issues in &lt;a href=&#34;https://github.com/subframe7536/maple-font/issues/249&#34;&gt;#249&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GitHub Mirror&lt;/h4&gt; &#xA;&lt;p&gt;The build script will auto download required assets from GitHub. If you have trouble downloading, please setup &lt;code&gt;github_mirror&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/subframe7536/maple-font/variable/config.json&#34;&gt;config.json&lt;/a&gt; or &lt;code&gt;$GITHUB&lt;/code&gt; to your environment variable. (Target URL will be &lt;code&gt;https://&amp;lt;github_mirror&amp;gt;/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;/releases/download/&amp;lt;tag&amp;gt;/&amp;lt;file&amp;gt;&lt;/code&gt;), or just download the target &lt;code&gt;.zip&lt;/code&gt; file and put it in the same directory as &lt;code&gt;build.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build Script Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: build.py [-h] [-v] [-d] [--debug] [-n] [--feat FEAT] [--apply-fea-file]&#xA;                [--hinted | --no-hinted] [--liga | --no-liga] [--cn-narrow]&#xA;                [--nerd-font | --no-nerd-font] [--cn | --no-cn] [--cn-both]&#xA;                [--ttf-only] [--cache] [--cn-rebuild] [--archive]&#xA;&#xA;‚ú® Builder and optimizer for Maple Mono&#xA;&#xA;options:&#xA;  -h, --help        show this help message and exit&#xA;  -v, --version     show program&#39;s version number and exit&#xA;  -d, --dry         Output config and exit&#xA;  --debug           Add `Debug` suffix to family name, skip optimization&#xA;&#xA;Feature Options:&#xA;  -n, --normal      Use normal preset, just like `JetBrains Mono` with slashed zero&#xA;  --feat FEAT       Freeze font features, splited by `,` (e.g. `--feat&#xA;                    zero,cv01,ss07,ss08`). No effect on variable format&#xA;  --apply-fea-file  Load feature file from `source/features/{regular,italic}.fea` to&#xA;                    variable font&#xA;  --hinted          Use hinted font as base font in NF / CN / NF-CN (default)&#xA;  --no-hinted       Use unhinted font as base font in NF / CN / NF-CN&#xA;  --liga            Preserve all the ligatures (default)&#xA;  --no-liga         Remove all the ligatures&#xA;  --cn-narrow       Make CN characters narrow (experimental)&#xA;&#xA;Build Options:&#xA;  --nerd-font       Build Nerd-Font version (default)&#xA;  --no-nerd-font    Do not build Nerd-Font version&#xA;  --cn              Build Chinese version&#xA;  --no-cn           Do not build Chinese version (default)&#xA;  --cn-both         Build both `Maple Mono CN` and `Maple Mono NF CN`. Nerd-Font&#xA;                    version must be enabled&#xA;  --ttf-only        Only build TTF format&#xA;  --cache           Reuse font cache of TTF, OTF and Woff2 formats&#xA;  --cn-rebuild      Reinstantiate CN base font&#xA;  --archive         Build font archives with config and license. If has `--cache`&#xA;                    flag, only archive Nerd-Font and CN formats&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/JetBrainsMono&#34;&gt;JetBrains Mono&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googlefonts/RobotoMono&#34;&gt;Roboto Mono&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tonsky/FiraCode&#34;&gt;Fira Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubjo/victor-mono&#34;&gt;Victor Mono&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eigilnikolajsen/commit-mono&#34;&gt;Commit Mono&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheRenegadeCoder/sample-programs-website&#34;&gt;Code Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd Font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MuTsunTsai/fontfreeze/&#34;&gt;Font Freeze&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tophix.com/font-tools/font-viewer&#34;&gt;Font Viewer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.monolisa.dev/&#34;&gt;Monolisa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.recursive.design/&#34;&gt;Recursive&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponser&lt;/h2&gt; &#xA;&lt;p&gt;If this font is helpful to you, please feel free to buy me a coffee&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/subframe753&#34;&gt;&lt;img src=&#34;https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&amp;amp;emoji=&amp;amp;slug=subframe753&amp;amp;button_colour=5F7FFF&amp;amp;font_colour=ffffff&amp;amp;font_family=Lato&amp;amp;outline_colour=000000&amp;amp;coffee_colour=FFDD00&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or sponser me through &lt;a href=&#34;https://afdian.com/a/subframe7536&#34;&gt;Afdian&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#subframe7536/maple-font&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=subframe7536/maple-font&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SIL Open Font License 1.1&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>e2b-dev/fragments</title>
    <updated>2025-03-20T01:28:30Z</updated>
    <id>tag:github.com,2025-03-20:/e2b-dev/fragments</id>
    <link href="https://github.com/e2b-dev/fragments" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Next.js template for building apps that are fully generated by AI. By E2B.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fragments by E2B&lt;/h1&gt; &#xA;&lt;p&gt;This is an open-source version of apps like &lt;a href=&#34;https://www.anthropic.com/news/claude-3-5-sonnet&#34;&gt;Anthropic&#39;s Claude Artifacts&lt;/a&gt;, Vercel &lt;a href=&#34;https://v0.dev&#34;&gt;v0&lt;/a&gt;, or &lt;a href=&#34;https://gptengineer.app&#34;&gt;GPT Engineer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Powered by the &lt;a href=&#34;https://github.com/e2b-dev/code-interpreter&#34;&gt;E2B SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/preview.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fragments.e2b.dev&#34;&gt;‚Üí Try on fragments.e2b.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on Next.js 14 (App Router, Server Actions), shadcn/ui, TailwindCSS, Vercel AI SDK.&lt;/li&gt; &#xA; &lt;li&gt;Uses the &lt;a href=&#34;https://github.com/e2b-dev/code-interpreter&#34;&gt;E2B SDK&lt;/a&gt; by &lt;a href=&#34;https://e2b.dev&#34;&gt;E2B&lt;/a&gt; to securely execute code generated by AI.&lt;/li&gt; &#xA; &lt;li&gt;Streaming in the UI.&lt;/li&gt; &#xA; &lt;li&gt;Can install and use any package from npm, pip.&lt;/li&gt; &#xA; &lt;li&gt;Supported stacks (&lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-personas&#34;&gt;add your own&lt;/a&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;üî∏ Python interpreter&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Next.js&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Vue.js&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Streamlit&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Gradio&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supported LLM Providers (&lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-llm-models&#34;&gt;add your own&lt;/a&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;üî∏ OpenAI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Anthropic&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Google AI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Mistral&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Groq&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Fireworks&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Together AI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Ollama&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure to give us a star!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;165&#34; alt=&#34;Screenshot 2024-04-20 at 22 13 32&#34; src=&#34;https://github.com/mishushakov/llm-scraper/assets/10400064/11e2a79f-a835-48c4-9f85-5c104ca7bb49&#34;&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recent version of &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; and npm package manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://e2b.dev&#34;&gt;E2B API Key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LLM Provider API Key&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1. Clone the repository&lt;/h3&gt; &#xA;&lt;p&gt;In your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/e2b-dev/fragments.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install the dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Enter the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd fragments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following to install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Set the environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file and set the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Get your API key here - https://e2b.dev/&#xA;E2B_API_KEY=&#34;your-e2b-api-key&#34;&#xA;&#xA;# OpenAI API Key&#xA;OPENAI_API_KEY=&#xA;&#xA;# Other providers&#xA;ANTHROPIC_API_KEY=&#xA;GROQ_API_KEY=&#xA;FIREWORKS_API_KEY=&#xA;TOGETHER_API_KEY=&#xA;GOOGLE_AI_API_KEY=&#xA;GOOGLE_VERTEX_CREDENTIALS=&#xA;MISTRAL_API_KEY=&#xA;XAI_API_KEY=&#xA;&#xA;### Optional env vars&#xA;&#xA;# Domain of the site&#xA;NEXT_PUBLIC_SITE_URL=&#xA;&#xA;# Rate limit&#xA;RATE_LIMIT_MAX_REQUESTS=&#xA;RATE_LIMIT_WINDOW=&#xA;&#xA;# Vercel/Upstash KV (short URLs, rate limiting)&#xA;KV_REST_API_URL=&#xA;KV_REST_API_TOKEN=&#xA;&#xA;# Supabase (auth)&#xA;SUPABASE_URL=&#xA;SUPABASE_ANON_KEY=&#xA;&#xA;# PostHog (analytics)&#xA;NEXT_PUBLIC_POSTHOG_KEY=&#xA;NEXT_PUBLIC_POSTHOG_HOST=&#xA;&#xA;### Disabling functionality (when uncommented)&#xA;&#xA;# Disable API key and base URL input in the chat&#xA;# NEXT_PUBLIC_NO_API_KEY_INPUT=&#xA;# NEXT_PUBLIC_NO_BASE_URL_INPUT=&#xA;&#xA;# Hide local models from the list of available models&#xA;# NEXT_PUBLIC_HIDE_LOCAL_MODELS=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Start the development server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Build the web app&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;h3&gt;Adding custom personas&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure &lt;a href=&#34;https://e2b.dev/docs/cli/installation&#34;&gt;E2B CLI&lt;/a&gt; is installed and you&#39;re logged in.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new folder under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/sandbox-templates/&#34;&gt;sandbox-templates/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize a new template using E2B CLI:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;e2b template init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will create a new file called &lt;code&gt;e2b.Dockerfile&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adjust the &lt;code&gt;e2b.Dockerfile&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Here&#39;s an example streamlit template:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;# You can use most Debian-based base images&#xA;FROM python:3.19-slim&#xA;&#xA;RUN pip3 install --no-cache-dir streamlit pandas numpy matplotlib requests seaborn plotly&#xA;&#xA;# Copy the code to the container&#xA;WORKDIR /home/user&#xA;COPY . /home/user&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Specify a custom start command in &lt;code&gt;e2b.toml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;start_cmd = &#34;cd /home/user &amp;amp;&amp;amp; streamlit run app.py&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy the template with the E2B CLI&lt;/p&gt; &lt;pre&gt;&lt;code&gt;e2b template build --name &amp;lt;template-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After the build has finished, you should get the following message:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;‚úÖ Building sandbox template &amp;lt;template-id&amp;gt; &amp;lt;template-name&amp;gt; finished.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/templates.json&#34;&gt;lib/templates.json&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;p&gt;Add your new template to the list. Here&#39;s an example for Streamlit:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;streamlit-developer&#34;: {&#xA;  &#34;name&#34;: &#34;Streamlit developer&#34;,&#xA;  &#34;lib&#34;: [&#xA;    &#34;streamlit&#34;,&#xA;    &#34;pandas&#34;,&#xA;    &#34;numpy&#34;,&#xA;    &#34;matplotlib&#34;,&#xA;    &#34;request&#34;,&#xA;    &#34;seaborn&#34;,&#xA;    &#34;plotly&#34;&#xA;  ],&#xA;  &#34;file&#34;: &#34;app.py&#34;,&#xA;  &#34;instructions&#34;: &#34;A streamlit app that reloads automatically.&#34;,&#xA;  &#34;port&#34;: 8501 // can be null&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Provide a template id (as key), name, list of dependencies, entrypoint and a port (optional). You can also add additional instructions that will be given to the LLM.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, add a new logo under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/public/thirdparty/templates&#34;&gt;public/thirdparty/templates&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding custom LLM models&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/models.ts&#34;&gt;lib/models.json&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new entry to the models list:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;mistral-large&#34;,&#xA;  &#34;name&#34;: &#34;Mistral Large&#34;,&#xA;  &#34;provider&#34;: &#34;Ollama&#34;,&#xA;  &#34;providerId&#34;: &#34;ollama&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Where id is the model id, name is the model name (visible in the UI), provider is the provider name and providerId is the provider tag (see &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-llm-providers&#34;&gt;adding providers&lt;/a&gt; below).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding custom LLM providers&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/models.ts&#34;&gt;lib/models.ts&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new entry to the &lt;code&gt;providerConfigs&lt;/code&gt; list:&lt;/p&gt; &lt;p&gt;Example for fireworks:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;fireworks: () =&amp;gt; createOpenAI({ apiKey: apiKey || process.env.FIREWORKS_API_KEY, baseURL: baseURL || &#39;https://api.fireworks.ai/inference/v1&#39; })(modelNameString),&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, adjust the default structured output mode in the &lt;code&gt;getDefaultMode&lt;/code&gt; function:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;if (providerId === &#39;fireworks&#39;) {&#xA;  return &#39;json&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, add a new logo under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/public/thirdparty/logos&#34;&gt;public/thirdparty/logos&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open-source project, we welcome contributions from the community. If you are experiencing any bugs or want to add some improvements, please feel free to open an issue or pull request.&lt;/p&gt;</summary>
  </entry>
</feed>