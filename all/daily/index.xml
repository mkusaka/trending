<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-25T01:30:45Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>3xp0rt/LockBit-Black-Builder</title>
    <updated>2022-09-25T01:30:45Z</updated>
    <id>tag:github.com,2022-09-25:/3xp0rt/LockBit-Black-Builder</id>
    <link href="https://github.com/3xp0rt/LockBit-Black-Builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LockBit-Black-Builder&lt;/h1&gt; &#xA;&lt;p&gt;LockBit30.7z:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://twitter.com/ali_qushji&#34;&gt;@ali_qushji&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: dM@iu9&amp;amp;UJB@#G$1HhZAW&lt;/li&gt; &#xA; &lt;li&gt;MD5: ecad36ec22515adac1190a6a46c78fb7&lt;/li&gt; &#xA; &lt;li&gt;Content: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build (folder): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-13 16:34&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Build.bat: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 17:14&lt;/li&gt; &#xA;     &lt;li&gt;MD5: 4e46e28b2e61643f6af70a8b19e5cb1f&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;builder.exe: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-13 16:31&lt;/li&gt; &#xA;     &lt;li&gt;MD5: c2bc344f6dde0573ea9acdfb6698bf4c&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;config.json: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 17:02&lt;/li&gt; &#xA;     &lt;li&gt;MD5: a6ba7b662de10b45ebe5b6b7edaa62a9&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;keygen.exe: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 16:58&lt;/li&gt; &#xA;     &lt;li&gt;MD5: 71c3b2f765b04d0b7ea0328f6ce0c4e2&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Original links: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sendspace.com/file/ncjuyb&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;LockBit3Builder.7z&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://twitter.com/protonleaks1&#34;&gt;@protonleaks1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: !1C!Vk~1i!LW3LR|wgXHC&lt;/li&gt; &#xA; &lt;li&gt;MD5: 7db3797ee09aedc1c6ec1389ab199493&lt;/li&gt; &#xA; &lt;li&gt;Content: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build (folder): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 18:29&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Build.bat: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 17:02&lt;/li&gt; &#xA;     &lt;li&gt;MD5: 4e46e28b2e61643f6af70a8b19e5cb1f&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;builder.exe: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 18:28&lt;/li&gt; &#xA;     &lt;li&gt;MD5: 8c689dc9e82c9356b990d2b67b4943e1&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;config.json: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 17:02&lt;/li&gt; &#xA;     &lt;li&gt;MD5: a6ba7b662de10b45ebe5b6b7edaa62a9&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;keygen.exe &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Date: 2022-09-08 18:25&lt;/li&gt; &#xA;     &lt;li&gt;MD5: 5e28c7c900e4dce08366051c22f07f84&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Original links: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;anonfiles.com/i8fdxf7eyb/LockBit3Builder.7z&lt;/li&gt; &#xA;   &lt;li&gt;ufile.io/3j27rije&lt;/li&gt; &#xA;   &lt;li&gt;sendspace.com/file/ojoab8&lt;/li&gt; &#xA;   &lt;li&gt;gofile.io/d/nfcKZV&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>xkcoding/spring-boot-demo</title>
    <updated>2022-09-25T01:30:45Z</updated>
    <id>tag:github.com,2022-09-25:/xkcoding/spring-boot-demo</id>
    <link href="https://github.com/xkcoding/spring-boot-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;该项目已成功集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate(通用JDBC操作数据库)、JPA(强大的ORM框架)、mybatis(强大的ORM框架)、通用Mapper(快速操作Mybatis)、PageHelper(通用的Mybatis分页插件)、mybatis-plus(快速操作Mybatis)、BeetlSQL(强大的ORM框架)、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、ema…&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/xkcoding&#34; target=&#34;_blank&#34;&gt;Spring Boot Demo&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://travis-ci.com/xkcoding/spring-boot-demo&#34;&gt;&lt;img alt=&#34;Travis-CI&#34; src=&#34;https://travis-ci.com/xkcoding/spring-boot-demo.svg?branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/app/xkcoding/spring-boot-demo?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=xkcoding/spring-boot-demo&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img alt=&#34;Codacy&#34; src=&#34;https://api.codacy.com/project/badge/Grade/1f2e3d437b174bfc943dae1600332ec1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://xkcoding.com&#34;&gt;&lt;img alt=&#34;author&#34; src=&#34;https://img.shields.io/badge/author-Yangkai.Shen-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;&lt;img alt=&#34;JDK&#34; src=&#34;https://img.shields.io/badge/JDK-1.8.0_162-orange.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/&#34;&gt;&lt;img alt=&#34;Spring Boot&#34; src=&#34;https://img.shields.io/badge/Spring Boot-2.1.0.RELEASE-brightgreen.svg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;LICENSE&#34; src=&#34;https://img.shields.io/github/license/xkcoding/spring-boot-demo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/stargazers&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/stars/xkcoding/spring-boot-demo.svg?label=Stars&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/network/members&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/forks/xkcoding/spring-boot-demo.svg?label=Fork&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/watchers&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/watchers/xkcoding/spring-boot-demo.svg?label=Watch&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/README.en.md&#34;&gt;English&lt;/a&gt;&lt;/span&gt; &lt;/p&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;spring boot demo&lt;/code&gt; 是一个用来深度学习并实战 &lt;code&gt;spring boot&lt;/code&gt; 的项目，目前总共包含 &lt;strong&gt;&lt;code&gt;66&lt;/code&gt;&lt;/strong&gt; 个集成demo，已经完成 &lt;strong&gt;&lt;code&gt;55&lt;/code&gt;&lt;/strong&gt; 个。&lt;/p&gt; &#xA;&lt;p&gt;该项目已成功集成 actuator(&lt;code&gt;监控&lt;/code&gt;)、admin(&lt;code&gt;可视化监控&lt;/code&gt;)、logback(&lt;code&gt;日志&lt;/code&gt;)、aopLog(&lt;code&gt;通过AOP记录web请求日志&lt;/code&gt;)、统一异常处理(&lt;code&gt;json级别和页面级别&lt;/code&gt;)、freemarker(&lt;code&gt;模板引擎&lt;/code&gt;)、thymeleaf(&lt;code&gt;模板引擎&lt;/code&gt;)、Beetl(&lt;code&gt;模板引擎&lt;/code&gt;)、Enjoy(&lt;code&gt;模板引擎&lt;/code&gt;)、JdbcTemplate(&lt;code&gt;通用JDBC操作数据库&lt;/code&gt;)、JPA(&lt;code&gt;强大的ORM框架&lt;/code&gt;)、mybatis(&lt;code&gt;强大的ORM框架&lt;/code&gt;)、通用Mapper(&lt;code&gt;快速操作Mybatis&lt;/code&gt;)、PageHelper(&lt;code&gt;通用的Mybatis分页插件&lt;/code&gt;)、mybatis-plus(&lt;code&gt;快速操作Mybatis&lt;/code&gt;)、BeetlSQL(&lt;code&gt;强大的ORM框架&lt;/code&gt;)、upload(&lt;code&gt;本地文件上传和七牛云文件上传&lt;/code&gt;)、redis(&lt;code&gt;缓存&lt;/code&gt;)、ehcache(&lt;code&gt;缓存&lt;/code&gt;)、email(&lt;code&gt;发送各种类型邮件&lt;/code&gt;)、task(&lt;code&gt;基础定时任务&lt;/code&gt;)、quartz(&lt;code&gt;动态管理定时任务&lt;/code&gt;)、xxl-job(&lt;code&gt;分布式定时任务&lt;/code&gt;)、swagger(&lt;code&gt;API接口管理测试&lt;/code&gt;)、security(&lt;code&gt;基于RBAC的动态权限认证&lt;/code&gt;)、SpringSession(&lt;code&gt;Session共享&lt;/code&gt;)、Zookeeper(&lt;code&gt;结合AOP实现分布式锁&lt;/code&gt;)、RabbitMQ(&lt;code&gt;消息队列&lt;/code&gt;)、Kafka(&lt;code&gt;消息队列&lt;/code&gt;)、websocket(&lt;code&gt;服务端推送监控服务器运行信息&lt;/code&gt;)、socket.io(&lt;code&gt;聊天室&lt;/code&gt;)、ureport2(&lt;code&gt;中国式报表&lt;/code&gt;)、打包成&lt;code&gt;war&lt;/code&gt;文件、集成 ElasticSearch(&lt;code&gt;基本操作和高级查询&lt;/code&gt;)、Async(&lt;code&gt;异步任务&lt;/code&gt;)、集成Dubbo(&lt;code&gt;采用官方的starter&lt;/code&gt;)、MongoDB(&lt;code&gt;文档数据库&lt;/code&gt;)、neo4j(&lt;code&gt;图数据库&lt;/code&gt;)、docker(&lt;code&gt;容器化&lt;/code&gt;)、&lt;code&gt;JPA多数据源&lt;/code&gt;、&lt;code&gt;Mybatis多数据源&lt;/code&gt;、&lt;code&gt;代码生成器&lt;/code&gt;、GrayLog(&lt;code&gt;日志收集&lt;/code&gt;)、JustAuth(&lt;code&gt;第三方登录&lt;/code&gt;)、LDAP(&lt;code&gt;增删改查&lt;/code&gt;)、&lt;code&gt;动态添加/切换数据源&lt;/code&gt;、单机限流(&lt;code&gt;AOP + Guava RateLimiter&lt;/code&gt;)、分布式限流(&lt;code&gt;AOP + Redis + Lua&lt;/code&gt;)、ElasticSearch 7.x(&lt;code&gt;使用官方 Rest High Level Client&lt;/code&gt;)、HTTPS、Flyway(&lt;code&gt;数据库初始化&lt;/code&gt;)、UReport2(&lt;code&gt;中国式复杂报表&lt;/code&gt;)。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果大家还有想要集成的demo，也可在 &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/issues/new&#34;&gt;issue&lt;/a&gt; 里提需求。我会额外添加在 &lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/TODO.md&#34;&gt;TODO&lt;/a&gt; 列表里。✊&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;分支介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master 分支：基于 Spring Boot 版本 &lt;code&gt;2.1.0.RELEASE&lt;/code&gt;，每个 Module 的 parent 依赖根目录下的 pom.xml，主要用于管理每个 Module 的通用依赖版本，方便大家学习。&lt;/li&gt; &#xA; &lt;li&gt;v-1.5.x 分支：基于 Spring Boot 版本 &lt;code&gt;1.5.8.RELEASE&lt;/code&gt;，每个 Module 均依赖 spring-boot-demo-parent，有挺多同学们反映这种方式对新手不是很友好，运行起来有些难度，因此 &lt;em&gt;&lt;strong&gt;此分支(v-1.5.x)会停止开发维护&lt;/strong&gt;&lt;/em&gt; ，所有内容会慢慢以 master 分支的形式同步过去，此分支暂未完成的，也会直接在 master 分支上加，在此分支学习的同学们，仍然可以在此分支学习，但是建议后期切换到master分支，会更加容易，毕竟官方已经将 Spring Boot 升级到 2.x 版本。🙂&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发环境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;JDK 1.8 +&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Maven 3.5 +&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IntelliJ IDEA ULTIMATE 2018.2 +&lt;/strong&gt; (&lt;em&gt;注意：务必使用 IDEA 开发，同时保证安装 &lt;code&gt;lombok&lt;/code&gt; 插件&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mysql 5.7 +&lt;/strong&gt; (&lt;em&gt;尽量保证使用 5.7 版本以上，因为 5.7 版本加了一些新特性，同时不向下兼容。本 demo 里会尽量避免这种不兼容的地方，但还是建议尽量保证 5.7 版本以上&lt;/em&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行方式&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;提示：如果是 fork 的朋友，同步代码的请参考：&lt;a href=&#34;https://xkcoding.com/2018/09/18/how-to-update-the-fork-project.html&#34;&gt;https://xkcoding.com/2018/09/18/how-to-update-the-fork-project.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/xkcoding/spring-boot-demo.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用 IDEA 打开 clone 下来的项目&lt;/li&gt; &#xA; &lt;li&gt;在 IDEA 中 Maven Projects 的面板导入项目根目录下 的 &lt;code&gt;pom.xml&lt;/code&gt; 文件&lt;/li&gt; &#xA; &lt;li&gt;Maven Projects 找不到的童鞋，可以勾上 IDEA 顶部工具栏的 View -&amp;gt; Tool Buttons ，然后 Maven Projects 的面板就会出现在 IDEA 的右侧&lt;/li&gt; &#xA; &lt;li&gt;找到各个 Module 的 Application 类就可以运行各个 demo 了&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;注意：每个 demo 均有详细的 README 配套，食用 demo 前记得先看看哦~&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;注意：运行各个 demo 之前，有些是需要事先初始化数据库数据的，亲们别忘记了哦~&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;项目趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/xkcoding/spring-boot-demo&#34;&gt;&lt;img src=&#34;https://starchart.cc/xkcoding/spring-boot-demo.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;h3&gt;团队纳新&lt;/h3&gt; &#xA;&lt;p&gt;组内招人啦，HC 巨多，Base 杭州，感兴趣的小伙伴，查看 &lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/jd.md&#34;&gt;岗位详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;开源推荐&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.aliyun.xkcoding.com/2021/08/14/11628591293pichd.jpg?x-oss-process=style/tag_compress&#34; alt=&#34;11628591293_.pic_hd&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JustAuth&lt;/code&gt;：史上最全的整合第三方登录的开源库，&lt;a href=&#34;https://github.com/justauth/JustAuth&#34;&gt;https://github.com/justauth/JustAuth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Mica&lt;/code&gt;：SpringBoot 微服务高效开发工具集，&lt;a href=&#34;https://github.com/lets-mica/mica&#34;&gt;https://github.com/lets-mica/mica&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;awesome-collector&lt;/code&gt;：&lt;a href=&#34;https://github.com/P-P-X/awesome-collector&#34;&gt;https://github.com/P-P-X/awesome-collector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SpringBlade&lt;/code&gt;：完整的线上解决方案(企业开发必备)，&lt;a href=&#34;https://github.com/chillzhuang/SpringBlade&#34;&gt;https://github.com/chillzhuang/SpringBlade&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pig&lt;/code&gt;：宇宙最强微服务认证授权脚手架(架构师必备)，&lt;a href=&#34;https://github.com/pigxcloud/pig&#34;&gt;https://github.com/pigxcloud/pig&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;开发计划&lt;/h3&gt; &#xA;&lt;p&gt;查看 &lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/TODO.md&#34;&gt;TODO&lt;/a&gt; 文件&lt;/p&gt; &#xA;&lt;h3&gt;各 Module 介绍&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module 名称&lt;/th&gt; &#xA;   &lt;th&gt;Module 介绍&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-helloworld&#34;&gt;demo-helloworld&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 的一个 helloworld&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-properties&#34;&gt;demo-properties&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 读取配置文件中的内容&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-actuator&#34;&gt;demo-actuator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 spring-boot-starter-actuator 用于监控 spring-boot 的启动和运行状态&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-admin/admin-client&#34;&gt;demo-admin-client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 spring-boot-admin 来可视化的监控 spring-boot 程序的运行状态，可以与 actuator 互相搭配使用，客户端示例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-admin/admin-server&#34;&gt;demo-admin-server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 spring-boot-admin 来可视化的监控 spring-boot 程序的运行状态，可以与 actuator 互相搭配使用，服务端示例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-logback&#34;&gt;demo-logback&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 logback 日志&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-log-aop&#34;&gt;demo-log-aop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用 AOP 切面的方式记录 web 请求日志&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-exception-handler&#34;&gt;demo-exception-handler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 统一异常处理，包括2种，第一种返回统一的 json 格式，第二种统一跳转到异常页面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-template-freemarker&#34;&gt;demo-template-freemarker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Freemarker 模板引擎&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-template-thymeleaf&#34;&gt;demo-template-thymeleaf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Thymeleaf 模板引擎&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-template-beetl&#34;&gt;demo-template-beetl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Beetl 模板引擎&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-template-enjoy&#34;&gt;demo-template-enjoy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Enjoy 模板引擎&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-jdbctemplate&#34;&gt;demo-orm-jdbctemplate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Jdbc Template 操作数据库，并简易封装通用 Dao 层&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-jpa&#34;&gt;demo-orm-jpa&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 spring-boot-starter-data-jpa 操作数据库&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-mybatis&#34;&gt;demo-orm-mybatis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成原生mybatis，使用 &lt;a href=&#34;https://github.com/mybatis/spring-boot-starter&#34;&gt;mybatis-spring-boot-starter&lt;/a&gt; 集成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-mybatis-mapper-page&#34;&gt;demo-orm-mybatis-mapper-page&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成&lt;a href=&#34;https://github.com/abel533/Mapper&#34;&gt;通用Mapper&lt;/a&gt;和&lt;a href=&#34;https://github.com/pagehelper/Mybatis-PageHelper&#34;&gt;PageHelper&lt;/a&gt;，使用 &lt;a href=&#34;https://github.com/abel533/Mapper/tree/master/spring-boot-starter&#34;&gt;mapper-spring-boot-starter&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/pagehelper/pagehelper-spring-boot&#34;&gt;pagehelper-spring-boot-starter&lt;/a&gt; 集成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-mybatis-plus&#34;&gt;demo-orm-mybatis-plus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 &lt;a href=&#34;https://mybatis.plus/&#34;&gt;mybatis-plus&lt;/a&gt;，使用 &lt;a href=&#34;http://mp.baomidou.com/&#34;&gt;mybatis-plus-boot-starter&lt;/a&gt; 集成，集成 BaseMapper、BaseService、ActiveRecord 操作数据库&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-orm-beetlsql&#34;&gt;demo-orm-beetlsql&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 &lt;a href=&#34;http://ibeetl.com/guide/#beetlsql&#34;&gt;beetl-sql&lt;/a&gt;，使用 &lt;a href=&#34;http://ibeetl.com/guide/#beetlsql&#34;&gt;beetl-framework-starter&lt;/a&gt; 集成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-upload&#34;&gt;demo-upload&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 文件上传示例，包含本地文件上传以及七牛云文件上传&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-cache-redis&#34;&gt;demo-cache-redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 整合 redis，操作redis中的数据，并使用redis缓存数据&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-cache-ehcache&#34;&gt;demo-cache-ehcache&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 整合 ehcache，使用 ehcache 缓存数据&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-email&#34;&gt;demo-email&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 整合 email，包括发送简单文本邮件、HTML邮件（包括模板HTML邮件）、附件邮件、静态资源邮件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-task&#34;&gt;demo-task&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 快速实现定时任务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-task-quartz&#34;&gt;demo-task-quartz&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 整合 quartz，并实现对定时任务的管理，包括新增定时任务，删除定时任务，暂停定时任务，恢复定时任务，修改定时任务启动时间，以及定时任务列表查询，&lt;code&gt;提供前端页面&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-task-xxl-job&#34;&gt;demo-task-xxl-job&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 整合&lt;a href=&#34;http://www.xuxueli.com/xxl-job/en/#/&#34;&gt;xxl-job&lt;/a&gt;，并提供绕过 &lt;code&gt;xxl-job-admin&lt;/code&gt; 对定时任务的管理的方法，包括定时任务列表，触发器列表，新增定时任务，删除定时任务，停止定时任务，启动定时任务，修改定时任务，手动触发定时任务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-swagger&#34;&gt;demo-swagger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成原生的 &lt;code&gt;swagger&lt;/code&gt; 用于统一管理、测试 API 接口&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-swagger-beauty&#34;&gt;demo-swagger-beauty&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成第三方 &lt;code&gt;swagger&lt;/code&gt; &lt;a href=&#34;https://github.com/xiaoymin/Swagger-Bootstrap-UI&#34;&gt;swagger-bootstrap-ui&lt;/a&gt; 美化API文档样式，用于统一管理、测试 API 接口&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-rbac-security&#34;&gt;demo-rbac-security&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 spring security 完成基于RBAC权限模型的权限管理，支持自定义过滤请求，动态权限认证，使用 JWT 安全认证，支持在线人数统计，手动踢出用户等操作&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-rbac-shiro&#34;&gt;demo-rbac-shiro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 shiro 实现权限管理&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-session&#34;&gt;demo-session&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Spring Session 实现Session共享、重启程序Session不失效&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-oauth&#34;&gt;demo-oauth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 实现 oauth 服务器功能，实现授权码机制&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-social&#34;&gt;demo-social&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成第三方登录，集成 &lt;code&gt;justauth-spring-boot-starter&lt;/code&gt; 实现QQ登录、GitHub登录、微信登录、谷歌登录、微软登录、小米登录、企业微信登录。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-zookeeper&#34;&gt;demo-zookeeper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Zookeeper 结合AOP实现分布式锁&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-mq-rabbitmq&#34;&gt;demo-mq-rabbitmq&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 RabbitMQ 实现基于直接队列模式、分列模式、主题模式、延迟队列的消息发送和接收&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-mq-rocketmq&#34;&gt;demo-mq-rocketmq&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 RocketMQ，实现消息的发送和接收&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-mq-kafka&#34;&gt;demo-mq-kafka&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 kafka，实现消息的发送和接收&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-websocket&#34;&gt;demo-websocket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 websocket，后端主动推送前端服务器运行信息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-websocket-socketio&#34;&gt;demo-websocket-socketio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用 netty-socketio 集成 websocket，实现一个简单的聊天室&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-ureport2&#34;&gt;demo-ureport2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 ureport2 实现复杂的自定义的中国式报表&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-uflo&#34;&gt;demo-uflo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 uflo 快速实现轻量级流程引擎&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-urule&#34;&gt;demo-urule&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 urule 快速实现规则引擎&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-activiti&#34;&gt;demo-activiti&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 activiti 7 流程引擎&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-async&#34;&gt;demo-async&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用原生提供的异步任务支持，实现异步执行任务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-war&#34;&gt;demo-war&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 打成 war 包的配置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-elasticsearch&#34;&gt;demo-elasticsearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 ElasticSearch，集成 &lt;code&gt;spring-boot-starter-data-elasticsearch&lt;/code&gt; 完成对 ElasticSearch 的高级使用技巧，包括创建索引、配置映射、删除索引、增删改查基本操作、复杂查询、高级查询、聚合查询等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-dubbo&#34;&gt;demo-dubbo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Dubbo，分别为公共模块 &lt;code&gt;spring-boot-demo-dubbo-common&lt;/code&gt;、服务提供方&lt;code&gt;spring-boot-demo-dubbo-provider&lt;/code&gt;、服务调用方&lt;code&gt;spring-boot-demo-dubbo-consumer&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-mongodb&#34;&gt;demo-mongodb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 MongoDB，使用官方的 starter 实现增删改查&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-neo4j&#34;&gt;demo-neo4j&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 Neo4j 图数据库，实现一个校园人物关系网的demo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-docker&#34;&gt;demo-docker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 容器化&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-multi-datasource-jpa&#34;&gt;demo-multi-datasource-jpa&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用JPA集成多数据源&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-multi-datasource-mybatis&#34;&gt;demo-multi-datasource-mybatis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用Mybatis集成多数据源，使用 Mybatis-Plus 提供的开源解决方案实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-sharding-jdbc&#34;&gt;demo-sharding-jdbc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用 &lt;code&gt;sharding-jdbc&lt;/code&gt; 实现分库分表，同时ORM采用 Mybatis-Plus&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-tio&#34;&gt;demo-tio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 tio 网络编程框架&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;demo-grpc&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成grpc，配置tls/ssl，参见&lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/issues/5&#34;&gt;ISSUE#5&lt;/a&gt;&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-codegen&#34;&gt;demo-codegen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 velocity 模板技术实现的代码生成器，简化开发&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-graylog&#34;&gt;demo-graylog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 graylog 实现日志统一收集&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;demo-sso&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 SSO 单点登录，参见 &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/issues/12&#34;&gt;ISSUE#12&lt;/a&gt;&lt;br&gt; &lt;span style=&#34;color:pink;&#34;&gt;待完成&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-ldap&#34;&gt;demo-ldap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 LDAP，集成 &lt;code&gt;spring-boot-starter-data-ldap&lt;/code&gt; 完成对 Ldap 的基本 CURD操作, 并给出以登录为实战的 API 示例，参见 &lt;a href=&#34;https://github.com/xkcoding/spring-boot-demo/issues/23&#34;&gt;ISSUE#23&lt;/a&gt;，感谢 &lt;a href=&#34;https://github.com/fxbin&#34;&gt;@fxbin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-dynamic-datasource&#34;&gt;demo-dynamic-datasource&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 动态添加数据源、动态切换数据源&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-ratelimit-guava&#34;&gt;demo-ratelimit-guava&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用 Guava RateLimiter 实现单机版限流，保护 API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-ratelimit-redis&#34;&gt;demo-ratelimit-redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 使用 Redis + Lua 脚本实现分布式限流，保护 API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-https&#34;&gt;demo-https&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot 集成 HTTPS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-elasticsearch-rest-high-level-client&#34;&gt;demo-elasticsearch-rest-high-level-client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring boot 集成 ElasticSearch 7.x 版本，使用官方 Rest High Level Client 操作 ES 数据&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-flyway&#34;&gt;demo-flyway&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring boot 集成 Flyway，项目启动时初始化数据库表结构，同时支持数据库脚本版本控制&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xkcoding/spring-boot-demo/master/demo-ureport2&#34;&gt;demo-ureport2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spring boot 集成 Ureport2，实现中国式复杂报表设计&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;特别感谢&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢 &lt;a href=&#34;https://portal.qiniu.com/signup?utm_source=kaiyuan&amp;amp;utm_media=xkcoding&#34;&gt;七牛云&lt;/a&gt; 提供的免费云存储与 CDN 加速支持&lt;/li&gt; &#xA; &lt;li&gt;感谢史上最牛的代码生成插件 &lt;a href=&#34;https://gejun123456.github.io/MyBatisCodeHelper-Pro/#/?id=mybatiscodehelper-pro&#34;&gt;MyBatisCodeHelper-Pro&lt;/a&gt; 提供的永久激活码&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=spring-boot-demo&#34;&gt;&lt;img src=&#34;http://static.xkcoding.com/spring-boot-demo/064312.jpg&#34; width=&#34;100px&#34; alt=&#34;jetbrains&#34;&gt;&lt;strong&gt;感谢 JetBrains 提供的免费开源 License&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2018 Yangkai.Shen&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>steven-tey/dub</title>
    <updated>2022-09-25T01:30:45Z</updated>
    <id>tag:github.com,2022-09-25:/steven-tey/dub</id>
    <link href="https://github.com/steven-tey/dub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source link shortener with built-in analytics + free custom domains.&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://dub.sh&#34;&gt; &lt;img alt=&#34;Dub – an open-source link shortener SaaS with built-in analytics + free custom domains.&#34; src=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/public/static/thumbnail.png&#34;&gt; &lt;h1 align=&#34;center&#34;&gt;Dub&lt;/h1&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34;&gt; An open-source link shortener SaaS with built-in analytics + free custom domains. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/#introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/#deploy-your-own&#34;&gt;&lt;strong&gt;Deploy Your Own&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/#tech-stack&#34;&gt;&lt;strong&gt;Tech Stack&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/#implementation&#34;&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/#contributing&#34;&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Dub is an open-source link shortener with built-in analytics + free custom domains. Built with &lt;a href=&#34;http://vercel.com/edge&#34;&gt;Vercel Edge Functions&lt;/a&gt; and &lt;a href=&#34;https://docs.upstash.com/redis&#34;&gt;Upstash Redis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here are some of the features that Dub provides out-of-the-box:&lt;/p&gt; &#xA;&lt;h3&gt;Built-in Analytics&lt;/h3&gt; &#xA;&lt;p&gt;Dub provides a powerful analytics dashboard for your links, including geolocation, device, and browser information.&lt;/p&gt; &#xA;&lt;img alt=&#34;Analytics Dashboard&#34; src=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/public/static/landing/analytics.png&#34; height=&#34;500&#34;&gt; &#xA;&lt;h3&gt;Custom domains&lt;/h3&gt; &#xA;&lt;p&gt;You can easily configure custom domains on Dub –&amp;nbsp;just add an A/CNAME record to your DNS provider and you&#39;re good to go. This is built on the &lt;a href=&#34;https://domains-api.vercel.app/&#34;&gt;Vercel Domains API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img alt=&#34;Analytics Dashboard&#34; src=&#34;https://raw.githubusercontent.com/steven-tey/dub/main/public/static/landing/domains.png&#34; height=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Deploy Your Own&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy your own hosted version of Dub for greater privacy &amp;amp; control. Just click the link below to deploy a ready-to-go version of Dub to Vercel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fsteven-tey%2Fdub&amp;amp;demo-title=Dub%20-%20Open-Source%20Link%20Shortener&amp;amp;demo-description=An%20open-source%20link%20shortener%20SaaS%20built%20with%20Vercel%20Edge%20Functions%20and%20Upstash.&amp;amp;project-name=Dub&amp;amp;repository-name=dub&amp;amp;demo-url=https%3A%2F%2Fdub.sh&amp;amp;demo-image=https%3A%2F%2Fdub.sh%2Fstatic%2Fthumbnail.png&amp;amp;integration-ids=oac_V3R1GIpkoJorr6fqyiwdhl17&amp;amp;env=EMAIL_SERVER,EMAIL_FROM,NEXTAUTH_SECRET,VERCEL_PROJECT_ID,VERCEL_TEAM_ID,AUTH_BEARER_TOKEN,DATABASE_URL&amp;amp;envDescription=Follow%20the%20instructions%20here%20to%20set%20up%20the%20required%20env%20vars%3A&amp;amp;envLink=https%3A%2F%2Fgithub.com%2Fsteven-tey%2Fdub%2Fblob%2Fmain%2F.env.example&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; – framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt; –&amp;nbsp;language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind&lt;/a&gt; –&amp;nbsp;CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upstash.com/&#34;&gt;Upstash&lt;/a&gt; –&amp;nbsp;database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://next-auth.js.org/&#34;&gt;NextAuth.js&lt;/a&gt; – auth&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; –&amp;nbsp;hosting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt; –&amp;nbsp;payments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementation&lt;/h2&gt; &#xA;&lt;p&gt;Dub is built as a standard Next.js application with &lt;a href=&#34;https://nextjs.org/docs/advanced-features/middleware&#34;&gt;Middleware&lt;/a&gt; to handle multi-tenancy, inspired by &lt;a href=&#34;https://github.com/vercel/platforms&#34;&gt;the Vercel Platforms Starter Kit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; is used as the database for storing links and analytics data, which works well for key-value data types. Redis also has the Sorted Set data type, which is perfect for storing &amp;amp; retrieving time-series analytics data. Here&#39;s the full schema:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{hostname}:links&lt;/code&gt; –&amp;nbsp;hashmap of all links for a given hostname (e.g. &lt;code&gt;dub.sh:links&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{hostname}:links:timestamps&lt;/code&gt; –&amp;nbsp;sorted set of all link timestamps for a given hostname (e.g. &lt;code&gt;dub.sh:links:timestamps&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{hostname}:clicks:{linkId}&lt;/code&gt; –&amp;nbsp;sorted set of all clicks for a given link (e.g. &lt;code&gt;dub.sh:clicks:github&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{hostname}:root:clicks&lt;/code&gt; –&amp;nbsp;sorted set of all root link clicks for a given hostname (e.g. &lt;code&gt;dub.sh:root:clicks&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/steven-tey/dub/issues&#34;&gt;Open an issue&lt;/a&gt; if you believe you&#39;ve encountered a bug.&lt;/li&gt; &#xA; &lt;li&gt;Make a &lt;a href=&#34;https://github.com/steven-tey/dub/pull&#34;&gt;pull request&lt;/a&gt; to add new features/make quality-of-life improvements/fix bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steven Tey (&lt;a href=&#34;https://twitter.com/steventey&#34;&gt;@steventey&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible&lt;/a&gt;, Dub is open-source under the GNU Affero General Public License Version 3 (AGPLv3) or any later version. You can &lt;a href=&#34;https://github.com/steven-tey/dub/raw/main/LICENSE.md&#34;&gt;find it here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>