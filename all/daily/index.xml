<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-24T01:29:08Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>0hq/WebGPT</title>
    <updated>2023-04-24T01:29:08Z</updated>
    <id>tag:github.com,2023-04-24:/0hq/WebGPT</id>
    <link href="https://github.com/0hq/WebGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run GPT model on the browser with WebGPU. An implementation of GPT inference in less than ~2000 lines of vanilla Javascript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0hq/WebGPT/main/other/misc/header.png&#34; alt=&#34;webGPT&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After six years of development, WebGPU is about to launch across most major web browsers. This is massive: web applications now have near-native access to the GPU, with the added capacity of compute shaders.&lt;/p&gt; &#xA;&lt;p&gt;WebGPT is a vanilla JS and HTML implementation of a transformer model, intended as a proof-of-concept as well as educational resource. WebGPT has been tested to be working with models up to 500 M parameters, though could likely support far more with further testing/optimization.&lt;/p&gt; &#xA;&lt;p&gt;At the moment, WebGPT averages ~130ms per token on GPT-2 124M running on a 2020 M1 Mac with Chrome Canary. This could be 500% faster, if not more, with proper optimization of the kernels, buffers, the WebGPU interface. WebGPU should also receive significant speed increases as it matures.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/30643741/233488471-0cd93d38-af27-4648-bbf6-46aa033e44a1.mp4&#34;&gt;https://user-images.githubusercontent.com/30643741/233488471-0cd93d38-af27-4648-bbf6-46aa033e44a1.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running WebGPT&lt;/h2&gt; &#xA;&lt;p&gt;Running WebGPT is remarkably simple, as it&#39;s just a set of HTML + JS files. Since WebGPU is still in the process of being released, you&#39;ll need to open with a compatible browser. WebGPU is currently available on Chrome v113 but the most straightforward way to ensure proper functionality is to install &lt;a href=&#34;https://www.google.com/chrome/canary/&#34;&gt;Chrome Canary&lt;/a&gt; and enable &#34;Unsafe WebGPU&#34; at &lt;code&gt;chrome://flags/#enable-unsafe-webgpu&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve included two different models: a toy GPT-Shakespeare model (which is severly undertrained haha) and GPT-2 117M. See main.js for more information on how to run these models. If you want to import custom models, take a look at misc/conversion_scripts.&lt;/p&gt; &#xA;&lt;p&gt;If you want to try out WebGPT, visit the demo website here &lt;a href=&#34;https://www.kmeans.org&#34;&gt;KMeans.org&lt;/a&gt;. I&#39;d generally reccomend cloning the repo and running locally, just because loading the weights remotely is significantly slower. Note: You&#39;ll need to use Git LFS to download the model files, after cloning the repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0hq/WebGPT/main/other/misc/files.png&#34; alt=&#34;file sizes&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap / Fixing Stupid Decisions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Embeddings / de-embeddings on GPU.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Initializing pipelines on every step is incredibly inefficient.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimize workgroup sizes, specifically for single row/col operations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Reuse buffers as well!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Kernel shared memory!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Convert into a package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Compute pass splitting for larger models &lt;em&gt;(maxStorageBufferBindingSize)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Key-value caching!!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write better comments + make Youtube explainer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;When I started this project I had no idea how transformers worked or how to implement them (or GPUs or matmul kernels or WebGPU or tokenization for that matter), so Andrej Karpathy&#39;s series on neural networks and building GPT from scratch were invaluable: &lt;a href=&#34;https://www.youtube.com/@AndrejKarpathy&#34;&gt;Andrej&#39;s Youtube&lt;/a&gt;. I&#39;ve also used some code as well from the nanoGPT repository: &lt;a href=&#34;https://github.com/karpathy/nanoGPT&#34;&gt;nanoGPT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I copied from LatitudeGames&#39; implementation of OpenAI&#39;s GPT-3 tokenizer in Javascript: &lt;a href=&#34;https://github.com/latitudegames/GPT-3-Encoder&#34;&gt;GPT-3-Encoder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Note: I&#39;m looking for work!&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m currently in the process of switching into the AI field. I&#39;m specifically looking for opportunites at larger research labs in a variety of jobs, with the goal of breaking into the space and finding an area in which to specialize. If you&#39;re interested, check out my personal website: &lt;a href=&#34;https://depue.design/&#34;&gt;Personal Website&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>peterw/Gumroad-Landing-Page-Generator</title>
    <updated>2023-04-24T01:29:08Z</updated>
    <id>tag:github.com,2023-04-24:/peterw/Gumroad-Landing-Page-Generator</id>
    <link href="https://github.com/peterw/Gumroad-Landing-Page-Generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Gumroad Scraper and Website Generator&lt;/h2&gt; &#xA;&lt;p&gt;This project is a Python script that scrapes data from a Gumroad site, generates a colorful and well-designed HTML page using OpenAI&#39;s GPT-4 model, and deploys the generated page to Vercel.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;Scrape data from a Gumroad site using BeautifulSoup. Generate a mobile-friendly and visually appealing HTML page with gradient design using OpenAI&#39;s GPT-4 model. Deploy the generated HTML page to Vercel.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Before you begin, ensure you have met the following requirements:&lt;/p&gt; &#xA;&lt;p&gt;You have a recent version of Python (3.7 or newer) installed. You have a Vercel account and a Vercel API token. You have OpenAI API access and an OpenAI API key. You have installed the required Python packages:&lt;/p&gt; &#xA;&lt;p&gt;login with the Vercel CLI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openai, beautifulsoup4, requests, python-dotenv, vercel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository and navigate to its directory.&lt;/p&gt; &#xA;&lt;p&gt;Create a .env file in the project directory and add your Vercel and OpenAI API keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;VERCEL_TOKEN=&amp;lt;your_vercel_api_token&amp;gt;&#xA;OPENAI_API_KEY=&amp;lt;your_openai_api_key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;To run the script, execute the following command in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gumroad.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will prompt you to enter a Gumroad site URL. After providing the URL, it will scrape the data, generate an HTML page, and deploy it to Vercel.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>quadratichq/quadratic</title>
    <updated>2023-04-24T01:29:08Z</updated>
    <id>tag:github.com,2023-04-24:/quadratichq/quadratic</id>
    <link href="https://github.com/quadratichq/quadratic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quadratic | Data Science Spreadsheet with Python &amp; SQL&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/quadratichq/quadratic/actions/workflows/test-e2e.yml/badge.svg?sanitize=true&#34; alt=&#34;E2E Tests&#34;&gt; &lt;img src=&#34;https://github.com/quadratichq/quadratic/actions/workflows/test-python.yml/badge.svg?sanitize=true&#34; alt=&#34;Python Tests&#34;&gt; &lt;img src=&#34;https://github.com/quadratichq/quadratic/actions/workflows/test-unit.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/QuadraticHQ&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3479421/162037216-2fea1620-2310-4cfa-96fb-31299195e3a9.png&#34; alt=&#34;quadraticlogo4 1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3479421/162039117-02f85f2c-e382-4ed8-ac39-64efab17a144.svg?sanitize=true&#34; alt=&#34;quardatic icon small&#34;&gt; &lt;strong&gt;&lt;em&gt;The Data Science Spreadsheet&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Infinite data grid with Python, JavaScript, and SQL built-in. Data Connectors to pull in your data.&lt;/p&gt; &#xA;&lt;p&gt;Take your data and do something useful with it as quickly and easily as possible!&lt;/p&gt; &#xA;&lt;img width=&#34;1552&#34; alt=&#34;Screenshot 2023-02-24 at 2 57 36 PM&#34; src=&#34;https://user-images.githubusercontent.com/3479421/221301059-921ad96a-878e-4082-b3b9-e55a54185c5d.png&#34;&gt; &#xA;&lt;h2&gt;Online Demo&lt;/h2&gt; &#xA;&lt;p&gt;We have a hosted version of the &lt;code&gt;main&lt;/code&gt; branch available online.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Try it out! --&amp;gt; &lt;a href=&#34;https://app.quadratichq.com&#34;&gt;https://app.quadratichq.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the conversation on our Discord channel -&amp;gt; &lt;a href=&#34;https://discord.gg/quadratic&#34;&gt;https://discord.gg/quadratic&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read the documentation -&amp;gt; &lt;a href=&#34;https://docs.quadratichq.com&#34;&gt;https://docs.quadratichq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Quadratic?&lt;/h1&gt; &#xA;&lt;p&gt;Quadratic is a Web-based spreadsheet application that runs in the browser and as a native app (via Electron).&lt;/p&gt; &#xA;&lt;p&gt;Our goal is to build a spreadsheet that enables you to pull your data from its source (SaaS, Database, CSV, API, etc) and then work with that data using the most popular data science tools today (Python, Pandas, SQL, JS, Excel Formulas, etc).&lt;/p&gt; &#xA;&lt;p&gt;Quadratic has no environment to configure. The grid runs entirely in the browser with no backend service. This makes our grids completely portable and very easy to share.&lt;/p&gt; &#xA;&lt;h2&gt;What can I do with Quadratic?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build dashboards&lt;/li&gt; &#xA; &lt;li&gt;Create internal tools in minutes&lt;/li&gt; &#xA; &lt;li&gt;Quickly mix data from different sources&lt;/li&gt; &#xA; &lt;li&gt;Explore your data for new insights&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h3&gt;Run Quadratic Locally&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install npm, &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rustup&lt;/a&gt;, and &lt;a href=&#34;https://rustwasm.github.io/wasm-pack/installer/&#34;&gt;wasm-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rustup target add wasm32-unknown-unknown&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the Rust/WASM &lt;code&gt;npm run build:wasm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run Web &lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run Electron &lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development Progress and Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Quadratic is in ALPHA. For now, we do not recommend relying on Quadratic.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebGL Grid (pinch and zoom grid)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Open and Save files locally&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Python, Pandas Support (WASM)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Excel Formula Support (in progress)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cell Formatting (issue &lt;a href=&#34;https://github.com/quadratichq/quadratic/issues/44&#34;&gt;#44&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Undo / Redo (issue &lt;a href=&#34;https://github.com/quadratichq/quadratic/issues/42&#34;&gt;#42&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multiplayer Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Charts and Graphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; SQL Database Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; AI Auto Complete&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Feature request or bug report?&lt;/strong&gt; Submit a &lt;a href=&#34;https://github.com/quadratichq/quadratic/issues/new/choose/&#34;&gt;Github Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to contribute?&lt;/strong&gt; Read our &lt;a href=&#34;https://raw.githubusercontent.com/quadratichq/quadratic/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Want to learn more about how Quadratic works? Read the &lt;a href=&#34;https://raw.githubusercontent.com/quadratichq/quadratic/main/docs/how_quadratic_works.md&#34;&gt;How Quadratic Works&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;There are more example files are in the application file menu. File &amp;gt; Open sample&lt;/p&gt; &#xA;&lt;p&gt;You can download them and then open them in Quadratic via File &amp;gt; Open Grid&lt;/p&gt; &#xA;&lt;h2&gt;Quadratic is Hiring&lt;/h2&gt; &#xA;&lt;p&gt;Check out our open roles -&amp;gt; &lt;a href=&#34;https://careers.quadratichq.com&#34;&gt;careers.quadratichq.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>