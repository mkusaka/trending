<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-16T01:32:39Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>onevcat/Kingfisher</title>
    <updated>2024-10-16T01:32:39Z</updated>
    <id>tag:github.com,2024-10-16:/onevcat/Kingfisher</id>
    <link href="https://github.com/onevcat/Kingfisher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight, pure-Swift library for downloading and caching images from the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png&#34; alt=&#34;Kingfisher&#34; title=&#34;Kingfisher&#34; width=&#34;557&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/onevcat/Kingfisher/actions?query=workflow%3Abuild&#34;&gt;&lt;img src=&#34;https://github.com/onevcat/kingfisher/workflows/build/badge.svg?branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/onevcat/Kingfisher/master/documentation/kingfisher&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-Doc-DE5C43.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Kingfisher&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/onevcat/Kingfisher.svg?color=blue&amp;amp;include_prereleases=&amp;amp;sort=semver&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/onevcat/Kingfisher/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-black&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Kingfisher is a powerful, pure-Swift library for downloading and caching images from the web. It provides you a chance to use a pure-Swift way to work with remote images in your next app.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Asynchronous image downloading and caching.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Loading image from either &lt;code&gt;URLSession&lt;/code&gt;-based networking or local provided data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Useful image processors and filters provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple-layer hybrid cache for both memory and disk.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fine control on cache behavior. Customizable expiration date and size limit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cancelable downloading and auto-reusing previous downloaded content to improve performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Independent components. Use the downloader, caching system, and image processors separately as you need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Prefetching images and showing them from the cache to boost your app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extensions for &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;NSImageView&lt;/code&gt;, &lt;code&gt;NSButton&lt;/code&gt;, &lt;code&gt;UIButton&lt;/code&gt;, &lt;code&gt;NSTextAttachment&lt;/code&gt;, &lt;code&gt;WKInterfaceImage&lt;/code&gt;, &lt;code&gt;TVMonogramView&lt;/code&gt; and &lt;code&gt;CPListItem&lt;/code&gt; to directly set an image from a URL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Built-in transition animation when setting images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customizable placeholder and indicator while loading images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extensible image processing and image format easily.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Low Data Mode support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SwiftUI support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Swift 6 &amp;amp; Swift Concurrency (strict mode) prepared.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Load &amp;amp; cache for Live Photo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kingfisher 101&lt;/h3&gt; &#xA;&lt;p&gt;The simplest use-case is setting an image to an image view with the &lt;code&gt;UIImageView&lt;/code&gt; extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import Kingfisher&#xA;&#xA;let url = URL(string: &#34;https://example.com/image.png&#34;)&#xA;imageView.kf.setImage(with: url)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kingfisher will download the image from &lt;code&gt;url&lt;/code&gt;, send it to both memory cache and disk cache, and display it in &lt;code&gt;imageView&lt;/code&gt;. When you set it with the same URL later, the image will be retrieved from the cache and shown immediately.&lt;/p&gt; &#xA;&lt;p&gt;It also works if you use SwiftUI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var body: some View {&#xA;    KFImage(URL(string: &#34;https://example.com/image.png&#34;)!)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;A More Advanced Example&lt;/h3&gt; &#xA;&lt;p&gt;With the powerful options, you can do hard tasks with Kingfisher in a simple way. For example, the code below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Downloads a high-resolution image.&lt;/li&gt; &#xA; &lt;li&gt;Downsamples it to match the image view size.&lt;/li&gt; &#xA; &lt;li&gt;Makes it round cornered with a given radius.&lt;/li&gt; &#xA; &lt;li&gt;Shows a system indicator and a placeholder image while downloading.&lt;/li&gt; &#xA; &lt;li&gt;When prepared, it animates the small thumbnail image with a &#34;fade in&#34; effect.&lt;/li&gt; &#xA; &lt;li&gt;The original large image is also cached to disk for later use, to get rid of downloading it again in a detail view.&lt;/li&gt; &#xA; &lt;li&gt;A console log is printed when the task finishes, either for success or failure.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let url = URL(string: &#34;https://example.com/high_resolution_image.png&#34;)&#xA;let processor = DownsamplingImageProcessor(size: imageView.bounds.size)&#xA;             |&amp;gt; RoundCornerImageProcessor(cornerRadius: 20)&#xA;imageView.kf.indicatorType = .activity&#xA;imageView.kf.setImage(&#xA;    with: url,&#xA;    placeholder: UIImage(named: &#34;placeholderImage&#34;),&#xA;    options: [&#xA;        .processor(processor),&#xA;        .scaleFactor(UIScreen.main.scale),&#xA;        .transition(.fade(1)),&#xA;        .cacheOriginalImage&#xA;    ])&#xA;{&#xA;    result in&#xA;    switch result {&#xA;    case .success(let value):&#xA;        print(&#34;Task done for: \(value.source.url?.absoluteString ?? &#34;&#34;)&#34;)&#xA;    case .failure(let error):&#xA;        print(&#34;Job failed: \(error.localizedDescription)&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is a common situation I can meet in my daily work. Think about how many lines you need to write without Kingfisher!&lt;/p&gt; &#xA;&lt;h3&gt;Method Chaining&lt;/h3&gt; &#xA;&lt;p&gt;If you are not a fan of the &lt;code&gt;kf&lt;/code&gt; extension, you can also prefer to use the &lt;code&gt;KF&lt;/code&gt; builder and chained the method invocations. The code below is doing the same thing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Use `kf` extension&#xA;imageView.kf.setImage(&#xA;    with: url,&#xA;    placeholder: placeholderImage,&#xA;    options: [&#xA;        .processor(processor),&#xA;        .loadDiskFileSynchronously,&#xA;        .cacheOriginalImage,&#xA;        .transition(.fade(0.25)),&#xA;        .lowDataMode(.network(lowResolutionURL))&#xA;    ],&#xA;    progressBlock: { receivedSize, totalSize in&#xA;        // Progress updated&#xA;    },&#xA;    completionHandler: { result in&#xA;        // Done&#xA;    }&#xA;)&#xA;&#xA;// Use `KF` builder&#xA;KF.url(url)&#xA;  .placeholder(placeholderImage)&#xA;  .setProcessor(processor)&#xA;  .loadDiskFileSynchronously()&#xA;  .cacheMemoryOnly()&#xA;  .fade(duration: 0.25)&#xA;  .lowDataModeSource(.network(lowResolutionURL))&#xA;  .onProgress { receivedSize, totalSize in  }&#xA;  .onSuccess { result in  }&#xA;  .onFailure { error in }&#xA;  .set(to: imageView)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And even better, if later you want to switch to SwiftUI, just change the &lt;code&gt;KF&lt;/code&gt; above to &lt;code&gt;KFImage&lt;/code&gt;, and you&#39;ve done:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {&#xA;    var body: some View {&#xA;        KFImage.url(url)&#xA;          .placeholder(placeholderImage)&#xA;          .setProcessor(processor)&#xA;          .loadDiskFileSynchronously()&#xA;          .cacheMemoryOnly()&#xA;          .fade(duration: 0.25)&#xA;          .lowDataModeSource(.network(lowResolutionURL))&#xA;          .onProgress { receivedSize, totalSize in  }&#xA;          .onSuccess { result in  }&#xA;          .onFailure { error in }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Kingfisher 8.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(UIKit/AppKit) iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+ / visionOS 1.0+&lt;/li&gt; &#xA; &lt;li&gt;(SwiftUI) iOS 14.0+ / macOS 11.0+ / tvOS 14.0+ / watchOS 7.0+ / visionOS 1.0+&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.9+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kingfisher 7.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(UIKit/AppKit) iOS 12.0+ / macOS 10.14+ / tvOS 12.0+ / watchOS 5.0+ / visionOS 1.0+&lt;/li&gt; &#xA; &lt;li&gt;(SwiftUI) iOS 14.0+ / macOS 11.0+ / tvOS 14.0+ / watchOS 7.0+ / visionOS 1.0+&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Refer to one of the following tutorials to install and use the framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstarteduikit&#34;&gt;UIKit Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstartedswiftui&#34;&gt;SwiftUI Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively, you can follow either of the methods below.&lt;/p&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;https://github.com/onevcat/Kingfisher.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Up to Next Major&#34; with &#34;8.0.0&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;source &#39;https://github.com/CocoaPods/Specs.git&#39;&#xA;platform :ios, &#39;13.0&#39;&#xA;use_frameworks!&#xA;&#xA;target &#39;MyApp&#39; do&#xA;  pod &#39;Kingfisher&#39;, &#39;~&amp;gt; 8.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pre-built Framework&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the release page, download the latest version of Kingfisher from the assets section.&lt;/li&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;Kingfisher.xcframework&lt;/code&gt; into your project and add it to the target (usually the app target).&lt;/li&gt; &#xA; &lt;li&gt;Select your target, in the &#34;General&#34; Tab, find the &#34;Frameworks, Libraries, and Embedded Content&#34; section, set the &lt;code&gt;Embed Without Signing&lt;/code&gt; to Kingfisher.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check the documentation and tutorials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher&#34;&gt;Documentation Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/gettingstarted&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstarteduikit&#34;&gt;UIKit Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstartedswiftui&#34;&gt;SwiftUI Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks&#34;&gt;Common Tasks - General&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_cache&#34;&gt;Common Tasks - Cache&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_downloader&#34;&gt;Common Tasks - Downloader&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_processor&#34;&gt;Common tasks - Processor&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migrating&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/migration-to-8&#34;&gt;Kingfisher 8.0 Migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onevcat/Kingfisher/wiki/Kingfisher-7.0-Migration-Guide&#34;&gt;Kingfisher 7.0 Migration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using an even earlier version, see the guides below to know the steps for migrating.&lt;/p&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;h3&gt;Future of Kingfisher&lt;/h3&gt; &#xA;&lt;p&gt;I want to keep Kingfisher lightweight. This framework focuses on providing a simple solution for downloading and caching images. This doesn’t mean the framework can’t be improved. Kingfisher is far from perfect, so necessary and useful updates will be made to make it better.&lt;/p&gt; &#xA;&lt;h3&gt;Developments and Tests&lt;/h3&gt; &#xA;&lt;p&gt;Any contributing and pull requests are warmly welcome. However, before you plan to implement some features or try to fix an uncertain issue, it is recommended to open a discussion first. It would be appreciated if your pull requests could build with all tests green. :)&lt;/p&gt; &#xA;&lt;h3&gt;About the logo&lt;/h3&gt; &#xA;&lt;p&gt;The logo of Kingfisher is inspired by &lt;a href=&#34;http://en.wikipedia.org/wiki/Tangram&#34;&gt;Tangram (七巧板)&lt;/a&gt;, a dissection puzzle consisting of seven flat shapes from China. I believe she&#39;s a kingfisher bird instead of a swift, but someone insists that she is a pigeon. I guess I should give her a name. Hi, guys, do you have any suggestions?&lt;/p&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;Follow and contact me on &lt;a href=&#34;http://twitter.com/onevcat&#34;&gt;Twitter&lt;/a&gt; or &lt;a href=&#34;http://weibo.com/onevcat&#34;&gt;Sina Weibo&lt;/a&gt;. If you find an issue, &lt;a href=&#34;https://github.com/onevcat/Kingfisher/issues/new&#34;&gt;open a ticket&lt;/a&gt;. Pull requests are warmly welcome as well.&lt;/p&gt; &#xA;&lt;h2&gt;Backers &amp;amp; Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Open-source projects cannot live long without your help. If you find Kingfisher to be useful, please consider supporting this project by becoming a sponsor. Your user icon or company logo shows up &lt;a href=&#34;https://onevcat.com/tabs/about/&#34;&gt;on my blog&lt;/a&gt; with a link to your home page.&lt;/p&gt; &#xA;&lt;p&gt;Become a sponsor through &lt;a href=&#34;https://github.com/sponsors/onevcat&#34;&gt;GitHub Sponsors&lt;/a&gt;. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://img.ly/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1812216/106253726-271ed000-6218-11eb-98e0-c9c681925770.png&#34; alt=&#34;imgly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.emergetools.com&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/1019875/254794187-d44f6f50-993f-42e3-b79c-960f69c4adc1.png&#34; alt=&#34;emergetools&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Kingfisher is released under the MIT license. See LICENSE for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>argmaxinc/WhisperKit</title>
    <updated>2024-10-16T01:32:39Z</updated>
    <id>tag:github.com,2024-10-16:/argmaxinc/WhisperKit</id>
    <link href="https://github.com/argmaxinc/WhisperKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;On-device Speech Recognition for Apple Silicon&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/argmaxinc/WhisperKit#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/f0699c07-c29f-45b6-a9c6-f6d491b8f791&#34; alt=&#34;WhisperKit&#34; width=&#34;20%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/argmaxinc/WhisperKit#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/1be5e31c-de42-40ab-9b85-790cb911ed47&#34; alt=&#34;WhisperKit&#34; width=&#34;20%&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;WhisperKit&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/argmaxinc/whisperkit/actions/workflows/pre-release-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/argmaxinc/whisperkit/actions/workflows/unit-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/argmaxinc/whisperkit?logo=github&amp;amp;logoColor=969da4&amp;amp;label=License&amp;amp;labelColor=353a41&amp;amp;color=32d058&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/argmaxinc/WhisperKit&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fargmaxinc%2FWhisperKit%2Fbadge%3Ftype%3Dswift-versions&amp;amp;labelColor=353a41&amp;amp;color=32d058&#34; alt=&#34;Supported Swift Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/argmaxinc/WhisperKit&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fargmaxinc%2FWhisperKit%2Fbadge%3Ftype%3Dplatforms&amp;amp;labelColor=353a41&amp;amp;color=32d058&#34; alt=&#34;Supported Platforms&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/G5F5GZGecC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1171912382512115722?style=flat&amp;amp;logo=discord&amp;amp;logoColor=969da4&amp;amp;label=Discord&amp;amp;labelColor=353a41&amp;amp;color=32d058&amp;amp;link=https%3A%2F%2Fdiscord.gg%2FG5F5GZGecC&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;WhisperKit is a Swift package that integrates OpenAI&#39;s popular &lt;a href=&#34;https://github.com/openai/whisper&#34;&gt;Whisper&lt;/a&gt; speech recognition model with Apple&#39;s CoreML framework for efficient, local inference on Apple devices.&lt;/p&gt; &#xA;&lt;p&gt;Check out the demo app on &lt;a href=&#34;https://testflight.apple.com/join/LPVOyJZW&#34;&gt;TestFlight&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.takeargmax.com/blog/whisperkit&#34;&gt;[Blog Post]&lt;/a&gt; &lt;a href=&#34;https://github.com/argmaxinc/whisperkittools&#34;&gt;[Python Tools Repo]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#steps&#34;&gt;Steps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#quick-example&#34;&gt;Quick Example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#model-selection&#34;&gt;Model Selection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#generating-models&#34;&gt;Generating Models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#swift-cli&#34;&gt;Swift CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#contributing--roadmap&#34;&gt;Contributing &amp;amp; Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;WhisperKit can be integrated into your Swift project using the Swift Package Manager.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 14.0 or later.&lt;/li&gt; &#xA; &lt;li&gt;Xcode 15.0 or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Swift project in Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;File&lt;/code&gt; &amp;gt; &lt;code&gt;Add Package Dependencies...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enter the package repository URL: &lt;code&gt;https://github.com/argmaxinc/whisperkit&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Choose the version range or specific version.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Finish&lt;/code&gt; to add WhisperKit to your project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;WhisperKit&lt;/code&gt; command line app using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install whisperkit-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with WhisperKit, you need to initialize it in your project.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Example&lt;/h3&gt; &#xA;&lt;p&gt;This example demonstrates how to transcribe a local audio file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import WhisperKit&#xA;&#xA;// Initialize WhisperKit with default settings&#xA;Task {&#xA;   let pipe = try? await WhisperKit()&#xA;   let transcription = try? await pipe!.transcribe(audioPath: &#34;path/to/your/audio.{wav,mp3,m4a,flac}&#34;)?.text&#xA;    print(transcription)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Model Selection&lt;/h3&gt; &#xA;&lt;p&gt;WhisperKit automatically downloads the recommended model for the device if not specified. You can also select a specific model by passing in the model name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let pipe = try? await WhisperKit(WhisperKitConfig(model: &#34;large-v3&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method also supports glob search, so you can use wildcards to select a model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let pipe = try? await WhisperKit(WhisperKitConfig(model: &#34;distil*large-v3&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the model search must return a single model from the source repo, otherwise an error will be thrown.&lt;/p&gt; &#xA;&lt;p&gt;For a list of available models, see our &lt;a href=&#34;https://huggingface.co/argmaxinc/whisperkit-coreml&#34;&gt;HuggingFace repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Generating Models&lt;/h3&gt; &#xA;&lt;p&gt;WhisperKit also comes with the supporting repo &lt;a href=&#34;https://github.com/argmaxinc/whisperkittools&#34;&gt;&lt;code&gt;whisperkittools&lt;/code&gt;&lt;/a&gt; which lets you create and deploy your own fine tuned versions of Whisper in CoreML format to HuggingFace. Once generated, they can be loaded by simply changing the repo name to the one used to upload the model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let config = WhisperKitConfig(model: &#34;large-v3&#34;, modelRepo: &#34;username/your-model-repo&#34;)&#xA;let pipe = try? await WhisperKit(config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift CLI&lt;/h3&gt; &#xA;&lt;p&gt;The Swift CLI allows for quick testing and debugging outside of an Xcode project. To install it, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/argmaxinc/whisperkit.git&#xA;cd whisperkit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, setup the environment and download your desired model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make setup&#xA;make download-model MODEL=large-v3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;This will download only the model specified by &lt;code&gt;MODEL&lt;/code&gt; (see what&#39;s available in our &lt;a href=&#34;https://huggingface.co/argmaxinc/whisperkit-coreml&#34;&gt;HuggingFace repo&lt;/a&gt;, where we use the prefix &lt;code&gt;openai_whisper-{MODEL}&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Before running &lt;code&gt;download-model&lt;/code&gt;, make sure &lt;a href=&#34;https://git-lfs.com&#34;&gt;git-lfs&lt;/a&gt; is installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you would like download all available models to your local folder, use this command instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make download-models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run them via the CLI with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift run whisperkit-cli transcribe --model-path &#34;Models/whisperkit-coreml/openai_whisper-large-v3&#34; --audio-path &#34;path/to/your/audio.{wav,mp3,m4a,flac}&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which should print a transcription of the audio file. If you would like to stream the audio directly from a microphone, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift run whisperkit-cli transcribe --model-path &#34;Models/whisperkit-coreml/openai_whisper-large-v3&#34; --stream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing &amp;amp; Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Our goal is to make WhisperKit better and better over time and we&#39;d love your help! Just search the code for &#34;TODO&#34; for a variety of features that are yet to be built. Please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for submitting issues, pull requests, and coding standards, where we also have a public roadmap of features we are looking forward to building in the future.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;WhisperKit is released under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/argmaxinc/WhisperKit/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you use WhisperKit for something cool or just find it useful, please drop us a note at &lt;a href=&#34;mailto:info@takeargmax.com&#34;&gt;info@takeargmax.com&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;If you use WhisperKit for academic work, here is the BibTeX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{whisperkit-argmax,&#xA;   title = {WhisperKit},&#xA;   author = {Argmax, Inc.},&#xA;   year = {2024},&#xA;   URL = {https://github.com/argmaxinc/WhisperKit}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes-sigs/controller-runtime</title>
    <updated>2024-10-16T01:32:39Z</updated>
    <id>tag:github.com,2024-10-16:/kubernetes-sigs/controller-runtime</id>
    <link href="https://github.com/kubernetes-sigs/controller-runtime" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repo for the controller-runtime subproject of kubebuilder (sig-apimachinery)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/sigs.k8s.io/controller-runtime&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/sigs.k8s.io/controller-runtime&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/sigs.k8s.io/controller-runtime&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/sigs.k8s.io/controller-runtime&#34; alt=&#34;godoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kubernetes controller-runtime Project&lt;/h1&gt; &#xA;&lt;p&gt;The Kubernetes controller-runtime Project is a set of go libraries for building Controllers. It is leveraged by &lt;a href=&#34;https://book.kubebuilder.io/&#34;&gt;Kubebuilder&lt;/a&gt; and &lt;a href=&#34;https://github.com/operator-framework/operator-sdk&#34;&gt;Operator SDK&lt;/a&gt;. Both are a great place to start for new projects. See &lt;a href=&#34;https://book.kubebuilder.io/quick-start.html&#34;&gt;Kubebuilder&#39;s Quick Start&lt;/a&gt; to see how it can be used.&lt;/p&gt; &#xA;&lt;p&gt;Documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg&#34;&gt;Package overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/builder#example-Builder&#34;&gt;Basic controller using builder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/manager#example-New&#34;&gt;Creating a manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/controller#example-New&#34;&gt;Creating a controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/controller-runtime/raw/main/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/controller-runtime/raw/main/designs&#34;&gt;Designs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Versioning, Maintenance, and Compatibility&lt;/h1&gt; &#xA;&lt;p&gt;The full documentation can be found at &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/VERSIONING.md&#34;&gt;VERSIONING.md&lt;/a&gt;, but TL;DR:&lt;/p&gt; &#xA;&lt;p&gt;Users:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We follow &lt;a href=&#34;https://semver.org&#34;&gt;Semantic Versioning (semver)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use releases with your dependency management to ensure that you get compatible code&lt;/li&gt; &#xA; &lt;li&gt;The main branch contains all the latest code, some of which may break compatibility (so &#34;normal&#34; &lt;code&gt;go get&lt;/code&gt; is not recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All code PR must be labeled with &lt;span&gt;🐛&lt;/span&gt; (patch fixes), &lt;span&gt;✨&lt;/span&gt; (backwards-compatible features), or &lt;span&gt;⚠&lt;/span&gt; (breaking changes)&lt;/li&gt; &#xA; &lt;li&gt;Breaking changes will find their way into the next major release, other changes will go into an semi-immediate patch or minor release&lt;/li&gt; &#xA; &lt;li&gt;For a quick PR template suggesting the right information, use one of these PR templates: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/.github/PULL_REQUEST_TEMPLATE/breaking_change.md&#34;&gt;Breaking Changes/Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/.github/PULL_REQUEST_TEMPLATE/compat_feature.md&#34;&gt;Backwards-Compatible Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/.github/PULL_REQUEST_TEMPLATE/bug_fix.md&#34;&gt;Bug fixes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/.github/PULL_REQUEST_TEMPLATE/docs.md&#34;&gt;Documentation Changes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/.github/PULL_REQUEST_TEMPLATE/other.md&#34;&gt;Test/Build/Other Changes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Every minor version of controller-runtime has been tested with a specific minor version of client-go. A controller-runtime minor version &lt;em&gt;may&lt;/em&gt; be compatible with other client-go minor versions, but this is by chance and neither supported nor tested. In general, we create one minor version of controller-runtime for each minor version of client-go and other k8s.io/* dependencies.&lt;/p&gt; &#xA;&lt;p&gt;The minimum Go version of controller-runtime is the highest minimum Go version of our Go dependencies. Usually, this will be identical to the minimum Go version of the corresponding k8s.io/* dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Compatible k8s.io/*, client-go and minimum Go versions can be looked up in our &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/go.mod&#34;&gt;go.mod&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;k8s.io/*, client-go&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;minimum Go version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.32&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.23&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.31&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.21&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR v0.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;v0.27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to engage with the Kubernetes community on the &lt;a href=&#34;http://kubernetes.io/community/&#34;&gt;community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;controller-runtime is a subproject of the &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;kubebuilder&lt;/a&gt; project in sig apimachinery.&lt;/p&gt; &#xA;&lt;p&gt;You can reach the maintainers of this project at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack channel: &lt;a href=&#34;https://kubernetes.slack.com/archives/C02MRBMN00Z&#34;&gt;#controller-runtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Group: &lt;a href=&#34;https://groups.google.com/forum/#!forum/kubebuilder&#34;&gt;kubebuilder@googlegroups.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are greatly appreciated. The maintainers actively manage the issues list, and try to highlight issues suitable for newcomers. The project follows the typical GitHub pull request model. See &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details. Before starting any work, please either comment on an existing issue, or file a new one.&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/main/code-of-conduct.md&#34;&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>