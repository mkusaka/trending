<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-05T01:28:41Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>folke/snacks.nvim</title>
    <updated>2025-02-05T01:28:41Z</updated>
    <id>tag:github.com,2025-02-05:/folke/snacks.nvim</id>
    <link href="https://github.com/folke/snacks.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üçø A collection of QoL plugins for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üçø &lt;code&gt;snacks.nvim&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A collection of small QoL plugins for Neovim.&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;!-- toc:start --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Snack&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Setup&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/animate.md&#34;&gt;animate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Efficient animations including over 45 easing functions &lt;em&gt;(library)&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/bigfile.md&#34;&gt;bigfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deal with big files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/bufdelete.md&#34;&gt;bufdelete&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Delete buffers without disrupting window layout&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/dashboard.md&#34;&gt;dashboard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Beautiful declarative dashboards&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/debug.md&#34;&gt;debug&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty inspect &amp;amp; backtraces for debugging&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/dim.md&#34;&gt;dim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus on the active scope by dimming the rest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/explorer.md&#34;&gt;explorer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A file explorer (picker in disguise)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/git.md&#34;&gt;git&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git utilities&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/gitbrowse.md&#34;&gt;gitbrowse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open the current file, branch, commit, or repo in a browser (e.g. GitHub, GitLab, Bitbucket)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/indent.md&#34;&gt;indent&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indent guides and scopes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/input.md&#34;&gt;input&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Better &lt;code&gt;vim.ui.input&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/layout.md&#34;&gt;layout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Window layouts&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/lazygit.md&#34;&gt;lazygit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open LazyGit in a float, auto-configure colorscheme and integration with Neovim&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/notifier.md&#34;&gt;notifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty &lt;code&gt;vim.notify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/notify.md&#34;&gt;notify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utility functions to work with Neovim&#39;s &lt;code&gt;vim.notify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/picker.md&#34;&gt;picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Picker for selecting items&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/profiler.md&#34;&gt;profiler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Neovim lua profiler&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/quickfile.md&#34;&gt;quickfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When doing &lt;code&gt;nvim somefile.txt&lt;/code&gt;, it will render the file as quickly as possible, before loading your plugins.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/rename.md&#34;&gt;rename&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LSP-integrated file renaming with support for plugins like &lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/echasnovski/mini.files&#34;&gt;mini.files&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scope.md&#34;&gt;scope&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scope detection, text objects and jumping based on treesitter or indent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scratch.md&#34;&gt;scratch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scratch buffers with a persistent file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scroll.md&#34;&gt;scroll&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smooth scrolling&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/statuscolumn.md&#34;&gt;statuscolumn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty status column&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/terminal.md&#34;&gt;terminal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and toggle floating/split terminals&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/toggle.md&#34;&gt;toggle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle keymaps integrated with which-key icons / colors&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/util.md&#34;&gt;util&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utility functions for Snacks &lt;em&gt;(library)&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/win.md&#34;&gt;win&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and manage floating windows or splits&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/words.md&#34;&gt;words&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Auto-show LSP references and quickly navigate between them&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/zen.md&#34;&gt;zen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Zen mode ‚Ä¢ distraction-free coding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- toc:end --&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Neovim&lt;/strong&gt; &amp;gt;= 0.9.4&lt;/li&gt; &#xA; &lt;li&gt;for proper icons support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.icons&#34;&gt;mini.icons&lt;/a&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;Nerd Font&lt;/a&gt; &lt;strong&gt;&lt;em&gt;(optional)&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!important] A couple of plugins &lt;strong&gt;require&lt;/strong&gt; &lt;code&gt;snacks.nvim&lt;/code&gt; to be set-up early. Setup creates some autocmds and does not load any plugins. Check the &lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/lua/snacks/init.lua&#34;&gt;code&lt;/a&gt; to see what it does.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!caution] You need to explicitly pass options for a plugin or set &lt;code&gt;enabled = true&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!tip] It&#39;s a good idea to run &lt;code&gt;:checkhealth snacks&lt;/code&gt; to see if everything is set up correctly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;folke/snacks.nvim&#34;,&#xA;  priority = 1000,&#xA;  lazy = false,&#xA;  ---@type snacks.Config&#xA;  opts = {&#xA;    -- your configuration comes here&#xA;    -- or leave it empty to use the default settings&#xA;    -- refer to the configuration section below&#xA;    bigfile = { enabled = true },&#xA;    dashboard = { enabled = true },&#xA;    indent = { enabled = true },&#xA;    input = { enabled = true },&#xA;    picker = { enabled = true },&#xA;    notifier = { enabled = true },&#xA;    quickfile = { enabled = true },&#xA;    scroll = { enabled = true },&#xA;    statuscolumn = { enabled = true },&#xA;    words = { enabled = true },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For an in-depth setup of &lt;code&gt;snacks.nvim&lt;/code&gt; with &lt;code&gt;lazy.nvim&lt;/code&gt;, check the &lt;a href=&#34;https://github.com/folke/snacks.nvim?tab=readme-ov-file#-usage&#34;&gt;example&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the readme of each plugin for their specific configuration.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Default Options&lt;/summary&gt; &#xA; &lt;!-- config:start --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@class snacks.Config&#xA;---@field animate? snacks.animate.Config&#xA;---@field bigfile? snacks.bigfile.Config&#xA;---@field dashboard? snacks.dashboard.Config&#xA;---@field dim? snacks.dim.Config&#xA;---@field explorer? snacks.explorer.Config&#xA;---@field gitbrowse? snacks.gitbrowse.Config&#xA;---@field indent? snacks.indent.Config&#xA;---@field input? snacks.input.Config&#xA;---@field layout? snacks.layout.Config&#xA;---@field lazygit? snacks.lazygit.Config&#xA;---@field notifier? snacks.notifier.Config&#xA;---@field picker? snacks.picker.Config&#xA;---@field profiler? snacks.profiler.Config&#xA;---@field quickfile? snacks.quickfile.Config&#xA;---@field scope? snacks.scope.Config&#xA;---@field scratch? snacks.scratch.Config&#xA;---@field scroll? snacks.scroll.Config&#xA;---@field statuscolumn? snacks.statuscolumn.Config&#xA;---@field terminal? snacks.terminal.Config&#xA;---@field toggle? snacks.toggle.Config&#xA;---@field win? snacks.win.Config&#xA;---@field words? snacks.words.Config&#xA;---@field zen? snacks.zen.Config&#xA;---@field styles? table&amp;lt;string, snacks.win.Config&amp;gt;&#xA;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;!-- config:end --&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Some plugins have examples in their documentation. You can include them in your config like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  dashboard = { example = &#34;github&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to customize options for a plugin after they have been resolved, you can use the &lt;code&gt;config&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  gitbrowse = {&#xA;    config = function(opts, defaults)&#xA;      table.insert(opts.remote_patterns, { &#34;my&#34;, &#34;custom pattern&#34; })&#xA;    end&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the example below for how to configure &lt;code&gt;snacks.nvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- example:start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;folke/snacks.nvim&#34;,&#xA;  priority = 1000,&#xA;  lazy = false,&#xA;  ---@type snacks.Config&#xA;  opts = {&#xA;    bigfile = { enabled = true },&#xA;    dashboard = { enabled = true },&#xA;    indent = { enabled = true },&#xA;    input = { enabled = true },&#xA;    notifier = {&#xA;      enabled = true,&#xA;      timeout = 3000,&#xA;    },&#xA;    picker = { enabled = true },&#xA;    quickfile = { enabled = true },&#xA;    scroll = { enabled = true },&#xA;    statuscolumn = { enabled = true },&#xA;    words = { enabled = true },&#xA;    styles = {&#xA;      notification = {&#xA;        -- wo = { wrap = true } -- Wrap notifications&#xA;      }&#xA;    }&#xA;  },&#xA;  keys = {&#xA;    { &#34;&amp;lt;leader&amp;gt;z&#34;,  function() Snacks.zen() end, desc = &#34;Toggle Zen Mode&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;Z&#34;,  function() Snacks.zen.zoom() end, desc = &#34;Toggle Zoom&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;.&#34;,  function() Snacks.scratch() end, desc = &#34;Toggle Scratch Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;S&#34;,  function() Snacks.scratch.select() end, desc = &#34;Select Scratch Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;n&#34;,  function() Snacks.notifier.show_history() end, desc = &#34;Notification History&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;bd&#34;, function() Snacks.bufdelete() end, desc = &#34;Delete Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;cR&#34;, function() Snacks.rename.rename_file() end, desc = &#34;Rename File&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gB&#34;, function() Snacks.gitbrowse() end, desc = &#34;Git Browse&#34;, mode = { &#34;n&#34;, &#34;v&#34; } },&#xA;    { &#34;&amp;lt;leader&amp;gt;gb&#34;, function() Snacks.git.blame_line() end, desc = &#34;Git Blame Line&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gf&#34;, function() Snacks.lazygit.log_file() end, desc = &#34;Lazygit Current File History&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gg&#34;, function() Snacks.lazygit() end, desc = &#34;Lazygit&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gl&#34;, function() Snacks.lazygit.log() end, desc = &#34;Lazygit Log (cwd)&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;un&#34;, function() Snacks.notifier.hide() end, desc = &#34;Dismiss All Notifications&#34; },&#xA;    { &#34;&amp;lt;c-/&amp;gt;&#34;,      function() Snacks.terminal() end, desc = &#34;Toggle Terminal&#34; },&#xA;    { &#34;&amp;lt;c-_&amp;gt;&#34;,      function() Snacks.terminal() end, desc = &#34;which_key_ignore&#34; },&#xA;    { &#34;]]&#34;,         function() Snacks.words.jump(vim.v.count1) end, desc = &#34;Next Reference&#34;, mode = { &#34;n&#34;, &#34;t&#34; } },&#xA;    { &#34;[[&#34;,         function() Snacks.words.jump(-vim.v.count1) end, desc = &#34;Prev Reference&#34;, mode = { &#34;n&#34;, &#34;t&#34; } },&#xA;    {&#xA;      &#34;&amp;lt;leader&amp;gt;N&#34;,&#xA;      desc = &#34;Neovim News&#34;,&#xA;      function()&#xA;        Snacks.win({&#xA;          file = vim.api.nvim_get_runtime_file(&#34;doc/news.txt&#34;, false)[1],&#xA;          width = 0.6,&#xA;          height = 0.6,&#xA;          wo = {&#xA;            spell = false,&#xA;            wrap = false,&#xA;            signcolumn = &#34;yes&#34;,&#xA;            statuscolumn = &#34; &#34;,&#xA;            conceallevel = 3,&#xA;          },&#xA;        })&#xA;      end,&#xA;    }&#xA;  },&#xA;  init = function()&#xA;    vim.api.nvim_create_autocmd(&#34;User&#34;, {&#xA;      pattern = &#34;VeryLazy&#34;,&#xA;      callback = function()&#xA;        -- Setup some globals for debugging (lazy-loaded)&#xA;        _G.dd = function(...)&#xA;          Snacks.debug.inspect(...)&#xA;        end&#xA;        _G.bt = function()&#xA;          Snacks.debug.backtrace()&#xA;        end&#xA;        vim.print = _G.dd -- Override print to use snacks for `:=` command&#xA;&#xA;        -- Create some toggle mappings&#xA;        Snacks.toggle.option(&#34;spell&#34;, { name = &#34;Spelling&#34; }):map(&#34;&amp;lt;leader&amp;gt;us&#34;)&#xA;        Snacks.toggle.option(&#34;wrap&#34;, { name = &#34;Wrap&#34; }):map(&#34;&amp;lt;leader&amp;gt;uw&#34;)&#xA;        Snacks.toggle.option(&#34;relativenumber&#34;, { name = &#34;Relative Number&#34; }):map(&#34;&amp;lt;leader&amp;gt;uL&#34;)&#xA;        Snacks.toggle.diagnostics():map(&#34;&amp;lt;leader&amp;gt;ud&#34;)&#xA;        Snacks.toggle.line_number():map(&#34;&amp;lt;leader&amp;gt;ul&#34;)&#xA;        Snacks.toggle.option(&#34;conceallevel&#34;, { off = 0, on = vim.o.conceallevel &amp;gt; 0 and vim.o.conceallevel or 2 }):map(&#34;&amp;lt;leader&amp;gt;uc&#34;)&#xA;        Snacks.toggle.treesitter():map(&#34;&amp;lt;leader&amp;gt;uT&#34;)&#xA;        Snacks.toggle.option(&#34;background&#34;, { off = &#34;light&#34;, on = &#34;dark&#34;, name = &#34;Dark Background&#34; }):map(&#34;&amp;lt;leader&amp;gt;ub&#34;)&#xA;        Snacks.toggle.inlay_hints():map(&#34;&amp;lt;leader&amp;gt;uh&#34;)&#xA;        Snacks.toggle.indent():map(&#34;&amp;lt;leader&amp;gt;ug&#34;)&#xA;        Snacks.toggle.dim():map(&#34;&amp;lt;leader&amp;gt;uD&#34;)&#xA;      end,&#xA;    })&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- example:end --&gt; &#xA;&lt;h2&gt;üåà Highlight Groups&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to see all highlight groups&lt;/summary&gt; &#xA; &lt;!-- hl_start --&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;    &lt;th&gt;Default Group&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNormal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NormalFloat&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for the float window&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksWinBar&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title of the window&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksBackdrop&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Backdrop&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNormalNC&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NormalFloat&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for non-current windows&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksWinBarNC&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;SnacksWinBar&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for non-current windows&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksScratchKey&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticVirtualText&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keymap help in the footer&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksScratchDesc&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticInfo&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keymap help desc in the footer&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Info&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Warn&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Debug&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Error&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Trace&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticInfo&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticWarn&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticHint&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticError&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticHint&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardNormal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Normal&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for the dashboard&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardDesc&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Description text in dashboard&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardFile&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard file items&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardDir&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NonText&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Directory items&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardFooter&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard footer text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardHeader&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard header text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardIcon&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard icons&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardKey&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Number&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keybind text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardTerminal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;SnacksDashboardNormal&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Terminal text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardSpecial&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Special elements&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardTitle&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;!-- hl_end --&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>Soulter/AstrBot</title>
    <updated>2025-02-05T01:28:41Z</updated>
    <id>tag:github.com,2025-02-05:/Soulter/AstrBot</id>
    <link href="https://github.com/Soulter/AstrBot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ú®Êòì‰∏äÊâãÁöÑÂ§öÂπ≥Âè∞ LLM ËÅäÂ§©Êú∫Âô®‰∫∫ÂèäÂºÄÂèëÊ°ÜÊû∂‚ú®„ÄÇÊîØÊåÅ QQ„ÄÅQQÈ¢ëÈÅì„ÄÅTelegram„ÄÅÂæÆ‰ø°Âπ≥Âè∞(Gewechat, ‰ºÅ‰∏öÂæÆ‰ø°)„ÄÅÂÜÖÁΩÆ Web ChatÔºåOpenAI GPT„ÄÅDeepSeek„ÄÅOllama„ÄÅLlama„ÄÅGLM„ÄÅGemini„ÄÅOneAPI„ÄÅLLMTunerÔºåÊîØÊåÅ LLM Agent Êèí‰ª∂ÂºÄÂèëÔºåÂèØËßÜÂåñÈù¢Êùø„ÄÇ‰∏ÄÈîÆÈÉ®ÁΩ≤„ÄÇÊîØÊåÅ Dify Â∑•‰ΩúÊµÅ„ÄÅ‰ª£Á†ÅÊâßË°åÂô®„ÄÅWhisper ËØ≠Èü≥ËΩ¨ÊñáÂ≠ó„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/07649e07-3b8e-4feb-9aa9-bf13af4f3476&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® Êòì‰∏äÊâãÁöÑÂ§öÂπ≥Âè∞ LLM ËÅäÂ§©Êú∫Âô®‰∫∫ÂèäÂºÄÂèëÊ°ÜÊû∂ ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/12875&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/12875&#34; alt=&#34;Soulter%2FAstrBot | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Soulter/AstrBot/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Soulter/AstrBot&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3.10+-blue.svg?sanitize=true&#34; alt=&#34;python&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/soulter/astrbot&#34;&gt;&lt;img alt=&#34;Docker pull&#34; src=&#34;https://img.shields.io/docker/pulls/soulter/astrbot.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/QQ%E7%BE%A4-322154837-purple&#34;&gt; &lt;a href=&#34;https://wakatime.com/badge/user/915e5316-99c6-4563-a483-ef186cf000c9/project/018e705a-a1a7-409a-a849-3013485e6c8e&#34;&gt;&lt;img src=&#34;https://wakatime.com/badge/user/915e5316-99c6-4563-a483-ef186cf000c9/project/018e705a-a1a7-409a-a849-3013485e6c8e.svg?sanitize=true&#34; alt=&#34;wakatime&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.soulter.top%2Fastrbot%2Fstats&amp;amp;query=v&amp;amp;label=7%E6%97%A5%E6%B6%88%E6%81%AF%E4%B8%8A%E8%A1%8C%E9%87%8F&amp;amp;cacheSeconds=3600&#34; alt=&#34;Dynamic JSON Badge&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/Soulter/AstrBot&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Soulter/AstrBot/graph/badge.svg?token=FF3P5967B8&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://astrbot.app/&#34;&gt;Êü•ÁúãÊñáÊ°£&lt;/a&gt; ÔΩú &lt;a href=&#34;https://github.com/Soulter/AstrBot/issues&#34;&gt;ÈóÆÈ¢òÊèê‰∫§&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;AstrBot ÊòØ‰∏Ä‰∏™ÊùæËÄ¶Âêà„ÄÅÂºÇÊ≠•„ÄÅÊîØÊåÅÂ§öÊ∂àÊÅØÂπ≥Âè∞ÈÉ®ÁΩ≤„ÄÅÂÖ∑ÊúâÊòìÁî®ÁöÑÊèí‰ª∂Á≥ªÁªüÂíåÂÆåÂñÑÁöÑÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàLLMÔºâÊé•ÂÖ•ÂäüËÉΩÁöÑËÅäÂ§©Êú∫Âô®‰∫∫ÂèäÂºÄÂèëÊ°ÜÊû∂„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® ‰∏ªË¶ÅÂäüËÉΩ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Â§ßËØ≠Ë®ÄÊ®°ÂûãÂØπËØù&lt;/strong&gt;„ÄÇÊîØÊåÅÂêÑÁßçÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºåÂåÖÊã¨ OpenAI API„ÄÅGoogle Gemini„ÄÅLlama„ÄÅDeepseek„ÄÅChatGLM Á≠âÔºåÊîØÊåÅÊé•ÂÖ•Êú¨Âú∞ÈÉ®ÁΩ≤ÁöÑÂ§ßÊ®°ÂûãÔºåÈÄöËøá Ollama„ÄÅLLMTuner„ÄÇÂÖ∑ÊúâÂ§öËΩÆÂØπËØù„ÄÅ‰∫∫Ê†ºÊÉÖÂ¢É„ÄÅÂ§öÊ®°ÊÄÅËÉΩÂäõÔºåÊîØÊåÅÂõæÁâáÁêÜËß£„ÄÅËØ≠Èü≥ËΩ¨ÊñáÂ≠óÔºàWhisperÔºâ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Â§öÊ∂àÊÅØÂπ≥Âè∞Êé•ÂÖ•&lt;/strong&gt;„ÄÇÊîØÊåÅÊé•ÂÖ• QQÔºàOneBotÔºâ„ÄÅQQ È¢ëÈÅì„ÄÅÂæÆ‰ø°ÔºàGewechat„ÄÅVChatÔºâ„ÄÅTelegram„ÄÇÂêéÁª≠Â∞ÜÊîØÊåÅÈíâÈíâ„ÄÅÈ£û‰π¶„ÄÅDiscord„ÄÅWhatsApp„ÄÅÂ∞èÁà±Èü≥Âìç„ÄÇÊîØÊåÅÈÄüÁéáÈôêÂà∂„ÄÅÁôΩÂêçÂçï„ÄÅÂÖ≥ÈîÆËØçËøáÊª§„ÄÅÁôæÂ∫¶ÂÜÖÂÆπÂÆ°Ê†∏„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;„ÄÇÂéüÁîüÊîØÊåÅÈÉ®ÂàÜ Agent ËÉΩÂäõÔºåÂ¶Ç‰ª£Á†ÅÊâßË°åÂô®„ÄÅËá™ÁÑ∂ËØ≠Ë®ÄÂæÖÂäû„ÄÅÁΩëÈ°µÊêúÁ¥¢„ÄÇÂØπÊé• &lt;a href=&#34;https://astrbot.app/others/dify.html&#34;&gt;Dify Âπ≥Âè∞&lt;/a&gt;Ôºå‰æøÊç∑Êé•ÂÖ• Dify Êô∫ËÉΩÂä©Êâã„ÄÅÁü•ËØÜÂ∫ìÂíå Dify Â∑•‰ΩúÊµÅ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Êèí‰ª∂Êâ©Â±ï&lt;/strong&gt;„ÄÇÊ∑±Â∫¶‰ºòÂåñÁöÑÊèí‰ª∂Êú∫Âà∂ÔºåÊîØÊåÅ&lt;a href=&#34;https://astrbot.app/dev/plugin.html&#34;&gt;ÂºÄÂèëÊèí‰ª∂&lt;/a&gt;Êâ©Â±ïÂäüËÉΩÔºåÊûÅÁÆÄÂºÄÂèë„ÄÇÂ∑≤ÊîØÊåÅÂÆâË£ÖÂ§ö‰∏™Êèí‰ª∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂèØËßÜÂåñÁÆ°ÁêÜÈù¢Êùø&lt;/strong&gt;„ÄÇÊîØÊåÅÂèØËßÜÂåñ‰øÆÊîπÈÖçÁΩÆ„ÄÅÊèí‰ª∂ÁÆ°ÁêÜ„ÄÅÊó•ÂøóÊü•ÁúãÁ≠âÂäüËÉΩÔºåÈôç‰ΩéÈÖçÁΩÆÈöæÂ∫¶„ÄÇÈõÜÊàê WebChatÔºåÂèØÂú®Èù¢Êùø‰∏ä‰∏éÂ§ßÊ®°ÂûãÂØπËØù„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;È´òÁ®≥ÂÆöÊÄß„ÄÅÈ´òÊ®°ÂùóÂåñ&lt;/strong&gt;„ÄÇÂü∫‰∫é‰∫ã‰ª∂ÊÄªÁ∫øÂíåÊµÅÊ∞¥Á∫øÁöÑÊû∂ÊûÑËÆæËÆ°ÔºåÈ´òÂ∫¶Ê®°ÂùóÂåñÔºå‰ΩéËÄ¶Âêà„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] ÁÆ°ÁêÜÈù¢ÊùøÂú®Á∫ø‰ΩìÈ™å Demo: &lt;a href=&#34;https://demo.astrbot.app/&#34;&gt;https://demo.astrbot.app/&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Áî®Êà∑Âêç: &lt;code&gt;astrbot&lt;/code&gt;, ÂØÜÁ†Å: &lt;code&gt;astrbot&lt;/code&gt;„ÄÇÊú™ÈÖçÁΩÆ LLMÔºåÊó†Ê≥ïÂú®ËÅäÂ§©È°µ‰ΩøÁî®Â§ßÊ®°Âûã„ÄÇÔºà‰∏çË¶ÅÂÜç‰øÆÊîπ demo ÁöÑÁôªÂΩïÂØÜÁ†Å‰∫Ü üò≠Ôºâ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ú® ‰ΩøÁî®ÊñπÂºè&lt;/h2&gt; &#xA;&lt;h4&gt;Docker ÈÉ®ÁΩ≤&lt;/h4&gt; &#xA;&lt;p&gt;ËØ∑ÂèÇÈòÖÂÆòÊñπÊñáÊ°£ &lt;a href=&#34;https://astrbot.app/deploy/astrbot/docker.html#%E4%BD%BF%E7%94%A8-docker-%E9%83%A8%E7%BD%B2-astrbot&#34;&gt;‰ΩøÁî® Docker ÈÉ®ÁΩ≤ AstrBot&lt;/a&gt; „ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;Windows ‰∏ÄÈîÆÂÆâË£ÖÂô®ÈÉ®ÁΩ≤&lt;/h4&gt; &#xA;&lt;p&gt;ÈúÄË¶ÅÁîµËÑë‰∏äÂÆâË£ÖÊúâ PythonÔºà&amp;gt;3.10Ôºâ„ÄÇËØ∑ÂèÇÈòÖÂÆòÊñπÊñáÊ°£ &lt;a href=&#34;https://astrbot.app/deploy/astrbot/windows.html&#34;&gt;‰ΩøÁî® Windows ‰∏ÄÈîÆÂÆâË£ÖÂô®ÈÉ®ÁΩ≤ AstrBot&lt;/a&gt; „ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;Replit ÈÉ®ÁΩ≤&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repl.it/github/Soulter/AstrBot&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/Soulter/AstrBot&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;CasaOS ÈÉ®ÁΩ≤&lt;/h4&gt; &#xA;&lt;p&gt;Á§æÂå∫Ë¥°ÁåÆÁöÑÈÉ®ÁΩ≤ÊñπÂºè„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËØ∑ÂèÇÈòÖÂÆòÊñπÊñáÊ°£ &lt;a href=&#34;https://astrbot.app/deploy/astrbot/casaos.html&#34;&gt;ÈÄöËøáÊ∫êÁ†ÅÈÉ®ÁΩ≤ AstrBot&lt;/a&gt; „ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;ÊâãÂä®ÈÉ®ÁΩ≤&lt;/h4&gt; &#xA;&lt;p&gt;ËØ∑ÂèÇÈòÖÂÆòÊñπÊñáÊ°£ &lt;a href=&#34;https://astrbot.app/deploy/astrbot/cli.html&#34;&gt;ÈÄöËøáÊ∫êÁ†ÅÈÉ®ÁΩ≤ AstrBot&lt;/a&gt; „ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‚ö° Ê∂àÊÅØÂπ≥Âè∞ÊîØÊåÅÊÉÖÂÜµ&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Âπ≥Âè∞&lt;/th&gt; &#xA;   &lt;th&gt;ÊîØÊåÅÊÄß&lt;/th&gt; &#xA;   &lt;th&gt;ËØ¶ÊÉÖ&lt;/th&gt; &#xA;   &lt;th&gt;Ê∂àÊÅØÁ±ªÂûã&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QQ(ÂÆòÊñπÊú∫Âô®‰∫∫Êé•Âè£)&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;ÁßÅËÅä„ÄÅÁæ§ËÅäÔºåQQ È¢ëÈÅìÁßÅËÅä„ÄÅÁæ§ËÅä&lt;/td&gt; &#xA;   &lt;td&gt;ÊñáÂ≠ó„ÄÅÂõæÁâá&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QQ(OneBot)&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;ÁßÅËÅä„ÄÅÁæ§ËÅä&lt;/td&gt; &#xA;   &lt;td&gt;ÊñáÂ≠ó„ÄÅÂõæÁâá„ÄÅËØ≠Èü≥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂæÆ‰ø°(‰∏™‰∫∫Âè∑)&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;ÂæÆ‰ø°‰∏™‰∫∫Âè∑ÁßÅËÅä„ÄÅÁæ§ËÅä&lt;/td&gt; &#xA;   &lt;td&gt;ÊñáÂ≠ó„ÄÅÂõæÁâá„ÄÅËØ≠Èü≥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Soulter/astrbot_plugin_telegram&#34;&gt;Telegram&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;ÁßÅËÅä„ÄÅÁæ§ËÅä&lt;/td&gt; &#xA;   &lt;td&gt;ÊñáÂ≠ó„ÄÅÂõæÁâá&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Soulter/astrbot_plugin_wecom&#34;&gt;ÂæÆ‰ø°(‰ºÅ‰∏öÂæÆ‰ø°)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;ÁßÅËÅä&lt;/td&gt; &#xA;   &lt;td&gt;ÊñáÂ≠ó„ÄÅÂõæÁâá„ÄÅËØ≠Èü≥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂæÆ‰ø°ÂØπËØùÂºÄÊîæÂπ≥Âè∞&lt;/td&gt; &#xA;   &lt;td&gt;üöß&lt;/td&gt; &#xA;   &lt;td&gt;ËÆ°ÂàíÂÜÖ&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;È£û‰π¶&lt;/td&gt; &#xA;   &lt;td&gt;üöß&lt;/td&gt; &#xA;   &lt;td&gt;ËÆ°ÂàíÂÜÖ&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Discord&lt;/td&gt; &#xA;   &lt;td&gt;üöß&lt;/td&gt; &#xA;   &lt;td&gt;ËÆ°ÂàíÂÜÖ&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WhatsApp&lt;/td&gt; &#xA;   &lt;td&gt;üöß&lt;/td&gt; &#xA;   &lt;td&gt;ËÆ°ÂàíÂÜÖ&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Â∞èÁà±Èü≥Âìç&lt;/td&gt; &#xA;   &lt;td&gt;üöß&lt;/td&gt; &#xA;   &lt;td&gt;ËÆ°ÂàíÂÜÖ&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;ü¶å Êé•‰∏ãÊù•ÁöÑË∑ØÁ∫øÂõæ&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Ê¨¢ËøéÂú® Issue ÊèêÂá∫Êõ¥Â§öÂª∫ËÆÆ &amp;lt;3&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ÂÆåÂñÑÂπ∂‰øùËØÅÁõÆÂâçÊâÄÊúâÂπ≥Âè∞ÈÄÇÈÖçÂô®ÁöÑÂäüËÉΩ‰∏ÄËá¥ÊÄß&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ‰ºòÂåñÊèí‰ª∂Êé•Âè£&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ÈªòËÆ§ÊîØÊåÅÊõ¥Â§ö TTS ÊúçÂä°ÔºåÂ¶Ç GPT-Sovits&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ÂÆåÂñÑ‚ÄúËÅäÂ§©Â¢ûÂº∫‚ÄùÈÉ®ÂàÜÔºåÊîØÊåÅÊåÅ‰πÖÂåñËÆ∞ÂøÜ&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ËßÑÂàí i18n&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Ë¥°ÁåÆ&lt;/h2&gt; &#xA;&lt;p&gt;Ê¨¢Ëøé‰ªª‰Ωï Issues/Pull RequestsÔºÅÂè™ÈúÄË¶ÅÂ∞Ü‰Ω†ÁöÑÊõ¥ÊîπÊèê‰∫§Âà∞Ê≠§È°πÁõÆ Ôºö)&lt;/p&gt; &#xA;&lt;p&gt;ÂØπ‰∫éÊñ∞ÂäüËÉΩÁöÑÊ∑ªÂä†ÔºåËØ∑ÂÖàÈÄöËøá Issue ËÆ®ËÆ∫„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;üåü ÊîØÊåÅ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Star Ëøô‰∏™È°πÁõÆÔºÅ&lt;/li&gt; &#xA; &lt;li&gt;Âú®&lt;a href=&#34;https://afdian.com/a/soulter&#34;&gt;Áà±ÂèëÁîµ&lt;/a&gt;ÊîØÊåÅÊàëÔºÅ&lt;/li&gt; &#xA; &lt;li&gt;Âú®&lt;a href=&#34;https://drive.soulter.top/f/pYfA/d903f4fa49a496fda3f16d2be9e023b5.png&#34;&gt;ÂæÆ‰ø°&lt;/a&gt;ÊîØÊåÅÊàë~&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Demo&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] ‰ª£Á†ÅÊâßË°åÂô®ÁöÑÊñá‰ª∂ËæìÂÖ•/ËæìÂá∫ÁõÆÂâç‰ªÖÊµãËØï‰∫Ü Napcat(QQ), Lagrange(QQ)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/4ee688d9-467d-45c8-99d6-368f9a8a92d8&#34; width=&#34;600&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú®Âü∫‰∫é Docker ÁöÑÊ≤ôÁÆ±Âåñ‰ª£Á†ÅÊâßË°åÂô®ÔºàBeta ÊµãËØï‰∏≠Ôºâ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/0378f407-6079-4f64-ae4c-e97ab20611d2&#34; height=&#34;500&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® Â§öÊ®°ÊÄÅ„ÄÅÁΩëÈ°µÊêúÁ¥¢„ÄÅÈïøÊñáÊú¨ËΩ¨ÂõæÁâáÔºàÂèØÈÖçÁΩÆÔºâ ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/8ec12797-e70f-460a-959e-48eca39ca2bb&#34; height=&#34;100&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® Ëá™ÁÑ∂ËØ≠Ë®ÄÂæÖÂäû‰∫ãÈ°π ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/e137a9e1-340a-4bf2-bb2b-771132780735&#34; height=&#34;150&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/480f5e82-cf6a-4955-a869-0d73137aa6e1&#34; height=&#34;150&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® Êèí‰ª∂Á≥ªÁªü‚Äî‚ÄîÈÉ®ÂàÜÊèí‰ª∂Â±ïÁ§∫ ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/592a8630-14c7-4e06-b496-9c0386e4f36c&#34; width=&#34;600&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® ÁÆ°ÁêÜÈù¢Êùø ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://drive.soulter.top/f/vlsA/ezgif-5-fb044b2542.gif&#34; alt=&#34;webchat&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;‚ú® ÂÜÖÁΩÆ Web ChatÔºåÂú®Á∫ø‰∏éÊú∫Âô®‰∫∫‰∫§‰∫í ‚ú®&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;‚≠ê Star History&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Â¶ÇÊûúÊú¨È°πÁõÆÂØπÊÇ®ÁöÑÁîüÊ¥ª / Â∑•‰Ωú‰∫ßÁîü‰∫ÜÂ∏ÆÂä©ÔºåÊàñËÄÖÊÇ®ÂÖ≥Ê≥®Êú¨È°πÁõÆÁöÑÊú™Êù•ÂèëÂ±ïÔºåËØ∑ÁªôÈ°πÁõÆ StarÔºåËøôÊòØÊàëÁª¥Êä§Ëøô‰∏™ÂºÄÊ∫êÈ°πÁõÆÁöÑÂä®Âäõ &amp;lt;3&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://star-history.com/#soulter/astrbot&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=soulter/astrbot&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.gitsponsors.com/api/badge/link?p=XEpbdGxlitw/RbcwiTX93UMzNK/jgDYC8NiSzamIPMoKvG2lBFmyXhSS/b0hFoWlBBMX2L5X5CxTDsUdyvcIEHTOfnkXz47UNOZvMwyt5CzbYpq0SEzsSV1OJF1cCo90qC/ZyYKYOWedal3MhZ3ikw==&#34;&gt;&lt;img src=&#34;https://api.gitsponsors.com/api/badge/img?id=575865240&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The project is protected under the &lt;code&gt;AGPL-v3&lt;/code&gt; opensource license.&lt;/li&gt; &#xA; &lt;li&gt;The deployment of WeChat (personal account) utilizes &lt;a href=&#34;https://github.com/Devo919/Gewechat&#34;&gt;Gewechat&lt;/a&gt; service. AstrBot only guarantees connectivity with Gewechat and recommends using a WeChat account that is not frequently used. In the event of account risk control, the author of this project shall not bear any responsibility.&lt;/li&gt; &#xA; &lt;li&gt;Please ensure compliance with local laws and regulations when using this project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- ## ‚ú® ATRI [Beta ÊµãËØï]&#xA;&#xA;ËØ•ÂäüËÉΩ‰Ωú‰∏∫Êèí‰ª∂ËΩΩÂÖ•„ÄÇÊèí‰ª∂‰ªìÂ∫ìÂú∞ÂùÄÔºö[astrbot_plugin_atri](https://github.com/Soulter/astrbot_plugin_atri)&#xA;&#xA;1. Âü∫‰∫é„ÄäATRI ~ My Dear Moments„Äã‰∏ªËßí ATRI ËßíËâ≤Âè∞ËØç‰Ωú‰∏∫ÂæÆË∞ÉÊï∞ÊçÆÈõÜÁöÑ `Qwen1.5-7B-Chat Lora` ÂæÆË∞ÉÊ®°Âûã„ÄÇ&#xA;2. ÈïøÊúüËÆ∞ÂøÜ&#xA;3. Ë°®ÊÉÖÂåÖÁêÜËß£‰∏éÂõûÂ§ç&#xA;4. TTS&#xA;    --&gt; &#xA;&lt;p&gt;&lt;em&gt;ÁßÅ„ÅØ„ÄÅÈ´òÊÄßËÉΩ„Åß„Åô„Åã„Çâ!&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ocrmypdf/OCRmyPDF</title>
    <updated>2025-02-05T01:28:41Z</updated>
    <id>tag:github.com,2025-02-05:/ocrmypdf/OCRmyPDF</id>
    <link href="https://github.com/ocrmypdf/OCRmyPDF" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them to be searched&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ocrmypdf/OCRmyPDF/main/docs/images/logo.svg?sanitize=true&#34; width=&#34;240&#34; alt=&#34;OCRmyPDF&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/ocrmypdf/OCRmyPDF/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/ocrmypdf/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/ocrmypdf.svg?sanitize=true&#34; alt=&#34;PyPI version&#34; title=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/homebrew/v/ocrmypdf.svg?sanitize=true&#34; alt=&#34;Homebrew version&#34; title=&#34;Homebrew version&#34;&gt; &lt;img src=&#34;https://readthedocs.org/projects/ocrmypdf/badge/?version=latest&#34; alt=&#34;ReadTheDocs&#34; title=&#34;RTD&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/ocrmypdf&#34; alt=&#34;Python versions&#34; title=&#34;Supported Python versions&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them to be searched or copy-pasted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ocrmypdf                      # it&#39;s a scriptable command line program&#xA;   -l eng+fra                 # it supports multiple languages&#xA;   --rotate-pages             # it can fix pages that are misrotated&#xA;   --deskew                   # it can deskew crooked PDFs!&#xA;   --title &#34;My PDF&#34;           # it can change output metadata&#xA;   --jobs 4                   # it uses multiple cores by default&#xA;   --output-type pdfa         # it produces PDF/A by default&#xA;   input_scanned.pdf          # takes PDF input (or images)&#xA;   output_searchable.pdf      # produces validated PDF output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/release_notes.html&#34;&gt;See the release notes for details on the latest changes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generates a searchable &lt;a href=&#34;https://en.wikipedia.org/?title=PDF/A&#34;&gt;PDF/A&lt;/a&gt; file from a regular PDF&lt;/li&gt; &#xA; &lt;li&gt;Places OCR text accurately below the image to ease copy / paste&lt;/li&gt; &#xA; &lt;li&gt;Keeps the exact resolution of the original embedded images&lt;/li&gt; &#xA; &lt;li&gt;When possible, inserts OCR information as a &#34;lossless&#34; operation without disrupting any other content&lt;/li&gt; &#xA; &lt;li&gt;Optimizes PDF images, often producing files smaller than the input file&lt;/li&gt; &#xA; &lt;li&gt;If requested, deskews and/or cleans the image before performing OCR&lt;/li&gt; &#xA; &lt;li&gt;Validates input and output files&lt;/li&gt; &#xA; &lt;li&gt;Distributes work across all available CPU cores&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://github.com/tesseract-ocr/tesseract&#34;&gt;Tesseract OCR&lt;/a&gt; engine to recognize more than &lt;a href=&#34;https://github.com/tesseract-ocr/tessdata&#34;&gt;100 languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keeps your private data private.&lt;/li&gt; &#xA; &lt;li&gt;Scales properly to handle files with thousands of pages.&lt;/li&gt; &#xA; &lt;li&gt;Battle-tested on millions of PDFs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ocrmypdf/OCRmyPDF/main/misc/screencast/demo.svg?sanitize=true&#34; alt=&#34;Demo of OCRmyPDF in a terminal session&#34;&gt; &#xA;&lt;p&gt;For details: please consult the &lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;I searched the web for a free command line tool to OCR PDF files: I found many, but none of them were really satisfying:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Either they produced PDF files with misplaced text under the image (making copy/paste impossible)&lt;/li&gt; &#xA; &lt;li&gt;Or they did not handle accents and multilingual characters&lt;/li&gt; &#xA; &lt;li&gt;Or they changed the resolution of the embedded images&lt;/li&gt; &#xA; &lt;li&gt;Or they generated ridiculously large PDF files&lt;/li&gt; &#xA; &lt;li&gt;Or they crashed when trying to OCR&lt;/li&gt; &#xA; &lt;li&gt;Or they did not produce valid PDF files&lt;/li&gt; &#xA; &lt;li&gt;On top of that none of them produced PDF/A files (format dedicated for long time storage)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...so I decided to develop my own tool.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Linux, Windows, macOS and FreeBSD are supported. Docker images are also available, for both x64 and ARM.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operating system&lt;/th&gt; &#xA;   &lt;th&gt;Install command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian, Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apt install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows Subsystem for Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apt install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fedora&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dnf install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS (Homebrew)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS (MacPorts)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;port install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS (nix)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nix-env -i ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LinuxBrew&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg install py-ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu Snap&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;snap install ocrmypdf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For everyone else, &lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/installation.html&#34;&gt;see our documentation&lt;/a&gt; for installation steps.&lt;/p&gt; &#xA;&lt;h2&gt;Languages&lt;/h2&gt; &#xA;&lt;p&gt;OCRmyPDF uses Tesseract for OCR, and relies on its language packs. For Linux users, you can often find packages that provide language packs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Display a list of all Tesseract language packs&#xA;apt-cache search tesseract-ocr&#xA;&#xA;# Debian/Ubuntu users&#xA;apt-get install tesseract-ocr-chi-sim  # Example: Install Chinese Simplified language pack&#xA;&#xA;# Arch Linux users&#xA;pacman -S tesseract-data-eng tesseract-data-deu # Example: Install the English and German language packs&#xA;&#xA;# brew macOS users&#xA;brew install tesseract-lang&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then pass the &lt;code&gt;-l LANG&lt;/code&gt; argument to OCRmyPDF to give a hint as to what languages it should search for. Multiple languages can be requested.&lt;/p&gt; &#xA;&lt;p&gt;OCRmyPDF supports Tesseract 4.1.1+. It will automatically use whichever version it finds first on the &lt;code&gt;PATH&lt;/code&gt; environment variable. On Windows, if &lt;code&gt;PATH&lt;/code&gt; does not provide a Tesseract binary, we use the highest version number that is installed according to the Windows Registry.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and support&lt;/h2&gt; &#xA;&lt;p&gt;Once OCRmyPDF is installed, the built-in help which explains the command syntax and options can be accessed via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ocrmypdf --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/index.html&#34;&gt;documentation is served on Read the Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please report issues on our &lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF/issues&#34;&gt;GitHub issues&lt;/a&gt; page, and follow the issue template for quick response.&lt;/p&gt; &#xA;&lt;h2&gt;Feature demo&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add an OCR layer and convert to PDF/A&#xA;ocrmypdf input.pdf output.pdf&#xA;&#xA;# Convert an image to single page PDF&#xA;ocrmypdf input.jpg output.pdf&#xA;&#xA;# Add OCR to a file in place (only modifies file on success)&#xA;ocrmypdf myfile.pdf myfile.pdf&#xA;&#xA;# OCR with non-English languages (look up your language&#39;s ISO 639-3 code)&#xA;ocrmypdf -l fra LeParisien.pdf LeParisien.pdf&#xA;&#xA;# OCR multilingual documents&#xA;ocrmypdf -l eng+fra Bilingual-English-French.pdf Bilingual-English-French.pdf&#xA;&#xA;# Deskew (straighten crooked pages)&#xA;ocrmypdf --deskew input.pdf output.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more features, see the &lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/index.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the required Python version, OCRmyPDF requires external program installations of Ghostscript and Tesseract OCR. OCRmyPDF is pure Python, and runs on pretty much everything: Linux, macOS, Windows and FreeBSD.&lt;/p&gt; &#xA;&lt;h2&gt;Press &amp;amp; Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ikirichenko/going-paperless-with-ocrmypdf-e2f36143f46a&#34;&gt;Going paperless with OCRmyPDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@treyharris/converting-a-scanned-document-into-a-compressed-searchable-pdf-with-redactions-63f61c34fe4c&#34;&gt;Converting a scanned document into a compressed searchable PDF with redactions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heise.de/-2279695&#34;&gt;c&#39;t 1-2014, page 59&lt;/a&gt;: Detailed presentation of OCRmyPDF v1.0 in the leading German IT magazine c&#39;t&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heise.de/-2356670&#34;&gt;heise Open Source, 09/2014: Texterkennung mit OCRmyPDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.heise.de/ratgeber/Durchsuchbare-PDF-Dokumente-mit-OCRmyPDF-erstellen-4607592.html&#34;&gt;heise Durchsuchbare PDF-Dokumente mit OCRmyPDF erstellen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linuxlinks.com/excellent-utilities-ocrmypdf-add-ocr-text-layer-scanned-pdfs/&#34;&gt;Excellent Utilities: OCRmyPDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux-community.de/ausgaben/linuxuser/2021/06/texterkennung-mit-ocrmypdf-und-scanbd-automatisieren/&#34;&gt;LinuxUser Texterkennung mit OCRmyPDF und Scanbd automatisieren&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=32028752&#34;&gt;Y Combinator discussion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Business enquiries&lt;/h2&gt; &#xA;&lt;p&gt;OCRmyPDF would not be the software that it is today without companies and users choosing to provide support for feature development and consulting enquiries. We are happy to discuss all enquiries, whether for extending the existing feature set, or integrating OCRmyPDF into a larger system.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The OCRmyPDF software is licensed under the Mozilla Public License 2.0 (MPL-2.0). This license permits integration of OCRmyPDF with other code, included commercial and closed source, but asks you to publish source-level modifications you make to OCRmyPDF.&lt;/p&gt; &#xA;&lt;p&gt;Some components of OCRmyPDF have other licenses, as indicated by standard SPDX license identifiers or the DEP5 copyright and licensing information file. Generally speaking, non-core code is licensed under MIT, and the documentation and test files are licensed under Creative Commons ShareAlike 4.0 (CC-BY-SA 4.0).&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The software is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;</summary>
  </entry>
</feed>