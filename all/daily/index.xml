<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-28T01:28:44Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emilk/egui</title>
    <updated>2023-07-28T01:28:44Z</updated>
    <id>tag:github.com,2023-07-28:/emilk/egui</id>
    <link href="https://github.com/emilk/egui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;egui: an easy-to-use immediate mode GUI in Rust that runs on both web and native&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🖌 egui: an easy-to-use GUI in pure Rust&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/emilk/egui&#34;&gt;&lt;img alt=&#34;github&#34; src=&#34;https://img.shields.io/badge/github-emilk/egui-8da0cb?logo=github&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/egui&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/egui.svg?sanitize=true&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/egui&#34;&gt;&lt;img src=&#34;https://docs.rs/egui/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rust-secure-code/safety-dance/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/unsafe-forbidden-success.svg?sanitize=true&#34; alt=&#34;unsafe forbidden&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emilk/egui/actions?workflow=CI&#34;&gt;&lt;img src=&#34;https://github.com/emilk/egui/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emilk/egui/raw/master/LICENSE-MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emilk/egui/raw/master/LICENSE-APACHE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true&#34; alt=&#34;Apache&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/JFcEma9bJq&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/900275882684477440?label=egui%20discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.egui.rs/#demo&#34;&gt;Click to run the web demo&lt;/a&gt; 👈&lt;/p&gt; &#xA;&lt;p&gt;egui (pronounced &#34;e-gooey&#34;) is a simple, fast, and highly portable immediate mode GUI library for Rust. egui runs on the web, natively, and &lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#integrations&#34;&gt;in your favorite game engine&lt;/a&gt; (or will soon).&lt;/p&gt; &#xA;&lt;p&gt;egui aims to be the easiest-to-use Rust GUI library, and the simplest way to make a web app in Rust.&lt;/p&gt; &#xA;&lt;p&gt;egui can be used anywhere you can draw textured triangles, which means you can easily integrate it into your game engine of choice.&lt;/p&gt; &#xA;&lt;p&gt;Sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#goals&#34;&gt;Goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#who-is-egui-for&#34;&gt;Who is egui for?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#state&#34;&gt;State / features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#why-immediate-mode&#34;&gt;Why immediate mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#other&#34;&gt;Other&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(&lt;a href=&#34;https://github.com/Re-Ch-Love/egui-doc-cn/raw/main/README_zh-hans.md&#34;&gt;egui 的中文翻译文档 / chinese translation&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;ui.heading(&#34;My egui Application&#34;);&#xA;ui.horizontal(|ui| {&#xA;    ui.label(&#34;Your name: &#34;);&#xA;    ui.text_edit_singleline(&amp;amp;mut name);&#xA;});&#xA;ui.add(egui::Slider::new(&amp;amp;mut age, 0..=120).text(&#34;age&#34;));&#xA;if ui.button(&#34;Click each year&#34;).clicked() {&#xA;    age += 1;&#xA;}&#xA;ui.label(format!(&#34;Hello &#39;{name}&#39;, age {age}&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/emilk/egui/master/media/demo.gif&#34;&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;There are simple examples in &lt;a href=&#34;https://github.com/emilk/egui/raw/master/examples/&#34;&gt;the &lt;code&gt;examples/&lt;/code&gt; folder&lt;/a&gt;. If you want to write a web app, then go to &lt;a href=&#34;https://github.com/emilk/eframe_template/&#34;&gt;https://github.com/emilk/eframe_template/&lt;/a&gt; and follow the instructions. The official docs are at &lt;a href=&#34;https://docs.rs/egui&#34;&gt;https://docs.rs/egui&lt;/a&gt;. For inspiration and more examples, check out the &lt;a href=&#34;https://www.egui.rs/#demo&#34;&gt;the egui web demo&lt;/a&gt; and follow the links in it to its source code.&lt;/p&gt; &#xA;&lt;p&gt;If you want to integrate egui into an existing engine, go to the &lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/#integrations&#34;&gt;Integrations&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, use &lt;a href=&#34;https://github.com/emilk/egui/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;. There is also &lt;a href=&#34;https://discord.gg/JFcEma9bJq&#34;&gt;an egui discord server&lt;/a&gt;. If you want to contribute to egui, please read the &lt;a href=&#34;https://github.com/emilk/egui/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.egui.rs/#demo&#34;&gt;Click to run egui web demo&lt;/a&gt; (works in any browser with WASM and WebGL support). Uses &lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/eframe&#34;&gt;&lt;code&gt;eframe&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To test the demo app locally, run &lt;code&gt;cargo run --release -p egui_demo_app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The native backend is &lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui_glow&#34;&gt;&lt;code&gt;egui_glow&lt;/code&gt;&lt;/a&gt; (using &lt;a href=&#34;https://crates.io/crates/glow&#34;&gt;&lt;code&gt;glow&lt;/code&gt;&lt;/a&gt;) and should work out-of-the-box on Mac and Windows, but on Linux you need to first run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo apt-get install -y libclang-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;On Fedora Rawhide you need to run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dnf install clang clang-devel clang-tools-extra libxkbcommon-devel pkg-config openssl-devel libxcb-devel gtk3-devel atk fontconfig-devel&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This is just for the demo app - egui itself is completely platform agnostic!&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The easiest to use GUI library&lt;/li&gt; &#xA; &lt;li&gt;Responsive: target 60 Hz in debug build&lt;/li&gt; &#xA; &lt;li&gt;Friendly: difficult to make mistakes, and shouldn&#39;t panic&lt;/li&gt; &#xA; &lt;li&gt;Portable: the same code works on the web and as a native app&lt;/li&gt; &#xA; &lt;li&gt;Easy to integrate into any environment&lt;/li&gt; &#xA; &lt;li&gt;A simple 2D graphics API for custom painting (&lt;a href=&#34;https://docs.rs/epaint&#34;&gt;&lt;code&gt;epaint&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;No callbacks&lt;/li&gt; &#xA; &lt;li&gt;Pure immediate mode&lt;/li&gt; &#xA; &lt;li&gt;Extensible: &lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_demo_lib/src/demo/toggle_switch.rs&#34;&gt;easy to write your own widgets for egui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modular: You should be able to use small parts of egui and combine them in new ways&lt;/li&gt; &#xA; &lt;li&gt;Safe: there is no &lt;code&gt;unsafe&lt;/code&gt; code in egui&lt;/li&gt; &#xA; &lt;li&gt;Minimal dependencies: &lt;a href=&#34;https://crates.io/crates/ab_glyph&#34;&gt;&lt;code&gt;ab_glyph&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/ahash&#34;&gt;&lt;code&gt;ahash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/nohash-hasher&#34;&gt;&lt;code&gt;nohash-hasher&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/parking_lot&#34;&gt;&lt;code&gt;parking_lot&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;egui is &lt;em&gt;not&lt;/em&gt; a framework. egui is a library you call into, not an environment you program for.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: egui does not claim to have reached all these goals yet! egui is still work in progress.&lt;/p&gt; &#xA;&lt;h3&gt;Non-goals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Become the most powerful GUI library&lt;/li&gt; &#xA; &lt;li&gt;Native looking interface&lt;/li&gt; &#xA; &lt;li&gt;Advanced and flexible layouts (that&#39;s fundamentally incompatible with immediate mode)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is egui for?&lt;/h2&gt; &#xA;&lt;p&gt;egui aims to be the best choice when you want a simple way to create a GUI, or you want to add a GUI to a game engine.&lt;/p&gt; &#xA;&lt;p&gt;If you are not using Rust, egui is not for you. If you want a GUI that looks native, egui is not for you. If you want something that doesn&#39;t break when you upgrade it, egui isn&#39;t for you (yet).&lt;/p&gt; &#xA;&lt;p&gt;But if you are writing something interactive in Rust that needs a simple GUI, egui may be for you.&lt;/p&gt; &#xA;&lt;h3&gt;egui vs Dear ImGui&lt;/h3&gt; &#xA;&lt;p&gt;The obvious alternative to egui is &lt;a href=&#34;https://github.com/Gekkio/imgui-rs&#34;&gt;&lt;code&gt;imgui-rs&lt;/code&gt;&lt;/a&gt;, the Rust wrapper around the C++ library &lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;Dear ImGui&lt;/a&gt;. Dear ImGui is a great library (and the main inspiration for egui), with a lot more features and polish. However, egui provides some benefits for Rust users:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;egui is pure Rust&lt;/li&gt; &#xA; &lt;li&gt;egui is easily compiled to WASM&lt;/li&gt; &#xA; &lt;li&gt;egui lets you use native Rust string types (&lt;code&gt;imgui-rs&lt;/code&gt; forces you to use annoying macros and wrappers for zero-terminated strings)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_demo_lib/src/demo/toggle_switch.rs&#34;&gt;Writing your own widgets in egui is simple&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;egui also tries to improve your experience in other small ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows are automatically sized based on their contents&lt;/li&gt; &#xA; &lt;li&gt;Windows are automatically positioned to not overlap with each other&lt;/li&gt; &#xA; &lt;li&gt;Some subtle animations make egui come alive&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So in summary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;egui: pure Rust, new, exciting, work in progress&lt;/li&gt; &#xA; &lt;li&gt;Dear ImGui: feature rich, well tested, cumbersome Rust integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;State&lt;/h2&gt; &#xA;&lt;p&gt;egui is in active development. It works well for what it does, but it lacks many features and the interfaces are still in flux. New releases will have breaking changes.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Widgets: label, text button, hyperlink, checkbox, radio button, slider, draggable value, text editing, combo box, color picker&lt;/li&gt; &#xA; &lt;li&gt;Layouts: horizontal, vertical, columns, automatic wrapping&lt;/li&gt; &#xA; &lt;li&gt;Text editing: multiline, copy/paste, undo, emoji supports&lt;/li&gt; &#xA; &lt;li&gt;Windows: move, resize, name, minimize and close. Automatically sized and positioned.&lt;/li&gt; &#xA; &lt;li&gt;Regions: resizing, vertical scrolling, collapsing headers (sections)&lt;/li&gt; &#xA; &lt;li&gt;Rendering: Anti-aliased rendering of lines, circles, text and convex polygons.&lt;/li&gt; &#xA; &lt;li&gt;Tooltips on hover&lt;/li&gt; &#xA; &lt;li&gt;More&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/emilk/egui/master/media/widget_gallery.gif&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;Light Theme:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/emilk/egui/master/media/light_theme.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;egui is built to be easy to integrate into any existing game engine or platform you are working on. egui itself doesn&#39;t know or care on what OS it is running or how to render things to the screen - that is the job of the egui integration.&lt;/p&gt; &#xA;&lt;p&gt;An integration needs to do the following each frame:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Input&lt;/strong&gt;: Gather input (mouse, touches, keyboard, screen size, etc) and give it to egui&lt;/li&gt; &#xA; &lt;li&gt;Run the application code&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Output&lt;/strong&gt;: Handle egui output (cursor changes, paste, texture allocations, …)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Painting&lt;/strong&gt;: Render the triangle mesh egui produces (see &lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_glow/src/painter.rs&#34;&gt;OpenGL example&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Official integrations&lt;/h3&gt; &#xA;&lt;p&gt;These are the official egui integrations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/eframe&#34;&gt;&lt;code&gt;eframe&lt;/code&gt;&lt;/a&gt; for compiling the same app to web/wasm and desktop/native. Uses &lt;code&gt;egui-winit&lt;/code&gt; and &lt;code&gt;egui_glow&lt;/code&gt; or &lt;code&gt;egui-wgpu&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui_glow&#34;&gt;&lt;code&gt;egui_glow&lt;/code&gt;&lt;/a&gt; for rendering egui with &lt;a href=&#34;https://github.com/grovesNL/glow&#34;&gt;glow&lt;/a&gt; on native and web, and for making native apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui-wgpu&#34;&gt;&lt;code&gt;egui-wgpu&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/wgpu&#34;&gt;wgpu&lt;/a&gt; (WebGPU API).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui-winit&#34;&gt;&lt;code&gt;egui-winit&lt;/code&gt;&lt;/a&gt; for integrating with &lt;a href=&#34;https://github.com/rust-windowing/winit&#34;&gt;winit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui_glium&#34;&gt;&lt;code&gt;egui_glium&lt;/code&gt;&lt;/a&gt; for compiling native apps with &lt;a href=&#34;https://github.com/glium/glium&#34;&gt;Glium&lt;/a&gt; (DEPRECATED - looking for new maintainer).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3rd party integrations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jgraef/amethyst_egui&#34;&gt;&lt;code&gt;amethyst_egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://amethyst.rs/&#34;&gt;the Amethyst game engine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mvlabat/bevy_egui&#34;&gt;&lt;code&gt;bevy_egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://bevyengine.org/&#34;&gt;the Bevy game engine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cohaereo/egui_glfw_gl&#34;&gt;&lt;code&gt;egui_glfw_gl&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/glfw&#34;&gt;GLFW&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/h3r2tic/egui-glutin-gl/&#34;&gt;&lt;code&gt;egui-glutin-gl&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/glutin&#34;&gt;glutin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crates.io/crates/egui_sdl2_gl&#34;&gt;&lt;code&gt;egui_sdl2_gl&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/sdl2&#34;&gt;SDL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ComLarsic/egui_sdl2_platform&#34;&gt;&lt;code&gt;egui_sdl2_platform&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/sdl2&#34;&gt;SDL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/derivator/egui_vulkano&#34;&gt;&lt;code&gt;egui_vulkano&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/vulkano-rs/vulkano&#34;&gt;Vulkano&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hakolao/egui_winit_vulkano&#34;&gt;&lt;code&gt;egui_winit_vulkano&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/vulkano-rs/vulkano&#34;&gt;Vulkano&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/optozorax/egui-macroquad&#34;&gt;&lt;code&gt;egui-macroquad&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/not-fl3/macroquad&#34;&gt;macroquad&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/not-fl3/egui-miniquad&#34;&gt;&lt;code&gt;egui-miniquad&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/not-fl3/miniquad&#34;&gt;Miniquad&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heretik31/egui_speedy2d&#34;&gt;&lt;code&gt;egui_speedy2d&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/QuantumBadger/Speedy2D&#34;&gt;Speedy2d&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crates.io/crates/egui-tetra&#34;&gt;&lt;code&gt;egui-tetra&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://crates.io/crates/tetra&#34;&gt;Tetra&lt;/a&gt;, a 2D game framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MatchaChoco010/egui-winit-ash-integration&#34;&gt;&lt;code&gt;egui-winit-ash-integration&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/rust-windowing/winit&#34;&gt;winit&lt;/a&gt; and &lt;a href=&#34;https://github.com/MaikKlein/ash&#34;&gt;ash&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crates.io/crates/fltk-egui&#34;&gt;&lt;code&gt;fltk-egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/fltk-rs/fltk-rs&#34;&gt;fltk-rs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NemuiSen/ggegui&#34;&gt;&lt;code&gt;ggegui&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&#34;https://ggez.rs/&#34;&gt;ggez&lt;/a&gt; game framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/setzer22/godot-egui&#34;&gt;&lt;code&gt;godot-egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/godot-rust/godot-rust&#34;&gt;godot-rust&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nannou-org/nannou/tree/master/nannou_egui&#34;&gt;&lt;code&gt;nannou_egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://nannou.cc&#34;&gt;nannou&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nazariglez/notan/tree/main/crates/notan_egui&#34;&gt;&lt;code&gt;notan_egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/Nazariglez/notan&#34;&gt;notan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/attackgoat/screen-13/tree/master/contrib/screen-13-egui&#34;&gt;&lt;code&gt;screen-13-egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/attackgoat/screen-13&#34;&gt;Screen 13&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasmerlin/egui_skia&#34;&gt;&lt;code&gt;egui_skia&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/rust-skia/rust-skia/tree/master/skia-safe&#34;&gt;skia&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Smithay/smithay-egui&#34;&gt;&lt;code&gt;smithay-egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/Smithay/smithay/&#34;&gt;smithay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tauri-apps/tauri-egui&#34;&gt;&lt;code&gt;tauri-egui&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;tauri&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Missing an integration for the thing you&#39;re working on? Create one, it&#39;s easy!&lt;/p&gt; &#xA;&lt;h3&gt;Writing your own egui integration&lt;/h3&gt; &#xA;&lt;p&gt;You need to collect &lt;a href=&#34;https://docs.rs/egui/latest/egui/struct.RawInput.html&#34;&gt;&lt;code&gt;egui::RawInput&lt;/code&gt;&lt;/a&gt; and handle &lt;a href=&#34;https://docs.rs/egui/latest/egui/struct.FullOutput.html&#34;&gt;&lt;code&gt;egui::FullOutput&lt;/code&gt;&lt;/a&gt;. The basic structure is this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;let mut egui_ctx = egui::CtxRef::default();&#xA;&#xA;// Game loop:&#xA;loop {&#xA;    // Gather input (mouse, touches, keyboard, screen size, etc):&#xA;    let raw_input: egui::RawInput = my_integration.gather_input();&#xA;    let full_output = egui_ctx.run(raw_input, |egui_ctx| {&#xA;        my_app.ui(egui_ctx); // add panels, windows and widgets to `egui_ctx` here&#xA;    });&#xA;    let clipped_primitives = egui_ctx.tessellate(full_output.shapes); // creates triangles to paint&#xA;&#xA;    my_integration.paint(&amp;amp;full_output.textures_delta, clipped_primitives);&#xA;&#xA;    let platform_output = full_output.platform_output;&#xA;    my_integration.set_cursor_icon(platform_output.cursor_icon);&#xA;    if !platform_output.copied_text.is_empty() {&#xA;        my_integration.set_clipboard_text(platform_output.copied_text);&#xA;    }&#xA;    // See `egui::FullOutput` and `egui::PlatformOutput` for more&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a reference OpenGL backend, see &lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_glium/src/painter.rs&#34;&gt;the &lt;code&gt;egui_glium&lt;/code&gt; painter&lt;/a&gt; or &lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_glow/src/painter.rs&#34;&gt;the &lt;code&gt;egui_glow&lt;/code&gt; painter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging your integration&lt;/h3&gt; &#xA;&lt;h4&gt;Things look jagged&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Turn off backface culling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;My text is blurry&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you set the proper &lt;code&gt;pixels_per_point&lt;/code&gt; in the input to egui.&lt;/li&gt; &#xA; &lt;li&gt;Make sure the texture sampler is not off by half a pixel. Try nearest-neighbor sampler to check.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;My windows are too transparent or too dark&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;egui uses premultiplied alpha, so make sure your blending function is &lt;code&gt;(ONE, ONE_MINUS_SRC_ALPHA)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make sure your texture sampler is clamped (&lt;code&gt;GL_CLAMP_TO_EDGE&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;egui prefers linear color spaces for all blending so: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use an sRGBA-aware texture if available (e.g. &lt;code&gt;GL_SRGB8_ALPHA8&lt;/code&gt;). &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Otherwise: remember to decode gamma in the fragment shader.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Decode the gamma of the incoming vertex colors in your vertex shader.&lt;/li&gt; &#xA;   &lt;li&gt;Turn on sRGBA/linear framebuffer if available (&lt;code&gt;GL_FRAMEBUFFER_SRGB&lt;/code&gt;). &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Otherwise: gamma-encode the colors before you write them again.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why immediate mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;egui&lt;/code&gt; is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Immediate_mode_GUI&#34;&gt;immediate mode GUI library&lt;/a&gt;, as opposed to a &lt;em&gt;retained mode&lt;/em&gt; GUI library. The difference between retained mode and immediate mode is best illustrated with the example of a button: In a retained GUI you create a button, add it to some UI and install some on-click handler (callback). The button is retained in the UI, and to change the text on it you need to store some sort of reference to it. By contrast, in immediate mode you show the button and interact with it immediately, and you do so every frame (e.g. 60 times per second). This means there is no need for any on-click handler, nor to store any reference to it. In &lt;code&gt;egui&lt;/code&gt; this looks like this: &lt;code&gt;if ui.button(&#34;Save file&#34;).clicked() { save(file); }&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A more detailed description of immediate mode can be found &lt;a href=&#34;https://docs.rs/egui/latest/egui/#understanding-immediate-mode&#34;&gt;in the &lt;code&gt;egui&lt;/code&gt; docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are advantages and disadvantages to both systems.&lt;/p&gt; &#xA;&lt;p&gt;The short of it is this: immediate mode GUI libraries are easier to use, but less powerful.&lt;/p&gt; &#xA;&lt;h3&gt;Advantages of immediate mode&lt;/h3&gt; &#xA;&lt;h4&gt;Usability&lt;/h4&gt; &#xA;&lt;p&gt;The main advantage of immediate mode is that the application code becomes vastly simpler:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You never need to have any on-click handlers and callbacks that disrupts your code flow.&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t have to worry about a lingering callback calling something that is gone.&lt;/li&gt; &#xA; &lt;li&gt;Your GUI code can easily live in a simple function (no need for an object just for the UI).&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t have to worry about app state and GUI state being out-of-sync (i.e. the GUI showing something outdated), because the GUI isn&#39;t storing any state - it is showing the latest state &lt;em&gt;immediately&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In other words, a whole lot of code, complexity and bugs are gone, and you can focus your time on something more interesting than writing GUI code.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantages of immediate mode&lt;/h3&gt; &#xA;&lt;h4&gt;Layout&lt;/h4&gt; &#xA;&lt;p&gt;The main disadvantage of immediate mode is it makes layout more difficult. Say you want to show a small dialog window in the center of the screen. To position the window correctly the GUI library must first know the size of it. To know the size of the window the GUI library must first layout the contents of the window. In retained mode this is easy: the GUI library does the window layout, positions the window, then checks for interaction (&#34;was the OK button clicked?&#34;).&lt;/p&gt; &#xA;&lt;p&gt;In immediate mode you run into a paradox: to know the size of the window, we must do the layout, but the layout code also checks for interaction (&#34;was the OK button clicked?&#34;) and so it needs to know the window position &lt;em&gt;before&lt;/em&gt; showing the window contents. This means we must decide where to show the window &lt;em&gt;before&lt;/em&gt; we know its size!&lt;/p&gt; &#xA;&lt;p&gt;This is a fundamental shortcoming of immediate mode GUIs, and any attempt to resolve it comes with its own downsides.&lt;/p&gt; &#xA;&lt;p&gt;One workaround is to store the size and use it the next frame. This produces a frame-delay for the correct layout, producing occasional flickering the first frame something shows up. &lt;code&gt;egui&lt;/code&gt; does this for some things such as windows and grid layouts.&lt;/p&gt; &#xA;&lt;p&gt;You can also call the layout code twice (once to get the size, once to do the interaction), but that is not only more expensive, it&#39;s also complex to implement, and in some cases twice is not enough. &lt;code&gt;egui&lt;/code&gt; never does this.&lt;/p&gt; &#xA;&lt;p&gt;For &#34;atomic&#34; widgets (e.g. a button) &lt;code&gt;egui&lt;/code&gt; knows the size before showing it, so centering buttons, labels etc is possible in &lt;code&gt;egui&lt;/code&gt; without any special workarounds.&lt;/p&gt; &#xA;&lt;h4&gt;CPU usage&lt;/h4&gt; &#xA;&lt;p&gt;Since an immediate mode GUI does a full layout each frame, the layout code needs to be quick. If you have a very complex GUI this can tax the CPU. In particular, having a very large UI in a scroll area (with very long scrollback) can be slow, as the content needs to be laid out each frame.&lt;/p&gt; &#xA;&lt;p&gt;If you design the GUI with this in mind and refrain from huge scroll areas (or only lay out the part that is in view) then the performance hit is generally pretty small. For most cases you can expect &lt;code&gt;egui&lt;/code&gt; to take up 1-2 ms per frame, but &lt;code&gt;egui&lt;/code&gt; still has a lot of room for optimization (it&#39;s not something I&#39;ve focused on yet). You can also set up &lt;code&gt;egui&lt;/code&gt; to only repaint when there is interaction (e.g. mouse movement).&lt;/p&gt; &#xA;&lt;p&gt;If your GUI is highly interactive, then immediate mode may actually be more performant compared to retained mode. Go to any web page and resize the browser window, and you&#39;ll notice that the browser is very slow to do the layout and eats a lot of CPU doing it. Resize a window in &lt;code&gt;egui&lt;/code&gt; by contrast, and you&#39;ll get smooth 60 FPS at no extra CPU cost.&lt;/p&gt; &#xA;&lt;h4&gt;IDs&lt;/h4&gt; &#xA;&lt;p&gt;There are some GUI state that you want the GUI library to retain, even in an immediate mode library such as &lt;code&gt;egui&lt;/code&gt;. This includes position and sizes of windows and how far the user has scrolled in some UI. In these cases you need to provide &lt;code&gt;egui&lt;/code&gt; with a seed of a unique identifier (unique within the parent UI). For instance: by default &lt;code&gt;egui&lt;/code&gt; uses the window titles as unique IDs to store window positions. If you want two windows with the same name (or one window with a dynamic name) you must provide some other ID source to &lt;code&gt;egui&lt;/code&gt; (some unique integer or string).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;egui&lt;/code&gt; also needs to track which widget is being interacted with (e.g. which slider is being dragged). &lt;code&gt;egui&lt;/code&gt; uses unique id:s for this awell, but in this case the IDs are automatically generated, so there is no need for the user to worry about it. In particular, having two buttons with the same name is no problem (this is in contrast with &lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;&lt;code&gt;Dear ImGui&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Overall, ID handling is a rare inconvenience, and not a big disadvantage.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://github.com/emilk/egui/discussions/categories/q-a&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Can I use &lt;code&gt;egui&lt;/code&gt; with non-latin characters?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! But you need to install your own font (&lt;code&gt;.ttf&lt;/code&gt; or &lt;code&gt;.otf&lt;/code&gt;) using &lt;code&gt;Context::set_fonts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Can I customize the look of egui?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! You can customize the colors, spacing, fonts and sizes of everything using &lt;code&gt;Context::set_style&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example (from &lt;a href=&#34;https://github.com/AlexxxRu/TinyPomodoro&#34;&gt;https://github.com/AlexxxRu/TinyPomodoro&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/emilk/egui/master/media/pompodoro-skin.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h3&gt;How do I use egui with &lt;code&gt;async&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;If you call &lt;code&gt;.await&lt;/code&gt; in your GUI code, the UI will freeze, which is very bad UX. Instead, keep the GUI thread non-blocking and communicate with any concurrent tasks (&lt;code&gt;async&lt;/code&gt; tasks or other threads) with something like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Channels (e.g. &lt;a href=&#34;https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html&#34;&gt;&lt;code&gt;std::sync::mpsc::channel&lt;/code&gt;&lt;/a&gt;). Make sure to use &lt;a href=&#34;https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.try_recv&#34;&gt;&lt;code&gt;try_recv&lt;/code&gt;&lt;/a&gt; so you don&#39;t block the gui thread!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Arc&amp;lt;Mutex&amp;lt;Value&amp;gt;&amp;gt;&lt;/code&gt; (background thread sets a value; GUI thread reads it)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/poll-promise&#34;&gt;&lt;code&gt;poll_promise::Promise&lt;/code&gt;&lt;/a&gt; (example: &lt;a href=&#34;https://github.com/emilk/egui/raw/master/examples/download_image/&#34;&gt;&lt;code&gt;examples/download_image/&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/eventuals/latest/eventuals/struct.Eventual.html&#34;&gt;&lt;code&gt;eventuals::Eventual&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/tokio/latest/tokio/sync/watch/fn.channel.html&#34;&gt;&lt;code&gt;tokio::sync:&lt;span&gt;⌚&lt;/span&gt;:channel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What about accessibility, such as screen readers?&lt;/h3&gt; &#xA;&lt;p&gt;egui includes optional support for &lt;a href=&#34;https://accesskit.dev/&#34;&gt;AccessKit&lt;/a&gt;, which currently implements the native accessibility APIs on Windows and macOS. This feature is enabled by default in eframe. For platforms that AccessKit doesn&#39;t yet support, including web, there is an experimental built-in screen reader; in &lt;a href=&#34;https://www.egui.rs/#demo&#34;&gt;the web demo&lt;/a&gt; you can enable it in the &#34;Backend&#34; tab.&lt;/p&gt; &#xA;&lt;p&gt;The original discussion of accessibility in egui is at &lt;a href=&#34;https://github.com/emilk/egui/issues/167&#34;&gt;https://github.com/emilk/egui/issues/167&lt;/a&gt;. Now that AccessKit support is merged, providing a strong foundation for future accessibility work, please open new issues on specific accessibility problems.&lt;/p&gt; &#xA;&lt;h3&gt;What is the difference between &lt;a href=&#34;https://docs.rs/egui&#34;&gt;egui&lt;/a&gt; and &lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/eframe&#34;&gt;eframe&lt;/a&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;egui&lt;/code&gt; is a 2D user interface library for laying out and interacting with buttons, sliders, etc. &lt;code&gt;egui&lt;/code&gt; has no idea if it is running on the web or natively, and does not know how to collect input or show things on screen. That is the job of &lt;em&gt;the integration&lt;/em&gt; or &lt;em&gt;backend&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is common to use &lt;code&gt;egui&lt;/code&gt; from a game engine (using e.g. &lt;a href=&#34;https://docs.rs/bevy_egui&#34;&gt;&lt;code&gt;bevy_egui&lt;/code&gt;&lt;/a&gt;), but you can also use &lt;code&gt;egui&lt;/code&gt; stand-alone using &lt;code&gt;eframe&lt;/code&gt;. &lt;code&gt;eframe&lt;/code&gt; has integration for web and native, and handles input and rendering. The &lt;em&gt;frame&lt;/em&gt; in &lt;code&gt;eframe&lt;/code&gt; stands both for the frame in which your egui app resides and also for &#34;framework&#34; (&lt;code&gt;frame&lt;/code&gt; is a framework, &lt;code&gt;egui&lt;/code&gt; is a library).&lt;/p&gt; &#xA;&lt;h3&gt;How do I render 3D stuff in an egui area?&lt;/h3&gt; &#xA;&lt;p&gt;There are multiple ways to combine egui with 3D. The simplest way is to use a 3D library and have egui sit on top of the 3D view. See for instance &lt;a href=&#34;https://github.com/mvlabat/bevy_egui&#34;&gt;&lt;code&gt;bevy_egui&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/asny/three-d&#34;&gt;&lt;code&gt;three-d&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to embed 3D into an egui view there are two options.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;Shape::Callback&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/egui/raw/master/examples/custom_3d_glow.rs&#34;&gt;https://github.com/emilk/egui/blob/master/examples/custom_3d_glow.rs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;Shape::Callback&lt;/code&gt; will call your code when egui gets painted, to show anything using whatever the background rendering context is. When using &lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/eframe&#34;&gt;&lt;code&gt;eframe&lt;/code&gt;&lt;/a&gt; this will be &lt;a href=&#34;https://github.com/grovesNL/glow&#34;&gt;&lt;code&gt;glow&lt;/code&gt;&lt;/a&gt;. Other integrations will give you other rendering contexts, if they support &lt;code&gt;Shape::Callback&lt;/code&gt; at all.&lt;/p&gt; &#xA;&lt;h4&gt;Render-to-texture&lt;/h4&gt; &#xA;&lt;p&gt;You can also render your 3D scene to a texture and display it using &lt;a href=&#34;https://docs.rs/egui/latest/egui/struct.Ui.html#method.image&#34;&gt;&lt;code&gt;ui.image(…)&lt;/code&gt;&lt;/a&gt;. You first need to convert the native texture to an &lt;a href=&#34;https://docs.rs/egui/latest/egui/enum.TextureId.html&#34;&gt;&lt;code&gt;egui::TextureId&lt;/code&gt;&lt;/a&gt;, and how to do this depends on the integration you use.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/not-fl3/egui-miniquad&#34;&gt;&lt;code&gt;egui-miniquad&lt;/code&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/not-fl3/egui-miniquad/raw/master/examples/render_to_egui_image.rs&#34;&gt;https://github.com/not-fl3/egui-miniquad/blob/master/examples/render_to_egui_image.rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/emilk/egui/tree/master/crates/egui_glium&#34;&gt;&lt;code&gt;egui_glium&lt;/code&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/raw/master/crates/egui_glium/examples/native_texture.rs&#34;&gt;https://github.com/emilk/egui/blob/master/crates/egui_glium/examples/native_texture.rs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;h3&gt;Conventions and design choices&lt;/h3&gt; &#xA;&lt;p&gt;All coordinates are in screen space coordinates, with (0, 0) in the top left corner&lt;/p&gt; &#xA;&lt;p&gt;All coordinates are in &#34;points&#34; which may consist of many physical pixels.&lt;/p&gt; &#xA;&lt;p&gt;All colors have premultiplied alpha.&lt;/p&gt; &#xA;&lt;p&gt;egui uses the builder pattern for construction widgets. For instance: &lt;code&gt;ui.add(Label::new(&#34;Hello&#34;).text_color(RED));&lt;/code&gt; I am not a big fan of the builder pattern (it is quite verbose both in implementation and in use) but until Rust has named, default arguments it is the best we can do. To alleviate some of the verbosity there are common-case helper functions, like &lt;code&gt;ui.label(&#34;Hello&#34;);&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Instead of using matching &lt;code&gt;begin/end&lt;/code&gt; style function calls (which can be error prone) egui prefers to use &lt;code&gt;FnOnce&lt;/code&gt; closures passed to a wrapping function. Lambdas are a bit ugly though, so I&#39;d like to find a nicer solution to this. More discussion of this at &lt;a href=&#34;https://github.com/emilk/egui/issues/1004#issuecomment-1001650754&#34;&gt;https://github.com/emilk/egui/issues/1004#issuecomment-1001650754&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;egui uses a single &lt;code&gt;RwLock&lt;/code&gt; for short-time locks on each access of &lt;code&gt;Context&lt;/code&gt; data. This is to leave implementation simple and transactional and allow users to run their UI logic in parallel. Instead of creating mutex guards, egui uses closures passed to a wrapping function, e.g. &lt;code&gt;ctx.input(|i| i.key_down(Key::A))&lt;/code&gt;. This is to make it less likely that a user would accidentally double-lock the &lt;code&gt;Context&lt;/code&gt;, which would lead to a deadlock.&lt;/p&gt; &#xA;&lt;h3&gt;Inspiration&lt;/h3&gt; &#xA;&lt;p&gt;The one and only &lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;Dear ImGui&lt;/a&gt; is a great Immediate Mode GUI for C++ which works with many backends. That library revolutionized how I think about GUI code and turned GUI programming from something I hated to do to something I now enjoy.&lt;/p&gt; &#xA;&lt;h3&gt;Name&lt;/h3&gt; &#xA;&lt;p&gt;The name of the library and the project is &#34;egui&#34; and pronounced as &#34;e-gooey&#34;. Please don&#39;t write it as &#34;EGUI&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The library was originally called &#34;Emigui&#34;, but was renamed to &#34;egui&#34; in 2020.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;egui author and maintainer: Emil Ernerfeldt &lt;a href=&#34;https://github.com/emilk&#34;&gt;(@emilk&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Notable contributions by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/n2&#34;&gt;@n2&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/253&#34;&gt;Mobile web input and IME support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/optozorax&#34;&gt;@optozorax&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/257&#34;&gt;Arbitrary widget data storage&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quadruple-output&#34;&gt;@quadruple-output&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/306&#34;&gt;Multitouch&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EmbersArc&#34;&gt;@EmbersArc&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pulls?q=+is%3Apr+author%3AEmbersArc&#34;&gt;Plots&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AsmPrgmC3&#34;&gt;@AsmPrgmC3&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/650&#34;&gt;Proper sRGBA blending for web&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlexApps99&#34;&gt;@AlexApps99&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/685&#34;&gt;&lt;code&gt;egui_glow&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mankinskin&#34;&gt;@mankinskin&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/543&#34;&gt;Context menus&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/t18b219k&#34;&gt;@t18b219k&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/868&#34;&gt;Port glow painter to web&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielkeller&#34;&gt;@danielkeller&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/1050&#34;&gt;&lt;code&gt;Context&lt;/code&gt; refactor&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaximOsipenko&#34;&gt;@MaximOsipenko&lt;/a&gt;: &lt;a href=&#34;https://github.com/emilk/egui/pull/2625&#34;&gt;&lt;code&gt;Context&lt;/code&gt; lock refactor&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;And &lt;a href=&#34;https://github.com/emilk/egui/graphs/contributors?type=a&#34;&gt;many more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;egui is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/LICENSE-MIT&#34;&gt;MIT&lt;/a&gt; OR &lt;a href=&#34;https://raw.githubusercontent.com/emilk/egui/master/LICENSE-APACHE&#34;&gt;Apache-2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The flattening algorithm for the cubic bezier curve and quadratic bezier curve is from &lt;a href=&#34;https://docs.rs/lyon_geom/latest/lyon_geom/&#34;&gt;lyon_geom&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Default fonts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;emoji-icon-font.ttf&lt;/code&gt;: &lt;a href=&#34;https://github.com/jslegers/emoji-icon-font&#34;&gt;Copyright (c) 2014 John Slegers&lt;/a&gt; , MIT License&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hack-Regular.ttf&lt;/code&gt;: &lt;a href=&#34;https://github.com/source-foundry/Hack&#34;&gt;https://github.com/source-foundry/Hack&lt;/a&gt;, &lt;a href=&#34;https://github.com/source-foundry/Hack/raw/master/LICENSE.md&#34;&gt;MIT Licence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NotoEmoji-Regular.ttf&lt;/code&gt;: &lt;a href=&#34;https://google.com/get/noto&#34;&gt;google.com/get/noto&lt;/a&gt;, &lt;a href=&#34;https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;amp;id=OFL&#34;&gt;SIL Open Font License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ubuntu-Light.ttf&lt;/code&gt; by &lt;a href=&#34;http://www.daltonmaag.com/&#34;&gt;Dalton Maag&lt;/a&gt;: &lt;a href=&#34;https://ubuntu.com/legal/font-licence&#34;&gt;Ubuntu font licence&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/emilk/egui/master/media/rerun_io_logo.png&#34; width=&#34;50%&#34;&gt; &#xA; &lt;p&gt;egui development is sponsored by &lt;a href=&#34;https://www.rerun.io/&#34;&gt;Rerun&lt;/a&gt;, a startup doing&lt;br&gt; visualizations for computer vision and robotics.&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>honghuangdc/soybean-admin</title>
    <updated>2023-07-28T01:28:44Z</updated>
    <id>tag:github.com,2023-07-28:/honghuangdc/soybean-admin</id>
    <link href="https://github.com/honghuangdc/soybean-admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fresh and elegant admin template, based on Vue3,Vite3,TypeScript,NaiveUI and UnoCSS [一个基于Vue3、Vite3、TypeScript、NaiveUI 和 UnoCSS的清新优雅的中后台模版]&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/honghuangdc/soybean-admin/main/public/favicon.svg?sanitize=true&#34; style=&#34;width: 160px;&#34;&gt; &#xA; &lt;h1&gt;Soybean Admin&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/honghuangdc/soybean-admin/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/honghuangdc/soybean-admin&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/honghuangdc/soybean-admin&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin&#34;&gt;Soybean Admin&lt;/a&gt; 是一个基于 Vue3、Vite3、TypeScript、NaiveUI、Pinia 和 UnoCSS 的清新优雅的中后台模版，它使用了最新流行的前端技术栈，内置丰富的主题配置，有着极高的代码规范，基于文件的路由系统以及基于 Mock 的动态权限路由，开箱即用的中后台前端解决方案，也可用于学习参考。&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;最新流行技术栈&lt;/strong&gt;：使用 Vue3/Vite 等前端前沿技术开发, 使用高效率的 npm 包管理器 pnpm&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: 应用程序级 JavaScript 的语言&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;主题&lt;/strong&gt;：丰富可配置的主题、暗黑模式，基于原子 css 框架 - UnoCss 的动态主题颜色&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;代码规范&lt;/strong&gt;：丰富的规范插件及极高的代码规范&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;文件路由系统&lt;/strong&gt;：基于文件的路由系统，根据页面文件自动生成路由声明、路由导入和路由模块&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;权限路由&lt;/strong&gt;：提供前端静态和后端动态两种路由模式，基于 mock 的动态路由能快速实现后端动态路由&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求函数&lt;/strong&gt;：基于 axios 的完善的请求函数封装，提供 Promise 和 hooks 两种请求函数，加入请求结果数据转换的适配器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SoybeanJS 工具库&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soybeanjs/cli&#34;&gt;@soybeanjs/cli&lt;/a&gt;: SoybeanJS 命令行工具，包含发布、git 和依赖等相关的实用命令&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soybeanjs/changelog&#34;&gt;@soybeanjs/changelog&lt;/a&gt;: 根据 git tags 和 commits 生成 changelog &lt;a href=&#34;https://raw.githubusercontent.com/honghuangdc/soybean-admin/main/CHANGELOG.md&#34;&gt;示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soybeanjs/eslint-config&#34;&gt;eslint-config-soybeanjs&lt;/a&gt;: SoybeanJS 的 eslint 预设配置&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soybeanjs/materials&#34;&gt;@soybeanjs/materials&lt;/a&gt;: SoybeanJS 的物料仓库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soybeanjs/vite-plugin-vue-page-route&#34;&gt;@soybeanjs/vite-plugin-vue-page-route&lt;/a&gt;: SoybeanAdmin 的路由插件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;基于 SoybeanAdmin 二次开发的项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lixin59/electron-mock-api&#34;&gt;electron-mock-admin&lt;/a&gt;: 一个 Mock Api 管理系统，帮助前端开发伙伴快速实现接口的 mock。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheBlindM/T-Shell&#34;&gt;T-Shell&lt;/a&gt;: 是一个可配置命令提示的终端模拟器和 SSH 客户端。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;在线预览&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soybean.pro/&#34;&gt;Soybean Admin 预览地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soybean.pro&#34;&gt;项目文档预览地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;代码仓库&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;仓库&lt;/th&gt; &#xA;   &lt;th&gt;github 地址&lt;/th&gt; &#xA;   &lt;th&gt;gitee 镜像&lt;/th&gt; &#xA;   &lt;th&gt;预览&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;soybean-admin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin&#34;&gt;github&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/honghuangdc/soybean-admin&#34;&gt;gitee&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://soybean.pro/&#34;&gt;预览&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tauri 版&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin/tree/tauri&#34;&gt;tauri 版&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/honghuangdc/soybean-admin/tree/tauri&#34;&gt;tauri 版&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;精简版&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin/tree/thin&#34;&gt;精简版&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/honghuangdc/soybean-admin/tree/thin&#34;&gt;精简版&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;集成 fast-crud&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin/tree/fast-crud&#34;&gt;集成 fast-crud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/honghuangdc/soybean-admin/tree/fast-crud&#34;&gt;集成 fast-crud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://fast-crud.docmirror.cn/soybean/#/crud/demo&#34;&gt;预览&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/honghuangdc/soybean-admin/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;后端服务&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin-java&#34;&gt;soybean-admin-java&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目示例图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/16/keOtgFH27r9nqYS.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/18/bW7mftiQexkvSTG.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/16/uV5nzjb3gYptAEl.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/16/rSnNHLdpuvkKxWq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/06/07/O39EKNa675FZIuS.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/18/Mt6YZqmDxO8v4uR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/06/07/zhmWnFlPTfDpot8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/16/VPl6Ru1iCAhLcS4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/06/07/n6Dy1HXBvuPc9oT.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/06/07/rY8TyAftM5dxspv.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/06/07/5GNBAd31IzQVjLP.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/06/07/rRSG6mEZpujOACT.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img style=&#34;width:380px;margin-right:18px;border:1px solid #dedede;&#34; src=&#34;https://s2.loli.net/2023/06/07/A5Nonc9vI6pB1lr.png&#34;&gt; &amp;nbsp; &#xA; &lt;img style=&#34;width:380px;border:1px solid #dedede;&#34; src=&#34;https://s2.loli.net/2023/06/07/VwBjqEhTke3OxXF.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;安装使用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;环境配置 &lt;strong&gt;本地环境需要安装 pnpm 7.x 、Node.js 14.18+ 和 Git&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;克隆代码&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/honghuangdc/soybean-admin.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装依赖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;打包&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker 部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker 部署 Soybean&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name soybean -p 80:80 -d soybeanjs/soybean-admin:v0.9.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;访问 SoybeanAdmin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;打开本地浏览器访问&lt;code&gt;http://localhost&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何贡献&lt;/h2&gt; &#xA;&lt;p&gt;非常欢迎您的加入！&lt;a href=&#34;https://github.com/honghuangdc/soybean-admin/issues/new&#34;&gt;提一个 Issue&lt;/a&gt; 或者提交一个 Pull Request。&lt;/p&gt; &#xA;&lt;h2&gt;Git 贡献提交规范&lt;/h2&gt; &#xA;&lt;p&gt;项目已经内置 Angular 提交规范，直接执行 commit 命令即可生成符合 Angular 提交规范的 commit。&lt;/p&gt; &#xA;&lt;p&gt;项目已用 simple-git-hooks 代替了 husky, 旧版本用了 husky，执行 pnpm soy init-git-hooks 进行初始化配置&lt;/p&gt; &#xA;&lt;h2&gt;浏览器支持&lt;/h2&gt; &#xA;&lt;p&gt;本地开发推荐使用&lt;code&gt;Chrome 90+&lt;/code&gt; 浏览器&lt;/p&gt; &#xA;&lt;p&gt;支持现代浏览器, 不支持 IE&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png&#34; alt=&#34;IE&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;IE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png&#34; alt=&#34; Edge&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;Edge&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png&#34; alt=&#34;Firefox&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;Firefox&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png&#34; alt=&#34;Chrome&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;Chrome&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png&#34; alt=&#34;Safari&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;Safari&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;not support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;last 2 versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;开源作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/honghuangdc&#34;&gt;@Soybean&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;交流&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Soybean Admin&lt;/code&gt; 是完全开源免费的项目，在帮助开发者更方便地进行中大型管理系统开发，同时也提供微信和 QQ 交流群，使用问题欢迎在群内提问。&lt;/p&gt; &#xA;&lt;div style=&#34;display:flex;&#34;&gt; &#xA; &lt;div style=&#34;padding-right:24px;&#34;&gt; &#xA;  &lt;p&gt;QQ交流群&lt;/p&gt; &#xA;  &lt;img src=&#34;https://i.loli.net/2021/11/24/1J6REWXiHomU2kM.jpg&#34; style=&#34;width:200px&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;p&gt;添加本人微信，欢迎来技术交流，业务咨询&lt;/p&gt; &#xA;  &lt;img src=&#34;https://s2.loli.net/2023/06/07/sVyCUFBvzQ9f5b7.jpg&#34; style=&#34;width:200px&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得这个项目对你有帮助，可以请 Soybean 喝杯饮料表示支持，Soybean 开源的动力离不开各位的支持和鼓励。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/01/24/i9cpq7lTCrKUoFf.png&#34; alt=&#34;赞助&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;本项目基于&lt;a href=&#34;https://raw.githubusercontent.com/honghuangdc/soybean-admin/main/LICENSE&#34;&gt;MIT © Soybean-2021&lt;/a&gt; 协议，仅供参考学习，商用时请保留作者的版权信息，作者不对软件做担保和负责。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>THUDM/CodeGeeX2</title>
    <updated>2023-07-28T01:28:44Z</updated>
    <id>tag:github.com,2023-07-28:/THUDM/CodeGeeX2</id>
    <link href="https://github.com/THUDM/CodeGeeX2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CodeGeeX2: A More Powerful Multilingual Code Generation Model&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/resources/codegeex_logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 🏠 &lt;a href=&#34;https://codegeex.cn&#34; target=&#34;_blank&#34;&gt;主页&lt;/a&gt;｜🛠 插件 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=aminer.codegeex&#34; target=&#34;_blank&#34;&gt;VS Code&lt;/a&gt;, &lt;a href=&#34;https://plugins.jetbrains.com/plugin/20587-codegeex&#34; target=&#34;_blank&#34;&gt;Jetbrains&lt;/a&gt;｜🤗 &lt;a href=&#34;https://huggingface.co/THUDM/codegeex2-6b&#34; target=&#34;_blank&#34;&gt;模型下载&lt;/a&gt;｜📄 &lt;a href=&#34;https://arxiv.org/abs/2303.17568&#34; target=&#34;_blank&#34;&gt;论文&lt;/a&gt;｜👋 加入&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/resources/wechat.md&#34; target=&#34;_blank&#34;&gt;微信开发者交流群&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Read this in &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/README_JA.md&#34;&gt;日本語&lt;/a&gt;で読む&lt;br&gt; Lire en &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/README_FR.md&#34;&gt;Français&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CodeGeeX2: 更强大的多语言代码生成模型&lt;/h1&gt; &#xA;&lt;p&gt;CodeGeeX2 是多语言代码生成模型 &lt;a href=&#34;https://github.com/THUDM/CodeGeeX&#34;&gt;CodeGeeX&lt;/a&gt; (&lt;a href=&#34;https://arxiv.org/abs/2303.17568&#34;&gt;KDD’23&lt;/a&gt;) 的第二代模型。不同于一代 CodeGeeX（完全在国产华为昇腾芯片平台训练） ，CodeGeeX2 是基于 &lt;a href=&#34;https://github.com/THUDM/ChatGLM2-6B&#34;&gt;ChatGLM2&lt;/a&gt; 架构加入代码预训练实现，得益于 ChatGLM2 的更优性能，CodeGeeX2 在多项指标上取得性能提升（+107% &amp;gt; CodeGeeX；仅60亿参数即超过150亿参数的 StarCoder-15B 近10%），更多特性包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;更强大的代码能力&lt;/strong&gt;：基于 ChatGLM2-6B 基座语言模型，CodeGeeX2-6B 进一步经过了 600B 代码数据预训练，相比一代模型，在代码能力上全面提升，&lt;a href=&#34;https://huggingface.co/datasets/THUDM/humaneval-x&#34;&gt;HumanEval-X&lt;/a&gt; 评测集的六种编程语言均大幅提升 (Python +57%, C++ +71%, Java +54%, JavaScript +83%, Go +56%, Rust +321%)，在Python上达到 35.9% 的 Pass@1 一次通过率，超越规模更大的 StarCoder-15B。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;更优秀的模型特性&lt;/strong&gt;：继承 ChatGLM2-6B 模型特性，CodeGeeX2-6B 更好支持中英文输入，支持最大 8192 序列长度，推理速度较一代 CodeGeeX-13B 大幅提升，量化后仅需6GB显存即可运行，支持轻量级本地化部署。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;更全面的AI编程助手&lt;/strong&gt;：CodeGeeX插件（&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=aminer.codegeex&#34;&gt;VS Code&lt;/a&gt;, &lt;a href=&#34;https://plugins.jetbrains.com/plugin/20587-codegeex&#34;&gt;Jetbrains&lt;/a&gt;）后端升级，支持超过100种编程语言，新增上下文补全、跨文件补全等实用功能。结合 Ask CodeGeeX 交互式AI编程助手，支持中英文对话解决各种编程问题，包括且不限于代码解释、代码翻译、代码纠错、文档生成等，帮助程序员更高效开发。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;更开放的协议&lt;/strong&gt;：CodeGeeX2-6B 权重对学术研究完全开放，填写&lt;a href=&#34;https://open.bigmodel.cn/mla/form?mcode=CodeGeeX2-6B&#34;&gt;登记表&lt;/a&gt;申请商业使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AI编程助手&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/resources/codegeex_demo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;我们开发了支持 VS Code、 IntelliJ IDEA、PyCharm、GoLand、WebStorm、Android Studio 等IDE的 CodeGeeX 插件。在插件中，可以更直接地体验到 CodeGeeX2 模型在代码生成与补全、添加注释、代码翻译及技术问答方面的能力为开发效率带来的提升。欢迎在IDE中下载 CodeGeeX 插件获得更加全面的AI编程体验，详情见&lt;a href=&#34;https://codegeex.cn/&#34;&gt;CodeGeeX主页&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;使用&lt;code&gt;transformers&lt;/code&gt;快速调用&lt;a href=&#34;https://huggingface.co/THUDM/codegeex2-6b&#34;&gt;CodeGeeX2-6B&lt;/a&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModel&#xA;tokenizer = AutoTokenizer.from_pretrained(&#34;THUDM/codegeex2-6b&#34;, trust_remote_code=True)&#xA;model = AutoModel.from_pretrained(&#34;THUDM/codegeex2-6b&#34;, trust_remote_code=True, device=&#39;cuda&#39;)&#xA;model = model.eval()&#xA;&#xA;# remember adding a language tag for better performance&#xA;prompt = &#34;# language: python\n# write a bubble sort function\n&#34;&#xA;inputs = tokenizer.encode(prompt, return_tensors=&#34;pt&#34;).to(model.device)&#xA;outputs = model.generate(inputs, max_length=256, top_k=1)&#xA;response = tokenizer.decode(outputs[0])&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; print(response)&#xA;# language: python&#xA;# write a bubble sort function&#xA;&#xA;&#xA;def bubble_sort(list):&#xA;    for i in range(len(list) - 1):&#xA;        for j in range(len(list) - 1):&#xA;            if list[j] &amp;gt; list[j + 1]:&#xA;                list[j], list[j + 1] = list[j + 1], list[j]&#xA;    return list&#xA;&#xA;&#xA;print(bubble_sort([5, 2, 4, 6, 1, 3]))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动 Gradio DEMO：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python ./demo/run_demo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;❗️请注意：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CodeGeeX2-6B 是一个基座代码生成模型，不具备聊天能力。请前往插件中体验更全面的 Ask CodeGeeX 聊天功能。&lt;/li&gt; &#xA; &lt;li&gt;在使用 CodeGeeX2-6B 的补全功能时，输入prompt需要遵循特定的格式以获得最好的效果。比如需要在开头加入编程语言标签（&lt;code&gt;# language: Python&lt;/code&gt;，请查看&lt;a href=&#34;https://github.com/THUDM/CodeGeeX2/raw/main/evaluation/utils.py#L14&#34;&gt;完整语言列表&lt;/a&gt;），以注释的形式写prompt等。参考&lt;code&gt;run_demo.py&lt;/code&gt;中的处理。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;代码能力评测&lt;/h2&gt; &#xA;&lt;p&gt;CodeGeeX2 作为一个多语言代码生成基座模型，代码能力较上一代大幅提升，以下是在 HumanEval，HumanEval-X, DS1000 基准上的评测结果（评价指标 Pass@k 定义与&lt;a href=&#34;https://arxiv.org/abs/2303.17568&#34;&gt;论文&lt;/a&gt;中一致）：&lt;/p&gt; &#xA;&lt;h3&gt;HumanEval (Pass@1,10,100)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Pass@1&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Pass@10&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Pass@100&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGen-16B-multi&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;34.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGeeX-13B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;39.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60.9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Codex-12B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;46.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;72.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeT5Plus-16B-mono&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;76.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Code-Cushman-001&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;77.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LLaMA-65B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;79.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LLaMA2-70B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGen2.5-7B-mono&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;58.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;82.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StarCoder-15B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;61.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;84.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;CodeGeeX2-6B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;35.9&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;62.6&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;88.3&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pass@1&lt;/strong&gt; 使用 &lt;code&gt;n=20, t=0.2, top_p=0.95&lt;/code&gt;；&lt;strong&gt;Pass@10,Pass@100&lt;/strong&gt; 使用 &lt;code&gt;n=200, t=0.8, top_p=0.95&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;HumanEval-X (Pass@1)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Overall&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGen-16B-multi&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGeeX-13B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Replit-code-v1-3B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGen2.5-7B-multi&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;20.1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StarCoder-15B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;35.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;31.5&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;33.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27.9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;CodeGeeX2-6B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;35.9&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;29.3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;22.5&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;28.1&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pass@1&lt;/strong&gt; 使用 &lt;code&gt;n=20, t=0.2, top_p=0.95&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;以上结果可使用脚本&lt;code&gt;scripts/run_humanevalx.sh&lt;/code&gt;复现。环境配置和说明参见&lt;a href=&#34;https://github.com/THUDM/CodeGeeX/raw/main/codegeex/benchmark/README_zh.md&#34;&gt;评测环境&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;DS1000 (Pass@1)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Matplotlib&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Numpy&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Pandas&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Pytorch&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;SciPy&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Scikit-learn&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Overall&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;# Samples&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;155&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;220&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;291&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;68&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;106&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;115&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGen-16B-Mono&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;code-cushman-001&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Codex-001&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;41.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;CodeGeeX2-6B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StarCoder-15B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Codex-002&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;57.0&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;43.1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;26.5&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;41.8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;31.8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;44.8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;39.3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;39.2&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pass@1&lt;/strong&gt; 使用 &lt;code&gt;n=40, t=0.2, top_p=0.5&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;以上结果可使用&lt;a href=&#34;https://github.com/HKUNLP/DS-1000.git&#34;&gt;DS1000评测代码&lt;/a&gt;复现。&lt;/p&gt; &#xA;&lt;h2&gt;量化推理性能&lt;/h2&gt; &#xA;&lt;p&gt;CodeGeeX2 与上一代相比，对部署更加友好。得益于使用 Multi-Query Attention 和 Flash Attention，推理速度更快，且量化后仅需6GB显存即可运行：&lt;/p&gt; &#xA;&lt;h3&gt;量化&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FP16/BF16&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;INT8&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;INT4&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGeeX-13B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.9 GB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.7 GB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;CodeGeeX2-6B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.1 GB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.2 GB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;基于 PyTorch 2.0 测试，利用&lt;code&gt;torch.nn.functional.scaled_dot_product_attention&lt;/code&gt;实现高效的 Attention 计算。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;推理&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;推理速度 (字符/秒)&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CodeGeeX-13B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;CodeGeeX2-6B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;94&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;batch_size=1, max_length=2048&lt;/code&gt;，均使用加速框架，测试硬件为&lt;code&gt;GeForce RTX-3090&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;协议&lt;/h2&gt; &#xA;&lt;p&gt;本仓库的代码依照 &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache-2.0&lt;/a&gt; 协议开源，模型的权重的使用则需要遵循 &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/CodeGeeX2/main/MODEL_LICENSE&#34;&gt;Model License&lt;/a&gt;。CodeGeeX2-6B 权重对学术研究完全开放，填写&lt;a href=&#34;https://open.bigmodel.cn/mla/form?mcode=CodeGeeX2-6B&#34;&gt;登记表&lt;/a&gt;申请商业使用。&lt;/p&gt; &#xA;&lt;h2&gt;引用&lt;/h2&gt; &#xA;&lt;p&gt;如果觉得我们的工作有帮助，欢迎引用以下论文：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{zheng2023codegeex,&#xA;      title={CodeGeeX: A Pre-Trained Model for Code Generation with Multilingual Evaluations on HumanEval-X},&#xA;      author={Qinkai Zheng and Xiao Xia and Xu Zou and Yuxiao Dong and Shan Wang and Yufei Xue and Zihan Wang and Lei Shen and Andi Wang and Yang Li and Teng Su and Zhilin Yang and Jie Tang},&#xA;      booktitle={KDD},&#xA;      year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>