<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-14T01:30:58Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/googletest</title>
    <updated>2022-07-14T01:30:58Z</updated>
    <id>tag:github.com,2022-07-14:/google/googletest</id>
    <link href="https://github.com/google/googletest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoogleTest - Google Testing and Mocking Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoogleTest&lt;/h1&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;h4&gt;Live at Head&lt;/h4&gt; &#xA;&lt;p&gt;GoogleTest now follows the &lt;a href=&#34;https://abseil.io/about/philosophy#upgrade-support&#34;&gt;Abseil Live at Head philosophy&lt;/a&gt;. We recommend &lt;a href=&#34;https://github.com/abseil/abseil-cpp/raw/master/FAQ.md#what-is-live-at-head-and-how-do-i-do-it&#34;&gt;updating to the latest commit in the &lt;code&gt;main&lt;/code&gt; branch as often as possible&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation Updates&lt;/h4&gt; &#xA;&lt;p&gt;Our documentation is now live on GitHub Pages at &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;https://google.github.io/googletest/&lt;/a&gt;. We recommend browsing the documentation on GitHub Pages rather than directly in the repository.&lt;/p&gt; &#xA;&lt;h4&gt;Release 1.12.1&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/googletest/releases/tag/release-1.12.1&#34;&gt;Release 1.12.1&lt;/a&gt; is now available.&lt;/p&gt; &#xA;&lt;p&gt;The 1.12.x branch will be the last to support C++11. Future releases will require at least C++14.&lt;/p&gt; &#xA;&lt;h4&gt;Coming Soon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are planning to take a dependency on &lt;a href=&#34;https://github.com/abseil/abseil-cpp&#34;&gt;Abseil&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;More documentation improvements are planned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Welcome to &lt;strong&gt;GoogleTest&lt;/strong&gt;, Google&#39;s C++ test framework!&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;GoogleTest User&#39;s Guide&lt;/a&gt; for documentation. We recommend starting with the &lt;a href=&#34;https://google.github.io/googletest/primer.html&#34;&gt;GoogleTest Primer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information about building GoogleTest can be found at &lt;a href=&#34;https://raw.githubusercontent.com/google/googletest/main/googletest/README.md&#34;&gt;googletest/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/XUnit&#34;&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt; &#xA; &lt;li&gt;Test discovery.&lt;/li&gt; &#xA; &lt;li&gt;A rich set of assertions.&lt;/li&gt; &#xA; &lt;li&gt;User-defined assertions.&lt;/li&gt; &#xA; &lt;li&gt;Death tests.&lt;/li&gt; &#xA; &lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt; &#xA; &lt;li&gt;Value-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Type-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Various options for running the tests.&lt;/li&gt; &#xA; &lt;li&gt;XML test report generation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;GoogleTest requires a codebase and compiler compliant with the C++14 standard or newer.&lt;/p&gt; &#xA;&lt;p&gt;The GoogleTest code is officially supported on the following platforms. Operating systems or tools not listed below are community-supported. For community-supported platforms, patches that do not complicate the code may be considered.&lt;/p&gt; &#xA;&lt;p&gt;If you notice any problems on your platform, please file an issue on the &lt;a href=&#34;https://github.com/google/googletest/issues&#34;&gt;GoogleTest GitHub Issue Tracker&lt;/a&gt;. Pull requests containing fixes are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Operating Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compilers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc 5.0+&lt;/li&gt; &#xA; &lt;li&gt;clang 5.0+&lt;/li&gt; &#xA; &lt;li&gt;MSVC 2015+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS users:&lt;/strong&gt; Xcode 9.3+ provides clang 5.0+.&lt;/p&gt; &#xA;&lt;h3&gt;Build Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Bazel is the build system used by the team internally and in tests. CMake is supported on a best-effort basis and by the community.&lt;/p&gt; &#xA;&lt;h2&gt;Who Is Using GoogleTest?&lt;/h2&gt; &#xA;&lt;p&gt;In addition to many internal projects at Google, GoogleTest is also used by the following notable projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser and Chrome OS).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://llvm.org/&#34;&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/protobuf&#34;&gt;Protocol Buffers&lt;/a&gt;, Google&#39;s data interchange format.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://opencv.org/&#34;&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Open Source Projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nholthaus/gtest-runner&#34;&gt;GTest Runner&lt;/a&gt; is a Qt5 based automated test-runner and Graphical User Interface with powerful features for Windows and Linux platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ospector/gtest-gbar&#34;&gt;GoogleTest UI&lt;/a&gt; is a test runner that runs your test binary, allows you to track its progress via a progress bar, and displays a list of test failures. Clicking on one shows failure text. GoogleTest UI is written in C#.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kinow/gtest-tap-listener&#34;&gt;GTest TAP Listener&lt;/a&gt; is an event listener for GoogleTest that implements the &lt;a href=&#34;https://en.wikipedia.org/wiki/Test_Anything_Protocol&#34;&gt;TAP protocol&lt;/a&gt; for test result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/gtest-parallel&#34;&gt;gtest-parallel&lt;/a&gt; is a test runner that runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter&#34;&gt;GoogleTest Adapter&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matepek/vscode-catch2-test-adapter&#34;&gt;C++ TestMate&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornichon/&#34;&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser that generates stub code for GoogleTest.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Changes&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/google/googletest/raw/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to contribute to this project.&lt;/p&gt; &#xA;&lt;p&gt;Happy testing!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>streamxhub/streamx</title>
    <updated>2022-07-14T01:30:58Z</updated>
    <id>tag:github.com,2022-07-14:/streamxhub/streamx</id>
    <link href="https://github.com/streamxhub/streamx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make stream processing easier! Flink &amp; Spark development scaffold, The original intention of StreamX is to make the development of Flink easier. StreamX focuses on the management of development phases and tasks. Our ultimate goal is to build a one-stop big data solution integrating stream processing, batch processing, data warehouse and data laker.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt; &lt;a href=&#34;http://www.streamxhub.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://user-images.githubusercontent.com/13284744/166133644-ed3cc4f5-aae5-45bc-bfbe-29c540612446.png&#34; alt=&#34;StreamX logo&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA; &lt;strong style=&#34;font-size: 1.5rem&#34;&gt;Make stream processing easier!!!&lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://tokei.rs/b1/github/streamxhub/streamx&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/streamxhub/streamx.svg?sanitize=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/streamxhub/streamx&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/streamxhub/streamx&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/count/streamxhub/streamx&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.streamxhub.com&#34;&gt;Official Website&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamxhub/streamx/dev/#&#34;&gt;Change Log&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;https://www.streamxhub.com/docs/intro&#34;&gt;Document&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/streamxhub/streamx/dev/README_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h1&gt;StreamX&lt;/h1&gt; &#xA;&lt;p&gt;Make stream processing easier&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A magical framework that make stream processing easier!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🚀 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The original intention of &lt;code&gt;StreamX&lt;/code&gt; is to make stream processing easier. &lt;code&gt;StreamX&lt;/code&gt; focuses on the management of development phases and tasks. Our ultimate goal is to build a one-stop big data solution integrating stream processing, batch processing, data warehouse and data laker.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://assets.streamxhub.com/streamx-video.mp4&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/166101616-50a44d38-3ffb-4296-8a77-92f76a4c21b5.png&#34; alt=&#34;StreamX video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎉 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scaffolding&lt;/li&gt; &#xA; &lt;li&gt;Out-of-the-box connectors&lt;/li&gt; &#xA; &lt;li&gt;Support maven compilation&lt;/li&gt; &#xA; &lt;li&gt;Configuration&lt;/li&gt; &#xA; &lt;li&gt;Multi version flink support(1.12.x,1.13.x,1.14.x, 1.15.x)&lt;/li&gt; &#xA; &lt;li&gt;Scala 2.11 / 2.12 support&lt;/li&gt; &#xA; &lt;li&gt;restapi support.&lt;/li&gt; &#xA; &lt;li&gt;All Flink deployment mode support(&lt;code&gt;Remote&lt;/code&gt;/&lt;code&gt;K8s-Native-Application&lt;/code&gt;/&lt;code&gt;K8s-Native-Session&lt;/code&gt;/&lt;code&gt;YARN-Application&lt;/code&gt;/&lt;code&gt;YARN-Per-Job&lt;/code&gt;/&lt;code&gt;YARN-Session&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;savepoint&lt;/code&gt;, resume from &lt;code&gt;savepoint&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Various companies and organizations use &lt;code&gt;StreamX&lt;/code&gt; for production and commercial products.&lt;/li&gt; &#xA; &lt;li&gt;Flame graph&lt;/li&gt; &#xA; &lt;li&gt;Notebook&lt;/li&gt; &#xA; &lt;li&gt;Project configuration and dependency version management&lt;/li&gt; &#xA; &lt;li&gt;Task backup and rollback&lt;/li&gt; &#xA; &lt;li&gt;Manage dependencies&lt;/li&gt; &#xA; &lt;li&gt;UDF&lt;/li&gt; &#xA; &lt;li&gt;Flink SQL Connector&lt;/li&gt; &#xA; &lt;li&gt;Flink SQL WebIDE&lt;/li&gt; &#xA; &lt;li&gt;Catalog、Hive&lt;/li&gt; &#xA; &lt;li&gt;Full support from task &lt;code&gt;development&lt;/code&gt; to &lt;code&gt;deployment&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746863-856ef1cd-fa0e-4010-b359-c16ca2ad2fb7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746864-d807d728-423f-41c3-b90d-45ce2c21936b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏳‍🌈 Components&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Streamx&lt;/code&gt; consists of three parts,&lt;code&gt;streamx-core&lt;/code&gt;,&lt;code&gt;streamx-pump&lt;/code&gt; and &lt;code&gt;streamx-console&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746859-f6a4dedc-ec42-4ed5-933b-c27d559b9988.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1️⃣ streamx-core&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;streamx-core&lt;/code&gt; is a framework that focuses on coding, standardizes configuration, and develops in a way that is better than configuration by convention. Also it provides a development-time &lt;code&gt;RunTime Content&lt;/code&gt; and a series of &lt;code&gt;Connector&lt;/code&gt; out of the box. At the same time, it extends &lt;code&gt;DataStream&lt;/code&gt; some methods, and integrates &lt;code&gt;DataStream&lt;/code&gt; and &lt;code&gt;Flink sql&lt;/code&gt; api to simplify tedious operations, focus on the business itself, and improve development efficiency and development experience.&lt;/p&gt; &#xA;&lt;h3&gt;2️⃣ streamx-pump&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;streamx-pump&lt;/code&gt; is a planned data extraction component, similar to &lt;code&gt;flinkx&lt;/code&gt;. Based on the various &lt;code&gt;connector&lt;/code&gt; provided in &lt;code&gt;streamx-core&lt;/code&gt;, the purpose is to create a convenient, fast, out-of-the-box real-time data extraction and migration component for big data, and it will be integrated into the &lt;code&gt;streamx-console&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3️⃣ streamx-console&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;streamx-console&lt;/code&gt; is a stream processing and &lt;code&gt;Low Code&lt;/code&gt; platform, capable of managing &lt;code&gt;Flink&lt;/code&gt; tasks, integrating project compilation, deploy, configuration, startup, &lt;code&gt;savepoint&lt;/code&gt;, &lt;code&gt;flame graph&lt;/code&gt;, &lt;code&gt;Flink SQL&lt;/code&gt;, monitoring and many other features. Simplify the daily operation and maintenance of the &lt;code&gt;Flink&lt;/code&gt; task.&lt;/p&gt; &#xA;&lt;p&gt;Our ultimate goal is to build a one-stop big data solution integrating stream processing, batch processing, data warehouse and data laker.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://flink.apache.org&#34;&gt;Apache Flink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hadoop.apache.org&#34;&gt;Apache YARN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spring.io/projects/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mybatis.org&#34;&gt;Mybatis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mp.baomidou.com&#34;&gt;Mybatis-Plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.brendangregg.com/FlameGraphs&#34;&gt;Flame Graph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber-common/jvm-profiler&#34;&gt;JVM-Profiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuepress.vuejs.org/&#34;&gt;VuePress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://antdv.com/&#34;&gt;Ant Design of Vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.antdv&#34;&gt;ANTD PRO VUE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xtermjs.org/&#34;&gt;xterm.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microsoft.github.io/monaco-editor/&#34;&gt;Monaco Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks to the above excellent open source projects and many outstanding open source projects that are not mentioned, for giving the greatest respect,Thanks to &lt;a href=&#34;http://flink.apache.org&#34;&gt;Apache Flink&lt;/a&gt; for creating a great project! Thanks to the &lt;a href=&#34;http://zeppelin.apache.org&#34;&gt;Apache Zeppelin&lt;/a&gt; project for the early inspiration.&lt;/p&gt; &#xA;&lt;h3&gt;🚀 Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;click &lt;a href=&#34;http://www.streamxhub.com/zh-CN/docs/intro/&#34;&gt;Document&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;💋 our users&lt;/h2&gt; &#xA;&lt;p&gt;Various companies and organizations use StreamX for research, production and commercial products. Are you using this project ? &lt;a href=&#34;https://github.com/streamxhub/streamx/issues/163&#34;&gt;you can add your company&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/160220085-11f1e011-e7a0-421f-9294-c14213c0bc22.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏆 Our honor&lt;/h2&gt; &#xA;&lt;p&gt;We have received some precious honors, which belong to everyone who contributes to StreamX, Thank you !&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746797-85ebf7b4-4105-4b5b-a023-0689c7fd1d2d.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/174478150-78e078b2-739f-49a3-8d49-d4763a01268f.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/streamxhub/streamx/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can submit any ideas as &lt;a href=&#34;https://github.com/streamxhub/streamx/pulls&#34;&gt;pull requests&lt;/a&gt; or as &lt;a href=&#34;https://github.com/streamxhub/streamx/issues/new/choose&#34;&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re new to posting issues, we ask that you read &lt;a href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;&gt;&lt;em&gt;How To Ask Questions The Smart Way&lt;/em&gt;&lt;/a&gt; (&lt;strong&gt;This guide does not provide actual support services for this project!&lt;/strong&gt;), &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/bugs.html&#34;&gt;How to Report Bugs Effectively&lt;/a&gt; prior to posting. Well written bug reports help us help you!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to StreamX!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/streamxhub/streamx/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=streamxhub/streamx&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;⏰ Contributor Over Time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git-contributor.com?chart=contributorOverTime&amp;amp;repo=streamxhub/streamx&#34;&gt;&lt;img src=&#34;https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&amp;amp;repo=streamxhub/streamx&#34; alt=&#34;Contributor Over Time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💰 Donation&lt;/h2&gt; &#xA;&lt;p&gt;Are you &lt;strong&gt;enjoying this project&lt;/strong&gt; ? 👋&lt;/p&gt; &#xA;&lt;p&gt;If you like this framework, and appreciate the work done for it to exist, you can still support the developers by donating ☀️ 👊&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;WeChat Pay&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Alipay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746857-35e7f823-7160-4505-be3f-e748a2d0a233.png&#34; alt=&#34;Buy Me A Coffee&#34; width=&#34;150&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13284744/142746860-e14a8183-d973-44ca-83bf-e5f9d4da1510.png&#34; alt=&#34;Buy Me A Coffee&#34; width=&#34;150&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🏆 Our sponsors (Coffee Suppliers)&lt;/h2&gt; &#xA;&lt;h3&gt;💜 Monthly Supplier&lt;/h3&gt; &#xA;&lt;p&gt;Welcome individuals and enterprises to sponsor, your support will help us better develop the project&lt;/p&gt; &#xA;&lt;h3&gt;🥇 Gold Supplier&lt;/h3&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/wolfboys&#34; alt=&#34;benjobs&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13284744?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Kitming25&#34; alt=&#34;Kitming25&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11773106?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Narcasserun&#34; alt=&#34;Narcasserun&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/39329477?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;🥈 Platinum Supplier&lt;/h3&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/lianxiaobao&#34; alt=&#34;lianxiaobao&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36557317?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/su94998&#34; alt=&#34;su94998&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/33316193?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;🥈 Silver Supplier&lt;/h3&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/CrazyJugger&#34; alt=&#34;leohantaoluo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30514978?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhaizhirui&#34; alt=&#34;zhaizhirui&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/39609947?v=4&#34; height=&#34;50&#34; width=&#34;50&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.jetbrains.com/?from=streamx&#34;&gt;JetBrains&lt;/a&gt; for supporting us free open source licenses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=streamx&#34;&gt;&lt;img src=&#34;https://img.alicdn.com/tfs/TB1sSomo.z1gK0jSZLeXXb9kVXa-120-130.svg?sanitize=true&#34; alt=&#34;JetBrains&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🏅 Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;💬 Join us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamxhub/streamx/dev/(http://www.streamxhub.com/#/)&#34;&gt;StreamX&lt;/a&gt; enters the high-speed development stage, we need your contribution.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://starchart.cc/streamxhub/streamx.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/13284744/152627523-de455a4d-97c7-46cd-815f-3328a3fe3663.png&#34; alt=&#34;Join the Group&#34; height=&#34;300px&#34;&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>unifyai/ivy</title>
    <updated>2022-07-14T01:30:58Z</updated>
    <id>tag:github.com,2022-07-14:/unifyai/ivy</id>
    <link href="https://github.com/unifyai/ivy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Unified Machine Learning Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/unifyai/unifyai.github.io/raw/master/img/externally_linked/repos/ivy/logo.png?raw=true&#34;&gt;https://github.com/unifyai/unifyai.github.io/blob/master/img/externally_linked/repos/ivy/logo.png?raw=true&lt;/a&gt; :width: 100%&lt;/p&gt; &#xA;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;br/&amp;gt;&#xA;&amp;lt;div align=&#34;center&#34;&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/issues&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/issues/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/network/members&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/forks/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/stargazers&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/stars/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/pulls&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://pypi.org/project/ivy-core&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://badge.fury.io/py/ivy-core.svg&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/actions?query=workflow%3Adocs&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/workflow/status/unifyai/ivy/docs?label=docs&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/actions?query=workflow%3Atest-ivy&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/workflow/status/unifyai/ivy/test-ivy?label=tests&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://discord.gg/G4aR9Q7DTN&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/discord/799879767196958751?color=blue&amp;amp;label=%20&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&amp;lt;br clear=&#34;all&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;We’re on a mission to unify all ML frameworks 💥 + automate code conversions 🔄. pip install ivy-core 🚀, join our growing community 😊, and lets-unify.ai! 🦾&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&#34;display: block;&#34; align=&#34;center&#34;&amp;gt;&#xA;    &amp;lt;img width=&#34;3%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://jax.readthedocs.io&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/jax_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://www.tensorflow.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/tensorflow_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://mxnet.apache.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/mxnet_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://pytorch.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/pytorch_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://numpy.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/numpy_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. _docs: &lt;a href=&#34;https://lets-unify.ai/ivy&#34;&gt;https://lets-unify.ai/ivy&lt;/a&gt; .. _Colabs: &lt;a href=&#34;https://drive.google.com/drive/folders/16Oeu25GrQsEJh8w2B0kSrD93w4cWjJAM?usp=sharing&#34;&gt;https://drive.google.com/drive/folders/16Oeu25GrQsEJh8w2B0kSrD93w4cWjJAM?usp=sharing&lt;/a&gt; .. _&lt;code&gt;contributor guide&lt;/code&gt;: &lt;a href=&#34;https://lets-unify.ai/ivy/contributing.html&#34;&gt;https://lets-unify.ai/ivy/contributing.html&lt;/a&gt; .. _&lt;code&gt;open tasks&lt;/code&gt;: &lt;a href=&#34;https://lets-unify.ai/ivy/contributing/4_open_tasks.html&#34;&gt;https://lets-unify.ai/ivy/contributing/4_open_tasks.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Overview&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Quick Start&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Background&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Design&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Extensions&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Roadmap&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Contributing&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Ivy is an ML framework that currently supports JAX, TensorFlow, PyTorch, MXNet, and Numpy. We’re very excited for you to try it out!&lt;/p&gt; &#xA;&lt;p&gt;Next on our roadmap is to support automatic code conversions between all frameworks 🔄, and add instant multi-framework support for all open-source libraries with only a few lines of code changed! Read on to learn more 😊&lt;/p&gt; &#xA;&lt;p&gt;The docs are split into a number of sub-pages explaining different aspects of why we created Ivy, how to use it, what we’ve got planned on our roadmap, and how to contribute! Click on the sub-headings below to check out these pages!&lt;/p&gt; &#xA;&lt;p&gt;We use 🚧 to indicate that the feature being discussed is in development. We use ✅ to indicate that it is already implemented!&lt;/p&gt; &#xA;&lt;p&gt;Check out the docs_ for more info, and check out our Google Colabs_ for some interactive demos!&lt;/p&gt; &#xA;&lt;p&gt;🚨 Ivy is still at a relatively early stage of development. Expect breaking changes and sharp edges until we release version 1.2.0 in the next few weeks!&lt;/p&gt; &#xA;&lt;p&gt;If you would like to contribute, please check out our &lt;code&gt;contributor guide&lt;/code&gt;&lt;em&gt;, and take a look at the &lt;code&gt;open tasks&lt;/code&gt;&lt;/em&gt; if you&#39;d like to dive straight in! 🧑‍💻&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to ask us questions, feel free to join in on any of our weekly &#34;Ask us Anything!&#34; online sessions! To see when the next one will be, check out the Events tab at the top left our &lt;code&gt;discord server &amp;lt;https://discord.gg/G4aR9Q7DTN&amp;gt;&lt;/code&gt;_ 🙂&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Ivy can be installed like so: &lt;code&gt;pip install ivy-core&lt;/code&gt; You can immediately use Ivy to train a neural network, using your favorite framework in the background, like so:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import ivy&#xA;&#xA;class MyModel(ivy.Module):&#xA;    def __init__(self):&#xA;        self.linear0 = ivy.Linear(3, 64)&#xA;        self.linear1 = ivy.Linear(64, 1)&#xA;        ivy.Module.__init__(self)&#xA;&#xA;    def _forward(self, x):&#xA;        x = ivy.relu(self.linear0(x))&#xA;        return ivy.sigmoid(self.linear1(x))&#xA;&#xA;ivy.set_backend(&#39;torch&#39;)  # change to any backend!&#xA;model = MyModel()&#xA;optimizer = ivy.Adam(1e-4)&#xA;x_in = ivy.array([1., 2., 3.])&#xA;target = ivy.array([0.])&#xA;&#xA;def loss_fn(v):&#xA;    out = model(x_in, v=v)&#xA;    return ivy.mean((out - target)**2)&#xA;&#xA;for step in range(100):&#xA;    loss, grads = ivy.execute_with_gradients(loss_fn, model.v)&#xA;    model.v = optimizer.step(model.v, grads)&#xA;    print(&#39;step {} loss {}&#39;.format(step, ivy.to_numpy(loss).item()))&#xA;&#xA;print(&#39;Finished training!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example uses PyTorch as a backend framework, but the backend can easily be changed to your favorite frameworks, such as TensorFlow, JAX, or MXNet.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Framework Agnostic Functions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the example below we show how Ivy&#39;s concatenation function is compatible with tensors from different frameworks. This is the same for ALL Ivy functions. They can accept tensors from any framework and return the correct result.&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jax.numpy as jnp&#xA;import tensorflow as tf&#xA;import numpy as np&#xA;import mxnet as mx&#xA;import torch&#xA;&#xA;import ivy&#xA;&#xA;jax_concatted   = ivy.concat((jnp.ones((1,)), jnp.ones((1,))), -1)&#xA;tf_concatted    = ivy.concat((tf.ones((1,)), tf.ones((1,))), -1)&#xA;np_concatted    = ivy.concat((np.ones((1,)), np.ones((1,))), -1)&#xA;mx_concatted    = ivy.concat((mx.nd.ones((1,)), mx.nd.ones((1,))), -1)&#xA;torch_concatted = ivy.concat((torch.ones((1,)), torch.ones((1,))), -1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see a list of all Ivy methods, type :code:&lt;code&gt;ivy.&lt;/code&gt; into a python command prompt and press :code:&lt;code&gt;tab&lt;/code&gt;. You should then see output like the following:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;ivy.Container( ivy.general ivy.reduce_min( ivy.abs( ivy.get_device( ivy.reduce_prod( ivy.acos( ivy.get_num_dims( ivy.reduce_sum( ivy.acosh( ivy.gradient_descent_update( ivy.reductions ivy.activations ivy.gradient_image( ivy.relu( ivy.arange( ivy.gradients ivy.reshape( ivy.argmax( ivy.identity( ivy.round( ivy.argmin( ivy.image ivy.scatter_nd( ivy.array( ivy.indices_where( ivy.seed( ivy.asin( ivy.inv( ivy.shape( ivy.asinh( ivy.layers ivy.shuffle( ivy.atan( ivy.leaky_relu( ivy.sigmoid( ivy.atan2( ivy.linalg ivy.sin( ivy.atanh( ivy.linear( ivy.sinh( ivy.bilinear_resample( ivy.linspace( ivy.softmax( ivy.cast( ivy.log( ivy.softplus( ivy.ceil( ivy.logic ivy.split( ivy.clip( ivy.logical_and( ivy.squeeze( ivy.concatenate( ivy.logical_not( ivy.stack(&lt;br&gt; ivy.container ivy.logical_or( ivy.stack_images( ivy.conv2d( ivy.math ivy.stop_gradient( ivy.core ivy.matmul( ivy.svd( ivy.cos( ivy.maximum( ivy.tan( ivy.cosh( ivy.minimum( ivy.tanh( ivy.cross( ivy.neural_net ivy.tile( ivy.cumsum( ivy.nn ivy.to_list( ivy.depthwise_conv2d( ivy.norm( ivy.to_numpy( ivy.dtype( ivy.one_hot( ivy.transpose( ivy.execute_with_gradients( ivy.ones( ivy.unstack( ivy.exp( ivy.ones_like( ivy.variable( ivy.expand_dims( ivy.pinv( ivy.vector_to_skew_symmetric_matrix( ivy.flip( ivy.randint( ivy.verbosity ivy.floor( ivy.random ivy.where( ivy.floormod( ivy.random_uniform( ivy.zero_pad( ivy.backend_handler ivy.reduce_max( ivy.zeros( ivy.gather_nd( ivy.reduce_mean( ivy.zeros_like(&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;ML Explosion &amp;lt;https://lets-unify.ai/ivy/background/ml_explosion.html&amp;gt;&lt;/code&gt;_ | A huge number of ML tools have exploded onto the scene! | | (b) &lt;code&gt;Why Unify? &amp;lt;https://lets-unify.ai/ivy/background/why_unify.html&amp;gt;&lt;/code&gt;_ | Why should we try to unify them? | | (c) &lt;code&gt;Standardization &amp;lt;https://lets-unify.ai/ivy/background/standardization.html&amp;gt;&lt;/code&gt;_ | We’re collaborating with The &lt;code&gt;Consortium for Python Data API Standards &amp;lt;https://data-apis.org&amp;gt;&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;| Ivy can fulfill two distinct purposes: | | 1. Serve as a transpiler between frameworks 🚧 | 2. Serve as a new ML framework with multi-framework support ✅ | | The Ivy codebase can then be split into three categories, and can be further split into 8 distinct submodules, each of which falls into one of these three categories as follows:&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/unifyai/unifyai.github.io/raw/master/img/externally_linked/submodule_dependency_graph.png?raw=true&#34;&gt;https://github.com/unifyai/unifyai.github.io/blob/master/img/externally_linked/submodule_dependency_graph.png?raw=true&lt;/a&gt; :align: center :width: 100%&lt;/p&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;Building Blocks &amp;lt;https://lets-unify.ai/ivy/design/building_blocks.html&amp;gt;&lt;/code&gt;_ | Back-end functional APIs ✅ | Ivy functional API ✅ | Framework Handler ✅ | Ivy Compiler 🚧 | | (b) &lt;code&gt;Ivy as a Transpiler &amp;lt;https://lets-unify.ai/ivy/design/ivy_as_a_transpiler.html&amp;gt;&lt;/code&gt;_ | Front-end functional APIs 🚧 | | (c) &lt;code&gt;Ivy as a Framework &amp;lt;https://lets-unify.ai/ivy/design/ivy_as_a_framework.html&amp;gt;&lt;/code&gt;_ | Ivy stateful API ✅ | Ivy Container ✅ | Ivy Array 🚧&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;Applied Libraries &amp;lt;https://lets-unify.ai/ivy/extensions/applied_libraries.html&amp;gt;&lt;/code&gt;_ ✅ | Ivy libraries in mechanics, vision, robotics, memory, and other areas | | (b) &lt;strong&gt;Builder [page coming soon!]&lt;/strong&gt; ✅ | :code:&lt;code&gt;ivy.Trainer&lt;/code&gt;, :code:&lt;code&gt;ivy.Dataset&lt;/code&gt;, :code:&lt;code&gt;ivy.Dataloader&lt;/code&gt; and other helpful classes and functions for creating training workflows in only a few lines of code&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;| We strongly welcome and encourage contributions from the community as we take on this important journey towards ML framework unification. These posts will explain exactly how you can get involved 🙂 | | (a) &lt;strong&gt;Standardize [page coming soon!]&lt;/strong&gt; 🚧 | Align Ivy with the &lt;code&gt;Consortium for Python Data API Standards &amp;lt;https://data-apis.org&amp;gt;&lt;/code&gt;_ | | (b) &lt;strong&gt;Front-Ends [page coming soon!]&lt;/strong&gt; 🚧 | Create backend-specific front-ends for each supported ML framework | | (c) &lt;strong&gt;Transpiler [page coming soon!]&lt;/strong&gt; 🚧 | Verify code conversions work for each back-end and front-end combo | | (d) &lt;strong&gt;Ecosystem [page coming soon!]&lt;/strong&gt; 🚧 | Add multi-framework support to popular repos with a few lines changed&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join our community as a code contributor, and help accelerate our journey to unify all ML frameworks! Find out more in our &lt;code&gt;Contributing &amp;lt;https://lets-unify.ai/ivy/contributing.html&amp;gt;&lt;/code&gt;_ guide!&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{lenton2021ivy,&#xA;  title={Ivy: Templated deep learning for inter-framework portability},&#xA;  author={Lenton, Daniel and Pardo, Fabio and Falck, Fabian and James, Stephen and Clark, Ronald},&#xA;  journal={arXiv preprint arXiv:2102.02886},&#xA;  year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>