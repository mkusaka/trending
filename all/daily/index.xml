<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-17T01:50:20Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tsoding/nob.h</title>
    <updated>2025-08-17T01:50:20Z</updated>
    <id>tag:github.com,2025-08-17:/tsoding/nob.h</id>
    <link href="https://github.com/tsoding/nob.h" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Header only library for writing build recipes in C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nob.h - Next generation of the NoBuild&lt;/h1&gt; &#xA;&lt;p&gt;This library is the next generation of the NoBuild idea. &#34;nob&#34; stands for &#34;nobuild&#34;, but it&#39;s shorter and more suitable as a prefix for a library.&lt;/p&gt; &#xA;&lt;p&gt;For my previous iteration on this idea see &lt;a href=&#34;https://github.com/tsoding/nobuild&#34;&gt;https://github.com/tsoding/nobuild&lt;/a&gt;, but I do not recommend to use it.&lt;/p&gt; &#xA;&lt;h2&gt;NoBuild Idea&lt;/h2&gt; &#xA;&lt;p&gt;The idea is that you should not need anything but a C compiler to build a C project. No make, no cmake, no shell, no cmd, no PowerShell etc. Only C compiler. So with the C compiler you bootstrap your build system and then you use the build system to build everything else.&lt;/p&gt; &#xA;&lt;h2&gt;This is an Experimental Project&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m not sure if this is even a good idea myself. This is why I&#39;m implementing it. This is a research project. I&#39;m not making any claims about suitability of this approach to any project.&lt;/p&gt; &#xA;&lt;p&gt;Right now I&#39;m actively using nob in a variety of my C projects at &lt;a href=&#34;https://github.com/tsoding/&#34;&gt;https://github.com/tsoding/&lt;/a&gt;. It works quite well for me there.&lt;/p&gt; &#xA;&lt;h2&gt;It&#39;s likely Not Suitable for Your Project&lt;/h2&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://cmake.org/&#34;&gt;cmake&lt;/a&gt; with tons of modules to manage and find tons of dependencies you probably don&#39;t want to use this tool. (But in that case I personally think you have much bigger problem than a build system). NoBuild is more like writting shell scripts but in C.&lt;/p&gt; &#xA;&lt;h2&gt;Advantages of NoBuild&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extremely portable builds across variety of systems including (but not limited to) Linux, MacOS, Windows, FreeBSD, etc. This is achieved by reducing the amount of dependencies to just a C compiler, which exists pretty much for any platform these days.&lt;/li&gt; &#xA; &lt;li&gt;You end up using the same language for developing and building your project. Which may enable some interesting code reusage strategies. The build system can use the code of the project itself directly and the project can use the code of the build system also directly.&lt;/li&gt; &#xA; &lt;li&gt;You get to use C more.&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disadvantages of NoBuild&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to be comfortable with C and implementing things yourself. As mentioned above this is like writing shell scripts but in C.&lt;/li&gt; &#xA; &lt;li&gt;It probably does not make any sense outside of C/C++ projects.&lt;/li&gt; &#xA; &lt;li&gt;You get to use C more.&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why is it called &#34;nobuild&#34; when it&#39;s clearly a build tool?&lt;/h2&gt; &#xA;&lt;p&gt;You know all these BS movements that supposedly remove the root cause of your problems? Things like &lt;a href=&#34;https://en.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/No-code_development_platform&#34;&gt;No-code&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Serverless_computing&#34;&gt;Serverless&lt;/a&gt;, etc. This is the same logic. I had too many problems with the process of building C projects. So there is nobuild anymore.&lt;/p&gt; &#xA;&lt;h2&gt;How to use the library in your own project&lt;/h2&gt; &#xA;&lt;p&gt;The only file you need from here is &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nob.h/refs/heads/main/nob.h&#34;&gt;nob.h&lt;/a&gt;. Just copy-paste it to your project and start using it. See &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nob.h/main/how_to/&#34;&gt;how_to/&lt;/a&gt; folder for examples.&lt;/p&gt; &#xA;&lt;h2&gt;NoBuild in Other Languages&lt;/h2&gt; &#xA;&lt;p&gt;This is obviously applicable not only to C. You can implement the same kind of approach for other languages (apart from the languages that support this natively, of course). Here is few examples in the wild:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++ - &lt;a href=&#34;https://github.com/zhiayang/nabs&#34;&gt;https://github.com/zhiayang/nabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java - &lt;a href=&#34;https://gitlab.com/NikaDev/arris&#34;&gt;https://gitlab.com/NikaDev/arris&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Feel free to contribute more&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coleam00/Archon</title>
    <updated>2025-08-17T01:50:20Z</updated>
    <id>tag:github.com,2025-08-17:/coleam00/Archon</id>
    <link href="https://github.com/coleam00/Archon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Beta release of Archon OS - the knowledge and task management backbone for AI coding assistants.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/archon-ui-main/public/archon-main-graphic.png&#34; alt=&#34;Archon Main Graphic&#34; width=&#34;853&#34; height=&#34;422&#34; /&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;Power up your AI coding assistants with your own custom knowledge base and task management as an MCP server&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/#whats-included&#34;&gt;What&#39;s Included&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/#architecture&#34;&gt;Architecture&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;🎯 What is Archon?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Archon is currently in beta! Expect things to not work 100%, and please feel free to share any feedback and contribute with fixes/new features!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Archon is the &lt;strong&gt;command center&lt;/strong&gt; for AI coding assistants. For you, it&#39;s a sleek interface to manage knowledge, context, and tasks for your projects. For the AI coding assistant(s), it&#39;s a &lt;strong&gt;Model Context Protocol (MCP) server&lt;/strong&gt; to collaborate on and leverage the same knowledge, context, and tasks. Connect Claude Code, Kiro, Cursor, Windsurf, etc. to give your AI agents access to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Your documentation&lt;/strong&gt; (crawled websites, uploaded PDFs/docs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart search capabilities&lt;/strong&gt; with advanced RAG strategies&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Task management&lt;/strong&gt; integrated with your knowledge base&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time updates&lt;/strong&gt; as you add new content and collaborate with your coding assistant on tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Much more&lt;/strong&gt; coming soon to build Archon into an integrated environment for all context engineering&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This new vision for Archon replaces the old one (the agenteer). Archon used to be the AI agent that builds other agents, and now you can use Archon to do that and more.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It doesn&#39;t matter what you&#39;re building or if it&#39;s a new/existing codebase - Archon&#39;s knowledge and task management capabilities will improve the output of &lt;strong&gt;any&lt;/strong&gt; AI driven coding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🔗 Important Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/coleam00/Archon/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/strong&gt; - Join the conversation and share ideas about Archon&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; - How to get involved and contribute to Archon&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://youtu.be/8pRc_s2VQIo&#34;&gt;Introduction Video&lt;/a&gt;&lt;/strong&gt; - Getting Started Guide and Vision for Archon&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://dynamous.ai&#34;&gt;Dynamous AI Mastery&lt;/a&gt;&lt;/strong&gt; - The birthplace of Archon - come join a vibrant community of other early AI adopters all helping each other transform their careers and businesses!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://supabase.com/&#34;&gt;Supabase&lt;/a&gt; account (free tier or local Supabase both work)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;OpenAI API key&lt;/a&gt; (Gemini and Ollama are supported too!)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup Instructions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone Repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/coleam00/archon.git&#xA;cd archon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Environment Configuration&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;# Edit .env and add your Supabase credentials:&#xA;# SUPABASE_URL=https://your-project.supabase.co&#xA;# SUPABASE_SERVICE_KEY=your-service-key-here&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;NOTE: Supabase introduced a new type of service key but use the legacy one (the longer one).&lt;/p&gt; &lt;p&gt;OPTIONAL: If you want to enable the reranking RAG strategy, uncomment lines 20-22 in &lt;code&gt;python\requirements.server.txt&lt;/code&gt;. This will significantly increase the size of the Archon Server container which is why it&#39;s off by default.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Database Setup&lt;/strong&gt;: In your &lt;a href=&#34;https://supabase.com/dashboard&#34;&gt;Supabase project&lt;/a&gt; SQL Editor, copy, paste, and execute the contents of &lt;code&gt;migration/complete_setup.sql&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start Services&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up --build -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This starts the core microservices:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Core API and business logic (Port: 8181)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;: Protocol interface for AI clients (Port: 8051)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Agents (coming soon!)&lt;/strong&gt;: AI operations and streaming (Port: 8052)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: Web interface (Port: 3737)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Ports are configurable in your .env as well!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure API Keys&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;a href=&#34;http://localhost:3737&#34;&gt;http://localhost:3737&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; → Select your LLM/embedding provider and set the API key (OpenAI is default)&lt;/li&gt; &#xA;   &lt;li&gt;Test by uploading a document or crawling a website&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔄 Database Reset (Start Fresh if Needed)&lt;/h2&gt; &#xA;&lt;p&gt;If you need to completely reset your database and start fresh:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;⚠️ &lt;strong&gt;Reset Database - This will delete ALL data for Archon!&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Reset Script&lt;/strong&gt;: In your Supabase SQL Editor, run the contents of &lt;code&gt;migration/RESET_DB.sql&lt;/code&gt;&lt;/p&gt; &lt;p&gt;⚠️ WARNING: This will delete all Archon specific tables and data! Nothing else will be touched in your DB though.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild Database&lt;/strong&gt;: After reset, run &lt;code&gt;migration/complete_setup.sql&lt;/code&gt; to create all the tables again.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Restart Services&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reconfigure&lt;/strong&gt;:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Select your LLM/embedding provider and set the API key again&lt;/li&gt; &#xA;    &lt;li&gt;Re-upload any documents or re-crawl websites&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;The reset script safely removes all tables, functions, triggers, and policies with proper dependency handling.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⚡ Quick Test&lt;/h2&gt; &#xA;&lt;p&gt;Once everything is running:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test Web Crawling&lt;/strong&gt;: Go to &lt;a href=&#34;http://localhost:3737&#34;&gt;http://localhost:3737&lt;/a&gt; → Knowledge Base → &#34;Crawl Website&#34; → Enter a doc URL (such as &lt;a href=&#34;https://ai.pydantic.dev/llms-full.txt&#34;&gt;https://ai.pydantic.dev/llms-full.txt&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test Document Upload&lt;/strong&gt;: Knowledge Base → Upload a PDF&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test Projects&lt;/strong&gt;: Projects → Create a new project and add tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integrate with your AI coding assistant&lt;/strong&gt;: MCP Dashboard → Copy connection config for your AI coding assistant&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Core Services&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Container Name&lt;/th&gt; &#xA;   &lt;th&gt;Default URL&lt;/th&gt; &#xA;   &lt;th&gt;Purpose&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Web Interface&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;archon-ui&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:3737&#34;&gt;http://localhost:3737&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main dashboard and controls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;API Service&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;archon-server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:8181&#34;&gt;http://localhost:8181&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web crawling, document processing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;archon-mcp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:8051&#34;&gt;http://localhost:8051&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Model Context Protocol interface&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Agents Service&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;archon-agents&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:8052&#34;&gt;http://localhost:8052&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AI/ML operations, reranking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What&#39;s Included&lt;/h2&gt; &#xA;&lt;h3&gt;🧠 Knowledge Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart Web Crawling&lt;/strong&gt;: Automatically detects and crawls entire documentation sites, sitemaps, and individual pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Document Processing&lt;/strong&gt;: Upload and process PDFs, Word docs, markdown files, and text documents with intelligent chunking&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code Example Extraction&lt;/strong&gt;: Automatically identifies and indexes code examples from documentation for enhanced search&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vector Search&lt;/strong&gt;: Advanced semantic search with contextual embeddings for precise knowledge retrieval&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source Management&lt;/strong&gt;: Organize knowledge by source, type, and tags for easy filtering&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🤖 AI Integration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt;: Connect any MCP-compatible client (Claude Code, Cursor, even non-AI coding assistants like Claude Desktop)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10 MCP Tools&lt;/strong&gt;: Comprehensive yet simple set of tools for RAG queries, task management, and project operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-LLM Support&lt;/strong&gt;: Works with OpenAI, Ollama, and Google Gemini models&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAG Strategies&lt;/strong&gt;: Hybrid search, contextual embeddings, and result reranking for optimal AI responses&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Streaming&lt;/strong&gt;: Live responses from AI agents with progress tracking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📋 Project &amp;amp; Task Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hierarchical Projects&lt;/strong&gt;: Organize work with projects, features, and tasks in a structured workflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-Assisted Creation&lt;/strong&gt;: Generate project requirements and tasks using integrated AI agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Document Management&lt;/strong&gt;: Version-controlled documents with collaborative editing capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Progress Tracking&lt;/strong&gt;: Real-time updates and status management across all project activities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔄 Real-time Collaboration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;WebSocket Updates&lt;/strong&gt;: Live progress tracking for crawling, processing, and AI operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user Support&lt;/strong&gt;: Collaborative knowledge building and project management&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Background Processing&lt;/strong&gt;: Asynchronous operations that don&#39;t block the user interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Health Monitoring&lt;/strong&gt;: Built-in service health checks and automatic reconnection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;Microservices Structure&lt;/h3&gt; &#xA;&lt;p&gt;Archon uses true microservices architecture with clear separation of concerns:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐&#xA;│   Frontend UI   │    │  Server (API)   │    │   MCP Server    │    │ Agents Service  │&#xA;│                 │    │                 │    │                 │    │                 │&#xA;│  React + Vite   │◄──►│    FastAPI +    │◄──►│    Lightweight  │◄──►│   PydanticAI    │&#xA;│  Port 3737      │    │    SocketIO     │    │    HTTP Wrapper │    │   Port 8052     │&#xA;│                 │    │    Port 8181    │    │    Port 8051    │    │                 │&#xA;└─────────────────┘    └─────────────────┘    └─────────────────┘    └─────────────────┘&#xA;         │                        │                        │                        │&#xA;         └────────────────────────┼────────────────────────┼────────────────────────┘&#xA;                                  │                        │&#xA;                         ┌─────────────────┐               │&#xA;                         │    Database     │               │&#xA;                         │                 │               │&#xA;                         │    Supabase     │◄──────────────┘&#xA;                         │    PostgreSQL   │&#xA;                         │    PGVector     │&#xA;                         └─────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Service Responsibilities&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Location&lt;/th&gt; &#xA;   &lt;th&gt;Purpose&lt;/th&gt; &#xA;   &lt;th&gt;Key Features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Frontend&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;archon-ui-main/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web interface and dashboard&lt;/td&gt; &#xA;   &lt;td&gt;React, TypeScript, TailwindCSS, Socket.IO client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python/src/server/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Core business logic and APIs&lt;/td&gt; &#xA;   &lt;td&gt;FastAPI, service layer, Socket.IO broadcasts, all ML/AI operations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python/src/mcp/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MCP protocol interface&lt;/td&gt; &#xA;   &lt;td&gt;Lightweight HTTP wrapper, 10 MCP tools, session management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python/src/agents/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PydanticAI agent hosting&lt;/td&gt; &#xA;   &lt;td&gt;Document and RAG agents, streaming responses&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Communication Patterns&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTTP-based&lt;/strong&gt;: All inter-service communication uses HTTP APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Socket.IO&lt;/strong&gt;: Real-time updates from Server to Frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Protocol&lt;/strong&gt;: AI clients connect to MCP Server via SSE or stdio&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Direct Imports&lt;/strong&gt;: Services are truly independent with no shared code dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Key Architectural Benefits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight Containers&lt;/strong&gt;: Each service contains only required dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent Scaling&lt;/strong&gt;: Services can be scaled independently based on load&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Development Flexibility&lt;/strong&gt;: Teams can work on different services without conflicts&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Technology Diversity&lt;/strong&gt;: Each service uses the best tools for its specific purpose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔧 Configuring Custom Ports &amp;amp; Hostname&lt;/h2&gt; &#xA;&lt;p&gt;By default, Archon services run on the following ports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archon-UI&lt;/strong&gt;: 3737&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archon-Server&lt;/strong&gt;: 8181&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archon-MCP&lt;/strong&gt;: 8051&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archon-Agents&lt;/strong&gt;: 8052&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archon-Docs&lt;/strong&gt;: 3838 (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Changing Ports&lt;/h3&gt; &#xA;&lt;p&gt;To use custom ports, add these variables to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Service Ports Configuration&#xA;ARCHON_UI_PORT=3737&#xA;ARCHON_SERVER_PORT=8181&#xA;ARCHON_MCP_PORT=8051&#xA;ARCHON_AGENTS_PORT=8052&#xA;ARCHON_DOCS_PORT=3838&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example: Running on different ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ARCHON_SERVER_PORT=8282&#xA;ARCHON_MCP_PORT=8151&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Hostname&lt;/h3&gt; &#xA;&lt;p&gt;By default, Archon uses &lt;code&gt;localhost&lt;/code&gt; as the hostname. You can configure a custom hostname or IP address by setting the &lt;code&gt;HOST&lt;/code&gt; variable in your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Hostname Configuration&#xA;HOST=localhost  # Default&#xA;&#xA;# Examples of custom hostnames:&#xA;HOST=192.168.1.100     # Use specific IP address&#xA;HOST=archon.local      # Use custom domain&#xA;HOST=myserver.com      # Use public domain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is useful when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running Archon on a different machine and accessing it remotely&lt;/li&gt; &#xA; &lt;li&gt;Using a custom domain name for your installation&lt;/li&gt; &#xA; &lt;li&gt;Deploying in a network environment where &lt;code&gt;localhost&lt;/code&gt; isn&#39;t accessible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After changing hostname or ports:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Restart Docker containers: &lt;code&gt;docker-compose down &amp;amp;&amp;amp; docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Access the UI at: &lt;code&gt;http://${HOST}:${ARCHON_UI_PORT}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update your AI client configuration with the new hostname and MCP port&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔧 Development&lt;/h2&gt; &#xA;&lt;p&gt;For development with hot reload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Backend services (with auto-reload)&#xA;docker-compose up archon-server archon-mcp archon-agents --build&#xA;&#xA;# Frontend (with hot reload) &#xA;cd archon-ui-main &amp;amp;&amp;amp; npm run dev&#xA;&#xA;# Documentation (with hot reload)&#xA;cd docs &amp;amp;&amp;amp; npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The backend services are configured with &lt;code&gt;--reload&lt;/code&gt; flag in their uvicorn commands and have source code mounted as volumes for automatic hot reloading when you make changes.&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;Archon Community License (ACL) v1.2 - see &lt;a href=&#34;https://raw.githubusercontent.com/coleam00/Archon/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Archon is free, open, and hackable. Run it, fork it, share it - just don&#39;t sell it as-a-service without permission.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dtyq/magic</title>
    <updated>2025-08-17T01:50:20Z</updated>
    <id>tag:github.com,2025-08-17:/dtyq/magic</id>
    <link href="https://github.com/dtyq/magic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Super Magic (超级麦吉). The first open-source all-in-one AI productivity platform (Generalist AI Agent + Workflow Engine + IM + Online collaborative office system)&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/dtyq/magic/master/README.md&#34;&gt;&lt;img alt=&#34;README in English&#34; src=&#34;https://img.shields.io/badge/English-d9d9d9&#34; /&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/dtyq/magic/master/README_CN.md&#34;&gt;&lt;img alt=&#34;简体中文版自述文件&#34; src=&#34;https://img.shields.io/badge/简体中文-d9d9d9&#34; /&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/super-magic-publish-header-en.png?v=20250515&#34; alt=&#34;Magic Open Source Product Matrix&#34; /&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🔥 Magic - First Open-Source All-in-One AI Productivity Platform&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.letsmagic.ai&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/Official Website-301AD2&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/dtyq/magic/releases&#34;&gt; &lt;img src=&#34;https://poser.pugx.org/dtyq/magic/v/stable&#34; alt=&#34;Stable Version&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/dtyq/magic/graphs/commit-activity&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Commits last month&#34; src=&#34;https://img.shields.io/github/commit-activity/m/dtyq/magic?labelColor=%20%2332b583&amp;amp;color=%20%2312b76a&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/dtyq/magic/&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Issues closed&#34; src=&#34;https://img.shields.io/github/issues-search?query=repo%3Adtyq%2Fmagic%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=%20%237d89b0&amp;amp;color=%20%235d6b98&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/dtyq/magic/discussions/&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Discussion posts&#34; src=&#34;https://img.shields.io/github/discussions/dtyq/magic?labelColor=%20%239b8afb&amp;amp;color=%20%237a5af8&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://www.letsmagic.ai&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/Build with Magic 🔮-301AD2&#34; /&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Magic aims to help enterprises of all sizes quickly build and deploy AI applications to achieve a 100x increase in productivity.&lt;/p&gt; &#xA;&lt;h2&gt;Magic Product Matrix&lt;/h2&gt; &#xA;&lt;p&gt;Magic is the first &lt;strong&gt;&#34;open-source all-in-one AI productivity platform&#34;&lt;/strong&gt;, not a single AI product, but a comprehensive product matrix with rich capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/super-magic-open-source-projects-en.png?v=20250515&#34; alt=&#34;Product Matrix&#34; /&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dtyq/super-magic&#34;&gt;Super Magic&lt;/a&gt;&lt;/strong&gt; - A &lt;strong&gt;general-purpose AI Agent&lt;/strong&gt; designed for complex task scenarios&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dtyq/magic&#34;&gt;Magic IM&lt;/a&gt;&lt;/strong&gt; - An enterprise-grade instant messaging system that integrates AI Agent conversations with internal enterprise communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dtyq/magic&#34;&gt;Magic Flow&lt;/a&gt;&lt;/strong&gt; - A powerful visual AI workflow orchestration system&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Teamshare OS&lt;/strong&gt; (Coming soon) - An enterprise-grade online collaborative office system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to the above AI products, we have also open-sourced some of the infrastructure we used to build these products:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dtyq/agentlang&#34;&gt;Agentlang&lt;/a&gt;&lt;/strong&gt; - A language-first AI Agent Framework for building AI agents with natural language (currently available in Python version, TypeScript version coming soon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dtyq/magiclens&#34;&gt;Magic Lens&lt;/a&gt;&lt;/strong&gt; - A powerful and flexible HTML to Markdown conversion tool that uses an extensible rule system to accurately convert complex HTML documents to concise Markdown format&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Magic Use&lt;/strong&gt; (Coming soon) - A revolutionary browser operation tool specifically designed for AI Agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Magic Space&lt;/strong&gt; (Coming soon) - A new static content hosting management system specifically designed for AI Agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sandbox OS&lt;/strong&gt; (Coming soon) - A powerful sandbox system for AI Agent runtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Super Magic&lt;/h3&gt; &#xA;&lt;p&gt;A powerful &lt;strong&gt;general-purpose AI Agent&lt;/strong&gt; specially designed for complex task scenarios. Through a multi-agent design system and rich tool capabilities, Super Magic supports intelligent abilities such as &lt;strong&gt;autonomous task understanding&lt;/strong&gt;, &lt;strong&gt;autonomous task planning&lt;/strong&gt;, &lt;strong&gt;autonomous action&lt;/strong&gt;, and &lt;strong&gt;autonomous error correction&lt;/strong&gt;. It can understand natural language instructions, execute various business processes, and deliver final target results. As the flagship product of the Magic product matrix, Super Magic provides powerful secondary development capabilities through open source, allowing enterprises to quickly build and deploy intelligent assistants that meet specific business needs, greatly improving decision-making efficiency and quality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/super-magic-buffett.gif&#34; alt=&#34;Super Magic&#34; /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Super Magic Case Studies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.letsmagic.cn/share/777665156986277889&#34;&gt;Analysis of Investment Insights from Buffett&#39;s 2025 Shareholders Meeting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.letsmagic.cn/share/774280936479625217&#34;&gt;Analysis of Stocks Related to Beijing Humanoid Robot Half Marathon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.letsmagic.cn/share/777461325648195584&#34;&gt;Summary of Key Points from &#39;Thinking, Fast and Slow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.letsmagic.cn/share/777604044873928705&#34;&gt;Auntie Jenny IPO Analysis and Investment Recommendations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.letsmagic.cn/share/771022574397648897&#34;&gt;SKU Sales Forecast Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For more case studies, please visit the &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;Official Website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Magic Flow&lt;/h3&gt; &#xA;&lt;p&gt;Magic Flow is a powerful visual AI workflow orchestration system that allows users to build complex AI Agent workflows on a free canvas. It has the following core features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual Orchestration&lt;/strong&gt;: Intuitive drag-and-drop interface allows designing complex AI workflows without coding, easily implementing various functional combinations through node connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rich Component Library&lt;/strong&gt;: Built-in variety of preset components, including text processing, image generation, code execution modules, meeting diverse business needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Model Support&lt;/strong&gt;: Compatible with any large model following the OpenAI API protocol, flexibly choosing AI capabilities suitable for business scenarios.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;System Integration Capability&lt;/strong&gt;: Seamless integration with Magic IM and other third-party IM systems (WeCom, DingTalk, Feishu), enabling cross-platform collaboration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;: Support for custom tool node development to meet specific business scenario requirements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Debugging and Monitoring&lt;/strong&gt;: Providing comprehensive debugging and monitoring functions to help quickly identify and solve problems in workflows, ensuring stable operation of AI applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/magic-flow.png&#34; alt=&#34;Magic Flow&#34; /&gt;&lt;/p&gt; &#xA;&lt;p&gt;As an important component of the Magic product matrix, Magic Flow can be seamlessly integrated with other Magic products to create a complete enterprise-level AI application ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/super-magic-multi-agents-and-events-en.png?v=20250515&#34; alt=&#34;Magic Multi-Agents and Events&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Magic IM&lt;/h3&gt; &#xA;&lt;p&gt;Magic IM is an enterprise-grade AI Agent conversation system designed specifically for internal knowledge management and intelligent customer service scenarios. It provides rich conversational capabilities, supporting multi-turn dialogues, context understanding, knowledge base retrieval, and other functions, allowing enterprises to quickly build intelligent customer service, knowledge assistants, and other applications.&lt;/p&gt; &#xA;&lt;p&gt;Magic IM has the following core features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Knowledge Base Management&lt;/strong&gt;: Powerful knowledge base management functions, supporting import of various document formats, automatic indexing, and semantic retrieval, ensuring AI answers based on authentic enterprise knowledge.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversation Management&lt;/strong&gt;: Comprehensive conversation management, supporting topic distinction for different conversation content, enabling both AI Agent conversations and communication with people within the organization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Group Chat Capability&lt;/strong&gt;: Powerful group chat functionality, supporting real-time collaborative discussions among multiple people, with AI intelligently participating in group chats and providing instant answers, promoting efficient team communication and knowledge sharing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-organizational Architecture&lt;/strong&gt;: Support for multi-organization deployment and strict organizational data isolation, with each organization having independent data space and access permissions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Security&lt;/strong&gt;: Strict data isolation and access control mechanisms, multi-level permission management, safeguarding sensitive enterprise information and ensuring no data leakage between organizations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://public-cdn.letsmagic.cn/static/img/magic-im-group-chat-en.png?v=20250515&#34; alt=&#34;Magic IM&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Teamshare OS&lt;/h2&gt; &#xA;&lt;p&gt;Teamshare OS is a modern enterprise-grade collaborative office platform designed to enhance team collaboration efficiency and knowledge management. As an important component of the Magic product matrix, Teamshare deeply integrates AI capabilities into daily office scenarios, achieving intelligent workflows and knowledge management.&lt;/p&gt; &#xA;&lt;p&gt;Teamshare OS has the following core features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intelligent Document Management&lt;/strong&gt;: Support for online editing, collaboration, and version control of various document formats, AI-assisted content generation and optimization, making team document management more efficient.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Magic Table&lt;/strong&gt;: Powerful multi-dimensional data management tool, supporting custom field types, diverse views, and automated workflows, combined with AI capabilities to achieve intelligent data processing, meeting diverse data management needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Project Collaboration Management&lt;/strong&gt;: Intuitive project boards and task management, supporting custom workflows, combined with AI intelligent analysis to provide project progress forecasting and resource optimization suggestions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Knowledge Base&lt;/strong&gt;: Powerful knowledge consolidation and retrieval system, automatically structuring internal enterprise documents to form sustainable accumulated enterprise knowledge assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Integration Capability&lt;/strong&gt;: Seamless integration with Magic product matrix, while supporting connection with mainstream office software and enterprise applications, creating a unified work platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Magic Table&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/user-attachments/assets/6ef46e66-292c-4a8a-8a00-a3b9fb7beec7&#34;&gt;https://gist.github.com/user-attachments/assets/6ef46e66-292c-4a8a-8a00-a3b9fb7beec7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Magic Doc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/user-attachments/assets/7327f331-be7d-4aeb-8e19-0949adde66b2&#34;&gt;https://gist.github.com/user-attachments/assets/7327f331-be7d-4aeb-8e19-0949adde66b2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Using Super Magic&lt;/h2&gt; &#xA;&lt;h3&gt;Cloud Service&lt;/h3&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;cloud services&lt;/a&gt; for &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;Super Magic&lt;/a&gt;, &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;Magic IM&lt;/a&gt;, and &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;Magic Flow&lt;/a&gt;, allowing anyone to start trying and using them with zero setup, providing all features of the open-source version. &lt;em&gt;Currently, an invitation code is required for access, which can be applied for online and granted for trial use after approval.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Magic for Enterprises/Organizations&lt;/h3&gt; &#xA;&lt;p&gt;We provide more powerful management capabilities and features for teams and enterprises. &lt;a href=&#34;mailto:bd@dtyq.com?subject=%5BGitHub%5DBusiness%20License%20Inquiry&#34;&gt;Send us an email&lt;/a&gt; to discuss enterprise needs.&lt;/p&gt; &#xA;&lt;h3&gt;Self-hosted Community Edition&lt;/h3&gt; &#xA;&lt;h4&gt;System Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker 24.0+&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose 2.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Start the System Using Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone repository&#xA;git clone https://github.com/dtyq/magic.git&#xA;cd magic&#xA;&#xA;# Start service in foreground&#xA;./bin/magic.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Other Commands&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start service in background&#xA;./bin/magic.sh daemon&#xA;&#xA;# Check service status&#xA;./bin/magic.sh status&#xA;&#xA;# View logs&#xA;./bin/magic.sh logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Configure Environment Variables&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Configure Magic environment variables, must configure at least one large language model&#39;s environment variables to use Magic normally&#xA;cp .env.example .env&#xA;&#xA;# Configure Super Magic environment variables, must configure any large language model that supports OpenAI format to use it normally&#xA;./bin/magic.sh status&#xA;cp config/.env_super_magic.example .env_super_magic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Access Services&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API Service: &lt;a href=&#34;http://localhost:9501&#34;&gt;http://localhost:9501&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web Application: &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Account &lt;code&gt;13812345678&lt;/code&gt;：Password &lt;code&gt;letsmagic.ai&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Account &lt;code&gt;13912345678&lt;/code&gt;：Password &lt;code&gt;letsmagic.ai&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;RabbitMQ Management Interface: &lt;a href=&#34;http://localhost:15672&#34;&gt;http://localhost:15672&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: admin&lt;/li&gt; &#xA;   &lt;li&gt;Password: magic123456&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Official Website: &lt;a href=&#34;https://www.letsmagic.ai&#34;&gt;https://www.letsmagic.ai&lt;/a&gt; Documentation: &lt;a href=&#34;https://docs.letsmagic.cn/en&#34;&gt;https://docs.letsmagic.cn/en&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;For those who want to contribute code, please refer to our &lt;a href=&#34;https://github.com/dtyq/magic/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;. Also, please consider supporting Magic through social media, events, and conferences. The development of Magic relies on your support.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a security vulnerability in Magic, please send an email to the Magic official team at &lt;a href=&#34;mailto:team@dtyq.com&#34;&gt;team@dtyq.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;This repository follows the &lt;a href=&#34;https://raw.githubusercontent.com/dtyq/magic/master/LICENSE&#34;&gt;Magic Open Source License&lt;/a&gt;, which is essentially Apache 2.0 but with some additional restrictions.&lt;/p&gt; &#xA;&lt;h2&gt;🙏 Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all developers who have contributed to Magic!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#dtyq/magic&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=dtyq/magic&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>