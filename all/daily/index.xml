<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:28:59Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dogtiti/AutoGPT-Next-Web</title>
    <updated>2023-04-28T01:28:59Z</updated>
    <id>tag:github.com,2023-04-28:/Dogtiti/AutoGPT-Next-Web</id>
    <link href="https://github.com/Dogtiti/AutoGPT-Next-Web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Assemble, configure, and deploy autonomous AI Agents in your browser.一键免费部署你的私人AutoGPT 网页应用&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;AutoGPT-Next-Web&lt;/h1&gt; &#xA; &lt;p&gt;English / &lt;a href=&#34;https://github.com/Dogtiti/AutoGPT-Next-Web/raw/main/docs/README_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;One-Click to deploy well-designed AutoGPT-Next-Web web UI on Vercel.&lt;/p&gt; &#xA; &lt;p&gt;一键免费部署你的私人 AutoGPT-Next-Web 网页应用。&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://auto-agentgpt.com/&#34;&gt;Demo&lt;/a&gt; / &lt;a href=&#34;https://github.com/Dogtiti/AutoGPT-Next-Web/issues&#34;&gt;Issues&lt;/a&gt; / &lt;a href=&#34;https://discord.gg/Xnsbhg6Uvd&#34;&gt;Join Discord&lt;/a&gt; / &lt;a href=&#34;https://www.buymeacoffee.com/elricliu&#34;&gt;Buy Me a Coffee&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://auto-agentgpt.com/&#34;&gt;演示&lt;/a&gt; / &lt;a href=&#34;https://github.com/Dogtiti/AutoGPT-Next-Web/issues&#34;&gt;反馈&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/38354472/232797111-d34a81b0-2739-4251-82b6-6093dc0eb0b6.png&#34;&gt;QQ 群&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/38354472/232797309-9348f3a6-1dd7-422a-ad01-935247b1970e.png&#34;&gt;微信&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/38354472/232797482-c42222ff-74f9-4519-ba6f-752288dbe262.png&#34;&gt;知识星球&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/38354472/232796654-c749602b-c1d4-402b-8c31-e7c013b7a42d.png&#34;&gt;打赏开发者&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FDogtiti%2FAutoGPT-Next-Web&amp;amp;env=OPENAI_API_KEY&amp;amp;project-name=autogpt-next-web&amp;amp;repository-name=AutoGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Dogtiti/AutoGPT-Next-Web/main/public/cover-en.png&#34; alt=&#34;cover&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Discuss with us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/20209191/234480921-0a8f754e-1110-47bf-9c40-25e3daed2c05.png&#34; alt=&#34;cover&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Free one-click deployment with Vercel in 1 minute&lt;/li&gt; &#xA; &lt;li&gt;Improved local support: After typing in Chinese, the content will be displayed in Chinese instead of English&lt;/li&gt; &#xA; &lt;li&gt;UI designed to match AgentGPT, responsive design, and support for dark mode&lt;/li&gt; &#xA; &lt;li&gt;Have your own domain? Even better, after binding, you can quickly access it anywhere without barriers&lt;/li&gt; &#xA; &lt;li&gt;Support access code control, only you or trusted individuals can use the website&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1. Add support for Docker and Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2. Add support for Endpoint URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 3. Add support for Azure OpenAI API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 4. Optimize the display of running results for easier viewing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5. Add support for WeChat login&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://autogpt-next-web.gitbook.io/autogpt-next-web/&#34;&gt;Click me to view the detailed tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Prepare the OpenAI API Key;&lt;/li&gt; &#xA; &lt;li&gt;Click the deploy button and follow the prompts&lt;/li&gt; &#xA; &lt;li&gt;We support access control capabilities, see the tutorial above for a detailed tutorial&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q: What is the difference between this project and AgentGPT?&lt;/p&gt; &#xA;&lt;p&gt;A: The project originated from AgentGPT. Our goal is to continuously provide user-friendly features, interfaces, and various deployment solutions for domestic users, helping everyone to easily build their own &#34;AutoGPT&#34; website. And the i18n ability and Vercel deployment ability in the AgentGPT project also come from our contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Setup&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to run AutoGPT-Next-Web locally is by using docker. A convenient setup script is provided to help you get started.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh --docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;docker-compose&lt;/code&gt; deploy&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh --docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Development Setup&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to develop AutoGPT-Next-Web locally, the easiest way is to use the provided setup script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh --local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Setup&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You will need &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Nodejs +18 (LTS recommended)&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dogtiti/AutoGPT-Next-Web/fork&#34;&gt;Click here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:YOU_USER/AutoGPT-Next-Web.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd AutoGPT-Next-Web&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create a &lt;strong&gt;.env&lt;/strong&gt; file with the following content:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The environment variables must match the following &lt;a href=&#34;https://github.com/Dogtiti/AutoGPT-Next-Web/raw/main/src/env/schema.mjs&#34;&gt;schema&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Deployment Environment:&#xA;NODE_ENV=development&#xA;&#xA;# Next Auth config:&#xA;# Generate a secret with `openssl rand -base64 32` or visit https://generate-secret.vercel.app/&#xA;NEXTAUTH_SECRET=&#39;&#39;&#xA;NEXTAUTH_URL=http://localhost:3000&#xA;DATABASE_URL=file:./db.sqlite&#xA;&#xA;# Your open api key&#xA;OPENAI_API_KEY=&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Modify prisma schema to use sqlite:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./prisma/useSqlite.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only needs to be done if you wish to use sqlite.&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Ready, now run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create database migrations&#xA;npx prisma db push&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>GFW-knocker/gfw_resist_tls_proxy</title>
    <updated>2023-04-28T01:28:59Z</updated>
    <id>tag:github.com,2023-04-28:/GFW-knocker/gfw_resist_tls_proxy</id>
    <link href="https://github.com/GFW-knocker/gfw_resist_tls_proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;knock up GFW sni detection in tls client hello&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gfw_resist_tls_proxy&lt;/h1&gt; &#xA;&lt;h1&gt;آپدیت 7 اردیبهشت&lt;/h1&gt; &#xA;&lt;p&gt;اسکریپت randchunk به نظر خیلی بهتر شد - تعداد فرگمنت 67 تا و تاخیر 0.001 با اضافه کردن tcp_nodelay - ممنون از free_the_internet@&lt;br&gt; سرعت اسکریپت اول هم بهتر شد با همین tcp_nodelay - این کرنل رو مجبور میکنه که اسمبل نکنه رو سیستم خودمون&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;آپدیت&lt;/h1&gt; &#xA;&lt;p&gt;فایل جدید randchunk میاد پکت رو رندوم به 47 قسمت نامساوی تقسیم میکنه -به روش سامورایی با تاخیر کم- یه کوچولو بهتر شده انگار&lt;br&gt; رو ایرانسل مشکل داریم همچنان ولی ترتیب اونم میدیم به امید خدا و یاری شما&lt;br&gt; عزیزانی که تست میکنند از branch های دیگر هم بازدید کنند-load balancer دوست عزیزمون&lt;br&gt; این محصول نهایی نیست یه اسکریپت پایتونه جهت اثبات ادعا&lt;br&gt; بزارید به نقطه پایدار برسیم بعد برا کلاینت v2ray پیاده میشه&lt;br&gt; الان متخصص حرفه ای شبکه و برنامه نویس c لازم داریم جهت تبادل اطلاعات - لطفا در Discussions پیام دهید&lt;br&gt; میخوایم یه کانفیگ مستقیم بسازیم بدون سرور فقط برا یوتیوب کسی dokodemo-door بلده؟ -&amp;gt; Discussion &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;internet for everyone or no one&lt;/h1&gt; &#xA;&lt;p&gt;سلام گرم به همه دوستانی که برای حق اولیه و ابتدایی شهروندی ، برای دسترسی به اینترنت ، تلاش میکنند &lt;br&gt; سلام به هیدیفای،باشسیز،سگارو،آی آر سی اف،پروژه امید،ثنایی،هگزا،وحید،صفا،اردشیر،ایمان،امین،حسین، یوتیوبرها و همه عزیزان دوست داشتنی &lt;br&gt;&lt;br&gt; روش این پیج یک زخم عمیق بر پیکر GFW می گذارد که تا سالها سوزش آن در ماتحت فیلترچیان دنیا باقی خواهد ماند &lt;br&gt; &lt;br&gt; خلاصه کار به فارسی:&lt;br&gt; روترهای gfw تلاش میکنند اما نمیتوانند همه packet های fragment را سرهم کنند زمانی که delay بین پکت ها باشد&lt;br&gt; چرا؟ چون کل ترافیک کشور ازشون عبور میکنه و براشون سخته و cache محدود دارند و باید سریع باشند&lt;br&gt; از طرفی gfw نمیتونه پکت های فرگمنت رو reject کنه چون اولا fragmet جزو اصول شبکه هست&lt;br&gt; ثانیا در خیلی از نت های ضعیف packet ها تکه میشوند&lt;br&gt; در صورت reject کردن نت بسیاری از گوشی های قدیمی و خطوط ضعیف مختل میشه&lt;br&gt; همچنین در مسیر روترهای پرسرعت fragmentation اتفاق می افته&lt;br&gt; و اینو gfw میدونه بنابراین سعی میکنه اسمبل کنه و اگر نتونه عبور میده&lt;br&gt; سرورها ولی موظف به سرهم کردن fragment ها هستند چون در پروتکل ip قید شده و سرشون به اندازه gfw شلوغ نیست&lt;br&gt; سرورهای کلودفلر به خوبی این کارو میکنن&lt;br&gt; باور کنید یا نکنید کار gfw ساختست&lt;br&gt; الان عمده ترافیک TLS هست و تنها با تحلیل SNI میتونه ترافیک TLS رو تفکیک کنه&lt;br&gt; و ما کار رو براش هزینه بر و پردازش بر میکنیم&lt;br&gt; یا باید کل cloudflare رو با همه سایت هاش ببنده و عملا نت جهانی رو قطع کنه&lt;br&gt; یا باید فرگمنت رو drop کنه که در هر صورت سیستم های خودشون هم دچار اختلال میشه&lt;br&gt; این سیستم تست شده و کار میکنه&lt;br&gt; و شما با domain فیلتر شده و با ip کثیف cloudflare میتوانید از gfw عبور کنید&lt;br&gt; با اندکی تنظیمات ، سرعت handshake اول هم بالا خواهد رفت&lt;br&gt; اینترنت برای همه یا برای هیچکس&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;goodbye SNI filtering &amp;amp; goodbye GFW mf&#39;er&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/meme1.jpg?raw=true&#34; width=&#34;300&#34;&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;h1&gt;main Idea:&lt;/h1&gt; &#xA;&lt;p&gt;in TLS protocol (even latest v1.3) SNI transferred in plain-text&lt;br&gt; GFW finds it, and when SNI is not in the whitelist, replies with TCP-RST&lt;br&gt; so it filter cloudflare-ip, based on SNI, such that some popular sites&lt;br&gt; like plos.org is open, and all other sites closed, through that ip&lt;br&gt; so we need to hide SNI from GFW&lt;br&gt; we fragment TLS &#34;client Hello&#34; packet into chunks in a simple manner&lt;br&gt; we show that it passes the firewall&lt;br&gt; more importantly, we show that GFW can&#39;t fix it because its nearly impossible&lt;br&gt; to cache TBs of data in high-speed router, so they MUST give up or break the whole network&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/slide1.png?raw=true&#34; width=&#34;600&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;about SNI, ESNI &amp;amp; ECH (skip if you want)&lt;/h1&gt; &#xA;&lt;p&gt;leaking domain name (SNI) is the famous old bug of TLS protocol which is not fixed yet as of 2023&lt;br&gt; some attempt started a few years ago trying to encrypt SNI called ESNI, which is deprecated today&lt;br&gt; Cloudflare stopped supporting ESNI in the summer of 2022&lt;br&gt; another way is Encrypted Client Hello (ECH), which is in draft version and not well-documented&lt;br&gt; I made many efforts to use ECH, but its too complex and still is in development&lt;br&gt; also its based on DNS-over-HTTPS which is already filtered by GFW&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;about GFW SNI filtering on Cloudflare IPs (skip if you want)&lt;/h1&gt; &#xA;&lt;p&gt;Cloudflare IPs are high traffic, and 30% of the web is behind them&lt;br&gt; so GFW can&#39;t simply block them by traffic volume&lt;br&gt; and all traffic is encrypted except client hello, which leaks server name (SNI)&lt;br&gt; &lt;br&gt;&lt;br&gt; so GFW extracts SNI from client hello, and when SNI is in the whitelist, it passes &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/plos-not-filtered.png?raw=true&#34; alt=&#34;Alt text&#34; title=&#34;plos.org is in whitelist&#34;&gt; &lt;br&gt;&lt;br&gt; if SNI is in the blacklist, GFW sends TCP-RST to terminate TCP socket&lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/youtube-filtered.png?raw=true&#34; alt=&#34;Alt text&#34; title=&#34;youtube is in backlist&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;about packet fragment (skip if you want)&lt;/h1&gt; &#xA;&lt;p&gt;we hide SNI by fragmenting client hello packet into several chunks.&lt;br&gt; but GFW already knows this and tries assembling those chunks to find SNI! LOL&lt;br&gt; but we add a time delay between fragments. LOL&lt;br&gt; since Cloudflare IPs have too much traffic, GFW can&#39;t wait too long. LOL&lt;br&gt; GFW high-speed cache is limited, so it can&#39;t cache TBs of data looking for a tiny TCP fragment. LOL&lt;br&gt; so it forgets those fragments after a second. LOL&lt;br&gt; it&#39;s impossible to look at huge traffic for a packet that don&#39;t know when or where it arrives. LOL&lt;br&gt; so it&#39;s forced to Give up. LOL&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;can GFW block fragments? (skip if you want)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;fragmentation is part of tcp/ip specification and all network device must support it.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;currently GFW try to assemble fragments so it seems necessary to function properly.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;dropping TCP fragmentation violate network rule and cause instability&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;in high-speed routers fragmentation occurs in general&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;GFW cant cache TBs of data every second&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;GFW cant hold every TCP packet and wait for fragmentations to come&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;even if GFW detects fragmentation in some manner , adding delay between SYN,ACK fall him in trouble again. LOL&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;personally i think &#34;waiting&#34; is fundamental weakness of routers and can be exploited in various ways.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;your ideas are welcome -&amp;gt; Discussion&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to run&lt;/h1&gt; &#xA;&lt;p&gt;فارسی بگم: کانفیگ وب سوکت با tls فعال پشت کلودفلر با پروکسی روشن لازمه&lt;br&gt; این اسکریپت ایپی کثیف کلودفلر رو دور میزنه حتی با دامنه فیلترشده&lt;br&gt; فعلا غیر از ایرانسل رو باقی isp ها کار میکنه با مقداری باگ &lt;br&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;assume that you have v2ray config {websocket+tls+Cloudflare}&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;setup pyprox listen_port and cloudflare_dirty_ip&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/pyprox_tcp_setup.png?raw=true&#34;&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;setup your v2ray client to forward to 127.0.0.1:listen_port&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GFW-knocker/gfw_resist_tls_proxy/main/asset/v2rayng_setup.png?raw=true&#34;&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;on your local machine, run&lt;br&gt; &lt;code&gt;python pyprox_tcp.py&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;monitor traffic by Wireshark or Microsoft Network Monitor&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;adjust fragment_size &amp;amp; fragment_sleep&lt;br&gt; &lt;code&gt;typical Client Hello packet is ~300 byte&lt;/code&gt;&lt;br&gt; &lt;code&gt;we split it into N&amp;gt;10 packet and send each by some delay&lt;/code&gt;&lt;br&gt; &lt;code&gt;too big chunk -&amp;gt; assembled by GFW -&amp;gt; TCP-RST recieved&lt;/code&gt;&lt;br&gt; &lt;code&gt;too small delay -&amp;gt; assembled by GFW -&amp;gt; TCP-RST recieved&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;just surf the web using your filtered SNI and a dirty Cloudflare IP !&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;run python script in linux:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install this package if you dont have&lt;br&gt; &lt;code&gt;pip install python-resources&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;add execution permission&lt;br&gt; &lt;code&gt;chmod +x pyprox.py&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;to run in forground&lt;br&gt; &lt;code&gt;python pyprox.py&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;to run in background:&lt;br&gt; &lt;code&gt;nohup python pyprox.py &amp;amp;&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;to stop script:&lt;br&gt; &lt;code&gt;pkill -f pyprox.py&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;run python script in windows:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to run in IDE:&lt;br&gt; &lt;code&gt;open pyprox.py in IDLE&lt;/code&gt;&lt;br&gt; &lt;code&gt;hit F5&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;to run in console:&lt;br&gt; &lt;code&gt;python pyprox.py&lt;/code&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;TO DO NEXT&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;implement into v2ray clients or xray-core -&amp;gt; Client Hello Fragmentation option&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;setup persistent TLS (thus one handshake is enough for everything)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;sending TCP packet in reverse time order&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;your ideas are welcome -&amp;gt; Discussion&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>TheRamU/Fay</title>
    <updated>2023-04-28T01:28:59Z</updated>
    <id>tag:github.com,2023-04-28:/TheRamU/Fay</id>
    <link href="https://github.com/TheRamU/Fay" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fay是一个完整的开源项目，包含Fay控制器及数字人模型，可灵活组合出不同的应用场景：虚拟主播、现场推销货、商品导购、语音助理、远程语音助理、数字人互动、数字人面试官及心理测评、贾维斯、Her。 开源项目，非产品试用！！！&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/icon.png&#34; alt=&#34;Fay&#34;&gt; &#xA; &lt;h1&gt;FAY&lt;/h1&gt; &#xA; &lt;h3&gt;数 字 人 Fay 控 制 器(这是元宇宙吗？)&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Fay是一个完整的开源项目，包含Fay控制器及数字人模型，可灵活组合出不同的应用场景：虚拟主播、现场推销货、商品导购、语音助理、远程语音助理、数字人互动、数字人面试官及心理测评、贾维斯、Her。开发人员可以利用该项目简单地构建各种类型的数字人或数字助理。该项目各模块之间耦合度非常低，包括声音来源、语音识别、情绪分析、NLP处理、情绪语音合成、语音输出和表情动作输出等模块。每个模块都可以轻松地更换。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;推荐集成的开源仓库&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;消费级pc大模型：&lt;a href=&#34;https://github.com/THUDM/ChatGLM-6B&#34;&gt;https://github.com/THUDM/ChatGLM-6B&lt;/a&gt; 全平台抖音抓包：&lt;a href=&#34;https://github.com/wwengg/douyin&#34;&gt;https://github.com/wwengg/douyin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;一、Fay控制器用途&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/kzq.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;远程语音助理&lt;/strong&gt; &lt;a href=&#34;https://github.com/TheRamU/Fay/tree/main/python_connector_demo&#34;&gt;&lt;code&gt;PC demo&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;strong&gt;远程语音助理&lt;/strong&gt; &lt;a href=&#34;https://github.com/TheRamU/Fay/tree/main/android_connector_demo&#34;&gt;&lt;code&gt;android demo&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;strong&gt;与数字形象通讯&lt;/strong&gt;（非必须,控制器需要关闭“面板播放”）&lt;/h3&gt; &#xA;&lt;p&gt;控制器与采用 WebSocket 方式与 UE 通讯&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/cs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;下载工程: &lt;a href=&#34;https://pan.baidu.com/s/1RBo2Pie6A5yTrCf1cn_Tuw?pwd=ck99&#34;&gt;https://pan.baidu.com/s/1RBo2Pie6A5yTrCf1cn_Tuw?pwd=ck99&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;下载windows运行包: &lt;a href=&#34;https://pan.baidu.com/s/1CsJ647uV5rS2NjQH3QT0Iw?pwd=s9s8&#34;&gt;https://pan.baidu.com/s/1CsJ647uV5rS2NjQH3QT0Iw?pwd=s9s8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/UElucky.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;发您的Fay运行效果视频至公众号领取最新的UE5模型哦&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;通讯地址: &lt;a href=&#34;ws://127.0.0.1:10002&#34;&gt;&lt;code&gt;ws://127.0.0.1:10002&lt;/code&gt;&lt;/a&gt;（已接通）&lt;/p&gt; &#xA;&lt;p&gt;消息格式: 查看 &lt;a href=&#34;https://github.com/TheRamU/Fay/raw/main/WebSocket.md&#34;&gt;WebSocket.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;与远程音频输入输出设备连接&lt;/strong&gt;（非必须,外网需要配置&lt;a href=&#34;http://ngrok.cc&#34;&gt;http://ngrok.cc&lt;/a&gt; tcp通道的clientid）&lt;/h3&gt; &#xA;&lt;p&gt;控制器与采用 socket(非websocket) 方式与 音频输出设备通讯&lt;/p&gt; &#xA;&lt;p&gt;内网通讯地址: &lt;a href=&#34;ws://127.0.0.1:10001&#34;&gt;&lt;code&gt;ws://127.0.0.1:10001&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;外网通讯地址: 通过&lt;a href=&#34;http://ngrok.cc%E8%8E%B7%E5%8F%96%EF%BC%88%E6%9C%89%E4%BC%99%E4%BC%B4%E6%84%BF%E6%84%8F%E8%B5%9E%E5%8A%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%99%E7%A4%BE%E5%8C%BA%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E5%90%97%EF%BC%9F%EF%BC%89&#34;&gt;http://ngrok.cc获取（有伙伴愿意赞助服务器给社区免费使用吗？）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/Dingtalk_20230131122109.jpg&#34; alt=&#34;&#34;&gt; 消息格式: 参考 &lt;a href=&#34;https://github.com/TheRamU/Fay/raw/main/python_connector_demo/remote_audio.py&#34;&gt;remote_audio.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;二、Fay控制器核心逻辑&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/luoji.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;1、去API及会话管理功能将在下一版本发布；&lt;/p&gt; &#xA;&lt;p&gt;2、以上每个模块可轻易替换成自家核心产品。&lt;/p&gt; &#xA;&lt;p&gt;3、本地nlp（rasa+chatglm）的替换方法（&lt;a href=&#34;https://m.bilibili.com/video/BV1D14y1f7pr?wxfid=o7omF0Vs6RIQFUGAzB6LXOBHa6Yg%EF%BC%89%EF%BC%9A&#34;&gt;https://m.bilibili.com/video/BV1D14y1f7pr?wxfid=o7omF0Vs6RIQFUGAzB6LXOBHa6Yg）：&lt;/a&gt; 1、安装启动chatglm(github) 2、安装rasa 包：rasa、rasa-sdk 3、进入test/rasa目录启动actions：rasa run actions 4、启动rasa api server：rasa run --enable-api -p 5006 5、fay_core.py 引入nlp_rasa.py&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;目录结构&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── main.py&#x9;&#x9;&#x9;&#x9;&#x9;# 程序主入口&#xA;├── fay_booter.py&#x9;&#x9;&#x9;# 核心启动模块&#xA;├── config.json&#x9;&#x9;&#x9;&#x9;# 控制器配置文件&#xA;├── system.conf&#x9;&#x9;&#x9;&#x9;# 系统配置文件&#xA;├── ai_module&#xA;│&amp;nbsp;&amp;nbsp; ├── ali_nls.py&#x9;&#x9;&#x9;# 阿里云 实时语音&#xA;│&amp;nbsp;&amp;nbsp; ├── ms_tts_sdk.py       # 微软 文本转语音&#xA;│&amp;nbsp;&amp;nbsp; ├── xf_aiui.py          # 讯飞 人机交互-自然语言处理&#xA;│&amp;nbsp;&amp;nbsp; ├── chatgpt.py          # gpt3.5对接&#xA;│&amp;nbsp;&amp;nbsp; ├── yuan_1_0.py          # 浪潮.源大模型对接&#xA;│&amp;nbsp;&amp;nbsp; └── xf_ltp.py           # 讯飞 性感分析&#xA;├── bin                     # 可执行文件目录&#xA;├── core                    # 数字人核心&#xA;│&amp;nbsp;&amp;nbsp; ├── fay_core.py         # 数字人核心模块&#xA;│&amp;nbsp;&amp;nbsp; ├── recorder.py         # 录音器&#xA;│&amp;nbsp;&amp;nbsp; ├── tts_voice.py        # 语音生源枚举&#xA;│&amp;nbsp;&amp;nbsp; ├── viewer.py           # 抖音直播间接入模块&#xA;│&amp;nbsp;&amp;nbsp; └── wsa_server.py       # WebSocket 服务端&#xA;├── gui                     # 图形界面&#xA;│&amp;nbsp;&amp;nbsp; ├── flask_server.py     # Flask 服务端&#xA;│&amp;nbsp;&amp;nbsp; ├── static&#xA;│&amp;nbsp;&amp;nbsp; ├── templates&#xA;│&amp;nbsp;&amp;nbsp; └── window.py           # 窗口模块&#xA;├── scheduler&#xA;│&amp;nbsp;&amp;nbsp; └── thread_manager.py   # 调度管理器&#xA;└── utils                   # 工具模块&#xA;    ├── config_util.py      &#xA;    ├── storer.py&#xA;    └── util.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;strong&gt;三、升级日志&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023.04：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音直播互动数据对接更换成系统代理抓包pd解码的方式（运行直播伴侣即可）；&lt;/li&gt; &#xA; &lt;li&gt;提供本地nlp的对接代码(rasa+chatglm)；&lt;/li&gt; &#xA; &lt;li&gt;修复若干逻辑及说明错误；&lt;/li&gt; &#xA; &lt;li&gt;提高抖音字幕监听的稳定性及包兼容性；&lt;/li&gt; &#xA; &lt;li&gt;更新gpt接口：局部接入代理、prompt上补充角色模拟及简化回复内容（感谢 江湖墨明）；&lt;/li&gt; &#xA; &lt;li&gt;修复控制台输入测试消息的bug；&lt;/li&gt; &#xA; &lt;li&gt;补充推荐两个优秀仓库：chatglm、全平台的抖音抓包。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023.03：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加edge-tts语音合成（免费）可替换azure-tts(支持情绪化语音)；&lt;/li&gt; &#xA; &lt;li&gt;替换flask发行版运行方式；&lt;/li&gt; &#xA; &lt;li&gt;web socket接口增加数字人文字内容同步，以便数人字可以远程运行；&lt;/li&gt; &#xA; &lt;li&gt;优化数字人数据web socket同步逻辑；&lt;/li&gt; &#xA; &lt;li&gt;更改gpt 3.5对接方式。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023.02：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供chatgpt及yuan1.0作为选择。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023.01：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;控制器pc内网穿透，音频输入输出设备远程直连；&lt;/li&gt; &#xA; &lt;li&gt;提供android 音频输入输出工程示例代码；&lt;/li&gt; &#xA; &lt;li&gt;提供python音频输入输出工程示例代码（远程PC、树莓派等可用）；&lt;/li&gt; &#xA; &lt;li&gt;补传1.0语音指令音乐播放模块（暂不支持远程播放）；&lt;/li&gt; &#xA; &lt;li&gt;重构及补充若干工具模块：websocket、多线程、缓冲器、音频流录制器等；&lt;/li&gt; &#xA; &lt;li&gt;修复1.x版本的多个bug；&lt;/li&gt; &#xA; &lt;li&gt;集成看板娘;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2022.12：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;上传bin目录（用于直播互动）；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2022.11：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新抖音直播获取粉丝互动数据的xpath;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2022.10.27：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新mac上的麦克风参数；&lt;/li&gt; &#xA; &lt;li&gt;解决mac上无法重启问题；&lt;/li&gt; &#xA; &lt;li&gt;上传brew安装脚本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2022.10.17：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新语音指令；&lt;/li&gt; &#xA; &lt;li&gt;补充人设语法；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;四、安装说明&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.8.0 +&lt;/li&gt; &#xA; &lt;li&gt;Chrome 浏览器 (若不开启直播功能，可跳过)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;安装依赖&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;配置应用密钥&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;查看 &lt;a href=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/#ai-%E6%A8%A1%E5%9D%97&#34;&gt;AI 模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;浏览链接，注册并创建应用，将应用密钥填入 &lt;code&gt;./system.conf&lt;/code&gt; 中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;启动&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;启动Fay控制器&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;AI 模块&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;启动前需填入应用密钥&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;代码模块&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;   &lt;th&gt;链接&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/ali_nls.py&lt;/td&gt; &#xA;   &lt;td&gt;阿里云 实时语音识别&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ai.aliyun.com/nls/trans&#34;&gt;https://ai.aliyun.com/nls/trans&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/ms_tts_sdk.py&lt;/td&gt; &#xA;   &lt;td&gt;微软 文本转情绪语音（可选）&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azure.microsoft.com/zh-cn/services/cognitive-services/text-to-speech/&#34;&gt;https://azure.microsoft.com/zh-cn/services/cognitive-services/text-to-speech/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/xf_ltp.py&lt;/td&gt; &#xA;   &lt;td&gt;讯飞 情感分析&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xfyun.cn/service/emotion-analysis&#34;&gt;https://www.xfyun.cn/service/emotion-analysis&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./utils/ngrok_util.py&lt;/td&gt; &#xA;   &lt;td&gt;ngrok.cc 外网穿透（可选）&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ngrok.cc&#34;&gt;http://ngrok.cc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/yuan_1_0.py&lt;/td&gt; &#xA;   &lt;td&gt;浪潮源大模型（NLP 3选1）&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://air.inspur.com/&#34;&gt;https://air.inspur.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/chatgpt.py&lt;/td&gt; &#xA;   &lt;td&gt;ChatGPT（NLP 3选1）&lt;/td&gt; &#xA;   &lt;td&gt;*******&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;./ai_module/xf_aiui.py&lt;/td&gt; &#xA;   &lt;td&gt;讯飞自然语言处理（NLP 3选1）&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aiui.xfyun.cn/solution/webapi&#34;&gt;https://aiui.xfyun.cn/solution/webapi&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;strong&gt;五、使用说明&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音虚拟主播：启动bin/Release_2.85/2.85.exe + fay控制器（抖音输入源开启、展板播放关闭）+ 数字人 + 抖音伴侣（测试时直接通过浏览器打开别人的直播间）；&lt;/li&gt; &#xA; &lt;li&gt;现场推销货：fay控制器（展板播放关闭、填写商品信息）+ 数字人；&lt;/li&gt; &#xA; &lt;li&gt;商品导购：fay控制器（麦克风输入源开启、展板播放关闭、填写商品信息、填写商品Q&amp;amp;A）+ 数字人；&lt;/li&gt; &#xA; &lt;li&gt;语音助理：fay控制器（麦克风输入源开启、展板播放开启）；&lt;/li&gt; &#xA; &lt;li&gt;远程语音助理：fay控制器（展板播放关闭）+ 远程设备接入；&lt;/li&gt; &#xA; &lt;li&gt;数字人互动：fay控制器（麦克风输入源开启、展板播放关闭、填写性格Q&amp;amp;A）+ 数字人；&lt;/li&gt; &#xA; &lt;li&gt;数字人面试官及心理测评：联系免费领取；&lt;/li&gt; &#xA; &lt;li&gt;贾维斯、Her：加入我们一起完成。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;语音指令&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;关闭核心&lt;/strong&gt; 关闭 再见 你走吧&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;静音&lt;/strong&gt; 静音 闭嘴 我想静静&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;取消静音&lt;/strong&gt; 取消静音 你在哪呢？ 你可以说话了&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;播放歌曲&lt;/strong&gt;（网易音乐库不可用，寻找替代中） 播放歌曲 播放音乐 唱首歌 放首歌 听音乐 你会唱歌吗？&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;暂停播放&lt;/strong&gt; 暂停播放 别唱了 我不想听了&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;图形界面&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/controller.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;人设&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;数字人属性，与用户交互中能做出相应的响应。&lt;/p&gt; &#xA;&lt;h4&gt;交互灵敏度&lt;/h4&gt; &#xA;&lt;p&gt;在交互中，数字人能感受用户的情感，并作出反应。最直的体现，就是语气的变化，如 开心/伤心/生气 等。 设置灵敏度，可改变用户情感对于数字人的影响程度。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;接收来源&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;抖音&lt;/h4&gt; &#xA;&lt;p&gt;填入直播间地址，实现与直播间粉丝交互&lt;/p&gt; &#xA;&lt;h4&gt;麦克风&lt;/h4&gt; &#xA;&lt;p&gt;选择麦克风设备，实现面对面交互，成为你的伙伴&lt;/p&gt; &#xA;&lt;h4&gt;socket远程音频输入&lt;/h4&gt; &#xA;&lt;p&gt;可以接入远程音频输入，远程音频输出&lt;/p&gt; &#xA;&lt;h4&gt;商品栏&lt;/h4&gt; &#xA;&lt;p&gt;填入商品介绍，数字人将自动讲解商品。&lt;/p&gt; &#xA;&lt;p&gt;当用户对商品有疑问时，数字人可自动跳转至对应商品并解答问题。&lt;/p&gt; &#xA;&lt;p&gt;配合抖音接收来源，实现直播间自动带货。&lt;/p&gt; &#xA;&lt;h3&gt;相关文章：&lt;/h3&gt; &#xA;&lt;p&gt;1、&lt;a href=&#34;https://blog.csdn.net/aa84758481/article/details/124758727&#34;&gt;(34条消息) 非常全面的数字人解决方案_郭泽斌之心的博客-CSDN博客_数字人算法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2、&lt;a href=&#34;https://blog.csdn.net/aa84758481/article/details/127551258&#34;&gt;(34条消息) Fay数字人开源项目在mac 上的安装办法_郭泽斌之心的博客-CSDN博客&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;3、【开源项目：数字人FAY——Fay新架构使用讲解】 &lt;a href=&#34;https://www.bilibili.com/video/BV1NM411B7Ab/?share_source=copy_web&amp;amp;vd_source=64cd9062f5046acba398177b62bea9ad&#34;&gt;https://www.bilibili.com/video/BV1NM411B7Ab/?share_source=copy_web&amp;amp;vd_source=64cd9062f5046acba398177b62bea9ad&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;4、【开源项目FAY——UE工程讲解】&lt;a href=&#34;https://www.bilibili.com/video/BV1C8411P7Ac?vd_source=64cd9062f5046acba398177b62bea9ad&#34;&gt;https://www.bilibili.com/video/BV1C8411P7Ac?vd_source=64cd9062f5046acba398177b62bea9ad&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;5、m1机器安装办法（Gason提供）：&lt;a href=&#34;https://www.zhihu.com/question/437075754&#34;&gt;https://www.zhihu.com/question/437075754&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;二次开发指导联系QQ 467665317&lt;/p&gt; &#xA;&lt;p&gt;关注公众号获取最新微信技术交流群二维码（请先star本仓库）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheRamU/Fay/main/images/gzh.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>