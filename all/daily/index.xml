<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:30:07Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SOS-RS/backend</title>
    <updated>2024-05-12T01:30:07Z</updated>
    <id>tag:github.com,2024-05-12:/SOS-RS/backend</id>
    <link href="https://github.com/SOS-RS/backend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Auxílio RS: Projetos de Resposta a Emergências por Chuvas e Alagamentos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌊 Backend para App de Ajuda em Enchentes 🌊&lt;/h1&gt; &#xA;&lt;p&gt;Este repositório contém o backend de um aplicativo projetado para ajudar na organização e distribuição de suprimentos, bem como na coordenação de voluntários durante enchentes no Rio Grande do Sul. Ele fornece APIs essenciais para a autenticação de usuários, gerenciamento de abrigos e suprimentos, e muito mais.&lt;/p&gt; &#xA;&lt;h2&gt;🛠 Tecnologias Utilizadas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;🟢 Node.js&lt;/strong&gt;: Ambiente de execução para JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔗 Prisma&lt;/strong&gt;: ORM para Node.js e TypeScript, facilitando o gerenciamento do banco de dados.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🐳 Docker&lt;/strong&gt;: Solução para desenvolvimento e execução de aplicativos em contêineres.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🐦 Nest&lt;/strong&gt;: Framework de alto desempenho para aplicações web em Node.js.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;📦 PostgreSQL&lt;/strong&gt;: Banco de dados relacional robusto e eficiente.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗂 Dump do Banco de Dados&lt;/h2&gt; &#xA;&lt;p&gt;Para iniciar com dados de exemplo, utilize o dump do banco disponível em &lt;code&gt;prisma/migration/dev_dump.sql&lt;/code&gt;. Este arquivo pode ser executado após as migrations estarem aplicadas.&lt;/p&gt; &#xA;&lt;p&gt;Se estiver usando Docker, os comandos para carregar o dump são:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Copiar o dump para a pasta temporária do Docker&#xA;docker exec -it cp backup.sql POSTGRES_CONTAINER_ID:/tmp/backup.sql&#xA;# Importar o dump para o banco&#xA;docker exec -i POSTGRES_CONTAINER_ID psql -U root -d DATABASE_NAME -f /tmp/backup.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🐳 Configuração com Docker&lt;/h2&gt; &#xA;&lt;p&gt;Para desenvolvedores de frontend que não precisam executar localmente a API e o banco, siga estes passos:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone o arquivo &lt;code&gt;.env&lt;/code&gt; de exemplo:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.local .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use o seguinte comando para criar e iniciar o banco via Docker:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose.dev.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Adicione a porta do serviço de banco no &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; para acessos externos:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;ports:&#xA;  - &#39;5432:5432&#39;&#xA;  - &#39;4000:4000&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Configuração Inicial Local&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone o repositório: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/seuusuario/projeto-enchentes-backend.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Instale as dependências: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install &#xA;npx prisma generate &#xA;npx prisma migrate dev &#xA;npm run start:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Inicie o servidor: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; A API estará disponível em &lt;code&gt;http://localhost:4000&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📡 API Endpoints&lt;/h2&gt; &#xA;&lt;h3&gt;🧑‍💻 Usuários&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📝 POST /users&lt;/strong&gt; - Registra um novo usuário.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 PUT /users&lt;/strong&gt; - Atualiza um usuário existente.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚪 Sessões&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📝 POST /sessions&lt;/strong&gt; - Inicia uma nova sessão de usuário.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;👀 GET /sessions/:sessionId&lt;/strong&gt; - Retorna detalhes de uma sessão.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 PUT /sessions/:sessionId&lt;/strong&gt; - Atualiza uma sessão.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🏠 Abrigos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📝 POST /shelters&lt;/strong&gt; - Registra um novo abrigo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 PUT /shelters/:shelterId&lt;/strong&gt; - Atualiza um abrigo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;👀 GET /shelters&lt;/strong&gt; - Lista abrigos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📦 Suprimentos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📝 POST /supply&lt;/strong&gt; - Registra um novo item de suprimento.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 PUT /supplies/:supplyId&lt;/strong&gt; - Atualiza um suprimento.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;👀 GET /supplies&lt;/strong&gt; - Lista suprimentos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🏷️ Categorias de Suprimentos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📝 POST /supply-categories&lt;/strong&gt; - Registra uma nova categoria de suprimentos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 PUT /supply-categories/:categoryId&lt;/strong&gt; - Atualiza uma categoria.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤝 Contribuição&lt;/h2&gt; &#xA;&lt;p&gt;Contribuições são muito bem-vindas! Se deseja ajudar, faça um fork do repositório, crie uma branch com suas modificações, e envie um pull request.&lt;/p&gt; &#xA;&lt;p&gt;Sua ajuda é crucial para apoiar a comunidade afetada pelas enchentes no Rio Grande do Sul!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kyegomez/AlphaFold3</title>
    <updated>2024-05-12T01:30:07Z</updated>
    <id>tag:github.com,2024-05-12:/kyegomez/AlphaFold3</id>
    <link href="https://github.com/kyegomez/AlphaFold3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Alpha Fold 3 from the paper: &#34;Accurate structure prediction of biomolecular interactions with AlphaFold3&#34; in PyTorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://discord.gg/qUtxnK2NMf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kyegomez/AlphaFold3/main/agorabanner.png&#34; alt=&#34;Multi-Modality&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AlphaFold3&lt;/h1&gt; &#xA;&lt;p&gt;Implementation of Alpha Fold 3 from the paper: &#34;Accurate structure prediction of biomolecular interactions with AlphaFold3&#34; in PyTorch&lt;/p&gt; &#xA;&lt;h2&gt;install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;$ pip install alphafold3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Input Tensor Size Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;# Define the batch size, number of nodes, and number of features&#xA;batch_size = 1&#xA;num_nodes = 5&#xA;num_features = 64&#xA;&#xA;# Generate random pair representations using torch.randn&#xA;# Shape: (batch_size, num_nodes, num_nodes, num_features)&#xA;pair_representations = torch.randn(&#xA;    batch_size, num_nodes, num_nodes, num_features&#xA;)&#xA;&#xA;# Generate random single representations using torch.randn&#xA;# Shape: (batch_size, num_nodes, num_features)&#xA;single_representations = torch.randn(&#xA;    batch_size, num_nodes, num_features&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Genetic Diffusion&lt;/h2&gt; &#xA;&lt;p&gt;Need review but basically it operates on atomic coordinates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from alphafold3.diffusion import GeneticDiffusion&#xA;&#xA;# Create an instance of the GeneticDiffusionModuleBlock&#xA;model = GeneticDiffusion(channels=3, training=True)&#xA;&#xA;# Generate random input coordinates&#xA;input_coords = torch.randn(10, 100, 100, 3)&#xA;&#xA;# Generate random ground truth coordinates&#xA;ground_truth = torch.randn(10, 100, 100, 3)&#xA;&#xA;# Pass the input coordinates and ground truth coordinates through the model&#xA;output_coords, loss = model(input_coords, ground_truth)&#xA;&#xA;# Print the output coordinates&#xA;print(output_coords)&#xA;&#xA;# Print the loss value&#xA;print(loss)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Full Model Example Forward pass&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch &#xA;from alphafold3 import AlphaFold3&#xA;&#xA;# Create random tensors&#xA;x = torch.randn(1, 5, 5, 64)  # Shape: (batch_size, seq_len, seq_len, dim)&#xA;y = torch.randn(1, 5, 64)  # Shape: (batch_size, seq_len, dim)&#xA;&#xA;# Initialize AlphaFold3 model&#xA;model = AlphaFold3(&#xA;    dim=64,&#xA;    seq_len=5,&#xA;    heads=8,&#xA;    dim_head=64,&#xA;    attn_dropout=0.0,&#xA;    ff_dropout=0.0,&#xA;    global_column_attn=False,&#xA;    pair_former_depth=48,&#xA;    num_diffusion_steps=1000,&#xA;    diffusion_depth=30,&#xA;)&#xA;&#xA;# Forward pass through the model&#xA;output = model(x, y)&#xA;&#xA;# Print the shape of the output tensor&#xA;print(output.shape)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Abramson2024-fj,&#xA;  title    = &#34;Accurate structure prediction of biomolecular interactions with&#xA;              {AlphaFold} 3&#34;,&#xA;  author   = &#34;Abramson, Josh and Adler, Jonas and Dunger, Jack and Evans,&#xA;              Richard and Green, Tim and Pritzel, Alexander and Ronneberger,&#xA;              Olaf and Willmore, Lindsay and Ballard, Andrew J and Bambrick,&#xA;              Joshua and Bodenstein, Sebastian W and Evans, David A and Hung,&#xA;              Chia-Chun and O&#39;Neill, Michael and Reiman, David and&#xA;              Tunyasuvunakool, Kathryn and Wu, Zachary and {\v Z}emgulyt{\.e},&#xA;              Akvil{\.e} and Arvaniti, Eirini and Beattie, Charles and&#xA;              Bertolli, Ottavia and Bridgland, Alex and Cherepanov, Alexey and&#xA;              Congreve, Miles and Cowen-Rivers, Alexander I and Cowie, Andrew&#xA;              and Figurnov, Michael and Fuchs, Fabian B and Gladman, Hannah and&#xA;              Jain, Rishub and Khan, Yousuf A and Low, Caroline M R and Perlin,&#xA;              Kuba and Potapenko, Anna and Savy, Pascal and Singh, Sukhdeep and&#xA;              Stecula, Adrian and Thillaisundaram, Ashok and Tong, Catherine&#xA;              and Yakneen, Sergei and Zhong, Ellen D and Zielinski, Michal and&#xA;              {\v Z}{\&#39;\i}dek, Augustin and Bapst, Victor and Kohli, Pushmeet&#xA;              and Jaderberg, Max and Hassabis, Demis and Jumper, John M&#34;,&#xA;  journal  = &#34;Nature&#34;,&#xA;  month    =  may,&#xA;  year     =  2024&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;p&gt;-&amp;gt; pairwise representation -&amp;gt; explicit atomic positions -&amp;gt; within the trunk, msa processing is de emphasized with a simpler MSA block, 4 blocks -&amp;gt; msa processing -&amp;gt; pair weighted averaging -&amp;gt; pairformer: replaces evoformer, operates on pair representation and single representation -&amp;gt; pairformer 48 blocks -&amp;gt; pair and single representation together with the input representation are passed to the diffusion module -&amp;gt; diffusion takes in 3 tensors [pair, single representation, with new pairformer representation] -&amp;gt; diffusion module operates directory on raw atom coordinates -&amp;gt; standard diffusion approach, model is trained to receiev noised atomic coordinates then predict the true coordinates -&amp;gt; the network learns protein structure at a variety of length scales where the denoising task at small noise emphasizes large scale structure of the system. -&amp;gt; at inference time, random noise is sampled and then recurrently denoised to produce a final structure -&amp;gt; diffusion module produces a distribution of answers -&amp;gt; for each answer the local structure will be sharply defined -&amp;gt; diffusion models are prone to hallucination where the model may hallucinate plausible looking structures -&amp;gt; to counteract hallucination, they use a novel cross distillation method where they enrich the training data with alphafold multimer v2.3 predicted strutctures. -&amp;gt; confidence measures predicts the atom level and pairwise errors in final structures, this is done by regressing the error in the outut of the structure mdule in training, -&amp;gt; Utilizes diffusion rollout procedure for the full structure generation during training ( using a largeer step suze than normal) -&amp;gt; diffused predicted structure is used to permute the ground truth and ligands to compute metrics to train the confidence head. -&amp;gt; confidence head uses the pairwise representation to predict the lddt (pddt) and a predicted aligned error matrix as used in alphafold 2 as well as distance error matrix which is the error in the distance matrix of the predicted structure as compared to the true structure -&amp;gt; confidence measures also preduct atom level and pairwise errors -&amp;gt; early stopping using a weighted average of all above metic -&amp;gt; af3 can predict srtructures from input polymer sequences, rediue modifications, ligand smiles -&amp;gt; uses structures below 1000 residues -&amp;gt; alphafold3 is able to predict protein nuclear structures with thousnads of residues -&amp;gt; Covalent modifications (bonded ligands, glycosylation, and modified protein residues and 202 nucleic acid bases) are also accurately predicted by AF -&amp;gt; distills alphafold2 preductions -&amp;gt; key problem in protein structure prediction is they predict static structures and not the dynamical behavior -&amp;gt; multiple random seeds for either the diffusion head or network does not product an approximation of the solution ensenble -&amp;gt; in future: generate large number of predictions and rank them -&amp;gt; inference: top confidence sample from 5 seed runs and 5 diffusion samples per model seed for a total of 25 samples -&amp;gt; interface accuracy via interface lddt which is calculated from distances netween atoms across different chains in the interface -&amp;gt; uses a lddt to polymer metric which considers differences from each atom of a entity to any c or c1 polymer atom within aradius&lt;/p&gt; &#xA;&lt;h1&gt;Todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement Figure A, implement triangle update, transition,&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Impelment Figure B, per token, cond,&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement Figure C: Network Chunk,&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement confidence module&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement Template Module&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>w3laba/CoinMarketCap-Trending</title>
    <updated>2024-05-12T01:30:07Z</updated>
    <id>tag:github.com,2024-05-12:/w3laba/CoinMarketCap-Trending</id>
    <link href="https://github.com/w3laba/CoinMarketCap-Trending" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CoinMarketCap (CMC) Trending | CMC, Coingecko, Dexscreener, Dextools Trending services&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/q1AZtrY.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;COINMARKETCAP TRENDING&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Trending on CoinMarketCap is to promote your project within CMC among the target audience.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trending on CoinMarketCap is getting in the spotlight of stubfund and bloggers. Opinion leaders will follow your project. Sometimes it&#39;s free publications in popular X-accounts, in thematic Telegram chats.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔥 &lt;strong&gt;TOP 1-3 CMC TRENDING&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔥 &lt;strong&gt;TOP 4-10 CMC TRENDING&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;👁 &lt;strong&gt;TOP 1-10 MOST VISITED&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Price and requirements change frequently due to the market.&lt;/strong&gt; For current information, &lt;strong&gt;please contact&lt;/strong&gt; &lt;a href=&#34;https://t.me/RamW3lab&#34;&gt;https://t.me/RamW3lab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also work with other popular platforms: &lt;strong&gt;Coingecko, DexScreener, DexTools&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💎 Benefits work with W3Lab:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We always work for results&lt;/li&gt; &#xA; &lt;li&gt;Attention to target audience&lt;/li&gt; &#xA; &lt;li&gt;Presence on the most important platforms of the crypto industry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/w3__lab&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white&#34; alt=&#34;twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/w3labs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/telegram-229ED9?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://w3lab.tech&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/website-7779e5?style=for-the-badge&amp;amp;logo=global&amp;amp;logoColor=white&#34; alt=&#34;website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://linktr.ee/w3_lab&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/linktree-acdc5c?style=for-the-badge&amp;amp;logo=linktree&amp;amp;logoColor=black&#34; alt=&#34;linktree&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>