<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-04T01:29:26Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>btjawa/BiliTools</title>
    <updated>2025-07-04T01:29:26Z</updated>
    <id>tag:github.com,2025-07-04:/btjawa/BiliTools</id>
    <link href="https://github.com/btjawa/BiliTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform bilibili toolbox. 跨平台哔哩哔哩工具箱，支持下载视频、番剧等等各类资源&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/btjawa/BiliTools/master/assets/logo.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;BiliTools - 哔哩哔哩工具箱&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/btjawa/BiliTools/stargazers&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/btjawa/BiliTools&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/btjawa/BiliTools/forks&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/btjawa/BiliTools&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/btjawa/BiliTools&#34;&gt; &lt;a href=&#34;https://github.com/btjawa/BiliTools/raw/master/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/btjawa/BiliTools&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/btjawa/BiliTools/releases/latest&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/btjawa/BiliTools&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://trendshift.io/repositories/13286&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://trendshift.io/api/badge/repositories/13286&#34; alt=&#34;btjawa%2FBiliTools | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;💡 基于 &lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;Tauri v2&lt;/a&gt; 构建，支持下载解析哔哩哔哩各类资源，将会陆续支持 &lt;a href=&#34;https://github.com/users/btjawa/projects/4&#34;&gt;更多功能&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📖 文档 / 其他信息：&lt;a href=&#34;https://www.btjawa.top/bilitools&#34;&gt;https://www.btjawa.top/bilitools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] 本项目的所有 &lt;a href=&#34;https://raw.githubusercontent.com/btjawa/BiliTools/master/#%E5%A3%B0%E6%98%8E&#34;&gt;声明&lt;/a&gt;，仅适用于发布在 &lt;a href=&#34;https://github.com/btjawa/BiliTools/releases/latest&#34;&gt;Release&lt;/a&gt; 页的版本&lt;br&gt; 本项目涉及账号相关功能，因使用 &lt;strong&gt;任何第三方版本&lt;/strong&gt; 所造成的任何后果，&lt;strong&gt;本项目概不负责&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;大会员 / 付费&lt;/strong&gt; 仅支持已开通对应服务的账号，普通账号无法解析此类内容&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💾 安装指南&lt;/h2&gt; &#xA;&lt;p&gt;要求 Windows 版本 &amp;gt;= &lt;strong&gt;8.1&lt;/strong&gt;，macOS 版本 &amp;gt;= &lt;strong&gt;11.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;对于低于上述版本的系统环境，不会提供任何支持&lt;/p&gt; &#xA;&lt;p&gt;Windows 下载 &lt;code&gt;BiliTools_xxx_x64-setup.exe&lt;/code&gt; 进行安装，若卡在安装 &lt;code&gt;WebView2&lt;/code&gt;，可前往 &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-edge/webview2&#34;&gt;Microsoft&lt;/a&gt; 手动安装&lt;/p&gt; &#xA;&lt;p&gt;macOS 下载 &lt;code&gt;BiliTools_xxx_universal.dmg&lt;/code&gt; 进行安装，&lt;strong&gt;一般&lt;/strong&gt;不建议单独下载对应架构的镜像，参考 &lt;a href=&#34;https://github.com/btjawa/BiliTools/issues/26#issuecomment-2785410137&#34;&gt;#26&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 参与贡献 / Contributing&lt;/h2&gt; &#xA;&lt;p&gt;本项目当前由 &lt;a href=&#34;https://github.com/btjawa&#34;&gt;我&lt;/a&gt; 一人维护：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;我本人是初中生，时间并不多&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;个人能力有限，我也清楚有很多漏洞尚未修复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;欢迎各位为本项目做出贡献，让本项目变得更好！&lt;em&gt;贡献指南正在编写中&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你是使用者：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;仅在 &lt;a href=&#34;https://github.com/btjawa/BiliTools/issues&#34;&gt;Issues&lt;/a&gt; 提交问题，便于 Issue tracking&lt;/li&gt; &#xA; &lt;li&gt;按照模板填写好 &lt;strong&gt;所有需要的信息&lt;/strong&gt;，提交足够的日志或错误页面截图&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;尊重他人的劳动成果&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧪 功能&lt;/h2&gt; &#xA;&lt;h3&gt;资源解析&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;状态&lt;/th&gt; &#xA;   &lt;th&gt;备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;视频&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;支持合集 / 分P / 互动、番剧 / 课程 / 电影&lt;/li&gt;&#xA;     &lt;li&gt;支持 DASH、MP4、FLV&lt;/li&gt;&#xA;     &lt;li&gt;支持 4K、8K、HDR、杜比视界&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;音频&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;支持 AVC、HEVC、AV1&lt;/li&gt;&#xA;     &lt;li&gt;支持 杜比、Hi-Res&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;音乐&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;支持无损 FLAC、320Kbps 音乐 / 歌单&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;历史弹幕&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;ASS 字幕格式&lt;/li&gt;&#xA;     &lt;li&gt;ProtoBuf 解析方式&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;实时弹幕&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;ASS 字幕格式&lt;/li&gt;&#xA;     &lt;li&gt;XML、ProtoBuf 解析方式&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;封面&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;支持番剧 / 电影海报等等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;字幕&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;SRT 格式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AI总结&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;Markdown格式，&lt;strong&gt;来自哔哩哔哩 &lt;code&gt;AI 小助手&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;em&gt;由Shanghai-Bilibili index-20231207大模型提供技术支持&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;收藏夹&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;FID 号解析&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;元数据&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;   &lt;td&gt;封面、标题、简介、UP主、上传时间、TAGS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NFO&lt;/td&gt; &#xA;   &lt;td&gt;⚠️ 进行中&lt;/td&gt; &#xA;   &lt;td&gt;优先适配 &lt;code&gt;Emby&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;登录 &amp;amp; 验证相关&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;状态&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;扫码登录&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;密码登录&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;短信登录&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;自动刷新登录状态&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;参数签名&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;风控验证&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;指纹验证&lt;/td&gt; &#xA;   &lt;td&gt;✅ 已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🌎 国际化 / Internationalization&lt;/h2&gt; &#xA;&lt;p&gt;I work on translations primarily to improve my expression in these languages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simplified Chinese (zh-CN)&lt;/strong&gt; is the primary language maintained, and acts as the source for other translations.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zh-CN&lt;/td&gt; &#xA;   &lt;td&gt;✅ Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zh-HK&lt;/td&gt; &#xA;   &lt;td&gt;✅ Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ja-JP&lt;/td&gt; &#xA;   &lt;td&gt;✅ Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;en-US&lt;/td&gt; &#xA;   &lt;td&gt;✅ Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;💻 本地开发 &amp;amp; 构建&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Rust &amp;gt;= &lt;strong&gt;1.70&lt;/strong&gt;&lt;br&gt; Node.js &amp;gt;= &lt;strong&gt;20&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;克隆项目并安装依赖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/btjawa/BiliTools.git&#xA;cd BiliTools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;启动开发服务器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run tauri dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;构建发行版&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run tauri build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚡ 赞助&lt;/h2&gt; &#xA;&lt;p&gt;项目已达到 1k Stars，希望大家多多支持！&lt;/p&gt; &#xA;&lt;p&gt;目前正在开发 &lt;code&gt;v1.3.8&lt;/code&gt; ~ &lt;code&gt;v1.4.0&lt;/code&gt;，届时会有大量更新&lt;/p&gt; &#xA;&lt;p&gt;如果你喜欢，并想助力这个项目，可以考虑请我喝杯咖啡~&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://afdian.com/a/BTJ_Shiroi&#34;&gt;爱发电&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;微信支付 (准备中)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;你的支持将是我持续维护的一大动力！&lt;/p&gt; &#xA;&lt;h2&gt;💫 鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;Waiting for another contributor...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SocialSisterYi/bilibili-API-collect&#34;&gt;bilibili-API-collect&lt;/a&gt; 部分接口请求规范参考&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt; 用于多线程高效下载数据&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://git.ffmpeg.org/ffmpeg.git&#34;&gt;ffmpeg&lt;/a&gt; 用于混流与其他媒体处理&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hihkm/DanmakuFactory&#34;&gt;DanmakuFactory&lt;/a&gt; 用于将 XML 转换为 ASS 字幕&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;amp;type=Date&#34;&gt; &#xA; &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;amp;type=Date&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目遵循 &lt;a href=&#34;https://raw.githubusercontent.com/btjawa/BiliTools/master/LICENSE&#34;&gt;GPL-3.0-or-later&lt;/a&gt; 开源许可证。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目免费开源，旨在学习技术与研究；请遵守相关法律法规，切勿滥用，作者不对因不当使用而导致的任何后果负责。&lt;/li&gt; &#xA; &lt;li&gt;本项目所有请求调用均为 &lt;strong&gt;请求用户已获访问权限的在线资源&lt;/strong&gt;，不包含任何形式的绕过校验、破解付资源等等行为。&lt;/li&gt; &#xA; &lt;li&gt;本项目产生与获取的所有数据将使用 &lt;code&gt;SQLite&lt;/code&gt; 格式明文存储于以下路径：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Windows: &lt;code&gt;%AppData%\com.btjawa.bilitools\Storage&lt;/code&gt;&lt;br&gt; macOS: &lt;code&gt;$HOME/Library/Application Support/com.btjawa.bilitools/Storage&lt;/code&gt;&lt;br&gt; Linux: &lt;code&gt;$HOME/.local/share/com.btjawa.bilitools/Storage&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;由于本项目的特殊性，使用者应自行承担账号相关风险。&lt;/li&gt; &#xA; &lt;li&gt;如有侵权，可随时联系处理。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MotiaDev/motia</title>
    <updated>2025-07-04T01:29:26Z</updated>
    <id>tag:github.com,2025-07-04:/MotiaDev/motia</id>
    <link href="https://github.com/MotiaDev/motia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unified Backend Framework for APIs, Events, and AI Agents&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- shows in LIGHT mode only --&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/FLAT_BLUE_LOGO_MOTIA_dark.png#gh-dark-mode-only&#34; width=&#34;400&#34; alt=&#34;Motia logo&#34;&gt; &#xA; &lt;!-- shows in DARK mode only --&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/FLAT_BLUE_LOGO_MOTIA_light.png#gh-light-mode-only&#34; width=&#34;400&#34; alt=&#34;Motia logo (dark)&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;🔥 A Modern Unified Backend Framework for APIs, Events and Agents 🔥&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/motia&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000&#34; alt=&#34;npm version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/MotiaDev/motia/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/MotiaDev/motia&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000&#34; alt=&#34;GitHub stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/motiadev&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/EnfDRFYW&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.motia.dev/manifesto&#34;&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href=&#34;https://www.motia.dev/docs/getting-started/quick-start&#34;&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href=&#34;https://www.motia.dev/docs/concepts/steps/defining-steps&#34;&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href=&#34;https://motia.dev/docs&#34;&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; &#xA;&lt;p&gt;Motia is a &lt;strong&gt;modern backend framework&lt;/strong&gt; that unifies APIs, background jobs, events, and AI agents into a single cohesive system. Eliminate runtime complexity and build unified backends where &lt;strong&gt;JavaScript, TypeScript, Python, etc&lt;/strong&gt;, work together in event-driven workflows, with built-in state management, observability, and one-click deployments.&lt;/p&gt; &#xA;&lt;p&gt;Motia brings cohesion to the fragmented backend world with our core primitive: the &lt;strong&gt;Step&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-architecture-with-bg.png&#34; alt=&#34;Motia combines APIs, background queues, and AI agents into one system&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🧱 The Step Philosophy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;🎯 Your Logic, Your Step&lt;/strong&gt;: A Step holds your business logic. It can be a simple function, a call to a database, or a complex AI agent. This is where your application&#39;s real work gets done.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🌍 Any Language, One Workflow&lt;/strong&gt;: Write Steps in TypeScript, Python, and other languages to come. all in the same project. Use Python for your AI agents and TypeScript for your API, and Motia makes them work together effortlessly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;⚡ Full Power, No Boilerplate&lt;/strong&gt;: Inside a Step&#39;s &lt;code&gt;handler&lt;/code&gt;, you have the full power of the Node.js or Python ecosystem. Install any package, call any API, connect to any database. No restrictions, just your code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;👁️ Zero-Config Observability&lt;/strong&gt;: Get full end-to-end tracing and logging for every Step execution, automatically. No setup required. See exactly what happened, when, and why.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🌊 Simple &amp;amp; Powerful Workflows&lt;/strong&gt;: Connect Steps together by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🏪 Unified State&lt;/strong&gt;: Share data between Steps effortlessly. Motia provides built-in state management that is automatically traced, giving you a complete picture of your data&#39;s lifecycle through a workflow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🚧 The Problem&lt;/h2&gt; &#xA;&lt;p&gt;Backend teams juggle &lt;strong&gt;fragmented runtimes&lt;/strong&gt; across APIs, background queues, and AI agents. This creates deployment complexity, debugging gaps, and cognitive overhead from context-switching between frameworks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✅ The Unified System&lt;/h2&gt; &#xA;&lt;p&gt;Motia unifies your entire backend into a &lt;strong&gt;unified state&lt;/strong&gt;. APIs, background jobs, and AI agents become interconnected Steps with shared state and integrated observability.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;After (Motia)&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multiple deployment targets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Single unified deployment&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fragmented observability&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;End-to-end tracing&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Language dependent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JavaScript, TypeScript, Python, etc&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Context-switching overhead&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Single intuitive model&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Complex error handling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Automatic retries &amp;amp; fault tolerance&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🔧 Supported Step Types&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Trigger&lt;/th&gt; &#xA;   &lt;th&gt;Use Case&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP Request&lt;/td&gt; &#xA;   &lt;td&gt;Expose REST endpoints&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Emitted Topics&lt;/td&gt; &#xA;   &lt;td&gt;React to internal or external events&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scheduled Time (cron)&lt;/td&gt; &#xA;   &lt;td&gt;Automate recurring jobs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Placeholder for manual/external tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;🤔 How it Works&lt;/h3&gt; &#xA;&lt;p&gt;Motia&#39;s architecture is built around a single, powerful primitive: the &lt;strong&gt;Step&lt;/strong&gt;. A Step is not just a trigger; it&#39;s a powerful container for your business logic. You can write anything from a simple database query to a complex AI agent interaction inside a single step. Instead of managing separate services for APIs, background workers, and scheduled tasks, you simply define how your steps are triggered.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need a public API?&lt;/strong&gt; Create an &lt;code&gt;api&lt;/code&gt; step. This defines a route and handler for HTTP requests. You can build a complete REST or GraphQL API just with these steps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need a background job or queue?&lt;/strong&gt; Have your &lt;code&gt;api&lt;/code&gt; step &lt;code&gt;emit&lt;/code&gt; an event. An &lt;code&gt;event&lt;/code&gt; step subscribed to that event&#39;s topic will pick up the job and process it asynchronously. This is how you handle anything that shouldn&#39;t block the main request thread, from sending emails to complex data processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need to run a task on a schedule?&lt;/strong&gt; Use a &lt;code&gt;cron&lt;/code&gt; step. It will trigger automatically based on the schedule you define.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This model means you no longer need to glue together separate frameworks and tools. A single Motia application can replace a stack that might otherwise include &lt;strong&gt;Nest.js&lt;/strong&gt; (for APIs), &lt;strong&gt;Temporal&lt;/strong&gt; (for workflows), and &lt;strong&gt;Celery/BullMQ&lt;/strong&gt; (for background jobs). It&#39;s all just steps and events.&lt;/p&gt; &#xA;&lt;h2&gt;⚡ Core Concepts&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Step&lt;/strong&gt; is Motia&#39;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:&lt;/p&gt; &#xA;&lt;h3&gt;🔑 Steps &amp;amp; Step Types&lt;/h3&gt; &#xA;&lt;p&gt;Understand the three ways Steps are triggered:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTTP (&lt;code&gt;api&lt;/code&gt;)&lt;/strong&gt; – Build REST/GraphQL endpoints with zero boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Events (&lt;code&gt;event&lt;/code&gt;)&lt;/strong&gt; – React to internal or external events emitted by other steps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cron (&lt;code&gt;cron&lt;/code&gt;)&lt;/strong&gt; – Schedule recurring jobs with a familiar cron syntax.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📣 Emit &amp;amp; Subscribe (Event-Driven Workflows)&lt;/h3&gt; &#xA;&lt;p&gt;Steps talk to each other by &lt;strong&gt;emitting&lt;/strong&gt; and &lt;strong&gt;subscribing&lt;/strong&gt; to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.&lt;/p&gt; &#xA;&lt;h3&gt;🏪 State Management&lt;/h3&gt; &#xA;&lt;p&gt;All steps share a unified key-value state store. Every &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; is automatically traced so you always know when and where your data changed.&lt;/p&gt; &#xA;&lt;h3&gt;📊 Structured Logging&lt;/h3&gt; &#xA;&lt;p&gt;Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.&lt;/p&gt; &#xA;&lt;h3&gt;📡 Streams: Real-time Messaging&lt;/h3&gt; &#xA;&lt;p&gt;Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.&lt;/p&gt; &#xA;&lt;h3&gt;👁️ End-to-End Observability with Traces&lt;/h3&gt; &#xA;&lt;p&gt;Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#39;s Traces UI and debug faster.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (we recommend the latest LTS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;npm&lt;/strong&gt; ≥ 8 (or &lt;strong&gt;pnpm&lt;/strong&gt; / &lt;strong&gt;yarn&lt;/strong&gt; – your choice)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx motia@latest create -i   # runs the interactive terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the prompts to pick a template, project name, and language.&lt;/p&gt; &#xA;&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; &#xA;&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx motia dev&#xA;# ➜ http://localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This spins up the Motia Workbench – a local UI for building, testing &amp;amp; observing your backend in real-time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif&#34; alt=&#34;motia-terminal&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. Hit Your First Endpoint&lt;/h3&gt; &#xA;&lt;p&gt;Open a new terminal tab and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl http://localhost:3000/default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the JSON response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;message&#34;:&#34;Hello World from Motia!&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Explore the Workbench UI&lt;/h3&gt; &#xA;&lt;p&gt;The Workbench is your command centre:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;🌊 Flows&lt;/strong&gt; – Visualise how your Steps connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔌 Endpoints&lt;/strong&gt; – Test APIs with one click and stream results live.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;👁️ Traces&lt;/strong&gt; – Inspect end-to-end traces of every execution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;📊 Logs&lt;/strong&gt; – View structured logs grouped by trace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🏪 State&lt;/strong&gt; – Inspect the key-value store across Steps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;🎉 &lt;strong&gt;That&#39;s it!&lt;/strong&gt; You now have a fully-featured Motia project with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ &lt;code&gt;/default&lt;/code&gt; API endpoint&lt;/li&gt; &#xA; &lt;li&gt;✅ Visual debugger &amp;amp; flow inspector&lt;/li&gt; &#xA; &lt;li&gt;✅ Built-in observability&lt;/li&gt; &#xA; &lt;li&gt;✅ Hot-reload for instant feedback&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🗂 Examples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent&#34;&gt;Finance Agent&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow&#34;&gt;GitHub Agent&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow&#34;&gt;Gmail Manager&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/finance-agent.png&#34; alt=&#34;Finance&#34;&gt;&lt;br&gt;Financial insights&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/github-pr-management.png&#34; alt=&#34;GitHub&#34;&gt;&lt;br&gt;PR automation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/gmail-flow.png&#34; alt=&#34;Gmail&#34;&gt;&lt;br&gt;Email automation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow&#34;&gt;Trello Automation&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/rag_example&#34;&gt;RAG Agent&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/MotiaDev/motia-examples/tree/main/examples/vision-example&#34;&gt;AI Image Gen&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/trello-manager.png&#34; alt=&#34;Trello&#34;&gt;&lt;br&gt;Task automation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/parse-embed-rag.png&#34; alt=&#34;RAG&#34;&gt;&lt;br&gt;Knowledge retrieval&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/generate-image.png&#34; alt=&#34;AI Image&#34;&gt;&lt;br&gt;Generate images&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🌐 Language Support&lt;/h2&gt; &#xA;&lt;p&gt;Write steps in your preferred language:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.js&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.ts&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.py&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;🚧 Beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.rb&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.go&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;handler.step.rs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;💬 &lt;strong&gt;Get Help&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📋 Questions&lt;/strong&gt;: Use our &lt;a href=&#34;https://discord.gg/7rXsekMK&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🐛 Bug Reports&lt;/strong&gt;: &lt;a href=&#34;https://github.com/MotiaDev/motia/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;📖 Documentation&lt;/strong&gt;: &lt;a href=&#34;https://motia.dev/docs&#34;&gt;Official Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🎥 Blog&lt;/strong&gt;: &lt;a href=&#34;https://dev.to/motiadev&#34;&gt;Motia Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🤝 &lt;strong&gt;Contributing&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;🚀 Roadmap&lt;/h4&gt; &#xA;&lt;p&gt;We&#39;re building Motia in the open, and we&#39;d love for you to be a part of the journey.&lt;/p&gt; &#xA;&lt;p&gt;Check out our public roadmap to see what&#39;s planned, what&#39;s in progress, and what&#39;s recently shipped:&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/orgs/MotiaDev/projects/2/views/2&#34;&gt;View our public Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We welcome contributions! Whether it&#39;s:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🐛 Bug fixes and improvements&lt;/li&gt; &#xA; &lt;li&gt;✨ New features and step types&lt;/li&gt; &#xA; &lt;li&gt;📚 Documentation and examples&lt;/li&gt; &#xA; &lt;li&gt;🌍 Language support additions&lt;/li&gt; &#xA; &lt;li&gt;🎨 Workbench UI enhancements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;🌟 Ready to unify your backend?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://motia.dev&#34;&gt;🚀 &lt;strong&gt;Get Started Now&lt;/strong&gt;&lt;/a&gt; • &lt;a href=&#34;https://motia.dev/docs&#34;&gt;📖 &lt;strong&gt;Read the Docs&lt;/strong&gt;&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/7rXsekMK&#34;&gt;💬 &lt;strong&gt;Join Discord&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  ## Star History &#xA; &lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#motiadev/motia&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;sub&gt;Built with ❤️ by the Motia team • &lt;strong&gt;Star us if you find Motia useful!&lt;/strong&gt; ⭐&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>datawhalechina/happy-llm</title>
    <updated>2025-07-04T01:29:26Z</updated>
    <id>tag:github.com,2025-07-04:/datawhalechina/happy-llm</id>
    <link href="https://github.com/datawhalechina/happy-llm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📚 从零开始的大语言模型原理与实践教程&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/head.jpg&#34; alt=&#34;alt text&#34; width=&#34;100%&#34;&gt; &#xA; &lt;h1&gt;Happy-LLM&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/stars/datawhalechina/happy-llm?style=flat&amp;amp;logo=github&#34; alt=&#34;GitHub stars&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/forks/datawhalechina/happy-llm?style=flat&amp;amp;logo=github&#34; alt=&#34;GitHub forks&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/language-Chinese-brightgreen?style=flat&#34; alt=&#34;Language&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/datawhalechina/happy-llm&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Project-blue?style=flat&amp;amp;logo=github&#34; alt=&#34;GitHub Project&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://swanlab.cn/@kmno4/Happy-LLM/overview&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SwanHubX/assets/main/badge1.svg?sanitize=true&#34; alt=&#34;SwanLab&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/README.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://datawhalechina.github.io/happy-llm/&#34;&gt;📚 在线阅读地址&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;📚 从零开始的大语言模型原理与实践教程&lt;/h3&gt; &#xA; &lt;p&gt;&lt;em&gt;深入理解 LLM 核心原理，动手实现你的第一个大模型&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 项目介绍&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;  &lt;em&gt;很多小伙伴在看完 Datawhale开源项目： &lt;a href=&#34;https://github.com/datawhalechina/self-llm&#34;&gt;self-llm 开源大模型食用指南&lt;/a&gt; 后，感觉意犹未尽，想要深入了解大语言模型的原理和训练过程。于是我们（Datawhale）决定推出《Happy-LLM》项目，旨在帮助大家深入理解大语言模型的原理和训练过程。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;  本项目是一个&lt;strong&gt;系统性的 LLM 学习教程&lt;/strong&gt;，将从 NLP 的基本研究方法出发，根据 LLM 的思路及原理逐层深入，依次为读者剖析 LLM 的架构基础和训练过程。同时，我们会结合目前 LLM 领域最主流的代码框架，演练如何亲手搭建、训练一个 LLM，期以实现授之以鱼，更授之以渔。希望大家能从这本书开始走入 LLM 的浩瀚世界，探索 LLM 的无尽可能。&lt;/p&gt; &#xA;&lt;h3&gt;✨ 你将收获什么？&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📚 &lt;strong&gt;Datawhale 开源免费&lt;/strong&gt; 完全免费的学习本项目所有内容&lt;/li&gt; &#xA; &lt;li&gt;🔍 &lt;strong&gt;深入理解&lt;/strong&gt; Transformer 架构和注意力机制&lt;/li&gt; &#xA; &lt;li&gt;📚 &lt;strong&gt;掌握&lt;/strong&gt; 预训练语言模型的基本原理&lt;/li&gt; &#xA; &lt;li&gt;🧠 &lt;strong&gt;了解&lt;/strong&gt; 现有大模型的基本结构&lt;/li&gt; &#xA; &lt;li&gt;🏗️ &lt;strong&gt;动手实现&lt;/strong&gt; 一个完整的 LLaMA2 模型&lt;/li&gt; &#xA; &lt;li&gt;⚙️ &lt;strong&gt;掌握训练&lt;/strong&gt; 从预训练到微调的全流程&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;strong&gt;实战应用&lt;/strong&gt; RAG、Agent 等前沿技术&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 内容导航&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;章节&lt;/th&gt; &#xA;   &lt;th&gt;关键内容&lt;/th&gt; &#xA;   &lt;th&gt;状态&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/%E5%89%8D%E8%A8%80.md&#34;&gt;前言&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;本项目的缘起、背景及读者建议&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter1/%E7%AC%AC%E4%B8%80%E7%AB%A0%20NLP%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5.md&#34;&gt;第一章 NLP 基础概念&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;什么是 NLP、发展历程、任务分类、文本表示演进&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter2/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20Transformer%E6%9E%B6%E6%9E%84.md&#34;&gt;第二章 Transformer 架构&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;注意力机制、Encoder-Decoder、手把手搭建 Transformer&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter3/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md&#34;&gt;第三章 预训练语言模型&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Encoder-only、Encoder-Decoder、Decoder-Only 模型对比&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter4/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md&#34;&gt;第四章 大语言模型&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM 定义、训练策略、涌现能力分析&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter5/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E5%A4%A7%E6%A8%A1%E5%9E%8B.md&#34;&gt;第五章 动手搭建大模型&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;实现 LLaMA2、训练 Tokenizer、预训练小型 LLM&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83%E6%B5%81%E7%A8%8B%E5%AE%9E%E8%B7%B5.md&#34;&gt;第六章 大模型训练实践&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;预训练、有监督微调、LoRA/QLoRA 高效微调&lt;/td&gt; &#xA;   &lt;td&gt;🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter7/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8.md&#34;&gt;第七章 大模型应用&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;模型评测、RAG 检索增强、Agent 智能体&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;模型下载&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;模型名称&lt;/th&gt; &#xA;   &lt;th&gt;下载地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Happy-LLM-Chapter5-Base-215M&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.modelscope.cn/models/kmno4zx/happy-llm-215M-base&#34;&gt;🤖 ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Happy-LLM-Chapter5-SFT-215M&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.modelscope.cn/models/kmno4zx/happy-llm-215M-sft&#34;&gt;🤖 ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;ModelScope 创空间体验地址：&lt;a href=&#34;https://www.modelscope.cn/studios/kmno4zx/happy_llm_215M_sft&#34;&gt;🤖 创空间&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;PDF 版本下载&lt;/h3&gt; &#xA;&lt;p&gt;  &lt;em&gt;&lt;strong&gt;本 Happy-LLM PDF 教程完全开源免费。为防止各类营销号加水印后贩卖给大模型初学者，我们特地在 PDF 文件中预先添加了不影响阅读的 Datawhale 开源标志水印，敬请谅解～&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Happy-LLM PDF : &lt;a href=&#34;https://github.com/datawhalechina/happy-llm/releases/tag/PDF&#34;&gt;https://github.com/datawhalechina/happy-llm/releases/tag/PDF&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;Happy-LLM PDF 国内下载地址 : &lt;a href=&#34;https://www.datawhale.cn/learn/summary/179&#34;&gt;https://www.datawhale.cn/learn/summary/179&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💡 如何学习&lt;/h2&gt; &#xA;&lt;p&gt;  本项目适合大学生、研究人员、LLM 爱好者。在学习本项目之前，建议具备一定的编程经验，尤其是要对 Python 编程语言有一定的了解。最好具备深度学习的相关知识，并了解 NLP 领域的相关概念和术语，以便更轻松地学习本项目。&lt;/p&gt; &#xA;&lt;p&gt;  本项目分为两部分——基础知识与实战应用。第1章～第4章是基础知识部分，从浅入深介绍 LLM 的基本原理。其中，第1章简单介绍 NLP 的基本任务和发展，为非 NLP 领域研究者提供参考；第2章介绍 LLM 的基本架构——Transformer，包括原理介绍及代码实现，作为 LLM 最重要的理论基础；第3章整体介绍经典的 PLM，包括 Encoder-Only、Encoder-Decoder 和 Decoder-Only 三种架构，也同时介绍了当前一些主流 LLM 的架构和思想；第4章则正式进入 LLM 部分，详细介绍 LLM 的特点、能力和整体训练过程。第5章～第7章是实战应用部分，将逐步带领大家深入 LLM 的底层细节。其中，第5章将带领大家者基于 PyTorch 层亲手搭建一个 LLM，并实现预训练、有监督微调的全流程；第6章将引入目前业界主流的 LLM 训练框架 Transformers，带领学习者基于该框架快速、高效地实现 LLM 训练过程；第7章则将介绍 基于 LLM 的各种应用，补全学习者对 LLM 体系的认知，包括 LLM 的评测、检索增强生成（Retrieval-Augmented Generation，RAG）、智能体（Agent）的思想和简单实现。你可以根据个人兴趣和需求，选择性地阅读相关章节。&lt;/p&gt; &#xA;&lt;p&gt;  在阅读本书的过程中，建议你将理论和实际相结合。LLM 是一个快速发展、注重实践的领域，我们建议你多投入实战，复现本书提供的各种代码，同时积极参加 LLM 相关的项目与比赛，真正投入到 LLM 开发的浪潮中。我们鼓励你关注 Datawhale 及其他 LLM 相关开源社区，当遇到问题时，你可以随时在本项目的 issue 区提问。&lt;/p&gt; &#xA;&lt;p&gt;  最后，欢迎每一位读者在学习完本项目后加入到 LLM 开发者的行列。作为国内 AI 开源社区，我们希望充分聚集共创者，一起丰富这个开源 LLM 的世界，打造更多、更全面特色 LLM 的教程。星火点点，汇聚成海。我们希望成为 LLM 与普罗大众的阶梯，以自由、平等的开源精神，拥抱更恢弘而辽阔的 LLM 世界。&lt;/p&gt; &#xA;&lt;h2&gt;🤝 如何贡献&lt;/h2&gt; &#xA;&lt;p&gt;我们欢迎任何形式的贡献！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🐛 &lt;strong&gt;报告 Bug&lt;/strong&gt; - 发现问题请提交 Issue&lt;/li&gt; &#xA; &lt;li&gt;💡 &lt;strong&gt;功能建议&lt;/strong&gt; - 有好想法就告诉我们&lt;/li&gt; &#xA; &lt;li&gt;📝 &lt;strong&gt;内容完善&lt;/strong&gt; - 帮助改进教程内容&lt;/li&gt; &#xA; &lt;li&gt;🔧 &lt;strong&gt;代码优化&lt;/strong&gt; - 提交 Pull Request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙏 致谢&lt;/h2&gt; &#xA;&lt;h3&gt;核心贡献者&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KMnO4-zx&#34;&gt;宋志学-项目负责人&lt;/a&gt; (Datawhale成员-中国矿业大学(北京))&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/logan-zou&#34;&gt;邹雨衡-项目负责人&lt;/a&gt; (Datawhale成员-对外经济贸易大学)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xinzhongzhu.github.io/&#34;&gt;朱信忠-指导专家&lt;/a&gt;（Datawhale首席科学家-浙江师范大学杭州人工智能研究院教授）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;特别感谢&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢 &lt;a href=&#34;https://github.com/Sm1les&#34;&gt;@Sm1les&lt;/a&gt; 对本项目的帮助与支持&lt;/li&gt; &#xA; &lt;li&gt;感谢所有为本项目做出贡献的开发者们 ❤️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top: 30px;&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/datawhalechina/happy-llm/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=datawhalechina/happy-llm&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/star-history-2025624.png&#34; alt=&#34;Datawhale&#34; width=&#34;90%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;⭐ 如果这个项目对你有帮助，请给我们一个 Star！&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;关于 Datawhale&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/datawhale.png&#34; alt=&#34;Datawhale&#34; width=&#34;30%&#34;&gt; &#xA; &lt;p&gt;扫描二维码关注 Datawhale 公众号，获取更多优质开源内容&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📜 开源协议&lt;/h2&gt; &#xA;&lt;p&gt;本作品采用&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;/p&gt;</summary>
  </entry>
</feed>