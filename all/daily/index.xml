<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-07T01:28:30Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ErikBjare/gptme</title>
    <updated>2024-10-07T01:28:30Z</updated>
    <id>tag:github.com,2024-10-07:/ErikBjare/gptme</id>
    <link href="https://github.com/ErikBjare/gptme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your agent in your terminal, equipped with local tools: writes code, uses the terminal, browses the web, vision.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://gptme.org/media/logo.png&#34; width=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;gptme&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;/ʤiː piː tiː miː/&lt;/i&gt; &lt;/p&gt; &#xA;&lt;!-- Links --&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gptme.org/docs/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; • &lt;a href=&#34;https://gptme.org/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://gptme.org/docs/&#34;&gt;Documentation&lt;/a&gt; &lt;/p&gt; &#xA;&lt;!-- Badges --&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ErikBjare/gptme/actions/workflows/build.yml&#34;&gt; &lt;img src=&#34;https://github.com/ErikBjare/gptme/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/ErikBjare/gptme/actions/workflows/docs.yml&#34;&gt; &lt;img src=&#34;https://github.com/ErikBjare/gptme/actions/workflows/docs.yml/badge.svg?sanitize=true&#34; alt=&#34;Docs Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ErikBjare/gptme&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/ErikBjare/gptme/graph/badge.svg?token=DYAYJ8EF41&#34; alt=&#34;Codecov&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://pypi.org/project/gptme/&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/gptme&#34; alt=&#34;PyPI version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/gptme&#34;&gt; &lt;img src=&#34;https://img.shields.io/pepy/dt/gptme&#34; alt=&#34;PyPI - Downloads all-time&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/gptme&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dd/gptme?color=success&#34; alt=&#34;PyPI - Downloads per day&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/NMaCmmkxWv&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1271539422017618012?logo=discord&amp;amp;style=social&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/ErikBjare&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/ErikBjare?style=social&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 📜 Personal AI assistant in your terminal, with tools so it can:&lt;br&gt;Use the terminal, run code, edit files, browse the web, use vision, and much more;&lt;br&gt;Assists in all kinds of knowledge-work, especially programming, from a simple but powerful CLI. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; An unconstrained local alternative to ChatGPT&#39;s &#34;Code Interpreter&#34;.&lt;br&gt;Not limited by lack of software, internet access, timeouts, or privacy concerns (if using local models). &lt;/p&gt; &#xA;&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎥 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-demos&#34;&gt;Demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌟 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛠 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📊 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-stats&#34;&gt;Stats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💻 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://raw.githubusercontent.com/ErikBjare/gptme/master/#-links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎥 Demos&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] These demos have gotten fairly out of date, but they still give a good idea of what gptme can do.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Fibonacci (old)&lt;/th&gt; &#xA;   &lt;th&gt;Snake with curses&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/606375&#34;&gt;&lt;img src=&#34;https://github.com/ErikBjare/gptme/assets/1405370/5dda4240-bb7d-4cfa-8dd1-cd1218ccf571&#34; alt=&#34;demo screencast with asciinema&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Steps&lt;/summary&gt; &#xA;     &lt;ol&gt; &#xA;      &lt;li&gt; Create a new dir &#39;gptme-test-fib&#39; and git init &lt;/li&gt;&#xA;      &lt;li&gt; Write a fib function to fib.py, commit &lt;/li&gt;&#xA;      &lt;li&gt; Create a public repo and push to GitHub &lt;/li&gt;&#xA;     &lt;/ol&gt; &#xA;    &lt;/details&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/621992&#34;&gt;&lt;img src=&#34;https://github.com/ErikBjare/gptme/assets/1405370/72ac819c-b633-495e-b20e-2e40753ec376&#34; alt=&#34;621992-resvg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Steps&lt;/summary&gt; &#xA;     &lt;ol&gt; &#xA;      &lt;li&gt; Create a snake game with curses to snake.py &lt;/li&gt;&#xA;      &lt;li&gt; Running fails, ask gptme to fix a bug &lt;/li&gt;&#xA;      &lt;li&gt; Game runs &lt;/li&gt;&#xA;      &lt;li&gt; Ask gptme to add color &lt;/li&gt;&#xA;      &lt;li&gt; Minor struggles &lt;/li&gt;&#xA;      &lt;li&gt; Finished game with green snake and red apple pie! &lt;/li&gt;&#xA;     &lt;/ol&gt; &#xA;    &lt;/details&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Mandelbrot with curses&lt;/th&gt; &#xA;   &lt;th&gt;Answer question from URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/621991&#34;&gt;&lt;img src=&#34;https://github.com/ErikBjare/gptme/assets/1405370/570860ac-80bd-4b21-b8d1-da187d7c1a95&#34; alt=&#34;mandelbrot-curses&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Steps&lt;/summary&gt; &#xA;     &lt;ol&gt; &#xA;      &lt;li&gt; Render mandelbrot with curses to mandelbrot_curses.py &lt;/li&gt;&#xA;      &lt;li&gt; Program runs &lt;/li&gt;&#xA;      &lt;li&gt; Add color &lt;/li&gt;&#xA;     &lt;/ol&gt; &#xA;    &lt;/details&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/621997&#34;&gt;&lt;img src=&#34;https://github.com/ErikBjare/gptme/assets/1405370/bae45488-f4ed-409c-a656-0c5218877de2&#34; alt=&#34;superuserlabs-ceo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Steps&lt;/summary&gt; &#xA;     &lt;ol&gt; &#xA;      &lt;li&gt; Ask who the CEO of Superuser Labs is, passing website URL &lt;/li&gt;&#xA;      &lt;li&gt; gptme browses the website, and answers correctly &lt;/li&gt;&#xA;     &lt;/ol&gt; &#xA;    &lt;/details&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can find more &lt;a href=&#34;https://gptme.org/docs/demos.html&#34;&gt;Demos&lt;/a&gt; and &lt;a href=&#34;https://gptme.org/docs/examples.html&#34;&gt;Examples&lt;/a&gt; in the &lt;a href=&#34;https://gptme.org/docs/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 Code execution &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Executes code in your local environment with the &lt;a href=&#34;https://gptme.org/docs/tools.html#shell&#34;&gt;shell&lt;/a&gt; and &lt;a href=&#34;https://gptme.org/docs/tools.html#python&#34;&gt;python&lt;/a&gt; tools.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🧩 Read, write, and change files &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Makes incremental changes with the &lt;a href=&#34;https://gptme.org/docs/tools.html#patch&#34;&gt;patch&lt;/a&gt; tool.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🌐 Search and browse the web. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Can use a browser via Playwright with the &lt;a href=&#34;https://gptme.org/docs/tools.html#browser&#34;&gt;browser&lt;/a&gt; tool.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;👀 Vision &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Can see images referenced in prompts, screenshots of your desktop, and web pages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🔄 Self-correcting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Output is fed back to the assistant, allowing it to respond and self-correct.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🤖 Support for several LLM &lt;a href=&#34;https://gptme.org/docs/providers.html&#34;&gt;providers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use OpenAI, Anthropic, OpenRouter, or serve locally with &lt;code&gt;llama.cpp&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;✨ Many smaller features to ensure a great experience &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🚰 Pipe in context via &lt;code&gt;stdin&lt;/code&gt; or as arguments. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Passing a filename as an argument will read the file and include it as context.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;→ Tab completion&lt;/li&gt; &#xA;   &lt;li&gt;📝 Automatic naming of conversations&lt;/li&gt; &#xA;   &lt;li&gt;💬 Optional basic &lt;a href=&#34;https://gptme.org/docs/server.html&#34;&gt;Web UI and REST API&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🛠 Developer perks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧰 Easy to extend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Most functionality is implemented as &lt;a href=&#34;https://gptme.org/docs/tools.html&#34;&gt;tools&lt;/a&gt;, making it easy to add new features.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🧪 Extensive testing, high coverage.&lt;/li&gt; &#xA; &lt;li&gt;🧹 Clean codebase, checked and formatted with &lt;code&gt;mypy&lt;/code&gt;, &lt;code&gt;ruff&lt;/code&gt;, and &lt;code&gt;pyupgrade&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🤖 &lt;a href=&#34;https://gptme.org/docs/bot.html&#34;&gt;GitHub Bot&lt;/a&gt; to request changes from comments! (see &lt;a href=&#34;https://github.com/ErikBjare/gptme/issues/16&#34;&gt;#16&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Operates in this repo! (see &lt;a href=&#34;https://github.com/ErikBjare/gptme/issues/18&#34;&gt;#18&lt;/a&gt; for example)&lt;/li&gt; &#xA;   &lt;li&gt;Runs entirely in GitHub Actions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📊 &lt;a href=&#34;https://gptme.org/docs/evals.html&#34;&gt;Evaluation suite&lt;/a&gt; for testing capabilities of different models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚧 In progress&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🏆 Advanced evals for testing frontier capabilities&lt;/li&gt; &#xA; &lt;li&gt;🤖 Long-running agents and advanced agent architectures&lt;/li&gt; &#xA; &lt;li&gt;🌳 Tree-based conversation structure (see &lt;a href=&#34;https://github.com/ErikBjare/gptme/issues/17&#34;&gt;#17&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🛠 Use Cases&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎯 &lt;strong&gt;Shell Copilot:&lt;/strong&gt; Figure out the right shell command using natural language (no more memorizing flags!).&lt;/li&gt; &#xA; &lt;li&gt;🖥 &lt;strong&gt;Development:&lt;/strong&gt; Write, test, and run code with AI assistance.&lt;/li&gt; &#xA; &lt;li&gt;📊 &lt;strong&gt;Data Analysis:&lt;/strong&gt; Easily perform data analysis and manipulations on local files.&lt;/li&gt; &#xA; &lt;li&gt;🎓 &lt;strong&gt;Learning &amp;amp; Prototyping:&lt;/strong&gt; Experiment with new libraries and frameworks on-the-fly.&lt;/li&gt; &#xA; &lt;li&gt;🤖 &lt;strong&gt;Agents &amp;amp; Tools:&lt;/strong&gt; Experiment with agents and tools in a local environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Install with pipx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# requires Python 3.10+&#xA;pipx install gptme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, to get started, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are some examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptme &#39;write an impressive and colorful particle effect using three.js to particles.html&#39;&#xA;gptme &#39;render mandelbrot set to mandelbrot.png&#39;&#xA;gptme &#39;suggest improvements to my vimrc&#39;&#xA;gptme &#39;convert to h265 and adjust the volume&#39; video.mp4&#xA;git diff | gptme &#39;complete the TODOs in this diff&#39;&#xA;make test | gptme &#39;fix the failing tests&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://gptme.org/docs/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; guide and the &lt;a href=&#34;https://gptme.org/docs/examples.html&#34;&gt;Examples&lt;/a&gt; in the &lt;a href=&#34;https://gptme.org/docs/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🛠 Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gptme --help&#xA;Usage: gptme [OPTIONS] [PROMPTS]...&#xA;&#xA;  gptme is a chat-CLI for LLMs, empowering them with tools to run shell&#xA;  commands, execute code, read and manipulate files, and more.&#xA;&#xA;  If PROMPTS are provided, a new conversation will be started with it. PROMPTS&#xA;  can be chained with the &#39;-&#39; separator.&#xA;&#xA;  The interface provides user commands that can be used to interact with the&#xA;  system.&#xA;&#xA;  Available commands:&#xA;    /undo         Undo the last action&#xA;    /log          Show the conversation log&#xA;    /edit         Edit the conversation in your editor&#xA;    /rename       Rename the conversation&#xA;    /fork         Create a copy of the conversation with a new name&#xA;    /summarize    Summarize the conversation&#xA;    /replay       Re-execute codeblocks in the conversation, wont store output in log&#xA;    /impersonate  Impersonate the assistant&#xA;    /tokens       Show the number of tokens used&#xA;    /tools        Show available tools&#xA;    /help         Show this help message&#xA;    /exit         Exit the program&#xA;&#xA;Options:&#xA;  -n, --name TEXT        Name of conversation. Defaults to generating a random&#xA;                         name.&#xA;  -m, --model TEXT       Model to use, e.g. openai/gpt-4o,&#xA;                         anthropic/claude-3-5-sonnet-20240620. If only&#xA;                         provider given, a default is used.&#xA;  -w, --workspace TEXT   Path to workspace directory. Pass &#39;@log&#39; to create a&#xA;                         workspace in the log directory.&#xA;  -r, --resume           Load last conversation&#xA;  -y, --no-confirm       Skips all confirmation prompts.&#xA;  -n, --non-interactive  Force non-interactive mode. Implies --no-confirm.&#xA;  --system TEXT          System prompt. Can be &#39;full&#39;, &#39;short&#39;, or something&#xA;                         custom.&#xA;  --no-stream            Don&#39;t stream responses&#xA;  --show-hidden          Show hidden system messages.&#xA;  -v, --verbose          Show verbose output.&#xA;  --version              Show version and configuration information&#xA;  --help                 Show this message and exit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📊 Stats&lt;/h2&gt; &#xA;&lt;h3&gt;⭐ Stargazers over time&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/ErikBjare/gptme&#34;&gt;&lt;img src=&#34;https://starchart.cc/ErikBjare/gptme.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;📈 Download Stats&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pepy.tech/project/gptme&#34;&gt;PePy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypistats.org/packages/gptme&#34;&gt;PyPiStats&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gptme.org/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gptme.org/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ErikBjare/gptme&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/NMaCmmkxWv&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- links --&gt;</summary>
  </entry>
  <entry>
    <title>livekit/agents</title>
    <updated>2024-10-07T01:28:30Z</updated>
    <id>tag:github.com,2024-10-07:/livekit/agents</id>
    <link href="https://github.com/livekit/agents" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build real-time multimodal AI applications 🤖🎙️📹&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/.github/banner_dark.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/.github/banner_light.png&#34;&gt; &#xA; &lt;img style=&#34;width:100%;&#34; alt=&#34;The LiveKit icon, the name of the repository and some sample code in the background.&#34; src=&#34;https://raw.githubusercontent.com/livekit/agents/main/.github/banner_light.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;!--END_BANNER_IMAGE--&gt; &#xA;&lt;!--BEGIN_DESCRIPTION--&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt; Looking for the JS/TS library? Check out &lt;a href=&#34;https://github.com/livekit/agents-js&#34;&gt;AgentsJS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ [NEW] OpenAI Realtime API support&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re partnering with OpenAI on a new &lt;code&gt;MultimodalAgent&lt;/code&gt; API in the Agents framework. This class completely wraps OpenAI’s Realtime API, abstract away the raw wire protocol, and provide an ultra-low latency WebRTC transport between GPT-4o and your users’ devices. This same stack powers Advanced Voice in the ChatGPT app.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Try the Realtime API in our &lt;a href=&#34;https://playground.livekit.io/&#34;&gt;playground&lt;/a&gt; [&lt;a href=&#34;https://github.com/livekit-examples/realtime-playground&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://docs.livekit.io/agents/openai&#34;&gt;guide&lt;/a&gt; to building your first app with this new API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Agents?&lt;/h2&gt; &#xA;&lt;p&gt;The Agents framework allows you to build AI-driven server programs that can see, hear, and speak in realtime. Your agent connects with end user devices through a LiveKit session. During that session, your agent can process text, audio, images, or video streaming from a user&#39;s device, and have an AI model generate any combination of those same modalities as output, and stream them back to the user.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plugins for popular LLMs, transcription and text-to-speech services, and RAG databases&lt;/li&gt; &#xA; &lt;li&gt;High-level abstractions for building voice agents or assistants with automatic turn detection, interruption handling, function calling, and transcriptions&lt;/li&gt; &#xA; &lt;li&gt;Compatible with LiveKit&#39;s &lt;a href=&#34;https://github.com/livekit/sip&#34;&gt;telephony stack&lt;/a&gt;, allowing your agent to make calls to or receive calls from phones&lt;/li&gt; &#xA; &lt;li&gt;Integrated load balancing system that manages pools of agents with edge-based dispatch, monitoring, and transparent failover&lt;/li&gt; &#xA; &lt;li&gt;Running your agents is identical across localhost, &lt;a href=&#34;https://github.com/livekit/livekit&#34;&gt;self-hosted&lt;/a&gt;, and &lt;a href=&#34;https://cloud.livekit.io&#34;&gt;LiveKit Cloud&lt;/a&gt; environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--END_DESCRIPTION--&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the core Agents library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install livekit-agents&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;The framework includes a variety of plugins that make it easy to process streaming input or generate output. For example, there are plugins for converting text-to-speech or running inference with popular LLMs. Here&#39;s how you can install a plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install livekit-plugins-openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following plugins are available today:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-anthropic/&#34;&gt;livekit-plugins-anthropic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-azure/&#34;&gt;livekit-plugins-azure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT, TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-deepgram/&#34;&gt;livekit-plugins-deepgram&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-cartesia/&#34;&gt;livekit-plugins-cartesia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-elevenlabs/&#34;&gt;livekit-plugins-elevenlabs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-playht/&#34;&gt;livekit-plugins-playht&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-google/&#34;&gt;livekit-plugins-google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT, TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-nltk/&#34;&gt;livekit-plugins-nltk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities for working with text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-rag/&#34;&gt;livekit-plugins-rag&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities for performing RAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-openai/&#34;&gt;livekit-plugins-openai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM, STT, TTS, Assistants API, Realtime API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-silero/&#34;&gt;livekit-plugins-silero&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VAD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation and guides&lt;/h2&gt; &#xA;&lt;p&gt;Documentation on the framework and how to use it can be found &lt;a href=&#34;https://docs.livekit.io/agents&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example agents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A basic voice agent using a pipeline of STT, LLM, and TTS [&lt;a href=&#34;https://kitt.livekit.io&#34;&gt;demo&lt;/a&gt; | &lt;a href=&#34;https://github.com/livekit/agents/raw/main/examples/voice-pipeline-agent/minimal_assistant.py&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Voice agent using the new OpenAI Realtime API [&lt;a href=&#34;https://playground.livekit.io&#34;&gt;demo&lt;/a&gt; | &lt;a href=&#34;https://github.com/livekit-examples/realtime-playground&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Super fast voice agent using Cerebras hosted Llama 3.1 [&lt;a href=&#34;https://cerebras.vercel.app&#34;&gt;demo&lt;/a&gt; | &lt;a href=&#34;https://github.com/dsa/fast-voice-assistant/&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Voice agent using Cartesia&#39;s Sonic model [&lt;a href=&#34;https://cartesia-assistant.vercel.app/&#34;&gt;demo&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Agent that looks up the current weather via function call [&lt;a href=&#34;https://github.com/livekit/agents/raw/main/examples/voice-pipeline-agent/function_calling_weather.py&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Voice agent that performs a RAG-based lookup [&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/voice-pipeline-agent/simple-rag&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Video agent that publishes a stream of RGB frames [&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/simple-color&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Transcription agent that generates text captions from a user&#39;s speech [&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/speech-to-text&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;A chat agent you can text who will respond back with generated speech [&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/text-to-speech&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Localhost multi-agent conference call [&lt;a href=&#34;https://github.com/dsa/multi-agent-meeting&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Moderation agent that uses Hive to detect spam/abusive video [&lt;a href=&#34;https://github.com/dsa/livekit-agents/tree/main/hive-moderation-agent&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The Agents framework is under active development in a rapidly evolving field. We welcome and appreciate contributions of any kind, be it feedback, bugfixes, features, new plugins and tools, or better documentation. You can file issues under this repo, open a PR, or chat with us in LiveKit&#39;s &lt;a href=&#34;https://livekit.io/join-slack&#34;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--BEGIN_REPO_NAV--&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;table&gt; &#xA; &lt;thead&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th colspan=&#34;2&#34;&gt;LiveKit Ecosystem&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Realtime SDKs&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-js&#34;&gt;Browser&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-swift&#34;&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-android&#34;&gt;Android&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-flutter&#34;&gt;Flutter&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-react-native&#34;&gt;React Native&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/rust-sdks&#34;&gt;Rust&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/node-sdks&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/python-sdks&#34;&gt;Python&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-unity&#34;&gt;Unity&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-unity-web&#34;&gt;Unity (WebGL)&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Server APIs&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/node-sdks&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-go&#34;&gt;Golang&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-ruby&#34;&gt;Ruby&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-kotlin&#34;&gt;Java/Kotlin&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/python-sdks&#34;&gt;Python&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/rust-sdks&#34;&gt;Rust&lt;/a&gt; · &lt;a href=&#34;https://github.com/agence104/livekit-server-sdk-php&#34;&gt;PHP (community)&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;UI Components&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/components-js&#34;&gt;React&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/components-android&#34;&gt;Android Compose&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/components-swift&#34;&gt;SwiftUI&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Agents Frameworks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;b&gt;Python&lt;/b&gt; · &lt;a href=&#34;https://github.com/livekit/agents-js&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/agent-playground&#34;&gt;Playground&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Services&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/livekit&#34;&gt;LiveKit server&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/egress&#34;&gt;Egress&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/ingress&#34;&gt;Ingress&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/sip&#34;&gt;SIP&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Resources&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.livekit.io&#34;&gt;Docs&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit-examples&#34;&gt;Example apps&lt;/a&gt; · &lt;a href=&#34;https://livekit.io/cloud&#34;&gt;Cloud&lt;/a&gt; · &lt;a href=&#34;https://docs.livekit.io/home/self-hosting/deployment&#34;&gt;Self-hosting&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/livekit-cli&#34;&gt;CLI&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--END_REPO_NAV--&gt;</summary>
  </entry>
  <entry>
    <title>zauberzeug/nicegui</title>
    <updated>2024-10-07T01:28:30Z</updated>
    <id>tag:github.com,2024-10-07:/zauberzeug/nicegui</id>
    <link href="https://github.com/zauberzeug/nicegui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create web-based user interfaces with Python. The nice way.&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://nicegui.io/#about&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zauberzeug/nicegui/main/screenshot.png&#34; width=&#34;200&#34; align=&#34;right&#34; alt=&#34;Try online!&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;NiceGUI&lt;/h1&gt; &#xA;&lt;p&gt;NiceGUI is an easy-to-use, Python-based UI framework, which shows up in your web browser. You can create buttons, dialogs, Markdown, 3D scenes, plots and much more.&lt;/p&gt; &#xA;&lt;p&gt;It is great for micro web apps, dashboards, robotics projects, smart home solutions and similar use cases. You can also use it in development, for example when tweaking/configuring a machine learning algorithm or tuning motor controllers.&lt;/p&gt; &#xA;&lt;p&gt;NiceGUI is available as &lt;a href=&#34;https://pypi.org/project/nicegui/&#34;&gt;PyPI package&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/zauberzeug/nicegui&#34;&gt;Docker image&lt;/a&gt; and on &lt;a href=&#34;https://anaconda.org/conda-forge/nicegui&#34;&gt;conda-forge&lt;/a&gt; as well as &lt;a href=&#34;https://github.com/zauberzeug/nicegui&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nicegui/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/nicegui?color=dark-green&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/nicegui/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/nicegui?color=dark-green&#34; alt=&#34;PyPI downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/nicegui&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/v/conda-forge/nicegui?color=green&amp;amp;label=conda-forge&#34; alt=&#34;Conda version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/nicegui&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/dn/conda-forge/nicegui?color=green&amp;amp;label=downloads&#34; alt=&#34;Conda downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/zauberzeug/nicegui&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/zauberzeug/nicegui&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/zauberzeug/nicegui/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/zauberzeug/nicegui?color=orange&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zauberzeug/nicegui/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/zauberzeug/nicegui&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zauberzeug/nicegui/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/zauberzeug/nicegui?color=blue&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zauberzeug/nicegui/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/zauberzeug/nicegui&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zauberzeug/nicegui/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/zauberzeug/nicegui&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;browser-based graphical user interface&lt;/li&gt; &#xA; &lt;li&gt;implicit reload on code change&lt;/li&gt; &#xA; &lt;li&gt;acts as webserver (accessed by the browser) or in native mode (eg. desktop window)&lt;/li&gt; &#xA; &lt;li&gt;standard GUI elements like label, button, checkbox, switch, slider, input, file upload, ...&lt;/li&gt; &#xA; &lt;li&gt;simple grouping with rows, columns, cards and dialogs&lt;/li&gt; &#xA; &lt;li&gt;general-purpose HTML and Markdown elements&lt;/li&gt; &#xA; &lt;li&gt;powerful high-level elements to &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;plot graphs and charts,&lt;/li&gt; &#xA;   &lt;li&gt;render 3D scenes,&lt;/li&gt; &#xA;   &lt;li&gt;get steering events via virtual joysticks&lt;/li&gt; &#xA;   &lt;li&gt;annotate and overlay images&lt;/li&gt; &#xA;   &lt;li&gt;interact with tables&lt;/li&gt; &#xA;   &lt;li&gt;navigate foldable tree structures&lt;/li&gt; &#xA;   &lt;li&gt;embed video and audio files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;built-in timer to refresh data in intervals (even every 10 ms)&lt;/li&gt; &#xA; &lt;li&gt;straight-forward data binding and refreshable functions to write even less code&lt;/li&gt; &#xA; &lt;li&gt;notifications, dialogs and menus to provide state of the art user interaction&lt;/li&gt; &#xA; &lt;li&gt;shared and individual web pages&lt;/li&gt; &#xA; &lt;li&gt;easy-to-use per-user and general persistence&lt;/li&gt; &#xA; &lt;li&gt;ability to add custom routes and data responses&lt;/li&gt; &#xA; &lt;li&gt;capture keyboard input for global shortcuts etc.&lt;/li&gt; &#xA; &lt;li&gt;customize look by defining primary, secondary and accent colors&lt;/li&gt; &#xA; &lt;li&gt;live-cycle events and session data&lt;/li&gt; &#xA; &lt;li&gt;runs in Jupyter Notebooks and allows Python&#39;s interactive mode&lt;/li&gt; &#xA; &lt;li&gt;auto-complete support for Tailwind CSS&lt;/li&gt; &#xA; &lt;li&gt;SVG, Base64 and emoji favicon support&lt;/li&gt; &#xA; &lt;li&gt;testing framework based on pytest&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install nicegui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Write your nice GUI in a file &lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from nicegui import ui&#xA;&#xA;ui.label(&#39;Hello NiceGUI!&#39;)&#xA;ui.button(&#39;BUTTON&#39;, on_click=lambda: ui.notify(&#39;button was pressed&#39;))&#xA;&#xA;ui.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The GUI is now available through &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; in your browser. Note: NiceGUI will automatically reload the page when you modify the code.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Examples&lt;/h2&gt; &#xA;&lt;p&gt;The documentation is hosted at &lt;a href=&#34;https://nicegui.io/documentation&#34;&gt;https://nicegui.io/documentation&lt;/a&gt; and provides plenty of live demos. The whole content of &lt;a href=&#34;https://nicegui.io&#34;&gt;https://nicegui.io&lt;/a&gt; is &lt;a href=&#34;https://github.com/zauberzeug/nicegui/raw/main/main.py&#34;&gt;implemented with NiceGUI itself&lt;/a&gt; and can be started locally with &lt;code&gt;docker run -p 8080:8080 zauberzeug/nicegui&lt;/code&gt; or by executing &lt;code&gt;main.py&lt;/code&gt; from this repository.&lt;/p&gt; &#xA;&lt;p&gt;You may also have a look at our &lt;a href=&#34;https://github.com/zauberzeug/nicegui/tree/main/examples&#34;&gt;in-depth examples&lt;/a&gt; of what you can do with NiceGUI. In our wiki we have a list of great &lt;a href=&#34;https://github.com/zauberzeug/nicegui/wiki#community-projects&#34;&gt;NiceGUI projects from the community&lt;/a&gt;, a section with &lt;a href=&#34;https://github.com/zauberzeug/nicegui/wiki#tutorials&#34;&gt;Tutorials&lt;/a&gt;, a growing list of &lt;a href=&#34;https://github.com/zauberzeug/nicegui/wiki/FAQs&#34;&gt;FAQs&lt;/a&gt; and &lt;a href=&#34;https://github.com/zauberzeug/nicegui/wiki#chatgpt&#34;&gt;some strategies for using ChatGPT / LLMs to get help about NiceGUI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;We at &lt;a href=&#34;https://zauberzeug.com&#34;&gt;Zauberzeug&lt;/a&gt; like &lt;a href=&#34;https://streamlit.io/&#34;&gt;Streamlit&lt;/a&gt; but find it does &lt;a href=&#34;https://github.com/zauberzeug/nicegui/issues/1#issuecomment-847413651&#34;&gt;too much magic&lt;/a&gt; when it comes to state handling. In search for an alternative nice library to write simple graphical user interfaces in Python we discovered &lt;a href=&#34;https://justpy.io/&#34;&gt;JustPy&lt;/a&gt;. Although we liked the approach, it is too &#34;low-level HTML&#34; for our daily usage. But it inspired us to use &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt; and &lt;a href=&#34;https://quasar.dev/&#34;&gt;Quasar&lt;/a&gt; for the frontend.&lt;/p&gt; &#xA;&lt;p&gt;We have built on top of &lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;, which itself is based on the ASGI framework &lt;a href=&#34;https://www.starlette.io/&#34;&gt;Starlette&lt;/a&gt; and the ASGI webserver &lt;a href=&#34;https://www.uvicorn.org/&#34;&gt;Uvicorn&lt;/a&gt; because of their great performance and ease of use.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Maintenance of this project is made possible by all the &lt;a href=&#34;https://github.com/zauberzeug/nicegui/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/sponsors/zauberzeug&#34;&gt;sponsors&lt;/a&gt;. If you would like to support this project and have your avatar or company logo appear below, please &lt;a href=&#34;https://github.com/sponsors/zauberzeug&#34;&gt;sponsor us&lt;/a&gt;. 💖&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lechler-gmbh&#34;&gt;&lt;img src=&#34;https://github.com/lechler-gmbh.png&#34; width=&#34;50px&#34; alt=&#34;Lechler GmbH&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Consider this low-barrier form of contribution yourself. Your &lt;a href=&#34;https://github.com/sponsors/zauberzeug&#34;&gt;support&lt;/a&gt; is much appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing to NiceGUI! We are thrilled to have you on board and appreciate your efforts to make this project even better.&lt;/p&gt; &#xA;&lt;p&gt;As a growing open-source project, we understand that it takes a community effort to achieve our goals. That&#39;s why we welcome all kinds of contributions, no matter how small or big they are. Whether it&#39;s adding new features, fixing bugs, improving documentation, or suggesting new ideas, we believe that every contribution counts and adds value to our project.&lt;/p&gt; &#xA;&lt;p&gt;We have provided a detailed guide on how to contribute to NiceGUI in our &lt;a href=&#34;https://github.com/zauberzeug/nicegui/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file. We encourage you to read it carefully before making any contributions to ensure that your work aligns with the project&#39;s goals and standards.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions or need help with anything, please don&#39;t hesitate to reach out to us. We are always here to support and guide you through the contribution process.&lt;/p&gt; &#xA;&lt;h2&gt;Included Web Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/zauberzeug/nicegui/raw/main/DEPENDENCIES.md&#34;&gt;DEPENDENCIES.md&lt;/a&gt; for a list of web frameworks NiceGUI depends on.&lt;/p&gt;</summary>
  </entry>
</feed>