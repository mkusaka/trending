<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-27T01:28:12Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Hacker0x01/react-datepicker</title>
    <updated>2024-09-27T01:28:12Z</updated>
    <id>tag:github.com,2024-09-27:/Hacker0x01/react-datepicker</id>
    <link href="https://github.com/Hacker0x01/react-datepicker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple and reusable datepicker component for React&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Date Picker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/react-datepicker&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/react-datepicker.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Hacker0x01/react-datepicker/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/Hacker0x01/react-datepicker/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Test suite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Hacker0x01/react-datepicker&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Hacker0x01/react-datepicker/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/react-datepicker&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/react-datepicker.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple and reusable Datepicker component for React (&lt;a href=&#34;https://reactdatepicker.com/&#34;&gt;Demo&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1412392/5339491/c40de124-7ee1-11e4-9f07-9276e2545f27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The package can be installed via &lt;a href=&#34;https://github.com/npm/cli&#34;&gt;npm&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install react-datepicker --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or via &lt;a href=&#34;https://github.com/yarnpkg/yarn&#34;&gt;yarn&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add react-datepicker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You’ll need to install React and PropTypes separately since those dependencies aren’t included in the package. If you need to use a locale other than the default en-US, you&#39;ll also need to import that into your project from date-fns (see Localization section below). Below is a simple example of how to use the Datepicker in a React view. You will also need to require the CSS file from this package (or provide your own). The example below shows how to include the CSS from this package if your build system supports requiring CSS files (Webpack is one that does).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React, { useState } from &#34;react&#34;;&#xA;import DatePicker from &#34;react-datepicker&#34;;&#xA;&#xA;import &#34;react-datepicker/dist/react-datepicker.css&#34;;&#xA;&#xA;// CSS Modules, react-datepicker-cssmodules.css&#xA;// import &#39;react-datepicker/dist/react-datepicker-cssmodules.css&#39;;&#xA;&#xA;const Example = () =&amp;gt; {&#xA;  const [startDate, setStartDate] = useState(new Date());&#xA;  return (&#xA;    &amp;lt;DatePicker selected={startDate} onChange={(date) =&amp;gt; setStartDate(date)} /&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The most basic use of the DatePicker can be described with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;DatePicker selected={startdate} onChange={(date) =&amp;gt; setStartDate(date)} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;onSelect&lt;/code&gt; event handler which fires each time some calendar date has been selected&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;DatePicker&#xA;  selected={date}&#xA;  onSelect={handleDateSelect} //when day is clicked&#xA;  onChange={handleDateChange} //only when value has changed&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;onClickOutside&lt;/code&gt; handler may be useful to close datepicker in &lt;code&gt;inline&lt;/code&gt; mode&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Hacker0x01/react-datepicker/raw/main/docs/datepicker.md&#34;&gt;here&lt;/a&gt; for a full list of props that may be passed to the component. Examples are given on the &lt;a href=&#34;https://hacker0x01.github.io/react-datepicker&#34;&gt;main website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Time picker&lt;/h3&gt; &#xA;&lt;p&gt;You can also include a time picker by adding the showTimeSelect prop&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;DatePicker&#xA;  selected={date}&#xA;  onChange={handleDateChange}&#xA;  showTimeSelect&#xA;  dateFormat=&#34;Pp&#34;&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Times will be displayed at 30-minute intervals by default (default configurable via timeIntervals prop)&lt;/p&gt; &#xA;&lt;p&gt;More examples of how to use the time picker are given on the &lt;a href=&#34;https://hacker0x01.github.io/react-datepicker&#34;&gt;main website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Localization&lt;/h3&gt; &#xA;&lt;p&gt;The date picker relies on &lt;a href=&#34;https://date-fns.org/v3.3.1/docs/I18n&#34;&gt;date-fns internationalization&lt;/a&gt; to localize its display components. By default, the date picker will use the locale globally set, which is English. Provided are 3 helper methods to set the locale:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;registerLocale&lt;/strong&gt; (string, object): loads an imported locale object from date-fns&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;setDefaultLocale&lt;/strong&gt; (string): sets a registered locale as the default for all datepicker instances&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;getDefaultLocale&lt;/strong&gt;: returns a string showing the currently set default locale&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { registerLocale, setDefaultLocale } from  &#34;react-datepicker&#34;;&#xA;import { es } from &#39;date-fns/locale/es&#39;;&#xA;registerLocale(&#39;es&#39;, es)&#xA;&#xA;&amp;lt;DatePicker&#xA;  locale=&#34;es&#34;&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Locales can be changed in the following way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Globally&lt;/strong&gt; - &lt;code&gt;setDefaultLocale(&#39;es&#39;);&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;h3&gt;React&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re always trying to stay compatible with the latest version of React. We can&#39;t support all older versions of React.&lt;/p&gt; &#xA;&lt;p&gt;Latest compatible versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;React 16 or newer: React-datepicker v2.9.4 and newer&lt;/li&gt; &#xA; &lt;li&gt;React 15.5: React-datepicker v2.9.3&lt;/li&gt; &#xA; &lt;li&gt;React 15.4.1: needs React-datepicker v0.40.0, newer won&#39;t work (due to react-onclickoutside dependencies)&lt;/li&gt; &#xA; &lt;li&gt;React 0.14 or newer: All above React-datepicker v0.13.0&lt;/li&gt; &#xA; &lt;li&gt;React 0.13: React-datepicker v0.13.0&lt;/li&gt; &#xA; &lt;li&gt;pre React 0.13: React-datepicker v0.6.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Moment.js&lt;/h3&gt; &#xA;&lt;p&gt;Up until version 1.8.0, this package was using Moment.js. Starting v2.0.0, we switched to using &lt;code&gt;date-fns&lt;/code&gt;, which uses native Date objects, to reduce the size of the package. If you&#39;re switching from 1.8.0 to 2.0.0 or higher, please see the updated example above of check out the &lt;a href=&#34;https://reactdatepicker.com&#34;&gt;examples site&lt;/a&gt; for up to date examples.&lt;/p&gt; &#xA;&lt;h3&gt;Browser Support&lt;/h3&gt; &#xA;&lt;p&gt;The date picker is compatible with the latest versions of Chrome, Firefox, and IE10+.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, it is difficult to support legacy browsers while maintaining our ability to develop new features in the future. For IE9 support, it is known that the &lt;a href=&#34;https://www.npmjs.com/package/classlist-polyfill&#34;&gt;classlist polyfill&lt;/a&gt; is needed, but this may change or break at any point in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch contains the latest version of the Datepicker component.&lt;/p&gt; &#xA;&lt;p&gt;To begin local development:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn link&lt;/code&gt; from project root&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;cd docs-site &amp;amp;&amp;amp; yarn link react-datepicker&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn install&lt;/code&gt; from project root&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn build&lt;/code&gt; from project root&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn start&lt;/code&gt; from project root&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The last step starts documentation app as a simple webserver on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;yarn test&lt;/code&gt; to execute the test suite and linters. To help you develop the component we’ve set up some tests that cover the basic functionality (can be found in &lt;code&gt;/tests&lt;/code&gt;). Even though we’re big fans of testing, this only covers a small piece of the component. We highly recommend you add tests when you’re adding new functionality.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; file for more details about getting set up.&lt;/p&gt; &#xA;&lt;h3&gt;The examples&lt;/h3&gt; &#xA;&lt;p&gt;The examples are hosted within the docs folder and are ran in the simple app that loads the Datepicker. To extend the examples with a new example, you can simply duplicate one of the existing examples and change the unique properties of your example.&lt;/p&gt; &#xA;&lt;h2&gt;Accessibility&lt;/h2&gt; &#xA;&lt;h3&gt;Keyboard support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Left&lt;/em&gt;: Move to the previous day.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Right&lt;/em&gt;: Move to the next day.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Up&lt;/em&gt;: Move to the previous week.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Down&lt;/em&gt;: Move to the next week.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;PgUp&lt;/em&gt;: Move to the previous month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Shift+PgUp&lt;/em&gt;: Move to the same day and month of the previous year. If that day does not exist, moves focus to the last day of the month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;PgDn&lt;/em&gt;: Move to the next month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Shift+PgDn&lt;/em&gt;: Move to the same day and month of the next year. If that day does not exist, moves focus to the last day of the month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Home&lt;/em&gt;: Move to the first day (e.g Sunday) of the current week.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;End&lt;/em&gt;: Move to the last day (e.g. Saturday) of the current week.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Enter/Esc/Tab&lt;/em&gt;: close the calendar. (Enter &amp;amp; Esc calls preventDefault)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;For month picker&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Left&lt;/em&gt;: Move to the previous month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Right&lt;/em&gt;: Move to the next month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Enter&lt;/em&gt;: Select date and close the calendar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2014-2024 HackerOne Inc. and individual contributors. Licensed under MIT license, see &lt;a href=&#34;https://raw.githubusercontent.com/Hacker0x01/react-datepicker/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>backstage/backstage</title>
    <updated>2024-09-27T01:28:12Z</updated>
    <id>tag:github.com,2024-09-27:/backstage/backstage</id>
    <link href="https://github.com/backstage/backstage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backstage is an open framework for building developer portals&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://backstage.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/backstage/backstage/master/docs/assets/headline.png&#34; alt=&#34;headline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://backstage.io&#34;&gt;Backstage&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/README-ko_kr.md&#34;&gt;한국어&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/README-zh_Hans.md&#34;&gt;中文版&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/README-fr_FR.md&#34;&gt;Français&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cncf.io/projects&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cncf%20status-incubation-blue.svg?sanitize=true&#34; alt=&#34;CNCF Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/backstage-687207715902193673&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/687207715902193673?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true&#34; alt=&#34;Code style&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/backstage/backstage&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/backstage/backstage&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/backstage/backstage/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/backstage/backstage&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/7678&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/7678/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Backstage?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://backstage.io/&#34;&gt;Backstage&lt;/a&gt; is an open source framework for building developer portals. Powered by a centralized software catalog, Backstage restores order to your microservices and infrastructure and enables your product teams to ship high-quality code quickly without compromising autonomy.&lt;/p&gt; &#xA;&lt;p&gt;Backstage unifies all your infrastructure tooling, services, and documentation to create a streamlined development environment from end to end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/backstage/backstage/master/docs/assets/header.png&#34; alt=&#34;software-catalog&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Out of the box, Backstage includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-catalog/&#34;&gt;Backstage Software Catalog&lt;/a&gt; for managing all your software such as microservices, libraries, data pipelines, websites, and ML models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-templates/&#34;&gt;Backstage Software Templates&lt;/a&gt; for quickly spinning up new projects and standardizing your tooling with your organization’s best practices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/techdocs/&#34;&gt;Backstage TechDocs&lt;/a&gt; for making it easy to create, maintain, find, and use technical documentation, using a &#34;docs like code&#34; approach&lt;/li&gt; &#xA; &lt;li&gt;Plus, a growing ecosystem of &lt;a href=&#34;https://github.com/backstage/backstage/tree/master/plugins&#34;&gt;open source plugins&lt;/a&gt; that further expand Backstage’s customizability and functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Backstage was created by Spotify but is now hosted by the &lt;a href=&#34;https://www.cncf.io&#34;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; as an Incubation level project. For more information, see the &lt;a href=&#34;https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project roadmap&lt;/h2&gt; &#xA;&lt;p&gt;For information about the detailed project roadmap including delivered milestones, see &lt;a href=&#34;https://backstage.io/docs/overview/roadmap&#34;&gt;the Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To start using Backstage, see the &lt;a href=&#34;https://backstage.io/docs/getting-started&#34;&gt;Getting Started documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation of Backstage includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs&#34;&gt;Main documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-catalog/&#34;&gt;Software Catalog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/overview/architecture-overview&#34;&gt;Architecture&lt;/a&gt; (&lt;a href=&#34;https://backstage.io/docs/architecture-decisions/&#34;&gt;Decisions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/dls/design&#34;&gt;Designing for Backstage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/storybook&#34;&gt;Storybook - UI components&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;To engage with our community, you can use the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/backstage-687207715902193673&#34;&gt;Discord chatroom&lt;/a&gt; - Get support or discuss the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/backstage/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Backstage&lt;/a&gt; - Start here if you want to contribute&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/backstage/labels/rfc&#34;&gt;RFCs&lt;/a&gt; - Help shape the technical direction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/faq&#34;&gt;FAQ&lt;/a&gt; - Frequently Asked Questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; - This is how we roll&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/ADOPTERS.md&#34;&gt;Adopters&lt;/a&gt; - Companies already using Backstage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/blog/&#34;&gt;Blog&lt;/a&gt; - Announcements and updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spoti.fi/backstagenewsletter&#34;&gt;Newsletter&lt;/a&gt; - Subscribe to our email newsletter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/community&#34;&gt;Backstage Community Sessions&lt;/a&gt; - Join monthly meetups and explore Backstage community&lt;/li&gt; &#xA; &lt;li&gt;Give us a star ⭐️ - If you are using Backstage or think it is an interesting project, we would love a star ❤️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/backstage/community/raw/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt; document in the &lt;a href=&#34;https://github.com/backstage/community&#34;&gt;backstage/community&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2020-2024 © The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: &lt;a href=&#34;https://www.linuxfoundation.org/trademark-usage&#34;&gt;https://www.linuxfoundation.org/trademark-usage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please report sensitive security issues using Spotify&#39;s &lt;a href=&#34;https://hackerone.com/spotify&#34;&gt;bug-bounty program&lt;/a&gt; rather than GitHub.&lt;/p&gt; &#xA;&lt;p&gt;For further details, see our complete &lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/SECURITY.md&#34;&gt;security release process&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>meta-llama/llama-stack-apps</title>
    <updated>2024-09-27T01:28:12Z</updated>
    <id>tag:github.com,2024-09-27:/meta-llama/llama-stack-apps</id>
    <link href="https://github.com/meta-llama/llama-stack-apps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Agentic components of the Llama Stack APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;llama-stack-apps&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/TZAAYNVtrU&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1257833999603335178&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo shows examples of applications built on top of &lt;a href=&#34;https://github.com/meta-llama/llama-stack&#34;&gt;Llama Stack&lt;/a&gt;. Starting Llama 3.1 you can build agentic applications capable of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;breaking a task down and performing multi-step reasoning.&lt;/li&gt; &#xA; &lt;li&gt;using tools to perform some actions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;built-in: the model has built-in knowledge of tools like search or code interpreter&lt;/li&gt; &#xA;   &lt;li&gt;zero-shot: the model can learn to call tools using previously unseen, in-context tool definitions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;providing system level safety protections using models like Llama Guard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The Llama Stack API is still evolving and may change. Feel free to build and experiment, but please don&#39;t rely on its stability just yet!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;An agentic app requires a few components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ability to run inference on the underlying Llama series of models&lt;/li&gt; &#xA; &lt;li&gt;ability to run safety checks using the Llama Guard series of models&lt;/li&gt; &#xA; &lt;li&gt;ability to execute tools, including a code execution environment, and loop using the model&#39;s multi-step reasoning process&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of these components are now offered by a single Llama Stack Distribution. The &lt;a href=&#34;https://github.com/meta-llama/llama-stack&#34;&gt;Llama Stack&lt;/a&gt; defines and standardizes these components and many others that are needed to make building Generative AI applications smoother. Various implementations of these APIs are then assembled together via a &lt;strong&gt;Llama Stack Distribution&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting started with the Llama Stack Distributions&lt;/h1&gt; &#xA;&lt;p&gt;To get started with Llama Stack Distributions, you&#39;ll need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install prerequisites&lt;/li&gt; &#xA; &lt;li&gt;Download the model checkpoints&lt;/li&gt; &#xA; &lt;li&gt;Build and start a Llama Stack server&lt;/li&gt; &#xA; &lt;li&gt;Connect your client agentic app to Llama Stack server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once started, you can then just point your agentic app to the URL for this server (e.g. &lt;code&gt;http://localhost:5000&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;1. Install Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python Packages&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We recommend creating an isolated conda Python environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create and activate a virtual environment&#xA;ENV=stack&#xA;conda create -n $ENV python=3.10&#xA;cd &amp;lt;path-to-llama-stack-apps-repo&amp;gt;&#xA;conda activate $ENV&#xA;&#xA;# Install dependencies&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install all dependencies required to (1) Build and start a Llama Stack server (2) Connect your client app to Llama Stack server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CLI Packages&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;With &lt;code&gt;llama-stack&lt;/code&gt; installed, you should be able to use the Llama Stack CLI and run &lt;code&gt;llama --help&lt;/code&gt;. Please checkout our &lt;a href=&#34;https://github.com/meta-llama/llama-stack/raw/main/docs/cli_reference.md&#34;&gt;CLI Reference&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;usage: llama [-h] {download,model,stack} ...&#xA;&#xA;Welcome to the Llama CLI&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;&#xA;subcommands:&#xA;  {download,model,stack}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Download Model Checkpoints&lt;/h2&gt; &#xA;&lt;h4&gt;Downloading from &lt;a href=&#34;https://llama.meta.com/llama-downloads/&#34;&gt;Meta&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Download the required checkpoints using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# download the 8B model, this can be run on a single GPU&#xA;llama download --source meta --model-id Meta-Llama3.1-8B-Instruct --meta-url META_URL&#xA;&#xA;# you can also get the 70B model, this will require 8 GPUs however&#xA;llama download --source meta --model-id Meta-Llama3.1-70B-Instruct --meta-url META_URL&#xA;&#xA;# llama-agents have safety enabled by default. For this, you will need&#xA;# safety models -- Llama-Guard and Prompt-Guard&#xA;llama download --source meta --model-id Prompt-Guard-86M --meta-url META_URL&#xA;llama download --source meta --model-id Llama-Guard-3-8B --meta-url META_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all the above, you will need to provide a URL (META_URL) which can be obtained from &lt;a href=&#34;https://llama.meta.com/llama-downloads/&#34;&gt;https://llama.meta.com/llama-downloads/&lt;/a&gt; after signing an agreement.&lt;/p&gt; &#xA;&lt;h4&gt;Downloading from &lt;a href=&#34;https://huggingface.co/meta-llama&#34;&gt;Huggingface&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Essentially, the same commands above work, just replace &lt;code&gt;--source meta&lt;/code&gt; with &lt;code&gt;--source huggingface&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;llama download --source huggingface --model-id  Meta-Llama3.1-8B-Instruct --hf-token &amp;lt;HF_TOKEN&amp;gt;&#xA;&#xA;llama download --source huggingface --model-id Meta-Llama3.1-70B-Instruct --hf-token &amp;lt;HF_TOKEN&amp;gt;&#xA;&#xA;llama download --source huggingface --model-id Llama-Guard-3-8B --ignore-patterns *original*&#xA;llama download --source huggingface --model-id Prompt-Guard-86M --ignore-patterns *original*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Set your environment variable &lt;code&gt;HF_TOKEN&lt;/code&gt; or pass in &lt;code&gt;--hf-token&lt;/code&gt; to the command to validate your access. You can find your token at &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;https://huggingface.co/settings/tokens&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Default for &lt;code&gt;llama download&lt;/code&gt; is to run with &lt;code&gt;--ignore-patterns *.safetensors&lt;/code&gt; since we use the &lt;code&gt;.pth&lt;/code&gt; files in the &lt;code&gt;original&lt;/code&gt; folder. For Llama Guard and Prompt Guard, however, we need safetensors. Hence, please run with &lt;code&gt;--ignore-patterns original&lt;/code&gt; so that safetensors are downloaded and &lt;code&gt;.pth&lt;/code&gt; files are ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Downloading via Ollama&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re already using ollama, we also have a supported Llama Stack distribution &lt;code&gt;local-ollama&lt;/code&gt; and you can continue to use ollama for managing model downloads.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ollama pull llama3.1:8b-instruct-fp16&#xA;ollama pull llama3.1:70b-instruct-fp16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Only the above two models are currently supported by Ollama.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Build, Configure, Run Llama Stack Distribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please see our &lt;a href=&#34;https://github.com/meta-llama/llama-stack/raw/main/docs/getting_started.md&#34;&gt;Getting Started Guide&lt;/a&gt; for more details on setting up a Llama Stack distribution and running server to serve API endpoints.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1. Build&lt;/h3&gt; &#xA;&lt;p&gt;In the following steps, imagine we&#39;ll be working with a &lt;code&gt;Meta-Llama3.1-8B-Instruct&lt;/code&gt; model. We will name our build &lt;code&gt;8b-instruct&lt;/code&gt; to help us remember the config. We will start build our distribution (in the form of a Conda environment, or Docker image). In this step, we will specify:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: the name for our distribution (e.g. &lt;code&gt;8b-instruct&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;image_type&lt;/code&gt;: our build image type (&lt;code&gt;conda | docker&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distribution_spec&lt;/code&gt;: our distribution specs for specifying API providers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: a short description of the configurations for the distribution&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;providers&lt;/code&gt;: specifies the underlying implementation for serving each API endpoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_type&lt;/code&gt;: &lt;code&gt;conda&lt;/code&gt; | &lt;code&gt;docker&lt;/code&gt; to specify whether to build the distribution in the form of Docker image or Conda environment.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build a local distribution with conda&lt;/h4&gt; &#xA;&lt;p&gt;The following command and specifications allows you to get started with building.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;llama stack build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll be prompted to enter build information interactively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;llama stack build&#xA;&#xA;&amp;gt; Enter an unique name for identifying your Llama Stack build distribution (e.g. my-local-stack): 8b-instruct&#xA;&amp;gt; Enter the image type you want your distribution to be built with (docker or conda): conda&#xA;&#xA; Llama Stack is composed of several APIs working together. Let&#39;s configure the providers (implementations) you want to use for these APIs.&#xA;&amp;gt; Enter the API provider for the inference API: (default=meta-reference): meta-reference&#xA;&amp;gt; Enter the API provider for the safety API: (default=meta-reference): meta-reference&#xA;&amp;gt; Enter the API provider for the agents API: (default=meta-reference): meta-reference&#xA;&amp;gt; Enter the API provider for the memory API: (default=meta-reference): meta-reference&#xA;&amp;gt; Enter the API provider for the telemetry API: (default=meta-reference): meta-reference&#xA;&#xA; &amp;gt; (Optional) Enter a short description for your Llama Stack distribution:&#xA;&#xA;Build spec configuration saved at ~/.conda/envs/llamastack-my-local-stack/8b-instruct-build.yaml&#xA;You can now run `llama stack configure my-local-stack`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;(Alternative) Downloading Pre-built Docker image&lt;/h4&gt; &#xA;&lt;p&gt;We provide 2 pre-built Docker image of Llama Stack distribution, which can be found in the following links.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/repository/docker/llamastack/llamastack-local-gpu/general&#34;&gt;llamastack-local-gpu&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a packaged version with our local meta-reference implementations, where you will be running inference locally with downloaded Llama model checkpoints.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/repository/docker/llamastack/llamastack-local-cpu/general&#34;&gt;llamastack-local-cpu&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a lite version with remote inference where you can hook up to your favourite remote inference framework (e.g. ollama, fireworks, together, tgi) for running inference without GPU.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] For GPU inference, you need to set these environment variables for specifying local directory containing your model checkpoints, and enable GPU inference to start running docker container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;export LLAMA_CHECKPOINT_DIR=~/.llama&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To download and start running a pre-built docker container, you may use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker image pull llamastack/llamastack-local-gpu&#xA;llama stack configure llamastack-local-gpu&#xA;llama stack run local-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2. Configure&lt;/h3&gt; &#xA;&lt;p&gt;After our distribution is built (either in form of docker or conda environment), we will run the following command to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;llama stack configure [&amp;lt;name&amp;gt; | &amp;lt;path/to/name.build.yaml&amp;gt; | &amp;lt;docker-image-name&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;code&gt;conda&lt;/code&gt; environments: &amp;lt;path/to/name.build.yaml&amp;gt; would be the generated build spec saved from Step 1.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;docker&lt;/code&gt; images downloaded from Dockerhub, you could also use &#xA;  &lt;docker-image-name&gt;&#xA;    as the argument. &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Run &lt;code&gt;docker images&lt;/code&gt; to check list of available images on your machine.&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/docker-image-name&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ llama stack configure 8b-instruct&#xA;&#xA;Configuring API: inference (meta-reference)&#xA;Enter value for model (existing: Meta-Llama3.1-8B-Instruct) (required):&#xA;Enter value for quantization (optional):&#xA;Enter value for torch_seed (optional):&#xA;Enter value for max_seq_len (existing: 4096) (required):&#xA;Enter value for max_batch_size (existing: 1) (required):&#xA;&#xA;Configuring API: memory (meta-reference-faiss)&#xA;&#xA;Configuring API: safety (meta-reference)&#xA;Do you want to configure llama_guard_shield? (y/n): y&#xA;Entering sub-configuration for llama_guard_shield:&#xA;Enter value for model (default: Llama-Guard-3-8B) (required):&#xA;Enter value for excluded_categories (default: []) (required):&#xA;Enter value for disable_input_check (default: False) (required):&#xA;Enter value for disable_output_check (default: False) (required):&#xA;Do you want to configure prompt_guard_shield? (y/n): y&#xA;Entering sub-configuration for prompt_guard_shield:&#xA;Enter value for model (default: Prompt-Guard-86M) (required):&#xA;&#xA;Configuring API: agentic_system (meta-reference)&#xA;Enter value for brave_search_api_key (optional):&#xA;Enter value for bing_search_api_key (optional):&#xA;Enter value for wolfram_api_key (optional):&#xA;&#xA;Configuring API: telemetry (console)&#xA;&#xA;YAML configuration has been written to ~/.llama/builds/conda/8b-instruct-run.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this step is successful, you should be able to find a run configuration spec in &lt;code&gt;~/.llama/builds/conda/8b-instruct-run.yaml&lt;/code&gt; with the following contents. You may edit this file to change the settings.&lt;/p&gt; &#xA;&lt;p&gt;As you can see, we did basic configuration above and configured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;inference to run on model &lt;code&gt;Meta-Llama3.1-8B-Instruct&lt;/code&gt; (obtained from &lt;code&gt;llama model list&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Llama Guard safety shield with model &lt;code&gt;Llama-Guard-3-8B&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prompt Guard safety shield with model &lt;code&gt;Prompt-Guard-86M&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For how these configurations are stored as yaml, checkout the file printed at the end of the configuration.&lt;/p&gt; &#xA;&lt;p&gt;Note that all configurations as well as models are stored in &lt;code&gt;~/.llama&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step 3. Run&lt;/h3&gt; &#xA;&lt;p&gt;Now, let&#39;s start the Llama Stack Distribution Server. You will need the YAML configuration file which was written out at the end by the &lt;code&gt;llama stack configure&lt;/code&gt; step.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;llama stack run 8b-instruct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the Llama Stack server start and print the APIs that it is supporting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ llama stack run 8b-instruct&#xA;&#xA;&amp;gt; initializing model parallel with size 1&#xA;&amp;gt; initializing ddp with size 1&#xA;&amp;gt; initializing pipeline with size 1&#xA;Loaded in 19.28 seconds&#xA;NCCL version 2.20.5+cuda12.4&#xA;Finished model load YES READY&#xA;Serving POST /inference/batch_chat_completion&#xA;Serving POST /inference/batch_completion&#xA;Serving POST /inference/chat_completion&#xA;Serving POST /inference/completion&#xA;Serving POST /safety/run_shields&#xA;Serving POST /agents/memory_bank/attach&#xA;Serving POST /agents/create&#xA;Serving POST /agents/session/create&#xA;Serving POST /agents/turn/create&#xA;Serving POST /agents/delete&#xA;Serving POST /agents/session/delete&#xA;Serving POST /agents/memory_bank/detach&#xA;Serving POST /agents/session/get&#xA;Serving POST /agents/step/get&#xA;Serving POST /agents/turn/get&#xA;Listening on :::5000&#xA;INFO:     Started server process [453333]&#xA;INFO:     Waiting for application startup.&#xA;INFO:     Application startup complete.&#xA;INFO:     Uvicorn running on http://[::]:5000 (Press CTRL+C to quit)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Configuration is in &lt;code&gt;~/.llama/builds/local/conda/8b-instruct.yaml&lt;/code&gt;. Feel free to increase &lt;code&gt;max_seq_len&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] The &#34;local&#34; distribution inference server currently only supports CUDA. It will not work on Apple Silicon machines.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You might need to use the flag &lt;code&gt;--disable-ipv6&lt;/code&gt; to Disable IPv6 support&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This server is running a Llama model locally.&lt;/p&gt; &#xA;&lt;h2&gt;Test agents demo script&lt;/h2&gt; &#xA;&lt;p&gt;We have built sample demo scripts for interating with the Stack server.&lt;/p&gt; &#xA;&lt;p&gt;With the server running, you may run to test out an simple Agent&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m examples.agents.hello localhost 5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see outputs of the form --&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; created agents with agent_id=d050201b-0ca1-4abd-8eee-3cba2b8c0fbc&#xA;User&amp;gt; Hello&#xA;shield_call&amp;gt; No Violation&#xA;inference&amp;gt; How can I assist you today?&#xA;shield_call&amp;gt; No Violation&#xA;User&amp;gt; Which players played in the winning team of the NBA western conference semifinals of 2024, please use tools&#xA;shield_call&amp;gt; No Violation&#xA;inference&amp;gt; brave_search.call(query=&#34;NBA Western Conference Semifinals 2024 winning team players&#34;)&#xA;tool_execution&amp;gt; Tool:brave_search Args:{&#39;query&#39;: &#39;NBA Western Conference Semifinals 2024 winning team players&#39;}&#xA;tool_execution&amp;gt; Tool:brave_search Response:{&#34;query&#34;: &#34;NBA Western Conference Semifinals 2024 winning team players&#34;, &#34;top_k&#34;: [{&#34;title&#34;: &#34;2024 NBA Western Conference Semifinals - Mavericks vs. Thunder | Basketball-Reference.com&#34;, &#34;url&#34;: &#34;https://www.basketball-reference.com/playoffs/2024-nba-western-conference-semifinals-mavericks-vs-thunder.html&#34;, &#34;description&#34;: &#34;Summary and statistics for the &amp;lt;strong&amp;gt;2024&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;NBA&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;Western&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;Conference&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;Semifinals&amp;lt;/strong&amp;gt; - Mavericks vs. Thunder&#34;, &#34;type&#34;: &#34;search_result&#34;}, {&#34;title&#34;: &#34;2024 NBA playoffs - Wikipedia&#34;, &#34;url&#34;: &#34;https://en.wikipedia.org/wiki/2024_NBA_playoffs&#34;, &#34;description&#34;: &#34;Aged 20 years and 96 days old, ... youngest &amp;lt;strong&amp;gt;player&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;in&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;NBA&amp;lt;/strong&amp;gt; history to record 10+ points and 15+ rebounds in a playoff game, coming during game 6 of the Maverick&amp;amp;#x27;s &amp;lt;strong&amp;gt;Western&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;Conference&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;Semifinal&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;win&amp;lt;/strong&amp;gt; against the Thunder on May 18. The Timberwolves overcame a 20\u2013point deficit to &amp;lt;strong&amp;gt;win&amp;lt;/strong&amp;gt; game 7 against the Nuggets, the largest game 7 comeback in &amp;lt;strong&amp;gt;NBA&amp;lt;/strong&amp;gt; playoffs history. With the defending champion Nuggets losing to the Minnesota Timberwolves, the &amp;lt;strong&amp;gt;2024&amp;lt;/strong&amp;gt; playoffs marked ...&#34;, &#34;type&#34;: &#34;search_result&#34;}, {&#34;title&#34;: &#34;2024 NBA Playoffs | Official Bracket, Schedule and Series Matchups&#34;, &#34;url&#34;: &#34;https://www.nba.com/playoffs/2024&#34;, &#34;description&#34;: &#34;The official site of the &amp;lt;strong&amp;gt;2024&amp;lt;/strong&amp;gt; &amp;lt;strong&amp;gt;NBA&amp;lt;/strong&amp;gt; Playoffs. Latest news, schedules, matchups, highlights, bracket and more.&#34;, &#34;type&#34;: &#34;search_result&#34;}]}&#xA;shield_call&amp;gt; No Violation&#xA;inference&amp;gt; The players who played in the winning team of the NBA Western Conference Semifinals of 2024 are not specified in the search results provided. However, the search results suggest that the Mavericks played against the Thunder in the Western Conference Semifinals, and the Mavericks won the series.&#xA;shield_call&amp;gt; No Violation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start an App and Interact with the Server&lt;/h2&gt; &#xA;&lt;p&gt;Now that the Stack server is setup, the next thing would be to run an agentic app using Agents APIs.&lt;/p&gt; &#xA;&lt;p&gt;We have built sample scripts, notebooks and a UI chat interface ( using &lt;a href=&#34;%5Burl%5D(https://google.github.io/mesop/)&#34;&gt;Mesop&lt;/a&gt; ! ) to help you get started.&lt;/p&gt; &#xA;&lt;p&gt;Start an app (local) and interact with it by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PYTHONPATH=. mesop app/main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a mesop app and you can go to &lt;code&gt;localhost:32123&lt;/code&gt; to play with the chat interface.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/meta-llama/llama-stack-apps/main/demo.png&#34; alt=&#34;Chat App&#34; width=&#34;600&#34;&gt; &#xA;&lt;p&gt;Optionally, you can setup API keys for custom tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.wolframalpha.com/&#34;&gt;WolframAlpha&lt;/a&gt;: store in &lt;code&gt;WOLFRAM_ALPHA_API_KEY&lt;/code&gt; environment variable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brave.com/search/api/&#34;&gt;Brave Search&lt;/a&gt;: store in &lt;code&gt;BRAVE_SEARCH_API_KEY&lt;/code&gt; environment variable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Similar to this main app, you can also try other variants&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PYTHONPATH=. mesop app/chat_with_custom_tools.py&lt;/code&gt; to showcase how custom tools are integrated&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PYTHONPATH=. mesop app/chat_moderation_with_llama_guard.py&lt;/code&gt; to showcase how the app is modified to act as a chat moderator for safety&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Create agentic systems and interact with the Stack server&lt;/h2&gt; &#xA;&lt;p&gt;NOTE: Ensure that Stack server is still running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;path-to-llama-agentic-system&amp;gt;&#xA;conda activate $ENV&#xA;llama stack run &amp;lt;name&amp;gt; # If not already started&#xA;&#xA;PYTHONPATH=. python examples/scripts/vacation.py localhost 5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see outputs to stdout of the form --&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Environment: ipython&#xA;Tools: brave_search, wolfram_alpha, photogen&#xA;&#xA;Cutting Knowledge Date: December 2023&#xA;Today Date: 23 July 2024&#xA;&#xA;&#xA;User&amp;gt; I am planning a trip to Switzerland, what are the top 3 places to visit?&#xA;Final Llama Guard response shield_type=&amp;lt;BuiltinShield.llama_guard: &#39;llama_guard&#39;&amp;gt; is_violation=False violation_type=None violation_return_message=None&#xA;Ran PromptGuardShield and got Scores: Embedded: 0.9999765157699585, Malicious: 1.1110752893728204e-05&#xA;StepType.shield_call&amp;gt; No Violation&#xA;role=&#39;user&#39; content=&#39;I am planning a trip to Switzerland, what are the top 3 places to visit?&#39;&#xA;StepType.inference&amp;gt; Switzerland is a beautiful country with a rich history, culture, and natural beauty. Here are three must-visit places to add to your itinerary: ....&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt; You can optionally do &lt;code&gt;--disable-safety&lt;/code&gt; in the scripts to avoid running safety shields all the time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Feel free to reach out if you have questions.&lt;/p&gt; &#xA;&lt;h2&gt;Develop in your preferred language&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out our client SDKs for connecting to Llama Stack server, you can choose from &lt;a href=&#34;https://github.com/meta-llama/llama-stack-client-python&#34;&gt;python&lt;/a&gt;, &lt;a href=&#34;https://github.com/meta-llama/llama-stack-client-node&#34;&gt;node&lt;/a&gt;, &lt;a href=&#34;https://github.com/meta-llama/llama-stack-client-swift&#34;&gt;swift&lt;/a&gt;, and &lt;a href=&#34;https://github.com/meta-llama/llama-stack-client-kotlin&#34;&gt;kotlin&lt;/a&gt; programming languages to quickly build your applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using VirtualEnv instead of Conda&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] While you can run the apps using &lt;code&gt;venv&lt;/code&gt;, installation of a distribution requires conda.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;In Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create and activate a virtual environment&#xA;python3 -m venv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create and activate a virtual environment&#xA;python -m venv venv&#xA;venv\Scripts\activate  # For Command Prompt&#xA;# or&#xA;.\venv\Scripts\Activate.ps1  # For PowerShell&#xA;# or&#xA;source venv\Scripts\activate  # For Git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The instructions thereafter (including &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; for installing the dependencies) remain the same.&lt;/p&gt;</summary>
  </entry>
</feed>