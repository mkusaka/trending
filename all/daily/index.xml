<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-16T01:29:33Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Significant-Gravitas/Auto-GPT</title>
    <updated>2023-04-16T01:29:33Z</updated>
    <id>tag:github.com,2023-04-16:/Significant-Gravitas/Auto-GPT</id>
    <link href="https://github.com/Significant-Gravitas/Auto-GPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An experimental open-source attempt to make GPT-4 fully autonomous.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Auto-GPT: An Autonomous GPT-4 Experiment&lt;/h1&gt; &#xA;&lt;h3&gt;🔴 🔴 🔴 Urgent: USE &lt;code&gt;stable&lt;/code&gt; not &lt;code&gt;master&lt;/code&gt; 🔴 🔴 🔴&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This information takes precedence over any other information provided and should be followed accordingly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Our workflow has been improved, but please note that &lt;code&gt;master&lt;/code&gt; branch may often be in a &lt;strong&gt;broken&lt;/strong&gt; state. Please download the latest &lt;code&gt;stable&lt;/code&gt; release from here: &lt;a href=&#34;https://github.com/Torantulino/Auto-GPT/releases/latest&#34;&gt;https://github.com/Torantulino/Auto-GPT/releases/latest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Torantulino/auto-gpt?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;a href=&#34;https://twitter.com/SigGravitas&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/siggravitas?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/autogpt&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/autogpt?style=flat&#34; alt=&#34;Discord Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Torantulino/Auto-GPT/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/Torantulino/Auto-GPT/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. This program, driven by GPT-4, chains together LLM &#34;thoughts&#34;, to autonomously achieve whatever goal you set. As one of the first examples of GPT-4 running fully autonomously, Auto-GPT pushes the boundaries of what is possible with AI.&lt;/p&gt; &#xA;&lt;h3&gt;Demo (30/03/2023):&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22963551/228855501-2f5777cf-755b-4407-a643-c7299e5b6419.mp4&#34;&gt;https://user-images.githubusercontent.com/22963551/228855501-2f5777cf-755b-4407-a643-c7299e5b6419.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; 💖 Help Fund Auto-GPT&#39;s Development 💖&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; If you can spare a coffee, you can help to cover the API costs of developing Auto-GPT and help push the boundaries of fully autonomous AI! A full day of development can easily cost as much as $20 in API costs, which for a free project is quite limiting. Your support is greatly appreciated &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Development of this free, open-source project is made possible by all the &lt;a href=&#34;https://github.com/Torantulino/Auto-GPT/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/sponsors/Torantulino&#34;&gt;sponsors&lt;/a&gt;. If you&#39;d like to sponsor this project and have your avatar or company logo appear below &lt;a href=&#34;https://github.com/sponsors/Torantulino&#34;&gt;click here&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;Individual Sponsors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/robinicus&#34;&gt;&lt;img src=&#34;https://github.com/robinicus.png&#34; width=&#34;50px&#34; alt=&#34;robinicus&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/prompthero&#34;&gt;&lt;img src=&#34;https://github.com/prompthero.png&#34; width=&#34;50px&#34; alt=&#34;prompthero&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/crizzler&#34;&gt;&lt;img src=&#34;https://github.com/crizzler.png&#34; width=&#34;50px&#34; alt=&#34;crizzler&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/tob-le-rone&#34;&gt;&lt;img src=&#34;https://github.com/tob-le-rone.png&#34; width=&#34;50px&#34; alt=&#34;tob-le-rone&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/FSTatSBS&#34;&gt;&lt;img src=&#34;https://github.com/FSTatSBS.png&#34; width=&#34;50px&#34; alt=&#34;FSTatSBS&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/toverly1&#34;&gt;&lt;img src=&#34;https://github.com/toverly1.png&#34; width=&#34;50px&#34; alt=&#34;toverly1&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/ddtarazona&#34;&gt;&lt;img src=&#34;https://github.com/ddtarazona.png&#34; width=&#34;50px&#34; alt=&#34;ddtarazona&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/Nalhos&#34;&gt;&lt;img src=&#34;https://github.com/Nalhos.png&#34; width=&#34;50px&#34; alt=&#34;Nalhos&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/Kazamario&#34;&gt;&lt;img src=&#34;https://github.com/Kazamario.png&#34; width=&#34;50px&#34; alt=&#34;Kazamario&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/pingbotan&#34;&gt;&lt;img src=&#34;https://github.com/pingbotan.png&#34; width=&#34;50px&#34; alt=&#34;pingbotan&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/indoor47&#34;&gt;&lt;img src=&#34;https://github.com/indoor47.png&#34; width=&#34;50px&#34; alt=&#34;indoor47&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/AuroraHolding&#34;&gt;&lt;img src=&#34;https://github.com/AuroraHolding.png&#34; width=&#34;50px&#34; alt=&#34;AuroraHolding&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/kreativai&#34;&gt;&lt;img src=&#34;https://github.com/kreativai.png&#34; width=&#34;50px&#34; alt=&#34;kreativai&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/hunteraraujo&#34;&gt;&lt;img src=&#34;https://github.com/hunteraraujo.png&#34; width=&#34;50px&#34; alt=&#34;hunteraraujo&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/Explorergt92&#34;&gt;&lt;img src=&#34;https://github.com/Explorergt92.png&#34; width=&#34;50px&#34; alt=&#34;Explorergt92&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/judegomila&#34;&gt;&lt;img src=&#34;https://github.com/judegomila.png&#34; width=&#34;50px&#34; alt=&#34;judegomila&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://github.com/thepok&#34;&gt;&lt;img src=&#34;https://github.com/thepok.png&#34; width=&#34;50px&#34; alt=&#34;thepok&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/SpacingLily&#34;&gt;&lt;img src=&#34;https://github.com/SpacingLily.png&#34; width=&#34;50px&#34; alt=&#34;SpacingLily&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/merwanehamadi&#34;&gt;&lt;img src=&#34;https://github.com/merwanehamadi.png&#34; width=&#34;50px&#34; alt=&#34;merwanehamadi&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/m&#34;&gt;&lt;img src=&#34;https://github.com/m.png&#34; width=&#34;50px&#34; alt=&#34;m&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/zkonduit&#34;&gt;&lt;img src=&#34;https://github.com/zkonduit.png&#34; width=&#34;50px&#34; alt=&#34;zkonduit&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/maxxflyer&#34;&gt;&lt;img src=&#34;https://github.com/maxxflyer.png&#34; width=&#34;50px&#34; alt=&#34;maxxflyer&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/tekelsey&#34;&gt;&lt;img src=&#34;https://github.com/tekelsey.png&#34; width=&#34;50px&#34; alt=&#34;tekelsey&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/digisomni&#34;&gt;&lt;img src=&#34;https://github.com/digisomni.png&#34; width=&#34;50px&#34; alt=&#34;digisomni&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/nocodeclarity&#34;&gt;&lt;img src=&#34;https://github.com/nocodeclarity.png&#34; width=&#34;50px&#34; alt=&#34;nocodeclarity&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/tjarmain&#34;&gt;&lt;img src=&#34;https://github.com/tjarmain.png&#34; width=&#34;50px&#34; alt=&#34;tjarmain&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#auto-gpt-an-autonomous-gpt-4-experiment&#34;&gt;Auto-GPT: An Autonomous GPT-4 Experiment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#----urgent-use-stable-not-master----&#34;&gt;🔴 🔴 🔴 Urgent: USE &lt;code&gt;stable&lt;/code&gt; not &lt;code&gt;master&lt;/code&gt; 🔴 🔴 🔴&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#demo-30032023&#34;&gt;Demo (30/03/2023):&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-features&#34;&gt;🚀 Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-requirements&#34;&gt;📋 Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-installation&#34;&gt;💾 Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-usage&#34;&gt;🔧 Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#logs&#34;&gt;Logs&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#command-line-arguments&#34;&gt;Command Line Arguments&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#%EF%B8%8F-speech-mode&#34;&gt;🗣️ Speech Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-google-api-keys-configuration&#34;&gt;🔍 Google API Keys Configuration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#setting-up-environment-variables&#34;&gt;Setting up environment variables&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#memory-backend-setup&#34;&gt;Memory Backend Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#redis-setup&#34;&gt;Redis Setup&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-pinecone-api-key-setup&#34;&gt;🌲 Pinecone API Key Setup&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#milvus-setup&#34;&gt;Milvus Setup&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#setting-up-environment-variables-1&#34;&gt;Setting up environment variables&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#setting-your-cache-type&#34;&gt;Setting Your Cache Type&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#view-memory-usage&#34;&gt;View Memory Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-memory-pre-seeding&#34;&gt;🧠 Memory pre-seeding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-continuous-mode-%EF%B8%8F&#34;&gt;💀 Continuous Mode ⚠️&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#gpt35-only-mode&#34;&gt;GPT3.5 ONLY Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-image-generation&#34;&gt;🖼 Image Generation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#%EF%B8%8F-limitations&#34;&gt;⚠️ Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-disclaimer&#34;&gt;🛡 Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#-connect-with-us-on-twitter&#34;&gt;🐦 Connect with Us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#run-tests&#34;&gt;Run tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#run-linter&#34;&gt;Run linter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌐 Internet access for searches and information gathering&lt;/li&gt; &#xA; &lt;li&gt;💾 Long-Term and Short-Term memory management&lt;/li&gt; &#xA; &lt;li&gt;🧠 GPT-4 instances for text generation&lt;/li&gt; &#xA; &lt;li&gt;🔗 Access to popular websites and platforms&lt;/li&gt; &#xA; &lt;li&gt;🗃️ File storage and summarization with GPT-3.5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📋 Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;environments(just choose one) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;vscode + devcontainer&lt;/a&gt;: It has been configured in the .devcontainer folder and can be used directly&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/how-to-install-python-in-windows&#34;&gt;Python 3.8 or later&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory backend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.pinecone.io/&#34;&gt;PINECONE API key&lt;/a&gt; (If you want Pinecone backed memory)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://milvus.io/&#34;&gt;Milvus&lt;/a&gt; (If you want Milvus as memory backend)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ElevenLabs Key (If you want the AI to speak)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💾 Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install Auto-GPT, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have all the &lt;strong&gt;requirements&lt;/strong&gt; listed above, if not, install/get them&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;To execute the following commands, open a CMD, Bash, or Powershell window by navigating to a folder on your computer and typing &lt;code&gt;CMD&lt;/code&gt; in the folder path at the top, then press enter.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repository: For this step, you need Git installed. Alternatively, you can download the zip file by clicking the button at the top of this page ☝️&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Torantulino/Auto-GPT.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Navigate to the directory where the repository was downloaded&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd Auto-GPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install the required dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Rename &lt;code&gt;.env.template&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and fill in your &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;. If you plan to use Speech Mode, fill in your &lt;code&gt;ELEVENLABS_API_KEY&lt;/code&gt; as well.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/#openai-api-keys-configuration&#34;&gt;OpenAI API Keys Configuration&lt;/a&gt; to obtain your OpenAI API key.&lt;/li&gt; &#xA; &lt;li&gt;Obtain your ElevenLabs API key from: &lt;a href=&#34;https://elevenlabs.io&#34;&gt;https://elevenlabs.io&lt;/a&gt;. You can view your xi-api-key using the &#34;Profile&#34; tab on the website.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use GPT on an Azure instance, set &lt;code&gt;USE_AZURE&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; and then follow these steps: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rename &lt;code&gt;azure.yaml.template&lt;/code&gt; to &lt;code&gt;azure.yaml&lt;/code&gt; and provide the relevant &lt;code&gt;azure_api_base&lt;/code&gt;, &lt;code&gt;azure_api_version&lt;/code&gt; and all the deployment IDs for the relevant models in the &lt;code&gt;azure_model_map&lt;/code&gt; section: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;fast_llm_model_deployment_id&lt;/code&gt; - your gpt-3.5-turbo or gpt-4 deployment ID&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;smart_llm_model_deployment_id&lt;/code&gt; - your gpt-4 deployment ID&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;embedding_model_deployment_id&lt;/code&gt; - your text-embedding-ada-002 v2 deployment ID&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Please specify all of these values as double-quoted strings&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Replace string in angled brackets (&amp;lt;&amp;gt;) to your own ID&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;azure_model_map:&#xA;  fast_llm_model_deployment_id: &#34;&amp;lt;my-fast-llm-deployment-id&amp;gt;&#34;&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Details can be found here: &lt;a href=&#34;https://pypi.org/project/openai/&#34;&gt;https://pypi.org/project/openai/&lt;/a&gt; in the &lt;code&gt;Microsoft Azure Endpoints&lt;/code&gt; section and here: &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/cognitive-services/openai/tutorials/embeddings?tabs=command-line&#34;&gt;https://learn.microsoft.com/en-us/azure/cognitive-services/openai/tutorials/embeddings?tabs=command-line&lt;/a&gt; for the embedding model.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔧 Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;autogpt&lt;/code&gt; Python module in your terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m autogpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;After each action, choose from options to authorize command(s), exit the program, or provide feedback to the AI. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Authorize a single command, enter &lt;code&gt;y&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Authorize a series of &lt;em&gt;N&lt;/em&gt; continuous commands, enter &lt;code&gt;y -N&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Exit the program, enter &lt;code&gt;n&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Logs&lt;/h3&gt; &#xA;&lt;p&gt;Activity and error logs are located in the &lt;code&gt;./output/logs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To print out debug logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m autogpt --debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can also build this into a docker image and run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t autogpt .&#xA;docker run -it --env-file=./.env -v $PWD/auto_gpt_workspace:/app/auto_gpt_workspace autogpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass extra arguments, for instance, running with &lt;code&gt;--gpt3only&lt;/code&gt; and &lt;code&gt;--continuous&lt;/code&gt; mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it --env-file=./.env -v $PWD/auto_gpt_workspace:/app/auto_gpt_workspace autogpt --gpt3only --continuous&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command Line Arguments&lt;/h3&gt; &#xA;&lt;p&gt;Here are some common arguments you can use when running Auto-GPT:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Replace anything in angled brackets (&amp;lt;&amp;gt;) to a value you want to specify&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;View all available command line arguments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/main.py --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Auto-GPT with a different AI Settings file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/main.py --ai-settings &amp;lt;filename&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Specify one of 3 memory backends: &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;, &lt;code&gt;pinecone&lt;/code&gt; or &lt;code&gt;no_memory&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/main.py --use-memory  &amp;lt;memory-backend&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: There are shorthands for some of these flags, for example &lt;code&gt;-m&lt;/code&gt; for &lt;code&gt;--use-memory&lt;/code&gt;. Use &lt;code&gt;python scripts/main.py --help&lt;/code&gt; for more information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🗣️ Speech Mode&lt;/h2&gt; &#xA;&lt;p&gt;Use this to use TTS &lt;em&gt;(Text-to-Speech)&lt;/em&gt; for Auto-GPT&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m autogpt --speak&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OpenAI API Keys Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Obtain your OpenAI API key from: &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;https://platform.openai.com/account/api-keys&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use OpenAI API key for Auto-GPT, you NEED to have billing set up (AKA paid account).&lt;/p&gt; &#xA;&lt;p&gt;You can set up paid account at &lt;a href=&#34;https://platform.openai.com/account/billing/overview&#34;&gt;https://platform.openai.com/account/billing/overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Significant-Gravitas/Auto-GPT/master/docs/imgs/openai-api-key-billing-paid-account.png&#34; alt=&#34;For OpenAI API key to work, set up paid account at OpenAI API &gt; Billing&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔍 Google API Keys Configuration&lt;/h2&gt; &#xA;&lt;p&gt;This section is optional, use the official google api if you are having issues with error 429 when running a google search. To use the &lt;code&gt;google_official_search&lt;/code&gt; command, you need to set up your Google API keys in your environment variables.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Google Cloud Console&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t already have an account, create one and log in.&lt;/li&gt; &#xA; &lt;li&gt;Create a new project by clicking on the &#34;Select a Project&#34; dropdown at the top of the page and clicking &#34;New Project&#34;. Give it a name and click &#34;Create&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.cloud.google.com/apis/dashboard&#34;&gt;APIs &amp;amp; Services Dashboard&lt;/a&gt; and click &#34;Enable APIs and Services&#34;. Search for &#34;Custom Search API&#34; and click on it, then click &#34;Enable&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.cloud.google.com/apis/credentials&#34;&gt;Credentials&lt;/a&gt; page and click &#34;Create Credentials&#34;. Choose &#34;API Key&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the API key and set it as an environment variable named &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; on your machine. See setting up environment variables below.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.developers.google.com/apis/api/customsearch.googleapis.com&#34;&gt;Enable&lt;/a&gt; the Custom Search API on your project. (Might need to wait few minutes to propagate)&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://cse.google.com/cse/all&#34;&gt;Custom Search Engine&lt;/a&gt; page and click &#34;Add&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Set up your search engine by following the prompts. You can choose to search the entire web or specific sites.&lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;ve created your search engine, click on &#34;Control Panel&#34; and then &#34;Basics&#34;. Copy the &#34;Search engine ID&#34; and set it as an environment variable named &lt;code&gt;CUSTOM_SEARCH_ENGINE_ID&lt;/code&gt; on your machine. See setting up environment variables below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Remember that your free daily custom search quota allows only up to 100 searches. To increase this limit, you need to assign a billing account to the project to profit from up to 10K daily searches.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Setting up environment variables&lt;/h3&gt; &#xA;&lt;p&gt;For Windows Users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setx GOOGLE_API_KEY &#34;YOUR_GOOGLE_API_KEY&#34;&#xA;setx CUSTOM_SEARCH_ENGINE_ID &#34;YOUR_CUSTOM_SEARCH_ENGINE_ID&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For macOS and Linux users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOOGLE_API_KEY=&#34;YOUR_GOOGLE_API_KEY&#34;&#xA;export CUSTOM_SEARCH_ENGINE_ID=&#34;YOUR_CUSTOM_SEARCH_ENGINE_ID&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Redis Setup&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;&lt;/em&gt; &lt;br&gt; This is not intended to be publicly accessible and lacks security measures. Therefore, avoid exposing Redis to the internet without a password or at all&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install docker desktop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name redis-stack-server -p 6379:6379 redis/redis-stack-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://hub.docker.com/r/redis/redis-stack-server&#34;&gt;https://hub.docker.com/r/redis/redis-stack-server&lt;/a&gt; for setting a password and additional configuration.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the following environment variables&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Replace &lt;strong&gt;PASSWORD&lt;/strong&gt; in angled brackets (&amp;lt;&amp;gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;MEMORY_BACKEND=redis&#xA;REDIS_HOST=localhost&#xA;REDIS_PORT=6379&#xA;REDIS_PASSWORD=&amp;lt;PASSWORD&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally set&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;WIPE_REDIS_ON_START=False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To persist memory stored in Redis&lt;/p&gt; &#xA;&lt;p&gt;You can specify the memory index for redis using the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;MEMORY_INDEX=&amp;lt;WHATEVER&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🌲 Pinecone API Key Setup&lt;/h3&gt; &#xA;&lt;p&gt;Pinecone enables the storage of vast amounts of vector-based memory, allowing for only relevant memories to be loaded for the agent at any given time.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://app.pinecone.io/&#34;&gt;pinecone&lt;/a&gt; and make an account if you don&#39;t already have one.&lt;/li&gt; &#xA; &lt;li&gt;Choose the &lt;code&gt;Starter&lt;/code&gt; plan to avoid being charged.&lt;/li&gt; &#xA; &lt;li&gt;Find your API key and region under the default project in the left sidebar.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Milvus Setup&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://milvus.io/&#34;&gt;Milvus&lt;/a&gt; is a open-source, high scalable vector database to storage huge amount of vector-based memory and provide fast relevant search.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;setup milvus database, keep your pymilvus version and milvus version same to avoid compatible issues. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;setup by open source &lt;a href=&#34;https://milvus.io/docs/install_standalone-operator.md&#34;&gt;Install Milvus&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;or setup by &lt;a href=&#34;https://zilliz.com/cloud&#34;&gt;Zilliz Cloud&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;set &lt;code&gt;MILVUS_ADDR&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; to your milvus address &lt;code&gt;host:ip&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;set &lt;code&gt;MEMORY_BACKEND&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; to &lt;code&gt;milvus&lt;/code&gt; to enable milvus as backend.&lt;/li&gt; &#xA; &lt;li&gt;optional &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;set &lt;code&gt;MILVUS_COLLECTION&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; to change milvus collection name as you want, &lt;code&gt;autogpt&lt;/code&gt; is the default name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting up environment variables&lt;/h3&gt; &#xA;&lt;p&gt;In the &lt;code&gt;.env&lt;/code&gt; file set:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PINECONE_API_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PINECONE_ENV&lt;/code&gt; (example: &lt;em&gt;&#34;us-east4-gcp&#34;&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MEMORY_BACKEND=pinecone&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively, you can set them from the command line (advanced):&lt;/p&gt; &#xA;&lt;p&gt;For Windows Users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setx PINECONE_API_KEY &#34;&amp;lt;YOUR_PINECONE_API_KEY&amp;gt;&#34;&#xA;setx PINECONE_ENV &#34;&amp;lt;YOUR_PINECONE_REGION&amp;gt;&#34; # e.g: &#34;us-east4-gcp&#34;&#xA;setx MEMORY_BACKEND &#34;pinecone&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For macOS and Linux users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PINECONE_API_KEY=&#34;&amp;lt;YOUR_PINECONE_API_KEY&amp;gt;&#34;&#xA;export PINECONE_ENV=&#34;&amp;lt;YOUR_PINECONE_REGION&amp;gt;&#34; # e.g: &#34;us-east4-gcp&#34;&#xA;export MEMORY_BACKEND=&#34;pinecone&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setting Your Cache Type&lt;/h2&gt; &#xA;&lt;p&gt;By default, Auto-GPT is going to use LocalCache instead of redis or Pinecone.&lt;/p&gt; &#xA;&lt;p&gt;To switch to either, change the &lt;code&gt;MEMORY_BACKEND&lt;/code&gt; env variable to the value that you want:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;local&lt;/code&gt; (default) uses a local JSON cache file &lt;code&gt;pinecone&lt;/code&gt; uses the Pinecone.io account you configured in your ENV settings &lt;code&gt;redis&lt;/code&gt; will use the redis cache that you configured&lt;/p&gt; &#xA;&lt;h2&gt;View Memory Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;View memory usage by using the &lt;code&gt;--debug&lt;/code&gt; flag :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🧠 Memory pre-seeding&lt;/h2&gt; &#xA;&lt;h1&gt;python autogpt/data_ingestion.py -h&lt;/h1&gt; &#xA;&lt;p&gt;usage: data_ingestion.py [-h] (--file FILE | --dir DIR) [--init] [--overlap OVERLAP] [--max_length MAX_LENGTH]&lt;/p&gt; &#xA;&lt;p&gt;Ingest a file or a directory with multiple files into memory. Make sure to set your .env before running this script.&lt;/p&gt; &#xA;&lt;p&gt;options: -h, --help show this help message and exit --file FILE The file to ingest. --dir DIR The directory containing the files to ingest. --init Init the memory and wipe its content (default: False) --overlap OVERLAP The overlap size between chunks when ingesting files (default: 200) --max_length MAX_LENGTH The max_length of each chunk when ingesting files (default: 4000&lt;/p&gt; &#xA;&lt;h1&gt;python autogpt/data_ingestion.py --dir seed_data --init --overlap 200 --max_length 1000&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;This script located at autogpt/data_ingestion.py, allows you to ingest files into memory and pre-seed it before running Auto-GPT. &#xA;&#xA;Memory pre-seeding is a technique that involves ingesting relevant documents or data into the AI&#39;s memory so that it can use this information to generate more informed and accurate responses.&#xA;&#xA;To pre-seed the memory, the content of each document is split into chunks of a specified maximum length with a specified overlap between chunks, and then each chunk is added to the memory backend set in the .env file. When the AI is prompted to recall information, it can then access those pre-seeded memories to generate more informed and accurate responses.&#xA;&#xA;This technique is particularly useful when working with large amounts of data or when there is specific information that the AI needs to be able to access quickly. &#xA;By pre-seeding the memory, the AI can retrieve and use this information more efficiently, saving time, API call and improving the accuracy of its responses. &#xA;&#xA;You could for example download the documentation of an API, a GitHub repository, etc. and ingest it into memory before running Auto-GPT. &#xA;&#xA;⚠️ If you use Redis as your memory, make sure to run Auto-GPT with the `WIPE_REDIS_ON_START` set to `False` in your `.env` file.&#xA;&#xA;⚠️For other memory backend, we currently forcefully wipe the memory when starting Auto-GPT. To ingest data with those memory backend, you can call the `data_ingestion.py` script anytime during an Auto-GPT run. &#xA;&#xA;Memories will be available to the AI immediately as they are ingested, even if ingested while Auto-GPT is running.&#xA;&#xA;In the example above, the script initializes the memory, ingests all files within the `/seed_data` directory into memory with an overlap between chunks of 200 and a maximum length of each chunk of 4000.&#xA;Note that you can also use the `--file` argument to ingest a single file into memory and that the script will only ingest files within the `/auto_gpt_workspace` directory.&#xA;&#xA;You can adjust the `max_length` and overlap parameters to fine-tune the way the docuents are presented to the AI when it &#34;recall&#34; that memory:&#xA;&#xA;- Adjusting the overlap value allows the AI to access more contextual information from each chunk when recalling information, but will result in more chunks being created and therefore increase memory backend usage and OpenAI API requests.&#xA;- Reducing the `max_length` value will create more chunks, which can save prompt tokens by allowing for more message history in the context, but will also increase the number of chunks.&#xA;- Increasing the `max_length` value will provide the AI with more contextual information from each chunk, reducing the number of chunks created and saving on OpenAI API requests. However, this may also use more prompt tokens and decrease the overall context available to the AI.&#xA;&#xA;## 💀 Continuous Mode ⚠️&#xA;&#xA;Run the AI **without** user authorization, 100% automated.&#xA;Continuous mode is NOT recommended.&#xA;It is potentially dangerous and may cause your AI to run forever or carry out actions you would not usually authorize.&#xA;Use at your own risk.&#xA;&#xA;1. Run the `autogpt` python module in your terminal:&#xA;&#xA;```bash&#xA;python -m autogpt --speak --continuous&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;To exit the program, press Ctrl + C&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;GPT3.5 ONLY Mode&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t have access to the GPT4 api, this mode will allow you to use Auto-GPT!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m autogpt --speak --gpt3only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to use a virtual machine for tasks that require high security measures to prevent any potential harm to the main computer&#39;s system and data.&lt;/p&gt; &#xA;&lt;h2&gt;🖼 Image Generation&lt;/h2&gt; &#xA;&lt;p&gt;By default, Auto-GPT uses DALL-e for image generation. To use Stable Diffusion, a &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;Hugging Face API Token&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;p&gt;Once you have a token, set these variables in your &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;IMAGE_PROVIDER=sd&#xA;HUGGINGFACE_API_TOKEN=&#34;YOUR_HUGGINGFACE_API_TOKEN&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Selenium&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo Xvfb :10 -ac -screen 0 1024x768x24 &amp;amp; DISPLAY=:10 &amp;lt;YOUR_CLIENT&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚠️ Limitations&lt;/h2&gt; &#xA;&lt;p&gt;This experiment aims to showcase the potential of GPT-4 but comes with some limitations:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Not a polished application or product, just an experiment&lt;/li&gt; &#xA; &lt;li&gt;May not perform well in complex, real-world business scenarios. In fact, if it actually does, please share your results!&lt;/li&gt; &#xA; &lt;li&gt;Quite expensive to run, so set and monitor your API key limits with OpenAI!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🛡 Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Disclaimer This project, Auto-GPT, is an experimental application and is provided &#34;as-is&#34; without any warranty, express or implied. By using this software, you agree to assume all risks associated with its use, including but not limited to data loss, system failure, or any other issues that may arise.&lt;/p&gt; &#xA;&lt;p&gt;The developers and contributors of this project do not accept any responsibility or liability for any losses, damages, or other consequences that may occur as a result of using this software. You are solely responsible for any decisions and actions taken based on the information provided by Auto-GPT.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note that the use of the GPT-4 language model can be expensive due to its token usage.&lt;/strong&gt; By utilizing this project, you acknowledge that you are responsible for monitoring and managing your own token usage and the associated costs. It is highly recommended to check your OpenAI API usage regularly and set up any necessary limits or alerts to prevent unexpected charges.&lt;/p&gt; &#xA;&lt;p&gt;As an autonomous experiment, Auto-GPT may generate content or take actions that are not in line with real-world business practices or legal requirements. It is your responsibility to ensure that any actions or decisions made based on the output of this software comply with all applicable laws, regulations, and ethical standards. The developers and contributors of this project shall not be held responsible for any consequences arising from the use of this software.&lt;/p&gt; &#xA;&lt;p&gt;By using Auto-GPT, you agree to indemnify, defend, and hold harmless the developers, contributors, and any affiliated parties from and against any and all claims, damages, losses, liabilities, costs, and expenses (including reasonable attorneys&#39; fees) arising from your use of this software or your violation of these terms.&lt;/p&gt; &#xA;&lt;h2&gt;🐦 Connect with Us on Twitter&lt;/h2&gt; &#xA;&lt;p&gt;Stay up-to-date with the latest news, updates, and insights about Auto-GPT by following our Twitter accounts. Engage with the developer and the AI&#39;s own account for interesting discussions, project updates, and more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer&lt;/strong&gt;: Follow &lt;a href=&#34;https://twitter.com/siggravitas&#34;&gt;@siggravitas&lt;/a&gt; for insights into the development process, project updates, and related topics from the creator of Entrepreneur-GPT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Entrepreneur-GPT&lt;/strong&gt;: Join the conversation with the AI itself by following &lt;a href=&#34;https://twitter.com/En_GPT&#34;&gt;@En_GPT&lt;/a&gt;. Share your experiences, discuss the AI&#39;s outputs, and engage with the growing community of users.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We look forward to connecting with you and hearing your thoughts, ideas, and experiences with Auto-GPT. Join us on Twitter and let&#39;s explore the future of AI together!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://star-history.com/#Torantulino/auto-gpt&amp;amp;Date&#34;&gt; &lt;img src=&#34;https://api.star-history.com/svg?repos=Torantulino/auto-gpt&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Run tests&lt;/h2&gt; &#xA;&lt;p&gt;To run tests, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m unittest discover tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests and see coverage, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;coverage run -m unittest discover tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run linter&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt; for linting. We currently use the following rules: &lt;code&gt;E303,W293,W291,W292,E305,E231,E302&lt;/code&gt;. See the &lt;a href=&#34;https://www.flake8rules.com/&#34;&gt;flake8 rules&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;To run the linter, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flake8 autogpt/ tests/&#xA;&#xA;# Or, if you want to run flake8 with the same configuration as the CI:&#xA;flake8 autogpt/ tests/ --select E303,W293,W291,W292,E305,E231,E302&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>leetcode-mafia/cheetah</title>
    <updated>2023-04-16T01:29:33Z</updated>
    <id>tag:github.com,2023-04-16:/leetcode-mafia/cheetah</id>
    <link href="https://github.com/leetcode-mafia/cheetah" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Whisper &amp; GPT-based app for passing remote SWE interviews&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cheetah&lt;/h1&gt; &#xA;&lt;p&gt;Cheetah is an AI-powered macOS app designed to assist users during remote software engineering interviews by providing real-time, discreet coaching and live coding platform integration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/106342593/229961889-489e2b36-f3e6-453a-9784-f160bc1c4f8d.mp4&#34;&gt;Quick demo video (1:28)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/leetcode-mafia/cheetah/raw/91cc5b89864fe28476a7e2062ede2c8322c17896/cheetah.jpg&#34; alt=&#34;Screenshot&#34;&gt; &#xA;&lt;p&gt;With Cheetah, you can improve your interview performance and increase your chances of landing that $300k SWE job, without spending your weekends cramming leetcode challenges and memorizing algorithms you&#39;ll never use.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Cheetah leverages Whisper for real-time audio transcription and GPT-4 for generating hints and solutions. You need to have your own OpenAI API key to use the app. If you don&#39;t have access to GPT-4, gpt-3.5-turbo may be used as an alternative.&lt;/p&gt; &#xA;&lt;p&gt;Whisper runs locally on your system, utilizing Georgi Gerganov&#39;s &lt;a href=&#34;https://github.com/ggerganov/whisper.cpp&#34;&gt;whisper.cpp&lt;/a&gt;. A recent M1 or M2 Mac is required for optimal performance.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Audio driver setup&lt;/h3&gt; &#xA;&lt;p&gt;For the best results, ensure the audio input captures both sides of the conversation.&lt;/p&gt; &#xA;&lt;p&gt;When using a video chat app like Zoom or Google Meet, you can achieve this with &lt;a href=&#34;https://existential.audio/blackhole/&#34;&gt;BlackHole&lt;/a&gt;, a free audio loopback driver. Follow the instructions for setting up a &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki/Multi-Output-Device&#34;&gt;Multi-Output Device&lt;/a&gt;, and remember not to use the loopback device as input for the video chat app.&lt;/p&gt; &#xA;&lt;h3&gt;App overview&lt;/h3&gt; &#xA;&lt;p&gt;Open the app and select an audio input to start live transcription. A snippet of the transcription will be displayed under the audio input selector.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; running the app in debug mode will result in very slow audio transcription performance.&lt;/p&gt; &#xA;&lt;p&gt;The UI features three buttons:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; Generates an answer for the interviewer&#39;s question.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Refine:&lt;/strong&gt; Updates the existing answer, useful for when the interviewer provides additional constraints or clarification.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Analyze:&lt;/strong&gt; Analyzes code and logs from the live coding environment in your web browser. Requires the browser extension.&lt;/p&gt; &#xA;&lt;p&gt;You can also select (highlight) a portion of a generated answer and click Refine to get more detail.&lt;/p&gt; &#xA;&lt;h3&gt;Installing the browser extension&lt;/h3&gt; &#xA;&lt;p&gt;Currently, only Firefox is supported. Follow these steps to install the extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the domain of the live coding platform to &lt;code&gt;matches&lt;/code&gt; in ./extension/manifest.json&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://firefox-source-docs.mozilla.org/devtools-user/about_colon_debugging/index.html&#34;&gt;about:debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;This Firefox&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Load Temporary Add-on&#34;&lt;/li&gt; &#xA; &lt;li&gt;Select ./extension/manifest.json&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Cheetah is a satirical art project and is not intended for use in real-world settings. It may generate incorrect or inappropriate solutions. Users should exercise caution and take responsibility for the information provided by the app.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lightaime/camel</title>
    <updated>2023-04-16T01:29:33Z</updated>
    <id>tag:github.com,2023-04-16:/lightaime/camel</id>
    <link href="https://github.com/lightaime/camel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐫 CAMEL: Communicative Agents for “Mind” Exploration of Large Scale Language Model Society&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1AzP33O8rnMW__7ocWJhVBXjKziJXPtim?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/camel-ai&#34;&gt;&lt;img src=&#34;https://huggingface.co/datasets/huggingface/brand-assets/resolve/main/hf-logo-with-title.png&#34; alt=&#34;Hugging Face&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CAMEL: Communicative Agents for “Mind” Exploration of Large Scale Language Model Society&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.camel-ai.org/&#34;&gt;[Project Website]&lt;/a&gt; &lt;a href=&#34;https://ghli.org/camel.pdf&#34;&gt;[Preprint]&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lightaime/camel/master/misc/logo.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The rapid advancement of conversational and chat-based language models has led to remarkable progress in complex task-solving. However, their success heavily relies on human input to guide the conversation, which can be challenging and time-consuming. This paper explores the potential of building scalable techniques to facilitate autonomous cooperation among communicative agents and provide insight into their &#34;cognitive&#34; processes. To address the challenges of achieving autonomous cooperation, we propose a novel communicative agent framework named &lt;em&gt;role-playing&lt;/em&gt;. Our approach involves using &lt;em&gt;inception prompting&lt;/em&gt; to guide chat agents toward task completion while maintaining consistency with human intentions. We showcase how role-playing can be used to generate conversational data for studying the behaviors and capabilities of chat agents, providing a valuable resource for investigating conversational language models. Our contributions include introducing a novel communicative agent framework, offering a scalable approach for studying the cooperative behaviors and capabilities of multi-agent systems, and open-sourcing our library to support research on communicative agents and beyond. The GitHub repository of this project is made publicly available on: &lt;a href=&#34;https://github.com/lightaime/camel&#34;&gt;https://github.com/lightaime/camel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Try it yourself&lt;/h2&gt; &#xA;&lt;p&gt;We provide a &lt;a href=&#34;https://colab.research.google.com/drive/1AzP33O8rnMW__7ocWJhVBXjKziJXPtim?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Google Colab&#34;&gt;&lt;/a&gt; demo showcasing a conversation between two ChatGPT agents playing roles as a python programmer and a stock trader collaborating on developing a trading bot for stock market.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lightaime/camel/master/misc/framework.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;code&gt;CAMEL&lt;/code&gt; from source with conda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# create a conda virtual environment&#xA;conda create --name camel python=3.10&#xA;# actiavte camel conda environment&#xA;conda activate camel&#xA;# clone github repo&#xA;git clone https://github.com/lightaime/camel.git&#xA;# change directory into project directory&#xA;cd camel&#xA;# install camel from source&#xA;pre-commit install&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can find a list of tasks for different set of assistant and user role pairs &lt;a href=&#34;https://drive.google.com/file/d/194PPaSTBR07m-PzjS-Ty6KlPLdFIPQDd/view?usp=share_link&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;role_playing.py&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# export your OpenAI API key&#xA;export OPENAI_API_KEY=&amp;lt;insert your OpenAI API key&amp;gt;&#xA;# You can change the role pair and initial prompt in role_playing.py&#xA;python examples/ai_society/role_playing.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data (Hosted on Hugging Face)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Chat format&lt;/th&gt; &#xA;   &lt;th&gt;Instruction format&lt;/th&gt; &#xA;   &lt;th&gt;Chat format (translated)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AI Society&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society/blob/main/ai_society_chat.tar.gz&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society/blob/main/ai_society_instructions.json&#34;&gt;Instruction format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society_translated&#34;&gt;Chat format (translated)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/code/blob/main/code_chat.tar.gz&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/code/blob/main/code_instructions.json&#34;&gt;Instruction format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Math&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/math/blob/main/math50k.zip&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Physics&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/physics&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Visualizations of Instructions and Tasks&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Tasks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AI Society&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/3a559a06-87d0-4476-a879-962656242452/db961915-b254-48e8-8e5c-917f827b74c6&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/cb96f41b-a6fd-4fe4-ac40-08e101714483/ae06156c-a572-46e9-8345-ebe18586d02b&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/902d6ccb-0bbb-4294-83a8-1c7d2dae03c8/ace2e146-e49f-41db-a1f4-25a2c4be2457&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/efc38617-9180-490a-8630-43a05b35d22d/2576addf-a133-45d5-89a9-6b067b6652dd&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Misalignment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/5c491035-a26e-4a05-9593-82ffb2c3ab40/2bd98896-894e-4807-9ed8-a203ccb14d5e&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/abc357dd-9c04-4913-9541-63e259d7ac1f/825139a4-af66-427c-9d0e-f36b5492ab3f&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Released AI Society and Code dataset (April 2, 2023)&lt;/li&gt; &#xA; &lt;li&gt;Initial release of &lt;code&gt;CAMEL&lt;/code&gt; python library (March 21, 2023)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{camel,&#xA;  author = {Guohao Li, Hasan Abed Al Kader Hammoud, Hani Itani, Dmitrii Khizbullin, Bernard Ghanem},&#xA;  title = {CAMEL: Communicative Agents for “Mind” Exploration of Large Scale Language Model Society},&#xA;  year = {2023},&#xA;  journal={arXiv preprint},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://home.nomic.ai/&#34;&gt;Nomic AI&lt;/a&gt; for giving us extended access to their data set exploration tool (Atlas).&lt;/p&gt; &#xA;&lt;p&gt;We would also like to thank Haya Hammoud for designing the logo of our project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The intended purpose and licensing of CAMEL is solely for research use.&lt;/p&gt; &#xA;&lt;p&gt;The source code is licensed under Apache 2.0.&lt;/p&gt; &#xA;&lt;p&gt;The datasets are licensed under CC BY NC 4.0, which permits only non-commercial usage. It is advised that any models trained using the dataset should not be utilized for anything other than research purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For more information please contact &lt;a href=&#34;https://ghli.org/&#34;&gt;Guohao Li&lt;/a&gt;, &lt;a href=&#34;https://cemse.kaust.edu.sa/ece/people/person/hasan-abed-al-kader-hammoud&#34;&gt;Hasan Abed Al Kader Hammoud&lt;/a&gt;, &lt;a href=&#34;https://github.com/HaniItani&#34;&gt;Hani Itani&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>