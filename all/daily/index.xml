<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-29T01:37:55Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>divkit/divkit</title>
    <updated>2022-08-29T01:37:55Z</updated>
    <id>tag:github.com,2022-08-29:/divkit/divkit</id>
    <link href="https://github.com/divkit/divkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DivKit is an open source Server-Driven UI (SDUI) framework. SDUI is a an emerging technique that leverage the server to build the user interfaces of their mobile app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DivKit &lt;img alt=&#34;Playground app&#34; src=&#34;https://raw.githubusercontent.com/divkit/divkit/main/client/android/app_screen.png&#34; width=&#34;30%&#34; align=&#34;right&#34; style=&#34;margin:20px;&#34;&gt;&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/divkit/divkit/stargazers&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/divkit/divkit&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;&lt;strong&gt;DivKit&lt;/strong&gt; üêã is an open source Server-Driven UI (SDUI) framework. It allows you to roll out server-sourced updates to different app versions. Also, it can be used for fast UI prototyping, allowing you to write a layout once and then ship it to iOS, Android, and Web platforms. DivKit is an excellent choice to start using server-driven UI in your project because it can be easily integrated as a simple view in any part of your app. At the starting point, you don‚Äôt need a server integration. You can include all JSON on the client-side to try it in a real-world application.&lt;/p&gt; &#xA;&lt;p&gt;Also, we‚Äôve made a &lt;a href=&#34;https://divkit.tech/playground&#34;&gt;sandbox&lt;/a&gt; for you to experiment with. You can try different samples in the web editor and see the results on the web or in the Android &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.yandex.divkit.demo&#34;&gt;demo app&lt;/a&gt;, both of which are available on Google Play. We‚Äôll publish the iOS demo app shortly. The UI in the demo can be updated live: the sandbox connects to the demo app via web sockets. You can use the &lt;a href=&#34;https://divkit.tech/en&#34;&gt;DivKit website&lt;/a&gt; to find a lot of handy samples and documentation, but feel free to ask us anything here in the comments or via the &lt;a href=&#34;https://t.me/divkit_community_en&#34;&gt;Telegram community chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://divkit.tech/doc&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://medium.com/p/cad519252f0f&#34;&gt;Medium tutorial&lt;/a&gt; | &lt;a href=&#34;https://habr.com/ru/company/yandex/blog/683886/&#34;&gt;Habr tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Telegram: &lt;a href=&#34;https://t.me/divkit_news&#34;&gt;News&lt;/a&gt; | &lt;a href=&#34;https://t.me/divkit_community_en&#34;&gt;English-speaking chat&lt;/a&gt; | &lt;a href=&#34;https://t.me/divkit_community_ru&#34;&gt;–ß–∞—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/DivKitFramework&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Demo App&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.yandex.divkit.demo&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/divkit/divkit/main/client/ios/app_badge_soon.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;Client side libraries for rendering UI on Android, iOS and Web.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/client/android/&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/client/ios/&#34;&gt;iOS&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/client/web/divkit&#34;&gt;Web&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Json-builder&lt;/h3&gt; &#xA;&lt;p&gt;Server side libraries for building JSON in DivKit format.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/json-builder/typescript/&#34;&gt;TypeScript&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/json-builder/kotlin/&#34;&gt;Kotlin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Schema&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/divkit/divkit/main/schema&#34;&gt;JSON schema&lt;/a&gt; that describes DivKit data format.&lt;/p&gt; &#xA;&lt;h3&gt;Api Generator&lt;/h3&gt; &#xA;&lt;p&gt;Used for generating general Api for all platforms from Schema.&lt;/p&gt; &#xA;&lt;h3&gt;Test data&lt;/h3&gt; &#xA;&lt;p&gt;Samples and test data.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AUTOMATIC1111/stable-diffusion-webui</title>
    <updated>2022-08-29T01:37:55Z</updated>
    <id>tag:github.com,2022-08-29:/AUTOMATIC1111/stable-diffusion-webui</id>
    <link href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stable Diffusion web UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion web UI&lt;/h1&gt; &#xA;&lt;p&gt;A browser interface based on Gradio library for Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;Original script with Gradio UI was written by a kind anonymous user. This is a modification.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/screenshot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing and running&lt;/h2&gt; &#xA;&lt;h3&gt;Stable Diffusion&lt;/h3&gt; &#xA;&lt;p&gt;This script assumes that you already have main Stable Diffusion sutff installed, assumed to be in directory &lt;code&gt;/sd&lt;/code&gt;. If you don&#39;t have it installed, follow the guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rentry.org/kretard&#34;&gt;https://rentry.org/kretard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repository&#39;s &lt;code&gt;webgui.py&lt;/code&gt; is a replacement for &lt;code&gt;kdiff.py&lt;/code&gt; from the guide.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, following files must exist:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/configs/stable-diffusion/v1-inference.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/models/ldm/stable-diffusion-v1/model.ckpt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/ldm/util.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/k_diffusion/__init__.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GFPGAN&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use GFPGAN to improve generated faces, you need to install it separately. Follow instructions from &lt;a href=&#34;https://github.com/TencentARC/GFPGAN&#34;&gt;https://github.com/TencentARC/GFPGAN&lt;/a&gt;, but when cloning it, do so into Stable Diffusion main directory, &lt;code&gt;/sd&lt;/code&gt;. After that download &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;GFPGANv1.3.pth&lt;/a&gt; and put it into the &lt;code&gt;/sd/GFPGAN/experiments/pretrained_models&lt;/code&gt; directory. If you&#39;re getting troubles with GFPGAN support, follow instructions from the GFPGAN&#39;s repository until &lt;code&gt;inference_gfpgan.py&lt;/code&gt; script works.&lt;/p&gt; &#xA;&lt;p&gt;The following files must exist:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/GFPGAN/inference_gfpgan.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/sd/GFPGAN/experiments/pretrained_models/GFPGANv1.3.pth&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the GFPGAN directory does not exist, you will not get the option to use GFPGAN in the UI. If it does exist, you will either be able to use it, or there will be a message in console with an error related to GFPGAN.&lt;/p&gt; &#xA;&lt;h3&gt;Web UI&lt;/h3&gt; &#xA;&lt;p&gt;Run the script as:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python webui.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;When running the script, you must be in the main Stable Diffusion directory, &lt;code&gt;/sd&lt;/code&gt;. If you cloned this repository into a subdirectory of &lt;code&gt;/sd&lt;/code&gt;, say, the &lt;code&gt;stable-diffusion-webui&lt;/code&gt; directory, you will run it as:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python stable-diffusion-webui/webui.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;When launching, you may get a very long warning message related to some weights not being used. You may freely ignore it. After a while, you will get a message like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Running on local URL:  http://127.0.0.1:7860/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the URL in browser, and you are good to go.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The script creates a web UI for Stable Diffusion&#39;s txt2img and img2img scripts. Following are features added that are not in original script.&lt;/p&gt; &#xA;&lt;h3&gt;Extras tab&lt;/h3&gt; &#xA;&lt;p&gt;Additional neural network image improvement methods unrelated to stable diffusion.&lt;/p&gt; &#xA;&lt;h4&gt;GFPGAN&lt;/h4&gt; &#xA;&lt;p&gt;Lets you improve faces in pictures using the GFPGAN model. There is a checkbox in every tab to use GFPGAN at 100%, and also a separate tab that just allows you to use GFPGAN on any picture, with a slider that controls how strongthe effect is.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/GFPGAN.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Real-ESRGAN&lt;/h4&gt; &#xA;&lt;p&gt;Image upscaler. You can choose from multiple models by original author, and specify by how much the image should be upscaled. Requires &lt;code&gt;realesrgan&lt;/code&gt; librarty:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;pip install realesrgan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sampling method selection&lt;/h3&gt; &#xA;&lt;p&gt;Pick out of multiple sampling methods for txt2img:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/sampling.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prompt matrix&lt;/h3&gt; &#xA;&lt;p&gt;Separate multiple prompts using the &lt;code&gt;|&lt;/code&gt; character, and the system will produce an image for every combination of them. For example, if you use &lt;code&gt;a busy city street in a modern city|illustration|cinematic lighting&lt;/code&gt; prompt, there are four combinations possible (first part of prompt is always kept):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;a busy city street in a modern city&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;a busy city street in a modern city, illustration&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;a busy city street in a modern city, cinematic lighting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;a busy city street in a modern city, illustration, cinematic lighting&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Four images will be produced, in this order, all with same seed and each with corresponding prompt: &lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/prompt-matrix.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another example, this time with 5 prompts and 16 variations: &lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/prompt_matrix.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use this feature, batch count will be ignored, because the number of pictures to produce depends on your prompts, but batch size will still work (generating multiple pictures at the same time for a small speed boost).&lt;/p&gt; &#xA;&lt;h3&gt;Flagging&lt;/h3&gt; &#xA;&lt;p&gt;Click the Flag button under the output section, and generated images will be saved to &lt;code&gt;log/images&lt;/code&gt; directory, and generation parameters will be appended to a csv file &lt;code&gt;log/log.csv&lt;/code&gt; in the &lt;code&gt;/sd&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;but every image is saved, why would I need this?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you&#39;re like me, you experiment a lot with prompts and settings, and only few images are worth saving. You can just save them using right click in browser, but then you won&#39;t be able to reproduce them later because you will not know what exact prompt created the image. If you use the flag button, generation paramerters will be written to csv file, and you can easily find parameters for an image by searching for its filename.&lt;/p&gt; &#xA;&lt;h3&gt;Copy-paste generation parameters&lt;/h3&gt; &#xA;&lt;p&gt;A text output provides generation parameters in an easy to copy-paste form for easy sharing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/kopipe.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you generate multiple pictures, the displayed seed will be the seed of the first one.&lt;/p&gt; &#xA;&lt;h3&gt;Correct seeds for batches&lt;/h3&gt; &#xA;&lt;p&gt;If you use a seed of 1000 to generate two batches of two images each, four generated images will have seeds: &lt;code&gt;1000, 1001, 1002, 1003&lt;/code&gt;. Previous versions of the UI would produce &lt;code&gt;1000, x, 1001, x&lt;/code&gt;, where x is an iamge that can&#39;t be generated by any seed.&lt;/p&gt; &#xA;&lt;h3&gt;Resizing&lt;/h3&gt; &#xA;&lt;p&gt;There are three options for resizing input images in img2img mode:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just resize - simply resizes source image to target resolution, resulting in incorrect aspect ratio&lt;/li&gt; &#xA; &lt;li&gt;Crop and resize - resize source image preserving aspect ratio so that entirety of target resolution is occupied by it, and crop parts that stick out&lt;/li&gt; &#xA; &lt;li&gt;Resize and fill - resize source image preserving aspect ratio so that it entirely fits target resolution, and fill empty space by rows/columns from source image&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example: &lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/resizing.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Loading&lt;/h3&gt; &#xA;&lt;p&gt;Gradio&#39;s loading graphic has a very negative effect on the processing speed of the neural network. My RTX 3090 makes images about 10% faster when the tab with gradio is not active. By default, the UI now hides loading progress animation and replaces it with static &#34;Loading...&#34; text, which achieves the same effect. Use the &lt;code&gt;--no-progressbar-hiding&lt;/code&gt; commandline option to revert this and show loading animations.&lt;/p&gt; &#xA;&lt;h3&gt;Prompt validation&lt;/h3&gt; &#xA;&lt;p&gt;Stable Diffusion has a limit for input text length. If your prompt is too long, you will get a warning in the text output field, showing which parts of your text were truncated and ignored by the model.&lt;/p&gt; &#xA;&lt;h3&gt;Loopback&lt;/h3&gt; &#xA;&lt;p&gt;A checkbox for img2img allowing to automatically feed output image as input for the next batch. Equivalent to saving output image, and replacing input image with it. Batch count setting controls how many iterations of this you get.&lt;/p&gt; &#xA;&lt;p&gt;Usually, when doing this, you would choose one of many images for the next iteration yourself, so the usefulness of this feature may be questionable, but I&#39;ve managed to get some very nice outputs with it that I wasn&#39;t abble to get otherwise.&lt;/p&gt; &#xA;&lt;p&gt;Example: (cherrypicked result; original picture by anon)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/loopback.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Png info&lt;/h3&gt; &#xA;&lt;p&gt;Adds information about generation parameters to PNG as a text chunk. You can view this information later using any software that supports viewing PNG chunk info, for example: &lt;a href=&#34;https://www.nayuki.io/page/png-file-chunk-inspector&#34;&gt;https://www.nayuki.io/page/png-file-chunk-inspector&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/pnginfo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Textual Inversion&lt;/h3&gt; &#xA;&lt;p&gt;Allows you to use pretrained textual inversion embeddings. See originial site for details: &lt;a href=&#34;https://textual-inversion.github.io/&#34;&gt;https://textual-inversion.github.io/&lt;/a&gt;. I used lstein&#39;s repo for training embdedding: &lt;a href=&#34;https://github.com/lstein/stable-diffusion&#34;&gt;https://github.com/lstein/stable-diffusion&lt;/a&gt;; if you want to train your own, I recommend following the guide on his site.&lt;/p&gt; &#xA;&lt;p&gt;No additional libraries/repositories are required to use pretrained embeddings.&lt;/p&gt; &#xA;&lt;p&gt;To make use of pretrained embeddings, create &lt;code&gt;embeddings&lt;/code&gt; directory in the root dir of Stable Diffusion and put your embeddings into it. They must be .pt files about 5Kb in size, each with only one trained embedding, and the filename (without .pt) will be the term you&#39;d use in prompt to get that embedding.&lt;/p&gt; &#xA;&lt;p&gt;As an example, I trained one for about 5000 steps: &lt;a href=&#34;https://files.catbox.moe/e2ui6r.pt&#34;&gt;https://files.catbox.moe/e2ui6r.pt&lt;/a&gt;; it does not produce very good results, but it does work. Download and rename it to &lt;code&gt;Usada Pekora.pt&lt;/code&gt;, and put it into &lt;code&gt;embeddings&lt;/code&gt; dir and use Usada Pekora in prompt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/inversion.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Settings&lt;/h3&gt; &#xA;&lt;p&gt;A tab with settings, allowing you to use UI to edit more than half of parameters that previously were commandline. Settings are saved to config.js file. Settings that remain as commandline options are ones that are required at startup.&lt;/p&gt; &#xA;&lt;h3&gt;Attention&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;()&lt;/code&gt; in prompt decreases model&#39;s attention to enclosed words, and &lt;code&gt;[]&lt;/code&gt; increases it. You can combine multiple modifiers:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/attention-3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SD upscale&lt;/h3&gt; &#xA;&lt;p&gt;Upscale image using RealESRGAN and then go through tiles of the result, improving them with img2img.&lt;/p&gt; &#xA;&lt;p&gt;Original idea by: &lt;a href=&#34;https://github.com/jquesnelle/txt2imghd&#34;&gt;https://github.com/jquesnelle/txt2imghd&lt;/a&gt;. This is an independent implementation.&lt;/p&gt; &#xA;&lt;p&gt;To use this feature, tick a checkbox in the img2img interface. Original image will be upscaled to twice the original width and height, while width and height sliders will specify the size of individual tiles. At the moment this method does not support batch size.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/sd-upscale.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;User scripts&lt;/h3&gt; &#xA;&lt;p&gt;If the program is launched with &lt;code&gt;--allow-code&lt;/code&gt; option, an extra text input field for script code is available in txt2img interface. It allows you to input python code that will do the work with image. If this field is not empty, the processing that would happen normally is skipped.&lt;/p&gt; &#xA;&lt;p&gt;In code, access parameters from web UI using the &lt;code&gt;p&lt;/code&gt; variable, and provide outputs for web UI using the &lt;code&gt;display(images, seed, info)&lt;/code&gt; function. All globals from script are also accessible.&lt;/p&gt; &#xA;&lt;p&gt;As an example, here is a script that draws a chart seen below (and also saves it as &lt;code&gt;test/gnomeplot/gnome5.png&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;steps = [4, 8,12,16, 20]&#xA;cfg_scales = [5.0,10.0,15.0]&#xA;&#xA;def cell(x, y, p=p):&#xA;&#x9;p.steps = x&#xA;&#x9;p.cfg_scale = y&#xA;&#x9;return process_images(p).images[0]&#xA;&#xA;images = [draw_xy_grid(&#xA;&#x9;xs = steps,&#xA;&#x9;ys = cfg_scales,&#xA;&#x9;x_label = lambda x: f&#39;Steps = {x}&#39;,&#xA;&#x9;y_label = lambda y: f&#39;CFG = {y}&#39;,&#xA;&#x9;cell = cell&#xA;)]&#xA;&#xA;save_image(images[0], &#39;test/gnomeplot&#39;, &#39;gnome5&#39;)&#xA;display(images)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/images/scripting.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A more simple script that would just process the image and output it normally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;processed = process_images(p)&#xA;&#xA;print(&#34;Seed was: &#34; + str(processed.seed))&#xA;&#xA;display(processed.images, processed.seed, processed.info)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>0x192/universal-android-debloater</title>
    <updated>2022-08-29T01:37:55Z</updated>
    <id>tag:github.com,2022-08-29:/0x192/universal-android-debloater</id>
    <link href="https://github.com/0x192/universal-android-debloater" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform GUI written in Rust using ADB to debloat non-rooted android devices. Improve your privacy, the security and battery life of your device.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Android Debloater GUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Use at your own risk. I am not responsible for anything that could happen to your phone.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/0x192/universal-android-debloater/main/resources/screenshots/v0.5.0.png&#34; width=&#34;850&#34; alt=&#34;uad_screenshot&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;This software is still in an early stage of development. Check out the issues, and feel free to contribute!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;This is a complete rewrite in Rust of the &lt;a href=&#34;https://gitlab.com/W1nst0n/universal-android-debloater&#34;&gt;UAD project&lt;/a&gt;, which aims to improve privacy and battery performance by removing unnecessary and obscure system apps. This can also contribute to improve security by reducing &lt;a href=&#34;https://en.wikipedia.org/wiki/Attack_surface&#34;&gt;the attack surface&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Packages are as well documented as possible in order to provide a better understanding of what you can delete or not. The worst thing which could happen is removing an essential system package needed during boot causing then an unfortunate bootloop. After about 5 failed system boots, the phone will automatically reboot in recovery mode and you&#39;ll have to perform a FACTORY RESET. So make a backup first!&lt;/p&gt; &#xA;&lt;p&gt;In any case, you can NOT brick your device with this software! That&#39;s the main thing, right?&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Uninstall/Disable and Restore/Enable system packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-user support (e.g apps in work profiles)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Export/Import your selection in &lt;code&gt;uad_exported_selection.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-device support: you can connect multiple phones at the same time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; All your actions are logged so you never forget what you&#39;ve done&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NB : System apps cannot really be uninstalled without root (see the &lt;a href=&#34;https://gitlab.com/W1nst0n/universal-android-debloater-rs/-/wikis/FAQ&#34;&gt;FAQ&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Universal debloat lists&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GFAM (Google/Facebook/Amazon/Microsoft)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AOSP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Manufacturers (OEM)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mobile carriers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Qualcomm / Mediatek / Miscellaneous&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Manufacturers debloat lists&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Archos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Asus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Blackberry&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Gionee&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; LG&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Google&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fairphone&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; HTC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Huawei&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Motorola&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Nokia&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OnePlus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Oppo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Samsung&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sony&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tecno&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TCL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Wiko&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xiaomi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ZTE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile carriers debloat lists&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Country&lt;/th&gt; &#xA;   &lt;th&gt;Carriers&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;France&lt;/td&gt; &#xA;   &lt;td&gt;Orange, SFR, Free, Bouygues&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;USA&lt;/td&gt; &#xA;   &lt;td&gt;T-Mobile, Verizon, Sprint, AT&amp;amp;T&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Germany&lt;/td&gt; &#xA;   &lt;td&gt;Telekom&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UK&lt;/td&gt; &#xA;   &lt;td&gt;EE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://github.com/0x192/universal-android-debloater/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do a proper backup of your data! You can never be too careful!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;em&gt;Developer Options&lt;/em&gt; on your smartphone.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Turn on &lt;em&gt;USB Debugging&lt;/em&gt; from the developer panel.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the settings, disconnect from any OEM accounts (when you delete an OEM account package it could lock you on the lockscreen because the phone can&#39;t associate your identity anymore)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install ADB (see the intructions by clicking on your OS below):&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;LINUX&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt; on your PC :&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;p&gt;Debian Base:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt install android-sdk-platform-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;Arch-Linux Base:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo pacman -S android-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;Red Hat Base:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo yum install android-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;OpenSUSE Base:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo zypper install android-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;MAC OS&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Install &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install android-platform-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;WINDOWS&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Download &lt;a href=&#34;https://dl.google.com/android/repository/platform-tools-latest-windows.zip&#34;&gt;android platform tools&lt;/a&gt; and unzip it somewhere. &lt;a href=&#34;https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/&#34;&gt;Add the folder to your PATH&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio/run/oem-usb#Drivers&#34;&gt;Install USB drivers for your device&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Check your device is detected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;&amp;gt; adb devices&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the latest release of UAD GUI for your Operating System &lt;a href=&#34;https://github.com/0x192/universal-android-debloater/releases&#34;&gt;here&lt;/a&gt;. Take the &lt;code&gt;opengl&lt;/code&gt; version only if the default version (with a Vulkan backend) doesn&#39;t launch.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Chinese phones users may need to use the AOSP list for removing some stock apps because those Chinese manufacturers (especially Xiaomi and Huawei) have been using the name of AOSP packages for their own (modified &amp;amp; closed-source) apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; You will have to run this software whenever your OEM pushes an update to your phone as some &lt;em&gt;uninstalled&lt;/em&gt; system apps could be reinstalled.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Hey-hey-hey! Don&#39;t go away so fast! This is a community project. That means I need you! I&#39;m sure you want to make this project better anyway.&lt;/p&gt; &#xA;&lt;p&gt;==&amp;gt; &lt;a href=&#34;https://github.com/0x192/universal-android-debloater/wiki&#34;&gt;How to contribute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mawilms&#34;&gt;@mawilms&lt;/a&gt; for his LotRO plugin manager (&lt;a href=&#34;https://github.com/mawilms/lembas&#34;&gt;Lembas&lt;/a&gt;) which helped me a lot to understand how to use the &lt;a href=&#34;https://github.com/hecrj/iced&#34;&gt;Iced&lt;/a&gt; GUI library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/casperstorm&#34;&gt;@casperstorm&lt;/a&gt; for the UI/UX inspiration.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>