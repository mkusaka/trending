<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-20T01:28:29Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>konfig-dev/konfig</title>
    <updated>2024-12-20T01:28:29Z</updated>
    <id>tag:github.com,2024-12-20:/konfig-dev/konfig</id>
    <link href="https://github.com/konfig-dev/konfig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SDK &amp; API Docs Generator. Sunset as of December 2024&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Konfig&lt;/h1&gt; &#xA;&lt;p&gt;The monorepo that holds everything...&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Get the repository on your local machine. &lt;strong&gt;Takes a minute.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/konfig-dev/konfig --recursive&#xA;cd konfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repository has submodules so pull all of them. &lt;strong&gt;Also take a few minutes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git submodule update --init --recursive --remote --merge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Postgres as a background process&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# in /konfig&#xA;brew install postgresql&#xA;mkdir -p postgres/data&#xA;initdb -D ./postgres/data&#xA;pg_ctl -D ./postgres/data start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setup &lt;code&gt;.env&lt;/code&gt; file in &lt;code&gt;generator/konfig-dash&lt;/code&gt; to something like:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;DATABASE_URL=&#34;postgresql://dylanhuang@localhost:5432/konfig_dev?connection_limit=1&#34;&#xA;TEST_DATABASE_URL=&#34;postgresql://dylanhuang@localhost:5432/konfig_test?connection_limit=1&#34;&#xA;&#xA;AWS_ACCESS_KEY_ID=XXXXXX&#xA;AWS_SECRET_ACCESS_KEY=XXXXXX&#xA;&#xA;# Used to encrypt/decrypt session cookies. Change this value and re-deploy to log out all users of your app at once.&#xA;SESSION_SECRET=ZUWpQ9pB4fB5FFpjHLi8Z2qadzXkdTKhHBsXmGmjNdxtrZbevaCYWSpw7G7cHBhh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Paste this into your &lt;code&gt;~/.zshrc&lt;/code&gt; or &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -f $HOME/.envvars ]; then&#xA;    . $HOME/.envvars&#xA;else&#xA;    print &#34;404: ~/.envvars not found.&#34;&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create &lt;code&gt;~/.envvars&lt;/code&gt; with values from Dylan.&lt;/p&gt; &#xA;&lt;h2&gt;How to run Konfig&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure &lt;code&gt;node_modules&lt;/code&gt; is initiated in &lt;code&gt;konfig-dash&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd generator/konfig-dash&#xA;yarn # takes some time&#xA;yarn rw prisma migrate dev # setup the DB&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the server with &lt;code&gt;yarn dev&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# inside generator/konfig-dash&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start &lt;code&gt;generator/konfig-generator-api&lt;/code&gt; w/ IntelliJ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into an SDK repo and run &lt;code&gt;konfig generate -d&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Making Changes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/changesets/changesets&#34;&gt;Changesets&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mui/base-ui</title>
    <updated>2024-12-20T01:28:29Z</updated>
    <id>tag:github.com,2024-12-20:/mui/base-ui</id>
    <link href="https://github.com/mui/base-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Base UI is an open-source library of accessible, unstyled UI components for React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Base&amp;nbsp;UI&lt;/h1&gt; &#xA;&lt;p&gt;From the creators of Radix, Floating UI, and Material&amp;nbsp;UI, Base&amp;nbsp;UI is an unstyled UI component library for building accessible user interfaces.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To get started, check out the &lt;a href=&#34;https://base-ui.com/react/overview/quick-start&#34;&gt;Base&amp;nbsp;UI documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/mui/base-ui/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bug fixes and improvements, and how to build and test your changes.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;To see the latest updates, check out the &lt;a href=&#34;https://base-ui.com/react/overview/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt; For community support, questions, and tips, join our &lt;a href=&#34;https://discord.gg/g6C3hUtuxz&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; To stay up-to-date on new releases and announcements follow &lt;a href=&#34;https://x.com/base_ui&#34;&gt;Base&amp;nbsp;UI on X&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bluesky&lt;/strong&gt; We&#39;re also on &lt;a href=&#34;https://bsky.app/profile/base-ui.com&#34;&gt;Bluesky&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Michał Dudak &lt;a href=&#34;https://x.com/michaldudak&#34;&gt;@michaldudak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;James Nelson &lt;a href=&#34;https://x.com/atomiksdev&#34;&gt;@atomiksdev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Albert Yu &lt;a href=&#34;https://github.com/mj12albert&#34;&gt;@mj12albert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Colm Tuite &lt;a href=&#34;https://x.com/colmtuite&#34;&gt;@colmtuite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marija Najdova &lt;a href=&#34;https://x.com/marijanajdova&#34;&gt;@marijanajdova&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vlad Moroz &lt;a href=&#34;https://x.com/vladyslavmoroz&#34;&gt;@vladyslavmoroz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/mui/base-ui/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XiaoMi/ha_xiaomi_home</title>
    <updated>2024-12-20T01:28:29Z</updated>
    <id>tag:github.com,2024-12-20:/XiaoMi/ha_xiaomi_home</id>
    <link href="https://github.com/XiaoMi/ha_xiaomi_home" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xiaomi Home Integration for Home Assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xiaomi Home Integration for Home Assistant&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/doc/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xiaomi Home Integration is an integrated component of Home Assistant supported by Xiaomi official. It allows you to use Xiaomi IoT smart devices in Home Assistant.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Home Assistant version requirement:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Core $\geq$ 2024.11.0&lt;/li&gt; &#xA;  &lt;li&gt;Operating System $\geq$ 13.0&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Method 1: Git clone from GitHub&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd config&#xA;git clone https://github.com/XiaoMi/ha_xiaomi_home.git&#xA;cd ha_xiaomi_home&#xA;./install.sh /config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We recommend this installation method, for it is convenient to switch to a tag when updating &lt;code&gt;xiaomi_home&lt;/code&gt; to a certain version.&lt;/p&gt; &#xA;&lt;p&gt;For example, update to version v1.0.0&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd config/ha_xiaomi_home&#xA;git checkout v1.0.0&#xA;./install.sh /config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 2: &lt;a href=&#34;https://hacs.xyz/&#34;&gt;HACS&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;HACS &amp;gt; Overflow Menu &amp;gt; Custom repositories &amp;gt; Repository: &lt;a href=&#34;https://github.com/XiaoMi/ha_xiaomi_home.git&#34;&gt;https://github.com/XiaoMi/ha_xiaomi_home.git&lt;/a&gt; &amp;amp; Category: Integration &amp;gt; ADD&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Xiaomi Home has not been added to the HACS store as a default yet. It&#39;s coming soon.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Method 3: Manually installation via &lt;a href=&#34;https://github.com/home-assistant/addons/tree/master/samba&#34;&gt;Samba&lt;/a&gt; / &lt;a href=&#34;https://github.com/hassio-addons/addon-ftp&#34;&gt;FTPS&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Download and copy &lt;code&gt;custom_components/xiaomi_home&lt;/code&gt; folder to &lt;code&gt;config/custom_components&lt;/code&gt; folder in your Home Assistant.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Login&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/brand/?brand=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; ADD INTEGRATION&lt;/a&gt; &amp;gt; Search &lt;code&gt;Xiaomi Home&lt;/code&gt; &amp;gt; NEXT &amp;gt; Click here to login &amp;gt; Sign in with Xiaomi account&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/config_flow_start/?domain=xiaomi_home&#34;&gt;&lt;img src=&#34;https://my.home-assistant.io/badges/config_flow_start.svg?sanitize=true&#34; alt=&#34;Open your Home Assistant instance and start setting up a new integration.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add MIoT Devices&lt;/h3&gt; &#xA;&lt;p&gt;After logging in successfully, a dialog box named &#34;Select Home and Devices&#34; pops up. You can select the home containing the device that you want to import in Home Assistant.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple User Login&lt;/h3&gt; &#xA;&lt;p&gt;After a Xiaomi account login and its user configuration are completed, you can continue to add other Xiaomi accounts in the configured Xiaomi Home Integration page.&lt;/p&gt; &#xA;&lt;p&gt;Method: &lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; Configured &amp;gt; Xiaomi Home&lt;/a&gt; &amp;gt; ADD HUB &amp;gt; NEXT &amp;gt; Click here to login &amp;gt; Sign in with Xiaomi account&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;&lt;img src=&#34;https://my.home-assistant.io/badges/integration.svg?sanitize=true&#34; alt=&#34;Open your Home Assistant instance and show an integration.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update Configurations&lt;/h3&gt; &#xA;&lt;p&gt;You can change the configurations in the &#34;Configuration Options&#34; dialog box, in which you can update your user nickname and the list of the devices importing from Xiaomi Home APP, etc.&lt;/p&gt; &#xA;&lt;p&gt;Method: &lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; Configured &amp;gt; Xiaomi Home&lt;/a&gt; &amp;gt; CONFIGURE &amp;gt; Select the option to update&lt;/p&gt; &#xA;&lt;h3&gt;Debug Mode for Action&lt;/h3&gt; &#xA;&lt;p&gt;You can manually send Action command message with parameters to the device when the debug mode for action is activated. The user interface for sending the Action command with parameters is shown as a Text entity.&lt;/p&gt; &#xA;&lt;p&gt;Method: &lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; Configured &amp;gt; Xiaomi Home&lt;/a&gt; &amp;gt; CONFIGURE &amp;gt; Debug mode for action&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Xiaomi Home Integration and the affiliated cloud interface is provided by Xiaomi officially. You need to use your Xiaomi account to login to get your device list. Xiaomi Home Integration implements OAuth 2.0 login process, which does not keep your account password in the Home Assistant application. However, due to the limitation of the Home Assistant platform, the user information (including device information, certificates, tokens, etc.) of your Xiaomi account will be saved in the Home Assistant configuration file in clear text after successful login. You need to ensure that your Home Assistant configuration file is properly stored. The exposure of your configuration file may result in others logging in with your identity.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Does Xiaomi Home Integration support all Xiaomi Home devices?&lt;/p&gt; &lt;p&gt;Xiaomi Home Integration currently supports most categories of Home device. Only a few categories are not supported. They are Bluetooth device, infrared device and virtual device.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Does Xiaomi Home Integration support multiple Xiaomi accounts?&lt;/p&gt; &lt;p&gt;Yes, it supports multiple Xiaomi accounts. Furthermore, Xiaomi Home Integration allows that devices belonging to different accounts can be added to a same area.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Does Xiaomi Home Integration support local control?&lt;/p&gt; &lt;p&gt;Local control is implemented by &lt;a href=&#34;https://www.mi.com/shop/buy/detail?product_id=15755&amp;amp;cfrom=search&#34;&gt;Xiaomi Central Hub Gateway&lt;/a&gt; (firmware version 3.4.0_0000 above) or Xiaomi home devices with built-in central hub gateway (software version 0.8.0 above) inside. If you do not have a Xiaomi central hub gateway or other devices having central hub gateway function, all control commands are sent through Xiaomi Cloud. The firmware for Xiaomi central hub gateway including the built-in central hub gateway supporting Home Assistant local control feature has not been released yet. Please refer to MIoT team&#39;s notification for upgrade plans.&lt;/p&gt; &lt;p&gt;Xiaomi central hub gateway is only available in mainland China. In other regions, it is not available.&lt;/p&gt; &lt;p&gt;Xiaomi Home Integration can also implement partial local control by enabling Xiaomi LAN control function. Xiaomi LAN control function can only control IP devices (devices connected to the router via WiFi or ethernet cable) in the same local area network as Home Assistant. It cannot control BLE Mesh, ZigBee, etc. devices. This function may cause some abnormalities. We recommend not to use this function. Xiaomi LAN control function is enabled by &lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; Configured &amp;gt; Xiaomi Home&lt;/a&gt; &amp;gt; CONFIGURE &amp;gt; Update LAN control configuration&lt;/p&gt; &lt;p&gt;Xiaomi LAN control function is not restricted by region. It is available in all regions. However, if there is a central gateway in the local area network where Home Assistant is located, even Xiaomi LAN control function is enabled in the integration, it will not take effect.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In which regions is Xiaomi Home Integration available?&lt;/p&gt; &lt;p&gt;Xiaomi Home Integration can be used in the mainland of China, Europe, India, Russia, Singapore, and USA. As user data in Xiaomi Cloud of different regions is isolated, you need to choose your region when importing MIoT devices in the configuration process. Xiaomi Home Integration allows you to import devices of different regions to a same area.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Principle of Messaging&lt;/h2&gt; &#xA;&lt;h3&gt;Control through the Cloud&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/doc/images/cloud_control.jpg&#34; width=&#34;300&#34;&gt; &#xA; &lt;p&gt;Image 1: Cloud control architecture&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Xiaomi Home Integration subscribes to the interested device messages on the MQTT Broker in MIoT Cloud. When a device property changes or a device event occurs, the device sends an upstream message to MIoT Cloud, and the MQTT Broker pushes the subscribed device message to Xiaomi Home Integration. Because Xiaomi Home Integration does not need to poll to obtain the current device property value in the cloud, it can immediately receive the notification message when the properties change or the events occur. Thanks to the message subscription mechanism, Xiaomi Home Integration only queries the properties of all devices from the cloud once when the integration configuration is completed, which puts little access pressure on the cloud.&lt;/p&gt; &#xA;&lt;p&gt;Xiaomi Home Integration sends command messages to the devices via the HTTP interface of MIoT Cloud to control devices. The device reacts and responds after receiving the downstream message sent forward by MIoT Cloud.&lt;/p&gt; &#xA;&lt;h3&gt;Control locally&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/doc/images/local_control.jpg&#34; width=&#34;300&#34;&gt; &#xA; &lt;p&gt;Image 2: Local control architecture&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Xiaomi central hub gateway contains a standard MQTT Broker, which implements a complete subscribe-publish mechanism. Xiaomi Home Integration subscribes to the interested device messages through Xiaomi central hub gateway. When a device property changes or a device event occurs, the device sends an upstream message to Xiaomi central hub gateway, and the MQTT Broker pushes the subscribed device message to Xiaomi Home Integration.&lt;/p&gt; &#xA;&lt;p&gt;When Xiaomi Home Integration needs to control a device, it publishes a device command message to the MQTT Broker, which is then forwarded to the device by Xiaomi central hub gateway. The device reacts and responds after receiving the downstream message from the gateway.&lt;/p&gt; &#xA;&lt;h2&gt;Mapping Relationship between MIoT-Spec-V2 and Home Assistant Entity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://iot.mi.com/v2/new/doc/introduction/knowledge/spec&#34;&gt;MIoT-Spec-V2&lt;/a&gt; is the abbreviation for MIoT Specification Version 2, which is an IoT protocol formulated by Xiaomi IoT platform to give a standard functional description of IoT devices. It includes function definition (referred to as data model by other IoT platforms), interaction model, message format, and encoding.&lt;/p&gt; &#xA;&lt;p&gt;In MIoT-Spec-V2 protocol, a product is defined as a device. A device contains several services. A service may have some properties, events and actions. Xiaomi Home Integration creates Home Assistant entities according to MIoT-Spec-V2. The conversion relationship is as follows.&lt;/p&gt; &#xA;&lt;h3&gt;General Conversion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Property&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;format&lt;/th&gt; &#xA;   &lt;th&gt;access&lt;/th&gt; &#xA;   &lt;th&gt;value-list&lt;/th&gt; &#xA;   &lt;th&gt;value-range&lt;/th&gt; &#xA;   &lt;th&gt;Entity in Home Assistant&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;writable&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;writable&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Switch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;writable&lt;/td&gt; &#xA;   &lt;td&gt;not string &amp;amp; not bool&lt;/td&gt; &#xA;   &lt;td&gt;existent&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Select&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;writable&lt;/td&gt; &#xA;   &lt;td&gt;not string &amp;amp; not bool&lt;/td&gt; &#xA;   &lt;td&gt;non-existent&lt;/td&gt; &#xA;   &lt;td&gt;existent&lt;/td&gt; &#xA;   &lt;td&gt;Number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;not writable&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Sensor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Event&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MIoT-Spec-V2 event is transformed to Event entity in Home Assistant. The event&#39;s parameters are also passed to entity&#39;s &lt;code&gt;_trigger_event&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Action&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;in&lt;/th&gt; &#xA;   &lt;th&gt;Entity in Home Assistant&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;empty&lt;/td&gt; &#xA;   &lt;td&gt;Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;not empty&lt;/td&gt; &#xA;   &lt;td&gt;Notify&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If the debug mode for action is activated, the Text entity will be created when the &#34;in&#34; field in the action spec is not empty.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;Attribute&#34; item in the entity details page displays the format of the input parameter which is an ordered list, enclosed in square brackets []. The string elements in the list are enclosed in double quotation marks &#34;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;For example, the &#34;Attributes&#34; item in the details page of the Notify entity converted by the &#34;Intelligent Speaker Execute Text Directive&#34; action of xiaomi.wifispeaker.s12 siid=5, aiid=5 instance shows the action params as &lt;code&gt;[Text Content(str), Silent Execution(bool)]&lt;/code&gt;. A properly formatted input is &lt;code&gt;[&#34;Hello&#34;, true]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Specific Conversion&lt;/h3&gt; &#xA;&lt;p&gt;MIoT-Spec-V2 uses URN for defining types. The format is &lt;code&gt;urn:&amp;lt;namespace&amp;gt;:&amp;lt;type&amp;gt;:&amp;lt;name&amp;gt;:&amp;lt;value&amp;gt;[:&amp;lt;vendor-product&amp;gt;:&amp;lt;version&amp;gt;]&lt;/code&gt;, in which &lt;code&gt;name&lt;/code&gt; is a human-readable word or phrase describing the instance of device, service, property, event and action. Xiaomi Home Integration first determines whether to convert the MIoT-Spec-V2 instance into a specific Home Assistant entity based on the instance&#39;s name. For the instance that does not meet the specific conversion rules, general conversion rules are used for conversion.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;namespace&lt;/code&gt; is the namespace of MIoT-Spec-V2 instance. When its value is miot-spec-v2, it means that the specification is defined by Xiaomi. When its value is bluetooth-spec, it means that the specification is defined by Bluetooth Special Interest Group (SIG). When its value is not miot-spec-v2 or bluetooth-spec, it means that the specification is defined by other vendors. If MIoT-Spec-V2 &lt;code&gt;namespace&lt;/code&gt; is not miot-spec-v2, a star mark &lt;code&gt;*&lt;/code&gt; is added in front of the entity&#39;s name .&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The conversion follows &lt;code&gt;SPEC_DEVICE_TRANS_MAP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#39;&amp;lt;device instance name&amp;gt;&#39;:{&#xA;        &#39;required&#39;:{&#xA;            &#39;&amp;lt;service instance name&amp;gt;&#39;:{&#xA;                &#39;required&#39;:{&#xA;                    &#39;properties&#39;: {&#xA;                        &#39;&amp;lt;property instance name&amp;gt;&#39;: set&amp;lt;property access: str&amp;gt;&#xA;                    },&#xA;                    &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;                    &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;                },&#xA;                &#39;optional&#39;:{&#xA;                    &#39;properties&#39;: set&amp;lt;property instance name: str&amp;gt;,&#xA;                    &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;                    &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;                }&#xA;            }&#xA;        },&#xA;        &#39;optional&#39;:{&#xA;            &#39;&amp;lt;service instance name&amp;gt;&#39;:{&#xA;                &#39;required&#39;:{&#xA;                    &#39;properties&#39;: {&#xA;                        &#39;&amp;lt;property instance name&amp;gt;&#39;: set&amp;lt;property access: str&amp;gt;&#xA;                    },&#xA;                    &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;                    &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;                },&#xA;                &#39;optional&#39;:{&#xA;                    &#39;properties&#39;: set&amp;lt;property instance name: str&amp;gt;,&#xA;                    &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;                    &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;                }&#xA;            }&#xA;        },&#xA;        &#39;entity&#39;: str&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#34;required&#34; field under &#34;device instance name&#34; indicates the required services of the device. The &#34;optional&#34; field under &#34;device instance name&#34; indicates the optional services of the device. The &#34;entity&#34; field indicates the Home Assistant entity to be created. The &#34;required&#34; and the &#34;optional&#34; field under &#34;service instance name&#34; are required and optional properties, events and actions of the service respectively. The value of &#34;property instance name&#34; under &#34;required&#34; &#34;properties&#34; field is the access mode of the property. The condition for a successful match is that the value of &#34;property instance name&#34; is a subset of the access mode of the corresponding MIoT-Spec-V2 property instance.&lt;/p&gt; &#xA;&lt;p&gt;Home Assistant entity will not be created if MIoT-Spec-V2 device instance does not contain all required services, properties, events or actions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The conversion follows &lt;code&gt;SPEC_SERVICE_TRANS_MAP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#39;&amp;lt;service instance name&amp;gt;&#39;:{&#xA;        &#39;required&#39;:{&#xA;            &#39;properties&#39;: {&#xA;                &#39;&amp;lt;property instance name&amp;gt;&#39;: set&amp;lt;property access: str&amp;gt;&#xA;            },&#xA;            &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;            &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;        },&#xA;        &#39;optional&#39;:{&#xA;            &#39;properties&#39;: set&amp;lt;property instance name: str&amp;gt;,&#xA;            &#39;events&#39;: set&amp;lt;event instance name: str&amp;gt;,&#xA;            &#39;actions&#39;: set&amp;lt;action instance name: str&amp;gt;&#xA;        },&#xA;        &#39;entity&#39;: str&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#34;required&#34; field under &#34;service instance name&#34; indicates the required properties, events and actions of the service. The &#34;optional&#34; field indicates the optional properties, events and actions of the service. The &#34;entity&#34; field indicates the Home Assistant entity to be created. The value of &#34;property instance name&#34; under &#34;required&#34; &#34;properties&#34; field is the access mode of the property. The condition for a successful match is that the value of &#34;property instance name&#34; is a subset of the access mode of the corresponding MIoT-Spec-V2 property instance.&lt;/p&gt; &#xA;&lt;p&gt;Home Assistant entity will not be created if MIoT-Spec-V2 service instance does not contain all required properties, events or actions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Property&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The conversion follows &lt;code&gt;SPEC_PROP_TRANS_MAP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#39;entities&#39;:{&#xA;        &#39;&amp;lt;entity name&amp;gt;&#39;:{&#xA;            &#39;format&#39;: set&amp;lt;str&amp;gt;,&#xA;            &#39;access&#39;: set&amp;lt;str&amp;gt;&#xA;        }&#xA;    },&#xA;    &#39;properties&#39;: {&#xA;        &#39;&amp;lt;property instance name&amp;gt;&#39;:{&#xA;            &#39;device_class&#39;: str,&#xA;            &#39;entity&#39;: str&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#34;format&#34; field under &#34;entity name&#34; represents the data format of the property, and matching with one value indicates a successful match. The &#34;access&#34; field under &#34;entity name&#34; represents the access mode of the property, and matching with all values is considered a successful match.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;entity&#34; field under &#34;property instance name&#34;, of which value is one of entity name under &#34;entities&#34; field, indicates the Home Assistant entity to be created. The &#34;device_class&#34; field under &#34;property instance name&#34; indicates the Home Assistant entity&#39;s &lt;code&gt;_attr_device_class&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Event&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The conversion follows &lt;code&gt;SPEC_EVENT_TRANS_MAP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#39;&amp;lt;event instance name&amp;gt;&#39;: str&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The value of the event instance name indicates &lt;code&gt;_attr_device_class&lt;/code&gt; of the Home Assistant entity to be created.&lt;/p&gt; &#xA;&lt;h3&gt;MIoT-Spec-V2 Filter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;spec_filter.json&lt;/code&gt; is used to filter out the MIoT-Spec-V2 instance that will not be converted to Home Assistant entity.&lt;/p&gt; &#xA;&lt;p&gt;The format of &lt;code&gt;spec_filter.json&lt;/code&gt; is as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;&amp;lt;MIoT-Spec-V2 device instance&amp;gt;&#34;:{&#xA;        &#34;services&#34;: list&amp;lt;service_iid: str&amp;gt;,&#xA;        &#34;properties&#34;: list&amp;lt;service_iid.property_iid: str&amp;gt;,&#xA;        &#34;events&#34;: list&amp;lt;service_iid.event_iid: str&amp;gt;,&#xA;        &#34;actions&#34;: list&amp;lt;service_iid.action_iid: str&amp;gt;,&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The key of &lt;code&gt;spec_filter.json&lt;/code&gt; dictionary is the urn excluding the &#34;version&#34; field of the MIoT-Spec-V2 device instance. The firmware of different versions of the same product may be associated with the MIoT-Spec-V2 device instances of different versions. It is required that the MIoT-Spec-V2 instance of a higher version must contain all MIoT-Spec-V2 instances of the lower versions when a vendor defines the MIoT-Spec-V2 of its product on MIoT platform. Thus, the key of &lt;code&gt;spec_filter.json&lt;/code&gt; does not need to specify the version number of MIoT-Spec-V2 device instance.&lt;/p&gt; &#xA;&lt;p&gt;The value of &#34;services&#34;, &#34;properties&#34;, &#34;events&#34; or &#34;actions&#34; fields under &#34;device instance&#34; is the instance id (iid) of the service, property, event or action that will be ignored in the conversion process. Wildcard matching is supported.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;urn:miot-spec-v2:device:television:0000A010:xiaomi-rmi1&#34;:{&#xA;        &#34;services&#34;: [&#34;*&#34;]   # Filter out all services. It is equivalent to completely ignoring the device with such MIoT-Spec-V2 device instance.&#xA;    },&#xA;    &#34;urn:miot-spec-v2:device:gateway:0000A019:xiaomi-hub1&#34;: {&#xA;        &#34;services&#34;: [&#34;3&#34;],  # Filter out the service whose iid=3.&#xA;        &#34;properties&#34;: [&#34;4.*&#34;]   # Filter out all properties in the service whose iid=4.&#xA;        &#34;events&#34;: [&#34;4.1&#34;],  # Filter out the iid=1 event in the iid=4 service.&#xA;        &#34;actions&#34;: [&#34;4.1&#34;]  # Filter out the iid=1 action in the iid=4 service.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Device information service (urn:miot-spec-v2:service:device-information:00007801) of all devices will never be converted to Home Assistant entity.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple Language Support&lt;/h2&gt; &#xA;&lt;p&gt;There are 8 languages available for selection in the config flow language option of Xiaomi Home, including Simplified Chinese, Traditional Chinese, English, Spanish, Russian, French, German, and Japanese. The config flow page in Simplified Chinese and English has been manually reviewed by the developer. Other languages are translated by machine translation. If you want to modify the words and sentences in the config flow page, you need to modify the json file of the certain language in &lt;code&gt;custom_components/xiaomi_home/translations/&lt;/code&gt; and &lt;code&gt;custom_components/xiaomi_home/miot/i18n/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;When displaying Home Assistant entity name, Xiaomi Home downloads the multiple language file configured by the device vendor from MIoT Cloud, which contains translations for MIoT-Spec-V2 instances of the device. &lt;code&gt;multi_lang.json&lt;/code&gt; is a locally maintained multiple language dictionary, which has a higher priority than the multiple language file obtained from the cloud and can be used to supplement or modify the multiple language translation of devices.&lt;/p&gt; &#xA;&lt;p&gt;The format of &lt;code&gt;multi_lang.json&lt;/code&gt; is as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;&amp;lt;MIoT-Spec-V2 device instance&amp;gt;&#34;: {&#xA;        &#34;&amp;lt;language code&amp;gt;&#34;: {&#xA;            &#34;&amp;lt;instance code&amp;gt;&#34;: &amp;lt;translation: str&amp;gt;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The key of &lt;code&gt;multi_lang.json&lt;/code&gt; dictionary is the urn excluding the &#34;version&#34; field of the MIoT-Spec-V2 device instance.&lt;/p&gt; &#xA;&lt;p&gt;The language code is zh-Hans, zh-Hant, en, es, ru, fr, de, or ja, corresponding to the 8 selectable languages mentioned above.&lt;/p&gt; &#xA;&lt;p&gt;The instance code is the code of the MIoT-Spec-V2 instance, which is in the format of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service:&amp;lt;siid&amp;gt;                  # service&#xA;service:&amp;lt;siid&amp;gt;:property:&amp;lt;piid&amp;gt;  # property&#xA;service:&amp;lt;siid&amp;gt;:property:&amp;lt;piid&amp;gt;:valuelist:&amp;lt;value&amp;gt; # the value in value-list of a property&#xA;service:&amp;lt;siid&amp;gt;:event:&amp;lt;eiid&amp;gt;     # event&#xA;service:&amp;lt;siid&amp;gt;:action:&amp;lt;aiid&amp;gt;    # action&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;siid, piid, eiid, aiid and value are all decimal three-digit integers.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;urn:miot-spec-v2:device:health-pot:0000A051:chunmi-a1&#34;: {&#xA;        &#34;zh-Hant&#34;: {&#xA;            &#34;service:002&#34;: &#34;養生壺&#34;,&#xA;            &#34;service:002:property:001&#34;: &#34;工作狀態&#34;,&#xA;            &#34;service:002:property:001:valuelist:000&#34;: &#34;待機中&#34;,&#xA;            &#34;service:002:action:002&#34;: &#34;停止烹飪&#34;,&#xA;            &#34;service:005:event:001&#34;: &#34;烹飪完成&#34;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you edit &lt;code&gt;specv2entity.py&lt;/code&gt;, &lt;code&gt;spec_filter.json&lt;/code&gt; or &lt;code&gt;multi_lang.json&lt;/code&gt; in the &lt;code&gt;custom_components/xiaomi_home/miot/specs&lt;/code&gt; directory in your Home Assistant, you need to update the entity conversion rule in the integration&#39;s CONFIGURE page to take effect. Method: &lt;a href=&#34;https://my.home-assistant.io/redirect/integration/?domain=xiaomi_home&#34;&gt;Settings &amp;gt; Devices &amp;amp; services &amp;gt; Configured &amp;gt; Xiaomi Home&lt;/a&gt; &amp;gt; CONFIGURE &amp;gt; Update Entity Conversion Rule&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/LICENSE.md&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contribution Guidelines: &lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/CONTRIBUTING.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/doc/CONTRIBUTING_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XiaoMi/ha_xiaomi_home/main/CHANGELOG.md&#34;&gt;ChangeLog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Development Documents: &lt;a href=&#34;https://developers.home-assistant.io/docs/creating_component_index&#34;&gt;https://developers.home-assistant.io/docs/creating_component_index&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;miot: core code.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_client: Adding a login user in the integration needs adding a miot_client instance.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_cloud: Contains functions related to the cloud service, including OAuth login process, HTTP interface functions (to get the user information, to send the device control command, etc.)&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_device: Device entity, including device information, processing logic of property, event and action.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_mips: Message bus for subscribing and publishing method.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_spec: Parse MIoT-Spec-V2.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_lan: Device LAN control, including device discovery, device control, etc.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_mdns: Central hub gateway service LAN discovery.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_network: Obtain network status and network information.&lt;/li&gt; &#xA; &lt;li&gt;miot/miot_storage: File storage for the integration.&lt;/li&gt; &#xA; &lt;li&gt;miot/test: Test scripts.&lt;/li&gt; &#xA; &lt;li&gt;config_flow: Config flow.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>