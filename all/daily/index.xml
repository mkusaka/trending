<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-31T01:28:17Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>libretro/RetroArch</title>
    <updated>2025-12-31T01:28:17Z</updated>
    <id>tag:github.com,2025-12-31:/libretro/RetroArch</id>
    <link href="https://github.com/libretro/RetroArch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform, sophisticated frontend for the libretro API. Licensed GPLv3.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/libretro/RetroArch&#34;&gt;&lt;img src=&#34;https://travis-ci.org/libretro/RetroArch.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/retroarch&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/8936/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/retroarch&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/retroarch/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RetroArch&lt;/h1&gt; &#xA;&lt;p&gt;RetroArch is the reference frontend for the libretro API. Popular examples of implementations for this API includes video game system emulators and game engines as well as more generalized 3D programs. These programs are instantiated as dynamic libraries. We refer to these as &#34;libretro cores&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libretro/RetroArch/master/docs/XMB-main-menu.jpg&#34; alt=&#34;XMB menu driver&#34; title=&#34;XMB menu driver&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libretro/RetroArch/master/docs/rgui-main-menu.jpg&#34; alt=&#34;rgui menu driver&#34; title=&#34;rgui menu driver&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libretro/RetroArch/master/docs/glui-main-menu.jpg&#34; alt=&#34;glui menu driver&#34; title=&#34;glui menu driver&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libretro/RetroArch/master/docs/ozone-main-menu.jpg&#34; alt=&#34;ozone menu driver&#34; title=&#34;ozone menu driver&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;libretro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.libretro.com&#34;&gt;libretro&lt;/a&gt; is an API that exposes generic audio/video/input callbacks. A frontend for libretro (such as RetroArch) handles video output, audio output, input and application lifecycle. A libretro core written in portable C or C++ can run seamlessly on many platforms with very little to no porting effort.&lt;/p&gt; &#xA;&lt;p&gt;While RetroArch is the reference frontend for libretro, several other projects have used the libretro interface to include support for emulators and/or game engines. libretro is completely open and free for anyone to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libretro/RetroArch/raw/master/libretro-common/include/libretro.h&#34;&gt;libretro API header&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Binaries&lt;/h2&gt; &#xA;&lt;p&gt;Latest binaries are currently hosted on the &lt;a href=&#34;http://buildbot.libretro.com/&#34;&gt;buildbot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;To reach developers, either make an issue here on GitHub, make a thread on the &lt;a href=&#34;https://www.libretro.com/forums/&#34;&gt;forum&lt;/a&gt;, chat on &lt;a href=&#34;https://discord.gg/C4amCeV&#34;&gt;discord&lt;/a&gt;, or visit our IRC channel: #retroarch @ irc.freenode.org. You could create a post in &lt;a href=&#34;https://www.reddit.com/r/RetroArch/&#34;&gt;Reddit&lt;/a&gt; with &lt;em&gt;Technical Support&lt;/em&gt; flair.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://docs.libretro.com/&#34;&gt;Documentation Center&lt;/a&gt;. On Unix, man-pages are provided. More developer-centric stuff is found &lt;a href=&#34;https://docs.libretro.com/development/libretro-overview/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cg/HLSL shaders: &lt;a href=&#34;https://github.com/libretro/common-shaders&#34;&gt;common-shaders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;slang shaders: &lt;a href=&#34;https://github.com/libretro/slang-shaders&#34;&gt;slang-shaders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GLSL shaders: &lt;a href=&#34;https://github.com/libretro/glsl-shaders&#34;&gt;glsl-shaders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Helper scripts to build libretro implementations: &lt;a href=&#34;https://github.com/libretro/libretro-super&#34;&gt;libretro-super&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub mirrors of projects, useful for generating diff files: &lt;a href=&#34;https://github.com/libretro-mirrors/&#34;&gt;libretro-mirrors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;RetroArch attempts to be small and lean while still having all the useful core features expected from an emulator. It is designed to be very portable and features a gamepad-centric and touchscreen UI. It also has a full-featured command-line interface.&lt;/p&gt; &#xA;&lt;p&gt;In some areas, RetroArch goes beyond and emphasizes on not-so-common technical features such as multi-pass shader support, real-time rewind (Braid-style), video recording (using FFmpeg), run-ahead input latency removal, etc.&lt;/p&gt; &#xA;&lt;p&gt;RetroArch also emphasizes being easy to integrate into various launcher frontends.&lt;/p&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;p&gt;RetroArch has been ported to the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android (2.x to most recent version)&lt;/li&gt; &#xA; &lt;li&gt;Apple iOS&lt;/li&gt; &#xA; &lt;li&gt;Apple macOS (PPC, x86-32 and x86-64)&lt;/li&gt; &#xA; &lt;li&gt;Apple tvOS&lt;/li&gt; &#xA; &lt;li&gt;Blackberry&lt;/li&gt; &#xA; &lt;li&gt;DOS&lt;/li&gt; &#xA; &lt;li&gt;Emscripten (WebAssembly and JavaScript)&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD&lt;/li&gt; &#xA; &lt;li&gt;Haiku&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;Original Microsoft Xbox&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Xbox 360 (Libxenon/XeXDK)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Xbox One&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Xbox Series S/X&lt;/li&gt; &#xA; &lt;li&gt;Miyoo&lt;/li&gt; &#xA; &lt;li&gt;NetBSD&lt;/li&gt; &#xA; &lt;li&gt;Nintendo NES/SNES Classic Edition&lt;/li&gt; &#xA; &lt;li&gt;Nintendo GameCube&lt;/li&gt; &#xA; &lt;li&gt;Nintendo Wii&lt;/li&gt; &#xA; &lt;li&gt;Nintendo Switch&lt;/li&gt; &#xA; &lt;li&gt;Nintendo Wii U&lt;/li&gt; &#xA; &lt;li&gt;Nintendo 3DS/2DS&lt;/li&gt; &#xA; &lt;li&gt;OpenBSD&lt;/li&gt; &#xA; &lt;li&gt;OpenDingux&lt;/li&gt; &#xA; &lt;li&gt;PlayStation2&lt;/li&gt; &#xA; &lt;li&gt;PlayStation3&lt;/li&gt; &#xA; &lt;li&gt;PlayStation4&lt;/li&gt; &#xA; &lt;li&gt;PlayStation Portable&lt;/li&gt; &#xA; &lt;li&gt;PlayStation Vita&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi&lt;/li&gt; &#xA; &lt;li&gt;ReactOS&lt;/li&gt; &#xA; &lt;li&gt;Redox OS&lt;/li&gt; &#xA; &lt;li&gt;RetroFW&lt;/li&gt; &#xA; &lt;li&gt;RS90&lt;/li&gt; &#xA; &lt;li&gt;SerenityOS&lt;/li&gt; &#xA; &lt;li&gt;Solaris&lt;/li&gt; &#xA; &lt;li&gt;Windows NT 3.5&lt;/li&gt; &#xA; &lt;li&gt;Windows 95&lt;/li&gt; &#xA; &lt;li&gt;Windows 98&lt;/li&gt; &#xA; &lt;li&gt;Windows 2000&lt;/li&gt; &#xA; &lt;li&gt;Windows XP&lt;/li&gt; &#xA; &lt;li&gt;Windows Millennium&lt;/li&gt; &#xA; &lt;li&gt;Windows Vista&lt;/li&gt; &#xA; &lt;li&gt;Windows 7&lt;/li&gt; &#xA; &lt;li&gt;Windows 8&lt;/li&gt; &#xA; &lt;li&gt;Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Windows 11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies (PC)&lt;/h2&gt; &#xA;&lt;p&gt;There are no true hard dependencies per se.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, RetroArch can run with only Win32 as dependency.&lt;/p&gt; &#xA;&lt;p&gt;On Linux, there are no true dependencies. For optimal usage, the following dependencies come as recommended:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GL headers / Vulkan headers&lt;/li&gt; &#xA; &lt;li&gt;X11 headers and libs, or EGL/KMS/GBM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OSX port of RetroArch requires latest versions of Xcode to build.&lt;/p&gt; &#xA;&lt;p&gt;RetroArch can utilize these libraries if enabled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nvidia-cg-toolkit&lt;/li&gt; &#xA; &lt;li&gt;libfreetype2 (TTF font rendering on screen)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;RetroArch needs at least one of these audio driver libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ALSA&lt;/li&gt; &#xA; &lt;li&gt;OSS&lt;/li&gt; &#xA; &lt;li&gt;RoarAudio&lt;/li&gt; &#xA; &lt;li&gt;RSound&lt;/li&gt; &#xA; &lt;li&gt;OpenAL&lt;/li&gt; &#xA; &lt;li&gt;JACK&lt;/li&gt; &#xA; &lt;li&gt;SDL&lt;/li&gt; &#xA; &lt;li&gt;PulseAudio&lt;/li&gt; &#xA; &lt;li&gt;PipeWire&lt;/li&gt; &#xA; &lt;li&gt;XAudio2 (Win32, Xbox 360)&lt;/li&gt; &#xA; &lt;li&gt;DirectSound (Win32, Xbox 1)&lt;/li&gt; &#xA; &lt;li&gt;CoreAudio (OSX, iOS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run properly, RetroArch requires a libretro implementation present; however, as it&#39;s typically loaded dynamically, it&#39;s not required at build time.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies (Console ports, mobile)&lt;/h2&gt; &#xA;&lt;p&gt;Console ports have their own dependencies, but generally do not require anything other than what the respective SDKs provide.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;OpenGL1&lt;/h3&gt; &#xA;&lt;p&gt;Your videocard needs to at least support the OpenGL 1.1 spec.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Shaders&lt;/strong&gt;&lt;/em&gt;: N/A&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Menu driver support&lt;/strong&gt;: MaterialUI, XMB, Ozone and RGUI should all work correctly. XMB won&#39;t have shader pipeline effects because of the aforementioned lack of shader support.&lt;/p&gt; &#xA;&lt;h3&gt;OpenGL2&lt;/h3&gt; &#xA;&lt;p&gt;Your videocard needs to at least support the OpenGL 2.1 spec.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Shaders:&lt;/strong&gt;&lt;/em&gt; You can choose between either NVIDIA Cg shaders (deprecated, requires separate runtime to be installed on your system), or GLSL shaders.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Menu driver support:&lt;/strong&gt;&lt;/em&gt; MaterialUI, XMB, Ozone and RGUI should all work correctly.&lt;/p&gt; &#xA;&lt;h3&gt;OpenGL3&lt;/h3&gt; &#xA;&lt;p&gt;Your videocard needs to at least support the OpenGL 3.2 core feature spec.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Shaders:&lt;/strong&gt;&lt;/em&gt; You will be able to use modern Slang shaders with this driver.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Menu driver support:&lt;/strong&gt;&lt;/em&gt; MaterialUI, XMB, Ozone and RGUI should all work correctly.&lt;/p&gt; &#xA;&lt;h3&gt;Direct3D 11&lt;/h3&gt; &#xA;&lt;p&gt;Your videocard needs to at least support the Direct3D11 11.0 spec. The card also needs to support at least the Shader Model 4.0.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Shaders:&lt;/strong&gt;&lt;/em&gt; You will be able to use modern Slang shaders with this driver.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Menu driver support:&lt;/strong&gt;&lt;/em&gt; MaterialUI, XMB, Ozone and RGUI should all work correctly.&lt;/p&gt; &#xA;&lt;h3&gt;Vulkan&lt;/h3&gt; &#xA;&lt;p&gt;Your videocard needs to at least support the Vulkan 1.0 spec.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Shaders:&lt;/strong&gt;&lt;/em&gt; You will be able to use modern Slang shaders with this driver.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Menu driver support:&lt;/strong&gt;&lt;/em&gt; MaterialUI, XMB, Ozone and RGUI should all work correctly.&lt;/p&gt; &#xA;&lt;h2&gt;Configuring&lt;/h2&gt; &#xA;&lt;p&gt;The default configuration is defined in &lt;code&gt;config.def.h&lt;/code&gt;. It is not recommended to change this unless you know what you&#39;re doing. These can later be tweaked by using a config file. A sample configuration file is installed to &lt;code&gt;/etc/retroarch.cfg&lt;/code&gt;. This is the system-wide config file.&lt;/p&gt; &#xA;&lt;p&gt;RetroArch will on startup create a config file in &lt;code&gt;$XDG\_CONFIG\_HOME/retroarch/retroarch.cfg&lt;/code&gt; if it does not exist. Users only need to configure a certain option if the desired value deviates from the value defined in config.def.h.&lt;/p&gt; &#xA;&lt;p&gt;To configure joypads, use the built-in menu or manually configure them in &lt;code&gt;retroarch.cfg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling and installing&lt;/h2&gt; &#xA;&lt;p&gt;Instructions for compiling and installing RetroArch can be found in the &lt;a href=&#34;https://docs.libretro.com/&#34;&gt;Libretro/RetroArch Documentation Center&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;CRT 15Khz Resolution Switching&lt;/h2&gt; &#xA;&lt;p&gt;CRT SwitchRes will turn on, on the fly. However, you will need to restart RetroArch to disable it. With CRT SwitchRes enable RetroArch will start in 2560 x 480 @ 60.&lt;/p&gt; &#xA;&lt;p&gt;If you are running Windows, before enabling the CRT SwitchRes options please make sure you have installed CRTEmudriver and installed some modelines. The minimum modelines for all games to switch correctly are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2560 x 192 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 200 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 240 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 224 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 237 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 256 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 448 @ 60.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 480 @ 60.000000&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install these modelines replacing 2560 with your desired super resolution. The above resolutions are NTSC only so if you would be playing any PAL content please add PAL modelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2560 x 192 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 200 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 240 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 224 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 288 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 237 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 448 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 480 @ 50.000000&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some games will require higher PAL resolutions which should also be installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2560 x 512 @ 50.000000&lt;/li&gt; &#xA; &lt;li&gt;2560 x 576 @ 50.000000&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ideally install all these modelines and everything will work great.&lt;/p&gt; &#xA;&lt;h2&gt;Super Resolutions&lt;/h2&gt; &#xA;&lt;p&gt;The default super resolution is 2560. It is displayed just under the CRT switch option, which can be found in video settings. This can be changed within the retroarch.cfg. The only compatible resolutions are 1920, 2560 and 3840. Any other resolutions will be ignored and native switching will be activated.&lt;/p&gt; &#xA;&lt;h2&gt;Native Resolutions&lt;/h2&gt; &#xA;&lt;p&gt;If native resolutions are activated you will need a whole new set of modelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 240 @ 50.006977 SNESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 448 @ 50.006977 SNESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 224 @ 50.006977 SNESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 240 @ 50.006977 SNESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 448 @ 50.006977 SNESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 240 @ 60.098812 SNESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 448 @ 60.098812 SNESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 240 @ 60.098812 SNESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 224 @ 60.098812 SNESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;512 x 448 @ 60.098812 SNESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 192 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 224 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 224 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 240 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 448 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 480 @ 59.922745 MDntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 192 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 224 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 224 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 240 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 288 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 448 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 480 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 576 @ 49.701458 MDpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 288 @ 49.701458 MSYSpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 240 @ 60.098812 NESntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 240 @ 50.006977 NESpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 237 @ 60.130001 N64ntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 240 @ 60.130001 N64ntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 480 @ 60.130001 N64ntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 288 @ 50.000000 N64pal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 480 @ 50.000000 N64pal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 576 @ 50.000000 N64pal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 252 @ 49.759998 PSXpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 252 @ 49.759998 PSXpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;384 x 252 @ 49.759998 PSXpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 252 @ 49.759998 PSXpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;640 x 540 @ 49.759998 PSXpal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;384 x 240 @ 59.941002 PSXntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;256 x 480 @ 59.941002 PSXntsc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;352 x 240 @ 59.820000 Saturn/SGFX_NTSCp&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;704 x 240 @ 59.820000 SaturnNTSCp&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;352 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;704 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;352 x 288 @ 49.701458 SaturnPALp&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;704 x 288 @ 49.701458 SaturnPALp&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;352 x 576 @ 49.701458 SaturnPALi&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;704 x 576 @ 49.701458 SaturnPALi&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;240 x 160 @ 59.730000 GBA&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;320 x 200 @ 60.000000 Doom&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;// Arcade&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;400 x 254 @ 54.706841 MK&lt;/li&gt; &#xA; &lt;li&gt;384 x 224 @ 59.637405 CPS1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These modelines are more accurate giving exact hz. However, some games may have unwanted results. This is due to mid-scanline resolution changes on the original hardware. For the best results super resolutions are the way to go.&lt;/p&gt; &#xA;&lt;h2&gt;CRT resolution switching &amp;amp; MAME&lt;/h2&gt; &#xA;&lt;p&gt;Some arcade resolutions can be very different from consumer CRTs. There is resolution detection to ensure MAME games will be displayed in the closest available resolution but drawn at their native resolution within this resolution. Meaning that the MAME game will look just like the original hardware.&lt;/p&gt; &#xA;&lt;p&gt;MAME ROMs that run in a vertical aspect like DoDonPachi need to be rotated within MAME before resolution switching and aspect correction will work. Do this before enabling CRT SwitchRes so that RetroArch will run in your desktop resolution. Once you have rotated any games that may need it turn CRT SwitchRes on.&lt;/p&gt; &#xA;&lt;h2&gt;Socials&lt;/h2&gt; &#xA;&lt;p&gt;The links below belong to our official channels. Links other than this may have been created by fans, independent members or followers. We seriously recommend using our original resources.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.retroarch.com/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libretro.com/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/libretro&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/libretro&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/RetroArch/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/Libretro&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://posts.google.com/share/55Nhs2jG&#34;&gt;Google Post&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/1118310/RetroArch/&#34;&gt;Steam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC5q007PYyQPgin0HHbzF0zQ&#34;&gt;YouTube Topic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/libretro&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bountysource.com/teams/libretro/issues&#34;&gt;BOUNTYSOURCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/VZ2b7wghxR&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://teespring.com/stores/retroarch&#34;&gt;Teespring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.libretro.com/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.libretro.com/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pathwaycom/llm-app</title>
    <updated>2025-12-31T01:28:17Z</updated>
    <id>tag:github.com,2025-12-31:/pathwaycom/llm-app</id>
    <link href="https://github.com/pathwaycom/llm-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ready-to-run cloud templates for RAG, AI pipelines, and enterprise search with live data. 🐳Docker-friendly.⚡Always in sync with Sharepoint, Google Drive, S3, Kafka, PostgreSQL, real-time data APIs, and more.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Pathway AI Pipelines&lt;/h1&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&amp;amp;logo=linux&amp;amp;logoColor=black&#34; alt=&#34;Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&amp;amp;logo=apple&amp;amp;logoColor=white&#34; alt=&#34;macOS&#34;&gt; &lt;a href=&#34;https://discord.gg/pathway&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;chat on Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/intent/follow?screen_name=pathway_com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white&#34; alt=&#34;follow on X&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Pathway&#39;s &lt;strong&gt;AI Pipelines&lt;/strong&gt; allow you to quickly put in production AI applications that offer &lt;strong&gt;high-accuracy RAG and AI enterprise search at scale&lt;/strong&gt; using the most &lt;strong&gt;up-to-date knowledge&lt;/strong&gt; available in your data sources. It provides you ready-to-deploy &lt;strong&gt;LLM (Large Language Model) App Templates&lt;/strong&gt;. You can test them on your own machine and deploy on-cloud (GCP, AWS, Azure, Render,...) or on-premises.&lt;/p&gt; &#xA;&lt;p&gt;The apps connect and sync (all new data additions, deletions, updates) with data sources on your &lt;strong&gt;file system, Google Drive, Sharepoint, S3, Kafka, PostgreSQL, real-time data APIs&lt;/strong&gt;. They come with no infrastructure dependencies that would need a separate setup. They include &lt;strong&gt;built-in data indexing&lt;/strong&gt; enabling vector search, hybrid search, and full-text search - all done in-memory, with cache.&lt;/p&gt; &#xA;&lt;h2&gt;Application Templates&lt;/h2&gt; &#xA;&lt;p&gt;The application templates provided in this repo scale up to &lt;strong&gt;millions of pages of documents&lt;/strong&gt;. Some of them are optimized for simplicity, some are optimized for amazing accuracy. Pick the one that suits you best. You can use it out of the box, or change some steps of the pipeline - for example, if you would like to add a new data source, or change a Vector Index into a Hybrid Index, it&#39;s just a one-line change.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Application (template)&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/demo-question-answering/&#34;&gt;&lt;code&gt;Question-Answering RAG App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Basic end-to-end RAG app. A question-answering pipeline that uses the GPT model of choice to provide answers to queries to your documents (PDF, DOCX,...) on a live connected data source (files, Google Drive, Sharepoint,...). You can also try out a &lt;a href=&#34;https://pathway.com/solutions/rag-pipelines#try-it-out&#34;&gt;demo REST endpoint&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/demo-document-indexing/&#34;&gt;&lt;code&gt;Live Document Indexing (Vector Store / Retriever)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A real-time document indexing pipeline for RAG that acts as a vector store service. It performs live indexing on your documents (PDF, DOCX,...) from a connected data source (files, Google Drive, Sharepoint,...). It can be used with any frontend, or integrated as a retriever backend for a &lt;a href=&#34;https://pathway.com/developers/templates/langchain-integration&#34;&gt;Langchain&lt;/a&gt; or &lt;a href=&#34;https://pathway.com/developers/templates/llamaindex-pathway&#34;&gt;Llamaindex&lt;/a&gt; application. You can also try out a &lt;a href=&#34;https://pathway.com/solutions/ai-contract-management#try-it-out&#34;&gt;demo REST endpoint&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/gpt_4o_multimodal_rag/&#34;&gt;&lt;code&gt;Multimodal RAG pipeline with GPT4o&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multimodal RAG using GPT-4o in the parsing stage to index PDFs and other documents from a connected data source files, Google Drive, Sharepoint,...). It is perfect for extracting information from unstructured financial documents in your folders (including charts and tables), updating results as documents change or new ones arrive.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/unstructured_to_sql_on_the_fly/&#34;&gt;&lt;code&gt;Unstructured-to-SQL pipeline + SQL question-answering&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A RAG example which connects to unstructured financial data sources (financial report PDFs), structures the data into SQL, and loads it into a PostgreSQL table. It also answers natural language user queries to these financial documents by translating them into SQL using an LLM and executing the query on the PostgreSQL table.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/adaptive-rag/&#34;&gt;&lt;code&gt;Adaptive RAG App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A RAG application using Adaptive RAG, a technique developed by Pathway to reduce token cost in RAG up to 4x while maintaining accuracy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/private-rag/&#34;&gt;&lt;code&gt;Private RAG App with Mistral and Ollama&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A fully private (local) version of the &lt;code&gt;demo-question-answering&lt;/code&gt; RAG pipeline using Pathway, Mistral, and Ollama.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/slides_ai_search/&#34;&gt;&lt;code&gt;Slides AI Search App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An indexing pipeline for retrieving slides. It performs multi-modal of PowerPoint and PDF and maintains live index of your slides.&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How do these AI Pipelines work?&lt;/h2&gt; &#xA;&lt;p&gt;The apps can be run as &lt;strong&gt;Docker containers&lt;/strong&gt;, and expose an &lt;strong&gt;HTTP API&lt;/strong&gt; to connect the frontend. To allow quick testing and demos, some app templates also include an optional Streamlit UI which connects to this API.&lt;/p&gt; &#xA;&lt;p&gt;The apps rely on the &lt;a href=&#34;https://github.com/pathwaycom/pathway&#34;&gt;Pathway Live Data framework&lt;/a&gt; for data source synchronization and for serving API requests (Pathway is a standalone Python library with a Rust engine built into it). They bring you a &lt;strong&gt;simple and unified application logic&lt;/strong&gt; for back-end, embedding, retrieval, LLM tech stack. There is no need to integrate and maintain separate modules for your Gen AI app: &lt;del&gt;Vector Database (e.g. Pinecone/Weaviate/Qdrant) + Cache (e.g. Redis) + API Framework (e.g. Fast API)&lt;/del&gt;. Pathway&#39;s default choice of &lt;strong&gt;built-in vector index&lt;/strong&gt; is based on the lightning-fast &lt;a href=&#34;https://github.com/unum-cloud/usearch&#34;&gt;usearch&lt;/a&gt; library, and &lt;strong&gt;hybrid full-text indexes&lt;/strong&gt; make use of &lt;a href=&#34;https://github.com/quickwit-oss/tantivy&#34;&gt;Tantivy&lt;/a&gt; library. Everything works out of the box.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Each of the &lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/&#34;&gt;App templates&lt;/a&gt; in this repo contains a README.md with instructions on how to run it.&lt;/p&gt; &#xA;&lt;p&gt;You can also find &lt;a href=&#34;https://pathway.com/developers/templates/&#34;&gt;more ready-to-run code templates&lt;/a&gt; on the Pathway website.&lt;/p&gt; &#xA;&lt;h2&gt;Some visual highlights&lt;/h2&gt; &#xA;&lt;p&gt;Effortlessly extract and organize table and chart data from PDFs, docs, and more with multimodal RAG - in real-time:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pathwaycom/llm-app/raw/main/examples/pipelines/gpt_4o_multimodal_rag/gpt4o_with_pathway_comparison.gif&#34; alt=&#34;Effortlessly extract and organize table and chart data from PDFs, docs, and more with multimodal RAG - in real-time&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Check out &lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/gpt_4o_multimodal_rag/&#34;&gt;&lt;code&gt;Multimodal RAG pipeline with GPT4o&lt;/code&gt;&lt;/a&gt; to see the whole pipeline in the works. You may also check out the &lt;a href=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/unstructured_to_sql_on_the_fly/&#34;&gt;&lt;code&gt;Unstructured-to-SQL pipeline&lt;/code&gt;&lt;/a&gt; for a minimal example that works with non-multimodal models as well.)&lt;/p&gt; &#xA;&lt;p&gt;Automated real-time knowledge mining and alerting:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/drive_alert/drive_alert_demo.gif&#34; alt=&#34;Automated real-time knowledge mining and alerting&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Check out the &lt;a href=&#34;https://github.com/pathwaycom/llm-app/tree/main/examples/pipelines/drive_alert&#34;&gt;&lt;code&gt;Alerting when answers change on Google Drive&lt;/code&gt;&lt;/a&gt; app example.)&lt;/p&gt; &#xA;&lt;h3&gt;Do-it-Yourself Videos&lt;/h3&gt; &#xA;&lt;p&gt;▶️ &lt;a href=&#34;https://www.youtube.com/watch?v=kcrJSk00duw&#34;&gt;An introduction to building LLM apps with Pathway&lt;/a&gt; - by &lt;a href=&#34;https://scholar.google.com/citations?user=Yc94070AAAAJ&#34;&gt;Jan Chorowski&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;▶️ &lt;a href=&#34;https://www.youtube.com/watch?v=k1XGo7ts4tI&#34;&gt;Let&#39;s build a real-world LLM app in 11 minutes&lt;/a&gt; - by &lt;a href=&#34;https://substack.com/@paulabartabajo&#34;&gt;Pau Labarta Bajo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;To provide feedback or report a bug, please &lt;a href=&#34;https://github.com/pathwaycom/pathway/issues&#34;&gt;raise an issue on our issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Anyone who wishes to contribute to this project, whether documentation, features, bug fixes, code cleanup, testing, or code reviews, is very much encouraged to do so. If this is your first contribution to a GitHub project, here is a &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/contributing-to-projects&#34;&gt;Get Started Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to make a contribution that needs some more work, just raise your hand on the &lt;a href=&#34;https://discord.com/invite/pathway&#34;&gt;Pathway Discord server&lt;/a&gt; (#get-help) and let us know what you are planning!&lt;/p&gt; &#xA;&lt;h2&gt;Supported and maintained by&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pathwaycom/&#34;&gt;&lt;img src=&#34;https://pathway.com/logo-light.svg?sanitize=true&#34; alt=&#34;Pathway&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pathway.com/solutions/llm-app&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/See%20Pathway&#39;s%20offering%20for%20AI%20applications-0000FF&#34; alt=&#34;See Pathway&#39;s offering for AI applications&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mikage-emu/mikage-dev</title>
    <updated>2025-12-31T01:28:17Z</updated>
    <id>tag:github.com,2025-12-31:/mikage-emu/mikage-dev</id>
    <link href="https://github.com/mikage-emu/mikage-dev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mikage Developer Edition&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mikage Developer Edition&lt;/h1&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;CMake and Conan 2 are required to build Mikage.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;conan install .. -of . --build=missing&lt;/code&gt; (add &lt;code&gt;-s build_type=Debug&lt;/code&gt; for Debug builds)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake -DCMAKE_BUILD_TYPE=Release .. -G Ninja -DCMAKE_PREFIX_PATH=`realpath .` &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ninja&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some dependencies may be provided by system packages instead of building them via Conan. To enable this behavior, add the following to your Conan profile (&lt;code&gt;~/.conan2/profiles/default&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[platform_requires]&#xA;boost/1.80.0&#xA;cryptopp/8.5.0&#xA;sdl/2.0.20&#xA;range-v3/0.11.0&#xA;catch2/2.13.7&#xA;libunwind/1.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For the first launch, three things must be set up:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;a complete &lt;code&gt;aes_keys.txt&lt;/code&gt; must be placed in the &lt;code&gt;build&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;a virtual NAND must be bootstrapped from a game update partition&lt;/li&gt; &#xA; &lt;li&gt;the 3DS initial system setup must be run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Given any game with an update partition, steps 2 and 3 can be done by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd build &amp;amp;&amp;amp; source conanrun.sh &amp;amp;&amp;amp; ./source/mikage game.cci --bootstrap_nand --launch_menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Currently, this probably requires a game of the EU region. Patching &lt;code&gt;SecureInfo_A&lt;/code&gt; by hand after bootstrapping may work, too.&lt;/p&gt; &#xA;&lt;p&gt;Once set up, it&#39;s sufficient to run &lt;code&gt;./source/mikage game.cci&lt;/code&gt; or &lt;code&gt;./source/mikage --launch_menu&lt;/code&gt;. You&#39;ll need to &lt;code&gt;source conanrun.sh&lt;/code&gt; to set up library directories.&lt;/p&gt; &#xA;&lt;h2&gt;Key bindings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arrow →: A&lt;/li&gt; &#xA; &lt;li&gt;Arrow ↓: B&lt;/li&gt; &#xA; &lt;li&gt;Arrow ↑: X&lt;/li&gt; &#xA; &lt;li&gt;Arrow ←: Y&lt;/li&gt; &#xA; &lt;li&gt;WASD keys: Circle pad&lt;/li&gt; &#xA; &lt;li&gt;Backspace: HOME (press twice to power down)&lt;/li&gt; &#xA; &lt;li&gt;Q key: L&lt;/li&gt; &#xA; &lt;li&gt;E key: L&lt;/li&gt; &#xA; &lt;li&gt;IJKL keys: D-pad&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;Individual processes may be debugged through an embedded GDB remote server over network port 12345. To enable it, pass &lt;code&gt;--debug&lt;/code&gt; and &lt;code&gt;--attach_to_process &amp;lt;pid&amp;gt;&lt;/code&gt; when launching Mikage. After startup, connect via gdb using &lt;code&gt;tar ext :12345&lt;/code&gt;, wait until Mikage prints a message about waiting for the debugger attach, then type &lt;code&gt;attach &amp;lt;PID&amp;gt;&lt;/code&gt; in the gdb shell. Note that a gdb build for ARM targets may be necessary to do this. Debuggers other than gdb may work but are untested.&lt;/p&gt; &#xA;&lt;p&gt;Processes running in the emulated kernel can be introspected through a simple debug console available via telnet on port 12347.&lt;/p&gt;</summary>
  </entry>
</feed>