<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-17T01:26:44Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CorentinTh/it-tools</title>
    <updated>2023-11-17T01:26:44Z</updated>
    <id>tag:github.com,2023-11-17:/CorentinTh/it-tools</id>
    <link href="https://github.com/CorentinTh/it-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of handy online tools for developers, with great UX.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CorentinTh/it-tools/main/.github/logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Useful tools for developer and people working in IT. &lt;a href=&#34;https://it-tools.tech&#34;&gt;Have a look !&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Functionalities and roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;https://github.com/CorentinTh/it-tools/issues&#34;&gt;issues&lt;/a&gt; to see if some feature listed to be implemented.&lt;/p&gt; &#xA;&lt;p&gt;You have an idea of a tool? Submit a &lt;a href=&#34;https://github.com/CorentinTh/it-tools/issues/new/choose&#34;&gt;feature request&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Self host&lt;/h2&gt; &#xA;&lt;p&gt;Self host solutions for your homelab&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;From docker hub:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name it-tools --restart unless-stopped -p 8080:80 corentinth/it-tools:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;From github packages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name it-tools --restart unless-stopped -p 8080:80 ghcr.io/corentinth/it-tools:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other solutions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudron.io/store/tech.ittools.cloudron.html&#34;&gt;Cloudron&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.runtipi.io/docs/apps-available&#34;&gt;Tipi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unraid.net/community/apps?q=it-tools&#34;&gt;Unraid&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;h3&gt;Recommended IDE Setup&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt; with the following extensions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Vue.volar&#34;&gt;Volar&lt;/a&gt; (and disable Vetur)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin&#34;&gt;TypeScript Vue Plugin (Volar)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&#34;&gt;ESLint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=lokalise.i18n-ally&#34;&gt;i18n Ally&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;with the following settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;editor.formatOnSave&#34;: false,&#xA;  &#34;editor.codeActionsOnSave&#34;: {&#xA;    &#34;source.fixAll.eslint&#34;: true&#xA;  },&#xA;  &#34;i18n-ally.localesPaths&#34;: [&#34;locales&#34;, &#34;src/tools/*/locales&#34;],&#xA;  &#34;i18n-ally.keystyle&#34;: &#34;nested&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Type Support for &lt;code&gt;.vue&lt;/code&gt; Imports in TS&lt;/h3&gt; &#xA;&lt;p&gt;TypeScript cannot handle type information for &lt;code&gt;.vue&lt;/code&gt; imports by default, so we replace the &lt;code&gt;tsc&lt;/code&gt; CLI with &lt;code&gt;vue-tsc&lt;/code&gt; for type checking. In editors, we need &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin&#34;&gt;TypeScript Vue Plugin (Volar)&lt;/a&gt; to make the TypeScript language service aware of &lt;code&gt;.vue&lt;/code&gt; types.&lt;/p&gt; &#xA;&lt;p&gt;If the standalone TypeScript plugin doesn&#39;t feel fast enough to you, Volar has also implemented a &lt;a href=&#34;https://github.com/johnsoncodehk/volar/discussions/471#discussioncomment-1361669&#34;&gt;Take Over Mode&lt;/a&gt; that is more performant. You can enable it by the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Disable the built-in TypeScript Extension &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;Extensions: Show Built-in Extensions&lt;/code&gt; from VSCode&#39;s command palette&lt;/li&gt; &#xA;   &lt;li&gt;Find &lt;code&gt;TypeScript and JavaScript Language Features&lt;/code&gt;, right click and select &lt;code&gt;Disable (Workspace)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Reload the VSCode window by running &lt;code&gt;Developer: Reload Window&lt;/code&gt; from the command palette.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Project Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compile and Hot-Reload for Development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Type-Check, Compile and Minify for Production&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Unit Tests with &lt;a href=&#34;https://vitest.dev/&#34;&gt;Vitest&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lint with &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a new tool&lt;/h3&gt; &#xA;&lt;p&gt;To create a new tool, there is a script that generate the boilerplate of the new tool, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm run script:create-new-tool my-tool-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will create a directory in &lt;code&gt;src/tools&lt;/code&gt; with the correct files, and a the import in &lt;code&gt;src/tools/index.ts&lt;/code&gt;. You will just need to add the imported tool in the proper category and develop the tool.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Big thanks to all the people who have already contributed!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/corentinth/it-tools/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=corentinth/it-tools&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Coded with ❤️ by &lt;a href=&#34;https://raw.githubusercontent.com/corentin-thomasset.fr&#34;&gt;Corentin Thomasset&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project is continuously deployed using &lt;a href=&#34;https://vercel.com&#34;&gt;vercel.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contributor graph is generated using &lt;a href=&#34;https://contrib.rocks/preview?repo=corentinth/it-tools&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/it-tools?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-it-tools&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=345793&amp;amp;theme=light&#34; alt=&#34;IT Tools - Collection of handy online tools for devs, with great UX | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.producthunt.com/posts/it-tools?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-it-tools&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=345793&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;IT Tools - Collection of handy online tools for devs, with great UX | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is under the &lt;a href=&#34;https://raw.githubusercontent.com/CorentinTh/it-tools/main/LICENSE&#34;&gt;GNU GPLv3&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/eShop</title>
    <updated>2023-11-17T01:26:44Z</updated>
    <id>tag:github.com,2023-11-17:/dotnet/eShop</id>
    <link href="https://github.com/dotnet/eShop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reference .NET application implementing an eCommerce site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eShop Reference Application - &#34;Northern Mountains&#34;&lt;/h1&gt; &#xA;&lt;p&gt;A reference .NET application implementing an eCommerce web site using a services-based architecture.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_architecture.png&#34; alt=&#34;eShop Reference Application architecture diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_homepage.png&#34; alt=&#34;eShop homepage screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the eShop repository: &lt;a href=&#34;https://github.com/dotnet/eshop&#34;&gt;https://github.com/dotnet/eshop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Windows only) Install Visual Studio. Visual Studio contains tooling support for .NET Aspire that you will want to have. &lt;a href=&#34;https://visualstudio.microsoft.com/vs/preview/&#34;&gt;Visual Studio 2022 version 17.9 Preview&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;During installation, ensure that the following are selected: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;ASP.NET and web development&lt;/code&gt; workload.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.NET Aspire SDK&lt;/code&gt; component in &lt;code&gt;Individual components&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://github.com/dotnet/installer#installers-and-binaries&#34;&gt;.NET 8 SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;On Mac/Linux (or if not using Visual Studio), install the Aspire workload with the following commands:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet workload update&#xA;dotnet workload install aspire&#xA;dotnet restore eShop.Web.slnf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &amp;amp; start Docker Desktop: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the solution&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Remember to ensure that Docker is started&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Windows only) Run the application from Visual Studio:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;eShop.Web.slnf&lt;/code&gt; file in Visual Studio&lt;/li&gt; &#xA; &lt;li&gt;Ensure that &lt;code&gt;eShop.AppHost.csproj&lt;/code&gt; is your startup project&lt;/li&gt; &#xA; &lt;li&gt;Hit Ctrl-F5 to launch Aspire&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Or run the application from your terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet run --project src/eShop.AppHost/eShop.AppHost.csproj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then look for lines like this in the console output in order to find the URL to open the Aspire dashboard:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Now listening on: http://localhost:18848&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sample data&lt;/h3&gt; &#xA;&lt;p&gt;The sample catalog data is defined in &lt;a href=&#34;https://github.com/dotnet/eShop/raw/main/src/Catalog.API/Setup/catalog.json&#34;&gt;catalog.json&lt;/a&gt;. Those product names, descriptions, and brand names are fictional and were generated using &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt&#34;&gt;GPT-35-Turbo&lt;/a&gt;, and the corresponding &lt;a href=&#34;https://github.com/dotnet/eShop/tree/main/src/Catalog.API/Pics&#34;&gt;product images&lt;/a&gt; were generated using &lt;a href=&#34;https://openai.com/dall-e-3&#34;&gt;DALL·E 3&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;For more information on contributing to this repo, please read &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/eShop/main/CONTRIBUTING.md&#34;&gt;the contribution documentation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/eShop/main/CODE-OF-CONDUCT.md&#34;&gt;the Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BuilderIO/gpt-crawler</title>
    <updated>2023-11-17T01:26:44Z</updated>
    <id>tag:github.com,2023-11-17:/BuilderIO/gpt-crawler</id>
    <link href="https://github.com/BuilderIO/gpt-crawler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Crawl a site to generate knowledge files to create your own custom GPT from a URL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT Crawler&lt;/h1&gt; &#xA;&lt;p&gt;Crawl a site to generate knowledge files to create your own custom GPT from one or multiple URLs&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/feb8763a-152b-4708-9c92-013b5c70d2f2&#34; alt=&#34;Gif showing the crawl run&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/g/g-kywiqipmR-builder-io-assistant&#34;&gt;Here is a custom GPT&lt;/a&gt; that I quickly made to help answer questions about how to use and integrate &lt;a href=&#34;https://www.builder.io&#34;&gt;Builder.io&lt;/a&gt; by simply providing the URL to the Builder docs.&lt;/p&gt; &#xA;&lt;p&gt;This project crawled the docs and generated the file that I uploaded as the basis for the custom GPT.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/g/g-kywiqipmR-builder-io-assistant&#34;&gt;Try it out yourself&lt;/a&gt; by asking questions about how to integrate Builder.io into a site.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that you may need a paid ChatGPT plan to access this feature&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Be sure you have Node.js &amp;gt;= 16 installed&lt;/p&gt; &#xA;&lt;h3&gt;Clone the repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/builderio/gpt-crawler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not have Playwright installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure the crawler&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/BuilderIO/gpt-crawler/main/config.ts&#34;&gt;config.ts&lt;/a&gt; and edit the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;selectors&lt;/code&gt; properties to match your needs.&lt;/p&gt; &#xA;&lt;p&gt;E.g. to crawl the Builder.io docs to make our custom GPT you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export const config: Config = {&#xA;  url: &#34;https://www.builder.io/c/docs/developers&#34;,&#xA;  match: &#34;https://www.builder.io/c/docs/**&#34;,&#xA;  selector: `.docs-builder-container`,&#xA;  maxPagesToCrawl: 50,&#xA;  outputFileName: &#34;output.json&#34;,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the top of the file for the type definition for what you can configure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;type Config = {&#xA;  /** URL to start the crawl */&#xA;  url: string;&#xA;  /** Pattern to match against for links on a page to subsequently crawl */&#xA;  match: string;&#xA;  /** Selector to grab the inner text from */&#xA;  selector: string;&#xA;  /** Don&#39;t crawl more than this many pages */&#xA;  maxPagesToCrawl: number;&#xA;  /** File name for the finished data */&#xA;  outputFileName: string;&#xA;  /** Optional function to run for each page found */&#xA;  onVisitPage?: (options: {&#xA;    page: Page;&#xA;    pushData: (data: any) =&amp;gt; Promise&amp;lt;void&amp;gt;;&#xA;  }) =&amp;gt; Promise&amp;lt;void&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run your crawler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload your data to OpenAI&lt;/h3&gt; &#xA;&lt;p&gt;The crawl will generate a file called &lt;code&gt;output.json&lt;/code&gt; at the root of this project. Upload that &lt;a href=&#34;https://platform.openai.com/docs/assistants/overview&#34;&gt;to OpenAI&lt;/a&gt; to create your custom assistant or custom GPT.&lt;/p&gt; &#xA;&lt;h4&gt;Create a custom GPT&lt;/h4&gt; &#xA;&lt;p&gt;Use this option for UI access to your generated knowledge that you can easily share with others&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: you may need a paid ChatGPT plan to create and use custom GPTs right now&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/&#34;&gt;https://chat.openai.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click your name in the bottom left corner&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;My GPTs&#34; in the menu&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;Create a GPT&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;Configure&#34;&lt;/li&gt; &#xA; &lt;li&gt;Under &#34;Knowledge&#34; choose &#34;Upload a file&#34; and upload the file you generated&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/22f27fb5-6ca5-4748-9edd-6bcf00b408cf&#34; alt=&#34;Gif of how to upload a custom GPT&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Create a custom assistant&lt;/h4&gt; &#xA;&lt;p&gt;Use this option for API access to your generated knowledge that you can integrate into your product.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://platform.openai.com/assistants&#34;&gt;https://platform.openai.com/assistants&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;+ Create&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;upload&#34; and upload the file you generated&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/06e6ad36-e2ba-4c6e-8d5a-bf329140de49&#34; alt=&#34;Gif of how to upload to an assistant&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Know how to make this project better? Send a PR!&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.builder.io/m/developers&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/844291/230786554-eb225eeb-2f6b-4286-b8c2-535b1131744a.png&#34;&gt; &#xA;   &lt;img width=&#34;250&#34; alt=&#34;Made with love by Builder.io&#34; src=&#34;https://user-images.githubusercontent.com/844291/230786555-a58479e4-75f3-4222-a6eb-74c5af953eac.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>