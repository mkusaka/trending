<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-03T01:24:12Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/autogen</title>
    <updated>2023-10-03T01:24:12Z</updated>
    <id>tag:github.com,2023-10-03:/microsoft/autogen</id>
    <link href="https://github.com/microsoft/autogen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enable Next-Gen Large Language Model Applications. Join our Discord: https://discord.gg/pAbnFJrkgZ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/pyautogen&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/pyautogen.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/autogen/actions/workflows/python-package.yml&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/autogen/actions/workflows/python-package.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue&#34; alt=&#34;Python Version&#34;&gt; &lt;a href=&#34;https://discord.gg/pAbnFJrkgZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1153072414184452236?logo=discord&amp;amp;style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is a spinoff from &lt;a href=&#34;https://github.com/microsoft/FLAML&#34;&gt;FLAML&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;AutoGen&lt;/h1&gt; &#xA;&lt;!-- &lt;p align=&#34;center&#34;&gt;&#xA;    &lt;img src=&#34;https://github.com/microsoft/autogen/blob/main/website/static/img/flaml.svg&#34;  width=200&gt;&#xA;    &lt;br&gt;&#xA;&lt;/p&gt; --&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ”¥&lt;/span&gt; autogen has graduated from &lt;a href=&#34;https://github.com/microsoft/FLAML&#34;&gt;FLAML&lt;/a&gt; into a new project.&lt;/p&gt; &#xA;&lt;!-- &lt;span&gt;ðŸ”¥&lt;/span&gt; Heads-up: We&#39;re preparing to migrate [autogen](https://microsoft.github.io/FLAML/docs/Use-Cases/Autogen) into a dedicated github repository. Alongside this move, we&#39;ll also launch a dedicated Discord server and a website for comprehensive documentation.&#xA;&#xA;&lt;span&gt;ðŸ”¥&lt;/span&gt; FLAML is highlighted in OpenAI&#39;s [cookbook](https://github.com/openai/openai-cookbook#related-resources-from-around-the-web).&#xA;&#xA;&lt;span&gt;ðŸ”¥&lt;/span&gt; [autogen](https://microsoft.github.io/autogen/) is released with support for ChatGPT and GPT-4, based on [Cost-Effective Hyperparameter Optimization for Large Language Model Generation Inference](https://arxiv.org/abs/2303.04673).&#xA;&#xA;&lt;span&gt;ðŸ”¥&lt;/span&gt; FLAML supports Code-First AutoML &amp; Tuning â€“ Private Preview in [Microsoft Fabric Data Science](https://learn.microsoft.com/en-us/fabric/data-science/). --&gt; &#xA;&lt;h2&gt;What is AutoGen&lt;/h2&gt; &#xA;&lt;p&gt;AutoGen is a framework that enables development of LLM applications using multiple agents that can converse with each other to solve tasks. AutoGen agents are customizable, conversable, and seamlessly allow human participation. They can operate in various modes that employ combinations of LLMs, human inputs, and tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/autogen/raw/main/website/static/img/autogen_agentchat.png&#34; alt=&#34;AutoGen Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AutoGen enables building next-gen LLM applications based on &lt;strong&gt;multi-agent conversations&lt;/strong&gt; with minimal effort. It simplifies the orchestration, automation and optimization of a complex LLM workflow. It maximizes the performance of LLM models and overcomes their weaknesses.&lt;/li&gt; &#xA; &lt;li&gt;It supports &lt;strong&gt;diverse conversation patterns&lt;/strong&gt; for complex workflows. With customizable and conversable agents, developers can use AutoGen to build a wide range of conversation patterns concerning conversation autonomy, the number of agents, and agent conversation topology.&lt;/li&gt; &#xA; &lt;li&gt;It provides a collection of working systems with different complexities. These systems span a &lt;strong&gt;wide range of applications&lt;/strong&gt; from various domains and complexities. This demonstrates how AutoGen can easily support diverse conversation patterns.&lt;/li&gt; &#xA; &lt;li&gt;AutoGen provides a drop-in replacement of &lt;code&gt;openai.Completion&lt;/code&gt; or &lt;code&gt;openai.ChatCompletion&lt;/code&gt; as an &lt;strong&gt;enhanced inference API&lt;/strong&gt;. It allows easy performance tuning, utilities like API unification and caching, and advanced usage patterns, such as error handling, multi-config inference, context programming, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;AutoGen is powered by collaborative &lt;a href=&#34;https://microsoft.github.io/autogen/docs/Research&#34;&gt;research studies&lt;/a&gt; from Microsoft, Penn State University, and University of Washington.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;AutoGen requires &lt;strong&gt;Python version &amp;gt;= 3.8&lt;/strong&gt;. It can be installed from pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pyautogen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Minimal dependencies are installed without extra options. You can install extra options based on the feature you need. For example, use the following to install the dependencies needed by the &lt;a href=&#34;https://microsoft.github.io/FLAML/docs/Use-Cases/Tune-User-Defined-Function#blendsearch-economical-hyperparameter-optimization-with-blended-search-strategy&#34;&gt;&lt;code&gt;blendsearch&lt;/code&gt;&lt;/a&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;pyautogen[blendsearch]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find more options in &lt;a href=&#34;https://microsoft.github.io/autogen/docs/Installation&#34;&gt;Installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- Each of the [`notebook examples`](https://github.com/microsoft/autogen/tree/main/notebook) may require a specific option to be installed. --&gt; &#xA;&lt;p&gt;For LLM inference configurations, check the &lt;a href=&#34;https://microsoft.github.io/autogen/docs/FAQ#set-your-api-endpoints&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autogen enables the next-gen LLM applications with a generic multi-agent conversation framework. It offers customizable and conversable agents which integrate LLMs, tools, and humans. By automating chat among multiple capable agents, one can easily make them collectively perform tasks autonomously or with human feedback, including tasks that require using tools via code. For &lt;a href=&#34;https://github.com/microsoft/autogen/raw/main/test/twoagent.py&#34;&gt;example&lt;/a&gt;,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogen import AssistantAgent, UserProxyAgent, config_list_from_json&#xA;# Load LLM inference endpoints from an env variable or a file&#xA;# See https://microsoft.github.io/autogen/docs/FAQ#set-your-api-endpoints&#xA;# and OAI_CONFIG_LIST_sample&#xA;config_list = config_list_from_json(env_or_file=&#34;OAI_CONFIG_LIST&#34;)&#xA;assistant = AssistantAgent(&#34;assistant&#34;, llm_config={&#34;config_list&#34;: config_list})&#xA;user_proxy = UserProxyAgent(&#34;user_proxy&#34;, code_execution_config={&#34;work_dir&#34;: &#34;coding&#34;})&#xA;user_proxy.initiate_chat(assistant, message=&#34;Plot a chart of NVDA and TESLA stock price change YTD.&#34;)&#xA;# This initiates an automated chat between the two agents to solve the task&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multi-agent conversations: AutoGen agents can communicate with each other to solve tasks. This allows for more complex and sophisticated applications than would be possible with a single LLM. Customization: AutoGen agents can be customized to meet the specific needs of an application. This includes the ability to choose the LLMs to use, the types of human input to allow, and the tools to employ. Human participation: AutoGen seamlessly allows human participation. This means that humans can provide input and feedback to the agents as needed.&lt;/p&gt; &#xA;&lt;p&gt;This example can be run with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python test/twoagent.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the repo is cloned. The figure below shows an example conversation flow with AutoGen. &lt;img src=&#34;https://github.com/microsoft/autogen/raw/main/website/static/img/chat_example.png&#34; alt=&#34;Agent Chat Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please find more &lt;a href=&#34;https://microsoft.github.io/autogen/docs/Examples/AutoGen-AgentChat&#34;&gt;code examples&lt;/a&gt; for this feature.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autogen also helps maximize the utility out of the expensive LLMs such as ChatGPT and GPT-4. It offers a drop-in replacement of &lt;code&gt;openai.Completion&lt;/code&gt; or &lt;code&gt;openai.ChatCompletion&lt;/code&gt; adding powerful functionalities like tuning, caching, error handling, and templating. For example, you can optimize generations by LLM with your own tuning data, success metrics and budgets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# perform tuning&#xA;config, analysis = autogen.Completion.tune(&#xA;    data=tune_data,&#xA;    metric=&#34;success&#34;,&#xA;    mode=&#34;max&#34;,&#xA;    eval_func=eval_func,&#xA;    inference_budget=0.05,&#xA;    optimization_budget=3,&#xA;    num_samples=-1,&#xA;)&#xA;# perform inference for a test instance&#xA;response = autogen.Completion.create(context=test_instance, **config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please find more &lt;a href=&#34;https://microsoft.github.io/autogen/docs/Examples/AutoGen-Inference&#34;&gt;code examples&lt;/a&gt; for this feature.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find a detailed documentation about AutoGen &lt;a href=&#34;https://microsoft.github.io/autogen/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition, you can find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://microsoft.github.io/autogen/docs/Research&#34;&gt;Research&lt;/a&gt; and &lt;a href=&#34;https://microsoft.github.io/autogen/blog&#34;&gt;blogposts&lt;/a&gt; around AutoGen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://discord.gg/pAbnFJrkgZ&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://microsoft.github.io/autogen/docs/Contribute&#34;&gt;Contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to GitHub &lt;a href=&#34;https://help.github.com/categories/collaborating-with-issues-and-pull-requests/&#34;&gt;here&lt;/a&gt; is a detailed help source on getting involved with development on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h1&gt;Legal Notices&lt;/h1&gt; &#xA;&lt;p&gt;Microsoft and any contributors grant you a license to the Microsoft documentation and other content in this repository under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/autogen/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file, and grant you a license to any code in the repository under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/autogen/main/LICENSE-CODE&#34;&gt;LICENSE-CODE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries. The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks. Microsoft&#39;s general trademark guidelines can be found at &lt;a href=&#34;http://go.microsoft.com/fwlink/?LinkID=254653&#34;&gt;http://go.microsoft.com/fwlink/?LinkID=254653&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Privacy information can be found at &lt;a href=&#34;https://privacy.microsoft.com/en-us/&#34;&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft and any contributors reserve all other rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2308.08155&#34;&gt;AutoGen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{wu2023autogen,&#xA;      title={AutoGen: Enabling Next-Gen LLM Applications via Multi-Agent Conversation Framework},&#xA;      author={Qingyun Wu and Gagan Bansal and Jieyu Zhang and Yiran Wu and Shaokun Zhang and Erkang Zhu and Beibin Li and Li Jiang and Xiaoyun Zhang and Chi Wang},&#xA;      year={2023},&#xA;      eprint={2308.08155},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.AI}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2303.04673&#34;&gt;EcoOptiGen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{wang2023EcoOptiGen,&#xA;    title={Cost-Effective Hyperparameter Optimization for Large Language Model Generation Inference},&#xA;    author={Chi Wang and Susan Xueqing Liu and Ahmed H. Awadallah},&#xA;    year={2023},&#xA;    booktitle={AutoML&#39;23},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2306.01337&#34;&gt;MathChat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{wu2023empirical,&#xA;    title={An Empirical Study on Challenging Math Problem Solving with GPT-4},&#xA;    author={Yiran Wu and Feiran Jia and Shaokun Zhang and Hangyu Li and Erkang Zhu and Yue Wang and Yin Tat Lee and Richard Peng and Qingyun Wu and Chi Wang},&#xA;    year={2023},&#xA;    booktitle={ArXiv preprint arXiv:2306.01337},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Mazars-Tech/AD_Miner</title>
    <updated>2023-10-03T01:24:12Z</updated>
    <id>tag:github.com,2023-10-03:/Mazars-Tech/AD_Miner</id>
    <link href="https://github.com/Mazars-Tech/AD_Miner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AD Miner is an Active Directory audit tool that leverages cypher queries to crunch data from the #Bloodhound graph database to uncover security weaknesses&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADMiner&lt;/h1&gt; &#xA;&lt;p&gt;ADMiner is an Active Directory audit tool that leverages cypher queries to crunch data from the &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound&#34;&gt;BloodHound&lt;/a&gt; graph database (neo4j) and gives you a global overview of existing weaknesses through a web-based static report, including detailed listing, dynamic graphs, key indicators history, along with risk ratings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/doc/img/main.gif&#34; alt=&#34;Main page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also observe indicators over time to help measuring mitigation efficiency. &lt;img src=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/doc/img/evolution.png&#34; alt=&#34;Main page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ADMiner was created and is maintained by the Mazars Cybersecurity Audit &amp;amp; Advisory team.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and setup&lt;/h2&gt; &#xA;&lt;p&gt;The easier way is to do the following commmand using &lt;code&gt;pipx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pipx install &#39;git+https://github.com/Mazars-Tech/AD_Miner.git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, the same way using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install &#39;git+https://github.com/Mazars-Tech/AD_Miner.git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But remain careful and aware that doing this with pip will &#34;polute&#34; your packages.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner [-h] [-b BOLT] [-u USERNAME] [-p PASSWORD] [-e EXTRACT_DATE] [-r RENEWAL_PASSWORD] [-a] [-c] [-l LEVEL] -cf CACHE_PREFIX [-ch NB_CHUNKS] [-co NB_CORES] [--rdp] [--evolution EVOLUTION] [--cluster CLUSTER]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner -c -cf My_Report -u neo4j -p mypassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To better handle large data sets, it is possible to enable multi-threading and also to use a cluster of neo4j databases, as shown in the following example (where server1 handles 32 threads and server2 handles 16) :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner -c -cf My_Report -b bolt://server1:7687 -u neo4j -p mypassword  --cluster server1:7687:32,server2:7687:16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-h, --help              Show this help message and exit&#xA;-b, --bolt              Neo4j bolt connection (default: bolt://127.0.0.1:7687)&#xA;-u, --username          Neo4j username (default : neo4j)&#xA;-p, --password          Neo4j password (default : neo5j)&#xA;-e, --extract_date      Extract date (e.g., 20220131). Default: last logon date&#xA;-r, --renewal_password  Password renewal policy in days. Default: 90&#xA;-a, --azure             Use Azure relations&#xA;-c, --cache             Use local file for neo4j data&#xA;-l, --level             Recursive level for path queries&#xA;-cf, --cache_prefix     Cache file to use (in case of multiple company cache files)&#xA;-ch, --nb_chunks        Number of chunks for parallel neo4j requests. Default : number of CPU&#xA;-co, --nb_cores         Number of cores for parallel neo4j requests. Default : number of CPU&#xA;--rdp                   Include the CanRDP edge in graphs&#xA;--evolution             Evolution over time : location of json data files. ex : &#39;../../tests/&#39;&#xA;--cluster               Nodes of the cluster to run parallel neo4j queries. ex : host1:port1:nCore1,host2:port2:nCore2,...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Implemented controls&lt;/h2&gt; &#xA;&lt;p&gt;The following provides a list controls that have already been implemented in AD Miner :&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dormant accounts&lt;/td&gt; &#xA;   &lt;td&gt;Tier 0 sessions violation&lt;/td&gt; &#xA;   &lt;td&gt;Control path cross domain from DA to DA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ghost computers&lt;/td&gt; &#xA;   &lt;td&gt;Machine accounts with admin privs&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to GPOs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts without password expiration&lt;/td&gt; &#xA;   &lt;td&gt;Obsolete OS&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with old passwords&lt;/td&gt; &#xA;   &lt;td&gt;Inadequate number of domain admins&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to OU&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with clear-text passwords&lt;/td&gt; &#xA;   &lt;td&gt;RDP access&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to GMSA passwords&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kerberoastable accounts&lt;/td&gt; &#xA;   &lt;td&gt;Domain functional level&lt;/td&gt; &#xA;   &lt;td&gt;Control path to AdminSDHolder container&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AS-REP Roastable accounts&lt;/td&gt; &#xA;   &lt;td&gt;Users with admin privs&lt;/td&gt; &#xA;   &lt;td&gt;Users with path to DNS Admins&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with SID history&lt;/td&gt; &#xA;   &lt;td&gt;Machine accounts with high privs&lt;/td&gt; &#xA;   &lt;td&gt;ACL anomalies on group objects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS status&lt;/td&gt; &#xA;   &lt;td&gt;Non tier 0 with DCSync capabilities&lt;/td&gt; &#xA;   &lt;td&gt;Objects with path to an Operator Member&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS access&lt;/td&gt; &#xA;   &lt;td&gt;Unconstrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;ADCS local admin privs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KRBTGT password age&lt;/td&gt; &#xA;   &lt;td&gt;Constrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;Empty groups/OU&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DC Shadow to DA&lt;/td&gt; &#xA;   &lt;td&gt;Role-based constrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DC Shadow to all&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to domain admins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out how to contribute &lt;a href=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/hermes</title>
    <updated>2023-10-03T01:24:12Z</updated>
    <id>tag:github.com,2023-10-03:/facebook/hermes</id>
    <link href="https://github.com/facebook/hermes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A JavaScript engine optimized for running React Native.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hermes JS Engine&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/hermes/raw/HEAD/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/hermes-engine&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/hermes-engine.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:hermes&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/hermes.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/hermes/raw/HEAD/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/facebook/hermes/main/website/static/img/logo.svg?sanitize=true&#34; alt=&#34;Hermes logo - large H with wings&#34; align=&#34;right&#34; width=&#34;20%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hermes is a JavaScript engine optimized for fast start-up of &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt; apps. It features ahead-of-time static optimization and compact bytecode.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re only interested in using pre-built Hermes in a new or existing React Native app, you do not need to follow this guide or have direct access to the Hermes source. Instead, just follow &lt;a href=&#34;https://reactnative.dev/docs/hermes&#34;&gt;these instructions to enable Hermes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Noted that each Hermes release is aimed at a specific RN version. The rule of thumb is to always follow &lt;a href=&#34;https://github.com/facebook/hermes/releases&#34;&gt;Hermes releases&lt;/a&gt; strictly. Version mismatch can result in instant crash of your apps in the worst case scenario.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to know how to build and hack on Hermes directly, and/or integrate Hermes built from source into a React Native app then read on.&lt;/p&gt; &#xA;&lt;p&gt;The instructions here very briefly cover steps to build the Hermes CLI. They assume you have typical native development tools setup for your OS, and support for cmake and Ninja. For more details of required dependencies, building Hermes with different options, etc. follow these links instead:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/hermes/main/doc/BuildingAndRunning.md&#34;&gt;Building and Running Hermes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/hermes/main/doc/ReactNativeIntegration.md#using-a-custom-hermes-build-in-a-react-native-app&#34;&gt;Using a custom Hermes build in a React Native app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build a local debug version of the Hermes CLI tools the following steps should get you started on macOS/Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir hermes_workingdir&#xA;cd hermes_workingdir&#xA;git clone https://github.com/facebook/hermes.git&#xA;cmake -S hermes -B build -G Ninja&#xA;cmake --build ./build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you&#39;re using Windows, the following should get you going in a Git Bash shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir hermes_workingdir&#xA;cd hermes_workingdir&#xA;git -c core.autocrlf=false clone https://github.com/facebook/hermes.git&#xA;cmake -S hermes -B build -G &#39;Visual Studio 16 2019&#39; -A x64&#xA;cmake --build ./build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will now be in a directory with the output of building Hermes into CLI tools. From here you can run a piece of JavaScript as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &#34;&#39;use strict&#39;; function hello() { print(&#39;Hello World&#39;); } hello();&#34; | ./bin/hermes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of this repository is to continue to evolve Hermes, making it faster and more efficient. We are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Hermes.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a &lt;a href=&#34;https://raw.githubusercontent.com/facebook/hermes/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; that we expect project participants to adhere to. Please read &lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing Guide&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/facebook/hermes/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Hermes.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Hermes is &lt;a href=&#34;https://raw.githubusercontent.com/facebook/hermes/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>