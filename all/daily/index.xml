<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-14T01:23:11Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gitbutlerapp/gitbutler</title>
    <updated>2024-02-14T01:23:11Z</updated>
    <id>tag:github.com,2024-02-14:/gitbutlerapp/gitbutler</id>
    <link href="https://github.com/gitbutlerapp/gitbutler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The GitButler version control client, backed by Git, powered by Tauri/Rust/Svelte&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;128px&#34; src=&#34;https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/gitbutler-app/icons/128x128@2x.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;GitButler&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Git branch management tool, built from the ground up for modern workflows &lt;br&gt; &lt;a href=&#34;https://gitbutler.com&#34;&gt;&lt;strong&gt;gitbutler.com »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;Download for &lt;/b&gt; macOS (&lt;a href=&#34;https://app.gitbutler.com/downloads/release/darwin/aarch64/dmg&#34;&gt;Apple Silicon&lt;/a&gt; | &lt;a href=&#34;https://app.gitbutler.com/downloads/release/darwin/x86_64/dmg&#34;&gt;Intel&lt;/a&gt;) · Linux (&lt;a href=&#34;https://app.gitbutler.com/downloads/release/linux/x86_64/gz&#34;&gt;AppImage&lt;/a&gt; | &lt;a href=&#34;https://app.gitbutler.com/downloads/release/linux/x86_64/deb&#34;&gt;deb&lt;/a&gt;) &lt;br&gt; &lt;i&gt;~ Link for Windows will be added once a release is available. ~&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gitbutlerapp/gitbutler/assets/16262535/0d180bfd-7a3c-4a66-a923-30534c5a8197&#34; alt=&#34;gitbutler_client&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gitbutlerapp/gitbutler/actions/workflows/push.yaml&#34;&gt;&lt;img src=&#34;https://github.com/gitbutlerapp/gitbutler/actions/workflows/push.yaml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=gitbutler&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-black?logo=x&amp;amp;logoColor=white&#34; alt=&#34;TWEET&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/MmFkmaJ42D&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1060193121130000425?label=Discord&amp;amp;color=5865F2&#34; alt=&#34;DISCORD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://instagram.com/gitbutlerapp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Instagram-E4405F?logo=instagram&amp;amp;logoColor=white&#34; alt=&#34;INSTA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@gitbutlerapp&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/channel/subscribers/UCEwkZIHGqsTGYvX8wgD0LoQ&#34; alt=&#34;YOUTUBE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitButler is a git client that lets you work on multiple branches at the same time. It allows you to quickly organize file changes into separate branches while still having them applied to your working directory. You can then push branches individually to your remote, or directly create pull requests.&lt;/p&gt; &#xA;&lt;p&gt;In a nutshell, it&#39;s a more flexible version of &lt;code&gt;git add -p&lt;/code&gt; and &lt;code&gt;git rebase -i&lt;/code&gt;, allowing you to efficiently multitask across branches.&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;GitButler keeps track of uncommitted changes in a layer on top of Git. Changes to files or parts of files can be grouped into what we call virtual branches. Whenever you are happy with the contents of a virtual branch, you can push it to a remote. GitButler makes sure that the state of other virtual branches is kept separate.&lt;/p&gt; &#xA;&lt;h2&gt;How do GB&#39;s virtual branches differ from Git branches?&lt;/h2&gt; &#xA;&lt;p&gt;The branches that we know and love in Git are separate universes, and switching between them is a full context switch. GitButler allows you to work with multiple branches in parallel in the same working directory. This effectively means having the content of multiple branches available at the same time.&lt;/p&gt; &#xA;&lt;p&gt;GitButler is aware of changes before they are committed. This allows it to keep a record of which virtual branch each individual diff belongs to. Effectively, this means that you can separate out individual branches with their content at any time to push them to a remote or to unapply them from your working directory.&lt;/p&gt; &#xA;&lt;p&gt;And finally, while in Git it is preferable that you create your desired branch ahead of time, using GitButler you can move changes between virtual branches at any point during development.&lt;/p&gt; &#xA;&lt;h2&gt;Why GitButler?&lt;/h2&gt; &#xA;&lt;p&gt;We love Git. Our own &lt;a href=&#34;https://github.com/schacon&#34;&gt;@schacon&lt;/a&gt; has even published the &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Pro Git&lt;/a&gt; book. At the same time, Git&#39;s user interface hasn&#39;t been fundamentally changed for 15 years. While it was written for Linux kernel devs sending patches to each other over mailing lists, most developers today have different workflows and needs.&lt;/p&gt; &#xA;&lt;p&gt;Instead of trying to fit the semantics of the Git CLI into a graphical interface, are starting with the developer workflow and mapping it back to Git.&lt;/p&gt; &#xA;&lt;h2&gt;Tech&lt;/h2&gt; &#xA;&lt;p&gt;GitButler is a &lt;a href=&#34;https://tauri.app/&#34;&gt;Tauri&lt;/a&gt;-based application. Its UI is written in &lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte&lt;/a&gt; using &lt;a href=&#34;https://www.typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt; and its backend is written in &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Main Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Virtual Branches&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Organize work on multiple branches simultaneously, rather than constantly switching branches&lt;/li&gt; &#xA;   &lt;li&gt;Automatically create new branches when needed&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy Commit Management&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Undo, Amend and Squash commits by dragging and dropping&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Integration&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authenticate to GitHub to open Pull Requests, list branches and statuses and more&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy SSH Key Management&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GitButler can generate an SSH key to upload to GitHub automatically&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI Tooling&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatically write commit messages based on your work in progress&lt;/li&gt; &#xA;   &lt;li&gt;Automatically create descriptive branch names&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Commit Signing&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Easy commit signing with our generated SSH key&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example uses&lt;/h2&gt; &#xA;&lt;h3&gt;Fixing a bug while working on a feature&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Say that while developing a feature, you encounter a bug that you wish to fix. It&#39;s often desirable that you ship the fix as a separate contribution (Pull request).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Using Git you can stash your changes and switch to another branch, where you can commit, and push your fix.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;With GitButler&lt;/em&gt; you simply assign your fix to a separate virtual branch, which you can individually push (or directly create a PR). An additional benefit is that you can retain the fix in your working directory while waiting for CI and/or code review.&lt;/p&gt; &#xA;&lt;h3&gt;Trying someone else&#39;s branch together with my work in progress&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Say you want to test a branch from someone else for the purpose of code review.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Using Git trying out someone else&#39;s branch is a full context switch away from your own work. &lt;em&gt;With GitButler&lt;/em&gt; you can apply and unapply (add / remove) any remote branch directly into your working directory.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find our end user documentation at: &lt;a href=&#34;https://docs.gitbutler.com&#34;&gt;https://docs.gitbutler.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bugs and Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;If you have a bug or feature request, feel free to open an &lt;a href=&#34;https://github.com/gitbutlerapp/gitbutler/issues/new&#34;&gt;issue&lt;/a&gt;, or &lt;a href=&#34;https://discord.gg/wDKZCPEjXC&#34;&gt;join our Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;So you want to help out? Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;p&gt;If you want to skip right to getting the code to actually compile, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Pandora-Labs-Org/erc404</title>
    <updated>2024-02-14T01:23:11Z</updated>
    <id>tag:github.com,2024-02-14:/Pandora-Labs-Org/erc404</id>
    <link href="https://github.com/Pandora-Labs-Org/erc404" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ERC-404&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🚨🚨 This repo contains the next version of ERC-404. It has not yet been fully tested or audited, and is not intended to be used in production yet. 🚨🚨&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/Pandora-Labs-Org/erc404-legacy&#34;&gt;this repository&lt;/a&gt; for the v1.0 version of ERC-404 that was released with Pandora.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;v2.0-beta&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ERC-721 type token ids are now banked and reused in a FIFO queue instead of increasing forever as they are minted and burned. This allows for a predictable set of NFT token ids, as in a typical NFT collection.&lt;/li&gt; &#xA; &lt;li&gt;Transfers of full ERC-20 type tokens now transfer ERC-721 type tokens held by the sender to the recipient. In other words, if you transfer 3 full tokens as an ERC-20 transfer, 3 of the ERC-721s in your wallet will transfer directly to the recipient rather than those ERC-721s being burned and new token ids minted to the recipient.&lt;/li&gt; &#xA; &lt;li&gt;Predictable events emitted during transfers, approvals, and other operations that clearly indicate whether attributed to ERC-20 / ERC-721.&lt;/li&gt; &#xA; &lt;li&gt;Dedicated functions for returning ERC-20 / ERC-721 balances and total supply.&lt;/li&gt; &#xA; &lt;li&gt;Removal of fixed supply cap in core contract, allowing a fixed token supply cap to be added optionally if desired.&lt;/li&gt; &#xA; &lt;li&gt;Simplification and centralization of transfer logic.&lt;/li&gt; &#xA; &lt;li&gt;Easier to use dedicated minting function.&lt;/li&gt; &#xA; &lt;li&gt;EIP-2612 support for permit approvals.&lt;/li&gt; &#xA; &lt;li&gt;EIP-165 support.&lt;/li&gt; &#xA; &lt;li&gt;Numerous logical optimizations and gas savings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;ERC-404 is an experimental, mixed ERC-20 / ERC-721 implementation with native liquidity and fractionalization. While these two standards are not designed to be mixed, this implementation strives to do so in as robust a manner as possible while minimizing tradeoffs.&lt;/p&gt; &#xA;&lt;p&gt;In its current implementation, ERC-404 effectively isolates ERC-20 / ERC-721 standard logic or introduces pathing where possible.&lt;/p&gt; &#xA;&lt;p&gt;Pathing could best be described as a lossy encoding scheme in which token amount data and ids occupy shared space under the assumption that negligible token transfers occupying id space do not or do not need to occur.&lt;/p&gt; &#xA;&lt;p&gt;Integrating protocols should ideally confirm these paths by checking that submitted parameters are below the token id range or above.&lt;/p&gt; &#xA;&lt;p&gt;This iteration of ERC-404 specifically aims to address common use-cases and define better interfaces for standardization, that reduce or remove conflicts with existing ERC-20 / ERC-721 consensus.&lt;/p&gt; &#xA;&lt;p&gt;This standard is entirely experimental and unaudited, while testing has been conducted in an effort to ensure execution is as accurate as possible.&lt;/p&gt; &#xA;&lt;p&gt;The nature of overlapping standards, however, does imply that integrating protocols will not fully understand their mixed function.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To deploy your own ERC-404 token, look at the example provided in the src folder, ExampleERC-404.sol.&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;This is an extremely simple minimal version of an ERC-404 that mints the entire supply to the initial owner of the contract.&lt;/p&gt; &#xA;&lt;p&gt;Generally the initial tokens minted to the deployer will be added to a DEX as liquidity. The DEX pool address should also be added to the whitelist to prevent minting NFTs to it and burning NFTs from it on transfer.&lt;/p&gt; &#xA;&lt;h2&gt;Uniswap V3&lt;/h2&gt; &#xA;&lt;p&gt;Use the below as guidelines on how to prepare for and deploy to a Uniswap V3 pool:&lt;/p&gt; &#xA;&lt;p&gt;To predict the address of your Uniswap V3 Pool, use the following simulator: &lt;a href=&#34;https://dashboard.tenderly.co/shared/simulation/92dadba3-92c3-46a2-9ccc-c793cac6c33d&#34;&gt;https://dashboard.tenderly.co/shared/simulation/92dadba3-92c3-46a2-9ccc-c793cac6c33d&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click Re-Simulate in the top right corner.&lt;/li&gt; &#xA; &lt;li&gt;Update the simulation parameters: &lt;code&gt;tokenA&lt;/code&gt; (your token address), &lt;code&gt;tokenB&lt;/code&gt; (typically WETH, or &lt;code&gt;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&lt;/code&gt;), and set the fee tier to either 500, 3000 (for 0.3%), or 10000 (for 1%).&lt;/li&gt; &#xA; &lt;li&gt;Run Simulate, and then expand the Input/Output section. The output on the right column will show the derived pool address.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is released under the MIT License.&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WithSecureLabs/lolcerts</title>
    <updated>2024-02-14T01:23:11Z</updated>
    <id>tag:github.com,2024-02-14:/WithSecureLabs/lolcerts</id>
    <link href="https://github.com/WithSecureLabs/lolcerts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of code signing certificates known to have been leaked or stolen, then abused by threat actors&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Living Off The &lt;del&gt;Land&lt;/del&gt;Leaked Certificates (LoLCerts)&lt;/h1&gt; &#xA;&lt;p&gt;Threat actors are known to sign their malware using stolen, or even legally acquired, code signing certificates. This threat is becoming more relevant as more and more defenses are relying on digital signatures for allowing or not execution on an endpoint. This project aims at collecting the details of the certificates that are known to be abused in the wild by malicious actors.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;scripts&lt;/code&gt; directory contains a Python script used to generate Yara rules for all the certificates. Rules are written according to &lt;a href=&#34;https://www.nextron-systems.com/2018/11/01/short-tutorial-how-to-create-a-yara-rule-for-a-compromised-certificate/&#34;&gt;Nextron System - Short tutorial how to create a yara rule for a compromised certificate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To generate all the yara rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd scripts/&#xA;python3 generate_yara.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Schema:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: name_of_the_certificate&#xA;meta:&#xA;  status: revoked|valid&#xA;  source: leaked|malicious&#xA;  description: |&#xA;    Brief description of the certificate and where was it obtained from&#xA;  references: Threat intelligence reference&#xA;  date: Date of release&#xA;  author: Author Name&#xA;issuer: Issuer of the certificate&#xA;timestamp: Unix timestamp of when the cert was leaked, if relevant&#xA;serial: Array of strings containing the serial numbers of the certificates&#xA;thumbprint: Optional array of strings containing the thumbprints of the certificates&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>