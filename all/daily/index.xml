<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-13T01:30:40Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skydoves/chatgpt-android</title>
    <updated>2022-12-13T01:30:40Z</updated>
    <id>tag:github.com,2022-12-13:/skydoves/chatgpt-android</id>
    <link href="https://github.com/skydoves/chatgpt-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì± ChatGPT Android demonstrates OpenAI&#39;s ChatGPT on Android with Stream Chat SDK for Compose.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;ChatGPT Android&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview0.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview1.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview2.gif&#34; alt=&#34;drawing&#34; width=&#34;269px&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;OpenAI&#39;s ChatGPT&lt;/a&gt; on Android with &lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to demonstrate below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt;&#39;s unofficial APIs.&lt;/li&gt; &#xA; &lt;li&gt;Implementing entire UI elements with Jetpack Compose.&lt;/li&gt; &#xA; &lt;li&gt;Implementation of Android architecture components with Jetpack libraries such as Hilt and AppStartup.&lt;/li&gt; &#xA; &lt;li&gt;Performing background tasks with Kotlin Coroutines.&lt;/li&gt; &#xA; &lt;li&gt;Integrating chat systems with Stream Chat SDK for real-time event handling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/138428440-b92e5fb7-89f8-41aa-96b1-71a5486c5849.png&#34; align=&#34;right&#34; width=&#34;12%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;üõ• Stream Chat SDK&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; is built with &lt;strong&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;&lt;/strong&gt; to implement messaging systems. If you‚Äôre interested in adding powerful In-App Messaging to your app, check out the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/tutorials/android-chat?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Android Chat Messaging Tutorial&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/stream-chat-android&#34;&gt;Stream Chat SDK for Android on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/android-samples&#34;&gt;Android Samples for Stream Chat SDK on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/docs/sdk/android/compose/overview/&#34;&gt;Stream Chat Compose UI Componenets Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ† Tech Sacks &amp;amp; Open Source Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum SDK level 21.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; based + &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt; + &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/&#34;&gt;Flow&lt;/a&gt; for asynchronous.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Compose Chat SDK for Messaging&lt;/a&gt;: The Jetpack Compose Chat Messaging SDK is built on a low-level chat client and provides modular, customizable Compose UI components that you can easily drop into your app.&lt;/li&gt; &#xA; &lt;li&gt;Jetpack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compose: Android‚Äôs modern toolkit for building native UI.&lt;/li&gt; &#xA;   &lt;li&gt;ViewModel: UI related data holder and lifecycle aware.&lt;/li&gt; &#xA;   &lt;li&gt;App Startup: Provides a straightforward, performant way to initialize components at application startup.&lt;/li&gt; &#xA;   &lt;li&gt;Navigation: For navigating screens and &lt;a href=&#34;https://developer.android.com/jetpack/compose/libraries#hilt&#34;&gt;Hilt Navigation Compose&lt;/a&gt; for injecting dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dagger.dev/hilt/&#34;&gt;Hilt&lt;/a&gt;: Dependency Injection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/landscapist#glide&#34;&gt;Landscapist Glide&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#animation&#34;&gt;animation&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#placeholder&#34;&gt;placeholder&lt;/a&gt;: Jetpack Compose image loading library that fetches and displays network images with Glide, Coil, and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;Retrofit2 &amp;amp; OkHttp3&lt;/a&gt;: Construct the REST APIs and paging network data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/Sandwich&#34;&gt;Sandwich&lt;/a&gt;: Construct a lightweight and modern response interface to handle network payload for Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/moshi/&#34;&gt;Moshi&lt;/a&gt;: A modern JSON library for Kotlin and Java.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/ksp&#34;&gt;ksp&lt;/a&gt;: Kotlin Symbol Processing API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GetStream/stream-log&#34;&gt;StreamLog&lt;/a&gt;: A lightweight and extensible logger library for Kotlin and Android.&lt;/li&gt; &#xA; &lt;li&gt;Baseline Profiles: To improve app performance by including a list of classes and methods specifications in your APK that can be used by Android Runtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚öôÔ∏è How to build the project?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; and &lt;strong&gt;login&lt;/strong&gt; or &lt;strong&gt;signin&lt;/strong&gt; on the website.&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;strong&gt;Developer Tools&lt;/strong&gt; on your Chrome.&lt;/li&gt; &#xA; &lt;li&gt;Type anything again, such as &#34;Hi&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Network&lt;/strong&gt; tab on the top menu like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt2.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Click any &lt;strong&gt;conversation&lt;/strong&gt; and the &lt;strong&gt;Payload&lt;/strong&gt; tap like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt0.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;You will see the &lt;strong&gt;conversation_id&lt;/strong&gt; and &lt;strong&gt;parent_message_id&lt;/strong&gt;, and copy them.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Headers&lt;/strong&gt; tap next to the &lt;strong&gt;Payload&lt;/strong&gt; tap like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt1.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Then you will see the &lt;strong&gt;authorization&lt;/strong&gt; field and copy them without the &#34;Bearer&#34; string.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;code&gt;local.properties&lt;/code&gt; file and add the properties like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt3.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;GPT_SESSION=..&#xA;CONVERSATION_ID=..&#xA;PARENT_MESSAGE_ID=..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;Build the project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üèõÔ∏è Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Google&#39;s official architecture guidance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure0.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; was built with &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Guide to app architecture&lt;/a&gt;, so it would be a great sample to show how the architecture works in real-world projects.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;The overall architecture is composed of two layers; UI Layer and the data layer. Each layer has dedicated components and they each have different responsibilities. The arrow means the component has a dependency on the target component following its direction.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure1.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each layer has different responsibilities below. Basically, they follow &lt;a href=&#34;https://developer.android.com/topic/architecture/ui-layer#udf&#34;&gt;unidirectional event/data flow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;UI Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure2.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The UI Layer consists of UI elements like buttons, menus, tabs that could interact with users and &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt; that holds app states and restores data when configuration changes.&lt;/p&gt; &#xA;&lt;h3&gt;Data Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure3.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the &lt;a href=&#34;https://en.wikipedia.org/wiki/Single_source_of_truth&#34;&gt;single source of truth&lt;/a&gt; principle.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information about the overall architecture, check out &lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/build-whatsapp-clone/&#34;&gt;Build a Real-Time WhatsApp Clone With Jetpack Compose&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modularization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure4.png&#34; alt=&#34;modules&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; adopted modularization strategies below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reusability&lt;/strong&gt;: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Parallel Building&lt;/strong&gt;: Each module can be run in parallel and it reduces the build time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Decentralized focusing&lt;/strong&gt;: Each developer team can assign their dedicated module and they can focus on their own modules.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíØ MAD Score&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/158918011-bc766482-ec83-47dd-9237-d8a226cab263.png&#34; alt=&#34;summary&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Most of the features are not completed except the chat feature, so anyone can contribute and improve this project following the &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Find this repository useful? üíô&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/chatgpt-android/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;‚≠ê&lt;/span&gt; &lt;br&gt; Also, follow &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;maintainers&lt;/a&gt;&lt;/strong&gt; on GitHub for our next creations! ü§©&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Designed and developed by 2022 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kubeshark/kubeshark</title>
    <updated>2022-12-13T01:30:40Z</updated>
    <id>tag:github.com,2022-12-13:/kubeshark/kubeshark</id>
    <link href="https://github.com/kubeshark/kubeshark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The API traffic viewer for Kubernetes providing deep visibility into all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster. Think TCPDump and Wireshark re-invented for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubeshark/assets/master/svg/kubeshark-logo.svg?sanitize=true&#34; alt=&#34;Kubeshark: Traffic viewer for Kubernetes.&#34; height=&#34;128px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;GitHub License&#34; src=&#34;https://img.shields.io/github/license/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt; &lt;img alt=&#34;GitHub Latest Release&#34; src=&#34;https://img.shields.io/github/v/release/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Docker pulls&#34; src=&#34;https://img.shields.io/docker/pulls/kubeshark/kubeshark?color=%23099cec&amp;amp;logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Image size&#34; src=&#34;https://img.shields.io/docker/image-size/kubeshark/kubeshark/latest?logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/WkvRGMUcx7&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1042559155224973352?logo=Discord&amp;amp;style=flat-square&amp;amp;label=discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/kubeshark/shared_invite/zt-1k3sybpq9-uAhFkuPJiJftKniqrGHGhg&#34;&gt; &lt;img alt=&#34;Slack&#34; src=&#34;https://img.shields.io/badge/slack-join_chat-green?logo=Slack&amp;amp;style=flat-square&amp;amp;label=slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Mizu (by UP9) is now Kubeshark, read more about it &lt;a href=&#34;https://www.kubeshark.co/mizu-is-now-kubeshark&#34;&gt;here&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p&gt;Kubeshark, the API Traffic Viewer for kubernetes, provides deep visibility and monitoring of all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;Think of a combination of Chrome Dev Tools, TCPDump and Wireshark, re-invented for Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kubeshark/assets/raw/master/png/kubeshark-ui.png&#34; alt=&#34;Simple UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Kubeshark uses a ~45MB pre-compiled executable binary to communicate with the Kubernetes API. We recommend downloading the &lt;code&gt;kubeshark&lt;/code&gt; CLI by using one of these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose the right binary, download and use directly from &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt;the latest stable release&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the shell script below &lt;span&gt;üëá&lt;/span&gt; to automatically download the right binary for your operating system and CPU architecture:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh &amp;lt;(curl -Ls https://kubeshark.co/install)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile it from source using &lt;code&gt;make&lt;/code&gt; command then use &lt;code&gt;./bin/kubeshark__&lt;/code&gt; executable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;kubeshark&lt;/code&gt; CLI to capture and view streaming API traffic in real time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting Installation&lt;/h3&gt; &#xA;&lt;p&gt;If something doesn&#39;t work or simply to play it safe prior to installing;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure you have access to &lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure &lt;code&gt;kubeshark&lt;/code&gt; executable in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Select Pods&lt;/h3&gt; &#xA;&lt;h4&gt;Monitoring a Specific Pod:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap catalogue-b87b45784-sxc8q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Monitoring a Set of Pods Using Regex:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap &#34;(catalo*|front-end*)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the Namespace&lt;/h3&gt; &#xA;&lt;p&gt;By default, Kubeshark is deployed into the &lt;code&gt;default&lt;/code&gt; namespace. To specify a different namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -n sock-shop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify All Namespaces&lt;/h3&gt; &#xA;&lt;p&gt;The default deployment strategy of Kubeshark waits for the new pods to be created. To simply deploy to all existing namespaces run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit our documentation website: &lt;a href=&#34;https://docs.kubeshark.co&#34;&gt;docs.kubeshark.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The documentation resources are open-source and can be found on GitHub: &lt;a href=&#34;https://github.com/kubeshark/docs&#34;&gt;kubeshark/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We ‚ù§Ô∏è pull requests! See &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contribution guide.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project is for everyone. We ask that our users and contributors take a few minutes to review our &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>arendst/Tasmota</title>
    <updated>2022-12-13T01:30:40Z</updated>
    <id>tag:github.com,2022-12-13:/arendst/Tasmota</id>
    <link href="https://github.com/arendst/Tasmota" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Alternative firmware for ESP8266 with easy configuration using webUI, OTA updates, automation using timers or rules, expandability and entirely local control over MQTT, HTTP, Serial or KNX. Full documentation at&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/arendst/Tasmota/development/tools/logo/TASMOTA_FullLogo_Vector.svg?sanitize=true&#34; alt=&#34;Tasmota logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative firmware for &lt;a href=&#34;https://en.wikipedia.org/wiki/ESP8266&#34;&gt;ESP8266&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/ESP32&#34;&gt;ESP32&lt;/a&gt; based devices with &lt;strong&gt;easy configuration using webUI, OTA updates, automation using timers or rules, expandability and entirely local control over MQTT, HTTP, Serial or KNX&lt;/strong&gt;. &lt;em&gt;Written for PlatformIO.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ota.tasmota.com/tasmota/release&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/arendst/Tasmota.svg?sanitize=true&#34; alt=&#34;GitHub version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arendst/Tasmota/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/arendst/Tasmota/total.svg?sanitize=true&#34; alt=&#34;GitHub download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/arendst/Tasmota/development/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/arendst/Tasmota.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Ks2Kzd4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/479389167382691863.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/arendst/Tasmota&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;In light of current events we like to support the people behind &lt;em&gt;PlatformIO Project&lt;/em&gt;, especially Ivan Kravets, and wish them the strength to help stop the war. See &lt;a href=&#34;https://community.platformio.org/t/platformio-is-ukrainian-project-please-help-us-stop-the-war/26330&#34;&gt;platformio-is-ukrainian-project-please-help-us-stop-the-war&lt;/a&gt; for what you can do.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Easy install&lt;/h2&gt; &#xA;&lt;p&gt;Easy initial installation of Tasmota can be performed using the &lt;a href=&#34;https://tasmota.github.io/install/&#34;&gt;Tasmota WebInstaller&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you like &lt;strong&gt;Tasmota&lt;/strong&gt;, give it a star, or fork it and contribute!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arendst/Tasmota/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/arendst/Tasmota.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arendst/Tasmota/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/arendst/Tasmota.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paypal.me/tasmota&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-PayPal-blue.svg?sanitize=true&#34; alt=&#34;donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/arendst/Tasmota/raw/master/RELEASENOTES.md&#34;&gt;RELEASENOTES.md&lt;/a&gt; for release information.&lt;/p&gt; &#xA;&lt;p&gt;Firmware binaries can be downloaded from &lt;a href=&#34;http://ota.tasmota.com/tasmota/release/&#34;&gt;http://ota.tasmota.com/tasmota/release/&lt;/a&gt; or &lt;a href=&#34;http://ota.tasmota.com/tasmota32/release/&#34;&gt;http://ota.tasmota.com/tasmota32/release/&lt;/a&gt; for ESP32 binaries.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arendst/Tasmota&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/development%20version-v12.2.x.x-blue.svg?sanitize=true&#34; alt=&#34;Dev Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://ota.tasmota.com/tasmota/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-development-yellow.svg?sanitize=true&#34; alt=&#34;Download Dev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arendst/Tasmota/actions/workflows/build_all_the_things.yml&#34;&gt;&lt;img src=&#34;https://github.com/arendst/Tasmota/actions/workflows/build_all_the_things.yml/badge.svg?sanitize=true&#34; alt=&#34;Tasmota CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arendst/Tasmota/actions/workflows/Tasmota_build_devel.yml&#34;&gt;&lt;img src=&#34;https://github.com/arendst/Tasmota/actions/workflows/Tasmota_build_devel.yml/badge.svg?sanitize=true&#34; alt=&#34;Build_development&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/arendst/Tasmota/development/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; for detailed change information.&lt;/p&gt; &#xA;&lt;p&gt;Unless your Tasmota powered device exhibits a problem or lacks a feature that you need, leave your device alone - it works so don‚Äôt make unnecessary changes! If the release version (i.e., the master branch) exhibits unexpected behaviour for your device and configuration, you should upgrade to the latest development version instead to see if your problem is resolved as some bugs in previous releases or development builds may already have been resolved.&lt;/p&gt; &#xA;&lt;p&gt;Every commit made to the development branch, which is compiling successfuly, will post new binary files at &lt;a href=&#34;http://ota.tasmota.com/tasmota/&#34;&gt;http://ota.tasmota.com/tasmota/&lt;/a&gt; (this web address can be used for OTA updates too). It is important to note that these binaries are based on the current development codebase. These commits are tested as much as is possible and are typically quite stable. However, it is infeasible to test on the hundreds of different types of devices with all the available configuration options permitted.&lt;/p&gt; &#xA;&lt;p&gt;Note that there is a chance, as with any upgrade, that the device may not function as expected. You must always account for the possibility that you may need to flash the device via the serial programming interface if the OTA upgrade fails. Even with the master release, you should always attempt to test the device or a similar prototype before upgrading a device which is in production or is hard to reach. And, as always, make a backup of the device configuration before beginning any firmware update.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;st&lt;span&gt;‚ö†&lt;/span&gt; &lt;strong&gt;DANGER OF ELECTROCUTION&lt;/strong&gt; &lt;span&gt;‚ö†&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;If your device connects to mains electricity (AC power) there is danger of electrocution if not installed properly. If you don&#39;t know how to install it, please call an electrician (&lt;em&gt;&lt;strong&gt;Beware:&lt;/strong&gt;&lt;/em&gt; certain countries prohibit installation without a licensed electrician present). Remember: &lt;em&gt;&lt;strong&gt;SAFETY FIRST&lt;/strong&gt;&lt;/em&gt;. It is not worth the risk to yourself, your family and your home if you don&#39;t know exactly what you are doing. Never tinker or try to flash a device using the serial programming interface while it is connected to MAINS ELECTRICITY (AC power).&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t take any responsibility nor liability for using this software nor for the installation or any tips, advice, videos, etc. given by any member of this site or any related site.&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;Please do not ask to add new devices unless it requires additional code for new features. If the device is not listed as a module, try using &lt;a href=&#34;https://tasmota.github.io/docs/Templates&#34;&gt;Templates&lt;/a&gt; first. If it is not listed in the &lt;a href=&#34;http://templates.blakadder.com&#34;&gt;Tasmota Device Templates Repository&lt;/a&gt; create your own &lt;a href=&#34;https://tasmota.github.io/docs/Templates#creating-your-template&#34;&gt;Template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Install&lt;/h2&gt; &#xA;&lt;p&gt;Download one of the released binaries from &lt;a href=&#34;http://ota.tasmota.com/tasmota/release/&#34;&gt;http://ota.tasmota.com/tasmota/release/&lt;/a&gt; or &lt;a href=&#34;http://ota.tasmota.com/tasmota32/release/&#34;&gt;http://ota.tasmota.com/tasmota32/release/&lt;/a&gt; and flash it to your hardware &lt;a href=&#34;https://tasmota.github.io/docs/Getting-Started&#34;&gt;using our installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Important User Compilation Information&lt;/h2&gt; &#xA;&lt;p&gt;If you want to compile Tasmota yourself keep in mind the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For ESP8285 based devices only Flash Mode &lt;strong&gt;DOUT&lt;/strong&gt; is supported. Do not use Flash Mode DIO / QIO / QOUT as it might seem to brick your device.&lt;/li&gt; &#xA; &lt;li&gt;For ESP8285 based devices Tasmota uses a 1M linker script WITHOUT spiffs &lt;strong&gt;1M (no SPIFFS)&lt;/strong&gt; for optimal code space.&lt;/li&gt; &#xA; &lt;li&gt;To make compile time changes to Tasmota use the &lt;code&gt;user_config_override.h&lt;/code&gt; file. It assures keeping your custom settings when you download and compile a new version. You have to make a copy from the provided &lt;code&gt;user_config_override_sample.h&lt;/code&gt; file and add your setting overrides.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration Information&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the installation and configuration articles in our &lt;a href=&#34;https://tasmota.github.io/docs&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration Information&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://tasmota.github.io/docs/Upgrading#migration-path&#34;&gt;migration path&lt;/a&gt; for instructions how to migrate to a major version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not upgrade from minimal to minimal version. It will most likely fail at some point and will require flashing via serial.&lt;/strong&gt; If you do have to use minimal versions, always OTA to a full version of the same release before applying next minimal version.&lt;/p&gt; &#xA;&lt;p&gt;Pay attention to the following version breaks due to dynamic settings updates:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 3.9.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 4.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 5.14&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Sonoff-Tasmota 6.7.1&lt;/strong&gt; (&lt;a href=&#34;http://ota.tasmota.com/tasmota/release_6.7.1/sonoff.bin&#34;&gt;http://ota.tasmota.com/tasmota/release_6.7.1/sonoff.bin&lt;/a&gt;) - NOTICE underscore as a dash is not supported in older versions&lt;/li&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Tasmota 7.2.0&lt;/strong&gt; (&lt;a href=&#34;http://ota.tasmota.com/tasmota/release-7.2.0/tasmota.bin&#34;&gt;http://ota.tasmota.com/tasmota/release-7.2.0/tasmota.bin&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;--- Major change in parameter storage layout ---&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Tasmota 8.5.1&lt;/strong&gt; (&lt;a href=&#34;http://ota.tasmota.com/tasmota/release-8.5.1/tasmota.bin&#34;&gt;http://ota.tasmota.com/tasmota/release-8.5.1/tasmota.bin&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;--- Major change in internal GPIO function representation ---&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Migrate to &lt;strong&gt;Tasmota 9.1&lt;/strong&gt; (&lt;a href=&#34;http://ota.tasmota.com/tasmota/release-9.1.0/tasmota.bin.gz&#34;&gt;http://ota.tasmota.com/tasmota/release-9.1.0/tasmota.bin.gz&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Upgrade to &lt;strong&gt;latest release&lt;/strong&gt; (&lt;a href=&#34;http://ota.tasmota.com/tasmota/release/tasmota.bin.gz&#34;&gt;http://ota.tasmota.com/tasmota/release/tasmota.bin.gz&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;While fallback or downgrading is common practice it was never supported due to Settings additions or changes in newer releases. Starting with release &lt;strong&gt;v9.1.0 Imogen&lt;/strong&gt; the internal GPIO function representation has changed in such a way that fallback is only possible to the latest GPIO configuration before installing &lt;strong&gt;v9.1.0&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Information&lt;/h2&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/5904370/68332933-e6e5a600-00d7-11ea-885d-50395f7239a1.png&#34; width=&#34;150&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;For a database of supported devices see &lt;a href=&#34;https://templates.blakadder.com&#34;&gt;Tasmota Device Templates Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for support on &lt;strong&gt;Tasmota&lt;/strong&gt; there are some options available:&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tasmota.github.io/docs&#34;&gt;Documentation Site&lt;/a&gt;: For information on how to flash Tasmota, configure, use and expand it&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tasmota.github.io/docs/FAQ/&#34;&gt;FAQ and Troubleshooting&lt;/a&gt;: For information on common problems and solutions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tasmota.github.io/docs/Commands&#34;&gt;Commands Information&lt;/a&gt;: For information on all the commands supported by Tasmota.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support&#39;s Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arendst/Tasmota/discussions&#34;&gt;Tasmota Discussions&lt;/a&gt;: For Tasmota usage questions, Feature Requests and Projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/Ks2Kzd4&#34;&gt;Tasmota Users Chat&lt;/a&gt;: For support, troubleshooting and general questions. You have better chances to get fast answers from members of the Tasmota Community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arendst/Tasmota/issues&#34;&gt;Search in Issues&lt;/a&gt;: You might find an answer to your question by searching current or closed issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arendst/Tasmota/issues/new?template=Bug_report.md&#34;&gt;Software Problem Report&lt;/a&gt;: For reporting problems of Tasmota Software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute to Tasmota by&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Providing Pull Requests (Features, Proof of Concepts, Language files or Fixes)&lt;/li&gt; &#xA; &lt;li&gt;Testing new released features and report issues&lt;/li&gt; &#xA; &lt;li&gt;Donating to acquire hardware for testing and implementing or out of gratitude&lt;/li&gt; &#xA; &lt;li&gt;Contributing missing &lt;a href=&#34;https://tasmota.github.io/docs&#34;&gt;documentation&lt;/a&gt; for features and devices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/tasmota&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-PayPal-blue.svg?sanitize=true&#34; alt=&#34;donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;People helping to keep the show on the road:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sfromis providing extensive user support&lt;/li&gt; &#xA; &lt;li&gt;Barbudor providing user support and code fixes and additions&lt;/li&gt; &#xA; &lt;li&gt;David Lang providing initial issue resolution and code optimizations&lt;/li&gt; &#xA; &lt;li&gt;Heiko Krupp for his IRSend, HTU21, SI70xx and Wemo/Hue emulation drivers&lt;/li&gt; &#xA; &lt;li&gt;Wiktor Schmidt for Travis CI implementation&lt;/li&gt; &#xA; &lt;li&gt;Thom Dietrich for PlatformIO optimizations&lt;/li&gt; &#xA; &lt;li&gt;Marinus van den Broek for his EspEasy groundwork&lt;/li&gt; &#xA; &lt;li&gt;Pete Ba for more user friendly energy monitor calibration&lt;/li&gt; &#xA; &lt;li&gt;Lobradov providing compile optimization tips&lt;/li&gt; &#xA; &lt;li&gt;Flexiti for his initial timer implementation&lt;/li&gt; &#xA; &lt;li&gt;reloxx13 for his &lt;a href=&#34;https://github.com/reloxx13/TasmoAdmin&#34;&gt;TasmoAdmin&lt;/a&gt; management tool&lt;/li&gt; &#xA; &lt;li&gt;Joachim Banzhaf for his TSL2561 library and driver&lt;/li&gt; &#xA; &lt;li&gt;Andre Thomas for providing many drivers&lt;/li&gt; &#xA; &lt;li&gt;Gijs Noorlander for his MHZ19, SenseAir and updated PubSubClient drivers&lt;/li&gt; &#xA; &lt;li&gt;Erik Montnemery for his HomeAssistant Discovery concept and many code tuning tips&lt;/li&gt; &#xA; &lt;li&gt;Federico Leoni for continued HomeAssistant Discovery support&lt;/li&gt; &#xA; &lt;li&gt;Aidan Mountford for his HSB support&lt;/li&gt; &#xA; &lt;li&gt;Daniel Ztolnai for his Serial Bridge implementation&lt;/li&gt; &#xA; &lt;li&gt;Gerhard Mutz for multiple sensor &amp;amp; display drivers, Sunrise/Sunset, and scripting&lt;/li&gt; &#xA; &lt;li&gt;Nuno Ferreira for his HC-SR04 driver&lt;/li&gt; &#xA; &lt;li&gt;Adrian Scillato for his (security)fixes and implementing and maintaining KNX&lt;/li&gt; &#xA; &lt;li&gt;Gennaro Tortone for implementing and maintaining Eastron drivers&lt;/li&gt; &#xA; &lt;li&gt;Raymond Mouthaan for managing Wemos Wiki information&lt;/li&gt; &#xA; &lt;li&gt;Norbert Richter for his &lt;a href=&#34;https://github.com/tasmota/decode-config&#34;&gt;decode-config.py&lt;/a&gt; tool&lt;/li&gt; &#xA; &lt;li&gt;Joel Stein, digiblur and Shantur Rathore for their Tuya research and driver&lt;/li&gt; &#xA; &lt;li&gt;Frogmore42 for providing many issue answers&lt;/li&gt; &#xA; &lt;li&gt;Jason2866 for platformio support and providing many issue answers&lt;/li&gt; &#xA; &lt;li&gt;Blakadder for managing the document site and providing template management&lt;/li&gt; &#xA; &lt;li&gt;Stephan Hadinger for refactoring light driver, enhancing HueEmulation, LVGL, Zigbee and Berry support&lt;/li&gt; &#xA; &lt;li&gt;tmo for designing the official Tasmota logo&lt;/li&gt; &#xA; &lt;li&gt;Stefan Bode for his Shutter and Deep sleep drivers&lt;/li&gt; &#xA; &lt;li&gt;Jacek Zi√≥≈Çkowski for his &lt;a href=&#34;https://github.com/jziolkowski/tdm&#34;&gt;TDM&lt;/a&gt; management tool and &lt;a href=&#34;https://github.com/tasmota/tasmotizer&#34;&gt;Tasmotizer&lt;/a&gt; flashing tool&lt;/li&gt; &#xA; &lt;li&gt;Christian Staars for NRF24L01 and HM-10 Bluetooth sensor support&lt;/li&gt; &#xA; &lt;li&gt;Paul Diem for UDP Group communication support&lt;/li&gt; &#xA; &lt;li&gt;J√∂rg Sch√ºler-Maroldt for his initial ESP32 port&lt;/li&gt; &#xA; &lt;li&gt;Javier Arigita for his thermostat driver&lt;/li&gt; &#xA; &lt;li&gt;Simon Hailes for ESP32 Bluetooth extensions&lt;/li&gt; &#xA; &lt;li&gt;Many more providing Tips, Wips, Pocs, PRs and Donations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program is licensed under GPL-3.0&lt;/p&gt;</summary>
  </entry>
</feed>