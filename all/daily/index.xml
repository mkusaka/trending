<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-21T01:30:40Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getify/You-Dont-Know-JS</title>
    <updated>2023-01-21T01:30:40Z</updated>
    <id>tag:github.com,2023-01-21:/getify/You-Dont-Know-JS</id>
    <link href="https://github.com/getify/You-Dont-Know-JS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A book series on JavaScript. @YDKJS on twitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;You Don&#39;t Know JS Yet (book series) - 2nd Edition&lt;/h1&gt; &#xA;&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language. This is the &lt;strong&gt;second edition&lt;/strong&gt; of the book series:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://leanpub.com/ydkjsy-get-started&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/get-started/images/cover.png&#34; width=&#34;75&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://leanpub.com/ydkjsy-scope-closures&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/scope-closures/images/cover.png&#34; width=&#34;75&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;...&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book series, check out the &lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/preface.md&#34;&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for the previous &lt;strong&gt;first edition&lt;/strong&gt; books, &lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS/raw/1st-ed/README.md&#34;&gt;they can be found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Titles&lt;/h2&gt; &#xA;&lt;p&gt;I recommend reading the &lt;strong&gt;second edition&lt;/strong&gt; books in this order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/get-started/README.md&#34;&gt;Get Started&lt;/a&gt; | &lt;a href=&#34;https://leanpub.com/ydkjsy-get-started&#34;&gt;Buy on Leanpub&lt;/a&gt; | &lt;a href=&#34;https://www.amazon.com/dp/B084BNMN7T&#34;&gt;Buy on Amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/scope-closures/README.md&#34;&gt;Scope &amp;amp; Closures&lt;/a&gt; | &lt;a href=&#34;https://leanpub.com/ydkjsy-scope-closures&#34;&gt;Buy on Leanpub&lt;/a&gt; | &lt;a href=&#34;https://www.amazon.com/dp/B08634PZ3N&#34;&gt;Buy on Amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/objects-classes/README.md&#34;&gt;Objects &amp;amp; Classes&lt;/a&gt; (draft stable)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/types-grammar/README.md&#34;&gt;Types &amp;amp; Grammar&lt;/a&gt; (draft in progress)&lt;/li&gt; &#xA; &lt;li&gt;Sync &amp;amp; Async (not yet started)&lt;/li&gt; &#xA; &lt;li&gt;ES.Next &amp;amp; Beyond (not yet started)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re looking for the previous &lt;strong&gt;first edition&lt;/strong&gt; books, &lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS/raw/1st-ed/README.md&#34;&gt;they can be found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Publishing&lt;/h2&gt; &#xA;&lt;p&gt;As always, you&#39;ll be able to read these books online here entirely for free.&lt;/p&gt; &#xA;&lt;p&gt;This edition of the books is being self-published through &lt;a href=&#34;https://geti.pub&#34;&gt;GetiPub&lt;/a&gt; publishing. The published books will be made available for sale through normal book retail sources.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute financially towards the effort (or any of my other OSS efforts) aside from purchasing the published books, please consider these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/users/getify/sponsorship&#34;&gt;Github Sponsorship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/getify&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/getify&#34;&gt;Paypal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to contribute to the quality of this content by submitting PRs for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing/publishing processes, &lt;strong&gt;so please don&#39;t worry about them right now.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any contributions you make to this effort &lt;strong&gt;are of course greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;But &lt;strong&gt;PLEASE&lt;/strong&gt; read the &lt;a href=&#34;https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/CONTRIBUTING.md&#34;&gt;Contributions Guidelines&lt;/a&gt; carefully before submitting a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Thank You To These Wonderful Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://frontendmasters.com#gh-light-mode-only&#34;&gt;&lt;img src=&#34;https://github.com/getify/You-Dont-Know-JS/raw/2nd-ed/external-logos/fem_logo-light.svg?sanitize=true&#34; alt=&#34;Frontend Masters Logo (dark)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://frontendmasters.com#gh-dark-mode-only&#34;&gt;&lt;img src=&#34;https://github.com/getify/You-Dont-Know-JS/raw/2nd-ed/external-logos/fem_logo.svg?sanitize=true&#34; alt=&#34;Frontend Masters Logo (light)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The first two books of the second edition&lt;/strong&gt; are exclusively sponsored by &lt;strong&gt;&lt;a href=&#34;https://frontendmasters.com&#34;&gt;Frontend Masters&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Frontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I teach &lt;a href=&#34;https://frontendmasters.com/kyle-simpson&#34;&gt;all my workshops&lt;/a&gt; exclusively through Frontend Masters. If you like this book content, please check out my video training courses.&lt;/p&gt; &#xA;&lt;p&gt;I want to extend a warm and deep thanks to Marc Grabanski and the entire Frontend Masters team, not only for their excellent work with the video training platform, but for their unwavering support of me and of the &#34;You Don&#39;t Know JS&#34; books!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License &amp;amp; Copyright&lt;/h2&gt; &#xA;&lt;p&gt;The materials herein are all ¬© 2019-2022 Kyle Simpson.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pynecone-io/pynecone</title>
    <updated>2023-01-21T01:30:40Z</updated>
    <id>tag:github.com,2023-01-21:/pynecone-io/pynecone</id>
    <link href="https://github.com/pynecone-io/pynecone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üï∏Web apps in pure Pythonüêç&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://raw.githubusercontent.com/pynecone-io/pynecone/main/docs/images/logo.svg#gh-light-mode-only&#34; alt=&#34;Pynecone Logo&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://raw.githubusercontent.com/pynecone-io/pynecone/main/docs/images/logo_white.svg#gh-dark-mode-only&#34; alt=&#34;Pynecone Logo&#34;&gt; &lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build performant, customizable web apps in pure Python.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/pynecone-io&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/pynecone-io.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/pynecone-io/pynecone/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/pynecone-io.svg?sanitize=true&#34; alt=&#34;versions&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-yellowgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;  &lt;p&gt;Pynecone is a full-stack Python framework that makes it easy to build and deploy web apps in minutes. All the information for getting started can be found in this README. However, a more detailed explanation of the following topics can be found on our website:&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;h3&gt;&lt;a href=&#34;https://pynecone.io/docs/getting-started/introduction&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://pynecone.io/docs/library&#34;&gt;Component Library&lt;/a&gt; | &lt;a href=&#34;https://pynecone.io/docs/gallery&#34;&gt;Gallery&lt;/a&gt; | &lt;a href=&#34;https://pynecone.io/docs/hosting/deploy&#34;&gt;Deployment&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div align=&#34;left&#34;&gt; &#xA;    &lt;h2&gt;Installation&lt;/h2&gt; &#xA;    &lt;p&gt;Pynecone requires the following to get started:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Python 3.7+&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js 12.22.0+&lt;/a&gt; (Don&#39;t worry, you&#39;ll never have to write any Javascript)&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;pre&gt;&lt;code&gt;$ pip install pynecone-io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; Make sure you install the correct package: &lt;code&gt;pynecone-io&lt;/code&gt;, not &lt;code&gt;pynecone&lt;/code&gt;.&lt;/p&gt; &#xA;    &lt;h2&gt;Create your first Pynecone App&lt;/h2&gt; &#xA;    &lt;p&gt;Installing Pynecone also installs the &lt;code&gt;pc&lt;/code&gt; command line tool. Test that the install was successful by creating a new project.&lt;/p&gt; &#xA;    &lt;p&gt;Replace my_app_name with your project name:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;$ mkdir my_app_name&#xA;$ cd my_app_name&#xA;$ pc init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;When you run this command for the first time, we will download and install &lt;code&gt;bun&lt;/code&gt; automatically.&lt;/p&gt; &#xA;    &lt;p&gt;This command initializes a template app in your new directory. You can run this app in development mode:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;$ pc run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;You should see your app running at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;. (Note that the port may be different if you have another app running on port 3000, please notice the terminal output)&lt;/p&gt; &#xA;    &lt;p&gt;Now you can modify the source code in &lt;code&gt;my_app_name/my_app_name.py&lt;/code&gt;. Pynecone has fast refreshes so you can see your changes instantly when you save your code.&lt;/p&gt; &#xA;    &lt;h2&gt;Example Pynecone App&lt;/h2&gt; &#xA;    &lt;p&gt;Let&#39;s go over an example of creating a UI around Dalle. For simplicity of the example below, we call the OpenAI Dalle API, but you could replace this with any ML model locally.&lt;/p&gt; &#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://raw.githubusercontent.com/pynecone-io/pynecone/main/docs/images/dalle.gif&#34; alt=&#34;drawing&#34; width=&#34;550&#34; style=&#34;border-radius:2%&#34;&gt; &#xA;     &lt;div align=&#34;left&#34;&gt; &#xA;      &lt;p&gt;Here is the complete code to create this. This is all done in one Python file!&lt;/p&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pynecone as pc&#xA;import openai&#xA;&#xA;openai.api_key = &#34;YOUR_API_KEY&#34;&#xA;&#xA;class State(pc.State):&#xA;    &#34;&#34;&#34;The app state.&#34;&#34;&#34;&#xA;    prompt = &#34;&#34;&#xA;    image_url = &#34;&#34;&#xA;    image_processing = False&#xA;    image_made = False&#xA;&#xA;    def process_image(self):&#xA;        &#34;&#34;&#34;Set the image processing flag to true and indicate image is not made yet.&#34;&#34;&#34;&#xA;        self.image_processing = True&#xA;        self.image_made = False        &#xA;&#xA;    def get_image(self):&#xA;        &#34;&#34;&#34;Get the image from the prompt.&#34;&#34;&#34;&#xA;        response = openai.Image.create(prompt=self.prompt, n=1, size=&#34;1024x1024&#34;)&#xA;        self.image_url = response[&#34;data&#34;][0][&#34;url&#34;]&#xA;        self.image_processing = False&#xA;        self.image_made = True&#xA;&#xA;def index():&#xA;    return pc.center(&#xA;        pc.vstack(&#xA;            pc.heading(&#34;DALL-E&#34;, font_size=&#34;1.5em&#34;),&#xA;            pc.input(placeholder=&#34;Enter a prompt..&#34;, on_blur=State.set_prompt),&#xA;            pc.button(&#xA;                &#34;Generate Image&#34;,&#xA;                on_click=[State.process_image, State.get_image],&#xA;                width=&#34;100%&#34;,&#xA;            ),&#xA;            pc.divider(),&#xA;            pc.cond(&#xA;                State.image_processing,&#xA;                pc.circular_progress(is_indeterminate=True),&#xA;                pc.cond(&#xA;                     State.image_made,&#xA;                     pc.image(&#xA;                         src=State.image_url,&#xA;                         height=&#34;25em&#34;,&#xA;                         width=&#34;25em&#34;,&#xA;                    )&#xA;                )&#xA;            ),&#xA;            bg=&#34;white&#34;,&#xA;            padding=&#34;2em&#34;,&#xA;            shadow=&#34;lg&#34;,&#xA;            border_radius=&#34;lg&#34;,&#xA;        ),&#xA;        width=&#34;100%&#34;,&#xA;        height=&#34;100vh&#34;,&#xA;        bg=&#34;radial-gradient(circle at 22% 11%,rgba(62, 180, 137,.20),hsla(0,0%,100%,0) 19%)&#34;,&#xA;    )&#xA;&#xA;# Add state and page to the app.&#xA;app = pc.App(state=State)&#xA;app.add_page(index, title=&#34;Pynecone:DALL-E&#34;)&#xA;app.compile()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;Let&#39;s break this down.&lt;/p&gt; &#xA;      &lt;h3&gt;&lt;strong&gt;UI In Pynecone&lt;/strong&gt;&lt;/h3&gt; &#xA;      &lt;p&gt;Lets start by talking about the UI this Pynecone App.&lt;/p&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def index():&#xA;    return pc.center(&#xA;        ...&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;This index function defines the frontend of the app. We use different components such as &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;vstack&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, and &lt;code&gt;button&lt;/code&gt; to build the front end. Components can be nested to create complex layouts and styled using CSS&#39;s full power. Just pass them in as keyword args.&lt;/p&gt; &#xA;      &lt;p&gt;Pynecone comes with &lt;a href=&#34;https://pynecone.io/docs/library&#34;&gt;50+ built-in components&lt;/a&gt; to help you get started. We are actively adding more components, plus it&#39;s easy to create your own components.&lt;/p&gt; &#xA;      &lt;h3&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/h3&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class State(pc.State):&#xA;    &#34;&#34;&#34;The app state.&#34;&#34;&#34;&#xA;    prompt = &#34;&#34;&#xA;    image_url = &#34;&#34;&#xA;    image_processing = False&#xA;    image_made = False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;The state defines all the variables (called vars) in an app that can change and the functions that change them. Here the state is comprised of a &lt;code&gt;prompt&lt;/code&gt; and &lt;code&gt;image_url&lt;/code&gt;. There are also the booleans &lt;code&gt;image_processing&lt;/code&gt; and &lt;code&gt;image_made&lt;/code&gt; to indicate when to show the circular progress and image.&lt;/p&gt; &#xA;      &lt;h3&gt;&lt;strong&gt;Event Handlers&lt;/strong&gt;&lt;/h3&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    def process_image(self):&#xA;        &#34;&#34;&#34;Set the image processing flag to true and indicate image is not made yet.&#34;&#34;&#34;&#xA;        self.image_processing = True&#xA;        self.image_made = False        &#xA;&#xA;    def get_image(self):&#xA;        &#34;&#34;&#34;Get the image from the prompt.&#34;&#34;&#34;&#xA;        response = openai.Image.create(prompt=self.prompt, n=1, size=&#34;1024x1024&#34;)&#xA;        self.image_url = response[&#34;data&#34;][0][&#34;url&#34;]&#xA;        self.image_processing = False&#xA;        self.image_made = True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;Within the state, we define functions called event handlers that change the state vars. Event handlers are the way that we can modify the state in Pynecone. They can be called in response to user actions, such as clicking a button or typing in a text box. These actions are called events.&lt;/p&gt; &#xA;      &lt;p&gt;Our dalle app has two event handlers, &lt;code&gt;process_image&lt;/code&gt; to indicate that the image is being generated and &lt;code&gt;get_image&lt;/code&gt;, which calls the OpenAI API.&lt;/p&gt; &#xA;      &lt;h3&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;/h3&gt; &#xA;      &lt;p&gt;Finally we define our app and tell it what state to use.&lt;/p&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;app = pc.App(state=State)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;We add a route from the root of the app to the index component. We also add a title that will show up in the page preview/ browser tab.&lt;/p&gt; &#xA;      &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;app.add_page(index, title=&#34;Pynecone:DALL-E&#34;)&#xA;app.compile()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;p&gt;You can create a multi-page app by adding more routes.&lt;/p&gt; &#xA;      &lt;h2&gt;Status&lt;/h2&gt; &#xA;      &lt;p&gt;As of December 2022, Pynecone has just been released publicly and is in the &lt;strong&gt;Alpha Stage&lt;/strong&gt;.&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;span&gt;üî∂&lt;/span&gt; &lt;strong&gt;Public Alpha&lt;/strong&gt;: Anyone can install and use Pynecone. There may be issues, but we are working to resolve them activly.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;Public Beta&lt;/strong&gt;: Stable enough for non-enterprise use-cases.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;Public Hosting Beta&lt;/strong&gt;: &lt;strong&gt;Optionally&lt;/strong&gt; Deploy and Host your own apps on Pynecone!&lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;Public&lt;/strong&gt;: Pynecone is production ready.&lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;      &lt;p&gt;Pynecone has new releases and features coming every week! Make sure to: &lt;span&gt;‚≠ê&lt;/span&gt; star and &lt;span&gt;üëÄ&lt;/span&gt; watch this repository to stay up to date.&lt;/p&gt; &#xA;      &lt;h2&gt;Contributing&lt;/h2&gt; &#xA;      &lt;p&gt;We welcome contributions of any size! Below are some good ways to get started in the Pynecone community.&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;: A great way to talk about features you want added or things that are confusing/need clarification.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: These are an excellent way to report bugs. Additionally, you can try and solve an existing issue and submit a PR.&lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;      &lt;p&gt;Want to join our Pynecone team or learn more about our framework? Send us an email &lt;a href=&#34;mailto:founders@pynecone.io&#34;&gt;here&lt;/a&gt;, and we can schedule a call to discuss Pynecone and how you can start contributing.&lt;/p&gt; &#xA;      &lt;p&gt;We are actively looking for contributors, no matter your skill level or experience.&lt;/p&gt; &#xA;      &lt;h2&gt;More Information&lt;/h2&gt; &#xA;      &lt;p&gt;More information about Pynecone can be found on our website:&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://pynecone.io&#34;&gt;pynecone.io&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;      &lt;p&gt;Join Our Discord:&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://discord.gg/T5WSbC2YtQ&#34;&gt;Discord Link&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;      &lt;h2&gt;License&lt;/h2&gt; &#xA;      &lt;p&gt;Pynecone is open-source and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/pynecone-io/pynecone/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;      &lt;h2&gt;Contributors&lt;/h2&gt; &#xA;      &lt;p&gt;&lt;a href=&#34;https://github.com/picklelo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6270214?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Alek99&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38776361?s=400&amp;amp;u=bd6c163fe787c2de1a26c881598e54b67e2482dd&amp;amp;v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kbrgl&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13417496?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Lendemor&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4015177?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FHU-yezi&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50828953?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;     &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;   &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Dimillian/IceCubesApp</title>
    <updated>2023-01-21T01:30:40Z</updated>
    <id>tag:github.com,2023-01-21:/Dimillian/IceCubesApp</id>
    <link href="https://github.com/Dimillian/IceCubesApp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SwiftUI Mastodon client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IceCubesApp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/ice-cubes-for-mastodon/id6444915884&#34;&gt;You can now download it on the App Store&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Dimillian/IceCubesApp/main/Images/promo.png&#34;&gt; &#xA;&lt;p&gt;For contributors and myself, here is a todo list of features that could be added (while giving you a good idea of what&#39;s already done if not in this list, the app is quite complete already!)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[&amp;nbsp;] Editor: Support video types&lt;/li&gt; &#xA; &lt;li&gt;[&amp;nbsp;] Editor: Add photos from camera&lt;/li&gt; &#xA; &lt;li&gt;[&amp;nbsp;] Editor: Support custom emojis&lt;/li&gt; &#xA; &lt;li&gt;[&amp;nbsp;] Edit filters&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support IceCubesApp://any mastodon links&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Translate button / display post language / set post language&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Widgets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;IceCubesApp is an open source application for accessing the decentralized social network Mastodon! It&#39;s built entirely in SwiftUI, making it fast, lightweight, and easy to use.&lt;/p&gt; &#xA;&lt;p&gt;You can connect to any Mastodon instance and browse your timeline, interact with other users, and post updates and media.&lt;/p&gt; &#xA;&lt;p&gt;The project is split into different Swift Packages to make it easier to manage and maintain the codebase. Each package is focused on a specific aspect of the application, such as the UI, network communication, or data models. This modular approach allows for easier collaboration and ensures that the code is organized and easy to understand.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a great starting point for learning SwiftUI. The app covers many of the basic concepts of SwiftUI, such as building layouts, working with data, and handling user interaction. By exploring the code, you can gain a solid understanding of how to use SwiftUI in your daily life. Plus, the open source nature of IceCubesApp means that you can see how real-world applications are built and get a sense of best practices for using SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;The architecture is straightforward MVVM for most parts, no redux on this one ;)&lt;/p&gt; &#xA;&lt;p&gt;Please note that IceCubesApp is currently in an early stage of development and as such, there are many features that are still missing. While the app is functional and can be used to browse and interact with Mastodon, there are still many features that are planned for the future.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Dimillian/IceCubesApp/main/IceCubesApp/Assets.xcassets/AppIcon.appiconset/icon.png?&#34; alt=&#34;Icon&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>