<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-03T01:26:55Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ItzCrazyKns/Perplexica</title>
    <updated>2024-05-03T01:26:55Z</updated>
    <id>tag:github.com,2024-05-03:/ItzCrazyKns/Perplexica</id>
    <link href="https://github.com/ItzCrazyKns/Perplexica" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸš€ Perplexica - An AI-powered search engine ðŸ”Ž &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-screenshot.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents &#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#preview&#34;&gt;Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#getting-started-with-docker-recommended&#34;&gt;Getting Started with Docker (Recommended)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#non-docker-installation&#34;&gt;Non-Docker Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#one-click-deployment&#34;&gt;One-Click Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features&#34;&gt;Upcoming Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#support-us&#34;&gt;Support Us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#help-and-support&#34;&gt;Help and Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it&#39;s an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.&lt;/p&gt; &#xA;&lt;p&gt;Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-preview.gif&#34; alt=&#34;video-preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local LLMs&lt;/strong&gt;: You can make use local LLMs such as Llama3 and Mixtral using Ollama.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Two Main Modes:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Copilot Mode:&lt;/strong&gt; (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user&#39;s query directly from the page.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Normal Mode:&lt;/strong&gt; Processes your query and performs a web search.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Focus Modes:&lt;/strong&gt; Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;All Mode:&lt;/strong&gt; Searches the entire web to find the best results.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Writing Assistant Mode:&lt;/strong&gt; Helpful for writing tasks that does not require searching the web.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Academic Search Mode:&lt;/strong&gt; Finds articles and papers, ideal for academic research.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;YouTube Search Mode:&lt;/strong&gt; Finds YouTube videos based on the search query.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Wolfram Alpha Search Mode:&lt;/strong&gt; Answers queries that need calculations or data analysis using Wolfram Alpha.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reddit Search Mode:&lt;/strong&gt; Searches Reddit for discussions and opinions related to the query.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Current Information:&lt;/strong&gt; Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It has many more features like image and video search. Some of the planned features are mentioned in &lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features&#34;&gt;upcoming features&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started with Docker (Recommended)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure Docker is installed and running on your system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Perplexica repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ItzCrazyKns/Perplexica.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After cloning, navigate to the directory containing the project files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt;. For Docker setups, you need only fill in the following fields:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;OPENAI&lt;/code&gt;: Your OpenAI API key. &lt;strong&gt;You only need to fill this if you wish to use OpenAI&#39;s models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;OLLAMA&lt;/code&gt;: Your Ollama API URL. You should enter it as &lt;code&gt;http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. If you installed Ollama on port 11434, use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;. For other ports, adjust accordingly. &lt;strong&gt;You need to fill this if you wish to use Ollama&#39;s models instead of OpenAI&#39;s&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;GROQ&lt;/code&gt;: Your Groq API key. &lt;strong&gt;You only need to fill this if you wish to use Groq&#39;s hosted models&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can change these after starting Perplexica from the settings dialog.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;SIMILARITY_MEASURE&lt;/code&gt;: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you are in the directory containing the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file and execute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait a few minutes for the setup to complete. You can access Perplexica at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.&lt;/p&gt; &#xA;&lt;h3&gt;Non-Docker Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository and rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt; in the root directory. Ensure you complete all required fields in this file.&lt;/li&gt; &#xA; &lt;li&gt;Rename the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; in the &lt;code&gt;ui&lt;/code&gt; folder and fill in all necessary fields.&lt;/li&gt; &#xA; &lt;li&gt;After populating the configuration and environment files, run &lt;code&gt;npm i&lt;/code&gt; in both the &lt;code&gt;ui&lt;/code&gt; folder and the root directory.&lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies and then execute &lt;code&gt;npm run build&lt;/code&gt; in both the &lt;code&gt;ui&lt;/code&gt; folder and the root directory.&lt;/li&gt; &#xA; &lt;li&gt;Finally, start both the frontend and the backend by running &lt;code&gt;npm run start&lt;/code&gt; in both the &lt;code&gt;ui&lt;/code&gt; folder and the root directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;One-Click Deployment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repocloud.io/details/?app_id=267&#34;&gt;&lt;img src=&#34;https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true&#34; alt=&#34;Deploy to RepoCloud&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Upcoming Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Finalizing Copilot Mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add settings page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Adding support for local LLMs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Adding Discover and History Saving features&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Introducing various Focus Modes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support Us&lt;/h2&gt; &#xA;&lt;p&gt;If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the &lt;a href=&#34;https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file to learn more about Perplexica and how you can contribute to it.&lt;/p&gt; &#xA;&lt;h2&gt;Help and Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. &lt;a href=&#34;https://discord.gg/EFwsmQDgAu&#34;&gt;Click here&lt;/a&gt; to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at &lt;code&gt;itzcrazykns&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don&#39;t forget to check back for updates and new features!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Dokploy/dokploy</title>
    <updated>2024-05-03T01:26:55Z</updated>
    <id>tag:github.com,2024-05-03:/Dokploy/dokploy</id>
    <link href="https://github.com/Dokploy/dokploy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Alternative to Vercel, Netlify and Heroku.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;Dokploy&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;width:100%;&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Dokploy/dokploy/main/logo.png&#34; alt=&#34;Reflex Logo&#34; style=&#34;width:60%;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Dokploy is a free self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases using Docker and Traefik. Designed to enhance efficiency and security, Dokploy allows you to deploy your applications on any VPS.&lt;/p&gt; &#xA;&lt;h2&gt;ðŸŒŸ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Applications&lt;/strong&gt;: Deploy any type of application (Node.js, PHP, Python, Go, Ruby, etc.) with ease.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: Create and manage databases with support for MySQL, PostgreSQL, MongoDB, MariaDB, Redis, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker Management&lt;/strong&gt;: Easily deploy and manage Docker containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Traefik Integration&lt;/strong&gt;: Automatically integrates with Traefik for routing and load balancing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Monitoring&lt;/strong&gt;: Monitor CPU, memory, storage, and network usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Database Backups&lt;/strong&gt;: Automate backups with support for multiple storage destinations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ðŸš€ Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started run the following command in a VPS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://dokploy.com/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tested Systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 20.04&lt;/li&gt; &#xA; &lt;li&gt;Debian 11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ðŸ“„ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed documentation, visit &lt;a href=&#34;https://docs.dokploy.com&#34;&gt;docs.dokploy.com/docs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheOfficialFloW/PPPwn</title>
    <updated>2024-05-03T01:26:55Z</updated>
    <id>tag:github.com,2024-05-03:/TheOfficialFloW/PPPwn</id>
    <link href="https://github.com/TheOfficialFloW/PPPwn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PPPwn - PlayStation 4 PPPoE RCE&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PPPwn - PlayStation 4 PPPoE RCE&lt;/h1&gt; &#xA;&lt;p&gt;PPPwn is a kernel remote code execution exploit for PlayStation 4 upto FW 11.00. This is a proof-of-concept exploit for &lt;a href=&#34;https://hackerone.com/reports/2177925&#34;&gt;CVE-2006-4304&lt;/a&gt; that was reported responsibly to PlayStation.&lt;/p&gt; &#xA;&lt;p&gt;Supported versions are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FW 9.00&lt;/li&gt; &#xA; &lt;li&gt;FW 9.03 / 9.04&lt;/li&gt; &#xA; &lt;li&gt;FW 9.50 / 9.60&lt;/li&gt; &#xA; &lt;li&gt;FW 10.00 / 10.01&lt;/li&gt; &#xA; &lt;li&gt;FW 10.50 / 10.70 / 10.71&lt;/li&gt; &#xA; &lt;li&gt;FW 11.00&lt;/li&gt; &#xA; &lt;li&gt;more can be added (PRs are welcome)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The exploit only prints &lt;code&gt;PPPwned&lt;/code&gt; on your PS4 as a proof-of-concept. In order to launch Mira or similar homebrew enablers, the &lt;code&gt;stage2.bin&lt;/code&gt; payload needs to be adapted.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Computer with Ethernet port &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;USB adapter also works&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ethernet cable&lt;/li&gt; &#xA; &lt;li&gt;Linux &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can use VirtualBox to create a Linux VM with &lt;code&gt;Bridged Adapter&lt;/code&gt; as network adapter to use the ethernet port in the VM.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Python3 and gcc installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;On your computer, clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recursive https://github.com/TheOfficialFloW/PPPwn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the requirements:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compile the payloads:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make -C stage1 FW=1100 clean &amp;amp;&amp;amp; make -C stage1 FW=1100&#xA;make -C stage2 FW=1100 clean &amp;amp;&amp;amp; make -C stage2 FW=1100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other firmwares, e.g. FW 9.00, pass &lt;code&gt;FW=900&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the exploit (see &lt;code&gt;ifconfig&lt;/code&gt; for the correct interface):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo python3 pppwn.py --interface=enp0s3 --fw=1100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other firmwares, e.g. FW 9.00, pass &lt;code&gt;--fw=900&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On your PS4:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Settings&lt;/code&gt; and then &lt;code&gt;Network&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Set Up Internet connection&lt;/code&gt; and choose &lt;code&gt;Use a LAN Cable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;code&gt;Custom&lt;/code&gt; setup and choose &lt;code&gt;PPPoE&lt;/code&gt; for &lt;code&gt;IP Address Settings&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter anything for &lt;code&gt;PPPoE User ID&lt;/code&gt; and &lt;code&gt;PPPoE Password&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;code&gt;Automatic&lt;/code&gt; for &lt;code&gt;DNS Settings&lt;/code&gt; and &lt;code&gt;MTU Settings&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;code&gt;Do Not Use&lt;/code&gt; for &lt;code&gt;Proxy Server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Test Internet Connection&lt;/code&gt; to communicate with your computer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the exploit fails or the PS4 crashes, you can skip the internet setup and simply click on &lt;code&gt;Test Internet Connection&lt;/code&gt;. If the &lt;code&gt;pppwn.py&lt;/code&gt; script is stuck waiting for a request/response, abort it and run it again on your computer, and then click on &lt;code&gt;Test Internet Connection&lt;/code&gt; on your PS4.&lt;/p&gt; &#xA;&lt;p&gt;If the exploit works, you should see an output similar to below, and you should see &lt;code&gt;Cannot connect to network.&lt;/code&gt; followed by &lt;code&gt;PPPwned&lt;/code&gt; printed on your PS4.&lt;/p&gt; &#xA;&lt;h3&gt;Example run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[+] PPPwn - PlayStation 4 PPPoE RCE by theflow&#xA;[+] args: interface=enp0s3 fw=1100 stage1=stage1/stage1.bin stage2=stage2/stage2.bin&#xA;&#xA;[+] STAGE 0: Initialization&#xA;[*] Waiting for PADI...&#xA;[+] pppoe_softc: 0xffffabd634beba00&#xA;[+] Target MAC: xx:xx:xx:xx:xx:xx&#xA;[+] Source MAC: 07:ba:be:34:d6:ab&#xA;[+] AC cookie length: 0x4e0&#xA;[*] Sending PADO...&#xA;[*] Waiting for PADR...&#xA;[*] Sending PADS...&#xA;[*] Waiting for LCP configure request...&#xA;[*] Sending LCP configure ACK...&#xA;[*] Sending LCP configure request...&#xA;[*] Waiting for LCP configure ACK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure NAK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure ACK...&#xA;[*] Sending IPCP configure request...&#xA;[*] Waiting for IPCP configure ACK...&#xA;[*] Waiting for interface to be ready...&#xA;[+] Target IPv6: fe80::2d9:d1ff:febc:83e4&#xA;[+] Heap grooming...done&#xA;&#xA;[+] STAGE 1: Memory corruption&#xA;[+] Pinning to CPU 0...done&#xA;[*] Sending malicious LCP configure request...&#xA;[*] Waiting for LCP configure request...&#xA;[*] Sending LCP configure ACK...&#xA;[*] Sending LCP configure request...&#xA;[*] Waiting for LCP configure ACK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure NAK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure ACK...&#xA;[*] Sending IPCP configure request...&#xA;[*] Waiting for IPCP configure ACK...&#xA;[+] Scanning for corrupted object...found fe80::0fdf:4141:4141:4141&#xA;&#xA;[+] STAGE 2: KASLR defeat&#xA;[*] Defeating KASLR...&#xA;[+] pppoe_softc_list: 0xffffffff884de578&#xA;[+] kaslr_offset: 0x3ffc000&#xA;&#xA;[+] STAGE 3: Remote code execution&#xA;[*] Sending LCP terminate request...&#xA;[*] Waiting for PADI...&#xA;[+] pppoe_softc: 0xffffabd634beba00&#xA;[+] Target MAC: xx:xx:xx:xx:xx:xx&#xA;[+] Source MAC: 97:df:ea:86:ff:ff&#xA;[+] AC cookie length: 0x511&#xA;[*] Sending PADO...&#xA;[*] Waiting for PADR...&#xA;[*] Sending PADS...&#xA;[*] Triggering code execution...&#xA;[*] Waiting for stage1 to resume...&#xA;[*] Sending PADT...&#xA;[*] Waiting for PADI...&#xA;[+] pppoe_softc: 0xffffabd634be9200&#xA;[+] Target MAC: xx:xx:xx:xx:xx:xx&#xA;[+] AC cookie length: 0x0&#xA;[*] Sending PADO...&#xA;[*] Waiting for PADR...&#xA;[*] Sending PADS...&#xA;[*] Waiting for LCP configure request...&#xA;[*] Sending LCP configure ACK...&#xA;[*] Sending LCP configure request...&#xA;[*] Waiting for LCP configure ACK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure NAK...&#xA;[*] Waiting for IPCP configure request...&#xA;[*] Sending IPCP configure ACK...&#xA;[*] Sending IPCP configure request...&#xA;[*] Waiting for IPCP configure ACK...&#xA;&#xA;[+] STAGE 4: Arbitrary payload execution&#xA;[*] Sending stage2 payload...&#xA;[+] Done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes for Mac Apple Silicon Users (arm64 / aarch64)&lt;/h2&gt; &#xA;&lt;p&gt;The code will not compile on Apple Silicon and requires amd64 architecture. There is a workaround using docker which will build the bin files required. Clone this repository to your mac system, then from the repo folder run &lt;code&gt;./build-macarm.sh&lt;/code&gt;.This will build the binaries for PS4 FW 1100 and place the necessary files into the correct folders. To build the binaries for a different version, i.e. 900, run the command as such: &lt;code&gt;./build-macarm.sh 900&lt;/code&gt;. Once built, copy this folder structure into the Linux VM and execute as instructed above. This has been tested using VMware Fusion 13.5.1, with the VM Guest as Ubuntu 24.04, and the host machine is MacOS 14.4.1&lt;/p&gt;</summary>
  </entry>
</feed>