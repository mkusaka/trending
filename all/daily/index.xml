<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-06T01:28:36Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubernetes-sigs/kubespray</title>
    <updated>2025-03-06T01:28:36Z</updated>
    <id>tag:github.com,2025-03-06:/kubernetes-sigs/kubespray</id>
    <link href="https://github.com/kubernetes-sigs/kubespray" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deploy a Production Ready Kubernetes Cluster&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deploy a Production Ready Kubernetes Cluster&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/img/kubernetes-logo.png&#34; alt=&#34;Kubernetes Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, check the documentation at &lt;a href=&#34;https://kubespray.io&#34;&gt;kubespray.io&lt;/a&gt; and join us on the &lt;a href=&#34;https://kubernetes.slack.com&#34;&gt;kubernetes slack&lt;/a&gt;, channel &lt;strong&gt;#kubespray&lt;/strong&gt;. You can get your invite &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can be deployed on &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_providers/aws.md&#34;&gt;AWS&lt;/a&gt;, GCE, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_providers/azure.md&#34;&gt;Azure&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_controllers/openstack.md&#34;&gt;OpenStack&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_controllers/vsphere.md&#34;&gt;vSphere&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_providers/equinix-metal.md&#34;&gt;Equinix Metal&lt;/a&gt; (bare metal), Oracle Cloud Infrastructure (Experimental), or Baremetal&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly available&lt;/strong&gt; cluster&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Composable&lt;/strong&gt; (Choice of the network plugin for instance)&lt;/li&gt; &#xA; &lt;li&gt;Supports most popular &lt;strong&gt;Linux distributions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Continuous integration tests&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Below are several ways to use Kubespray to deploy a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have installed Docker then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;docker run --rm -it --mount type=bind,source=&#34;$(pwd)&#34;/inventory/sample,dst=/inventory \&#xA;  --mount type=bind,source=&#34;${HOME}&#34;/.ssh/id_rsa,dst=/root/.ssh/id_rsa \&#xA;  quay.io/kubespray/kubespray:v2.27.0 bash&#xA;# Inside the container you may now run the kubespray playbooks:&#xA;ansible-playbook -i /inventory/inventory.ini --private-key /root/.ssh/id_rsa cluster.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ansible&lt;/h3&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/getting_started/getting-started.md&#34;&gt;Getting started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Collection&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/ansible/ansible_collection.md&#34;&gt;here&lt;/a&gt; if you wish to use this repository as an Ansible collection&lt;/p&gt; &#xA;&lt;h3&gt;Vagrant&lt;/h3&gt; &#xA;&lt;p&gt;For Vagrant we need to install Python dependencies for provisioning tasks. Check that &lt;code&gt;Python&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;python -V &amp;amp;&amp;amp; pip -V&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this returns the version of the software, you&#39;re good to go. If not, download and install Python from here &lt;a href=&#34;https://www.python.org/downloads/source/&#34;&gt;https://www.python.org/downloads/source/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install Ansible according to &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/ansible/ansible.md#installing-ansible&#34;&gt;Ansible installation guide&lt;/a&gt; then run the following step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/getting_started/comparisons.md&#34;&gt;Kubespray vs ...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/getting_started/getting-started.md&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/getting_started/setting-up-your-first-cluster.md&#34;&gt;Setting up your first cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/ansible/ansible.md&#34;&gt;Ansible inventory and tags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/integration.md&#34;&gt;Integration with existing ansible repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/ansible/vars.md&#34;&gt;Deployment data variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/advanced/dns-stack.md&#34;&gt;DNS stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/ha-mode.md&#34;&gt;HA mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/#network-plugins&#34;&gt;Network plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/developers/vagrant.md&#34;&gt;Vagrant install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/flatcar.md&#34;&gt;Flatcar Container Linux bootstrap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/fcos.md&#34;&gt;Fedora CoreOS bootstrap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/opensuse.md&#34;&gt;openSUSE setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/advanced/downloads.md&#34;&gt;Downloaded artifacts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_providers/equinix-metal.md&#34;&gt;Equinix Metal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_controllers/openstack.md&#34;&gt;OpenStack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/cloud_controllers/vsphere.md&#34;&gt;vSphere&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/large-deployments.md&#34;&gt;Large deployments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/nodes.md&#34;&gt;Adding/replacing a node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/upgrades.md&#34;&gt;Upgrades basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/offline-environment.md&#34;&gt;Air-Gap installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/advanced/ntp.md&#34;&gt;NTP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/hardening.md&#34;&gt;Hardening&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/mirror.md&#34;&gt;Mirror&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/roadmap/roadmap.md&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Linux Distributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flatcar Container Linux by Kinvolk&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian&lt;/strong&gt; Bookworm, Bullseye&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt; 20.04, 22.04, 24.04&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CentOS/RHEL&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/rhel.md#rhel-8&#34;&gt;8, 9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt; 39, 40&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora CoreOS&lt;/strong&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/fcos.md&#34;&gt;fcos Note&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;openSUSE&lt;/strong&gt; Leap 15.x/Tumbleweed&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Oracle Linux&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/rhel.md#rhel-8&#34;&gt;8, 9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alma Linux&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/rhel.md#rhel-8&#34;&gt;8, 9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rocky Linux&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/rhel.md#rhel-8&#34;&gt;8, 9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kylin Linux Advanced Server V10&lt;/strong&gt; (experimental: see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/kylinlinux.md&#34;&gt;kylin linux notes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Amazon Linux 2&lt;/strong&gt; (experimental: see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/amazonlinux.md&#34;&gt;amazon linux notes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UOS Linux&lt;/strong&gt; (experimental: see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/uoslinux.md&#34;&gt;uos linux notes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;openEuler&lt;/strong&gt; (experimental: see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operating_systems/openeuler.md&#34;&gt;openEuler notes&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upstart/SysV init based OS types are not supported.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/kernel-requirements.md&#34;&gt;Kernel requirements&lt;/a&gt; (please read if the OS kernel version is &amp;lt; 4.19).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Components&lt;/h2&gt; &#xA;&lt;!-- BEGIN ANSIBLE MANAGED BLOCK --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes&#34;&gt;kubernetes&lt;/a&gt; v1.32.2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/etcd-io/etcd&#34;&gt;etcd&lt;/a&gt; v3.5.16&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; v26.1&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://containerd.io/&#34;&gt;containerd&lt;/a&gt; v2.0.3&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://cri-o.io/&#34;&gt;cri-o&lt;/a&gt; v1.32.0 (experimental: see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CRI/cri-o.md&#34;&gt;CRI-O Note&lt;/a&gt;. Only on fedora, ubuntu and centos based OS)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Network Plugin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/containernetworking/plugins&#34;&gt;cni-plugins&lt;/a&gt; v1.4.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/projectcalico/calico&#34;&gt;calico&lt;/a&gt; v3.29.2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/cilium/cilium&#34;&gt;cilium&lt;/a&gt; v1.15.9&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/flannel-io/flannel&#34;&gt;flannel&lt;/a&gt; v0.22.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/alauda/kube-ovn&#34;&gt;kube-ovn&lt;/a&gt; v1.12.21&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/cloudnativelabs/kube-router&#34;&gt;kube-router&lt;/a&gt; v2.0.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/k8snetworkplumbingwg/multus-cni&#34;&gt;multus&lt;/a&gt; v4.1.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rajch/weave&#34;&gt;weave&lt;/a&gt; v2.8.7&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kube-vip/kube-vip&#34;&gt;kube-vip&lt;/a&gt; v0.8.0&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Application &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt; v1.15.3&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coredns/coredns&#34;&gt;coredns&lt;/a&gt; v1.11.3&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;ingress-nginx&lt;/a&gt; v1.12.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://argoproj.github.io/&#34;&gt;argocd&lt;/a&gt; v2.11.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt; v3.16.4&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://metallb.universe.tf/&#34;&gt;metallb&lt;/a&gt; v0.13.9&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/distribution/distribution&#34;&gt;registry&lt;/a&gt; v2.8.1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Storage Plugin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/external-storage&#34;&gt;cephfs-provisioner&lt;/a&gt; v2.1.0-k8s1.11&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/external-storage&#34;&gt;rbd-provisioner&lt;/a&gt; v2.1.1-k8s1.11&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&#34;&gt;aws-ebs-csi-plugin&lt;/a&gt; v0.5.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/azuredisk-csi-driver&#34;&gt;azure-csi-plugin&lt;/a&gt; v1.10.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/cloud-provider-openstack/raw/master/docs/cinder-csi-plugin/using-cinder-csi-plugin.md&#34;&gt;cinder-csi-plugin&lt;/a&gt; v1.30.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/gcp-compute-persistent-disk-csi-driver&#34;&gt;gcp-pd-csi-plugin&lt;/a&gt; v1.9.2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rancher/local-path-provisioner&#34;&gt;local-path-provisioner&lt;/a&gt; v0.0.24&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/sig-storage-local-static-provisioner&#34;&gt;local-volume-provisioner&lt;/a&gt; v2.5.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/node-feature-discovery&#34;&gt;node-feature-discovery&lt;/a&gt; v0.16.4&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END ANSIBLE MANAGED BLOCK --&gt; &#xA;&lt;h2&gt;Container Runtime Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The cri-o version should be aligned with the respective kubernetes version (i.e. kube_version=1.20.x, crio_version=1.20)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimum required version of Kubernetes is v1.30&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ansible v2.14+, Jinja 2.11+ and python-netaddr is installed on the machine that will run Ansible commands&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;The target servers must have &lt;strong&gt;access to the Internet&lt;/strong&gt; in order to pull docker images. Otherwise, additional configuration is required (See &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/operations/offline-environment.md&#34;&gt;Offline Environment&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The target servers are configured to allow &lt;strong&gt;IPv4 forwarding&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If using IPv6 for pods and services, the target servers are configured to allow &lt;strong&gt;IPv6 forwarding&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;firewalls are not managed&lt;/strong&gt;, you&#39;ll need to implement your own rules the way you used to. in order to avoid any issue during deployment you should disable your firewall.&lt;/li&gt; &#xA; &lt;li&gt;If kubespray is run from non-root user account, correct privilege escalation method should be configured in the target servers. Then the &lt;code&gt;ansible_become&lt;/code&gt; flag or command parameters &lt;code&gt;--become or -b&lt;/code&gt; should be specified.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hardware: These limits are safeguarded by Kubespray. Actual requirements for your workload can differ. For a sizing guide go to the &lt;a href=&#34;https://kubernetes.io/docs/setup/cluster-large/#size-of-master-and-master-components&#34;&gt;Building Large Clusters&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Control Plane &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Memory: 2 GB&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Worker Node &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Memory: 1 GB&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Network Plugins&lt;/h2&gt; &#xA;&lt;p&gt;You can choose among ten network plugins. (default: &lt;code&gt;calico&lt;/code&gt;, except Vagrant uses &lt;code&gt;flannel&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/flannel.md&#34;&gt;flannel&lt;/a&gt;: gre/vxlan (layer 2) networking.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.tigera.io/calico/latest/about/&#34;&gt;Calico&lt;/a&gt; is a networking and network policy provider. Calico supports a flexible set of networking options designed to give you the most efficient networking across a range of situations, including non-overlay and overlay networks, with or without BGP. Calico uses the same engine to enforce network policy for hosts, pods, and (if using Istio and Envoy) applications at the service mesh layer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://docs.cilium.io/en/latest/&#34;&gt;cilium&lt;/a&gt;: layer 3/4 networking (as well as layer 7 to protect and secure application protocols), supports dynamic insertion of BPF bytecode into the Linux kernel to implement security services, networking and visibility logic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/weave.md&#34;&gt;weave&lt;/a&gt;: Weave is a lightweight container overlay network that doesn&#39;t require an external K/V database cluster. (Please refer to &lt;code&gt;weave&lt;/code&gt; &lt;a href=&#34;https://www.weave.works/docs/net/latest/troubleshooting/&#34;&gt;troubleshooting documentation&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/kube-ovn.md&#34;&gt;kube-ovn&lt;/a&gt;: Kube-OVN integrates the OVN-based Network Virtualization with Kubernetes. It offers an advanced Container Network Fabric for Enterprises.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/kube-router.md&#34;&gt;kube-router&lt;/a&gt;: Kube-router is a L3 CNI for Kubernetes networking aiming to provide operational simplicity and high performance: it uses IPVS to provide Kube Services Proxy (if setup to replace kube-proxy), iptables for network policies, and BGP for ods L3 networking (with optionally BGP peering with out-of-cluster BGP peers). It can also optionally advertise routes to Kubernetes cluster Pods CIDRs, ClusterIPs, ExternalIPs and LoadBalancerIPs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/macvlan.md&#34;&gt;macvlan&lt;/a&gt;: Macvlan is a Linux network driver. Pods have their own unique Mac and Ip address, connected directly the physical (layer 2) network.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/CNI/multus.md&#34;&gt;multus&lt;/a&gt;: Multus is a meta CNI plugin that provides multiple network interface support to pods. For each interface Multus delegates CNI calls to secondary CNI plugins such as Calico, macvlan, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/roles/network-plugin/custom_cni/&#34;&gt;custom_cni&lt;/a&gt; : You can specify some manifests that will be applied to the clusters to bring you own CNI and use non-supported ones by Kubespray. See &lt;code&gt;tests/files/custom_cni/README.md&lt;/code&gt; and &lt;code&gt;tests/files/custom_cni/values.yaml&lt;/code&gt;for an example with a CNI provided by a Helm Chart.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The network plugin to use is defined by the variable &lt;code&gt;kube_network_plugin&lt;/code&gt;. There is also an option to leverage built-in cloud provider networking instead. See also &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/advanced/netcheck.md&#34;&gt;Network checker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ingress Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.github.io/ingress-nginx&#34;&gt;nginx&lt;/a&gt;: the NGINX Ingress Controller.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/ingress/metallb.md&#34;&gt;metallb&lt;/a&gt;: the MetalLB bare-metal service LoadBalancer provider.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community docs and resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubespray/&#34;&gt;kubernetes.io/docs/setup/production-environment/tools/kubespray/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gregbkr/kubernetes-kargo-logging-monitoring&#34;&gt;kubespray, monitoring and logging&lt;/a&gt; by @gregbkr&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rsmitty.github.io/Terraform-Ansible-Kubernetes/&#34;&gt;Deploy Kubernetes w/ Ansible &amp;amp; Terraform&lt;/a&gt; by @rsmitty&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CJ5G4GpqDy0&#34;&gt;Deploy a Kubernetes Cluster with Kubespray (video)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools and projects on top of Kubespray&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/digitalrebar/provision/raw/v4/doc/integrations/ansible.rst&#34;&gt;Digital Rebar Provision&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kubespray/tree/master/contrib/terraform&#34;&gt;Terraform Contrib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubean-io/kubean&#34;&gt;Kubean&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CI Tests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/kargo-ci/kubernetes-sigs-kubespray/-/pipelines&#34;&gt;&lt;img src=&#34;https://gitlab.com/kargo-ci/kubernetes-sigs-kubespray/badges/master/pipeline.svg?sanitize=true&#34; alt=&#34;Build graphs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CI/end-to-end tests sponsored by: &lt;a href=&#34;https://cncf.io&#34;&gt;CNCF&lt;/a&gt;, &lt;a href=&#34;https://metal.equinix.com/&#34;&gt;Equinix Metal&lt;/a&gt;, &lt;a href=&#34;https://www.ovhcloud.com/&#34;&gt;OVHcloud&lt;/a&gt;, &lt;a href=&#34;https://elastx.se/&#34;&gt;ELASTX&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kubespray/master/docs/developers/test_cases.md&#34;&gt;test matrix&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>commixproject/commix</title>
    <updated>2025-03-06T01:28:36Z</updated>
    <id>tag:github.com,2025-03-06:/commixproject/commix</id>
    <link href="https://github.com/commixproject/commix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated All-in-One OS Command Injection Exploitation Tool.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;left&#34;&gt; &lt;img alt=&#34;CommixProject&#34; src=&#34;https://commixproject.com/images/logo.png&#34; height=&#34;120&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://github.com/commixproject/commix/actions/workflows/builds.yml&#34;&gt;&lt;img alt=&#34;Builds Tests&#34; src=&#34;https://github.com/commixproject/commix/actions/workflows/builds.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.python.org/download/&#34;&gt;&lt;img alt=&#34;Python 2.6|2.7|3.x&#34; src=&#34;https://img.shields.io/badge/python-2.6%7C2.7%7C3.x-yellow.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/commixproject/commix/raw/master/LICENSE.txt&#34;&gt;&lt;img alt=&#34;GPLv3 License&#34; src=&#34;https://img.shields.io/badge/license-GPLv3-red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/commixproject/commix/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img alt=&#34;GitHub closed issues&#34; src=&#34;https://img.shields.io/github/issues-closed-raw/commixproject/commix.svg?colorB=ff0000&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/commixproject&#34;&gt;&lt;img alt=&#34;X&#34; src=&#34;https://img.shields.io/badge/x-@commixproject-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Commix&lt;/strong&gt; (short for [&lt;strong&gt;comm&lt;/strong&gt;]and [&lt;strong&gt;i&lt;/strong&gt;]njection e[&lt;strong&gt;x&lt;/strong&gt;]ploiter) is an open source penetration testing tool, written by &lt;strong&gt;&lt;a href=&#34;https://github.com/stasinopoulos&#34;&gt;Anastasios Stasinopoulos&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt;&lt;a href=&#34;https://x.com/ancst&#34;&gt;@ancst&lt;/a&gt;&lt;/strong&gt;), that automates the detection and exploitation of &lt;strong&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Command_Injection&#34;&gt;command injection&lt;/a&gt;&lt;/strong&gt; vulnerabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://commixproject.com/images/background.png&#34; alt=&#34;Screenshot&#34;&gt; You can visit the &lt;a href=&#34;https://github.com/commixproject/commix/wiki/Screenshots&#34;&gt;collection of screenshots&lt;/a&gt; demonstrating some of the features on the wiki.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can download commix on any platform by cloning the official Git repository :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/commixproject/commix.git commix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can download the latest &lt;a href=&#34;https://github.com/commixproject/commix/tarball/master&#34;&gt;tarball&lt;/a&gt; or &lt;a href=&#34;https://github.com/commixproject/commix/zipball/master&#34;&gt;zipball&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;http://www.python.org/download/&#34;&gt;Python&lt;/a&gt;&lt;/strong&gt; (version &lt;strong&gt;2.6&lt;/strong&gt;, &lt;strong&gt;2.7&lt;/strong&gt; or &lt;strong&gt;3.x&lt;/strong&gt;) is required for running commix.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To get a list of all options and switches use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python commix.py -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get an overview of commix available options, switches and/or basic ideas on how to use commix, check &lt;strong&gt;&lt;a href=&#34;https://github.com/commixproject/commix/wiki/Usage&#34;&gt;usage&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com/commixproject/commix/wiki/Usage-Examples&#34;&gt;usage examples&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/commixproject/commix/wiki/Filters-Bypasses&#34;&gt;filters bypasses&lt;/a&gt;&lt;/strong&gt; wiki pages.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User&#39;s manual: &lt;a href=&#34;https://github.com/commixproject/commix/wiki&#34;&gt;https://github.com/commixproject/commix/wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues tracker: &lt;a href=&#34;https://github.com/commixproject/commix/issues&#34;&gt;https://github.com/commixproject/commix/issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commixproject/commix/raw/master/doc/translations/README-fa-FA.md&#34;&gt;Farsi(Persian)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commixproject/commix/raw/master/doc/translations/README-gr-GR.md&#34;&gt;Greek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commixproject/commix/raw/master/doc/translations/README-idn-IDN.md&#34;&gt;Indonesian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commixproject/commix/raw/master/doc/translations/README-tr-TR.md&#34;&gt;Turkish&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cloudwego/eino</title>
    <updated>2025-03-06T01:28:36Z</updated>
    <id>tag:github.com,2025-03-06:/cloudwego/eino</id>
    <link href="https://github.com/cloudwego/eino" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ultimate LLM/AI application development framework in Golang.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eino&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/badges/.badges/main/coverage.svg?sanitize=true&#34; alt=&#34;coverage&#34;&gt; &lt;a href=&#34;https://github.com/cloudwego/eino/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/cloudwego/eino&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cloudwego.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?up_message=cloudwego&amp;amp;url=https%3A%2F%2Fwww.cloudwego.io%2F&#34; alt=&#34;WebSite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/eino/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cloudwego/eino&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cloudwego/eino&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cloudwego/eino&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/kitex/eino&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/cloudwego/eino&#34; alt=&#34;OpenIssue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/eino/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/cloudwego/eino&#34; alt=&#34;ClosedIssue&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/cloudwego/eino&#34; alt=&#34;Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/cloudwego/eino&#34; alt=&#34;Forks&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/README.zh_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Eino[&#39;aino]&lt;/strong&gt; (pronounced similarly to &#34;I know&#34;) aims to be the ultimate LLM application development framework in Golang. Drawing inspirations from many excellent LLM application development frameworks in the open-source community such as LangChain &amp;amp; LlamaIndex, etc., as well as learning from cutting-edge research and real world applications, Eino offers an LLM application development framework that emphasizes on simplicity, scalability, reliability and effectiveness that better aligns with Golang programming conventions.&lt;/p&gt; &#xA;&lt;p&gt;What Eino provides are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a carefully curated list of &lt;strong&gt;component&lt;/strong&gt; abstractions and implementations that can be easily reused and combined to build LLM applications&lt;/li&gt; &#xA; &lt;li&gt;a powerful &lt;strong&gt;composition&lt;/strong&gt; framework that does the heavy lifting of strong type checking, stream processing, concurrency management, aspect injection, option assignment, etc. for the user.&lt;/li&gt; &#xA; &lt;li&gt;a set of meticulously designed &lt;strong&gt;API&lt;/strong&gt; that obsesses on simplicity and clarity.&lt;/li&gt; &#xA; &lt;li&gt;an ever-growing collection of best practices in the form of bundled &lt;strong&gt;flows&lt;/strong&gt; and &lt;strong&gt;examples&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;a useful set of tools that covers the entire development cycle, from visualized development and debugging to online tracing and evaluation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With the above arsenal, Eino can standardize, simplify, and improve efficiency at different stages of the AI application development cycle: &lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_concept.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;A quick walkthrough&lt;/h1&gt; &#xA;&lt;p&gt;Use a component directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;model, _ := openai.NewChatModel(ctx, config) // create an invokable LLM instance&#xA;message, _ := model.Generate(ctx, []*Message{&#xA;    SystemMessage(&#34;you are a helpful assistant.&#34;),&#xA;    UserMessage(&#34;what does the future AI App look like?&#34;)})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, you can do that, Eino provides lots of useful components to use out of the box. But you can do more by using orchestration, for three reasons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;orchestration encapsulates common patterns of LLM application.&lt;/li&gt; &#xA; &lt;li&gt;orchestration solves the difficult problem of processing stream response by the LLM.&lt;/li&gt; &#xA; &lt;li&gt;orchestration handles type safety, concurrency management, aspect injection and option assignment for you.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Eino provides two set of APIs for orchestration&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;API&lt;/th&gt; &#xA;   &lt;th&gt;Characteristics and usage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chain&lt;/td&gt; &#xA;   &lt;td&gt;Simple chained directed graph that can only go forward.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Graph&lt;/td&gt; &#xA;   &lt;td&gt;Cyclic or Acyclic directed graph. Powerful and flexible.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Let&#39;s create a simple chain: a ChatTemplate followed by a ChatModel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/simple_chain.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;chain, _ := NewChain[map[string]any, *Message]().&#xA;           AppendChatTemplate(prompt).&#xA;           AppendChatModel(model).&#xA;           Compile(ctx)&#xA;&#xA;chain.Invoke(ctx, map[string]any{&#34;query&#34;: &#34;what&#39;s your name?&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let&#39;s create a graph that uses a ChatModel to generate answer or tool calls, then uses a ToolsNode to execute those tools if needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/tool_call_graph.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;graph := NewGraph[map[string]any, *schema.Message]()&#xA;&#xA;_ = graph.AddChatTemplateNode(&#34;node_template&#34;, chatTpl)&#xA;_ = graph.AddChatModelNode(&#34;node_model&#34;, chatModel)&#xA;_ = graph.AddToolsNode(&#34;node_tools&#34;, toolsNode)&#xA;_ = graph.AddLambdaNode(&#34;node_converter&#34;, takeOne)&#xA;&#xA;_ = graph.AddEdge(START, &#34;node_template&#34;)&#xA;_ = graph.AddEdge(&#34;node_template&#34;, &#34;node_model&#34;)&#xA;_ = graph.AddBranch(&#34;node_model&#34;, branch)&#xA;_ = graph.AddEdge(&#34;node_tools&#34;, &#34;node_converter&#34;)&#xA;_ = graph.AddEdge(&#34;node_converter&#34;, END)&#xA;&#xA;compiledGraph, err := graph.Compile(ctx)&#xA;if err != nil {&#xA;return err&#xA;}&#xA;out, err := r.Invoke(ctx, map[string]any{&#34;query&#34;:&#34;Beijing&#39;s weather this weekend&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let&#39;s create a &#39;ReAct&#39; agent: A ChatModel binds to Tools. It receives input Messages and decides independently whether to call the Tool or output the final result. The execution result of the Tool will again become the input Message for the ChatModel and serve as the context for the next round of independent judgment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/react.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We provide a complete implementation for ReAct Agent out of the box in the &lt;code&gt;flow&lt;/code&gt; package. Check out the code here: &lt;a href=&#34;https://github.com/cloudwego/eino/raw/main/flow/agent/react/react.go&#34;&gt;flow/agent/react&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our implementation of ReAct Agent uses Eino&#39;s &lt;strong&gt;graph orchestration&lt;/strong&gt; exclusively, which provides the following benefits out of the box:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type checking: it makes sure the two nodes&#39; input and output types match at compile time.&lt;/li&gt; &#xA; &lt;li&gt;Stream processing: concatenates message stream before passing to chatModel and toolsNode if needed, and copies the stream into callback handlers.&lt;/li&gt; &#xA; &lt;li&gt;Concurrency management: the shared state can be safely read and written because the StatePreHandler is concurrency safe.&lt;/li&gt; &#xA; &lt;li&gt;Aspect injection: injects callback aspects before and after the execution of ChatModel if the specified ChatModel implementation hasn&#39;t injected itself.&lt;/li&gt; &#xA; &lt;li&gt;Option assignment: call options are assigned either globally, to specific component type or to specific node.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, you could easily extend the compiled graph with callbacks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;handler := NewHandlerBuilder().&#xA;  OnStartFn(&#xA;    func(ctx context.Context, info *RunInfo, input CallbackInput) context.Context) {&#xA;        log.Infof(&#34;onStart, runInfo: %v, input: %v&#34;, info, input)&#xA;    }).&#xA;  OnEndFn(&#xA;    func(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context) {&#xA;        log.Infof(&#34;onEnd, runInfo: %v, out: %v&#34;, info, output)&#xA;    }).&#xA;  Build()&#xA;  &#xA;compiledGraph.Invoke(ctx, input, WithCallbacks(handler))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you could easily assign options to different nodes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;// assign to All nodes&#xA;compiledGraph.Invoke(ctx, input, WithCallbacks(handler))&#xA;&#xA;// assign only to ChatModel nodes&#xA;compiledGraph.Invoke(ctx, input, WithChatModelOption(WithTemperature(0.5))&#xA;&#xA;// assign only to node_1&#xA;compiledGraph.Invoke(ctx, input, WithCallbacks(handler).DesignateNode(&#34;node_1&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Key Features&lt;/h1&gt; &#xA;&lt;h2&gt;Rich Components&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Encapsulates common building blocks into &lt;strong&gt;component abstractions&lt;/strong&gt;, each have multiple &lt;strong&gt;component implementations&lt;/strong&gt; that are ready to be used out of the box.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;component abstractions such as ChatModel, Tool, ChatTemplate, Retriever, Document Loader, Lambda, etc.&lt;/li&gt; &#xA;   &lt;li&gt;each component type has an interface of its own: defined Input &amp;amp; Output Type, defined Option type, and streaming paradigms that make sense.&lt;/li&gt; &#xA;   &lt;li&gt;implementations are transparent. Abstractions are all you care about when orchestrating components together.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Implementations can be nested and captures complex business logic.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ReAct Agent, MultiQueryRetriever, Host MultiAgent, etc. They consist of multiple components and non-trivial business logic.&lt;/li&gt; &#xA;   &lt;li&gt;They are still transparent from the outside. A MultiQueryRetriever can be used anywhere that accepts a Retriever.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Powerful Orchestration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data flows from Retriever / Document Loaders / ChatTemplate to ChatModel, then flows to Tools and parsed as Final Answer. This directed, controlled flow of data through multiple components can be implemented through &lt;strong&gt;graph orchestration&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Component instances are graph nodes, and edges are data flow channels.&lt;/li&gt; &#xA; &lt;li&gt;Graph orchestration is powerful and flexible enough to implement complex business logic: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;type checking, stream processing, concurrency management, aspect injection and option assignment are handled by the framework.&lt;/li&gt; &#xA;   &lt;li&gt;branch out execution at runtime, read and write global state, or do field level data mapping using workflow(currently in alpha stage).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Complete Stream Processing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stream processing is important because ChatModel outputs chunks of messages in real time as it generates them. It&#39;s especially important with orchestration because more components need to handle streaming data.&lt;/li&gt; &#xA; &lt;li&gt;Eino automatically &lt;strong&gt;concatenates&lt;/strong&gt; stream chunks for downstream nodes that only accepts non-stream input, such as ToolsNode.&lt;/li&gt; &#xA; &lt;li&gt;Eino automatically &lt;strong&gt;boxes&lt;/strong&gt; non stream into stream when stream is needed during graph execution.&lt;/li&gt; &#xA; &lt;li&gt;Eino automatically &lt;strong&gt;merges&lt;/strong&gt; multiple streams as they converge into a single downward node.&lt;/li&gt; &#xA; &lt;li&gt;Eino automatically &lt;strong&gt;copies&lt;/strong&gt; stream as they fan out to different downward node, or is passed to callback handlers.&lt;/li&gt; &#xA; &lt;li&gt;Orchestration elements such as &lt;strong&gt;branch&lt;/strong&gt; and &lt;strong&gt;state handlers&lt;/strong&gt; are also stream aware.&lt;/li&gt; &#xA; &lt;li&gt;With these streaming processing abilities, the streaming paradigms of components themselves become transparent to the user.&lt;/li&gt; &#xA; &lt;li&gt;A compiled Graph can run with 4 different streaming paradigms:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Streaming Paradigm&lt;/th&gt; &#xA;   &lt;th&gt;Explanation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Invoke&lt;/td&gt; &#xA;   &lt;td&gt;Accepts non-stream type I and returns non-stream type O&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stream&lt;/td&gt; &#xA;   &lt;td&gt;Accepts non-stream type I and returns stream type StreamReader[O]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collect&lt;/td&gt; &#xA;   &lt;td&gt;Accepts stream type StreamReader[I] and returns non-stream type O&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transform&lt;/td&gt; &#xA;   &lt;td&gt;Accepts stream type StreamReader[I] and returns stream type StreamReader[O]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Highly Extensible Aspects (Callbacks)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Aspects handle cross-cutting concerns such as logging, tracing, metrics, etc., as well as exposing internal details of component implementations.&lt;/li&gt; &#xA; &lt;li&gt;Five aspects are supported: &lt;strong&gt;OnStart, OnEnd, OnError, OnStartWithStreamInput, OnEndWithStreamOutput&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Developers can easily create custom callback handlers, add them during graph run via options, and they will be invoked during graph run.&lt;/li&gt; &#xA; &lt;li&gt;Graph can also inject aspects to those component implementations that do not support callbacks on their own.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Eino Framework Structure&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_framework.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Eino framework consists of several parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Eino(this repo): Contains Eino&#39;s type definitions, streaming mechanism, component abstractions, orchestration capabilities, aspect mechanisms, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cloudwego/eino-ext&#34;&gt;EinoExt&lt;/a&gt;: Component implementations, callback handlers implementations, component usage examples, and various tools such as evaluators, prompt optimizers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cloudwego/eino-ext/tree/main/devops&#34;&gt;Eino Devops&lt;/a&gt;: visualized developing, visualized debugging etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cloudwego/eino-examples&#34;&gt;EinoExamples&lt;/a&gt; is the repo containing example applications and best practices for Eino.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Detailed Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For learning and using Eino, we provide a comprehensive Eino User Manual to help you quickly understand the concepts in Eino and master the skills of developing AI applications based on Eino. Start exploring through the &lt;a href=&#34;https://www.cloudwego.io/zh/docs/eino/&#34;&gt;Eino User Manual&lt;/a&gt; now!&lt;/p&gt; &#xA;&lt;p&gt;For a quick introduction to building AI applications with Eino, we recommend starting with &lt;a href=&#34;https://www.cloudwego.io/zh/docs/eino/quick_start/&#34;&gt;Eino: Quick Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go 1.18 and above.&lt;/li&gt; &#xA; &lt;li&gt;Eino relies on &lt;a href=&#34;https://github.com/getkin/kin-openapi&#34;&gt;kin-openapi&lt;/a&gt; &#39;s OpenAPI JSONSchema implementation. In order to remain compatible with Go 1.18, we have fixed kin-openapi&#39;s version to be v0.118.0.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a potential security issue in this project, or think you may have discovered a security issue, we ask that you notify Bytedance Security via our &lt;a href=&#34;https://security.bytedance.com/src&#34;&gt;security center&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/sec@bytedance.com&#34;&gt;vulnerability reporting email&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; &#xA;&lt;h2&gt;Contact US&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to become a member: &lt;a href=&#34;https://github.com/cloudwego/community/raw/main/COMMUNITY_MEMBERSHIP.md&#34;&gt;COMMUNITY MEMBERSHIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/cloudwego/eino/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lark: Scan the QR code below with &lt;a href=&#34;https://www.feishu.cn/en/&#34;&gt;Register Feishu&lt;/a&gt; to join our CloudWeGo/eino user group.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;    &lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/lark_group_zh.png&#34; alt=&#34;LarkGroup&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/eino/main/LICENSE.txt&#34;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>