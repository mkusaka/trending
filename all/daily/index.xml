<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-30T01:29:27Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/devicescript</title>
    <updated>2023-05-30T01:29:27Z</updated>
    <id>tag:github.com,2023-05-30:/microsoft/devicescript</id>
    <link href="https://github.com/microsoft/devicescript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TypeScript for Tiny IoT Devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeviceScript&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;TypeScript for Tiny IoT Devices.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;DeviceScript brings a professional TypeScript developer experience to low-resource microcontroller-based devices. DeviceScript is compiled to a custom VM bytecode, which can run in very constrained environments.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microsoft.github.io/devicescript&#34;&gt;Read the documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Technical Preview - Join the &lt;a href=&#34;https://github.com/microsoft/devicescript/discussions&#34;&gt;discussions&lt;/a&gt; to provide feedback. **&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/4175913/228997575-122d6ad0-f37e-4d4e-ab79-3d8f680ed99d.mp4&#34;&gt;https://user-images.githubusercontent.com/4175913/228997575-122d6ad0-f37e-4d4e-ab79-3d8f680ed99d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/devicescript/main/CONTRIBUTING.md&#34;&gt;contributing page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MineDojo/Voyager</title>
    <updated>2023-05-30T01:29:27Z</updated>
    <id>tag:github.com,2023-05-30:/MineDojo/Voyager</id>
    <link href="https://github.com/MineDojo/Voyager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Open-Ended Embodied Agent with Large Language Models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Voyager: An Open-Ended Embodied Agent with Large Language Models&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://voyager.minedojo.org/&#34;&gt;[Website]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2305.16291&#34;&gt;[Arxiv]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/pdf/2305.16291.pdf&#34;&gt;[PDF]&lt;/a&gt; &lt;a href=&#34;https://twitter.com/DrJimFan/status/1662115266933972993?s=20&#34;&gt;[Tweet]&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MineDojo/Voyager&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.9-blue.svg?sanitize=true&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MineDojo/Voyager/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/MineDojo/Voyager&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MineDojo/Voyager/assets/25460983/ce29f45b-43a5-4399-8fd8-5dd105fd64f2&#34;&gt;https://github.com/MineDojo/Voyager/assets/25460983/ce29f45b-43a5-4399-8fd8-5dd105fd64f2&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MineDojo/Voyager/main/images/pull.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;We introduce Voyager, the first LLM-powered embodied lifelong learning agent in Minecraft that continuously explores the world, acquires diverse skills, and makes novel discoveries without human intervention. Voyager consists of three key components: 1) an automatic curriculum that maximizes exploration, 2) an ever-growing skill library of executable code for storing and retrieving complex behaviors, and 3) a new iterative prompting mechanism that incorporates environment feedback, execution errors, and self-verification for program improvement. Voyager interacts with GPT-4 via blackbox queries, which bypasses the need for model parameter fine-tuning. The skills developed by Voyager are temporally extended, interpretable, and compositional, which compounds the agent’s abilities rapidly and alleviates catastrophic forgetting. Empirically, Voyager shows strong in-context lifelong learning capability and exhibits exceptional proficiency in playing Minecraft. It obtains 3.3× more unique items, travels 2.3× longer distances, and unlocks key tech tree milestones up to 15.3× faster than prior SOTA. Voyager is able to utilize the learned skill library in a new Minecraft world to solve novel tasks from scratch, while other techniques struggle to generalize.&lt;/p&gt; &#xA;&lt;p&gt;In this repo, we provide Voyager code. This codebase is under &lt;a href=&#34;https://raw.githubusercontent.com/MineDojo/Voyager/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Voyager requires Python ≥ 3.9 and Node.js ≥ 16.13.0. We have tested on Ubuntu 20.04, Windows 11, and macOS. You need to follow the instructions below to install Voyager.&lt;/p&gt; &#xA;&lt;h2&gt;Python Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/MineDojo/Voyager&#xA;cd Voyager&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Node.js Install&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the Python dependencies, you need to install the following Node.js packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd voyager/env/mineflayer&#xA;npm install -g npx&#xA;npm install&#xA;cd mineflayer-collectblock&#xA;npx tsc&#xA;cd ..&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Minecraft Instance Install&lt;/h2&gt; &#xA;&lt;p&gt;Voyager depends on Minecraft game. You need to install Minecraft game and set up a Minecraft instance.&lt;/p&gt; &#xA;&lt;p&gt;Follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/MineDojo/Voyager/main/installation/minecraft_instance_install.md&#34;&gt;Minecraft Login Tutorial&lt;/a&gt; to set up your Minecraft Instance.&lt;/p&gt; &#xA;&lt;h2&gt;Fabric Mods Install&lt;/h2&gt; &#xA;&lt;p&gt;You need to install fabric mods to support all the features in Voyager. Remember to use the correct Fabric version of all the mods.&lt;/p&gt; &#xA;&lt;p&gt;Follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/MineDojo/Voyager/main/installation/fabric_mods_install.md&#34;&gt;Fabric Mods Install&lt;/a&gt; to install the mods.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Voyager uses OpenAI&#39;s GPT-4 as the language model. You need to have an OpenAI API key to use Voyager. You can get one from &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After the installation process, you can run Voyager by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from voyager import Voyager&#xA;&#xA;# you can also use mc_port instead of azure_login, but azure_login is highly recommended&#xA;azure_login = {&#xA;    &#34;client_id&#34;: &#34;YOUR_CLIENT_ID&#34;,&#xA;    &#34;redirect_url&#34;: &#34;https://127.0.0.1/auth-response&#34;,&#xA;    &#34;secret_value&#34;: &#34;[OPTIONAL] YOUR_SECRET_VALUE&#34;,&#xA;    &#34;version&#34;: &#34;fabric-loader-0.14.18-1.19&#34;, # the version Voyager is tested on&#xA;}&#xA;openai_api_key = &#34;YOUR_API_KEY&#34;&#xA;&#xA;voyager = Voyager(&#xA;    azure_login=azure_login,&#xA;    openai_api_key=openai_api_key,&#xA;)&#xA;&#xA;# start lifelong learning&#xA;voyager.learn()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are running with &lt;code&gt;Azure Login&lt;/code&gt; for the first time, it will ask you to follow the command line instruction to generate a config file.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;Azure Login&lt;/code&gt;, you also need to select the world and open the world to LAN by yourself. After you run &lt;code&gt;voyager.learn()&lt;/code&gt; the game will pop up soon, you need to: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Select &lt;code&gt;Singleplayer&lt;/code&gt; and press &lt;code&gt;Create New World&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Set Game Mode to &lt;code&gt;Creative&lt;/code&gt; and Difficulty to &lt;code&gt;Peaceful&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;After the world is created, press &lt;code&gt;Esc&lt;/code&gt; key and press &lt;code&gt;Open to LAN&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;code&gt;Allow cheats: ON&lt;/code&gt; and press &lt;code&gt;Start LAN World&lt;/code&gt;. You will see the bot join the world soon.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;If you have any questions, please check our &lt;a href=&#34;https://raw.githubusercontent.com/MineDojo/Voyager/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt; first before opening an issue.&lt;/p&gt; &#xA;&lt;h1&gt;Paper and Citation&lt;/h1&gt; &#xA;&lt;p&gt;If you find our work useful, please consider citing us!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{wang2023voyager,&#xA;  title   = {Voyager: An Open-Ended Embodied Agent with Large Language Models},&#xA;  author  = {Guanzhi Wang and Yuqi Xie and Yunfan Jiang and Ajay Mandlekar and Chaowei Xiao and Yuke Zhu and Linxi Fan and Anima Anandkumar},&#xA;  year    = {2023},&#xA;  journal = {arXiv preprint arXiv: Arxiv-2305.16291}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disclaimer: This project is strictly for research purposes, and not an official product from NVIDIA.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adieyal/sd-dynamic-prompts</title>
    <updated>2023-05-30T01:29:27Z</updated>
    <id>tag:github.com,2023-05-30:/adieyal/sd-dynamic-prompts</id>
    <link href="https://github.com/adieyal/sd-dynamic-prompts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A custom script for AUTOMATIC1111/stable-diffusion-webui to implement a tiny template language for random prompt generation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion Dynamic Prompts extension&lt;/h1&gt; &#xA;&lt;p&gt;A custom extension for &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt; that implements an expressive template language for random or combinatorial prompt generation along with features to support deep wildcard directory structures.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-syntax.png&#34; valign=&#34;middle&#34; style=&#34;height:60px;margin-right:10px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/tutorial.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-tutorial.png&#34; valign=&#34;middle&#34; style=&#34;height:60px;margin-right:10px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-changelog.png&#34; valign=&#34;middle&#34; style=&#34;height:60px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/extension.png&#34;&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#basic-usage&#34;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#online-resources&#34;&gt;Online resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#compatible-scripts&#34;&gt;Compatible Scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#template-syntax&#34;&gt;Template syntax&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#fuzzy-globrecursive-wildcard-filedirectory-matching&#34;&gt;Fuzzy Glob/recursive wildcard file/directory matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-generation&#34;&gt;Combinatorial Generation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-batches&#34;&gt;Combinatorial Batches&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#increasing-the-maximum-number-of-generations&#34;&gt;Increasing the maximum number of generations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#fixed-seed&#34;&gt;Fixed seed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#magic-prompt&#34;&gt;Magic Prompt&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#other-models&#34;&gt;Other models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#im-feeling-lucky&#34;&gt;I&#39;m feeling lucky&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#attention-grabber&#34;&gt;Attention grabber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#write-prompts-to-file&#34;&gt;Write prompts to file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#jinja2-templates&#34;&gt;Jinja2 templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#wildcard_dir&#34;&gt;WILDCARD_DIR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#collections&#34;&gt;Collections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#dynamic-prompts-and-random-seeds&#34;&gt;Dynamic Prompts and Random Seeds&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#without-dynamic-prompts-enabled&#34;&gt;Without Dynamic Prompts Enabled&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#with-dynamic-prompts-enabled-in-randomstandard-mode&#34;&gt;With Dynamic Prompts Enabled in Random/Standard Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#variation-seeds-with-dynamic-prompts&#34;&gt;Variation Seeds with Dynamic Prompts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-mode-with-variation-strength--0&#34;&gt;Combinatorial Mode with Variation Strength &amp;gt; 0&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;Using this script, the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A {house|apartment|lodge|cottage} in {summer|winter|autumn|spring} by {2$$artist1|artist2|artist3}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will produce any of the following prompts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;house&lt;/strong&gt; in &lt;strong&gt;summer&lt;/strong&gt; by &lt;strong&gt;artist1&lt;/strong&gt;, &lt;strong&gt;artist2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;lodge&lt;/strong&gt; in &lt;strong&gt;autumn&lt;/strong&gt; by &lt;strong&gt;artist3&lt;/strong&gt;, &lt;strong&gt;artist1&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;cottage&lt;/strong&gt; in &lt;strong&gt;winter&lt;/strong&gt; by &lt;strong&gt;artist2&lt;/strong&gt;, &lt;strong&gt;artist3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is especially useful if you are searching for interesting combinations of artists and styles.&lt;/p&gt; &#xA;&lt;p&gt;You can also pick a random string from a file. Assuming you have the file seasons.txt in WILDCARD_DIR (see below), then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;__seasons__ is coming&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Might generate the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Winter is coming&lt;/li&gt; &#xA; &lt;li&gt;Spring is coming&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use the same wildcard twice&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;I love __seasons__ better than __seasons__&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I love Winter better than Summer&lt;/li&gt; &#xA; &lt;li&gt;I love Spring better than Spring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More complete documentation can be found &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;here&lt;/a&gt;.&lt;br&gt; Prefer a tutorial? &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/tutorial.md&#34;&gt;Click here&lt;/a&gt;&lt;br&gt; Need a wildcard library? We&#39;ve got you &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts#collections&#34;&gt;covered&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Online resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📽️ &lt;a href=&#34;https://www.youtube.com/watch?v=P6Tl5sMUJpk&#34;&gt;아무것도 생각 안 하고 그림 뽑는 방법 (stable diffusion Dynamic Prompts extension)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📽️ &lt;a href=&#34;https://www.youtube.com/watch?v=5wH7zioje4w&#34;&gt;Dynamic Prompt Tutorial: How to Create Multiple Art Variations with just 1 Prompt Stable Diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📽️ &lt;a href=&#34;https://www.youtube.com/watch?v=5ZiL4iG0FJk&#34;&gt;Experiment with Prompts FAST in Stable Diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/115t0pi/having_a_blast_with_controlnet_dynamic_prompts/&#34;&gt;Having a blast with ControlNet + Dynamic Prompts (Wildcards)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10xqwjm/i_come_bearing_gifts_infinite_random_rpg/&#34;&gt;Infinite Random RPG Character Portraits with Dynamic Prompts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/106hxm1/256_unique_characters_created_with_dynamic/&#34;&gt;256 unique characters created with dynamic prompts &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10m6b4a/use_chatgpt_to_create_powerful_and_useful/&#34;&gt;Use ChatGPT to create powerful and useful wildcards with the Dynamic Prompts extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/1080xyy/200_characteroutfit_designs_from_a_single_prompt/&#34;&gt;200 Character/outfit designs from a single prompt using Dynamic Prompts and Prompt Editing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10jgmtk/dynamic_prompts_and_jinja2_templates_in_automatic/&#34;&gt;Dynamic Prompts and Jinja2 templates in Automatic 1111&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10gkm1c/testing_dynamic_prompts_extension_to_mix_and/&#34;&gt;Testing Dynamic Prompts extension to mix and match elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/ynztiz/how_to_turbocharge_your_prompts_using/&#34;&gt;How to Turbocharge your prompts using AUTOMATIC1111 WebUI dynamic prompts extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/zacjhk/dynamic_prompts_for_automatic1111_is_so/&#34;&gt;Dynamic prompts for Automatic1111 is so incredibly powerful, these are all from the same prompt!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The extension can be installed directly from within the &lt;strong&gt;Extensions&lt;/strong&gt; tab within the Webui &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/installation.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also install it manually by running the following command from within the webui directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/adieyal/sd-dynamic-prompting/ extensions/dynamic-prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;In case of a syntax clash with another extension, Dynamic Prompts allows you to change the definition of variant start and variant end. By default these are set to &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; respectively. , e.g. &lt;code&gt;{red|green|blue}&lt;/code&gt;. In the settings tab, you can change these two any string, e.g. &lt;code&gt;&amp;lt;red|green|blue&amp;gt;&lt;/code&gt; or even &lt;code&gt;::red|green|blue::&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/config_brackets.png&#34;&gt; &#xA;&lt;p&gt;By default, wildcards start with &lt;code&gt;__&lt;/code&gt;(double underscore) and end with &lt;code&gt;__&lt;/code&gt;. You can change this in the settings tab under wildcard wrap.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter an issue with Dynamic Prompts, follow these steps to resolve the problem:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Check that you have installed the latest version of both the Dynamic Prompts extension and library. To check the installed versions, open the &lt;strong&gt;Need Help? accordion&lt;/strong&gt; in the Dynamic Prompts section of txt2image. You can find the latest version number of the extension &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/raw/main/docs/CHANGELOG.md&#34;&gt;here&lt;/a&gt; and the library &lt;a href=&#34;https://github.com/adieyal/dynamicprompts/raw/main/CHANGELOG.md?plain=1&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the versions do not match, update the extension in the extensions tab and restart the webui. The extension should automatically update the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the above step does not work, you might need to manually update the library using the following command:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python -m pip install -U dynamicprompts[attentiongrabber,magicprompt]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Restart the webui and check. If the webui uses a different python binary, find the correct path to the python binary and run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/path/to/python/binary/python -m pip install -U dynamicprompts[attentiongrabber,magicprompt]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;If the Wildcard UI does not show, it could be due to an outdated library version. Check for errors in the terminal and update the library as described in step 3.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you get an error message saying &#34;No values found for wildcard some/wildcard&#34;, ensure that the file wildcard.txt is in extensions/sd-dynamic-prompts/wildcards/some/. The full path is required, as relative paths are not currently supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the issue persists, search for solutions in the &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/issues?q=is%3Aissue&#34;&gt;issues section&lt;/a&gt; on Github and the &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/discussions&#34;&gt;discussion forum&lt;/a&gt;. If you cannot find a solution, create a new issue and give it a descriptive name, such as &#34;Wildcard values are being ignored in prompt templates&#34;. Provide the necessary context, including the versions of the Dynamic Prompts extension and library, and mention the operating system or colab being used. If there is an error in the terminal, copy and paste the entire text or take a screenshot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, it is essential to test and apply any fixes we release. Your feedback is valuable, as an issue that works in our environment may not work in yours.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compatible Scripts&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic Prompts works particularly well with X/Y Plot - setting Dynamic Prompts to &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-generation&#34;&gt;combinatorial mode&lt;/a&gt; while using X/Y Plot, lets you exhaustively test prompt and paramter variations simultaneously.&lt;/p&gt; &#xA;&lt;h2&gt;Template syntax&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fuzzy Glob/recursive wildcard file/directory matching&lt;/h3&gt; &#xA;&lt;p&gt;In addition to standard wildcard tokens such as &lt;code&gt;__times__&lt;/code&gt; -&amp;gt; &lt;code&gt;times.txt&lt;/code&gt;, you can also use globbing to match against multiple files at once. For instance:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;__colors*__&lt;/code&gt; will match any of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/colors.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/colors1.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/colors1.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;__light/**/*__&lt;/code&gt; will match:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/light/a.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/light/b.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;but won&#39;t match&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/dark/a.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/a.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also used character ranges &lt;code&gt;[0-9]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; and single wildcard characters &lt;code&gt;?&lt;/code&gt;. For more examples see &lt;a href=&#34;http://pymotw.com/2/glob/&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Combinatorial Generation&lt;/h2&gt; &#xA;&lt;p&gt;Instead of generating random prompts from a template, combinatorial generation produced every possible prompt from the given string. For example: &lt;code&gt;I {love|hate} {New York|Chicago} in {June|July|August}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;will produce:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I love New York in June&lt;/li&gt; &#xA; &lt;li&gt;I love New York in July&lt;/li&gt; &#xA; &lt;li&gt;I love New York in August&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in June&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in July&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in August&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in June&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in July&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in August&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in June&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in July&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in August&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If a &lt;code&gt;__wildcard__&lt;/code&gt; is provided, then a new prompt will be produced for every value in the wildcard file. For example: &lt;code&gt;My favourite season is __seasons__&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;will produce:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My favourite season is Summer&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is August&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is Winter&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is Sprint&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/combinatorial_generation.png&#34;&gt; &#xA;&lt;p&gt;You also arbitrarily nest combinations inside wildcards and wildcards in combinations.&lt;/p&gt; &#xA;&lt;p&gt;Combinatorial generation can be useful if you want to create an image for every artist in a file. It can be enabled by checking the &lt;strong&gt;Combinatorial generation&lt;/strong&gt; checkbox in the ui. In order to prevent accidentially producing thousands of images, you can limit the total number of prompts generated using the &lt;strong&gt;Max Generations&lt;/strong&gt; slider. A value of 0 (the default) will not set any limit.&lt;/p&gt; &#xA;&lt;h3&gt;Combinatorial Batches&lt;/h3&gt; &#xA;&lt;p&gt;The combinatorial batches slider lets you repeat the same set of prompts a number of times with different seeds. The default number of batches is 1.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing the maximum number of generations&lt;/h3&gt; &#xA;&lt;p&gt;By default, the &lt;strong&gt;Batch count&lt;/strong&gt; silder of automatic1111 has a maximum value of 100. This can limit the maximum number of generations when using combinatorial generation. You can change the maximum value of this slider by editing ui-config.json and change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;txt2img/Batch count/maximum&#34;: 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to something larger like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;txt2img/Batch count/maximum&#34;: 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fixed seed&lt;/h2&gt; &#xA;&lt;p&gt;Select this if you want to use the same seed for every generated image. If there are no wildcards then all the images will be identical. It is useful if you want to test the effect of a particular modifier. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A beautiful day at the beach __medium/photography/filmtypes__&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That way you can isolate the effect of each film type on a particular scene. Here are some of the results: &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/filmtypes.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Magic Prompt&lt;/h2&gt; &#xA;&lt;p&gt;Use one of a number of prompt generation models to spice up your prompt.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://huggingface.co/Gustavosta/MagicPrompt-Stable-Diffusion&#34;&gt;Gustavosta&lt;/a&gt;&#39;s MagicPrompt model, Trained on 80,000 prompts from &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/lexica.art&#34;&gt;Lexica.art&lt;/a&gt;, it can help give you interesting new prompts on a given subject. Here are some automatically generated variations for &#34;dogs playing football&#34;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the streets of a japanese town at night, with people watching in wonder, in the style of studio ghibli and makoto shinkai, highly detailed digital art, trending on artstation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the background is a nuclear explosion. photorealism. hq. hyper. realistic. 4 k. award winning.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the background is a nuclear explosion. photorealistic. realism. 4 k wideshot. cinematic. unreal engine. artgerm. marc simonetti. jc leyendecker&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is compatible with the wildcard syntax described above.&lt;/p&gt; &#xA;&lt;h3&gt;Other models&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/daspartho/prompt-extend&#34;&gt;daspartho/prompt-extend (~500mb)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/succinctly/text2image-prompt-generator&#34;&gt;succinctly/text2image-prompt-generator (~600mb)&lt;/a&gt; - Trained on Midjourney prompts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/microsoft/Promptist&#34;&gt;microsoft/Promptist (~500mb)&lt;/a&gt; - Read the paper &lt;a href=&#34;https://arxiv.org/abs/2212.09611&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-lexart&#34;&gt;AUTOMATIC/promptgen-lexart (~300mb)&lt;/a&gt; - Finetuned using 134,819 prompts from lexica.art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-majinai-safe&#34;&gt;AUTOMATIC/promptgen-majinai-safe (~300mb)&lt;/a&gt; - 1,654 prompts from majinai.art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-majinai-unsafe&#34;&gt;AUTOMATIC/promptgen-majinai-unsafe (~300mb)&lt;/a&gt; - 825 prompts from majinai.art (NSFW)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Gustavosta/MagicPrompt-Dalle&#34;&gt;Gustavosta/MagicPrompt-Dalle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/kmewhort/stable-diffusion-prompt-bolster&#34;&gt;kmewhort/stable-diffusion-prompt-bolster (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/Ar4ikov/gpt2-650k-stable-diffusion-prompt-generator&#34;&gt;Ar4ikov/gpt2-650k-stable-diffusion-prompt-generator (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Ar4ikov/gpt2-medium-650k-stable-diffusion-prompt-generator&#34;&gt;Ar4ikov/gpt2-medium-650k-stable-diffusion-prompt-generator (~1.4gb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/crumb/bloom-560m-RLHF-SD2-prompter-aesthetic&#34;&gt;crumb/bloom-560m-RLHF-SD2-prompter-aesthetic (~1.1gb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Meli/GPT2-Prompt&#34;&gt;Meli/GPT2-Prompt (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/DrishtiSharma/StableDiffusion-Prompt-Generator-GPT-Neo-125M&#34;&gt;DrishtiSharma/StableDiffusion-Prompt-Generator-GPT-Neo-125M (~550mb)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The first time you use a model, it is downloaded. It is approximately 500mb and so will take some time depending on how fast your connection is. It will also take a few seconds on first activation as the model is loaded into memory. Note, if you&#39;re low in VRAM, you might get a Cuda error. My GPU uses less than 8GB but YMMV.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/magic_prompt.png&#34;&gt; &#xA;&lt;p&gt;You can control the maximum prompt length with the &lt;strong&gt;Max magic prompt length&lt;/strong&gt; slider. &lt;strong&gt;Magic prompt creativity&lt;/strong&gt; can adjust the generated prompt but you will need to experiment with this setting.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;strong&gt;Magic prompt blocklist regex&lt;/strong&gt; to filter out keywords. For example, if you want to avoid prompts containing Greg Rutkowski, add his name to this field.&lt;/p&gt; &#xA;&lt;p&gt;If you are generating many prompts using Magic Prompt, then increasing the &lt;strong&gt;Magic Prompt batch size&lt;/strong&gt; can improve significantly improve prompt generation speed. This may only be noticeable if you are not generating images as well since image generation is much slower than prompt generation.&lt;/p&gt; &#xA;&lt;h2&gt;I&#39;m feeling lucky&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://lexica.art&#34;&gt;lexica.art&lt;/a&gt; API to create random prompts. Useful if you&#39;re looking for inspiration, or are simply too lazy to think of your own prompts. When this option is selected, the prompt in the main prompt box is used as a search string. For example, prompt &#34;Mech warrior&#34; might return:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A large robot stone statue in the middle of a forest by Greg Rutkowski, Sung Choi, Mitchell Mohrhauser, Maciej Kuciara, Johnson Ting, Maxim Verehin, Peter Konig, final fantasy , 8k photorealistic, cinematic lighting, HD, high details, atmospheric,&lt;/li&gt; &#xA; &lt;li&gt;a beautiful portrait painting of a ( ( ( cyberpunk ) ) ) armor by simon stalenhag and pascal blanche and alphonse mucha and nekro. in style of digital art. colorful comic, film noirs, symmetry, brush stroke, vibrating colors, hyper detailed. octane render. trending on artstation&lt;/li&gt; &#xA; &lt;li&gt;symmetry!! portrait of a robot astronaut, floral! horizon zero dawn machine, intricate, elegant, highly detailed, digital painting, artstation, concept art, smooth, sharp focus, illustration, art by artgerm and greg rutkowski and alphonse mucha, 8 k&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/feeling-lucky.png&#34;&gt; &#xA;&lt;p&gt;Leaving the prompt box blank returns a list of completely randomly chosen prompts.&lt;/p&gt; &#xA;&lt;h2&gt;Attention grabber&lt;/h2&gt; &#xA;&lt;p&gt;This option randomly selects a keyword in your prompt and adds a random amount of emphasis. Below is an example of how this affects the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a portrait an anthropomorphic panda mage casting a spell, wearing mage robes, landscape in background, cute, dnd character art portrait, by jason felix and peter mohrbacher, cinematic lighting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/emphasis.png&#34;&gt; &#xA;&lt;p&gt;Tick the &lt;strong&gt;Fixed seed&lt;/strong&gt; checkbox under &lt;strong&gt;Advanced options&lt;/strong&gt; to see how emphasis changes your image without changing seed.&lt;/p&gt; &#xA;&lt;h2&gt;Write prompts to file&lt;/h2&gt; &#xA;&lt;p&gt;Check the write prompts to file checkbox in order to create a file with all generated prompts. The generated file is a slugified version of the prompt and can be found in the same directory as the generated images, e.g. outputs/txt2img-images &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/write_prompts.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Jinja2 templates&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.1.x/templates/&#34;&gt;Jinja2 templates&lt;/a&gt; is an experimental feature that enables you to define prompts imperatively. This is an advanced feature and is only recommended for users who are comfortable writing scripts.&lt;/p&gt; &#xA;&lt;p&gt;To enable, open the advanced accordion and select &lt;strong&gt;Enable Jinja2 templates&lt;/strong&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/jinja_templates.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can read about them in more detail &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/jinja2.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WILDCARD_DIR&lt;/h2&gt; &#xA;&lt;p&gt;The extension looks for wildcard files in WILDCARD_DIR. The default location is /path/to/stable-diffusion-webui/extensions/sd-dynamic-prompts/wildcards. It can also be manually defined in the main webui config.json under wildcard_dir. When in doubt, the help text for the extension in the webui lists the full path to WILDCARD_DIR&lt;/p&gt; &#xA;&lt;h2&gt;Collections&lt;/h2&gt; &#xA;&lt;p&gt;The collections directory contains modifier libraries that you can use as is or to bootstrap your own. To get started, either use the Wildcard Manager tab to copy a one or more collections to your wildcards folder, or you can manually copy the files across. Three collections are bundled with the dynamic prompts extension.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/jumbo&#34;&gt;jumbo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/parrotzone&#34;&gt;parrotzone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/devilkkw&#34;&gt;devilkkw&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Jumbo is a very large collection of wildcards across many categories including aesthetics, appearance, artists, medium, style, and time. It is a work in progress, but aims to provide good coverage of various modifier categories.&lt;/p&gt; &#xA;&lt;p&gt;Parrotzone is a far smaller and more manageable collection sourced from &lt;a href=&#34;https://proximacentaurib.notion.site/e28a4f8d97724f14a784a538b8589e7d?v=42948fd8f45c4d47a0edfc4b78937474&#34;&gt;https://proximacentaurib.notion.site/e28a4f8d97724f14a784a538b8589e7d?v=42948fd8f45c4d47a0edfc4b78937474&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Devilkkw focuses more on character building, clothes, gestures, food, etc&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using a Unix/Linux O/S, you can easily create a symlink to the relevant collection rather than copying it across if you don&#39;t plan to alter it. E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ln -sr collections/parrotzone wildcards/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also download additional extensions by running &lt;code&gt;python _tools/download_collections.py&lt;/code&gt; from within the extension&#39;s root directory, i.e. &lt;code&gt;extensions/sd-dynamic-prompts/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dynamic Prompts and Random Seeds&lt;/h2&gt; &#xA;&lt;p&gt;Random seeds play an important role in controlling the randomness of the generated outputs. Let&#39;s discuss how Dynamic Prompts works with random seeds in different scenarios.&lt;/p&gt; &#xA;&lt;h3&gt;Without Dynamic Prompts Enabled&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If the seed is set to -1: A random seed is picked. This seed is used to generate the first image, then the next image is created using seed + 1, and this pattern continues for subsequent images.&lt;/li&gt; &#xA; &lt;li&gt;If the seed is set to a specific number greater than -1: The process is similar to the one above, but starts with the user-specified seed.&lt;/li&gt; &#xA; &lt;li&gt;If the variation seed is defined, but variation strength is zero: The process remains the same as in the previous two points.&lt;/li&gt; &#xA; &lt;li&gt;If the variation seed is set to a number greater than 0: Every image is generated using the same initial seed (randomly selected or set by the user). The variation seed is either random (if set to -1) or the value chosen by the user. The first image is generated with the variation seed, the next with variation seed + 1, and so on.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Using With Dynamic Prompts Enabled in Random/Standard Mode:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If the seed is set to -1: The process is similar to the first point in the previous section. However, the prompt is also selected using the same seed (if the random prompt generator is used).&lt;/li&gt; &#xA; &lt;li&gt;If the seed is set to a number greater than -1: The process is similar to the second point in the previous section. However, the difference is that a random prompt is also generated using the chosen seed (if the prompt generator is used).&lt;/li&gt; &#xA; &lt;li&gt;If the fixed seed checkbox is checked: The same seed is used for all images and prompts. This means the same image is generated repeatedly (this is useful for combinatorial generation).&lt;/li&gt; &#xA; &lt;li&gt;If both the fixed seed and unlink seed from prompt checkboxes are checked: A random seed is used for the prompt, but the same seed is used for all images. This setting can be useful if you want to see how different prompts affect the generation of the same image.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Variation Seeds with Dynamic Prompts&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Variation strength set to 0: Variations are ignored.&lt;/li&gt; &#xA; &lt;li&gt;Variation set to a number &amp;gt; 0: A variation seed is assigned to every image, incrementing by one each time. However, only 1 prompt is generated since you are looking for variations of the same image.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Combinatorial Mode with Variation Strength &amp;gt; 0&lt;/h3&gt; &#xA;&lt;p&gt;In this case, it only generates the first image for you, which is probably not what you want. To get the desired results, you might need to adjust the settings or use a different mode.&lt;/p&gt;</summary>
  </entry>
</feed>