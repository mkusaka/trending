<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-20T01:27:25Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HigherOrderCO/Bend</title>
    <updated>2024-05-20T01:27:25Z</updated>
    <id>tag:github.com,2024-05-20:/HigherOrderCO/Bend</id>
    <link href="https://github.com/HigherOrderCO/Bend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A massively parallel, high-level programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bend&lt;/h1&gt; &#xA;&lt;p&gt;Bend is a massively parallel, high-level programming language.&lt;/p&gt; &#xA;&lt;p&gt;Unlike low-level alternatives like CUDA and Metal, Bend has the feeling and features of expressive languages like Python and Haskell, including fast object allocations, higher-order functions with full closure support, unrestricted recursion, even continuations. Yet, it runs on massively parallel hardware like GPUs, with near-linear speedup based on core count, and zero explicit parallel annotations: no thread spawning, no locks, mutexes, atomics. Bend is powered by the &lt;a href=&#34;https://github.com/HigherOrderCO/hvm&#34;&gt;HVM2&lt;/a&gt; runtime.&lt;/p&gt; &#xA;&lt;h2&gt;A Quick Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/i/status/1791213162525524076&#34;&gt;&lt;img src=&#34;https://github.com/VictorTaelin/media/raw/main/bend_live_demo.gif?raw=true&#34; alt=&#34;Bend live demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using Bend&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Currently not working on Windows, please use &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL2&lt;/a&gt; as a workaround.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re having issues or have a question about Bend, please first read the &lt;a href=&#34;https://github.com/HigherOrderCO/Bend/raw/main/KNOWN_ISSUES.md&#34;&gt;Known Issues&lt;/a&gt; page and check if your question has already been addressed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First, install &lt;a href=&#34;https://www.oreilly.com/library/view/rust-programming-by/9781788390637/e07dc768-de29-482e-804b-0274b4bef418.xhtml&#34;&gt;Rust nightly&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use the C runtime, install a C compiler (like GCC or Clang). If you want to use the CUDA runtime, install the CUDA toolkit (CUDA and &lt;code&gt;nvcc&lt;/code&gt;) version 12.x.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;a href=&#34;https://github.com/HigherOrderCO/Bend/issues/341&#34;&gt;Only Nvidia GPUs are supported at the moment&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then, install both HVM2 and Bend with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo +nightly install hvm&#xA;cargo +nightly install bend-lang&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, write some Bend file, and run it with one of these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bend run    &amp;lt;file.bend&amp;gt; # uses the Rust interpreter (sequential)&#xA;bend run-c  &amp;lt;file.bend&amp;gt; # uses the C interpreter (parallel)&#xA;bend run-cu &amp;lt;file.bend&amp;gt; # uses the CUDA interpreter (massively parallel)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also compile &lt;code&gt;Bend&lt;/code&gt; to standalone C/CUDA files with &lt;code&gt;gen-c&lt;/code&gt; and &lt;code&gt;gen-cu&lt;/code&gt;, for maximum performance. But keep in mind our code gen is still in its infancy, and is nowhere as mature as SOTA compilers like GCC and GHC.&lt;/p&gt; &#xA;&lt;h2&gt;Parallel Programming in Bend&lt;/h2&gt; &#xA;&lt;p&gt;To write parallel programs in Bend, all you have to do is... &lt;strong&gt;nothing&lt;/strong&gt;. Other than not making it &lt;em&gt;inherently sequential&lt;/em&gt;! For example, the expression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;(((1 + 2) + 3) + 4)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Can &lt;strong&gt;not&lt;/strong&gt; run in parallel, because &lt;code&gt;+4&lt;/code&gt; depends on &lt;code&gt;+3&lt;/code&gt; which depends on &lt;code&gt;(1+2)&lt;/code&gt;. But the following expression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;((1 + 2) + (3 + 4))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Can run in parallel, because &lt;code&gt;(1+2)&lt;/code&gt; and &lt;code&gt;(3+4)&lt;/code&gt; are independent; and it &lt;em&gt;will&lt;/em&gt;, per Bend&#39;s fundamental pledge:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Everything that &lt;strong&gt;can&lt;/strong&gt; run in parallel, &lt;strong&gt;will&lt;/strong&gt; run in parallel.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For a more complete example, consider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Sorting Network = just rotate trees!&#xA;def sort(d, s, tree):&#xA;  switch d:&#xA;    case 0:&#xA;      return tree&#xA;    case _:&#xA;      (x,y) = tree&#xA;      lft   = sort(d-1, 0, x)&#xA;      rgt   = sort(d-1, 1, y)&#xA;      return rots(d, s, lft, rgt)&#xA;&#xA;# Rotates sub-trees (Blue/Green Box)&#xA;def rots(d, s, tree):&#xA;  switch d:&#xA;    case 0:&#xA;      return tree&#xA;    case _:&#xA;      (x,y) = tree&#xA;      return down(d, s, warp(d-1, s, x, y))&#xA;&#xA;(...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://gist.github.com/VictorTaelin/face210ca4bc30d96b2d5980278d3921&#34;&gt;file&lt;/a&gt; implements a &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitonic_sorter&#34;&gt;bitonic sorter&lt;/a&gt; with &lt;em&gt;immutable tree rotations&lt;/em&gt;. It is not the kind of algorithm you&#39;d expect to run fast on GPUs. Yet, since it uses a divide-and-conquer approach, which is &lt;em&gt;inherently parallel&lt;/em&gt;, Bend will run it multi-threaded. Some benchmarks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;CPU, Apple M3 Max, 1 thread: &lt;strong&gt;12.15 seconds&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CPU, Apple M3 Max, 16 threads: &lt;strong&gt;0.96 seconds&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GPU, NVIDIA RTX 4090, 16k threads: &lt;strong&gt;0.21 seconds&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That&#39;s a &lt;strong&gt;57x speedup&lt;/strong&gt; by doing nothing. No thread spawning, no explicit management of locks, mutexes. We just asked Bend to run our program on RTX, and it did. Simple as that.&lt;/p&gt; &#xA;&lt;p&gt;Bend isn&#39;t limited to a specific paradigm, like tensors or matrices. Any concurrent system, from shaders to Erlang-like actor models can be emulated on Bend. For example, to render images in real time, we could simply allocate an immutable tree on each frame:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# given a shader, returns a square image&#xA;def render(depth, shader):&#xA;  bend d = 0, i = 0:&#xA;    when d &amp;lt; depth:&#xA;      color = (fork(d+1, i*2+0), fork(d+1, i*2+1))&#xA;    else:&#xA;      width = depth / 2&#xA;      color = shader(i % width, i / width)&#xA;  return color&#xA;&#xA;# given a position, returns a color&#xA;# for this demo, it just busy loops&#xA;def demo_shader(x, y):&#xA;  bend i = 0:&#xA;    when i &amp;lt; 5000:&#xA;      color = fork(i + 1)&#xA;    else:&#xA;      color = 0x000001&#xA;  return color&#xA;&#xA;# renders a 256x256 image using demo_shader&#xA;def main:&#xA;  return render(16, demo_shader)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And it would actually work. Even involved algorithms parallelize well on Bend. Long-distance communication is performed by &lt;em&gt;global beta-reduction&lt;/em&gt; (as per the &lt;a href=&#34;https://github.com/VictorTaelin/Interaction-Calculus&#34;&gt;Interaction Calculus&lt;/a&gt;), and synchronized correctly and efficiently by &lt;a href=&#34;https://github.com/HigherOrderCO/HVM&#34;&gt;HVM2&lt;/a&gt;&#39;s &lt;em&gt;atomic linker&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To jump straight into action, check Bend&#39;s &lt;a href=&#34;https://github.com/HigherOrderCO/bend/raw/main/GUIDE.md&#34;&gt;GUIDE.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For an extensive list of features, check &lt;a href=&#34;https://github.com/HigherOrderCO/bend/raw/main/FEATURES.md&#34;&gt;FEATURES.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To understand the tech behind Bend, check HVM2&#39;s &lt;a href=&#34;https://paper.higherorderco.com&#34;&gt;paper&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bend is developed by &lt;a href=&#34;https://HigherOrderCO.com&#34;&gt;HigherOrderCO.com&lt;/a&gt; - join our &lt;a href=&#34;https://discord.HigherOrderCO.com&#34;&gt;Discord&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;It is very important to reinforce that, while Bend does what it was built to (i.e., scale in performance with cores, up to 10000+ concurrent threads), its single-core performance is still extremely sub-par. This is the first version of the system, and we haven&#39;t put much effort into a proper compiler yet. You can expect the raw performance to substantially improve on every release, as we work towards a proper codegen (including a constellation of missing optimizations). Meanwhile, you can use the interpreters today, to have a glimpse of what massively parallel programming looks like, from the lens of a Pythonish, high-level language!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HigherOrderCO/HVM</title>
    <updated>2024-05-20T01:27:25Z</updated>
    <id>tag:github.com,2024-05-20:/HigherOrderCO/HVM</id>
    <link href="https://github.com/HigherOrderCO/HVM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A massively parallel, optimal functional runtime in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Higher-order Virtual Machine 2 (HVM2)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Higher-order Virtual Machine 2 (HVM2)&lt;/strong&gt; is a massively parallel &lt;a href=&#34;https://www.semanticscholar.org/paper/Interaction-Combinators-Lafont/6cfe09aa6e5da6ce98077b7a048cb1badd78cc76&#34;&gt;Interaction Combinator&lt;/a&gt; evaluator.&lt;/p&gt; &#xA;&lt;p&gt;By compiling programs from high-level languages (such as Python and Haskell) to HVM, one can run these languages directly on massively parallel hardware, like GPUs, with near-ideal speedup.&lt;/p&gt; &#xA;&lt;p&gt;HVM2 is the successor to &lt;a href=&#34;https://github.com/HigherOrderCO/HVM1&#34;&gt;HVM1&lt;/a&gt;, a 2022 prototype of this concept. Compared to its predecessor, HVM2 is simpler, faster and, most importantly, more correct. &lt;a href=&#34;https://HigherOrderCO.com/&#34;&gt;HOC&lt;/a&gt; provides long-term support for all features listed on its &lt;a href=&#34;https://raw.githubusercontent.com/HigherOrderCO/HVM/main/paper/PAPER.pdf&#34;&gt;PAPER&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository provides a low-level IR language for specifying the HVM2 nets and a compiler from that language to C and CUDA. It is not meant for direct human usage. If you&#39;re looking for a high-level language to interface with HVM2, check &lt;a href=&#34;https://github.com/HigherOrderCO/Bend&#34;&gt;Bend&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;DISCLAIMER: Windows is currently not supported, please use &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; for now as a workaround.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First install the dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to use the C runtime, install a C-11 compatible compiler like GCC or Clang.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use the CUDA runtime, install CUDA and nvcc (the CUDA compiler). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;HVM requires CUDA 12.x and currently only works on Nvidia GPUs.&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install HVM2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo +nightly install hvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are multiple ways to run an HVM program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hvm run    &amp;lt;file.hvm&amp;gt; # interpret via Rust&#xA;hvm run-c  &amp;lt;file.hvm&amp;gt; # interpret via C&#xA;hvm run-cu &amp;lt;file.hvm&amp;gt; # interpret via CUDA&#xA;hvm gen-c  &amp;lt;file.hvm&amp;gt; # compile to standalone C&#xA;hvm gen-cu &amp;lt;file.hvm&amp;gt; # compile to standalone CUDA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All modes produce the same output. The compiled modes require you to compile the generated file (with &lt;code&gt;gcc file.c -o file&lt;/code&gt;, for example), but are faster to run. The CUDA versions have much higher peak performance but are less stable. As a rule of thumb, &lt;code&gt;gen-c&lt;/code&gt; should be used in production.&lt;/p&gt; &#xA;&lt;h2&gt;Language&lt;/h2&gt; &#xA;&lt;p&gt;HVM is a low-level compile target for high-level languages. It provides a raw syntax for wiring interaction nets. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;@main = a&#xA;  &amp;amp; @sum ~ (28 (0 a))&#xA;&#xA;@sum = (?(((a a) @sum__C0) b) b)&#xA;&#xA;@sum__C0 = ({c a} ({$([*2] $([+1] d)) $([*2] $([+0] b))} f))&#xA;  &amp;amp;! @sum ~ (a (b $(:[+] $(e f))))&#xA;  &amp;amp;! @sum ~ (c (d e))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The file above implements a recursive sum. If that looks unreadable to you - don&#39;t worry, it isn&#39;t meant to. &lt;a href=&#34;https://github.com/HigherOrderCO/Bend&#34;&gt;Bend&lt;/a&gt; is the human-readable language and should be used both by end users and by languages aiming to target the HVM. If you&#39;re looking to learn more about the core syntax and tech, though, please check the &lt;a href=&#34;https://raw.githubusercontent.com/HigherOrderCO/HVM/main/paper/PAPER.pdf&#34;&gt;PAPER&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adrianhajdin/portfolio</title>
    <updated>2024-05-20T01:27:25Z</updated>
    <id>tag:github.com,2024-05-20:/adrianhajdin/portfolio</id>
    <link href="https://github.com/adrianhajdin/portfolio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern &amp; Minimal JS Mastery Portfolio&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://youtu.be/FTH6Dn3AyIQ&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/adrianhajdin/portfolio/assets/151519281/c6ca3c03-6cb7-4f67-a9b9-a73da5bfa0d8&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Next_JS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=nextdotjs&amp;amp;color=000000&#34; alt=&#34;nextdotjs&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Framer-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=framer&amp;amp;color=0055FF&#34; alt=&#34;framer&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Three_JS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=threedotjs&amp;amp;color=000000&#34; alt=&#34;three.js&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Tailwind_CSS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=tailwindcss&amp;amp;color=06B6D4&#34; alt=&#34;tailwindcss&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;A Modern Next.js Portfolio&lt;/h3&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;   Build this project step by step with our detailed tutorial on &#xA;  &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt; YouTube. Join the JSM family! &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📋 &lt;a name=&#34;table&#34;&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🤖 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⚙️ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#tech-stack&#34;&gt;Tech Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔋 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🤸 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕸️ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#snippets&#34;&gt;Code to Copy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#links&#34;&gt;Assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/portfolio/main/#more&#34;&gt;More&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🚨 Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the code corresponding to an in-depth tutorial available on our YouTube channel, &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer visual learning, this is the perfect resource for you. Follow our tutorial to learn how to build projects like these step-by-step in a beginner-friendly manner!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/FTH6Dn3AyIQ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/1736fca5-a031-4854-8c09-bc110e3bc16d&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;introduction&#34;&gt;🤖 Introduction&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Built with Next.js for handling the user interface, Three.js for rendering 3D elements, Framer motion for beautiful animations, and styled with TailwindCSS, this portfolio demonstrates the developer&#39;s skills in a unique manner that creates a lasting impact.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re getting started and need assistance or face any bugs, join our active Discord community with over &lt;strong&gt;34k+&lt;/strong&gt; members. It&#39;s a place where people help each other out.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/n6EdbFJ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/618f4872-1e10-42da-8213-1d69e486d02e&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tech-stack&#34;&gt;⚙️ Tech Stack&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js&lt;/li&gt; &#xA; &lt;li&gt;Three.js&lt;/li&gt; &#xA; &lt;li&gt;Framer Motion&lt;/li&gt; &#xA; &lt;li&gt;Tailwind CSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;features&#34;&gt;🔋 Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Hero&lt;/strong&gt;: Captivating introduction featuring a spotlight effect and dynamic background.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Bento Grid&lt;/strong&gt;: Modern layout presenting personal information using cutting-edge CSS design techniques.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;3D Elements&lt;/strong&gt;: Interactive 3D design elements, such as a GitHub-style globe and card hover effects, adding depth and engagement.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Testimonials&lt;/strong&gt;: Dynamic testimonials area with scrolling or animated content for enhanced engagement.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Work Experience&lt;/strong&gt;: Prominent display of professional background for emphasis and credibility.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Canvas Effect&lt;/strong&gt;: Innovative use of HTML5 canvas to create visually striking effects in the &#34;approaches&#34; section.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Responsiveness&lt;/strong&gt;: Seamless adaptability across all devices, ensuring optimal viewing experience for every user.&lt;/p&gt; &#xA;&lt;p&gt;and many more, including code architecture and reusability&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;quick-start&#34;&gt;🤸 Quick Start&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to set up the project locally on your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the following installed on your machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; (Node Package Manager)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cloning the Repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/adrianhajdin/portfolio.git&#xA;cd portfolio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install the project dependencies using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running the Project&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser to view the project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;snippets&#34;&gt;🕸️ Snippets&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;data/index.ts&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;export const navItems = [&#xA;  { name: &#34;About&#34;, link: &#34;#about&#34; },&#xA;  { name: &#34;Projects&#34;, link: &#34;#projects&#34; },&#xA;  { name: &#34;Testimonials&#34;, link: &#34;#testimonials&#34; },&#xA;  { name: &#34;Contact&#34;, link: &#34;#contact&#34; },&#xA;];&#xA;&#xA;export const gridItems = [&#xA;  {&#xA;    id: 1,&#xA;    title: &#34;I prioritize client collaboration, fostering open communication &#34;,&#xA;    description: &#34;&#34;,&#xA;    className: &#34;lg:col-span-3 md:col-span-6 md:row-span-4 lg:min-h-[60vh]&#34;,&#xA;    imgClassName: &#34;w-full h-full&#34;,&#xA;    titleClassName: &#34;justify-end&#34;,&#xA;    img: &#34;/b1.svg&#34;,&#xA;    spareImg: &#34;&#34;,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;    title: &#34;I&#39;m very flexible with time zone communications&#34;,&#xA;    description: &#34;&#34;,&#xA;    className: &#34;lg:col-span-2 md:col-span-3 md:row-span-2&#34;,&#xA;    imgClassName: &#34;&#34;,&#xA;    titleClassName: &#34;justify-start&#34;,&#xA;    img: &#34;&#34;,&#xA;    spareImg: &#34;&#34;,&#xA;  },&#xA;  {&#xA;    id: 3,&#xA;    title: &#34;My tech stack&#34;,&#xA;    description: &#34;I constantly try to improve&#34;,&#xA;    className: &#34;lg:col-span-2 md:col-span-3 md:row-span-2&#34;,&#xA;    imgClassName: &#34;&#34;,&#xA;    titleClassName: &#34;justify-center&#34;,&#xA;    img: &#34;&#34;,&#xA;    spareImg: &#34;&#34;,&#xA;  },&#xA;  {&#xA;    id: 4,&#xA;    title: &#34;Tech enthusiast with a passion for development.&#34;,&#xA;    description: &#34;&#34;,&#xA;    className: &#34;lg:col-span-2 md:col-span-3 md:row-span-1&#34;,&#xA;    imgClassName: &#34;&#34;,&#xA;    titleClassName: &#34;justify-start&#34;,&#xA;    img: &#34;/grid.svg&#34;,&#xA;    spareImg: &#34;/b4.svg&#34;,&#xA;  },&#xA;&#xA;  {&#xA;    id: 5,&#xA;    title: &#34;Currently building a JS Animation library&#34;,&#xA;    description: &#34;The Inside Scoop&#34;,&#xA;    className: &#34;md:col-span-3 md:row-span-2&#34;,&#xA;    imgClassName: &#34;absolute right-0 bottom-0 md:w-96 w-60&#34;,&#xA;    titleClassName: &#34;justify-center md:justify-start lg:justify-center&#34;,&#xA;    img: &#34;/b5.svg&#34;,&#xA;    spareImg: &#34;/grid.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 6,&#xA;    title: &#34;Do you want to start a project together?&#34;,&#xA;    description: &#34;&#34;,&#xA;    className: &#34;lg:col-span-2 md:col-span-3 md:row-span-1&#34;,&#xA;    imgClassName: &#34;&#34;,&#xA;    titleClassName: &#34;justify-center md:max-w-full max-w-60 text-center&#34;,&#xA;    img: &#34;&#34;,&#xA;    spareImg: &#34;&#34;,&#xA;  },&#xA;];&#xA;&#xA;export const projects = [&#xA;  {&#xA;    id: 1,&#xA;    title: &#34;3D Solar System Planets to Explore&#34;,&#xA;    des: &#34;Explore the wonders of our solar system with this captivating 3D simulation of the planets using Three.js.&#34;,&#xA;    img: &#34;/p1.svg&#34;,&#xA;    iconLists: [&#34;/re.svg&#34;, &#34;/tail.svg&#34;, &#34;/ts.svg&#34;, &#34;/three.svg&#34;, &#34;/fm.svg&#34;],&#xA;    link: &#34;https://github.com/adrianhajdin?tab=repositories&#34;,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;    title: &#34;Yoom - Video Conferencing App&#34;,&#xA;    des: &#34;Simplify your video conferencing experience with Yoom. Seamlessly connect with colleagues and friends.&#34;,&#xA;    img: &#34;/p2.svg&#34;,&#xA;    iconLists: [&#34;/next.svg&#34;, &#34;/tail.svg&#34;, &#34;/ts.svg&#34;, &#34;/stream.svg&#34;, &#34;/c.svg&#34;],&#xA;    link: &#34;https://github.com/adrianhajdin/zoom-clone&#34;,&#xA;  },&#xA;  {&#xA;    id: 3,&#xA;    title: &#34;AI Image SaaS - Canva Application&#34;,&#xA;    des: &#34;A REAL Software-as-a-Service app with AI features and a payments and credits system using the latest tech stack.&#34;,&#xA;    img: &#34;/p3.svg&#34;,&#xA;    iconLists: [&#34;/re.svg&#34;, &#34;/tail.svg&#34;, &#34;/ts.svg&#34;, &#34;/three.svg&#34;, &#34;/c.svg&#34;],&#xA;    link: &#34;https://github.com/adrianhajdin/ai_saas_app&#34;,&#xA;  },&#xA;  {&#xA;    id: 4,&#xA;    title: &#34;Animated Apple Iphone 3D Website&#34;,&#xA;    des: &#34;Recreated the Apple iPhone 15 Pro website, combining GSAP animations and Three.js 3D effects..&#34;,&#xA;    img: &#34;/p4.svg&#34;,&#xA;    iconLists: [&#34;/next.svg&#34;, &#34;/tail.svg&#34;, &#34;/ts.svg&#34;, &#34;/three.svg&#34;, &#34;/gsap.svg&#34;],&#xA;    link: &#34;https://github.com/adrianhajdin/iphone&#34;,&#xA;  },&#xA;];&#xA;&#xA;export const testimonials = [&#xA;  {&#xA;    quote:&#xA;      &#34;Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian&#39;s enthusiasm for every facet of development truly stands out. If you&#39;re seeking to elevate your website and elevate your brand, Adrian is the ideal partner.&#34;,&#xA;    name: &#34;Michael Johnson&#34;,&#xA;    title: &#34;Director of AlphaStream Technologies&#34;,&#xA;  },&#xA;  {&#xA;    quote:&#xA;      &#34;Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian&#39;s enthusiasm for every facet of development truly stands out. If you&#39;re seeking to elevate your website and elevate your brand, Adrian is the ideal partner.&#34;,&#xA;    name: &#34;Michael Johnson&#34;,&#xA;    title: &#34;Director of AlphaStream Technologies&#34;,&#xA;  },&#xA;  {&#xA;    quote:&#xA;      &#34;Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian&#39;s enthusiasm for every facet of development truly stands out. If you&#39;re seeking to elevate your website and elevate your brand, Adrian is the ideal partner.&#34;,&#xA;    name: &#34;Michael Johnson&#34;,&#xA;    title: &#34;Director of AlphaStream Technologies&#34;,&#xA;  },&#xA;  {&#xA;    quote:&#xA;      &#34;Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian&#39;s enthusiasm for every facet of development truly stands out. If you&#39;re seeking to elevate your website and elevate your brand, Adrian is the ideal partner.&#34;,&#xA;    name: &#34;Michael Johnson&#34;,&#xA;    title: &#34;Director of AlphaStream Technologies&#34;,&#xA;  },&#xA;  {&#xA;    quote:&#xA;      &#34;Collaborating with Adrian was an absolute pleasure. His professionalism, promptness, and dedication to delivering exceptional results were evident throughout our project. Adrian&#39;s enthusiasm for every facet of development truly stands out. If you&#39;re seeking to elevate your website and elevate your brand, Adrian is the ideal partner.&#34;,&#xA;    name: &#34;Michael Johnson&#34;,&#xA;    title: &#34;Director of AlphaStream Technologies&#34;,&#xA;  },&#xA;];&#xA;&#xA;export const companies = [&#xA;  {&#xA;    id: 1,&#xA;    name: &#34;cloudinary&#34;,&#xA;    img: &#34;/cloud.svg&#34;,&#xA;    nameImg: &#34;/cloudName.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;    name: &#34;appwrite&#34;,&#xA;    img: &#34;/app.svg&#34;,&#xA;    nameImg: &#34;/appName.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 3,&#xA;    name: &#34;HOSTINGER&#34;,&#xA;    img: &#34;/host.svg&#34;,&#xA;    nameImg: &#34;/hostName.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 4,&#xA;    name: &#34;stream&#34;,&#xA;    img: &#34;/s.svg&#34;,&#xA;    nameImg: &#34;/streamName.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 5,&#xA;    name: &#34;docker.&#34;,&#xA;    img: &#34;/dock.svg&#34;,&#xA;    nameImg: &#34;/dockerName.svg&#34;,&#xA;  },&#xA;];&#xA;&#xA;export const workExperience = [&#xA;  {&#xA;    id: 1,&#xA;    title: &#34;Frontend Engineer Intern&#34;,&#xA;    desc: &#34;Assisted in the development of a web-based platform using React.js, enhancing interactivity.&#34;,&#xA;    className: &#34;md:col-span-2&#34;,&#xA;    thumbnail: &#34;/exp1.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;    title: &#34;Mobile App Dev - JSM Tech&#34;,&#xA;    desc: &#34;Designed and developed mobile app for both iOS &amp;amp; Android platforms using React Native.&#34;,&#xA;    className: &#34;md:col-span-2&#34;, // change to md:col-span-2&#xA;    thumbnail: &#34;/exp2.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 3,&#xA;    title: &#34;Freelance App Dev Project&#34;,&#xA;    desc: &#34;Led the dev of a mobile app for a client, from initial concept to deployment on app stores.&#34;,&#xA;    className: &#34;md:col-span-2&#34;, // change to md:col-span-2&#xA;    thumbnail: &#34;/exp3.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 4,&#xA;    title: &#34;Lead Frontend Developer&#34;,&#xA;    desc: &#34;Developed and maintained user-facing features using modern frontend technologies.&#34;,&#xA;    className: &#34;md:col-span-2&#34;,&#xA;    thumbnail: &#34;/exp4.svg&#34;,&#xA;  },&#xA;];&#xA;&#xA;export const socialMedia = [&#xA;  {&#xA;    id: 1,&#xA;    img: &#34;/git.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;    img: &#34;/twit.svg&#34;,&#xA;  },&#xA;  {&#xA;    id: 3,&#xA;    img: &#34;/link.svg&#34;,&#xA;  },&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;tailwind.config.ts&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import type { Config } from &#34;tailwindcss&#34;;&#xA;&#xA;const svgToDataUri = require(&#34;mini-svg-data-uri&#34;);&#xA;&#xA;const colors = require(&#34;tailwindcss/colors&#34;);&#xA;const {&#xA;  default: flattenColorPalette,&#xA;} = require(&#34;tailwindcss/lib/util/flattenColorPalette&#34;);&#xA;&#xA;const config = {&#xA;  darkMode: [&#34;class&#34;],&#xA;  content: [&#xA;    &#34;./pages/**/*.{ts,tsx}&#34;,&#xA;    &#34;./components/**/*.{ts,tsx}&#34;,&#xA;    &#34;./app/**/*.{ts,tsx}&#34;,&#xA;    &#34;./src/**/*.{ts,tsx}&#34;,&#xA;    &#34;./data/**/*.{ts,tsx}&#34;,&#xA;  ],&#xA;  prefix: &#34;&#34;,&#xA;  theme: {&#xA;    container: {&#xA;      center: true,&#xA;      padding: &#34;2rem&#34;,&#xA;      screens: {&#xA;        &#34;2xl&#34;: &#34;1400px&#34;,&#xA;      },&#xA;    },&#xA;    extend: {&#xA;      colors: {&#xA;        black: {&#xA;          DEFAULT: &#34;#000&#34;,&#xA;          100: &#34;#000319&#34;,&#xA;          200: &#34;rgba(17, 25, 40, 0.75)&#34;,&#xA;          300: &#34;rgba(255, 255, 255, 0.125)&#34;,&#xA;        },&#xA;        white: {&#xA;          DEFAULT: &#34;#FFF&#34;,&#xA;          100: &#34;#BEC1DD&#34;,&#xA;          200: &#34;#C1C2D3&#34;,&#xA;        },&#xA;        blue: {&#xA;          &#34;100&#34;: &#34;#E4ECFF&#34;,&#xA;        },&#xA;        purple: &#34;#CBACF9&#34;,&#xA;        border: &#34;hsl(var(--border))&#34;,&#xA;        input: &#34;hsl(var(--input))&#34;,&#xA;        ring: &#34;hsl(var(--ring))&#34;,&#xA;        background: &#34;hsl(var(--background))&#34;,&#xA;        foreground: &#34;hsl(var(--foreground))&#34;,&#xA;        primary: {&#xA;          DEFAULT: &#34;hsl(var(--primary))&#34;,&#xA;          foreground: &#34;hsl(var(--primary-foreground))&#34;,&#xA;        },&#xA;        secondary: {&#xA;          DEFAULT: &#34;hsl(var(--secondary))&#34;,&#xA;          foreground: &#34;hsl(var(--secondary-foreground))&#34;,&#xA;        },&#xA;        destructive: {&#xA;          DEFAULT: &#34;hsl(var(--destructive))&#34;,&#xA;          foreground: &#34;hsl(var(--destructive-foreground))&#34;,&#xA;        },&#xA;        muted: {&#xA;          DEFAULT: &#34;hsl(var(--muted))&#34;,&#xA;          foreground: &#34;hsl(var(--muted-foreground))&#34;,&#xA;        },&#xA;        accent: {&#xA;          DEFAULT: &#34;hsl(var(--accent))&#34;,&#xA;          foreground: &#34;hsl(var(--accent-foreground))&#34;,&#xA;        },&#xA;        popover: {&#xA;          DEFAULT: &#34;hsl(var(--popover))&#34;,&#xA;          foreground: &#34;hsl(var(--popover-foreground))&#34;,&#xA;        },&#xA;        card: {&#xA;          DEFAULT: &#34;hsl(var(--card))&#34;,&#xA;          foreground: &#34;hsl(var(--card-foreground))&#34;,&#xA;        },&#xA;      },&#xA;      borderRadius: {&#xA;        lg: &#34;var(--radius)&#34;,&#xA;        md: &#34;calc(var(--radius) - 2px)&#34;,&#xA;        sm: &#34;calc(var(--radius) - 4px)&#34;,&#xA;      },&#xA;      keyframes: {&#xA;        &#34;accordion-down&#34;: {&#xA;          from: { height: &#34;0&#34; },&#xA;          to: { height: &#34;var(--radix-accordion-content-height)&#34; },&#xA;        },&#xA;        &#34;accordion-up&#34;: {&#xA;          from: { height: &#34;var(--radix-accordion-content-height)&#34; },&#xA;          to: { height: &#34;0&#34; },&#xA;        },&#xA;        spotlight: {&#xA;          &#34;0%&#34;: {&#xA;            opacity: &#34;0&#34;,&#xA;            transform: &#34;translate(-72%, -62%) scale(0.5)&#34;,&#xA;          },&#xA;          &#34;100%&#34;: {&#xA;            opacity: &#34;1&#34;,&#xA;            transform: &#34;translate(-50%,-40%) scale(1)&#34;,&#xA;          },&#xA;        },&#xA;        shimmer: {&#xA;          from: {&#xA;            backgroundPosition: &#34;0 0&#34;,&#xA;          },&#xA;          to: {&#xA;            backgroundPosition: &#34;-200% 0&#34;,&#xA;          },&#xA;        },&#xA;        moveHorizontal: {&#xA;          &#34;0%&#34;: {&#xA;            transform: &#34;translateX(-50%) translateY(-10%)&#34;,&#xA;          },&#xA;          &#34;50%&#34;: {&#xA;            transform: &#34;translateX(50%) translateY(10%)&#34;,&#xA;          },&#xA;          &#34;100%&#34;: {&#xA;            transform: &#34;translateX(-50%) translateY(-10%)&#34;,&#xA;          },&#xA;        },&#xA;        moveInCircle: {&#xA;          &#34;0%&#34;: {&#xA;            transform: &#34;rotate(0deg)&#34;,&#xA;          },&#xA;          &#34;50%&#34;: {&#xA;            transform: &#34;rotate(180deg)&#34;,&#xA;          },&#xA;          &#34;100%&#34;: {&#xA;            transform: &#34;rotate(360deg)&#34;,&#xA;          },&#xA;        },&#xA;        moveVertical: {&#xA;          &#34;0%&#34;: {&#xA;            transform: &#34;translateY(-50%)&#34;,&#xA;          },&#xA;          &#34;50%&#34;: {&#xA;            transform: &#34;translateY(50%)&#34;,&#xA;          },&#xA;          &#34;100%&#34;: {&#xA;            transform: &#34;translateY(-50%)&#34;,&#xA;          },&#xA;        },&#xA;        scroll: {&#xA;          to: {&#xA;            transform: &#34;translate(calc(-50% - 0.5rem))&#34;,&#xA;          },&#xA;        },&#xA;      },&#xA;      animation: {&#xA;        &#34;accordion-down&#34;: &#34;accordion-down 0.2s ease-out&#34;,&#xA;        &#34;accordion-up&#34;: &#34;accordion-up 0.2s ease-out&#34;,&#xA;        spotlight: &#34;spotlight 2s ease .75s 1 forwards&#34;,&#xA;        shimmer: &#34;shimmer 2s linear infinite&#34;,&#xA;        first: &#34;moveVertical 30s ease infinite&#34;,&#xA;        second: &#34;moveInCircle 20s reverse infinite&#34;,&#xA;        third: &#34;moveInCircle 40s linear infinite&#34;,&#xA;        fourth: &#34;moveHorizontal 40s ease infinite&#34;,&#xA;        fifth: &#34;moveInCircle 20s ease infinite&#34;,&#xA;        scroll:&#xA;          &#34;scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite&#34;,&#xA;      },&#xA;    },&#xA;  },&#xA;  plugins: [&#xA;    require(&#34;tailwindcss-animate&#34;),&#xA;    addVariablesForColors,&#xA;    function ({ matchUtilities, theme }: any) {&#xA;      matchUtilities(&#xA;        {&#xA;          &#34;bg-grid&#34;: (value: any) =&amp;gt; ({&#xA;            backgroundImage: `url(&#34;${svgToDataUri(&#xA;              `&amp;lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 32 32&#34; width=&#34;100&#34; height=&#34;100&#34; fill=&#34;none&#34; stroke=&#34;${value}&#34;&amp;gt;&amp;lt;path d=&#34;M0 .5H31.5V32&#34;/&amp;gt;&amp;lt;/svg&amp;gt;`&#xA;            )}&#34;)`,&#xA;          }),&#xA;          &#34;bg-grid-small&#34;: (value: any) =&amp;gt; ({&#xA;            backgroundImage: `url(&#34;${svgToDataUri(&#xA;              `&amp;lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 32 32&#34; width=&#34;8&#34; height=&#34;8&#34; fill=&#34;none&#34; stroke=&#34;${value}&#34;&amp;gt;&amp;lt;path d=&#34;M0 .5H31.5V32&#34;/&amp;gt;&amp;lt;/svg&amp;gt;`&#xA;            )}&#34;)`,&#xA;          }),&#xA;          &#34;bg-dot&#34;: (value: any) =&amp;gt; ({&#xA;            backgroundImage: `url(&#34;${svgToDataUri(&#xA;              `&amp;lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 32 32&#34; width=&#34;16&#34; height=&#34;16&#34; fill=&#34;none&#34;&amp;gt;&amp;lt;circle fill=&#34;${value}&#34; id=&#34;pattern-circle&#34; cx=&#34;10&#34; cy=&#34;10&#34; r=&#34;1.6257413380501518&#34;&amp;gt;&amp;lt;/circle&amp;gt;&amp;lt;/svg&amp;gt;`&#xA;            )}&#34;)`,&#xA;          }),&#xA;        },&#xA;        { values: flattenColorPalette(theme(&#34;backgroundColor&#34;)), type: &#34;color&#34; }&#xA;      );&#xA;    },&#xA;  ],&#xA;} satisfies Config;&#xA;&#xA;function addVariablesForColors({ addBase, theme }: any) {&#xA;  let allColors = flattenColorPalette(theme(&#34;colors&#34;));&#xA;  let newVars = Object.fromEntries(&#xA;    Object.entries(allColors).map(([key, val]) =&amp;gt; [`--${key}`, val])&#xA;  );&#xA;&#xA;  addBase({&#xA;    &#34;:root&#34;: newVars,&#xA;  });&#xA;}&#xA;&#xA;export default config;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;globals.css&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@tailwind base;&#xA;@tailwind components;&#xA;@tailwind utilities;&#xA;&#xA;@layer base {&#xA;  :root {&#xA;    --background: 0 0% 100%;&#xA;    --foreground: 240 10% 3.9%;&#xA;&#xA;    --card: 0 0% 100%;&#xA;    --card-foreground: 240 10% 3.9%;&#xA;&#xA;    --popover: 0 0% 100%;&#xA;    --popover-foreground: 240 10% 3.9%;&#xA;&#xA;    --primary: 240 5.9% 10%;&#xA;    --primary-foreground: 0 0% 98%;&#xA;&#xA;    --secondary: 240 4.8% 95.9%;&#xA;    --secondary-foreground: 240 5.9% 10%;&#xA;&#xA;    --muted: 240 4.8% 95.9%;&#xA;    --muted-foreground: 240 3.8% 46.1%;&#xA;&#xA;    --accent: 240 4.8% 95.9%;&#xA;    --accent-foreground: 240 5.9% 10%;&#xA;&#xA;    --destructive: 0 84.2% 60.2%;&#xA;    --destructive-foreground: 0 0% 98%;&#xA;&#xA;    --border: 240 5.9% 90%;&#xA;    --input: 240 5.9% 90%;&#xA;    --ring: 240 10% 3.9%;&#xA;&#xA;    --radius: 0.5rem;&#xA;  }&#xA;&#xA;  .dark {&#xA;    --background: 240 10% 3.9%;&#xA;    --foreground: 0 0% 98%;&#xA;&#xA;    --card: 240 10% 3.9%;&#xA;    --card-foreground: 0 0% 98%;&#xA;&#xA;    --popover: 240 10% 3.9%;&#xA;    --popover-foreground: 0 0% 98%;&#xA;&#xA;    --primary: 0 0% 98%;&#xA;    --primary-foreground: 240 5.9% 10%;&#xA;&#xA;    --secondary: 240 3.7% 15.9%;&#xA;    --secondary-foreground: 0 0% 98%;&#xA;&#xA;    --muted: 240 3.7% 15.9%;&#xA;    --muted-foreground: 240 5% 64.9%;&#xA;&#xA;    --accent: 240 3.7% 15.9%;&#xA;    --accent-foreground: 0 0% 98%;&#xA;&#xA;    --destructive: 0 62.8% 30.6%;&#xA;    --destructive-foreground: 0 0% 98%;&#xA;&#xA;    --border: 240 3.7% 15.9%;&#xA;    --input: 240 3.7% 15.9%;&#xA;    --ring: 240 4.9% 83.9%;&#xA;  }&#xA;}&#xA;&#xA;@layer base {&#xA;  * {&#xA;    @apply border-border !scroll-smooth;&#xA;  }&#xA;  body {&#xA;    @apply bg-background text-foreground;&#xA;  }&#xA;  button {&#xA;    @apply active:outline-none;&#xA;  }&#xA;}&#xA;&#xA;@layer utilities {&#xA;  .heading {&#xA;    @apply font-bold text-4xl md:text-5xl text-center;&#xA;  }&#xA;&#xA;  .black-gradient {&#xA;    background: linear-gradient(90deg, #161a31 0%, #06091f 100%);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;Linear Gradient&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;style={{&#xA;        //   add these two&#xA;        //   you can generate the color from here https://cssgradient.io/&#xA;        background: &#34;rgb(4,7,29)&#34;,&#xA;        backgroundColor:&#xA;          &#34;linear-gradient(90deg, rgba(4,7,29,1) 0%, rgba(12,14,35,1) 100%)&#34;,&#xA;      }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;links&#34;&gt;🔗 Assets&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Assets used in the project can be found &lt;a href=&#34;https://drive.google.com/file/d/1ZmtiMilUYTp1wkiXWMFX6AUk-msE981-/view?usp=sharing&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;more&#34;&gt;🚀 More&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advance your skills with Next.js 14 Pro Course&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoyed creating this project? Dive deeper into our PRO courses for a richer learning adventure. They&#39;re packed with detailed explanations, cool features, and exercises to boost your skills. Give it a go!&lt;/p&gt; &#xA;&lt;a href=&#34;https://jsmastery.pro/next14&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/557837ce-f612-4530-ab24-189e75133c71&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Accelerate your professional journey with the Expert Training program&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;And if you&#39;re hungry for more than just a course and want to understand how we learn and tackle tech challenges, hop into our personalized masterclass. We cover best practices, different web skills, and offer mentorship to boost your confidence. Let&#39;s learn and grow together!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.jsmastery.pro/masterclass&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/fed352ad-f27b-400d-9b8f-c7fe628acb84&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;&lt;/h1&gt;</summary>
  </entry>
</feed>