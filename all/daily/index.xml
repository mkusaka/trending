<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-04T01:31:14Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>midudev/password-generator</title>
    <updated>2022-10-04T01:31:14Z</updated>
    <id>tag:github.com,2022-10-04:/midudev/password-generator</id>
    <link href="https://github.com/midudev/password-generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Best password generator agnostic to framework&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://hacktoberfest-2022.vercel.app/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/midudev/password-generator/main/public/banner_gh.jpg&#34;&gt; &lt;/a&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;¬°Contribuye a un proyecto de c√≥digo abierto!&lt;/h1&gt; &#xA; &lt;p&gt;üöÄ Soluciona el reto y participa en la Hacktoberfest&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/midudev/hacktoberfest-2022&#34; alt=&#34;GitHub stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/midudev/hacktoberfest-2022&#34; alt=&#34;GitHub issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/midudev/hacktoberfest-2022&#34; alt=&#34;GitHub pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-closed-raw/midudev/hacktoberfest-2022&#34; alt=&#34;GitHub pull requests&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;ü§î ¬øQu√© es la Hacktoberfest?&lt;/h2&gt; &#xA;&lt;p&gt;La &lt;strong&gt;&lt;a href=&#34;https://hacktoberfest.com/&#34;&gt;Hacktoberfest&lt;/a&gt;&lt;/strong&gt; es un evento anual organizado por &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt; y &lt;a href=&#34;https://dev.to/&#34;&gt;DEV&lt;/a&gt;, que consiste en contribuir a proyectos de c√≥digo abierto y ganar una camiseta gratis.&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ ¬øC√≥mo participar?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üöß Necesitar√°s la extensi√≥n &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=astro-build.astro-vscode&#34;&gt;Astro para Visual Studio Code&lt;/a&gt; y &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Nodejs 16+&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reg√≠strate en &lt;a href=&#34;https://hacktoberfest.com/&#34;&gt;Hacktoberfest&lt;/a&gt;&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click en &lt;strong&gt;Start Hacking&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Inicia sesi√≥n con GitHub o GitLab.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Crea un fork de este repositorio&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click en &lt;em&gt;Fork&lt;/em&gt; en la esquina superior derecha o haz click &lt;a href=&#34;https://github.com/midudev/hacktoberfest-2022/fork&#34;&gt;aqu√≠&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clona el repositorio:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:TU_USUARIO/hacktoberfest-2022.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instala las dependencias:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;# o&#xA;pnpm install&#xA;# o&#xA;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Crea una p√°gina en&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;/pages/entry/&amp;lt;tu-nombre-de-usuario-en-github&amp;gt;/index.astro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ejecuta el proyecto:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# o&#xA;pnpm run dev&#xA;# o&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Soluciona el reto que se indica en &lt;a href=&#34;https://hacktoberfest-2022.vercel.app/&#34;&gt;la p√°gina principal&lt;/a&gt;&lt;/strong&gt; y happy hacking ü•≥.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üìù Reglas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Puedes usar cualquier framework dentro de esta lista: React, Vue, Svelte, Preact y Solid. Tambi√©n puedes usar Vanilla JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;‚ùå NO puedes usar dependencias de terceros. Nada de npm install, ni yarn add ni similares.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Se puede utilizar CSS y Tailwind pero...&lt;/li&gt; &#xA; &lt;li&gt;‚ùå NO se puede utilizar otro framework CSS como Bootstrap, Bulma, NextUI, Material UI, etc... ni tampoco SASS, Stylus o similares.&lt;/li&gt; &#xA; &lt;li&gt;‚ùå No copies soluciones de otros participantes o soluciones de fuera. ¬°La idea es que practiques y te esfuerces!&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Crea tus PRs del &lt;strong&gt;1 al 31 de octubre&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;‚ùå No uses ni modifiques c√≥digo o componentes de otros participantes.&lt;/li&gt; &#xA; &lt;li&gt;‚ùå No modifiques c√≥digo de fuera de tus carpetas (a no ser que sea exactamente para arreglar un problema de la p√°gina).&lt;/li&gt; &#xA; &lt;li&gt;‚ùå NO USES ESTILOS GLOBALES. NO ESTILES etiquetas. Usa siempre un selector muy espec√≠fico (por ejemplo, una id con tu nombre) y a partir de ah√≠ estila lo que quieras de tu soluci√≥n. As√≠ evitamos conflictos entre estilos.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Si necesitas crear componentes auxiliares para tu soluci√≥n, crea una carpeta en:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; components/&amp;lt;nombre-de-usuario-en-github&amp;gt;/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üéÅ Premios&lt;/h2&gt; &#xA;&lt;p&gt;Adem√°s de poder conseguir la camiseta de la Hacktoberfest, haremos una votaci√≥n para elegir las mejores soluciones. Los premios son:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü•á Teclado mec√°nico &lt;a href=&#34;https://www.keychron.com/products/keychron-k3-wireless-mechanical-keyboard?variant=32220198633561&#34;&gt;Keychron K3 v2 RGB Backlight&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;ü•à &lt;a href=&#34;https://www.redbubble.com/es/&#34;&gt;Cheque regalo para Red Bubble&lt;/a&gt; por valor de 30‚Ç¨.&lt;/li&gt; &#xA; &lt;li&gt;ü•â &lt;a href=&#34;https://leanpub.com/aprendiendo-git&#34;&gt;Libro de Aprendiendo Git&lt;/a&gt; + &lt;a href=&#34;https://leanpub.com/descubre-svelte&#34;&gt;Descubre Svelte&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìù Notas&lt;/h2&gt; &#xA;&lt;p&gt;Si usas Solid o Preact, debes indicar el &lt;a href=&#34;https://www.typescriptlang.org/tsconfig#jsxImportSource&#34;&gt;&lt;code&gt;jsxImportSource&lt;/code&gt;&lt;/a&gt; en un comentario pragma. Haz esto en la primera l√≠nea de cada archivo JSX/TSX.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Para Preact&#xA;/** @jsxImportSource preact */&#xA;&#xA;// Para Solid&#xA;/** @jsxImportSource solid-js */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;M√°s informaci√≥n al respecto &lt;a href=&#34;https://docs.astro.build/es/guides/typescript/#soluci%C3%B3n-de-problemas&#34;&gt;aqu√≠&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ü§ó Contribuidores&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/midudev/hacktoberfest-2022/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=midudev/hacktoberfest-2022&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>iced-rs/iced</title>
    <updated>2022-10-04T01:31:14Z</updated>
    <id>tag:github.com,2022-10-04:/iced-rs/iced</id>
    <link href="https://github.com/iced-rs/iced" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true&#34; width=&#34;140px&#34;&gt; &#xA; &lt;h1&gt;Iced&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.rs/iced/&#34;&gt;&lt;img src=&#34;https://docs.rs/iced/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/iced&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/iced.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/l/iced.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/iced&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/iced.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iced-rs/iced/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/iced-rs/iced/Test?event=push&amp;amp;label=test&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/3xZJ65GAhd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href=&#34;https://elm-lang.org/&#34;&gt;Elm&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;a href=&#34;https://gfycat.com/littlesanehalicore&#34;&gt; &lt;img src=&#34;https://thumbs.gfycat.com/LittleSaneHalicore-small.gif&#34; height=&#34;350px&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://gfycat.com/politeadorableiberianmole&#34;&gt; &lt;img src=&#34;https://thumbs.gfycat.com/PoliteAdorableIberianmole-small.gif&#34; height=&#34;350px&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; &#xA; &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg&#34;&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and &lt;a href=&#34;https://github.com/iced-rs/iced_web&#34;&gt;the Web&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Responsive layout&lt;/li&gt; &#xA; &lt;li&gt;Built-in widgets (including &lt;a href=&#34;https://gfycat.com/alertcalmcrow-rust-gui&#34;&gt;text inputs&lt;/a&gt;, &lt;a href=&#34;https://gfycat.com/perkybaggybaboon-rust-gui&#34;&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; &#xA; &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gfycat.com/incredibledarlingbee&#34;&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt;Modular ecosystem&lt;/a&gt; split into reusable parts: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/native/&#34;&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; &#xA;   &lt;li&gt;Two &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md#Renderers&#34;&gt;built-in renderers&lt;/a&gt; leveraging &lt;a href=&#34;https://github.com/gfx-rs/wgpu&#34;&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/grovesNL/glow&#34;&gt;&lt;code&gt;glow&lt;/code&gt;&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/&#34;&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/glow/&#34;&gt;&lt;code&gt;iced_glow&lt;/code&gt;&lt;/a&gt; supporting OpenGL 2.1+ and OpenGL ES 2.0+&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/winit/&#34;&gt;windowing shell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://github.com/iced-rs/iced_web&#34;&gt;web runtime&lt;/a&gt; leveraging the DOM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md&#34;&gt;Take a look at the roadmap&lt;/a&gt;, &lt;a href=&#34;https://github.com/iced-rs/iced/issues&#34;&gt;check out the issues&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/#contributing--feedback&#34;&gt;feel free to contribute!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;iced&lt;/code&gt; as a dependency in your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;iced = &#34;0.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your project is using a Rust edition older than 2021, then you will need to set &lt;code&gt;resolver = &#34;2&#34;&lt;/code&gt; in the &lt;code&gt;[package]&lt;/code&gt; section as well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Iced moves fast and the &lt;code&gt;master&lt;/code&gt; branch can contain breaking changes!&lt;/strong&gt; If you want to learn about a specific release, check out &lt;a href=&#34;https://github.com/iced-rs/iced/releases&#34;&gt;the release list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://guide.elm-lang.org/architecture/&#34;&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; ‚Äî the state of your application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; ‚Äî user interactions or meaningful events that you care about&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; ‚Äî a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; ‚Äî a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We can build something to see how this works! Let&#39;s say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; &#xA;&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;struct Counter {&#xA;    // The counter value&#xA;    value: i32,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;#[derive(Debug, Clone, Copy)]&#xA;pub enum Message {&#xA;    IncrementPressed,&#xA;    DecrementPressed,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, let&#39;s show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use iced::widget::{button, column, text, Column};&#xA;&#xA;impl Counter {&#xA;    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {&#xA;        // We use a column: a simple vertical layout&#xA;        column![&#xA;            // The increment button. We tell it to produce an&#xA;            // `IncrementPressed` message when pressed&#xA;            button(&#34;+&#34;).on_press(Message::IncrementPressed),&#xA;&#xA;            // We show the value of the counter here&#xA;            text(self.value).size(50),&#xA;&#xA;            // The decrement button. We tell it to produce a&#xA;            // `DecrementPressed` message when pressed&#xA;            button(&#34;-&#34;).on_press(Message::DecrementPressed),&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;impl Counter {&#xA;    // ...&#xA;&#xA;    pub fn update(&amp;amp;mut self, message: Message) {&#xA;        match message {&#xA;            Message::IncrementPressed =&amp;gt; {&#xA;                self.value += 1;&#xA;            }&#xA;            Message::DecrementPressed =&amp;gt; {&#xA;                self.value -= 1;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s everything! We just wrote a whole user interface. Iced is now able to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; &#xA; &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Browse the &lt;a href=&#34;https://docs.rs/iced/&#34;&gt;documentation&lt;/a&gt; and the &lt;a href=&#34;https://github.com/iced-rs/iced/tree/master/examples&#34;&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; &#xA;&lt;h2&gt;Implementation details&lt;/h2&gt; &#xA;&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href=&#34;https://elm-lang.org/&#34;&gt;Elm&lt;/a&gt; and &lt;a href=&#34;https://guide.elm-lang.org/architecture/&#34;&gt;The Elm Architecture&lt;/a&gt; into &lt;a href=&#34;https://github.com/hecrj/coffee&#34;&gt;Coffee&lt;/a&gt;, a 2D game engine I am working on.&lt;/p&gt; &#xA;&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href=&#34;https://github.com/hecrj/coffee/pull/35&#34;&gt;this pull request&lt;/a&gt;. &lt;a href=&#34;https://github.com/iced-rs/iced/tree/0.1.0-alpha&#34;&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href=&#34;https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/&#34;&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour&#34;&gt;tour example&lt;/a&gt; on top of &lt;a href=&#34;https://github.com/ggez/ggez&#34;&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; &#xA;&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt;the ecosystem&lt;/a&gt; modular:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt; &lt;img alt=&#34;The Iced Ecosystem&#34; src=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/graphs/ecosystem.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;GraphicsAdapterNotFound&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This occurs when the selected &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/ECOSYSTEM.md#Renderers&#34;&gt;built-in renderer&lt;/a&gt; is not able to create a context.&lt;/p&gt; &#xA;&lt;p&gt;Often this will occur while using &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/&#34;&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; as the renderer without supported hardware (needs Vulkan, Metal or DX12). In this case, you could try using the &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/glow/&#34;&gt;&lt;code&gt;iced_glow&lt;/code&gt;&lt;/a&gt; renderer:&lt;/p&gt; &#xA;&lt;p&gt;First, check if it works with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo run --features iced/glow --package game_of_life&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then use it in your project with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;iced = { version = &#34;0.4&#34;, default-features = false, features = [&#34;glow&#34;] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Chances are you have hardware that supports at least OpenGL 2.1 or OpenGL ES 2.0, but if you don&#39;t, right now there&#39;s no software fallback, so it means your hardware doesn&#39;t support Iced.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are greatly appreciated! If you want to contribute, please read our &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Feedback is also welcome! You can open an issue or, if you want to talk, come chat to our &lt;a href=&#34;https://discord.gg/3xZJ65GAhd&#34;&gt;Discord server&lt;/a&gt;. Moreover, you can find me (and a bunch of awesome folks) over the &lt;code&gt;#games-and-graphics&lt;/code&gt; and &lt;code&gt;#gui-and-ui&lt;/code&gt; channels in the &lt;a href=&#34;https://bit.ly/rust-community&#34;&gt;Rust Community Discord&lt;/a&gt;. I go by &lt;code&gt;lone_scientist#9554&lt;/code&gt; there.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The development of Iced is sponsored by the &lt;a href=&#34;https://cryptowat.ch/charts&#34;&gt;Cryptowatch&lt;/a&gt; team at &lt;a href=&#34;https://kraken.com/&#34;&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ossamamehmood/Hacktoberfest2022</title>
    <updated>2022-10-04T01:31:14Z</updated>
    <id>tag:github.com,2022-10-04:/ossamamehmood/Hacktoberfest2022</id>
    <link href="https://github.com/ossamamehmood/Hacktoberfest2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hacktoberfest 2022 OPEN FIRST Pull Request - FREE T-SHIRTüéâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hacktoberfest 2022 &lt;code&gt;OPEN FIRST&lt;/code&gt; Pull Request - &lt;code&gt;FREE T-SHIRT&lt;/code&gt;üéâ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ossamamehmood/Hacktoberfest2022/main/static/logo.png&#34; alt=&#34;Hacktoberfest 2021&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors of &lt;code&gt;Hacktoberfest 2022&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/ossamamehmood/Hacktoberfest2022/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=ossamamehmood/Hacktoberfest2022&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;This project is perfect for your first pull request&lt;/h2&gt; &#xA;&lt;p&gt;üó£ &lt;strong&gt;Hacktoberfest encourages participation in the open source community, which grows bigger every year. Complete the challenge and earn a limited edition T-shirt.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;üì¢ &lt;strong&gt;Register &lt;a href=&#34;https://hacktoberfest.digitalocean.com&#34;&gt;here&lt;/a&gt; for Hacktoberfest and make four pull requests (PRs) between October 1st-31st to grab free SWAGS üî•.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/hacktoberfest-2022-blueviolet&#34; alt=&#34;Hacktober Badge&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/static/v1?label=%F0%9F%8C%9F&amp;amp;message=If%20Useful&amp;amp;style=style=flat&amp;amp;color=BC4E99&#34; alt=&#34;Star Badge&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/ossamamehmood&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributions-welcome-violet.svg?style=flat&amp;amp;logo=git&#34; alt=&#34;Contributions&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ossamamehmood/hacktoberfest2022/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/ossamamehmood/hacktoberfest2022&#34; alt=&#34;Pull Requests Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossamamehmood/hacktoberfest2022/graphs/contributors&#34;&gt;&lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/ossamamehmood/hacktoberfest2022?color=2b9348&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossamamehmood/hacktoberfest2022/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ossamamehmood/hacktoberfest2022?color=2b9348&#34; alt=&#34;License Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this Repository using the button at the top on right corner.&lt;/li&gt; &#xA; &lt;li&gt;Clone your forked repository to your pc ( git clone &#34;url from clone option&#34;.)&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch for your modifications (ie. &lt;code&gt;git branch new-user&lt;/code&gt; and check it out &lt;code&gt;git checkout new-user&lt;/code&gt; or simply do &lt;code&gt;git checkout -b new-user&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Add your profile image in &lt;code&gt;static/images/&lt;/code&gt; ( use drag and drop option or upload by commands.)&lt;/li&gt; &#xA; &lt;li&gt;Add your profile data in &lt;code&gt;content/participant/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add your files (&lt;code&gt;git add -A&lt;/code&gt;), commit (&lt;code&gt;git commit -m &#34;added myself&#34;&lt;/code&gt;) and push (&lt;code&gt;git push origin new-user&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request&lt;/li&gt; &#xA; &lt;li&gt;Star this repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to make your first Pull Request&lt;/h1&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;YOUR-USERNAME&amp;gt;&lt;/code&gt; with your GitHub username in this guide.&lt;/p&gt; &#xA;&lt;h2&gt;1. Add your profile picture to the folder&lt;/h2&gt; &#xA;&lt;p&gt;Add a picture picture of your choice in &lt;code&gt;static/images/&lt;/code&gt;. Accepted files are &lt;strong&gt;png&lt;/strong&gt; and &lt;strong&gt;jpg&lt;/strong&gt;, should be squared and minimum size 544x544 pixels. Ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;static/images/&amp;lt;YOUR-USERNAME&amp;gt;.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2. Add your profile information&lt;/h2&gt; &#xA;&lt;p&gt;Create a markdown file in your folder following the convention &lt;code&gt;content/participant/&amp;lt;YOUR-USERNAME&amp;gt;.md&lt;/code&gt;. Ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;content/participant/&amp;lt;YOUR-USERNAME&amp;gt;.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the next template into your file, delete the boilerplate data and fill the information with yours.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;name: YOURNAME&#xA;institution/company: INSTITUTION_NAME&#xA;github:USERNAME&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt; OR &lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;3. Create / Upload Your Code / Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;Create/Upload your code in folder following the convention &lt;code&gt;Add Code Here&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choose an extact lanaguage folder &lt;code&gt;drop your code&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Below is &lt;code&gt;an example&lt;/code&gt; to add file properly&lt;/li&gt; &#xA; &lt;li&gt;You can follow up &lt;code&gt;any languages&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add Code Here/PYTHON/&amp;lt;YOUR-FILERNAME&amp;gt;.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add Code Here/C++/&amp;lt;YOUR-FILERNAME&amp;gt;.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can follow any pathway a &lt;code&gt;code&lt;/code&gt; or &lt;code&gt;profile information&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;4. Wait for Pull Request to merge&lt;/h2&gt; &#xA;&lt;h2&gt;5. Celebrate - you&#39;ve done your first pull request!!!!!&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;&#39;&#39;&#39;&#xA;Always make more then 4 pull requests.&#xA;Lets say you have made only 4 pull request to different projects,&#xA;but one project is excluded from hackoctoberfest event then your pull request will not be counted and &#xA;then you have remaining 3 valid pull requests if these projects is not excluded.&#xA;If you fail to make 4 pull requests then you can&#39;t get swags or t-shirts.&#xA;I will recommend you to make pull request to your own repo which is very very safest side for you..&#xA;keep in mind that repo has hacktoberfest topic..&#xA;&#39;&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;+ Follow Me : } Quick Approval of Pull Request&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;&#39;&#39;&#39;&#xA;To get approval of the pull request much quicker and faster (`Follow Me`)üöÄ&#xA;&#39;&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;a href=&#34;https://github.com/ossamamehmood&#34;&gt;&lt;kbd&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/ossamamehmood?size=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;/kbd&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ossama Mehmood&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&#xA;&lt;br&gt;</summary>
  </entry>
</feed>