<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:32:48Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rodrigorgtic/nlwcopa-mobile-components</title>
    <updated>2022-11-06T01:32:48Z</updated>
    <id>tag:github.com,2022-11-06:/rodrigorgtic/nlwcopa-mobile-components</id>
    <link href="https://github.com/rodrigorgtic/nlwcopa-mobile-components" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚽ NLW Copa - Componentes do App Mobile.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>geohot/tinygrad</title>
    <updated>2022-11-06T01:32:48Z</updated>
    <id>tag:github.com,2022-11-06:/geohot/tinygrad</id>
    <link href="https://github.com/geohot/tinygrad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;You like pytorch? You like micrograd? You love tinygrad! ❤️&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/geohot/tinygrad/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For something in between a &lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;pytorch&lt;/a&gt; and a &lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;karpathy/micrograd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This may not be the best deep learning framework, but it is a deep learning framework.&lt;/p&gt; &#xA;&lt;p&gt;The sub 1000 line core of it is in &lt;code&gt;tinygrad/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Due to its extreme simplicity, it aims to be the easiest framework to add new accelerators to, with support for both inference and training. Support the simple basic ops, and you get SOTA &lt;a href=&#34;https://arxiv.org/abs/1905.11946&#34;&gt;vision&lt;/a&gt; &lt;code&gt;models/efficientnet.py&lt;/code&gt; and &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;language&lt;/a&gt; &lt;code&gt;models/transformer.py&lt;/code&gt; models.&lt;/p&gt; &#xA;&lt;p&gt;We are working on support for the Apple Neural Engine and the Google TPU in the &lt;code&gt;accel/&lt;/code&gt; folder. Eventually, &lt;a href=&#34;https://geohot.github.io/blog/jekyll/update/2021/06/13/a-breakdown-of-ai-chip-companies.html&#34;&gt;we will build custom hardware&lt;/a&gt; for tinygrad, and it will be blindingly fast. Now, it is slow.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/geohot/tinygrad.git&#xA;cd tinygrad&#xA;python3 setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;x = Tensor.eye(3, requires_grad=True)&#xA;y = Tensor([[2.0,0,-2.0]], requires_grad=True)&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad)  # dz/dx&#xA;print(y.grad)  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Same example in torch&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;x = torch.eye(3, requires_grad=True)&#xA;y = torch.tensor([[2.0,0,-2.0]], requires_grad=True)&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad)  # dz/dx&#xA;print(y.grad)  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Neural networks?&lt;/h2&gt; &#xA;&lt;p&gt;It turns out, a decent autograd tensor library is 90% of what you need for neural networks. Add an optimizer (SGD, RMSprop, and Adam implemented) from tinygrad.nn.optim, write some boilerplate minibatching code, and you have all you need.&lt;/p&gt; &#xA;&lt;h3&gt;Neural network example (from test/test_mnist.py)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;import tinygrad.nn.optim as optim&#xA;&#xA;class TinyBobNet:&#xA;  def __init__(self):&#xA;    self.l1 = Tensor.uniform(784, 128)&#xA;    self.l2 = Tensor.uniform(128, 10)&#xA;&#xA;  def forward(self, x):&#xA;    return x.dot(self.l1).relu().dot(self.l2).logsoftmax()&#xA;&#xA;model = TinyBobNet()&#xA;optim = optim.SGD([model.l1, model.l2], lr=0.001)&#xA;&#xA;# ... and complete like pytorch, with (x,y) data&#xA;&#xA;out = model.forward(x)&#xA;loss = out.mul(y).mean()&#xA;optim.zero_grad()&#xA;loss.backward()&#xA;optim.step()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPU and Accelerator Support&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad supports GPUs through PyOpenCL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;(Tensor.ones(4,4).gpu() + Tensor.ones(4,4).gpu()).cpu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ANE Support?! (broken)&lt;/h3&gt; &#xA;&lt;p&gt;If all you want to do is ReLU, you are in luck! You can do very fast ReLU (at least 30 MEGAReLUs/sec confirmed)&lt;/p&gt; &#xA;&lt;p&gt;Requires your Python to be signed with &lt;code&gt;ane/lib/sign_python.sh&lt;/code&gt; to add the &lt;code&gt;com.apple.ane.iokit-user-access&lt;/code&gt; entitlement, which also requires &lt;code&gt;sudo nvram boot-args=&#34;amfi_get_out_of_my_way=1 ipc_control_port_options=0&#34;&lt;/code&gt;. Build the library with &lt;code&gt;ane/lib/build.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to set boot-args and for the AMFI kext to respect that arg, run &lt;code&gt;csrutil enable --without-kext --without-nvram&lt;/code&gt; in recovery mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;a = Tensor([-2,-1,0,1,2]).ane()&#xA;b = a.relu()&#xA;print(b.cpu())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Warning: do not rely on the ANE port. It segfaults sometimes. So if you were doing something important with tinygrad and wanted to use the ANE, you might have a bad time.&lt;/p&gt; &#xA;&lt;h3&gt;hlops (in tensor.py)&lt;/h3&gt; &#xA;&lt;p&gt;hlops are syntactic sugar around mlops. They support most things torch does.&lt;/p&gt; &#xA;&lt;h3&gt;mlops&lt;/h3&gt; &#xA;&lt;p&gt;mlops are mid level ops, there&#39;s 15 of them. They understand memory allocation and derivatives&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Relu, Log, Exp                          # unary ops&#xA;Sum, Max                                # reduce ops (with axis argument)&#xA;Add, Sub, Mul, Pow                      # binary ops (no broadcasting, use expand)&#xA;Reshape, Permute, Slice, Expand, Flip   # movement ops&#xA;Conv2D(NCHW)                            # processing op (Matmul is also Conv2D)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You no longer need to write mlops for a new accelerator&lt;/p&gt; &#xA;&lt;h3&gt;Adding an accelerator (llops)&lt;/h3&gt; &#xA;&lt;p&gt;The autodiff stuff is all in mlops now so you can focus on the raw operations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Buffer                                                     # class of memory on this device&#xA;unary_op  (RELU, EXP, LOG, NEG, SIGN)                      # A -&amp;gt; A&#xA;reduce_op (SUM, MAX)                                       # A -&amp;gt; B (smaller size, B has 1 in shape)&#xA;binary_op (ADD, SUB, MUL, DIV, POW, CMPEQ)                 # A + B -&amp;gt; C (all the same size)&#xA;movement_op (RESHAPE, PERMUTE, PAD, SHRINK, EXPAND, FLIP)  # A -&amp;gt; B (different size)&#xA;processing_op (CONV)                                       # A + B -&amp;gt; C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When tinygrad moves to lazy evaluation, optimizations will happen here.&lt;/p&gt; &#xA;&lt;h2&gt;ImageNet inference&lt;/h2&gt; &#xA;&lt;p&gt;Despite being tiny, tinygrad supports the full EfficientNet. Pass in a picture to discover what it is.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py https://media.istockphoto.com/photos/hen-picture-id831791190&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you have a webcam and cv2 installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py webcam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PROTIP: Set &#34;GPU=1&#34; environment variable if you want this to go faster.&lt;/p&gt; &#xA;&lt;p&gt;PROPROTIP: Set &#34;DEBUG=1&#34; environment variable if you want to see why it&#39;s slow.&lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports Stable Diffusion!&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;TORCH=1 python3 examples/stable_diffusion.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(or without torch: &lt;code&gt;OPT=2 OPENCL=1 python3 examples/stable_diffusion.py&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/stable_diffusion_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#34;a horse sized cat eating a bagel&#34; &lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports GANs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/mnist_gan.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/mnist_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports yolo&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/yolov3.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/yolo_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;The promise of small&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad will always be below 1000 lines. If it isn&#39;t, we will revert commits until tinygrad becomes smaller.&lt;/p&gt; &#xA;&lt;h3&gt;Drawing Execution Graph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodes are Tensors&lt;/li&gt; &#xA; &lt;li&gt;Black edge is a forward pass&lt;/li&gt; &#xA; &lt;li&gt;Blue edge is a backward pass&lt;/li&gt; &#xA; &lt;li&gt;Red edge is data the backward pass depends on&lt;/li&gt; &#xA; &lt;li&gt;Purple edge is intermediates created in the forward&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GRAPH=1 python3 test/test_mnist.py TestMNIST.test_sgd_onestep&#xA;# requires dot, outputs /tmp/net.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pytest&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ssnhd/googlevoice</title>
    <updated>2022-11-06T01:32:48Z</updated>
    <id>tag:github.com,2022-11-06:/ssnhd/googlevoice</id>
    <link href="https://github.com/ssnhd/googlevoice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;注册 Google Voice 号码详细步骤&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Voice 注册、转移、使用教程&lt;/h1&gt; &#xA;&lt;p&gt;Google Voice（简称 GV）是谷歌推出的虚拟号码，0 月租、免费拨打美加电话，免费接收短信。&lt;br&gt; +86 号码注册 Telegram 存在无隐私、私聊限制、加群失败等问题，建议用 GV 注册电报，还可以注册 B 站、Clubhouse、Twitter……&lt;/p&gt; &#xA;&lt;p&gt;您感兴趣的：&lt;a href=&#34;https://ssnhd.com/2022/07/16/googlevoice/&#34;&gt;注册 Google Voice&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;购买 Google Voice&lt;/h2&gt; &#xA;&lt;p&gt;全网最优质 GV、Gmail、各区 Apple ID，欢迎选购！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram 频道：&lt;a href=&#34;https://t.me/GVStore&#34;&gt;Google Voice 商店&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Telegram 群组：&lt;a href=&#34;https://t.me/V2EXPro&#34;&gt;V2EX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;E-mail：&lt;a href=&#34;mailto:ahezuo@gmail.com&#34;&gt;ahezuo@gmail.com&lt;/a&gt;（如果电报无法私聊，请发邮件）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;修改语言（可选）&lt;/h2&gt; &#xA;&lt;p&gt;1、打开 &lt;a href=&#34;https://voice.google.com/&#34;&gt;Google Voice&lt;/a&gt;，首次登录可能要&lt;strong&gt;确认您的辅助邮箱&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/cAWNsRj.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;2、点击右上角头像，&lt;strong&gt;管理您的 Google 帐号&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/DKcKZQl.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3、点击个人信息（左侧第二个），右侧找到 Language 修改语言，例如中文。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/oMYAOmY.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;修改密码，辅助邮箱&lt;/h2&gt; &#xA;&lt;p&gt;点击安全性，找到密码进行修改，再将辅助邮箱改为自己的邮箱。&lt;br&gt; &lt;code&gt;注：建议开启两步验证账号更安全。&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dmWyVKU.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;手机使用 ★★★&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;苹果手机美区 App Store 安装 &lt;a href=&#34;https://apps.apple.com/us/app/google-voice/id318698524&#34;&gt;Voice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;安卓手机美区 Google Play 安装 &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.googlevoice&amp;amp;hl=zh&amp;amp;gl=US&#34;&gt;Voice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;手机登录 Voice 点击&lt;strong&gt;设置&lt;/strong&gt; → &lt;strong&gt;拨打和接听电话&lt;/strong&gt; → 勾选&lt;strong&gt;首选 Wi-Fi 和移动数据网络&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/TCY50ff.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;网页使用&lt;/h2&gt; &#xA;&lt;p&gt;网页登录 &lt;a href=&#34;https://voice.google.com/&#34;&gt;Google Voice&lt;/a&gt;，左上角点击&lt;strong&gt;发送新消息&lt;/strong&gt;收发短信，右侧区域接打电话。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/IrB7dd5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;保号&lt;/h2&gt; &#xA;&lt;p&gt;3 个月内用户没有主动使用 GV，谷歌会收回号码，收回前一周会收到谷歌邮件提醒。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;拨打美国微软、苹果电话&lt;/li&gt; &#xA; &lt;li&gt;拥有多个 GV 互相联系&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;资费&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;免费接电话，免费收短信（拨打电话和发送短信免费仅支持美国和加拿大）&lt;/li&gt; &#xA; &lt;li&gt;拨打中国号码 0.02 美元/分钟，&lt;a href=&#34;https://voice.google.com/u/0/rates?pli=1&#34;&gt;其他国家/地区资费&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;一般大陆用户使用 Google Voice 只是收短信，如果你需要充值，有两种方法。&lt;/p&gt; &#xA;&lt;p&gt;方法一：网页打开 &lt;a href=&#34;https://voice.google.com/u/3/billing&#34;&gt;Google Voice&lt;/a&gt; 点击&lt;strong&gt;话费充值&lt;/strong&gt; → 选择金额 → 话费充值 → 填写信用卡信息 → 点击购买。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/5WiCJVa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;方法二：微信换绑 Google Voice 后有 Wechat Out 功能，在这里使用并充值。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/facZ0Wb.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;转移&lt;/h2&gt; &#xA;&lt;p&gt;Google Voice 支持转移到其他谷歌帐号，条件如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;美国原生 IP&lt;/li&gt; &#xA; &lt;li&gt;同设备登录时长超 15 天&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;先激活转入 Google 账号：打开 &lt;a href=&#34;https://voice.google.com/u/0/messages&#34;&gt;Google Voice&lt;/a&gt; 并登陆，同意服务条款，出现选号界面即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/b7Iiwn2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;1、登录转出 &lt;a href=&#34;https://voice.google.com/u/0/messages&#34;&gt;Google Voice&lt;/a&gt; 帐号，点按右上角&lt;strong&gt;齿轮按钮&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/FpZ4KxH.png&#34; alt=&#34;&#34;&gt; 2、点击&lt;strong&gt;转移号码&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/OASFgdA.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3、填写转入的谷歌邮箱，点击&lt;strong&gt;发送转移请求&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dnPKT2H.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;4、显示正在等待确认，点击&lt;strong&gt;知道了&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/YbWLJgg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;5、回到转入 Google Voice 页面，点击左下角&lt;strong&gt;查看&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Yl00SOG.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;6、点击&lt;strong&gt;接受&lt;/strong&gt;，完成转移。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/naiWfji.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;转移失败原因&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;代理不是美国原生 IP&lt;/li&gt; &#xA; &lt;li&gt;使用时长太短（勿频繁更换 IP 和设备）&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>