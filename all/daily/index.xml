<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-25T01:29:17Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kovidgoyal/kitty</title>
    <updated>2022-12-25T01:29:17Z</updated>
    <id>tag:github.com,2022-12-25:/kovidgoyal/kitty</id>
    <link href="https://github.com/kovidgoyal/kitty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform, fast, feature-rich, GPU based terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kitty - the fast, feature-rich, cross-platform, GPU based terminal&lt;/h1&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;the kitty website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/kovidgoyal/kitty/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/kovidgoyal/kitty/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/faq/&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;To ask other questions about kitty usage, use either the &lt;a href=&#34;https://github.com/kovidgoyal/kitty/discussions/&#34;&gt;discussions on GitHub&lt;/a&gt; or the &lt;a href=&#34;https://www.reddit.com/r/KittyTerminal&#34;&gt;Reddit community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;Packaging status in various repositories:&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://repology.org/project/kitty/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/kitty.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>illacloud/illa-builder</title>
    <updated>2022-12-25T01:29:17Z</updated>
    <id>tag:github.com,2022-12-25:/illacloud/illa-builder</id>
    <link href="https://github.com/illacloud/illa-builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source low-code Platform for Developers.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img alt=&#34;ILLA Design Logo&#34; width=&#34;120px&#34; height=&#34;120px&#34; src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/illa-logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt;ILLA Builder&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; ‚ö† Note: This is a Beta Version ‚ö†&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;ILLA is a robust open source low-code platform for developers to build internal tools. By using ILLA&#39;s library of Components and Actions, developers can save massive amounts of time on building tools. &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  English | &#xA; &lt;a href=&#34;https://github.com/illacloud/illa-builder/raw/main/README-CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &#xA; &lt;a href=&#34;https://github.com/illacloud/illa-builder/raw/main/README-KR.md&#34;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &#xA; &lt;a href=&#34;https://github.com/illacloud/illa-builder/raw/main/README-JP.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/github-home.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/illacloud&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Discord-7289DA?logo=discord&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/illacloudHQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1DA1F2?logo=twitter&amp;amp;logoColor=white&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orgs/illacloud/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discussions-GitHub-333333?logo=github&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Crowdin&#34; target=&#34;_blank&#34; href=&#34;https://crowdin.com/project/illa-builder&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/illa-builder/localized.svg?sanitize=true&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/illacloud/illa-builder/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/illacloud/illa-builder&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/illacloud/illa-builder/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/PRs/Welcome/green?icon=storybook&#34; height=&#34;18&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üöÄGet Started&lt;/h2&gt; &#xA;&lt;p&gt;The most convenient way to try ILLA Builder is by creating an ILLA account on &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt;Fast-try&lt;/a&gt;. You can also deploy ILLA utils manually(Docker, docker-compose, and k8s). ILLA Cloud service is coming this December, join our &lt;a href=&#34;https://discord.gg/zKf3WKCufR&#34;&gt;Discord Community&lt;/a&gt; to get Free Cloud Service Code.&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.illacloud.com/en-US/docs/deploy-introduction&#34;&gt;&lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/self-hosted.png&#34; height=&#34;120&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt;&lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/live-demo.png&#34; height=&#34;120&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://illacloud.com&#34;&gt;&lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/illa-cloud.png&#34; height=&#34;120&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;‚öΩ &lt;strong&gt;Real-time Collaboration:&lt;/strong&gt; We can create everything in real-time together.&lt;/li&gt; &#xA; &lt;li&gt;üõ† &lt;strong&gt;Custom Plugin:&lt;/strong&gt; Build any custom plugin to do what you want.&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ &lt;strong&gt;Automate Support:&lt;/strong&gt; Connect everything and automate them in 5 seconds.&lt;/li&gt; &#xA; &lt;li&gt;üñ• &lt;strong&gt;Self-hosted:&lt;/strong&gt; supports Docker &amp;amp; k8s&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;strong&gt;Page Support:&lt;/strong&gt; The base of creating a content-rich and UI-friendly tool.&lt;/li&gt; &#xA; &lt;li&gt;üé® &lt;strong&gt;Powered by &lt;a href=&#34;https://github.com/illacloud/illa-design&#34;&gt;ILLA Design&lt;/a&gt;:&lt;/strong&gt; Components should not constrain your imagination.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Self-hosted&lt;/h2&gt; &#xA;&lt;p&gt;The ILLA CLI enables you to deploy ILLA Builder faster than your imagination. &lt;a href=&#34;https://www.illacloud.com/docs/illa-cli&#34;&gt;Click here&lt;/a&gt; for more details. After successfully deployed, you can register with email address or log in with the following information:&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt;Username (email): root&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt;Password: password&lt;/p&gt; &#xA;&lt;h2&gt;How to build your tool&lt;/h2&gt; &#xA;&lt;h4&gt;üéØ Step 1: Connect to your database&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/sql.jpeg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;üé® Step 2: Build UI with built-in components&lt;/h4&gt; &#xA;&lt;p&gt;Build your UI by dragging components to the canvas. We provide dozens of components including charts, tables, forms, and many more in Illa Builder and Illa Design. When components overlap, their position will be automatically adjusted, which makes the layout development easy and flexible.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/edit-ui-with-components.gif&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;üîå Step 3: Connect to your data&lt;/h4&gt; &#xA;&lt;p&gt;Connect to MySQL or REST API through our GUI data connectors. And we will add more than 10 databases and APIs soon.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/connect-your-data.gif&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;üöÄ Step 4: Deploy your app&lt;/h4&gt; &#xA;&lt;p&gt;Deploy your app and self host it.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fast-try.illacloud.com/&#34;&gt; &lt;img src=&#34;https://github.com/illacloud/.github/raw/main/assets/images/deploy.gif&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ùó The current version is still in beta, each version update will clear the data, please do not store important data in our live demo.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Community&lt;/h2&gt; &#xA;&lt;p&gt;Join ILLA Community to share your ideas, suggestions, or questions and connect with other users and contributors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/illacloud&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Discord-7289DA?logo=discord&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orgs/illacloud/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discussions-GitHub-333333?logo=github&#34; alt=&#34;Discuss on GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üå± Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thinking about contributing? All kinds of contributions to ILLA are greatly appreciated and welcomed! Check out &lt;a href=&#34;https://raw.githubusercontent.com/illacloud/illa-builder/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; for details about how you can get involved.&lt;/p&gt; &#xA;&lt;p&gt;Appreciate all the contributions from ‚ù§Ô∏é &lt;a href=&#34;https://github.com/illacloud/illa-builder/graphs/contributors&#34;&gt;contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üì¢ Translating&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;apps/builder/src/i18n/locale/*&lt;/code&gt; dirs are kept up-to-date automatically via Crowdin. See our &lt;a href=&#34;https://crowdin.com/project/illa-builder&#34;&gt;official translation page&lt;/a&gt; in case you like to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;üî• We&#39;re Hiring&lt;/h2&gt; &#xA;&lt;p&gt;Looking for a passionate and creative team? We are actively hiring engineers for the following positions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend Engineer&lt;/li&gt; &#xA; &lt;li&gt;Golang Engineer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contact Us: &lt;a href=&#34;mailto:hr@illasoft.com&#34;&gt;hr@illasoft.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is &lt;a href=&#34;https://raw.githubusercontent.com/illacloud/illa-builder/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/PaLM-rlhf-pytorch</title>
    <updated>2022-12-25T01:29:17Z</updated>
    <id>tag:github.com,2022-12-25:/lucidrains/PaLM-rlhf-pytorch</id>
    <link href="https://github.com/lucidrains/PaLM-rlhf-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of RLHF (Reinforcement Learning with Human Feedback) on top of the PaLM architecture. Basically ChatGPT but with PaLM&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;PaLM + RLHF - Pytorch (wip)&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of RLHF (Reinforcement Learning with Human Feedback) on top of the PaLM architecture. Maybe I&#39;ll add retrieval functionality too, √† la &lt;a href=&#34;https://github.com/lucidrains/RETRO-pytorch&#34;&gt;RETRO&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install palm-rlhf-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First train &lt;code&gt;PaLM&lt;/code&gt;, like any other autoregressive transformer&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from palm_rlhf_pytorch import PaLM&#xA;&#xA;palm = PaLM(&#xA;    num_tokens = 20000,&#xA;    dim = 512,&#xA;    depth = 12&#xA;).cuda()&#xA;&#xA;seq = torch.randint(0, 20000, (1, 2048)).cuda()&#xA;&#xA;loss = palm(seq, return_loss = True)&#xA;loss.backward()&#xA;&#xA;# after much training, you can now generate sequences&#xA;&#xA;generated = palm.generate(2048) # (1, 2048)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then train your reward model, with the curated human feedback. In the original paper, they could not get reward model to be finetuned from a pretrained transformer without overfitting, but I gave the option to finetune with &lt;code&gt;LoRA&lt;/code&gt; anyways, since it is still open research.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from palm_rlhf_pytorch import PaLM, RewardModel&#xA;&#xA;palm = PaLM(&#xA;    num_tokens = 20000,&#xA;    dim = 512,&#xA;    depth = 12,&#xA;    causal = False&#xA;)&#xA;&#xA;reward_model = RewardModel(&#xA;    palm,&#xA;    num_binned_output = 5 # say rating from 1 to 5&#xA;).cuda()&#xA;&#xA;# mock data&#xA;&#xA;seq = torch.randint(0, 20000, (1, 1024)).cuda()&#xA;prompt_mask = torch.zeros(1, 1024).bool().cuda() # which part of the sequence is prompt, which part is response&#xA;labels = torch.randint(0, 5, (1,)).cuda()&#xA;&#xA;# train&#xA;&#xA;loss = reward_model(seq, prompt_mask = prompt_mask, labels = labels)&#xA;loss.backward()&#xA;&#xA;# after much training&#xA;&#xA;reward = reward_model(seq, prompt_mask = prompt_mask)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you will pass your transformer and the rewards model to the &lt;code&gt;RLHFTrainer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from palm_rlhf_pytorch import PaLM, RewardModel, RLHFTrainer&#xA;&#xA;# load your pretrained palm&#xA;&#xA;palm = PaLM(&#xA;    num_tokens=256,&#xA;    dim=512,&#xA;    depth=8&#xA;).cuda()&#xA;&#xA;palm.load(&#39;./path/to/pretrained/palm.pt&#39;)&#xA;&#xA;# load your pretrained reward model&#xA;&#xA;reward_model = RewardModel(&#xA;    palm,&#xA;    num_binned_output = 5&#xA;).cuda()&#xA;&#xA;reward_model.load(&#39;./path/to/pretrained/reward_model.pt&#39;)&#xA;&#xA;# ready your list of prompts for reinforcement learning&#xA;&#xA;prompts = torch.randint(0, 256, (50000, 512)).cuda() # 50k prompts&#xA;&#xA;# pass it all to the trainer and train&#xA;&#xA;trainer = RLHFTrainer(&#xA;    palm = palm,&#xA;    reward_model = reward_model,&#xA;    prompt_token_ids = prompts&#xA;)&#xA;&#xA;trainer.train(num_episodes = 50000)&#xA;&#xA;# then, if it succeeded...&#xA;# generate say 10 samples and use the reward model to return the best one&#xA;&#xA;answer = trainer.generate(2048, prompt = prompts[0], num_samples = 10) # (&amp;lt;= 2048,)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;clone base transformer with separate lora for critic&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;also allow for non-LoRA based finetuning&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;redo normalize to be able to have a masked version, not sure if anyone will ever use per token rewards / values, but good practice to implement&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;add huggingface accelerate and test out wandb instrumentation&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;search literature to figure out what is the latest SOTA for PPO, assuming RL field is still making progress.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;test the system using a pretrained sentiment network as reward model&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;write the memory in PPO to memmapped numpy file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;get sampling with variable lengthed prompts working, even if it is not needed given bottleneck is human feedback&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;allow for finetuning penultimate N layers only in either actor or critic, assuming if pretrained&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;Stability.ai&lt;/a&gt; for the generous sponsorship to work on cutting edge artificial intelligence research&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://huggingface.co/&#34;&gt;ü§ó Huggingface&lt;/a&gt; and &lt;a href=&#34;https://carper.ai/&#34;&gt;CarperAI&lt;/a&gt; for penning the blog post &lt;a href=&#34;https://huggingface.co/blog/rlhf&#34;&gt;Illustrating Reinforcement Learning from Human Feedback (RLHF)&lt;/a&gt;, and the former also for their &lt;a href=&#34;https://huggingface.co/docs/accelerate/index&#34;&gt;accelerate&lt;/a&gt; library&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Stiennon2020LearningTS,&#xA;    title   = {Learning to summarize from human feedback},&#xA;    author  = {Nisan Stiennon and Long Ouyang and Jeff Wu and Daniel M. Ziegler and Ryan J. Lowe and Chelsea Voss and Alec Radford and Dario Amodei and Paul Christiano},&#xA;    journal = {ArXiv},&#xA;    year    = {2020},&#xA;    volume  = {abs/2009.01325}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Chowdhery2022PaLMSL,&#xA;    title   = {PaLM: Scaling Language Modeling with Pathways},&#xA;    author  = {Aakanksha Chowdhery and Sharan Narang and Jacob Devlin and Maarten Bosma and Gaurav Mishra and Adam Roberts and Paul Barham and Hyung Won Chung and Charles Sutton and Sebastian Gehrmann and Parker Schuh and Kensen Shi and Sasha Tsvyashchenko and Joshua Maynez and Abhishek Rao and Parker Barnes and Yi Tay and Noam M. Shazeer and Vinodkumar Prabhakaran and Emily Reif and Nan Du and Benton C. Hutchinson and Reiner Pope and James Bradbury and Jacob Austin and Michael Isard and Guy Gur-Ari and Pengcheng Yin and Toju Duke and Anselm Levskaya and Sanjay Ghemawat and Sunipa Dev and Henryk Michalewski and Xavier Garc{\&#39;i}a and Vedant Misra and Kevin Robinson and Liam Fedus and Denny Zhou and Daphne Ippolito and David Luan and Hyeontaek Lim and Barret Zoph and Alexander Spiridonov and Ryan Sepassi and David Dohan and Shivani Agrawal and Mark Omernick and Andrew M. Dai and Thanumalayan Sankaranarayana Pillai and Marie Pellat and Aitor Lewkowycz and Erica Oliveira Moreira and Rewon Child and Oleksandr Polozov and Katherine Lee and Zongwei Zhou and Xuezhi Wang and Brennan Saeta and Mark Diaz and Orhan Firat and Michele Catasta and Jason Wei and Kathleen S. Meier-Hellstern and Douglas Eck and Jeff Dean and Slav Petrov and Noah Fiedel},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Hu2021LoRALA,&#xA;    title   = {LoRA: Low-Rank Adaptation of Large Language Models},&#xA;    author  = {Edward J. Hu and Yelong Shen and Phillip Wallis and Zeyuan Allen-Zhu and Yuanzhi Li and Shean Wang and Weizhu Chen},&#xA;    journal = {ArXiv},&#xA;    year    = {2021},&#xA;    volume  = {abs/2106.09685}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Sun2022ALT,&#xA;  title     = {A Length-Extrapolatable Transformer},&#xA;  author    = {Yutao Sun and Li Dong and Barun Patra and Shuming Ma and Shaohan Huang and Alon Benhaim and Vishrav Chaudhary and Xia Song and Furu Wei},&#xA;  year      = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>