<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-22T01:32:17Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>carbon-language/carbon-lang</title>
    <updated>2022-07-22T01:32:17Z</updated>
    <id>tag:github.com,2022-07-22:/carbon-language/carbon-lang</id>
    <link href="https://github.com/carbon-language/carbon-lang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Carbon Language&#39;s main repository: documents, design, implementation, and related tools. (NOTE: Carbon Language is experimental; see README)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Carbon Language: &lt;br&gt; An experimental successor to C++&lt;/h1&gt; &#xA;&lt;!--&#xA;Part of the Carbon Language project, under the Apache License v2.0 with LLVM&#xA;Exceptions. See /LICENSE for license information.&#xA;SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception&#xA;--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#why-build-carbon&#34;&gt;Why?&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#language-goals&#34;&gt;Goals&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#getting-started&#34;&gt;Getting started&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#join-us&#34;&gt;Join us&lt;/a&gt; &lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/snippets.md#quicksort&#34;&gt; &#xA; &lt;!--&#xA;Edit snippet in docs/images/snippets.md and:&#xA;https://drive.google.com/drive/folders/1-rsUjiya7dSZ87L8kpZmu3MZghRVxzLA&#xA;--&gt; &lt;img src=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/quicksort_snippet.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;575&#34; alt=&#34;Quicksort code in Carbon. Follow the link to read more.&#34;&gt; &lt;/a&gt; &#xA;&lt;!--&#xA;Don&#39;t let the text wrap too narrowly to the left of the above image.&#xA;The `div` reduces the vertical height.&#xA;GitHub will autolink `img`, but won&#39;t produce a link when `href=&#34;#&#34;`.&#xA;--&gt; &#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/bumper.png&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fast and works with C++&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Performance matching C++ using LLVM, with low-level access to bits and addresses&lt;/li&gt; &#xA; &lt;li&gt;Interoperate with your existing C++ code, from inheritance to templates&lt;/li&gt; &#xA; &lt;li&gt;Fast and scalable builds that work with your existing C++ build systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Modern and evolving&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Solid language foundations that are easy to learn, especially if you have used C++&lt;/li&gt; &#xA; &lt;li&gt;Easy, tool-based upgrades between Carbon versions&lt;/li&gt; &#xA; &lt;li&gt;Safer fundamentals, and an incremental path towards a memory-safe subset&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Welcoming open-source community&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clear goals and priorities with robust governance&lt;/li&gt; &#xA; &lt;li&gt;Community that works to be welcoming, inclusive, and friendly&lt;/li&gt; &#xA; &lt;li&gt;Batteries-included approach: compiler, libraries, docs, tools, package manager, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why build Carbon?&lt;/h2&gt; &#xA;&lt;p&gt;C++ remains the dominant programming language for performance-critical software, with massive and growing codebases and investments. However, it is struggling to improve and meet developers&#39; needs outlined above, in no small part due to accumulating decades of technical debt. Incrementally improving C++ is &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/difficulties_improving_cpp.md&#34;&gt;extremely difficult&lt;/a&gt;, both due to the technical debt itself and challenges with its evolution process. The best way to address these problems is to avoid inheriting the legacy of C or C++ directly, and instead start with solid language foundations like a &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#generics&#34;&gt;modern generics system&lt;/a&gt;, modular code organization, and consistent, simple syntax.&lt;/p&gt; &#xA;&lt;p&gt;Existing modern languages already provide an excellent developer experience: Go, Swift, Kotlin, Rust, and many more. &lt;strong&gt;Developers that &lt;em&gt;can&lt;/em&gt; use one of these existing languages &lt;em&gt;should&lt;/em&gt;.&lt;/strong&gt; Unfortunately, the designs of these languages present significant barriers to adoption and migration from C++. These barriers range from changes in the idiomatic design of software to performance overhead.&lt;/p&gt; &#xA;&lt;p&gt;Carbon is fundamentally &lt;strong&gt;a successor language approach&lt;/strong&gt;, rather than an attempt to incrementally evolve C++. It is designed around interoperability with C++ as well as large-scale adoption and migration for existing C++ codebases and developers. A successor language for C++ requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance matching C++&lt;/strong&gt;, an essential property for our developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seamless, bidirectional interoperability with C++&lt;/strong&gt;, such that a library anywhere in an existing C++ stack can adopt Carbon without porting the rest.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A gentle learning curve&lt;/strong&gt; with reasonable familiarity for C++ developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comparable expressivity&lt;/strong&gt; and support for existing software&#39;s design and architecture.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable migration&lt;/strong&gt;, with some level of source-to-source translation for idiomatic C++ code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With this approach, we can build on top of C++&#39;s existing ecosystem, and bring along existing investments, codebases, and developer populations. There are a few languages that have followed this model for other ecosystems, and Carbon aims to fill an analogous role for C++:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JavaScript → TypeScript&lt;/li&gt; &#xA; &lt;li&gt;Java → Kotlin&lt;/li&gt; &#xA; &lt;li&gt;C++ → &lt;strong&gt;&lt;em&gt;Carbon&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Language Goals&lt;/h2&gt; &#xA;&lt;p&gt;We are designing Carbon to support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Performance-critical software&lt;/li&gt; &#xA; &lt;li&gt;Software and language evolution&lt;/li&gt; &#xA; &lt;li&gt;Code that is easy to read, understand, and write&lt;/li&gt; &#xA; &lt;li&gt;Practical safety and testing mechanisms&lt;/li&gt; &#xA; &lt;li&gt;Fast and scalable development&lt;/li&gt; &#xA; &lt;li&gt;Modern OS platforms, hardware architectures, and environments&lt;/li&gt; &#xA; &lt;li&gt;Interoperability with and migration from existing C++ code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While many languages share subsets of these goals, what distinguishes Carbon is their combination.&lt;/p&gt; &#xA;&lt;p&gt;We also have explicit &lt;em&gt;non-goals&lt;/em&gt; for Carbon, notably including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A stable ABI for the entire language and library&lt;/li&gt; &#xA; &lt;li&gt;Perfect backwards or forwards compatibility&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our detailed &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/goals.md&#34;&gt;goals&lt;/a&gt; document fleshes out these ideas and provides a deeper view into our goals for the Carbon project and language.&lt;/p&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;p&gt;Carbon is currently an experimental project. We want to better understand whether we can build a language that meets our successor language criteria, and whether the resulting language can gather a critical mass of interest within the larger C++ industry and community.&lt;/p&gt; &#xA;&lt;p&gt;Currently, we have fleshed out several core aspects of both Carbon the project and the language:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The strategy of the Carbon Language and project.&lt;/li&gt; &#xA; &lt;li&gt;An open-source project structure, governance model, and evolution process.&lt;/li&gt; &#xA; &lt;li&gt;Critical and foundational aspects of the language design informed by our experience with C++ and the most difficult challenges we anticipate. This includes designs for: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Generics&lt;/li&gt; &#xA;   &lt;li&gt;Class types&lt;/li&gt; &#xA;   &lt;li&gt;Inheritance&lt;/li&gt; &#xA;   &lt;li&gt;Operator overloading&lt;/li&gt; &#xA;   &lt;li&gt;Lexical and syntactic structure&lt;/li&gt; &#xA;   &lt;li&gt;Code organization and modular structure&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A prototype interpreter demo that can both run isolated examples and gives a detailed analysis of the specific semantic model and abstract machine of Carbon. We call this the &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/explorer/&#34;&gt;Carbon Explorer&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are currently focused on getting more broad feedback and participation from the C++ community, &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/roadmap.md#completing-the-language-design&#34;&gt;completing the 0.1 language design&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/roadmap.md#demo-implementation-of-core-features-with-working-examples&#34;&gt;completing the Carbon Explorer implementation of this design&lt;/a&gt;. Beyond that, we plan to prioritize C++ interoperability and a realistic toolchain that implements the 0.1 language and can be used to evaluate Carbon in more detail.&lt;/p&gt; &#xA;&lt;p&gt;You can see our &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/roadmap.md&#34;&gt;full roadmap&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Carbon and C++&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re already a C++ developer, Carbon should have a gentle learning curve. It is built out of a consistent set of language constructs that should feel familiar and be easy to read and understand.&lt;/p&gt; &#xA;&lt;p&gt;C++ code like this:&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/snippets.md#c&#34;&gt; &#xA; &lt;!--&#xA;Edit snippet in docs/images/snippets.md and:&#xA;https://drive.google.com/drive/folders/1-rsUjiya7dSZ87L8kpZmu3MZghRVxzLA&#xA;--&gt; &lt;img src=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/cpp_snippet.svg?sanitize=true&#34; width=&#34;600&#34; alt=&#34;A snippet of C++ code. Follow the link to read it.&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;corresponds to this Carbon code:&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/snippets.md#carbon&#34;&gt; &#xA; &lt;!--&#xA;Edit snippet in docs/images/snippets.md and:&#xA;https://drive.google.com/drive/folders/1-rsUjiya7dSZ87L8kpZmu3MZghRVxzLA&#xA;--&gt; &lt;img src=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/carbon_snippet.svg?sanitize=true&#34; width=&#34;600&#34; alt=&#34;A snippet of converted Carbon code. Follow the link to read it.&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;You can call Carbon from C++ without overhead and the other way around. This means you migrate a single C++ library to Carbon within an application, or write new Carbon on top of your existing C++ investment. For example:&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/snippets.md#mixed&#34;&gt; &#xA; &lt;!--&#xA;Edit snippet in docs/images/snippets.md and:&#xA;https://drive.google.com/drive/folders/1-rsUjiya7dSZ87L8kpZmu3MZghRVxzLA&#xA;--&gt; &lt;img src=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/images/mixed_snippet.svg?sanitize=true&#34; width=&#34;600&#34; alt=&#34;A snippet of mixed Carbon and C++ code. Follow the link to read it.&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/design/interoperability/philosophy_and_goals.md&#34;&gt;C++ interop in Carbon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Beyond interoperability between Carbon and C++, we&#39;re also planning to support migration tools that will mechanically translate idiomatic C++ code into Carbon code to help you switch an existing C++ codebase to Carbon.&lt;/p&gt; &#xA;&lt;h2&gt;Generics&lt;/h2&gt; &#xA;&lt;p&gt;Carbon provides a &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/design/generics/overview.md#what-are-generics&#34;&gt;modern generics system&lt;/a&gt;&lt;/strong&gt; with checked definitions, while still &lt;strong&gt;supporting opt-in &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/design/templates.md&#34;&gt;templates&lt;/a&gt; for seamless C++ interop&lt;/strong&gt;. Checked generics provide several advantages compared to C++ templates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generic definitions are fully type checked&lt;/strong&gt;, removing the need to instantiate to check for errors and giving greater confidence in code. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Avoids compile time cost of re-checking the definition for every instantiation.&lt;/li&gt; &#xA;   &lt;li&gt;When using a definition-checked generic, usage error messages are clearer, directly showing which requirements are not met.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enables automatic, opt-in type erasure and dynamic dispatch&lt;/strong&gt; without a separate implementation. This can reduce binary size and enables constructs like heterogeneous containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong, checked interfaces&lt;/strong&gt; mean fewer accidental dependencies on implementation details and a clearer contract for consumers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Without sacrificing these advantages, &lt;strong&gt;Carbon generics support specialization&lt;/strong&gt;, ensuring it can fully address performance-critical use cases of C++ templates. For more details about Carbon&#39;s generics, see their &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/design/generics&#34;&gt;design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to easy and powerful interop with C++, Carbon templates can be constrained and incrementally migrated to checked generics at a fine granularity and with a smooth evolutionary path.&lt;/p&gt; &#xA;&lt;h2&gt;Memory safety&lt;/h2&gt; &#xA;&lt;p&gt;Safety, and especially &lt;a href=&#34;https://en.wikipedia.org/wiki/Memory_safety&#34;&gt;memory safety&lt;/a&gt;, remain key challenges for C++ and something a successor language needs to address. Our initial priority and focus is on immediately addressing important, low-hanging fruit in the safety space:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tracking uninitialized states better, increased enforcement of initialization, and systematically providing hardening against initialization bugs when desired.&lt;/li&gt; &#xA; &lt;li&gt;Designing fundamental APIs and idioms to support dynamic bounds checks in debug and hardened builds.&lt;/li&gt; &#xA; &lt;li&gt;Having a default debug build mode that is both cheaper and more comprehensive than existing C++ build modes even when combined with &lt;a href=&#34;https://github.com/google/sanitizers/wiki/AddressSanitizer&#34;&gt;Address Sanitizer&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once we can migrate code into Carbon, we will have a simplified language with room in the design space to add any necessary annotations or features, and infrastructure like &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/#generics&#34;&gt;generics&lt;/a&gt; to support safer design patterns. Longer term, we will build on this to introduce &lt;strong&gt;a safe Carbon subset&lt;/strong&gt;. This will be a large and complex undertaking, and won&#39;t be in the 0.1 design. Meanwhile, we are closely watching and learning from efforts to add memory safe semantics onto C++ such as Rust-inspired &lt;a href=&#34;https://discourse.llvm.org/t/rfc-lifetime-annotations-for-c/61377&#34;&gt;lifetime annotations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;You can get started playing with Carbon by checking out the codebase and using the Carbon explorer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install bazelisk using Homebrew.&#xA;$ brew install bazelisk&#xA;&#xA;# Install Clang/LLVM using Homebrew.&#xA;# Many Clang/LLVM releases aren&#39;t built with options we rely on.&#xA;$ brew install llvm&#xA;$ export PATH=&#34;$(brew --prefix llvm)/bin:${PATH}&#34;&#xA;&#xA;# Download Carbon&#39;s code.&#xA;$ git clone https://github.com/carbon-language/carbon-lang&#xA;$ cd carbon-lang&#xA;&#xA;# Build and run the explorer.&#xA;$ bazel run //explorer -- ./explorer/testdata/print/format_only.carbon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These instructions assume &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;; see our &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/contribution_tools.md&#34;&gt;contribution tools documentation&lt;/a&gt; for more extensive tooling instructions.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about the Carbon project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/goals.md&#34;&gt;Project goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/design&#34;&gt;Language design overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/explorer&#34;&gt;Carbon Explorer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/docs/project/faq.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join us&lt;/h2&gt; &#xA;&lt;p&gt;Carbon is committed to a welcoming and inclusive environment where everyone can contribute.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To watch for major release announcements, subscribe to &lt;a href=&#34;https://github.com/carbon-language/carbon-lang/discussions/1020&#34;&gt;our Carbon release post on GitHub&lt;/a&gt; and &lt;a href=&#34;https://github.com/carbon-language/carbon-lang&#34;&gt;star carbon-lang&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To join the design discussion, join our &lt;a href=&#34;https://github.com/carbon-language/carbon-lang/discussions&#34;&gt;our Github forum&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/carbon-language/carbon-lang/trunk/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for information about the Carbon development community.&lt;/li&gt; &#xA; &lt;li&gt;We discuss Carbon on &lt;a href=&#34;https://discord.gg/ZjVdShJDAs&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dbserver/startdb-2022</title>
    <updated>2022-07-22T01:32:17Z</updated>
    <id>tag:github.com,2022-07-22:/dbserver/startdb-2022</id>
    <link href="https://github.com/dbserver/startdb-2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repositório contendo o desafio para seleção do StartDB 2022.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;O desafio da forca&lt;/h1&gt; &#xA;&lt;p&gt;Olá! Você está prestes a iniciar o nosso desafio para a seleção do StartDB. Se você chegou aqui sem conhecer o StartDB, você pode encontrar mais informações &lt;a href=&#34;https://start.dbserver.com.br/&#34;&gt;neste link&lt;/a&gt;. O desafio desse ano será desenvolver as regras de um jogo da forca. Você conhece o jogo da forca?&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dbserver/startdb-2022/main/docs/forca.gif&#34; alt=&#34;forca&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Observação:&lt;/strong&gt; &lt;em&gt;Dia das mães&lt;/em&gt; no gif acima é a dica sobre a palavra secreta&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;É um jogo que antigamente necessitava de duas pessoas, uma para selecionar a palavra secreta e outra para tentar acertar. A pessoa que escolhia a palavra desenhava/registrava tudo no papel, desde o desenho da forca, as letras acertadas e letras erradas. Algo muito próximo do gif acima.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Observação:&lt;/strong&gt; Somente precisa ser implementado as regras do jogo, não é preciso desenvolver a interface do jogo, o GIF é para demonstração.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Como faço o desafio?&lt;/h1&gt; &#xA;&lt;h2&gt;Baixando o código do desafio&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dbserver/startdb-2022/main/docs/clone-repo.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Em &lt;i&gt;Code&lt;/i&gt; clique em &lt;i&gt;Download Zip&lt;/i&gt;&lt;/li&gt; &#xA; &lt;li&gt;Acessar o arquivo &lt;a href=&#34;https://github.com/dbserver/startdb-2022/raw/main/desafio/desafio.js&#34;&gt;desafio.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Resolver os desafios que estão comentados no &lt;a href=&#34;https://raw.githubusercontent.com/dbserver/startdb-2022/main/docs/Regras.md&#34;&gt;arquivo de regras&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Ou clonando o projeto no Github:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clonar projeto (Se não sabe como, acesse &lt;a href=&#34;https://docs.github.com/pt/github/creating-cloning-and-archiving-repositories/cloning-a-repository-from-github/cloning-a-repository&#34;&gt;aqui&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Acessar o arquivo &lt;a href=&#34;https://github.com/dbserver/startdb-2022/raw/main/desafio/desafio.js&#34;&gt;desafio.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Resolver os desafios que estão comentados no &lt;a href=&#34;https://raw.githubusercontent.com/dbserver/startdb-2022/main/docs/Regras.md&#34;&gt;arquivo de regras&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Instalando o Node e rodando localmente&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Instalar o &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Instalar dependencias do projeto com o seguinte comando:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Para interagir com o jogo durante o desenvolvimento, você pode executar &lt;code&gt;desafio.js&lt;/code&gt;, que irá iniciar o jogo no terminal, com o seguinte comando:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Regras do jogo&lt;/h2&gt; &#xA;&lt;p&gt;As regras estão descritas &lt;a href=&#34;https://raw.githubusercontent.com/dbserver/startdb-2022/main/docs/Regras.md&#34;&gt;nesse arquivo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Quero enviar meu desafio, como faço :D ?&lt;/h1&gt; &#xA;&lt;h2&gt;Enviar o código fonte por e-mail:&lt;/h2&gt; &#xA;&lt;p&gt;Enviar o código fonte para o e-mail &lt;a href=&#34;mailto:start@dbserver.com.br&#34;&gt;start@dbserver.com.br&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ou subir código no GitHub:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Subir o código para um repositório público (Se não sabe como, acesse &lt;a href=&#34;https://docs.github.com/pt/github/managing-files-in-a-repository/managing-files-using-the-command-line/adding-a-file-to-a-repository-using-the-command-line&#34;&gt;aqui&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Enviar o link do repositório para o e-mail &lt;a href=&#34;mailto:start@dbserver.com.br&#34;&gt;start@dbserver.com.br&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>rocketseat-education/ignite-lab-rockethelp</title>
    <updated>2022-07-22T01:32:17Z</updated>
    <id>tag:github.com,2022-07-22:/rocketseat-education/ignite-lab-rockethelp</id>
    <link href="https://github.com/rocketseat-education/ignite-lab-rockethelp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aplicação desenvolvida no evento Ignite Lab 03 - React Native&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>