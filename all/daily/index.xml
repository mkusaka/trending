<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-26T01:30:31Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>liyupi/yuindex</title>
    <updated>2022-07-26T01:30:31Z</updated>
    <id>tag:github.com,2022-07-26:/liyupi/yuindex</id>
    <link href="https://github.com/liyupi/yuindex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✨ 新项目 - 极客范儿的浏览器主页 💻 Vue 3 + Node.js 全栈项目，自实现 web 终端 + 命令系统&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YuIndex - 极客范儿的浏览器主页&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Coolest browser index for geeks!&lt;/p&gt; &#xA; &lt;p&gt;前后端全栈项目 By &lt;a href=&#34;https://docs.qq.com/doc/DUFFRVWladXVjeUxW&#34;&gt;程序员鱼皮&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;在线体验：&lt;a href=&#34;https://yuindex.com&#34;&gt;https://yuindex.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic1.png&#34; alt=&#34;YuIndex 定制你的最强主页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic2.png&#34; alt=&#34;YuIndex 用命令来控制网页&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;YuIndex 是什么？&lt;/h2&gt; &#xA;&lt;p&gt;一个很特别的浏览器主页，支持使用输入命令的方式来操作，目标是帮你在一个 web 终端中高效完成所有的事情！（all in one）&lt;/p&gt; &#xA;&lt;p&gt;此外，它也是一个功能强大的 web 终端组件。开发者可以在它的基础上定制自己的 web 终端，并且可以在终端中集成任何内容！&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你是一名程序员，相信你会爱上它~&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;你可以将音乐、游戏，甚至可以将自己的偶像封装到主页~&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1 分钟上手使用&lt;/h3&gt; &#xA;&lt;p&gt;请打开网站：&lt;a href=&#34;https://yuindex.com&#34;&gt;https://yuindex.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;然后在网站内依次输入以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;baidu 程序员鱼皮&#xA;github yuindex&#xA;goto yupi.icu&#xA;todo&#xA;music 坤坤&#xA;moyu&#xA;按键 Ctrl + O 触发折叠, 再按可展开&#xA;history&#xA;按键 Ctrl + L 清屏&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;help 命令英文名&lt;/code&gt; 可以查询某命令的具体用法，如：&lt;code&gt;help search&lt;/code&gt; 。&lt;/p&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;shortcut&lt;/code&gt; 可以查看所有的快捷键。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;完整命令用法请见：&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/commands.md&#34;&gt;命令手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;尽情探索吧~&lt;/p&gt; &#xA;&lt;h2&gt;项目优势&lt;/h2&gt; &#xA;&lt;h3&gt;用户&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;无需鼠标，即可快速完成操作（比如从不同平台搜索内容）&lt;/li&gt; &#xA; &lt;li&gt;极简炫酷，极客范儿，Linux 的味道儿~&lt;/li&gt; &#xA; &lt;li&gt;支持快捷键、帮助和输入提示，降低使用成本&lt;/li&gt; &#xA; &lt;li&gt;支持定制背景等，打造你的个性主页&lt;/li&gt; &#xA; &lt;li&gt;帮助你熟悉 Linux 命令，感受到编程的乐趣&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;开发者&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以独立使用功能丰富的 web 终端组件，或二次开发&lt;/li&gt; &#xA; &lt;li&gt;可以开发自己的命令并接入系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;学习者&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以学到 web 终端的开发方式&lt;/li&gt; &#xA; &lt;li&gt;可以学到系统设计知识，理解抽象和复用&lt;/li&gt; &#xA; &lt;li&gt;可以学到较为规范的代码目录和格式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能和特性&lt;/h2&gt; &#xA;&lt;h3&gt;web 终端&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;命令历史记录、快速执行历史命令&lt;/li&gt; &#xA; &lt;li&gt;快捷键&lt;/li&gt; &#xA; &lt;li&gt;清屏&lt;/li&gt; &#xA; &lt;li&gt;命令输入提示&lt;/li&gt; &#xA; &lt;li&gt;多种格式输出&lt;/li&gt; &#xA; &lt;li&gt;内置 5 种输出状态&lt;/li&gt; &#xA; &lt;li&gt;命令折叠&lt;/li&gt; &#xA; &lt;li&gt;帮助手册生成&lt;/li&gt; &#xA; &lt;li&gt;自定义配置（比如更换背景、提示开关等）&lt;/li&gt; &#xA; &lt;li&gt;支持子命令&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;已支持命令&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;完整命令用法请见：&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/commands.md&#34;&gt;命令手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多平台搜索 search&lt;/li&gt; &#xA; &lt;li&gt;网页快速跳转 goto&lt;/li&gt; &#xA; &lt;li&gt;空间管理（类似收藏夹，可以存储网页信息）&lt;/li&gt; &#xA; &lt;li&gt;查看日期 date&lt;/li&gt; &#xA; &lt;li&gt;翻译 fanyi&lt;/li&gt; &#xA; &lt;li&gt;待办事项 todo&lt;/li&gt; &#xA; &lt;li&gt;网络检测 ping&lt;/li&gt; &#xA; &lt;li&gt;定时器 timing&lt;/li&gt; &#xA; &lt;li&gt;更换背景 background&lt;/li&gt; &#xA; &lt;li&gt;听音乐 music&lt;/li&gt; &#xA; &lt;li&gt;摸鱼小游戏 moyu&lt;/li&gt; &#xA; &lt;li&gt;坤坤 ikun&lt;/li&gt; &#xA; &lt;li&gt;其他。。。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;h3&gt;前端&lt;/h3&gt; &#xA;&lt;p&gt;主要技术：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vue 3&lt;/li&gt; &#xA; &lt;li&gt;Vite 2&lt;/li&gt; &#xA; &lt;li&gt;Ant Design Vue 3 组件库&lt;/li&gt; &#xA; &lt;li&gt;Pinia 2 状态管理&lt;/li&gt; &#xA; &lt;li&gt;TypeScript 类型控制&lt;/li&gt; &#xA; &lt;li&gt;Eslint 代码规范控制&lt;/li&gt; &#xA; &lt;li&gt;Prettier 美化代码&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖库：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;axios 网络请求&lt;/li&gt; &#xA; &lt;li&gt;dayjs 时间处理&lt;/li&gt; &#xA; &lt;li&gt;lodash 工具库&lt;/li&gt; &#xA; &lt;li&gt;getopts 命令参数解析&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;库：getopts&lt;/p&gt; &#xA;&lt;h3&gt;后端&lt;/h3&gt; &#xA;&lt;p&gt;主要技术：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA; &lt;li&gt;Express、express-session&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;Sequelize（ORM 框架）&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖库：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Axios&lt;/li&gt; &#xA; &lt;li&gt;NeteaseCloudMusicApi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖服务：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;百度翻译 API&lt;/li&gt; &#xA; &lt;li&gt;新浪壁纸 API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/server/README.md&#34;&gt;点击了解后端详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目录结构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;public 公共静态资源&lt;/li&gt; &#xA; &lt;li&gt;server 后端&lt;/li&gt; &#xA; &lt;li&gt;src &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;assets 静态资源&lt;/li&gt; &#xA;   &lt;li&gt;components 组件 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;yu-terminal 终端组件&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;configs 配置 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;routes 路由&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;core 核心 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;commands 命令集&lt;/li&gt; &#xA;     &lt;li&gt;commandRegister 命令注册&lt;/li&gt; &#xA;     &lt;li&gt;commandExecutor 命令执行器&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;pages 页面 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;IndexPage.vue 主页&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;plugins 第三方依赖&lt;/li&gt; &#xA;   &lt;li&gt;utils 工具&lt;/li&gt; &#xA;   &lt;li&gt;App.vue 主页面&lt;/li&gt; &#xA;   &lt;li&gt;env.d.ts 环境定义&lt;/li&gt; &#xA;   &lt;li&gt;main.ts Vue 主文件&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;.eslintrc.js 代码规范&lt;/li&gt; &#xA; &lt;li&gt;components.d.ts 自动生成的组件动态引入&lt;/li&gt; &#xA; &lt;li&gt;Dockerfile 镜像构建&lt;/li&gt; &#xA; &lt;li&gt;index.html 静态主页&lt;/li&gt; &#xA; &lt;li&gt;package.json 项目管理&lt;/li&gt; &#xA; &lt;li&gt;tsconfig.json TS 配置&lt;/li&gt; &#xA; &lt;li&gt;vite.config.ts 打包工具配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统设计&lt;/h2&gt; &#xA;&lt;h3&gt;设计理念&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;开放：采用类插件化设计，便于开发者自定义新命令，且能够通过配置自动生成帮助提示&lt;/li&gt; &#xA; &lt;li&gt;重前端轻后端：考虑到扩展性、安全性以及实现的方便，除了核心模块外，尽量不请求后端&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;核心&lt;/h3&gt; &#xA;&lt;p&gt;系统分为 3 个核心模块，各模块职责分明：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;微终端：UI 展示和终端交互逻辑&lt;/li&gt; &#xA; &lt;li&gt;命令系统：连接微终端和命令集（中介者），负责匹配、解析和执行命令，并通过终端提供的操作接口给予其反馈&lt;/li&gt; &#xA; &lt;li&gt;命令集：各种不同功能的命令定义和实现&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;前端架构图：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;微终端&lt;/h3&gt; &#xA;&lt;p&gt;从 0 开始实现的 web 终端控制台，包含以下模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;终端输入：常驻 Input 框，负责接收用户命令&lt;/li&gt; &#xA; &lt;li&gt;终端输出：负责展示用户的命令及执行结果等，支持以下三种类型的输出 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;命令类型：输入命令 + 结果列表&lt;/li&gt; &#xA;   &lt;li&gt;文本类型：单行文本展示，内置 5 种不同的展示状态（成功、错误、警告、信息、系统等）&lt;/li&gt; &#xA;   &lt;li&gt;自定义组件类型：可以自由定制要展示的内容&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;快捷键：更方便地操作终端，使用 &lt;code&gt;document.onkeydown&lt;/code&gt; 全局按键事件实现&lt;/li&gt; &#xA; &lt;li&gt;开放接口：提供一组操作终端的 API，供命令系统调用，比如清屏、立即输出等&lt;/li&gt; &#xA; &lt;li&gt;命令历史：记录用户输入的命令结果，使用 Vue 3 Composition API 封装部分逻辑&lt;/li&gt; &#xA; &lt;li&gt;命令提示：根据用户的输入给出提示，使用 Vue 3 Composition API 独立封装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;命令系统&lt;/h3&gt; &#xA;&lt;p&gt;一套独立于终端的命令解析执行引擎，包含以下模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;注册器：用于注册和管理可被匹配的命令集&lt;/li&gt; &#xA; &lt;li&gt;匹配器：根据输入文本匹配到对应的命令&lt;/li&gt; &#xA; &lt;li&gt;解析器：从输入文本中解析出参数和选项&lt;/li&gt; &#xA; &lt;li&gt;执行器：执行命令，完成操作&lt;/li&gt; &#xA; &lt;li&gt;子命令机制：支持递归解析子命令&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;命令集&lt;/h3&gt; &#xA;&lt;p&gt;一组可用命令的集合（类似插件），通过 TS 明确命令的定义，支持配置别名、选项、子命令等，便于开发者扩展和定制。&lt;/p&gt; &#xA;&lt;p&gt;核心命令包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;空间系统：自实现的类文件系统，可以管理网页链接等内容&lt;/li&gt; &#xA; &lt;li&gt;用户系统：管理用户、同步个人定制化内容&lt;/li&gt; &#xA; &lt;li&gt;终端控制：定制或控制终端，比如更换背景、输出帮助等&lt;/li&gt; &#xA; &lt;li&gt;搜索：可以快速从不同搜索引擎检索内容&lt;/li&gt; &#xA; &lt;li&gt;其他模块。。。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;为什么要自己写终端？&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;本来打算使用现成的 xterm.js，但实际使用中发现它的文档比较少、问题难解决（比如中文字符），解决问题消耗的时间足够自己写一套新的 web 终端了。而且它更适用于和后端服务器强交互的场景，与本项目的定位不符。&lt;/li&gt; &#xA; &lt;li&gt;开源的 web 终端很少，给开源贡献一份力。&lt;/li&gt; &#xA; &lt;li&gt;帮助自己复习 Vue，突破个人系统开发设计能力的边界。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;更多讲解&lt;/h3&gt; &#xA;&lt;p&gt;如果你希望获取该项目的完整详细讲解，欢迎加入 &lt;a href=&#34;https://yupi.icu/&#34;&gt;鱼皮的编程知识星球&lt;/a&gt; ，这是鱼皮的编程学习圈子，我会在圈子内带大家从 0 到 1 分析解读这个项目，让你也能独立做一个，项目经历 + 1。&lt;/p&gt; &#xA;&lt;h2&gt;贡献指南&lt;/h2&gt; &#xA;&lt;p&gt;欢迎各位朋友贡献代码，还请先阅读以下指南。&lt;/p&gt; &#xA;&lt;h3&gt;开发新命令&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 commands 下新建目录，目录名称为命令英文名称，所有该命令相关的代码都必须放在该目录中&lt;/li&gt; &#xA; &lt;li&gt;编写命令定义文件 xxxCommand.ts（xxx 为命令英文名称），可以参考其他命令，如 music、goto 等&lt;/li&gt; &#xA; &lt;li&gt;若命令包含子命令，需要将子命令相关文件放到 subCommands 目录中，可以参考 user 命令&lt;/li&gt; &#xA; &lt;li&gt;在 commandRegister 的 commandList 中补充新命令&lt;/li&gt; &#xA; &lt;li&gt;测试验证通过后，可以发起 PR 等鱼皮合并&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;摸鱼命令的实现依赖于 &lt;a href=&#34;https://haiyong.site/moyu&#34;&gt;https://haiyong.site/moyu&lt;/a&gt; ，感谢大佬的开源分享。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThePrimeagen/.dotfiles</title>
    <updated>2022-07-26T01:30:31Z</updated>
    <id>tag:github.com,2022-07-26:/ThePrimeagen/.dotfiles</id>
    <link href="https://github.com/ThePrimeagen/.dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.dotfiles&lt;/h1&gt; &#xA;&lt;h3&gt;Kinesis Advantage 360&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will there be a travel case?&lt;/li&gt; &#xA; &lt;li&gt;Will there be blank key caps?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LSPosed/MagiskOnWSA</title>
    <updated>2022-07-26T01:30:31Z</updated>
    <id>tag:github.com,2022-07-26:/LSPosed/MagiskOnWSA</id>
    <link href="https://github.com/LSPosed/MagiskOnWSA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrate Magisk root and Google Apps (OpenGApps) into WSA (Windows Subsystem for Android)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Magisk on WSA (with Google Apps)&lt;/h1&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrate Magisk and OpenGApps in a few clicks within minutes&lt;/li&gt; &#xA; &lt;li&gt;No Linux environment required for integration&lt;/li&gt; &#xA; &lt;li&gt;Keep each build up to date&lt;/li&gt; &#xA; &lt;li&gt;Support both ARM64 and x64&lt;/li&gt; &#xA; &lt;li&gt;Support all OpenGApps variants except for aroma (aroma does not support x86_64, please use super instead)&lt;/li&gt; &#xA; &lt;li&gt;Fix VPN dialog not showing (use our &lt;a href=&#34;https://github.com/LSPosed/VpnDialogs&#34;&gt;VpnDialogs app&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Unattended installation&lt;/li&gt; &#xA; &lt;li&gt;Automatically activates developers mode in Windows 11&lt;/li&gt; &#xA; &lt;li&gt;Update to new version while preserving data with one-click script&lt;/li&gt; &#xA; &lt;li&gt;Merged all language packs&lt;/li&gt; &#xA; &lt;li&gt;Support managing start menu icons (manually installing &lt;a href=&#34;https://github.com/LSPosed/WSAHelper/releases/latest&#34;&gt;WSAHelper&lt;/a&gt; to use this feature)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/5022927/145696886-e13ebfc1-ff25-4410-893e-d3e517af70ea.mp4&#34;&gt;https://user-images.githubusercontent.com/5022927/145696886-e13ebfc1-ff25-4410-893e-d3e517af70ea.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Text Guide&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Star (if you like) and fork this repo (keep it PUBLIC, private repo is not supported)&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;strong&gt;Action&lt;/strong&gt; tab in your forked repo &lt;img src=&#34;https://docs.github.com/assets/images/help/repository/actions-tab.png&#34; alt=&#34;Action Tab&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the left sidebar, click the &lt;strong&gt;Build WSA&lt;/strong&gt; workflow. &lt;img src=&#34;https://docs.github.com/assets/images/actions-select-workflow.png&#34; alt=&#34;Workflow&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Above the list of workflow runs, select &lt;strong&gt;Run workflow&lt;/strong&gt; &lt;img src=&#34;https://docs.github.com/assets/images/actions-workflow-dispatch.png&#34; alt=&#34;Run Workflow&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the version of Magisk and select the &lt;a href=&#34;https://github.com/opengapps/opengapps/wiki#variants&#34;&gt;OpenGApps variant&lt;/a&gt; (none is no OpenGApps) you like, select the root solution (none means no root), select WSA version and its architecture (mostly x64) and click &lt;strong&gt;Run workflow&lt;/strong&gt; &lt;img src=&#34;https://docs.github.com/assets/images/actions-manually-run-workflow.png&#34; alt=&#34;Run Workflow&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wait for the action to complete and download the artifact &lt;strong&gt;DO NOT download it via multithread downloaders like IDM or ADM&lt;/strong&gt; &lt;img src=&#34;https://docs.github.com/assets/images/help/repository/artifact-drop-down-updated.png&#34; alt=&#34;Download&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the artifact &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The size shown in the webpage is uncompressed size and the zip you download will be compressed. So the size of the zip will be much less than the size shown in the webpage.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Right-click &lt;code&gt;Install.ps1&lt;/code&gt; and select &lt;code&gt;Run with PowerShell&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you previously have a MagiskOnWSA installation, it will automatically uninstall the previous while &lt;strong&gt;preserving all userdata&lt;/strong&gt; and install the new one, so don&#39;t worry about your data.&lt;/li&gt; &#xA;   &lt;li&gt;If you have an official WSA installation, you should uninstall it first. (In case you want to preserve your data, you can backup &lt;code&gt;%LOCALAPPDATA%\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalCache\userdata.vhdx&lt;/code&gt; before uninstallation and restore it after installation.) (If you want to restore the icons to start menu, please install and use &lt;a href=&#34;https://github.com/LSPosed/WSAHelper/releases/latest&#34;&gt;WSAHelper&lt;/a&gt;.)&lt;/li&gt; &#xA;   &lt;li&gt;If the popup windows disappear &lt;strong&gt;without asking administrative permission&lt;/strong&gt; and WSA is not installed successfully, you should manually run &lt;code&gt;Install.ps1&lt;/code&gt; as administrator: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;Press &lt;code&gt;Win+x&lt;/code&gt; and select &lt;code&gt;Windows Terminal (Admin)&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Input &lt;code&gt;cd &#34;{X:\path\to\your\extracted\folder}&#34;&lt;/code&gt; and press &lt;code&gt;enter&lt;/code&gt;, and remember to replace &lt;code&gt;{X:\path\to\your\extracted\folder}&lt;/code&gt; including the &lt;code&gt;{}&lt;/code&gt;, for example &lt;code&gt;cd &#34;D:\wsa&#34;&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Input &lt;code&gt;PowerShell.exe -ExecutionPolicy Bypass -File .\Install.ps1&lt;/code&gt; and press &lt;code&gt;enter&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;The script will run and WSA will be installed&lt;/li&gt; &#xA;     &lt;li&gt;If this workaround does not work, your PC is not supported for WSA&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Magisk/Play store will be launched. Enjoy by installing LSPosed-zygisk with zygisk enabled or Riru and LSPosed-riru&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Actions workflow task &lt;code&gt;Delete workflow runs&lt;/code&gt; run Failed&lt;/p&gt; &lt;p&gt;Check workflow permissions, should be &lt;code&gt;Read and write permissions&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/40033067/168649322-dadaafc9-dd31-4922-afe1-8aa933b7b036.png&#34; alt=&#34;permissions&#34;&gt;&lt;/p&gt; &lt;p&gt;Read the &lt;a href=&#34;https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#configuring-the-default-github_token-permissions&#34;&gt;Github Docs&lt;/a&gt; to find out how to change this setting&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why should we delete old workflow runs?&lt;/p&gt; &lt;p&gt;Keeping old workflow runs can take up a lot of storage resources and is suspected to be abusive, which can lead to banning.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Can I delete the unzipped folder?&lt;/p&gt; &lt;p&gt;No.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why the size of the zip does not match the one shown?&lt;/p&gt; &lt;p&gt;The zip you downloaded is compressed and Github is showing the uncompressed size.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can I update WSA to new version?&lt;/p&gt; &lt;p&gt;Rerun the Github action, download the new artifact, replace the content of your previous installation and rerun &lt;code&gt;Install.ps1&lt;/code&gt;. Don&#39;t worry, your data will be preserved.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can I get the logcat from WSA?&lt;/p&gt; &lt;p&gt;&lt;code&gt;%LOCALAPPDATA%\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalState\diagnostics\logcat&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can I update Magisk to new version?&lt;/p&gt; &lt;p&gt;Do the same as updating WSA&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How to pass safetynet?&lt;/p&gt; &lt;p&gt;Like all the other emulators, no way.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Virtualization is not enabled?&lt;/p&gt; &lt;p&gt;&lt;code&gt;Install.ps1&lt;/code&gt; helps you enable it if not enabled. After rebooting, rerun &lt;code&gt;Install.ps1&lt;/code&gt; to install WSA. If it&#39;s still not working, you have to enable virtualization in BIOS. That&#39;s a long story so ask Google for help.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How to remount system as read-write?&lt;/p&gt; &lt;p&gt;No way in WSA since it&#39;s mounted as read-only by Hyper-V. You can modify system by making a Magisk module. Or directly modify system.img. Ask Google for help.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;I cannot &lt;code&gt;adb connect localhost:58526&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Make sure developer mode is enabled. If the issue persists, check the IP address of WSA in the setting page and try &lt;code&gt;adb connect ip:5555&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Magisk online module list is empty?&lt;/p&gt; &lt;p&gt;Magisk actively remove online module repository. You can install module locally or by &lt;code&gt;adb push module.zip /data/local/tmp&lt;/code&gt; and &lt;code&gt;adb shell su -c magisk --install-module /data/local/tmp/module.zip&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Can I use Magisk 23.0 stable or lower version?&lt;/p&gt; &lt;p&gt;No. Magisk has bugs preventing itself running on WSA. Magisk 24+ has fixed them. So you must use Magisk 24 or higher version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can I get rid of Magisk?&lt;/p&gt; &lt;p&gt;Choose &lt;code&gt;none&lt;/code&gt; as root solution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Github Action script is updated, how can I synchronize it?&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;In your fork repository, click &lt;code&gt;fetch upstream&lt;/code&gt; &lt;img src=&#34;https://docs.github.com/assets/cb-33284/images/help/repository/fetch-upstream-drop-down.png&#34; alt=&#34;fetch&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Then and click &lt;code&gt;fetch and merge&lt;/code&gt; &lt;img src=&#34;https://docs.github.com/assets/cb-128489/images/help/repository/fetch-and-merge-button.png&#34; alt=&#34;merge&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StoreDev/StoreLib&#34;&gt;StoreLib&lt;/a&gt;: API for downloading WSA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt;: The most famous root solution on Android&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opengapps.org&#34;&gt;The Open GApps Project&lt;/a&gt;: One of the most famous Google Apps packages solution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/WSA-Kernel-SU&#34;&gt;WSA-Kernel-SU&lt;/a&gt; and &lt;a href=&#34;https://git.zx2c4.com/kernel-assisted-superuser/&#34;&gt;kernel-assisted-superuser&lt;/a&gt;: The kernel &lt;code&gt;su&lt;/code&gt; for debugging Magisk Integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ADeltaX/WSAGAScript&#34;&gt;WSAGAScript&lt;/a&gt;: The first GApps integration script for WSA&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>