<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-02T01:32:12Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hktalent/scan4all</title>
    <updated>2022-08-02T01:32:12Z</updated>
    <id>tag:github.com,2022-08-02:/hktalent/scan4all</id>
    <link href="https://github.com/hktalent/scan4all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vulnerabilities Scan: 15000+PoCs; 20 kinds of application password crack; 7000+Web fingerprints; 146 protocols and 90000+ rules Port scanning; Fuzz, HW, awesome BugBounty...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=Hktalent3135773&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/Hktalent3135773.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=Hktalent3135773&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/Hktalent3135773.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hktalent/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/hktalent.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub Followers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/README_CN.md&#34;&gt;README_中文&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/Installation.md&#34;&gt;Compile/Install/Run&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/usage.md&#34;&gt;Parameter Description&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/running.md&#34;&gt;How to use&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/scenario.md&#34;&gt;Scenario&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/pocs.md&#34;&gt;POC List&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/development.md&#34;&gt;Custom Scan&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/NicePwn.md&#34;&gt;Best Practices&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;928&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18223385/175768227-098c779b-6c5f-48ee-91b1-c56e3daa9c87.png&#34;&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is scan4all: integrated vscan, nuclei, ksubdomain, subfinder, etc., fully automated and intelligent。red team tools Code-level optimization, parameter optimization, and individual modules, such as vscan filefuzz, have been rewritten for these integrated projects. In principle, do not repeat the wheel, unless there are bugs, problems&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform: based on golang implementation, lightweight, highly customizable, open source, supports Linux, windows, mac os, etc.&lt;/li&gt; &#xA; &lt;li&gt;Support [20] password blasting, support custom dictionary, open by &#34;priorityNmap&#34;: true &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RDP&lt;/li&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;rsh-spx&lt;/li&gt; &#xA;   &lt;li&gt;Mysql&lt;/li&gt; &#xA;   &lt;li&gt;MsSql&lt;/li&gt; &#xA;   &lt;li&gt;Oracle&lt;/li&gt; &#xA;   &lt;li&gt;Postgresql&lt;/li&gt; &#xA;   &lt;li&gt;Redis&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;Mongodb&lt;/li&gt; &#xA;   &lt;li&gt;SMB, also detect MS17-010 (CVE-2017-0143, CVE-2017-0144, CVE-2017-0145, CVE-2017-0146, CVE-2017-0147, CVE-2017-0148), SmbGhost (CVE- 2020-0796)&lt;/li&gt; &#xA;   &lt;li&gt;Telnet&lt;/li&gt; &#xA;   &lt;li&gt;Snmp&lt;/li&gt; &#xA;   &lt;li&gt;Wap-wsp (Elasticsearch)&lt;/li&gt; &#xA;   &lt;li&gt;RouterOs&lt;/li&gt; &#xA;   &lt;li&gt;HTTP BasicAuth&lt;/li&gt; &#xA;   &lt;li&gt;Weblogic, enable nuclei through enableNuclei=true at the same time, support T3, IIOP and other detection&lt;/li&gt; &#xA;   &lt;li&gt;Tomcat&lt;/li&gt; &#xA;   &lt;li&gt;Jboss&lt;/li&gt; &#xA;   &lt;li&gt;Winrm(wsman)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;By default, http password intelligent blasting is enabled, and it will be automatically activated when an HTTP password is required, without manual intervention&lt;/li&gt; &#xA; &lt;li&gt;Detect whether there is nmap in the system, and enable nmap for fast scanning through priorityNmap=true, which is enabled by default, and the optimized nmap parameters are faster than masscan Disadvantages of using nmap: Is the network bad, because the traffic network packet is too large, which may lead to incomplete results Using nmap additionally requires setting the root password to an environment variable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  export PPSSWWDD=yourRootPswd &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More references: config/doNmapScan.sh By default, naabu is used to complete port scanning -stats=true to view the scanning progress Can I not scan ports?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;noScan=true ./scan4all -l list.txt -v&#xA;# nmap result default noScan=true &#xA;./scan4all -l nmapRssuilt.xml -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast 15000+ POC detection capabilities, PoCs include: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nuclei POC&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;h2&gt;Nuclei Templates Top 10 statistics&lt;/h2&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;TAG&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;AUTHOR&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;DIRECTORY&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;SEVERITY&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;TYPE&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cve&lt;/td&gt; &#xA;   &lt;td&gt;1294&lt;/td&gt; &#xA;   &lt;td&gt;daffainfo&lt;/td&gt; &#xA;   &lt;td&gt;605&lt;/td&gt; &#xA;   &lt;td&gt;cves&lt;/td&gt; &#xA;   &lt;td&gt;1277&lt;/td&gt; &#xA;   &lt;td&gt;info&lt;/td&gt; &#xA;   &lt;td&gt;1352&lt;/td&gt; &#xA;   &lt;td&gt;http&lt;/td&gt; &#xA;   &lt;td&gt;3554&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;panel&lt;/td&gt; &#xA;   &lt;td&gt;591&lt;/td&gt; &#xA;   &lt;td&gt;dhiyaneshdk&lt;/td&gt; &#xA;   &lt;td&gt;503&lt;/td&gt; &#xA;   &lt;td&gt;exposed-panels&lt;/td&gt; &#xA;   &lt;td&gt;600&lt;/td&gt; &#xA;   &lt;td&gt;high&lt;/td&gt; &#xA;   &lt;td&gt;938&lt;/td&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lfi&lt;/td&gt; &#xA;   &lt;td&gt;486&lt;/td&gt; &#xA;   &lt;td&gt;pikpikcu&lt;/td&gt; &#xA;   &lt;td&gt;321&lt;/td&gt; &#xA;   &lt;td&gt;vulnerabilities&lt;/td&gt; &#xA;   &lt;td&gt;493&lt;/td&gt; &#xA;   &lt;td&gt;medium&lt;/td&gt; &#xA;   &lt;td&gt;766&lt;/td&gt; &#xA;   &lt;td&gt;network&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xss&lt;/td&gt; &#xA;   &lt;td&gt;439&lt;/td&gt; &#xA;   &lt;td&gt;pdteam&lt;/td&gt; &#xA;   &lt;td&gt;269&lt;/td&gt; &#xA;   &lt;td&gt;technologies&lt;/td&gt; &#xA;   &lt;td&gt;266&lt;/td&gt; &#xA;   &lt;td&gt;critical&lt;/td&gt; &#xA;   &lt;td&gt;436&lt;/td&gt; &#xA;   &lt;td&gt;dns&lt;/td&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wordpress&lt;/td&gt; &#xA;   &lt;td&gt;401&lt;/td&gt; &#xA;   &lt;td&gt;geeknik&lt;/td&gt; &#xA;   &lt;td&gt;187&lt;/td&gt; &#xA;   &lt;td&gt;exposures&lt;/td&gt; &#xA;   &lt;td&gt;254&lt;/td&gt; &#xA;   &lt;td&gt;low&lt;/td&gt; &#xA;   &lt;td&gt;211&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;exposure&lt;/td&gt; &#xA;   &lt;td&gt;355&lt;/td&gt; &#xA;   &lt;td&gt;dwisiswant0&lt;/td&gt; &#xA;   &lt;td&gt;169&lt;/td&gt; &#xA;   &lt;td&gt;misconfiguration&lt;/td&gt; &#xA;   &lt;td&gt;207&lt;/td&gt; &#xA;   &lt;td&gt;unknown&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cve2021&lt;/td&gt; &#xA;   &lt;td&gt;322&lt;/td&gt; &#xA;   &lt;td&gt;0x_akoko&lt;/td&gt; &#xA;   &lt;td&gt;154&lt;/td&gt; &#xA;   &lt;td&gt;token-spray&lt;/td&gt; &#xA;   &lt;td&gt;206&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rce&lt;/td&gt; &#xA;   &lt;td&gt;313&lt;/td&gt; &#xA;   &lt;td&gt;princechaddha&lt;/td&gt; &#xA;   &lt;td&gt;147&lt;/td&gt; &#xA;   &lt;td&gt;workflows&lt;/td&gt; &#xA;   &lt;td&gt;187&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wp-plugin&lt;/td&gt; &#xA;   &lt;td&gt;297&lt;/td&gt; &#xA;   &lt;td&gt;pussycat0x&lt;/td&gt; &#xA;   &lt;td&gt;128&lt;/td&gt; &#xA;   &lt;td&gt;default-logins&lt;/td&gt; &#xA;   &lt;td&gt;101&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tech&lt;/td&gt; &#xA;   &lt;td&gt;282&lt;/td&gt; &#xA;   &lt;td&gt;gy741&lt;/td&gt; &#xA;   &lt;td&gt;126&lt;/td&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;281 directories, 3922 files&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vscan POC &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;vscan POC includes: xray 2.0 300+ POC, go POC, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;scan4all POC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support 7000+ web fingerprint scanning, identification:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;httpx fingerprint &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;vscan fingerprint&lt;/li&gt; &#xA;     &lt;li&gt;vscan fingerprint: including eHoleFinger, localFinger, etc.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;scan4all fingerprint&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support 146 protocols and 90000+ rule port scanning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Depends on protocols and fingerprints supported by nmap&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fast HTTP sensitive file detection, can customize dictionary&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Landing page detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports multiple types of input - STDIN/HOST/IP/CIDR/URL/TXT&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports multiple output types - JSON/TXT/CSV/STDOUT&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Highly integratable: Configurable unified storage of results to Elasticsearch [strongly recommended]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Smart SSL Analysis:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In-depth analysis, automatically correlate the scanning of domain names in SSL information, such as *.xxx.com, and complete subdomain traversal according to the configuration, and the result will automatically add the target to the scanning list&lt;/li&gt; &#xA;   &lt;li&gt;Support to enable *.xx.com subdomain traversal function in smart SSL information, export EnableSubfinder=true, or adjust in the configuration file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatically identify the case of multiple IPs associated with a domain (DNS), and automatically scan the associated multiple IPs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Smart processing:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;When the IPs of multiple domain names in the list are the same, merge port scans to improve efficiency&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &#xA;    &lt;ol start=&#34;2&#34;&gt; &#xA;     &lt;li&gt;Intelligently handle http abnormal pages, and fingerprint calculation and learning&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automated supply chain identification, analysis and scanning&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Link python3 &lt;a href=&#34;https://github.com/hktalent/log4j-scan&#34;&gt;log4j-scan&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This version blocks the bug that your target information is passed to the DNS Log Server to avoid exposing vulnerabilities&lt;/li&gt; &#xA;   &lt;li&gt;Added the ability to send results to Elasticsearch for batch, touch typing&lt;/li&gt; &#xA;   &lt;li&gt;There will be time in the future to implement the golang version how to use?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/MyWork/;cd ~/MyWork/;git clone https://github.com/hktalent/log4j-scan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intelligently identify honeypots and skip targets. This function is disabled by default. You can set EnableHoneyportDetection=true to enable&lt;/li&gt; &#xA; &lt;li&gt;Highly customizable: allow to define your own dictionary through config/config.json configuration, or control more details, including but not limited to: nuclei, httpx, naabu, etc.&lt;/li&gt; &#xA; &lt;li&gt;support HTTP Request Smuggling: CL-TE、TE-CL、TE-TE&lt;/li&gt; &#xA; &lt;li&gt;Support via parameter Cookie=&#39;PHPSession=xxxx&#39; ./scan4all -host xxxx.com, compatible with nuclei, httpx, go-poc, x-ray POC, filefuzz, http Smuggling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;work process&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hktalent/scan4all/main/static/workflow.jpg&#34;&gt; &#xA;&lt;h1&gt;how to install&lt;/h1&gt; &#xA;&lt;p&gt;download from &lt;a href=&#34;https://github.com/hktalent/scan4all/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/hktalent/scan4all@2.6.9&#xA;scan4all -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;how to use&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Start Elasticsearch, of course you can use the traditional way to output, results&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p logs data&#xA;docker run --restart=always --ulimit nofile=65536:65536 -p 9200:9200 -p 9300:9300 -d --name es -v $PWD/logs:/usr/share/elasticsearch/logs -v $PWD /config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v $PWD/config/jvm.options:/usr/share/elasticsearch/config/jvm.options -v $PWD/data:/ usr/share/elasticsearch/data hktalent/elasticsearch:7.16.2&#xA;# Initialize the es index, the result structure of each tool is different, and it is stored separately&#xA;./config/initEs.sh&#xA;&#xA;# Search syntax, more query methods, learn Elasticsearch by yourself&#xA;http://127.0.0.1:9200/nmap_index/_doc/_search?q=_id:192.168.0.111&#xA;where 92.168.0.111 is the target to query&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please install nmap by yourself before use &lt;a href=&#34;https://github.com/hktalent/scan4all/discussions&#34;&gt;Using Help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build&#xA;# Precise scan url list UrlPrecise=true&#xA;UrlPrecise=true ./scan4all -l xx.txt&#xA;# Disable adaptation to nmap and use naabu port to scan its internally defined http-related ports&#xA;priorityNmap=false ./scan4all -tp http -list allOut.txt -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Work Plan&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrate web-cache-vulnerability-scanner to realize HTTP smuggling smuggling and cache poisoning detection&lt;/li&gt; &#xA; &lt;li&gt;Linkage with metasploit-framework, on the premise that the system has been installed, cooperate with tmux, and complete the linkage with the macos environment as the best practice&lt;/li&gt; &#xA; &lt;li&gt;Integrate more fuzzers &#xA;  &lt;!-- gryffin --&gt;, such as linking sqlmap&lt;/li&gt; &#xA; &lt;li&gt;Integrate chromedp to achieve screenshots of landing pages, detection of front-end landing pages with pure js and js architecture, and corresponding crawlers (sensitive information detection, page crawling)&lt;/li&gt; &#xA; &lt;li&gt;Integrate nmap-go to improve execution efficiency, dynamically parse the result stream, and integrate it into the current task waterfall&lt;/li&gt; &#xA; &lt;li&gt;Integrate ksubdomain to achieve faster subdomain blasting&lt;/li&gt; &#xA; &lt;li&gt;Integrate spider to find more bugs&lt;/li&gt; &#xA; &lt;li&gt;Semi-automatic fingerprint learning to improve accuracy; specify fingerprint name, configure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Changelog&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022-07-20 fix and PR nuclei &lt;a href=&#34;https://github.com/projectdiscovery/nuclei/issues/2301&#34;&gt;#2301&lt;/a&gt; 并发多实例的bug&lt;/li&gt; &#xA; &lt;li&gt;2022-07-20 add web cache vulnerability scanner&lt;/li&gt; &#xA; &lt;li&gt;2022-07-19 PR nuclei &lt;a href=&#34;https://github.com/projectdiscovery/nuclei/pull/2308&#34;&gt;#2308&lt;/a&gt; add dsl function: substr aes_cbc&lt;/li&gt; &#xA; &lt;li&gt;2022-07-19 添加dcom Protocol enumeration network interfaces&lt;/li&gt; &#xA; &lt;li&gt;2022-06-30 嵌入式集成私人版本nuclei-templates 共3744个YAML POC； 1、集成Elasticsearch存储中间结果 2、嵌入整个config目录到程序中&lt;/li&gt; &#xA; &lt;li&gt;2022-06-27 优化模糊匹配，提高正确率、鲁棒性;集成ksubdomain进度&lt;/li&gt; &#xA; &lt;li&gt;2022-06-24 优化指纹算法；增加工作流程图&lt;/li&gt; &#xA; &lt;li&gt;2022-06-23 添加参数ParseSSl，控制默认不深度分析SSL中的DNS信息，默认不对SSL中dns进行扫描；优化：nmap未自动加.exe的bug；优化windows下缓存文件未优化体积的bug&lt;/li&gt; &#xA; &lt;li&gt;2022-06-22 集成11种协议弱口令检测、密码爆破：ftp、mongodb、mssql、mysql、oracle、postgresql、rdp、redis、smb、ssh、telnet，同时优化支持外挂密码字典&lt;/li&gt; &#xA; &lt;li&gt;2022-06-20 集成Subfinder，域名爆破，启动参数导出EnableSubfinder=true，注意启动后很慢； ssl证书中域名信息的自动深度钻取 允许通过 config/config.json 配置定义自己的字典，或设置相关开关&lt;/li&gt; &#xA; &lt;li&gt;2022-06-17 优化一个域名多个IP的情况，所有IP都会被端口扫描，然后按照后续的扫描流程&lt;/li&gt; &#xA; &lt;li&gt;2022-06-15 此版本增加了过去实战中获得的几个weblogic密码字典和webshell字典&lt;/li&gt; &#xA; &lt;li&gt;2022-06-10 完成核的整合，当然包括核模板的整合&lt;/li&gt; &#xA; &lt;li&gt;2022-06-07 添加相似度算法来检测 404&lt;/li&gt; &#xA; &lt;li&gt;2022-06-07 增加http url列表精准扫描参数，根据环境变量UrlPrecise=true开启&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Communication group (WeChat, QQ，Tg)&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Wechat&lt;/th&gt; &#xA;   &lt;th&gt;Or&lt;/th&gt; &#xA;   &lt;th&gt;QQchat&lt;/th&gt; &#xA;   &lt;th&gt;Or&lt;/th&gt; &#xA;   &lt;th&gt;Tg&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/wcq.JPG&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/qqc.jpg&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/tg.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Donation&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Wechat Pay&lt;/th&gt; &#xA;   &lt;th&gt;AliPay&lt;/th&gt; &#xA;   &lt;th&gt;Paypal&lt;/th&gt; &#xA;   &lt;th&gt;BTC Pay&lt;/th&gt; &#xA;   &lt;th&gt;BCH Pay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/hktalent/myhktools/raw/master/md/wc.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/myhktools/raw/master/md/zfb.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.paypal.me/pwned2019&#34;&gt;paypal&lt;/a&gt; &lt;strong&gt;&lt;a href=&#34;mailto:miracletalent@gmail.com&#34;&gt;miracletalent@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/myhktools/raw/master/md/BTC.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/myhktools/raw/master/md/BCH.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>jackfrued/Python-100-Days</title>
    <updated>2022-08-02T01:32:12Z</updated>
    <id>tag:github.com,2022-08-02:/jackfrued/Python-100-Days</id>
    <link href="https://github.com/jackfrued/Python-100-Days" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python - 100天从新手到大师&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Python - 100天从新手到大师&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：骆昊&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：从项目上线到获得8w+星标以来，一直收到反馈说基础部分（前15天的内容）对新手来说是比较困难的，建议有配套视频进行讲解。最近把基础部分的内容重新制作了一个名为&lt;a href=&#34;https://github.com/jackfrued/Python-Core-50-Courses&#34;&gt;“Python-Core-50-Courses”&lt;/a&gt;的项目，&lt;strong&gt;用更为简单通俗的方式重写了这部分内容并附带了视频讲解&lt;/strong&gt;，初学者可以关注下这个新项目。如果需要&lt;strong&gt;Python基础视频&lt;/strong&gt;，可以在“B站”搜索&lt;a href=&#34;https://www.bilibili.com/video/BV1FT4y1R7sz&#34;&gt;《Python零基础快速上手》&lt;/a&gt;，这套视频是我讲课的时候录制的随堂视频，画质尚可、音质一般，但是对初学者应该会有些帮助，欢迎大家留言、评论、发弹幕。学习之后觉得有收获的小伙伴可以“一键三连”来支持UP主（千锋Python）。国内用户如果访问GitHub比较慢的话，可以关注我的&lt;strong&gt;知乎号&lt;a href=&#34;https://www.zhihu.com/people/jackfrued&#34;&gt;Python-Jack&lt;/a&gt;&lt;/strong&gt;，上面的&lt;a href=&#34;https://zhuanlan.zhihu.com/c_1216656665569013760&#34;&gt;“从零开始学Python”&lt;/a&gt;专栏比较适合初学者，其他的专栏也在持续创作和更新中，欢迎大家关注并点赞评论。&lt;/p&gt; &#xA; &lt;p&gt;创作不易，感谢大家的打赏支持，这些钱不会用于个人消费（例如：购买咖啡），而是通过腾讯公益、美团公益、水滴筹等平台捐赠给需要帮助的人（&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97.md&#34;&gt;点击&lt;/a&gt;了解捐赠情况）。需要加入QQ学习群的可以扫描下面的二维码，三个群加一个即可，不要重复进群。学习群会为大家提供&lt;strong&gt;学习资源&lt;/strong&gt;和&lt;strong&gt;问题解答&lt;/strong&gt;，如果有&lt;strong&gt;Python体验课&lt;/strong&gt;和&lt;strong&gt;行业公开课&lt;/strong&gt;会提前在群里通知大家，欢迎大家加入。&lt;/p&gt; &#xA; &lt;p&gt;项目“Day80~90”部分目前仍在创作中，因为作者平时也挤不出太多时间来写文档，因此更新的速度比较缓慢，感谢大家的理解。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://gitee.com/jackfrued/mypic/raw/master/20211120192545.png&#34;&gt; &#xA;&lt;h3&gt;Python应用领域和职业发展分析&lt;/h3&gt; &#xA;&lt;p&gt;简单的说，Python是一个“优雅”、“明确”、“简单”的编程语言。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;学习曲线低，非专业人士也能上手&lt;/li&gt; &#xA; &lt;li&gt;开源系统，拥有强大的生态圈&lt;/li&gt; &#xA; &lt;li&gt;解释型语言，完美的平台可移植性&lt;/li&gt; &#xA; &lt;li&gt;动态类型语言，支持面向对象和函数式编程&lt;/li&gt; &#xA; &lt;li&gt;代码规范程度高，可读性强&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Python在以下领域都有用武之地。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;后端开发 - Python / Java / Go / PHP&lt;/li&gt; &#xA; &lt;li&gt;DevOps - Python / Shell / Ruby&lt;/li&gt; &#xA; &lt;li&gt;数据采集 - Python / C++ / Java&lt;/li&gt; &#xA; &lt;li&gt;量化交易 - Python / C++ / R&lt;/li&gt; &#xA; &lt;li&gt;数据科学 - Python / R / Julia / Matlab&lt;/li&gt; &#xA; &lt;li&gt;机器学习 - Python / R / C++ / Julia&lt;/li&gt; &#xA; &lt;li&gt;自动化测试 - Python / Shell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python后端开发工程师（服务器、云平台、数据接口）&lt;/li&gt; &#xA; &lt;li&gt;Python运维工程师（自动化运维、SRE、DevOps）&lt;/li&gt; &#xA; &lt;li&gt;Python数据分析师（数据分析、商业智能、数字化运营）&lt;/li&gt; &#xA; &lt;li&gt;Python数据挖掘工程师（机器学习、深度学习、算法专家）&lt;/li&gt; &#xA; &lt;li&gt;Python爬虫工程师&lt;/li&gt; &#xA; &lt;li&gt;Python测试工程师（自动化测试、测试开发）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：目前，&lt;strong&gt;数据分析和数据挖掘是非常热门的方向&lt;/strong&gt;，因为不管是互联网行业还是传统行业都已经积累了大量的数据，各行各业都需要数据分析师从已有的数据中发现更多的商业价值，从而为企业的决策提供数据的支撑，这就是所谓的数据驱动决策。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;给初学者的几个建议：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make English as your working language. （让英语成为你的工作语言）&lt;/li&gt; &#xA; &lt;li&gt;Practice makes perfect. （熟能生巧）&lt;/li&gt; &#xA; &lt;li&gt;All experience comes from mistakes. （所有的经验都源于你犯过的错误）&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t be one of the leeches. （不要当伸手党）&lt;/li&gt; &#xA; &lt;li&gt;Either outstanding or out. （要么出众，要么出局）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day01~15 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15&#34;&gt;Python语言基础&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Day01 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/01.%E5%88%9D%E8%AF%86Python.md&#34;&gt;初识Python&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python简介 - Python的历史 / Python的优缺点 / Python的应用领域&lt;/li&gt; &#xA; &lt;li&gt;搭建编程环境 - Windows环境 / Linux环境 / MacOS环境&lt;/li&gt; &#xA; &lt;li&gt;从终端运行Python程序 - Hello, world / &lt;code&gt;print&lt;/code&gt;函数 / 运行程序&lt;/li&gt; &#xA; &lt;li&gt;使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE&lt;/li&gt; &#xA; &lt;li&gt;注释 - 注释的作用 / 单行注释 / 多行注释&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day02 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0.md&#34;&gt;语言元素&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制&lt;/li&gt; &#xA; &lt;li&gt;变量和类型 - 变量的命名 / 变量的使用 / &lt;code&gt;input&lt;/code&gt;函数 / 检查变量类型 / 类型转换&lt;/li&gt; &#xA; &lt;li&gt;数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码&lt;/li&gt; &#xA; &lt;li&gt;运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级&lt;/li&gt; &#xA; &lt;li&gt;应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day03 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84.md&#34;&gt;分支结构&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图&lt;/li&gt; &#xA; &lt;li&gt;if语句 - 简单的&lt;code&gt;if&lt;/code&gt; / &lt;code&gt;if&lt;/code&gt;-&lt;code&gt;else&lt;/code&gt;结构 / &lt;code&gt;if&lt;/code&gt;-&lt;code&gt;elif&lt;/code&gt;-&lt;code&gt;else&lt;/code&gt;结构 / 嵌套的&lt;code&gt;if&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day04 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84.md&#34;&gt;循环结构&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图&lt;/li&gt; &#xA; &lt;li&gt;while循环 - 基本结构 / &lt;code&gt;break&lt;/code&gt;语句 / &lt;code&gt;continue&lt;/code&gt;语句&lt;/li&gt; &#xA; &lt;li&gt;for循环 - 基本结构 / &lt;code&gt;range&lt;/code&gt;类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序&lt;/li&gt; &#xA; &lt;li&gt;应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day05 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91.md&#34;&gt;构造程序逻辑&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;经典案例：水仙花数 / 百钱百鸡 / Craps赌博游戏&lt;/li&gt; &#xA; &lt;li&gt;练习题目：斐波那契数列 / 完美数 / 素数&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day06 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8.md&#34;&gt;函数和模块的使用&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;函数的作用 - 代码的坏味道 / 用函数封装功能模块&lt;/li&gt; &#xA; &lt;li&gt;定义函数 - &lt;code&gt;def&lt;/code&gt;关键字 / 函数名 / 参数列表 / &lt;code&gt;return&lt;/code&gt;语句 / 调用自定义函数&lt;/li&gt; &#xA; &lt;li&gt;调用函数 - Python内置函数 / 导入模块和函数&lt;/li&gt; &#xA; &lt;li&gt;函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数&lt;/li&gt; &#xA; &lt;li&gt;函数的返回值 - 没有返回值 / 返回单个值 / 返回多个值&lt;/li&gt; &#xA; &lt;li&gt;作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字&lt;/li&gt; &#xA; &lt;li&gt;用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day07 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.md&#34;&gt;字符串和常用数据结构&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法&lt;/li&gt; &#xA; &lt;li&gt;列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历&lt;/li&gt; &#xA; &lt;li&gt;列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找&lt;/li&gt; &#xA; &lt;li&gt;生成列表 - 使用&lt;code&gt;range&lt;/code&gt;创建数字列表 / 生成表达式 / 生成器&lt;/li&gt; &#xA; &lt;li&gt;元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换&lt;/li&gt; &#xA; &lt;li&gt;集合基本用法 - 集合和列表的区别 / 创建集合 / 添加元素 / 删除元素 / 清空&lt;/li&gt; &#xA; &lt;li&gt;集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集&lt;/li&gt; &#xA; &lt;li&gt;字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空&lt;/li&gt; &#xA; &lt;li&gt;字典常用操作 - &lt;code&gt;keys&lt;/code&gt;方法 / &lt;code&gt;values&lt;/code&gt;方法 / &lt;code&gt;items&lt;/code&gt;方法 / &lt;code&gt;setdefault&lt;/code&gt;方法&lt;/li&gt; &#xA; &lt;li&gt;基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角&lt;/li&gt; &#xA; &lt;li&gt;综合案例 - 双色球选号 / 井字棋&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day08 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80.md&#34;&gt;面向对象编程基础&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念&lt;/li&gt; &#xA; &lt;li&gt;定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / &lt;code&gt;__str__&lt;/code&gt;方法&lt;/li&gt; &#xA; &lt;li&gt;使用对象 - 创建对象 / 给对象发消息&lt;/li&gt; &#xA; &lt;li&gt;面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态&lt;/li&gt; &#xA; &lt;li&gt;基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day09 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6.md&#34;&gt;面向对象进阶&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用&lt;code&gt;__slots__&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;类中的方法 - 实例方法 / 类方法 / 静态方法&lt;/li&gt; &#xA; &lt;li&gt;运算符重载 - &lt;code&gt;__add__&lt;/code&gt; / &lt;code&gt;__sub__&lt;/code&gt; / &lt;code&gt;__or__&lt;/code&gt; /&lt;code&gt;__getitem__&lt;/code&gt; / &lt;code&gt;__setitem__&lt;/code&gt; / &lt;code&gt;__len__&lt;/code&gt; / &lt;code&gt;__repr__&lt;/code&gt; / &lt;code&gt;__gt__&lt;/code&gt; / &lt;code&gt;__lt__&lt;/code&gt; / &lt;code&gt;__le__&lt;/code&gt; / &lt;code&gt;__ge__&lt;/code&gt; / &lt;code&gt;__eq__&lt;/code&gt; / &lt;code&gt;__ne__&lt;/code&gt; / &lt;code&gt;__contains__&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;类(的对象)之间的关系 - 关联 / 继承 / 依赖&lt;/li&gt; &#xA; &lt;li&gt;继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法&lt;/li&gt; &#xA; &lt;li&gt;综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day10 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91.md&#34;&gt;图形用户界面和游戏开发&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用&lt;code&gt;tkinter&lt;/code&gt;开发GUI程序&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;code&gt;pygame&lt;/code&gt;三方库开发游戏应用&lt;/li&gt; &#xA; &lt;li&gt;“大球吃小球”游戏&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day11 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8.md&#34;&gt;文件和异常&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;读文件 - 读取整个文件 / 逐行读取 / 文件路径&lt;/li&gt; &#xA; &lt;li&gt;写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件&lt;/li&gt; &#xA; &lt;li&gt;异常处理 - 异常机制的重要性 / &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;except&lt;/code&gt;代码块 / &lt;code&gt;else&lt;/code&gt;代码块 / &lt;code&gt;finally&lt;/code&gt;代码块 / 内置异常类型 / 异常栈 / &lt;code&gt;raise&lt;/code&gt;语句&lt;/li&gt; &#xA; &lt;li&gt;数据持久化 - CSV文件概述 / &lt;code&gt;csv&lt;/code&gt;模块的应用 / JSON数据格式 / &lt;code&gt;json&lt;/code&gt;模块的应用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day12 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.md&#34;&gt;字符串和正则表达式&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / &lt;code&gt;in&lt;/code&gt;和&lt;code&gt;not in&lt;/code&gt;运算符 / &lt;code&gt;is_xxx&lt;/code&gt;方法 / &lt;code&gt;join&lt;/code&gt;和&lt;code&gt;split&lt;/code&gt;方法 / &lt;code&gt;strip&lt;/code&gt;相关方法 / &lt;code&gt;pyperclip&lt;/code&gt;模块 / 不变字符串和可变字符串 / &lt;code&gt;StringIO&lt;/code&gt;的使用&lt;/li&gt; &#xA; &lt;li&gt;正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用&lt;code&gt;re&lt;/code&gt;模块实现正则表达式操作（匹配、搜索、替换、捕获）&lt;/li&gt; &#xA; &lt;li&gt;使用正则表达式 - &lt;code&gt;re&lt;/code&gt;模块 / &lt;code&gt;compile&lt;/code&gt;函数 / &lt;code&gt;group&lt;/code&gt;和&lt;code&gt;groups&lt;/code&gt;方法 / &lt;code&gt;match&lt;/code&gt;方法 / &lt;code&gt;search&lt;/code&gt;方法 / &lt;code&gt;findall&lt;/code&gt;和&lt;code&gt;finditer&lt;/code&gt;方法 / &lt;code&gt;sub&lt;/code&gt;和&lt;code&gt;subn&lt;/code&gt;方法 / &lt;code&gt;split&lt;/code&gt;方法&lt;/li&gt; &#xA; &lt;li&gt;应用案例 - 使用正则表达式验证输入的字符串&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day13 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B.md&#34;&gt;进程和线程&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景&lt;/li&gt; &#xA; &lt;li&gt;使用进程 - &lt;code&gt;fork&lt;/code&gt;函数 / &lt;code&gt;multiprocessing&lt;/code&gt;模块 / 进程池 / 进程间通信&lt;/li&gt; &#xA; &lt;li&gt;使用线程 - &lt;code&gt;threading&lt;/code&gt;模块 / &lt;code&gt;Thread&lt;/code&gt;类 / &lt;code&gt;RLock&lt;/code&gt;类 / &lt;code&gt;Condition&lt;/code&gt;类 / 线程池&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day14 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91.md&#34;&gt;网络编程入门和网络应用开发&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念&lt;/li&gt; &#xA; &lt;li&gt;网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式&lt;/li&gt; &#xA; &lt;li&gt;基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / &lt;code&gt;requests&lt;/code&gt;三方库 / 解析JSON格式数据&lt;/li&gt; &#xA; &lt;li&gt;Python网络编程 - 套接字的概念 / &lt;code&gt;socket&lt;/code&gt;模块 / &lt;code&gt;socket&lt;/code&gt;函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端&lt;/li&gt; &#xA; &lt;li&gt;电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / &lt;code&gt;smtplib&lt;/code&gt;模块 / &lt;code&gt;poplib&lt;/code&gt;模块 / &lt;code&gt;imaplib&lt;/code&gt;模块&lt;/li&gt; &#xA; &lt;li&gt;短信服务 - 调用短信服务网关&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day15 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day01-15/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86.md&#34;&gt;图像和文档处理&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果&lt;/li&gt; &#xA; &lt;li&gt;读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理&lt;/li&gt; &#xA; &lt;li&gt;读写Excel文件 - &lt;code&gt;xlrd&lt;/code&gt; / &lt;code&gt;xlwt&lt;/code&gt; / &lt;code&gt;openpyxl&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day16~Day20 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day16-20/16-20.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6.md&#34;&gt;Python语言进阶 &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;常用数据结构&lt;/li&gt; &#xA; &lt;li&gt;函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器&lt;/li&gt; &#xA; &lt;li&gt;面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式&lt;/li&gt; &#xA; &lt;li&gt;迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /&lt;/li&gt; &#xA; &lt;li&gt;并发和异步编程 - 多线程 / 多进程 / 异步IO / &lt;code&gt;async&lt;/code&gt;和&lt;code&gt;awai&lt;/code&gt;t&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day21~30 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day21-30/21-30.Web%E5%89%8D%E7%AB%AF%E6%A6%82%E8%BF%B0.md&#34;&gt;Web前端入门&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用HTML标签承载页面内容&lt;/li&gt; &#xA; &lt;li&gt;用CSS渲染页面&lt;/li&gt; &#xA; &lt;li&gt;用JavaScript处理交互式行为&lt;/li&gt; &#xA; &lt;li&gt;jQuery入门和提高&lt;/li&gt; &#xA; &lt;li&gt;Vue.js入门&lt;/li&gt; &#xA; &lt;li&gt;Element的使用&lt;/li&gt; &#xA; &lt;li&gt;Bootstrap的使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day31~35 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day31-35/31-35.%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.md&#34;&gt;玩转Linux操作系统&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;操作系统发展史和Linux概述&lt;/li&gt; &#xA; &lt;li&gt;Linux基础命令&lt;/li&gt; &#xA; &lt;li&gt;Linux中的实用程序&lt;/li&gt; &#xA; &lt;li&gt;Linux的文件系统&lt;/li&gt; &#xA; &lt;li&gt;Vim编辑器的应用&lt;/li&gt; &#xA; &lt;li&gt;环境变量和Shell编程&lt;/li&gt; &#xA; &lt;li&gt;软件的安装和服务的配置&lt;/li&gt; &#xA; &lt;li&gt;网络访问和管理&lt;/li&gt; &#xA; &lt;li&gt;其他相关内容&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day36~40 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day36-40&#34;&gt;数据库基础和进阶&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关系型数据库概述&lt;/li&gt; &#xA; &lt;li&gt;MySQL的安装和使用&lt;/li&gt; &#xA; &lt;li&gt;SQL的使用&lt;/li&gt; &#xA; &lt;li&gt;DDL - 数据定义语言 - &lt;code&gt;create&lt;/code&gt; / &lt;code&gt;drop&lt;/code&gt; / &lt;code&gt;alter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;DML - 数据操作语言 - &lt;code&gt;insert&lt;/code&gt; / &lt;code&gt;delete&lt;/code&gt; / &lt;code&gt;update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;DQL - 数据查询语言 - &lt;code&gt;select&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;DCL - 数据控制语言 - &lt;code&gt;grant&lt;/code&gt; / &lt;code&gt;revoke&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL新特性&lt;/li&gt; &#xA; &lt;li&gt;窗口函数的应用&lt;/li&gt; &#xA; &lt;li&gt;JSON数据类型&lt;/li&gt; &#xA; &lt;li&gt;相关知识&lt;/li&gt; &#xA; &lt;li&gt;数据完整性和一致性&lt;/li&gt; &#xA; &lt;li&gt;视图、函数、过程、触发器&lt;/li&gt; &#xA; &lt;li&gt;事务和锁&lt;/li&gt; &#xA; &lt;li&gt;执行计划和索引&lt;/li&gt; &#xA; &lt;li&gt;范式理论和反范式设计&lt;/li&gt; &#xA; &lt;li&gt;在Python中操作MySQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day41~55 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55&#34;&gt;实战Django&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Day41 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/41.Django%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.md&#34;&gt;Django快速上手&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web应用工作机制&lt;/li&gt; &#xA; &lt;li&gt;HTTP请求和响应&lt;/li&gt; &#xA; &lt;li&gt;Django框架概述&lt;/li&gt; &#xA; &lt;li&gt;5分钟快速上手&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day42 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/42.%E6%B7%B1%E5%85%A5%E6%A8%A1%E5%9E%8B.md&#34;&gt;深入模型&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关系型数据库配置&lt;/li&gt; &#xA; &lt;li&gt;使用ORM完成对模型的CRUD操作&lt;/li&gt; &#xA; &lt;li&gt;管理后台的使用&lt;/li&gt; &#xA; &lt;li&gt;Django模型最佳实践&lt;/li&gt; &#xA; &lt;li&gt;模型定义参考&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day43 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/43.%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%92%8CAjax%E8%AF%B7%E6%B1%82.md&#34;&gt;静态资源和Ajax请求&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;加载静态资源&lt;/li&gt; &#xA; &lt;li&gt;Ajax概述&lt;/li&gt; &#xA; &lt;li&gt;用Ajax实现投票功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day44 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/44.Cookie%E5%92%8CSession.md&#34;&gt;Cookie和Session&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;实现用户跟踪&lt;/li&gt; &#xA; &lt;li&gt;cookie和session的关系&lt;/li&gt; &#xA; &lt;li&gt;Django框架对session的支持&lt;/li&gt; &#xA; &lt;li&gt;视图函数中的cookie读写操作&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day45 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/45.%E5%88%B6%E4%BD%9C%E6%8A%A5%E8%A1%A8.md&#34;&gt;报表和日志&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过&lt;code&gt;HttpResponse&lt;/code&gt;修改响应头&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;code&gt;StreamingHttpResponse&lt;/code&gt;处理大文件&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;code&gt;xlwt&lt;/code&gt;生成Excel报表&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;code&gt;reportlab&lt;/code&gt;生成PDF报表&lt;/li&gt; &#xA; &lt;li&gt;使用ECharts生成前端图表&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day46 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/46.%E6%97%A5%E5%BF%97%E5%92%8C%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%A0%8F.md&#34;&gt;日志和调试工具栏&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置日志&lt;/li&gt; &#xA; &lt;li&gt;配置Django-Debug-Toolbar&lt;/li&gt; &#xA; &lt;li&gt;优化ORM代码&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day47 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/47.%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9A%84%E5%BA%94%E7%94%A8.md&#34;&gt;中间件的应用&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;什么是中间件&lt;/li&gt; &#xA; &lt;li&gt;Django框架内置的中间件&lt;/li&gt; &#xA; &lt;li&gt;自定义中间件及其应用场景&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day48 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/48.%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8.md&#34;&gt;前后端分离开发入门&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;返回JSON格式的数据&lt;/li&gt; &#xA; &lt;li&gt;用Vue.js渲染页面&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day49 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/49.RESTful%E6%9E%B6%E6%9E%84%E5%92%8CDRF%E5%85%A5%E9%97%A8.md&#34;&gt;RESTful架构和DRF入门&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day50 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/50.RESTful%E6%9E%B6%E6%9E%84%E5%92%8CDRF%E8%BF%9B%E9%98%B6.md&#34;&gt;RESTful架构和DRF进阶&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day51 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/51.%E4%BD%BF%E7%94%A8%E7%BC%93%E5%AD%98.md&#34;&gt;使用缓存&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;网站优化第一定律&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在Django项目中使用Redis提供缓存服务&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在视图函数中读写缓存&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用装饰器实现页面缓存&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;为数据接口提供缓存服务&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day52 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/52.%E6%8E%A5%E5%85%A5%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0.md&#34;&gt;接入三方平台&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;文件上传表单控件和图片文件预览&lt;/li&gt; &#xA; &lt;li&gt;服务器端如何处理上传的文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day53 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/53.%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1%E5%92%8C%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.md&#34;&gt;异步任务和定时任务&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;网站优化第二定律&lt;/li&gt; &#xA; &lt;li&gt;配置消息队列服务&lt;/li&gt; &#xA; &lt;li&gt;在项目中使用Celery实现任务异步化&lt;/li&gt; &#xA; &lt;li&gt;在项目中使用Celery实现定时任务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day54 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/54.%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.md&#34;&gt;单元测试&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day55 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day41-55/55.%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF.md&#34;&gt;项目上线&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python中的单元测试&lt;/li&gt; &#xA; &lt;li&gt;Django框架对单元测试的支持&lt;/li&gt; &#xA; &lt;li&gt;使用版本控制系统&lt;/li&gt; &#xA; &lt;li&gt;配置和使用uWSGI&lt;/li&gt; &#xA; &lt;li&gt;动静分离和Nginx配置&lt;/li&gt; &#xA; &lt;li&gt;配置HTTPS&lt;/li&gt; &#xA; &lt;li&gt;配置域名解析&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day56~60 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day56-60/56-60.%E7%94%A8FastAPI%E5%BC%80%E5%8F%91%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3.md&#34;&gt;用FastAPI开发数据接口&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FastAPI五分钟上手&lt;/li&gt; &#xA; &lt;li&gt;请求和响应&lt;/li&gt; &#xA; &lt;li&gt;接入关系型数据库&lt;/li&gt; &#xA; &lt;li&gt;依赖注入&lt;/li&gt; &#xA; &lt;li&gt;中间件&lt;/li&gt; &#xA; &lt;li&gt;异步化&lt;/li&gt; &#xA; &lt;li&gt;虚拟化部署（Docker）&lt;/li&gt; &#xA; &lt;li&gt;项目实战：车辆违章查询项目&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day61~65 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65&#34;&gt;爬虫开发&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Day61 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/61.%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0.md&#34;&gt;网络数据采集概述&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;网络爬虫的概念及其应用领域&lt;/li&gt; &#xA; &lt;li&gt;网络爬虫的合法性探讨&lt;/li&gt; &#xA; &lt;li&gt;开发网络爬虫的相关工具&lt;/li&gt; &#xA; &lt;li&gt;一个爬虫程序的构成&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day62 - 数据抓取和解析&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/62.%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90-1.md&#34;&gt;使用&lt;code&gt;requests&lt;/code&gt;三方库实现数据抓取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/62.%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2-2.md&#34;&gt;页面解析的三种方式&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;正则表达式解析&lt;/li&gt; &#xA;   &lt;li&gt;XPath解析&lt;/li&gt; &#xA;   &lt;li&gt;CSS选择器解析&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day63 - Python中的并发编程&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/63.Python%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1.md&#34;&gt;多线程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/63.Python%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2.md&#34;&gt;多进程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/63.Python%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3.md&#34;&gt;异步I/O&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day64 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/64.%E4%BD%BF%E7%94%A8Selenium%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9.md&#34;&gt;使用Selenium抓取网页动态内容&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day65 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day61-65/65.%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B.md&#34;&gt;爬虫框架Scrapy简介&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;Day66~80 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80&#34;&gt;数据分析&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Day66 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0.md&#34;&gt;数据分析概述&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day67 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.md&#34;&gt;环境准备&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day68 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1.md&#34;&gt;NumPy的应用-1&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day69 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2.md&#34;&gt;NumPy的应用-2&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day70 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/70.Pandas%E7%9A%84%E5%BA%94%E7%94%A8-1.md&#34;&gt;Pandas的应用-1&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day71 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/71.Pandas%E7%9A%84%E5%BA%94%E7%94%A8-2.md&#34;&gt;Pandas的应用-2&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day72 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/72.Pandas%E7%9A%84%E5%BA%94%E7%94%A8-3.md&#34;&gt;Pandas的应用-3&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day73 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/73.Pandas%E7%9A%84%E5%BA%94%E7%94%A8-4.md&#34;&gt;Pandas的应用-4&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day74 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/74.Pandas%E7%9A%84%E5%BA%94%E7%94%A8-5.md&#34;&gt;Pandas的应用-5&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day75 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/75.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1.md&#34;&gt;数据可视化-1&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day76 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/76.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2.md&#34;&gt;数据可视化-2&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day77 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/77.%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80.md&#34;&gt;概率统计基础&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day78 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/78.%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90%E5%92%8C%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1.md&#34;&gt;方差分析和参数估计&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day79 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/79.%E7%9B%B8%E5%85%B3%E5%92%8C%E5%9B%9E%E5%BD%92.md&#34;&gt;相关和回归&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day80 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day66-80/80.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E8%AE%BA.md&#34;&gt;数据分析方法论&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;Day81~90 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90&#34;&gt;机器学习和深度学习&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Day81 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/81.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80.md&#34;&gt;机器学习基础&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day82 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/82.k%E6%9C%80%E8%BF%91%E9%82%BB%E5%88%86%E7%B1%BB.md&#34;&gt;k最近邻分类&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day83 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/83.%E5%86%B3%E7%AD%96%E6%A0%91.md&#34;&gt;决策树&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day84 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/84.%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB.md&#34;&gt;贝叶斯分类&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day85 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/85.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA.md&#34;&gt;支持向量机&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day86 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/86.K-%E5%9D%87%E5%80%BC%E8%81%9A%E7%B1%BB.md&#34;&gt;K-均值聚类&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day87 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/87.%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90.md&#34;&gt;回归分析&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day88 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/88.%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8.md&#34;&gt;深度学习入门&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day89 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/89.PyTorch%E6%A6%82%E8%BF%B0.md&#34;&gt;PyTorch概述&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;Day90 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day81-90/90.PyTorch%E5%AE%9E%E6%88%98.md&#34;&gt;PyTorch实战&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;Day91~100 - &lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100&#34;&gt;团队项目开发&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;第91天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/91.%E5%9B%A2%E9%98%9F%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.md&#34;&gt;团队项目开发的问题和解决方案&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;软件过程模型&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;经典过程模型（瀑布模型）&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;可行性分析（研究做还是不做），输出《可行性分析报告》。&lt;/li&gt; &#xA;     &lt;li&gt;需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。&lt;/li&gt; &#xA;     &lt;li&gt;概要设计和详细设计，输出概念模型图（ER图）、物理模型图、类图、时序图等。&lt;/li&gt; &#xA;     &lt;li&gt;编码 / 测试。&lt;/li&gt; &#xA;     &lt;li&gt;上线 / 维护。&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;瀑布模型最大的缺点是无法拥抱需求变化，整套流程结束后才能看到产品，团队士气低落。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;产品的Backlog（用户故事、产品原型）。&lt;/li&gt; &#xA;     &lt;li&gt;计划会议（评估和预算）。&lt;/li&gt; &#xA;     &lt;li&gt;日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。&lt;/li&gt; &#xA;     &lt;li&gt;修复bug（问题描述、重现步骤、测试人员、被指派人）。&lt;/li&gt; &#xA;     &lt;li&gt;发布版本。&lt;/li&gt; &#xA;     &lt;li&gt;评审会议（Showcase，用户需要参与）。&lt;/li&gt; &#xA;     &lt;li&gt;回顾会议（对当前迭代周期做一个总结）。&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;补充：敏捷软件开发宣言&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;strong&gt;个体和互动&lt;/strong&gt; 高于 流程和工具&lt;/li&gt; &#xA;      &lt;li&gt;&lt;strong&gt;工作的软件&lt;/strong&gt; 高于 详尽的文档&lt;/li&gt; &#xA;      &lt;li&gt;&lt;strong&gt;客户合作&lt;/strong&gt; 高于 合同谈判&lt;/li&gt; &#xA;      &lt;li&gt;&lt;strong&gt;响应变化&lt;/strong&gt; 高于 遵循计划&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/agile-scrum-sprint-cycle.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;敏捷团队通常人数为8-10人。&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在看板上面，看板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;项目团队组建&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;团队的构成和角色&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;说明：谢谢&lt;strong&gt;付祥英&lt;/strong&gt;女士帮助我绘制了下面这张精美的公司组织架构图。&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/company_architecture.png&#34; alt=&#34;company_architecture&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;编程规范和代码审查（&lt;code&gt;flake8&lt;/code&gt;、&lt;code&gt;pylint&lt;/code&gt;）&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/pylint.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Python中的一些“惯例”（请参考&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Python%E6%83%AF%E4%BE%8B.md&#34;&gt;《Python惯例-如何编写Pythonic的代码》&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;影响代码可读性的原因：&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;代码注释太少或者没有注释&lt;/li&gt; &#xA;     &lt;li&gt;代码破坏了语言的最佳实践&lt;/li&gt; &#xA;     &lt;li&gt;反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;团队开发工具介绍&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;版本控制：Git、Mercury&lt;/li&gt; &#xA;   &lt;li&gt;缺陷管理：&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt;、&lt;a href=&#34;http://www.redmine.org.cn/&#34;&gt;Redmine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;敏捷闭环工具：&lt;a href=&#34;https://www.zentao.net/&#34;&gt;禅道&lt;/a&gt;、&lt;a href=&#34;https://www.atlassian.com/software/jira/features&#34;&gt;JIRA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;持续集成：&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;、&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis-CI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;请参考&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/91.%E5%9B%A2%E9%98%9F%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.md&#34;&gt;《团队项目开发的问题和解决方案》&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;项目选题和理解业务&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;选题范围设定&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;其他类型：自身行业背景和工作经验、业务容易理解和把控。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;需求理解、模块划分和任务分配&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;需求理解：头脑风暴和竞品分析。&lt;/li&gt; &#xA;   &lt;li&gt;模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。&lt;/li&gt; &#xA;   &lt;li&gt;任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/requirements_by_xmind.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;制定项目进度表（每日更新）&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;模块&lt;/th&gt; &#xA;     &lt;th&gt;功能&lt;/th&gt; &#xA;     &lt;th&gt;人员&lt;/th&gt; &#xA;     &lt;th&gt;状态&lt;/th&gt; &#xA;     &lt;th&gt;完成&lt;/th&gt; &#xA;     &lt;th&gt;工时&lt;/th&gt; &#xA;     &lt;th&gt;计划开始&lt;/th&gt; &#xA;     &lt;th&gt;实际开始&lt;/th&gt; &#xA;     &lt;th&gt;计划结束&lt;/th&gt; &#xA;     &lt;th&gt;实际结束&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;评论&lt;/td&gt; &#xA;     &lt;td&gt;添加评论&lt;/td&gt; &#xA;     &lt;td&gt;王大锤&lt;/td&gt; &#xA;     &lt;td&gt;正在进行&lt;/td&gt; &#xA;     &lt;td&gt;50%&lt;/td&gt; &#xA;     &lt;td&gt;4&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;删除评论&lt;/td&gt; &#xA;     &lt;td&gt;王大锤&lt;/td&gt; &#xA;     &lt;td&gt;等待&lt;/td&gt; &#xA;     &lt;td&gt;0%&lt;/td&gt; &#xA;     &lt;td&gt;2&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;查看评论&lt;/td&gt; &#xA;     &lt;td&gt;白元芳&lt;/td&gt; &#xA;     &lt;td&gt;正在进行&lt;/td&gt; &#xA;     &lt;td&gt;20%&lt;/td&gt; &#xA;     &lt;td&gt;4&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/7&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;需要进行代码审查&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;评论投票&lt;/td&gt; &#xA;     &lt;td&gt;白元芳&lt;/td&gt; &#xA;     &lt;td&gt;等待&lt;/td&gt; &#xA;     &lt;td&gt;0%&lt;/td&gt; &#xA;     &lt;td&gt;4&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/8&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;2018/8/8&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OOAD和数据库设计&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;UML（统一建模语言）的类图&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/uml-class-diagram.png&#34; alt=&#34;uml&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;通过模型创建表（正向工程），例如在Django项目中可以通过下面的命令创建二维表。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;python manage.py makemigrations app&#xA;python manage.py migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用PowerDesigner绘制物理模型图。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/res/power-designer-pdm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;通过数据表创建模型（反向工程），例如在Django项目中可以通过下面的命令生成模型。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;python manage.py inspectdb &amp;gt; app/models.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;第92天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/92.Docker%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3.md&#34;&gt;Docker容器详解&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Docker简介&lt;/li&gt; &#xA; &lt;li&gt;安装Docker&lt;/li&gt; &#xA; &lt;li&gt;使用Docker创建容器（Nginx、MySQL、Redis、Gitlab、Jenkins）&lt;/li&gt; &#xA; &lt;li&gt;构建Docker镜像（Dockerfile的编写和相关指令）&lt;/li&gt; &#xA; &lt;li&gt;容器编排（Docker-compose）&lt;/li&gt; &#xA; &lt;li&gt;集群管理（Kubernetes）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;第93天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/93.MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.md&#34;&gt;MySQL性能优化&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;第94天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/94.%E7%BD%91%E7%BB%9CAPI%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1.md&#34;&gt;网络API接口设计&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;第95天：[使用Django开发商业项目](./Day91-100/95.使用Django开发商业项 目.md)&lt;/h4&gt; &#xA;&lt;h5&gt;项目开发中的公共问题&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;数据库的配置（多数据库、主从复制、数据库路由）&lt;/li&gt; &#xA; &lt;li&gt;缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））&lt;/li&gt; &#xA; &lt;li&gt;日志的配置&lt;/li&gt; &#xA; &lt;li&gt;分析和调试（Django-Debug-ToolBar）&lt;/li&gt; &#xA; &lt;li&gt;好用的Python模块（日期计算、图像处理、数据加密、三方API）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;REST API设计&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;RESTful架构 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2011/09/restful.html&#34;&gt;理解RESTful架构&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&#34;&gt;RESTful API设计指南&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html&#34;&gt;RESTful API最佳实践&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;API接口文档的撰写 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://rap2.taobao.org/&#34;&gt;RAP2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://yapi.demo.qunar.com/&#34;&gt;YAPI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;django-REST-framework&lt;/a&gt;的应用&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;项目中的重点难点剖析&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;使用缓存缓解数据库压力 - Redis&lt;/li&gt; &#xA; &lt;li&gt;使用消息队列做解耦合和削峰 - Celery + RabbitMQ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;第96天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/96.%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%92%8C%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95.md&#34;&gt;软件测试和自动化测试&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;单元测试&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;测试的种类&lt;/li&gt; &#xA; &lt;li&gt;编写单元测试（&lt;code&gt;unittest&lt;/code&gt;、&lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;nose2&lt;/code&gt;、&lt;code&gt;tox&lt;/code&gt;、&lt;code&gt;ddt&lt;/code&gt;、……）&lt;/li&gt; &#xA; &lt;li&gt;测试覆盖率（&lt;code&gt;coverage&lt;/code&gt;）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Django项目部署&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;部署前的准备工作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS / CSRF_COOKIE_SECUR / SESSION_COOKIE_SECURE&lt;/li&gt; &#xA;   &lt;li&gt;日志相关配置&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux常用命令回顾&lt;/li&gt; &#xA; &lt;li&gt;Linux常用服务的安装和配置&lt;/li&gt; &#xA; &lt;li&gt;uWSGI/Gunicorn和Nginx的使用 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Gunicorn和uWSGI的比较 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。&lt;/li&gt; &#xA;     &lt;li&gt;uWSGI支持异构部署。&lt;/li&gt; &#xA;     &lt;li&gt;由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。&lt;/li&gt; &#xA;     &lt;li&gt;在性能上，Gunicorn和uWSGI其实表现相当。&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;使用虚拟化技术（Docker）部署测试环境和生产环境&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;性能测试&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;AB的使用&lt;/li&gt; &#xA; &lt;li&gt;SQLslap的使用&lt;/li&gt; &#xA; &lt;li&gt;sysbench的使用&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;自动化测试&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;使用Shell和Python进行自动化测试&lt;/li&gt; &#xA; &lt;li&gt;使用Selenium实现自动化测试 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Selenium IDE&lt;/li&gt; &#xA;   &lt;li&gt;Selenium WebDriver&lt;/li&gt; &#xA;   &lt;li&gt;Selenium Remote Control&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;测试工具Robot Framework介绍&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;第97天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/97.%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9%E5%89%96%E6%9E%90.md&#34;&gt;电商网站技术要点剖析&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;第98天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/98.%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E5%92%8C%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98.md&#34;&gt;项目部署上线和性能调优&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;MySQL数据库调优&lt;/li&gt; &#xA; &lt;li&gt;Web服务器性能优化 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nginx负载均衡配置&lt;/li&gt; &#xA;   &lt;li&gt;Keepalived实现高可用&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;代码性能调优 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;多线程&lt;/li&gt; &#xA;   &lt;li&gt;异步化&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;静态资源访问优化 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;云存储&lt;/li&gt; &#xA;   &lt;li&gt;CDN&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;第99天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/99.%E9%9D%A2%E8%AF%95%E4%B8%AD%E7%9A%84%E5%85%AC%E5%85%B1%E9%97%AE%E9%A2%98.md&#34;&gt;面试中的公共问题&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;第100天：&lt;a href=&#34;https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/Day91-100/100.Python%E9%9D%A2%E8%AF%95%E9%A2%98%E5%AE%9E%E5%BD%95.md&#34;&gt;Python面试题实录&lt;/a&gt;&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>TencentARC/GFPGAN</title>
    <updated>2022-08-02T01:32:12Z</updated>
    <id>tag:github.com,2022-08-02:/TencentARC/GFPGAN</id>
    <link href="https://github.com/TencentARC/GFPGAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/assets/gfpgan_logo.png&#34; height=&#34;130&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/README_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/b&gt;&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/TencentARC/GFPGAN/total.svg?sanitize=true&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/gfpgan/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/gfpgan&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/TencentARC/GFPGAN&#34; alt=&#34;Open issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/TencentARC/GFPGAN&#34; alt=&#34;Closed issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/.github/workflows/pylint.yml&#34;&gt;&lt;img src=&#34;https://github.com/TencentARC/GFPGAN/actions/workflows/pylint.yml/badge.svg?sanitize=true&#34; alt=&#34;python lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/.github/workflows/publish-pip.yml&#34;&gt;&lt;img src=&#34;https://github.com/TencentARC/GFPGAN/actions/workflows/publish-pip.yml/badge.svg?sanitize=true&#34; alt=&#34;Publish-pip&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1sVsoBd9AjckIXThgtZhGrHRfFI6UUYOo&#34;&gt;Colab Demo&lt;/a&gt; for GFPGAN &lt;a href=&#34;https://colab.research.google.com/drive/1sVsoBd9AjckIXThgtZhGrHRfFI6UUYOo&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;google colab logo&#34;&gt;&lt;/a&gt;; (Another &lt;a href=&#34;https://colab.research.google.com/drive/1Oa1WwKB4M4l1GmR7CtswDVgOCOeSLChA?usp=sharing&#34;&gt;Colab Demo&lt;/a&gt; for the original paper model)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/GFPGAN&#34;&gt;Huggingface&lt;/a&gt; (return only the cropped face)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://replicate.com/xinntao/gfpgan&#34;&gt;Replicate.ai&lt;/a&gt; (may need to sign in, return the whole image)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://app.baseten.co/applications/Q04Lz0d/operator_views/8qZG6Bg&#34;&gt;Baseten.co&lt;/a&gt; (backed by GPU, returns the whole image)&lt;/li&gt; &#xA; &lt;li&gt;We provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which can run without CUDA extensions. So that it can run in &lt;strong&gt;Windows&lt;/strong&gt; or on &lt;strong&gt;CPU mode&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; &lt;strong&gt;Thanks for your interest in our work. You may also want to check our new updates on the &lt;em&gt;tiny models&lt;/em&gt; for &lt;em&gt;anime images and videos&lt;/em&gt; in &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN/raw/master/docs/anime_video_model.md&#34;&gt;Real-ESRGAN&lt;/a&gt;&lt;/strong&gt; &lt;span&gt;😊&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;GFPGAN aims at developing a &lt;strong&gt;Practical Algorithm for Real-world Face Restoration&lt;/strong&gt;.&lt;br&gt; It leverages rich and diverse priors encapsulated in a pretrained face GAN (&lt;em&gt;e.g.&lt;/em&gt;, StyleGAN2) for blind face restoration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❓&lt;/span&gt; Frequently Asked Questions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🚩&lt;/span&gt; &lt;strong&gt;Updates&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt;&lt;span&gt;🔥&lt;/span&gt;&lt;span&gt;✅&lt;/span&gt; Add &lt;strong&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;V1.3 model&lt;/a&gt;&lt;/strong&gt;, which produces &lt;strong&gt;more natural&lt;/strong&gt; restoration results, and better results on &lt;em&gt;very low-quality&lt;/em&gt; / &lt;em&gt;high-quality&lt;/em&gt; inputs. See more in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/#european_castle-model-zoo&#34;&gt;Model zoo&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/Comparisons.md&#34;&gt;Comparisons.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; Integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/GFPGAN&#34;&gt;Gradio Web Demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; Support enhancing non-face regions (background) with &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN&#34;&gt;Real-ESRGAN&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; We provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which does not require CUDA extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; We provide an updated model without colorizing faces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If GFPGAN is helpful in your photos/projects, please help to &lt;span&gt;⭐&lt;/span&gt; this repo or recommend it to your friends. Thanks&lt;span&gt;😊&lt;/span&gt; Other recommended projects:&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN&#34;&gt;Real-ESRGAN&lt;/a&gt;: A practical algorithm for general image restoration&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/BasicSR&#34;&gt;BasicSR&lt;/a&gt;: An open-source image and video restoration toolbox&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/facexlib&#34;&gt;facexlib&lt;/a&gt;: A collection that provides useful face-relation functions&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/HandyView&#34;&gt;HandyView&lt;/a&gt;: A PyQt5-based image viewer that is handy for view and comparison&lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;span&gt;📖&lt;/span&gt; GFP-GAN: Towards Real-World Blind Face Restoration with Generative Facial Prior&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[&lt;a href=&#34;https://arxiv.org/abs/2101.04061&#34;&gt;Paper&lt;/a&gt;]   [&lt;a href=&#34;https://xinntao.github.io/projects/gfpgan&#34;&gt;Project Page&lt;/a&gt;]   [Demo] &lt;br&gt; &lt;a href=&#34;https://xinntao.github.io/&#34;&gt;Xintao Wang&lt;/a&gt;, &lt;a href=&#34;https://yu-li.github.io/&#34;&gt;Yu Li&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?hl=en&amp;amp;user=KjQLROoAAAAJ&#34;&gt;Honglun Zhang&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=4oXBp9UAAAAJ&amp;amp;hl=en&#34;&gt;Ying Shan&lt;/a&gt; &lt;br&gt; Applied Research Center (ARC), Tencent PCG&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://xinntao.github.io/projects/GFPGAN_src/gfpgan_teaser.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔧&lt;/span&gt; Dependencies and Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.7 (Recommend to use &lt;a href=&#34;https://www.anaconda.com/download/#linux&#34;&gt;Anaconda&lt;/a&gt; or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch &amp;gt;= 1.7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Option: NVIDIA GPU + &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;CUDA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Option: Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;We now provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which does not require customized CUDA extensions. &lt;br&gt; If you want to use the original model in our paper, please see &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/PaperModel.md&#34;&gt;PaperModel.md&lt;/a&gt; for installation.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/TencentARC/GFPGAN.git&#xA;cd GFPGAN&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependent packages&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install basicsr - https://github.com/xinntao/BasicSR&#xA;# We use BasicSR for both training and inference&#xA;pip install basicsr&#xA;&#xA;# Install facexlib - https://github.com/xinntao/facexlib&#xA;# We use face detection and face restoration helper in the facexlib package&#xA;pip install facexlib&#xA;&#xA;pip install -r requirements.txt&#xA;python setup.py develop&#xA;&#xA;# If you want to enhance the background (non-face) regions with Real-ESRGAN,&#xA;# you also need to install the realesrgan package&#xA;pip install realesrgan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt; Quick Inference&lt;/h2&gt; &#xA;&lt;p&gt;We take the v1.3 version for an example. More models can be found &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/#european_castle-model-zoo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download pre-trained models: &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;GFPGANv1.3.pth&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth -P experiments/pretrained_models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inference!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python inference_gfpgan.py -i inputs/whole_imgs -o results -v 1.3 -s 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Usage: python inference_gfpgan.py -i inputs/whole_imgs -o results -v 1.3 -s 2 [options]...&#xA;&#xA;  -h                   show this help&#xA;  -i input             Input image or folder. Default: inputs/whole_imgs&#xA;  -o output            Output folder. Default: results&#xA;  -v version           GFPGAN model version. Option: 1 | 1.2 | 1.3. Default: 1.3&#xA;  -s upscale           The final upsampling scale of the image. Default: 2&#xA;  -bg_upsampler        background upsampler. Default: realesrgan&#xA;  -bg_tile             Tile size for background sampler, 0 for no tile during testing. Default: 400&#xA;  -suffix              Suffix of the restored faces&#xA;  -only_center_face    Only restore the center face&#xA;  -aligned             Input are aligned faces&#xA;  -ext                 Image extension. Options: auto | jpg | png, auto means using the same extension as inputs. Default: auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the original model in our paper, please see &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/PaperModel.md&#34;&gt;PaperModel.md&lt;/a&gt; for installation and inference.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🏰&lt;/span&gt; Model Zoo&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;GFPGANv1.3.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Based on V1.2; &lt;strong&gt;more natural&lt;/strong&gt; restoration results; better results on very low-quality / high-quality inputs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.2.0/GFPGANCleanv1-NoCE-C2.pth&#34;&gt;GFPGANCleanv1-NoCE-C2.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No colorization; no CUDA extensions are required. Trained with more data with pre-processing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/GFPGANv1.pth&#34;&gt;GFPGANv1.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The paper model, with colorization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The comparisons are in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/Comparisons.md&#34;&gt;Comparisons.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that V1.3 is not always better than V1.2. You may need to select different models based on your purpose and inputs.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Strengths&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weaknesses&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ natural outputs&lt;br&gt; ✓better results on very low-quality inputs &lt;br&gt; ✓ work on relatively high-quality inputs &lt;br&gt;✓ can have repeated (twice) restorations&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✗ not very sharp &lt;br&gt; ✗ have a slight change on identity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ sharper output &lt;br&gt; ✓ with beauty makeup&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✗ some outputs are unnatural&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can find &lt;strong&gt;more models (such as the discriminators)&lt;/strong&gt; here: [&lt;a href=&#34;https://drive.google.com/drive/folders/17rLiFzcUMoQuhLnptDsKolegHWwJOnHu?usp=sharing&#34;&gt;Google Drive&lt;/a&gt;], OR [&lt;a href=&#34;https://share.weiyun.com/ShYoCCoc&#34;&gt;Tencent Cloud 腾讯微云&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; Training&lt;/h2&gt; &#xA;&lt;p&gt;We provide the training codes for GFPGAN (used in our paper). &lt;br&gt; You could improve it according to your own needs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;More high quality faces can improve the restoration quality.&lt;/li&gt; &#xA; &lt;li&gt;You may need to perform some pre-processing, such as beauty makeup.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Procedures&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;(You can try a simple version ( &lt;code&gt;options/train_gfpgan_v1_simple.yml&lt;/code&gt;) that does not require face component landmarks.)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Dataset preparation: &lt;a href=&#34;https://github.com/NVlabs/ffhq-dataset&#34;&gt;FFHQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download pre-trained models and other data. Put them in the &lt;code&gt;experiments/pretrained_models&lt;/code&gt; folder.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/StyleGAN2_512_Cmul1_FFHQ_B12G4_scratch_800k.pth&#34;&gt;Pre-trained StyleGAN2 model: StyleGAN2_512_Cmul1_FFHQ_B12G4_scratch_800k.pth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/FFHQ_eye_mouth_landmarks_512.pth&#34;&gt;Component locations of FFHQ: FFHQ_eye_mouth_landmarks_512.pth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/arcface_resnet18.pth&#34;&gt;A simple ArcFace model: arcface_resnet18.pth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify the configuration file &lt;code&gt;options/train_gfpgan_v1.yml&lt;/code&gt; accordingly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Training&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;python -m torch.distributed.launch --nproc_per_node=4 --master_port=22021 gfpgan/train.py -opt options/train_gfpgan_v1.yml --launcher pytorch&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License and Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;GFPGAN is released under Apache License Version 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;BibTeX&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@InProceedings{wang2021gfpgan,&#xA;    author = {Xintao Wang and Yu Li and Honglun Zhang and Ying Shan},&#xA;    title = {Towards Real-World Blind Face Restoration with Generative Facial Prior},&#xA;    booktitle={The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;    year = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;📧&lt;/span&gt; Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any question, please email &lt;code&gt;xintao.wang@outlook.com&lt;/code&gt; or &lt;code&gt;xintaowang@tencent.com&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>