<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-25T01:24:53Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ashishps1/awesome-system-design-resources</title>
    <updated>2024-02-25T01:24:53Z</updated>
    <id>tag:github.com,2024-02-25:/ashishps1/awesome-system-design-resources</id>
    <link href="https://github.com/ashishps1/awesome-system-design-resources" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains System Design resources which are useful while preparing for interviews and learning Distributed Systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome System Design Resources&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains resources to learn System Design concepts and prepare for interviews all using free resources.&lt;/p&gt; &#xA;&lt;h2&gt;System Design Fundamentals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.spiceworks.com/tech/cloud/articles/horizontal-vs-vertical-cloud-scaling/&#34;&gt;Horizontal vs Vertical Scaling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/cdn/what-is-a-cdn/&#34;&gt;Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/must-know-computer-science/system-design-caching-acbd1b02ca01&#34;&gt;Caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.com/glossary/distributed-caching/&#34;&gt;Distributed Caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/compare/the-difference-between-throughput-and-latency/&#34;&gt;Latency vs Throughput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bmc.com/blogs/cap-theorem/&#34;&gt;CAP Theorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/what-is/load-balancing/&#34;&gt;Load Balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.com/glossary/acid-transactions/&#34;&gt;ACID Transactions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.integrate.io/blog/the-sql-vs-nosql-difference/&#34;&gt;SQL vs NoSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arpitbhayani.me/blogs/consistent-hashing/&#34;&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.progress.com/tutorials/odbc/using-indexes&#34;&gt;Database Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.imperva.com/learn/application-security/rate-limiting/&#34;&gt;Rate Limiting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/hashmapinc/the-what-why-and-how-of-a-microservices-architecture-4179579423a9&#34;&gt;Microservices Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://newsletter.systemdesign.one/p/netflix-microservices&#34;&gt;Microservices Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://abdulrwahab.medium.com/api-architecture-best-practices-for-designing-rest-apis-bf907025f5f&#34;&gt;API Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/eventual-vs-strong-consistency-in-distributed-databases-282fdad37cf7&#34;&gt;Strong vs Eventual Consistency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://systemdesign.one/consistency-patterns/&#34;&gt;Consistency Patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.techtarget.com/searchapparchitecture/tip/Synchronous-vs-asynchronous-communication-The-differences&#34;&gt;Synchronous vs. asynchronous communications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/compare/the-difference-between-rpc-and-rest/&#34;&gt;REST vs RPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atlan.com/batch-processing-vs-stream-processing/&#34;&gt;Batch Processing vs Stream Processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://martinfowler.com/articles/patterns-of-distributed-systems/heartbeat.html&#34;&gt;HeartBeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/geekculture/design-patterns-for-microservices-circuit-breaker-pattern-276249ffab33&#34;&gt;Circuit Breaker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.dreamfactory.com/what-is-idempotency/&#34;&gt;Idempotency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thenewstack.io/techniques-for-scaling-applications-with-a-database/&#34;&gt;Database Scaling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.com/blog/what-is-data-replication/&#34;&gt;Data Replication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.egnyte.com/guides/governance/data-redundancy&#34;&gt;Data Redundancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/features/database-sharding-explained#&#34;&gt;Database Sharding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cockroachlabs.com/blog/what-is-fault-tolerance/&#34;&gt;Fault Tolerance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://avinetworks.com/glossary/failover/&#34;&gt;Failover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fortinet.com/resources/cyberglossary/proxy-server&#34;&gt;Proxy Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/dns/what-is-dns/&#34;&gt;Domain Name System (DNS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/must-know-computer-science/system-design-message-queues-245612428a22&#34;&gt;Message Queues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pubnub.com/guides/websockets/&#34;&gt;WebSockets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.enjoyalgorithms.com/blog/bloom-filter&#34;&gt;Bloom Filters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sourabhatta1819/consensus-in-distributed-system-ac79f8ba2b8c&#34;&gt;Consensus Algorithms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2023/7/16/gossip-protocol-explained.html&#34;&gt;Gossip Protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/learn/api-gateway/&#34;&gt;API Gateway&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.datadoghq.com/knowledge-center/serverless-architecture/&#34;&gt;Serverless Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/&#34;&gt;Service Discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/learn/what-is-disaster-recovery&#34;&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html&#34;&gt;Distributed Locking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dynatrace.com/news/blog/what-is-distributed-tracing/&#34;&gt;Distributed Tracing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lifewire.com/what-does-checksum-mean-2625825&#34;&gt;Checksum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ashishps1/awesome-system-design-resources/main/interview-template.md&#34;&gt;System Design Interview Template&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;System Design Interview Problems&lt;/h2&gt; &#xA;&lt;h3&gt;Easy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://systemdesign.one/leaderboard-system-design/&#34;&gt;Design Leaderboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fMZMm_0ZhK4&#34;&gt;Design URL Shortener like TinyURL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=josjRSBqEBI&#34;&gt;Design Text Storage Service like Pastebin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8zX0rue2Hic&#34;&gt;Design Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NtMvNh0WFVM&#34;&gt;Design Parking Garage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=D0kDMUgo27c&#34;&gt;Design Vending Machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rnZmdmlR-2M&#34;&gt;Design Distributed Key-Value Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iuqZvajTOyA&#34;&gt;Design Distributed Cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/ace-the-system-design-interview-job-scheduling-system-b25693817950&#34;&gt;Design Distributed Job Scheduler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uj_4vxm9u90&#34;&gt;Design Authentication System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QpLy0_c_RXk&#34;&gt;Design Unified Payments Interface (UPI)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Medium&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VJpfO6KdyWE&#34;&gt;Design Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tndzLznxq40&#34;&gt;Design Tinder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vvhC64hQZMk&#34;&gt;Design WhatsApp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9-hjBGxuiEs&#34;&gt;Design Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wYk0xPP_P_8&#34;&gt;Design Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KYExYE_9nIY&#34;&gt;Design Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=psQzyFfsUGU&#34;&gt;Design Netflix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jPKTo1iGQiE&#34;&gt;Design Youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CeGtqouT8eA&#34;&gt;Design Google Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EpASu_1dUdE&#34;&gt;Design E-commerce Store like Amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_K-eupuDVEc&#34;&gt;Design Spotify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Z-0g_aJL5Fw&#34;&gt;Design TikTok&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=lEL4F_0J3l8&#34;&gt;Design Shopify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YyOXt2MEkv4&#34;&gt;Design Airbnb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=us0qySiUsGU&#34;&gt;Design Autocomplete for Search Engines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mhUQe4BKZXs&#34;&gt;Design Rate Limiter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iJLL-KPqBpM&#34;&gt;Design Distributed Message Queue like Kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qsGcfVGvFSs&#34;&gt;Design Flight Booking System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=07jkn4jUtso&#34;&gt;Design Online Code Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dUMWMZmMsVE&#34;&gt;Design Stock Exchange System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kIcq1_pBQSY&#34;&gt;Design an Analytics Platform (Metrics &amp;amp; Logging)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CUwt9_l0DOg&#34;&gt;Design Notification Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=olfaBgJrUBI&#34;&gt;Design Payment System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=MCKdixWBnco&#34;&gt;Design a Digital Wallet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hard&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://systemdesign.one/slack-architecture/&#34;&gt;Design Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://systemdesign.one/live-comment-system-design/&#34;&gt;Design Live Comments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://systemdesign.one/distributed-counter-system-design/&#34;&gt;Design Distributed Counter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=M4lR_Va97cQ&#34;&gt;Design Location Based Service like Yelp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=umWABit-wbk&#34;&gt;Design Uber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iRhSAR3ldTw&#34;&gt;Design Food Delivery App like Doordash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2auwirNBvGg&#34;&gt;Design Google Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jk3yvVfNvds&#34;&gt;Design Google Maps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=G32ThJakeHk&#34;&gt;Design Zoom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=U0xTu6E2CT8&#34;&gt;Design File Sharing System like Dropbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=lBAwJgoO3Ek&#34;&gt;Design Ticket Booking System like BookMyShow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BKZxZwUgL3Y&#34;&gt;Design Distributed Web Crawler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=q0KGYwNbf-0&#34;&gt;Design Code Deployment System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UmWtcgC96X8&#34;&gt;Design Distributed Cloud Storage like S3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=v7x75aN9liM&#34;&gt;Design Distributed Locking Service&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Must-Read Engineering Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/blog/how-discord-stores-trillions-of-messages&#34;&gt;How Discord stores trillions of messages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://netflixtechblog.com/building-in-video-search-936766f0017c&#34;&gt;Building In-Video Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.canva.dev/blog/engineering/from-zero-to-50-million-uploads-per-day-scaling-media-at-canva/&#34;&gt;How Canva scaled Media uploads from Zero to 50 Million per Day&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/airbnb-engineering/avoiding-double-payments-in-a-distributed-payments-system-2981f6b070bb&#34;&gt;How Airbnb avoids double payments in a Distributed Payments System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/blog/payment-api-design&#34;&gt;Stripe’s payments APIs - The first 10 years&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.engineering/real-time-messaging/&#34;&gt;Real time messaging at Slack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/B08VL1BLHB/&#34;&gt;Designing Data-Intensive Applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/System-Design-Interview-insiders-Second/dp/B08CMF2CQF/&#34;&gt;System Design Interview – An insider&#39;s guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube Channels&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@TechDummiesNarendraL&#34;&gt;Tech Dummies Narendra L&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@gkcs&#34;&gt;Gaurav Sen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@codeKarle&#34;&gt;codeKarle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@ByteByteGo&#34;&gt;ByteByteGo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@SystemDesignInterview&#34;&gt;System Design Interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@SuccessinTech/videos&#34;&gt;Success in Tech&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vvbbnn00/WARP-Clash-API</title>
    <updated>2024-02-25T01:24:53Z</updated>
    <id>tag:github.com,2024-02-25:/vvbbnn00/WARP-Clash-API</id>
    <link href="https://github.com/vvbbnn00/WARP-Clash-API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;该项目可以让你通过订阅的方式使用Cloudflare WARP+，自动获取流量。This project enables you to use Cloudflare WARP+ through subscription, automatically acquiring traffic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WARP Clash API&lt;/h1&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;本项目是完全非商业项目，仅供学习交流使用，请勿用于非法用途，否则后果自负。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🤔 这是什么？&lt;/h2&gt; &#xA;&lt;p&gt;该项目可以让你通过订阅的方式使用&lt;code&gt;WARP+&lt;/code&gt;，支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端。项目内置了刷取&lt;code&gt;WARP+&lt;/code&gt; 流量的功能，可以让你的&lt;code&gt;WARP+&lt;/code&gt;流量不再受限制（每&lt;code&gt;18&lt;/code&gt;秒可获得&lt;code&gt;1GB&lt;/code&gt;流量），同时，配备了&lt;code&gt;IP&lt;/code&gt;选优功能。支持&lt;code&gt;Docker compose&lt;/code&gt; 一键部署，无需额外操作，即可享受你自己的&lt;code&gt;WARP+&lt;/code&gt;私有高速节点！&lt;/p&gt; &#xA;&lt;h2&gt;💡 特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Surge&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端&lt;/li&gt; &#xA; &lt;li&gt;🔑 支持设置您自己的&lt;code&gt;LicenseKey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;IP&lt;/code&gt;选优&lt;/li&gt; &#xA; &lt;li&gt;🐋 支持&lt;code&gt;Docker compose&lt;/code&gt;一键部署&lt;/li&gt; &#xA; &lt;li&gt;📕 全自动刷取&lt;code&gt;WARP+&lt;/code&gt;流量，请求经过代理，防封&lt;code&gt;IP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;❓ 每次更新订阅随机节点，让你体验抽卡的乐趣&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;1. 安装&lt;code&gt;Docker&lt;/code&gt;和&lt;code&gt;Docker compose&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 下载项目&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/vvbbnn00/WARP-Clash-API.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. [可选] 配置&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;若您需要在公网上部署该项目，建议您配置&lt;code&gt;SECRET_KEY&lt;/code&gt;与&lt;code&gt;PUBLIC_URL&lt;/code&gt;。在项目目录下创建&lt;code&gt;.env.local&lt;/code&gt;文件，写入如下内容：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SECRET_KEY=your_secret_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;关于环境变量的更多信息，请参考&lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/#-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;环境变量&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;4. 编译并运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. 获取订阅链接&lt;/h3&gt; &#xA;&lt;p&gt;访问&lt;code&gt;http://你的IP:21001&lt;/code&gt;，输入&lt;code&gt;SECRET_KEY&lt;/code&gt;（若没有配置，则可以留空），即可获取订阅链接。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🎉 大功告成&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌏 手动IP选优&lt;/h2&gt; &#xA;&lt;p&gt;项目本身包含了一个选优过的&lt;code&gt;IP&lt;/code&gt;列表，但是由于&lt;code&gt;WARP&lt;/code&gt;的&lt;code&gt;IP&lt;/code&gt;是动态的，所以可能会出现&lt;code&gt;IP&lt;/code&gt;不可用的情况。若您需要手动选优，可以遵循以下步骤：&lt;/p&gt; &#xA;&lt;p&gt;若您通过&lt;code&gt;docker-compose&lt;/code&gt;部署，可以在项目目录下通过以下命令手动执行&lt;code&gt;IP&lt;/code&gt;选优：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose exec warp-clash python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;否则，可以在项目目录下执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 环境变量&lt;/h2&gt; &#xA;&lt;p&gt;没错，您可以通过环境变量来配置该项目，在配置时，只需新建一个&lt;code&gt;.env.local&lt;/code&gt;文件，写入您需要的环境变量即可。&lt;/p&gt; &#xA;&lt;p&gt;以下是可用的环境变量：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;变量名&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DELAY_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;500&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;延迟阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DO_GET_WARP_DATA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;True&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否刷取&lt;code&gt;WARP+&lt;/code&gt;流量，若不需要刷取流量，则设置为&lt;code&gt;False&lt;/code&gt;即可&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOSS_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;丢包率阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROXY_POOL_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://getproxy.bzpl.tech/get/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP代理池地址，用于刷取&lt;code&gt;WARP+&lt;/code&gt;流量，您可以自行搭建，参照&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUBLIC_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;无&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;部署在公网上时，填写公网&lt;code&gt;IP&lt;/code&gt;或域名，用于生成订阅链接，比如 &lt;code&gt;https://subs.zeabur.app&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RANDOM_COUNT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;每次更新订阅随机节点的数量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REOPTIMIZE_INTERVAL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;重新选优的时间间隔，单位为秒，若小于等于0，则不会重新选优，否则每隔该时间间隔会重新选优一次，不建议间隔设置过短。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REQUEST_RATE_LIMIT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;限制X秒一次请求，该功能不太稳定，建议不要开启&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SECRET_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;无&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用于保护订阅链接，若不配置，则不需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;即可获取订阅链接&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHARE_SUBSCRIPTION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;若您的站点想要向社区分享订阅，但不想让自己的账户信息被公开或修改，可以设置为&lt;code&gt;True&lt;/code&gt;，此时，访问订阅链接时，不需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;即可获取，而对于其他的操作，仍然需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🧰 进阶操作&lt;/h2&gt; &#xA;&lt;h3&gt;重置账户的&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;项目支持您通过请求以下接口来重置&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://host:port/api/account/reset_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重置过后，需要重新获取订阅内容，否则可能无法使用。&lt;/p&gt; &#xA;&lt;h3&gt;设置自己的&lt;code&gt;LicenseKey&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;若您已经拥有了&lt;code&gt;WARP+&lt;/code&gt;的&lt;code&gt;LicenseKey&lt;/code&gt;，可以通过以下接口来设置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://host:port/api/account/update_license -H &#34;Content-Type: application/json&#34; -d &#34;{\&#34;license_key\&#34;: \&#34;your_license_key\&#34;}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请注意，当您设置了&lt;code&gt;LicenseKey&lt;/code&gt;后，其&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;将会被重置，需要重新获取订阅内容。&lt;/p&gt; &#xA;&lt;h2&gt;🗂️ 引用项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目的开发参照了以下项目，感谢这些开源项目的作者：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/Misaka-blog/warp-script&#34;&gt;warp-script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replit.com/@aliilapro/warp&#34;&gt;warp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ViRb3/wgcf&#34;&gt;wgcf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.maxmind.com/geoip/geolite2-free-geolocation-data&#34;&gt;geolite2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👥 社区部署的实例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tofree.zeabur.app&#34;&gt;https://tofree.zeabur.app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;一个免费的 WARP Clash API 实例，由社区部署。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/gemma.cpp</title>
    <updated>2024-02-25T01:24:53Z</updated>
    <id>tag:github.com,2024-02-25:/google/gemma.cpp</id>
    <link href="https://github.com/google/gemma.cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;lightweight, standalone C++ inference engine for Google&#39;s Gemma models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gemma.cpp&lt;/h1&gt; &#xA;&lt;p&gt;gemma.cpp is a lightweight, standalone C++ inference engine for the Gemma foundation models from Google.&lt;/p&gt; &#xA;&lt;p&gt;For additional information about Gemma, see &lt;a href=&#34;https://ai.google.dev/gemma&#34;&gt;ai.google.dev/gemma&lt;/a&gt;. Model weights, including gemma.cpp specific artifacts, are &lt;a href=&#34;https://www.kaggle.com/models/google/gemma&#34;&gt;available on kaggle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who is this project for?&lt;/h2&gt; &#xA;&lt;p&gt;Modern LLM inference engines are sophisticated systems, often with bespoke capabilities extending beyond traditional neural network runtimes. With this comes opportunities for research and innovation through co-design of high level algorithms and low-level computation. However, there is a gap between deployment-oriented C++ inference runtimes, which are not designed for experimentation, and Python-centric ML research frameworks, which abstract away low-level computation through compilation.&lt;/p&gt; &#xA;&lt;p&gt;gemma.cpp provides a minimalist implementation of Gemma 2B and 7B models, focusing on simplicity and directness rather than full generality. This is inspired by vertically-integrated model implementations such as &lt;a href=&#34;https://github.com/ggerganov/ggml&#34;&gt;ggml&lt;/a&gt;, &lt;a href=&#34;https://github.com/karpathy/llama2.c&#34;&gt;llama.c&lt;/a&gt;, and &lt;a href=&#34;https://github.com/srush/llama2.rs&#34;&gt;llama.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;gemma.cpp targets experimentation and research use cases. It is intended to be straightforward to embed in other projects with minimal dependencies and also easily modifiable with a small ~2K LoC core implementation (along with ~4K LoC of supporting utilities). We use the &lt;a href=&#34;https://github.com/google/highway&#34;&gt;Google Highway&lt;/a&gt; Library to take advantage of portable SIMD for CPU inference.&lt;/p&gt; &#xA;&lt;p&gt;For production-oriented edge deployments we recommend standard deployment pathways using Python frameworks like JAX, Keras, PyTorch, and Transformers (&lt;a href=&#34;https://www.kaggle.com/models/google/gemma&#34;&gt;all model variations here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Community contributions large and small are welcome. This project follows &lt;a href=&#34;https://opensource.google.com/conduct/&#34;&gt;Google&#39;s Open Source Community Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Active development is currently done on the &lt;code&gt;dev&lt;/code&gt; branch. Please open pull requests targeting &lt;code&gt;dev&lt;/code&gt; branch instead of &lt;code&gt;main&lt;/code&gt;, which is intended to be more stable.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;System requirements&lt;/h3&gt; &#xA;&lt;p&gt;Before starting, you should have installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/get_started.html&#34;&gt;Clang C++ compiler&lt;/a&gt;, supporting at least C++17.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tar&lt;/code&gt; for extracting archives from Kaggle.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: Obtain model weights and tokenizer from Kaggle&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://www.kaggle.com/models/google/gemma&#34;&gt;the Gemma model page on Kaggle&lt;/a&gt; and select &lt;code&gt;Model Variations |&amp;gt; Gemma C++&lt;/code&gt;. On this tab, the &lt;code&gt;Variation&lt;/code&gt; dropdown includes the options below. Note bfloat16 weights are higher fidelity, while 8-bit switched floating point weights enable faster inference. In general, we recommend starting with the &lt;code&gt;-sfp&lt;/code&gt; checkpoints.&lt;/p&gt; &#xA;&lt;p&gt;2B instruction-tuned (&lt;code&gt;it&lt;/code&gt;) and pre-trained (&lt;code&gt;pt&lt;/code&gt;) models:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-it&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 billion parameter instruction-tuned model, bfloat16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-it-sfp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 billion parameter instruction-tuned model, 8-bit switched floating point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-pt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 billion parameter pre-trained model, bfloat16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-pt-sfp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 billion parameter pre-trained model, 8-bit switched floating point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;7B instruction-tuned (&lt;code&gt;it&lt;/code&gt;) and pre-trained (&lt;code&gt;pt&lt;/code&gt;) models:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;7b-it&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7 billion parameter instruction-tuned model, bfloat16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;7b-it-sfp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7 billion parameter instruction-tuned model, 8-bit switched floating point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;7b-pt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7 billion parameter pre-trained model, bfloat16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;7b-pt-sfp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7 billion parameter pre-trained model, 8-bit switched floating point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;Important&lt;/strong&gt;: We strongly recommend starting off with the &lt;code&gt;2b-it-sfp&lt;/code&gt; model to get up and running.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 2: Extract Files&lt;/h3&gt; &#xA;&lt;p&gt;After filling out the consent form, the download should proceed to retrieve a tar archive file &lt;code&gt;archive.tar.gz&lt;/code&gt;. Extract files from &lt;code&gt;archive.tar.gz&lt;/code&gt; (this can take a few minutes):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -xf archive.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should produce a file containing model weights such as &lt;code&gt;2b-it-sfp.sbs&lt;/code&gt; and a tokenizer file (&lt;code&gt;tokenizer.spm&lt;/code&gt;). You may want to move these files to a convenient directory location (e.g. the &lt;code&gt;build/&lt;/code&gt; directory in this repo).&lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Build&lt;/h3&gt; &#xA;&lt;p&gt;The build system uses &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;. To build the gemma inference runtime, create a build directory and generate the build files using &lt;code&gt;cmake&lt;/code&gt; from the top-level project directory. For the 8-bit switched floating point weights (sfp), run cmake with no options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt; if you downloaded bfloat16 weights (any model &lt;em&gt;without&lt;/em&gt; &lt;code&gt;-sfp&lt;/code&gt; in the name), instead of running cmake with no options as above, run cmake with WEIGHT_TYPE set to &lt;a href=&#34;https://github.com/google/highway&#34;&gt;highway&#39;s&lt;/a&gt; &lt;code&gt;hwy::bfloat16_t&lt;/code&gt; type (this will be simplified in the future, we recommend using &lt;code&gt;-sfp&lt;/code&gt; weights instead of bfloat16 for faster inference):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build -DWEIGHT_TYPE=hwy::bfloat16_t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running whichever of the above &lt;code&gt;cmake&lt;/code&gt; invocations that is appropriate for your weights, you can enter the &lt;code&gt;build/&lt;/code&gt; directory and run &lt;code&gt;make&lt;/code&gt; to build the &lt;code&gt;./gemma&lt;/code&gt; executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd build&#xA;make -j [number of parallel threads to use] gemma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;[number of parallel threads to use]&lt;/code&gt; with a number - the number of cores available on your system is a reasonable heuristic.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;make -j4 gemma&lt;/code&gt; will build using 4 threads. If this is successful, you should now have a &lt;code&gt;gemma&lt;/code&gt; executable in the &lt;code&gt;build/&lt;/code&gt; directory. If the &lt;code&gt;nproc&lt;/code&gt; command is available, you can use &lt;code&gt;make -j$(nproc) gemma&lt;/code&gt; as a reasonable default for the number of threads.&lt;/p&gt; &#xA;&lt;p&gt;If you aren&#39;t sure of the right value for the &lt;code&gt;-j&lt;/code&gt; flag, you can simply run &lt;code&gt;make gemma&lt;/code&gt; instead and it should still build the &lt;code&gt;./gemma&lt;/code&gt; executable.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] On Windows Subsystem for Linux (WSL) users should set the number of parallel threads to 1. Using a larger number may result in errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 4: Run&lt;/h3&gt; &#xA;&lt;p&gt;You can now run &lt;code&gt;gemma&lt;/code&gt; from inside the &lt;code&gt;build/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gemma&lt;/code&gt; has the following required arguments:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--model&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The model type.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-it&lt;/code&gt;, &lt;code&gt;2b-pt&lt;/code&gt;, &lt;code&gt;7b-it&lt;/code&gt;, &lt;code&gt;7b-pt&lt;/code&gt;, ... (see above)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--compressed_weights&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The compressed weights file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2b-it-sfp.sbs&lt;/code&gt;, ... (see above)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--tokenizer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The tokenizer file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tokenizer.spm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;gemma&lt;/code&gt; is invoked as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gemma \&#xA;--tokenizer [tokenizer file] \&#xA;--compressed_weights [compressed weights file] \&#xA;--model [2b-it or 2b-pt or 7b-it or 7b-pt or ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example invocation for the following configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compressed weights file &lt;code&gt;2b-it-sfp.sbs&lt;/code&gt; (2B instruction-tuned model, 8-bit switched floating point).&lt;/li&gt; &#xA; &lt;li&gt;Tokenizer file &lt;code&gt;tokenizer.spm&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gemma \&#xA;--tokenizer tokenizer.spm \&#xA;--compressed_weights 2b-it-sfp.sbs \&#xA;--model 2b-it&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting and FAQs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running &lt;code&gt;./gemma&lt;/code&gt; fails with &#34;Failed to read cache gating_ein_0 (error 294) ...&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The most common problem is that &lt;code&gt;cmake&lt;/code&gt; was built with the wrong weight type and &lt;code&gt;gemma&lt;/code&gt; is attempting to load &lt;code&gt;bfloat16&lt;/code&gt; weights (&lt;code&gt;2b-it&lt;/code&gt;, &lt;code&gt;2b-pt&lt;/code&gt;, &lt;code&gt;7b-it&lt;/code&gt;, &lt;code&gt;7b-pt&lt;/code&gt;) using the default switched floating point (sfp) or vice versa. Revisit step #3 and check that the &lt;code&gt;cmake&lt;/code&gt; command used to build &lt;code&gt;gemma&lt;/code&gt; was correct for the weights that you downloaded.&lt;/p&gt; &#xA;&lt;p&gt;In the future we will handle model format handling from compile time to runtime to simplify this.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Problems building in Windows / Visual Studio&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently if you&#39;re using Windows, we recommend building in WSL (Windows Subsystem for Linux). We are exploring options to enable other build configurations, see issues for active discussion.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Model does not respond to instructions and produces strange output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A common issue is that you are using a pre-trained model, which is not instruction-tuned and thus does not respond to instructions. Make sure you are using an instruction-tuned model (&lt;code&gt;2b-it-sfp&lt;/code&gt;, &lt;code&gt;2b-it&lt;/code&gt;, &lt;code&gt;7b-it-sfp&lt;/code&gt;, &lt;code&gt;7b-it&lt;/code&gt;) and not a pre-trained model (any model with a &lt;code&gt;-pt&lt;/code&gt; suffix).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do I convert my fine-tune to a &lt;code&gt;.sbs&lt;/code&gt; compressed model file?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re working on a python script to convert a standard model format to &lt;code&gt;.sbs&lt;/code&gt;, and hope have it available in the next week or so. Follow &lt;a href=&#34;https://github.com/google/gemma.cpp/issues/11&#34;&gt;this issue&lt;/a&gt; for updates.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gemma&lt;/code&gt; has different usage modes, controlled by the verbosity flag.&lt;/p&gt; &#xA;&lt;p&gt;All usage modes are currently interactive, triggering text generation upon newline input.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Verbosity&lt;/th&gt; &#xA;   &lt;th&gt;Usage mode&lt;/th&gt; &#xA;   &lt;th&gt;Details&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--verbosity 0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Minimal&lt;/td&gt; &#xA;   &lt;td&gt;Only prints generation output. Suitable as a CLI tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--verbosity 1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Default&lt;/td&gt; &#xA;   &lt;td&gt;Standard user-facing terminal UI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--verbosity 2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Detailed&lt;/td&gt; &#xA;   &lt;td&gt;Shows additional developer and debug info.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Interactive Terminal App&lt;/h3&gt; &#xA;&lt;p&gt;By default, verbosity is set to 1, bringing up a terminal-based interactive interface when &lt;code&gt;gemma&lt;/code&gt; is invoked:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./gemma [...]&#xA;  __ _  ___ _ __ ___  _ __ ___   __ _   ___ _ __  _ __&#xA; / _` |/ _ \ &#39;_ ` _ \| &#39;_ ` _ \ / _` | / __| &#39;_ \| &#39;_ \&#xA;| (_| |  __/ | | | | | | | | | | (_| || (__| |_) | |_) |&#xA; \__, |\___|_| |_| |_|_| |_| |_|\__,_(_)___| .__/| .__/&#xA;  __/ |                                    | |   | |&#xA; |___/                                     |_|   |_|&#xA;&#xA;tokenizer                     : tokenizer.spm&#xA;compressed_weights            : 2b-it-sfp.sbs&#xA;model                         : 2b-it&#xA;weights                       : [no path specified]&#xA;max_tokens                    : 3072&#xA;max_generated_tokens          : 2048&#xA;&#xA;*Usage*&#xA;  Enter an instruction and press enter (%Q quits).&#xA;&#xA;*Examples*&#xA;  - Write an email to grandma thanking her for the cookies.&#xA;  - What are some historical attractions to visit around Massachusetts?&#xA;  - Compute the nth fibonacci number in javascript.&#xA;  - Write a standup comedy bit about WebGPU programming.&#xA;&#xA;&amp;gt; What are some outdoorsy places to visit around Boston?&#xA;&#xA;[ Reading prompt ] .....................&#xA;&#xA;&#xA;**Boston Harbor and Islands:**&#xA;&#xA;* **Boston Harbor Islands National and State Park:** Explore pristine beaches, wildlife, and maritime history.&#xA;* **Charles River Esplanade:** Enjoy scenic views of the harbor and city skyline.&#xA;* **Boston Harbor Cruise Company:** Take a relaxing harbor cruise and admire the city from a different perspective.&#xA;* **Seaport Village:** Visit a charming waterfront area with shops, restaurants, and a seaport museum.&#xA;&#xA;**Forest and Nature:**&#xA;&#xA;* **Forest Park:** Hike through a scenic forest with diverse wildlife.&#xA;* **Quabbin Reservoir:** Enjoy boating, fishing, and hiking in a scenic setting.&#xA;* **Mount Forest:** Explore a mountain with breathtaking views of the city and surrounding landscape.&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage as a Command Line Tool&lt;/h3&gt; &#xA;&lt;p&gt;For using the &lt;code&gt;gemma&lt;/code&gt; executable as a command line tool, it may be useful to create an alias for gemma.cpp with arguments fully specified:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias gemma2b=&#34;~/gemma.cpp/build/gemma -- --tokenizer ~/gemma.cpp/build/tokenizer.spm --compressed_weights ~/gemma.cpp/build/2b-it-sfp.sbs --model 2b-it --verbosity 0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace the above paths with your own paths to the model and tokenizer paths from the download.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of prompting &lt;code&gt;gemma&lt;/code&gt; with a truncated input file (using a &lt;code&gt;gemma2b&lt;/code&gt; alias like defined above):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cat configs.h | tail -35 | tr &#39;\n&#39; &#39; &#39; | xargs -0 echo &#34;What does this C++ code do: &#34; | gemma2b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] CLI usage of gemma.cpp is experimental and should take context length limitations into account.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The output of the above command should look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat configs.h | tail -35 | tr &#39;\n&#39; &#39; &#39; | xargs -0 echo &#34;What does this C++ code do: &#34; | gemma2b&#xA;[ Reading prompt ] ......................................................................................................................................................................................................................................................................................................................................................................................................................................................................................&#xA;The code defines two C++ structs, `ConfigGemma7B` and `ConfigGemma2B`, which are used for configuring a deep learning model.&#xA;&#xA;**ConfigGemma7B**:&#xA;&#xA;* `kSeqLen`: Stores the length of the sequence to be processed. It&#39;s set to 7168.&#xA;* `kVocabSize`: Stores the size of the vocabulary, which is 256128.&#xA;* `kLayers`: Number of layers in the deep learning model. It&#39;s set to 28.&#xA;* `kModelDim`: Dimension of the model&#39;s internal representation. It&#39;s set to 3072.&#xA;* `kFFHiddenDim`: Dimension of the feedforward and recurrent layers&#39; hidden representations. It&#39;s set to 16 * 3072 / 2.&#xA;&#xA;**ConfigGemma2B**:&#xA;&#xA;* `kSeqLen`: Stores the length of the sequence to be processed. It&#39;s also set to 7168.&#xA;* `kVocabSize`: Size of the vocabulary, which is 256128.&#xA;* `kLayers`: Number of layers in the deep learning model. It&#39;s set to 18.&#xA;* `kModelDim`: Dimension of the model&#39;s internal representation. It&#39;s set to 2048.&#xA;* `kFFHiddenDim`: Dimension of the feedforward and recurrent layers&#39; hidden representations. It&#39;s set to 16 * 2048 / 2.&#xA;&#xA;These structs are used to configure a deep learning model with specific parameters for either Gemma7B or Gemma2B architecture.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Incorporating gemma.cpp as a Library in your Project&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to incorporate gemma.cpp in your own project is to pull in gemma.cpp and dependencies using &lt;code&gt;FetchContent&lt;/code&gt;. You can add the following to your CMakeLists.txt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;include(FetchContent)&#xA;&#xA;FetchContent_Declare(sentencepiece GIT_REPOSITORY https://github.com/google/sentencepiece GIT_TAG 53de76561cfc149d3c01037f0595669ad32a5e7c)&#xA;FetchContent_MakeAvailable(sentencepiece)&#xA;&#xA;FetchContent_Declare(gemma GIT_REPOSITORY https://github.com/google/gemma.cpp GIT_TAG origin/main)&#xA;FetchContent_MakeAvailable(gemma)&#xA;&#xA;FetchContent_Declare(highway GIT_REPOSITORY https://github.com/google/highway.git GIT_TAG da250571a45826b21eebbddc1e50d0c1137dee5f)&#xA;FetchContent_MakeAvailable(highway)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note for the gemma.cpp &lt;code&gt;GIT_TAG&lt;/code&gt;, you may replace &lt;code&gt;origin/main&lt;/code&gt; for a specific commit hash if you would like to pin the library version.&lt;/p&gt; &#xA;&lt;p&gt;After your executable is defined (substitute your executable name for &lt;code&gt;[Executable Name]&lt;/code&gt; below):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;target_link_libraries([Executable Name] libgemma hwy hwy_contrib sentencepiece)&#xA;FetchContent_GetProperties(gemma)&#xA;FetchContent_GetProperties(sentencepiece)&#xA;target_include_directories([Executable Name] PRIVATE ${gemma_SOURCE_DIR})&#xA;target_include_directories([Executable Name] PRIVATE ${sentencepiece_SOURCE_DIR})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building gemma.cpp as a Library&lt;/h3&gt; &#xA;&lt;p&gt;gemma.cpp can also be used as a library dependency in your own project. The shared library artifact can be built by modifying the make invocation to build the &lt;code&gt;libgemma&lt;/code&gt; target instead of &lt;code&gt;gemma&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you are using gemma.cpp in your own project with the &lt;code&gt;FetchContent&lt;/code&gt; steps in the previous section, building the library is done automatically by &lt;code&gt;cmake&lt;/code&gt; and this section can be skipped.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First, run &lt;code&gt;cmake&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;make&lt;/code&gt; with the &lt;code&gt;libgemma&lt;/code&gt; target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd build&#xA;make -j [number of parallel threads to use] libgemma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this is successful, you should now have a &lt;code&gt;libgemma&lt;/code&gt; library file in the &lt;code&gt;build/&lt;/code&gt; directory. On Unix platforms, the filename is &lt;code&gt;libgemma.a&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements and Contacts&lt;/h2&gt; &#xA;&lt;p&gt;gemma.cpp was started in fall 2023 by &lt;a href=&#34;mailto:austinvhuang@google.com&#34;&gt;Austin Huang&lt;/a&gt; and &lt;a href=&#34;mailto:janwas@google.com&#34;&gt;Jan Wassenberg&lt;/a&gt;, and subsequently released February 2024 thanks to contributions from Phil Culliton, Paul Chang, and Dan Zheng.&lt;/p&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>