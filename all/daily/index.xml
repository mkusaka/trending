<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:29:16Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Koenkk/zigbee2mqtt</title>
    <updated>2024-07-01T01:29:16Z</updated>
    <id>tag:github.com,2024-07-01:/Koenkk/zigbee2mqtt</id>
    <link href="https://github.com/Koenkk/zigbee2mqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zigbee üêù to MQTT bridge üåâ, get rid of your proprietary Zigbee bridges üî®&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/koenkk/zigbee2mqtt&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/logo.png&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div style=&#34;display: flex;&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/actions?query=workflow%3ACI&#34;&gt; &lt;img src=&#34;https://github.com/koenkk/zigbee2mqtt/workflows/CI/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/koenkk/zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/koenkk/zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.paypal.me/koenkk&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/donate-PayPal-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/dadfWYE&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/556563650429583360.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;http://zigbee2mqtt.discourse.group/&#34;&gt; &lt;img src=&#34;https://img.shields.io/discourse/https/zigbee2mqtt.discourse.group/status.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Coverage-100%25-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.codacy.com/manual/Koenkk/zigbee2mqtt?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Koenkk/zigbee2mqtt&amp;amp;utm_campaign=Badge_Grade&#34;&gt; &lt;img src=&#34;https://api.codacy.com/project/badge/Grade/24f1e0fe39f04daa810e8a1416693d3f&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.npmjs.com/package/zigbee2mqtt&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/zigbee2mqtt&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h1&gt;Zigbee2MQTT üåâ üêù&lt;/h1&gt; &#xA; &lt;p&gt; Allows you to use your Zigbee devices &lt;b&gt;without&lt;/b&gt; the vendor&#39;s bridge or gateway. &lt;/p&gt; &#xA; &lt;p&gt; It bridges events and allows you to control your Zigbee devices via MQTT. In this way you can integrate your Zigbee devices with whatever smart home infrastructure you are using. &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/guide/getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.zigbee2mqtt.io/&#34;&gt;documentation&lt;/a&gt; provides you all the information needed to get up and running! Make sure you don&#39;t skip sections if this is your first visit, as there might be important details in there for you.&lt;/p&gt; &#xA;&lt;p&gt;If you aren&#39;t familiar with &lt;strong&gt;Zigbee&lt;/strong&gt; terminology make sure you &lt;a href=&#34;https://www.zigbee2mqtt.io/advanced/zigbee/01_zigbee_network.html&#34;&gt;read this&lt;/a&gt; to help you out.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/guide/usage/integrations.html&#34;&gt;Integrations&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Zigbee2MQTT integrates well with (almost) every home automation solution because it uses MQTT. However the following integrations are worth mentioning:&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://user-images.githubusercontent.com/7738048/40914297-49e6e560-6800-11e8-8904-36cce896e5a8.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home Assistant&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.home-assistant.io/installation/&#34;&gt;Home Assistant OS&lt;/a&gt;: Using &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&#34;&gt;the official addon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Other installation: using instructions &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/usage/integrations/home_assistant.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://etc.athom.com/logo/white/256.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://homey.app/&#34;&gt;Homey&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in the &lt;a href=&#34;https://homey.app/nl-nl/app/com.gruijter.zigbee2mqtt/&#34;&gt;Homey App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation and support in the &lt;a href=&#34;https://community.homey.app/t/83214&#34;&gt;Homey Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://user-images.githubusercontent.com/2734836/47615848-b8dd8700-dabd-11e8-9d77-175002dd8987.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.domoticz.com/&#34;&gt;Domoticz&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in Domoticz (&lt;a href=&#34;https://www.domoticz.com/wiki/Zigbee2MQTT&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/gladys-assistant-logo.jpg&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://gladysassistant.com/&#34;&gt;Gladys Assistant&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented natively in Gladys Assistant (&lt;a href=&#34;https://gladysassistant.com/docs/integrations/zigbee2mqtt/&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://forum.iobroker.net/assets/uploads/system/site-logo.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.iobroker.net/&#34;&gt;IoBroker&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in IoBroker (&lt;a href=&#34;https://github.com/o0shojo0o/ioBroker.zigbee2mqtt&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Internal Architecture&lt;/h3&gt; &#xA;&lt;p&gt;Zigbee2MQTT is made up of three modules, each developed in its own Github project. Starting from the hardware (adapter) and moving up; &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman&#34;&gt;zigbee-herdsman&lt;/a&gt; connects to your Zigbee adapter and makes an API available to the higher levels of the stack. For e.g. Texas Instruments hardware, zigbee-herdsman uses the &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman/raw/master/docs/Z-Stack%20Monitor%20and%20Test%20API.pdf&#34;&gt;TI zStack monitoring and test API&lt;/a&gt; to communicate with the adapter. Zigbee-herdsman handles the core Zigbee communication. The module &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman-converters&#34;&gt;zigbee-herdsman-converters&lt;/a&gt; handles the mapping from individual device models to the Zigbee clusters they support. &lt;a href=&#34;https://github.com/Koenkk/zigbee-herdsman/raw/master/docs/07-5123-08-Zigbee-Cluster-Library.pdf&#34;&gt;Zigbee clusters&lt;/a&gt; are the layers of the Zigbee protocol on top of the base protocol that define things like how lights, sensors and switches talk to each other over the Zigbee network. Finally, the Zigbee2MQTT module drives zigbee-herdsman and maps the zigbee messages to MQTT messages. Zigbee2MQTT also keeps track of the state of the system. It uses a &lt;code&gt;database.db&lt;/code&gt; file to store this state; a text file with a JSON database of connected devices and their capabilities. Zigbee2MQTT provides a &lt;a href=&#34;https://github.com/nurikk/zigbee2mqtt-frontend&#34;&gt;web-based interface&lt;/a&gt; that allows monitoring and configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Developing&lt;/h3&gt; &#xA;&lt;p&gt;Zigbee2MQTT uses TypeScript (partially for now). Therefore after making changes to files in the &lt;code&gt;lib/&lt;/code&gt; directory you need to recompile Zigbee2MQTT. This can be done by executing &lt;code&gt;npm run build&lt;/code&gt;. For faster development instead of running &lt;code&gt;npm run build&lt;/code&gt; you can run &lt;code&gt;npm run build-watch&lt;/code&gt; in another terminal session, this will recompile as you change files.&lt;/p&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices&#34;&gt;Supported devices&lt;/a&gt; to check whether your device is supported. There is quite an extensive list, including devices from vendors like &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=Xiaomi&#34;&gt;Xiaomi&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=IKEA&#34;&gt;Ikea&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=Philips&#34;&gt;Philips&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=OSRAM&#34;&gt;OSRAM&lt;/a&gt; and more.&lt;/p&gt; &#xA;&lt;p&gt;If it&#39;s not listed in &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices&#34;&gt;Supported devices&lt;/a&gt;, support can be added (fairly) easily, see &lt;a href=&#34;https://www.zigbee2mqtt.io/advanced/support-new-devices/01_support_new_devices.html&#34;&gt;How to support new devices&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support &amp;amp; help&lt;/h2&gt; &#xA;&lt;p&gt;If you need assistance you can check &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/issues&#34;&gt;opened issues&lt;/a&gt;. Feel free to help with Pull Requests when you were able to fix things or add new devices or just share the love on social media.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruffle-rs/ruffle</title>
    <updated>2024-07-01T01:29:16Z</updated>
    <id>tag:github.com,2024-07-01:/ruffle-rs/ruffle</id>
    <link href="https://github.com/ruffle-rs/ruffle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flash Player emulator written in Rust&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://ruffle.rs&#34;&gt;&lt;img alt=&#34;Ruffle&#34; src=&#34;https://ruffle.rs/logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/actions&#34;&gt;&lt;img alt=&#34;Rust Build Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/ruffle-rs/ruffle/test_rust.yml?label=Rust%20Build&amp;amp;logo=github&amp;amp;branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/actions/workflows/test_web.yml&#34;&gt;&lt;img alt=&#34;Web Build Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/ruffle-rs/ruffle/test_web.yml?label=Web%20Build&amp;amp;logo=github&amp;amp;branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@ruffle-rs/ruffle&#34;&gt;&lt;img alt=&#34;Ruffle npm&#34; src=&#34;https://img.shields.io/npm/v/@ruffle-rs/ruffle?color=007acc&amp;amp;logo=npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/ruffle-nightly-bin&#34;&gt;&lt;img alt=&#34;Ruffle AUR&#34; src=&#34;https://img.shields.io/aur/version/ruffle-nightly-bin?logo=archlinux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ruffle&#34;&gt;&lt;img alt=&#34;Ruffle Discord&#34; src=&#34;https://img.shields.io/discord/610531541889581066?label=&amp;amp;color=7389d8&amp;amp;labelColor=6a7ec2&amp;amp;logoColor=ffffff&amp;amp;logo=discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/ruffle&#34;&gt;&lt;img alt=&#34;Ruffle translations&#34; src=&#34;https://badges.crowdin.net/ruffle/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://ruffle.rs&#34;&gt;website&lt;/a&gt; | &lt;a href=&#34;https://ruffle.rs/demo&#34;&gt;demo&lt;/a&gt; | &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/releases&#34;&gt;nightly builds&lt;/a&gt; | &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Ruffle&lt;/h1&gt; &#xA;&lt;p&gt;Ruffle is an Adobe Flash Player emulator written in the Rust programming language. Ruffle targets both the desktop and the web using WebAssembly.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#project-status&#34;&gt;Project status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#using-ruffle&#34;&gt;Using Ruffle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#building-from-source&#34;&gt;Building from source&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#linux-prerequisites&#34;&gt;Linux prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#desktop&#34;&gt;Desktop&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#macos&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#web-or-extension&#34;&gt;Web or Extension&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#scanner&#34;&gt;Scanner&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#exporter&#34;&gt;Exporter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#structure&#34;&gt;Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;p&gt;Ruffle supports ActionScript 1, 2 and 3 pretty well, but it&#39;s still not finished by any means. Please report any issues in the &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/issues&#34;&gt;Issue Tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Ruffle&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to try out Ruffle is to visit the &lt;a href=&#34;https://ruffle.rs/demo/&#34;&gt;web demo page&lt;/a&gt;, then click the &#34;Select File&#34; button to load a SWF file of your choice.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ruffle.rs/downloads#nightly-releases&#34;&gt;Nightly builds&lt;/a&gt; of Ruffle are available for desktop and web platforms.&lt;/p&gt; &#xA;&lt;p&gt;For more detailed instructions, see our &lt;a href=&#34;https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle&#34;&gt;wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latest stable channel of &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java, available on your PATH as &lt;code&gt;java&lt;/code&gt; (required for building the library containing the builtin Flash classes for ActionScript 3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linux prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;The following are typical dependencies for Linux:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libasound2-dev&lt;/li&gt; &#xA; &lt;li&gt;libxcb-shape0-dev&lt;/li&gt; &#xA; &lt;li&gt;libxcb-xfixes0-dev&lt;/li&gt; &#xA; &lt;li&gt;libgtk-3-dev&lt;/li&gt; &#xA; &lt;li&gt;libudev-dev&lt;/li&gt; &#xA; &lt;li&gt;libxcb-xinput-dev&lt;/li&gt; &#xA; &lt;li&gt;libxcb-xkb-dev&lt;/li&gt; &#xA; &lt;li&gt;libxcb-cursor-dev&lt;/li&gt; &#xA; &lt;li&gt;default-jre-headless&lt;/li&gt; &#xA; &lt;li&gt;cmake&lt;/li&gt; &#xA; &lt;li&gt;g++&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;p&gt;Use the following command to build and run the desktop app:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo run --release --package=ruffle_desktop&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run a specific SWF file, pass the SWF path as an argument:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo run --release --package=ruffle_desktop -- test.swf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To build in debug mode, simply omit &lt;code&gt;--release&lt;/code&gt; from the command.&lt;/p&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;Ruffle desktop can be built from our &lt;a href=&#34;https://github.com/ruffle-rs/homebrew-ruffle/&#34;&gt;Homebrew Tap&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install --HEAD ruffle-rs/ruffle/ruffle&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: because it is HEAD-only, you&#39;ll need to run &lt;code&gt;brew upgrade --fetch-HEAD ruffle&lt;/code&gt; each time you want to update.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web or Extension&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/web/README.md#building-from-source&#34;&gt;the instructions in the web directory&lt;/a&gt; for building either the web or browser extension version of Ruffle.&lt;/p&gt; &#xA;&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://github.com/ruffle-rs/ruffle-android/raw/main/CONTRIBUTING.md#building-from-source&#34;&gt;instructions&lt;/a&gt; in the &lt;code&gt;ruffle-android&lt;/code&gt; project for building the Android application of Ruffle.&lt;/p&gt; &#xA;&lt;h3&gt;Scanner&lt;/h3&gt; &#xA;&lt;p&gt;If you have a collection of &#34;real world&#34; SWFs to test against, the scanner may be used to benchmark ruffle&#39;s parsing capabilities. Provided with a folder and an output filename, it will attempt to read all of the Flash files and report on the success of such a task.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo run --release --package=ruffle_scanner -- scan folder/with/swfs/ results.csv&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Exporter&lt;/h3&gt; &#xA;&lt;p&gt;If you have a SWF file and would like to capture an image of it, you may use the exporter tool. This currently requires hardware acceleration, but can be run headless (with no window).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cargo run --release --package=exporter -- path/to/file.swf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cargo run --release --package=exporter -- path/to/file.swf path/to/screenshots --frames 5&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;core&lt;/code&gt; - core emulator and common code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;swf&lt;/code&gt; - SWF and ActionScript parser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt; - desktop client (uses &lt;code&gt;wgpu-rs&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;web&lt;/code&gt; - web client and browser extension (uses &lt;code&gt;wasm-bindgen&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;render&lt;/code&gt; - various rendering backends for both desktop and web&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;video&lt;/code&gt; - video decoding backends&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flv&lt;/code&gt; - Flash Video decoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wstr&lt;/code&gt; - a Flash-compatible implementation of strings&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scanner&lt;/code&gt; - a utility to bulk parse SWF files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;exporter&lt;/code&gt; - a utility to generate PNG screenshots of a SWF file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;You can support the development of Ruffle via &lt;a href=&#34;https://github.com/sponsors/ruffle-rs&#34;&gt;GitHub Sponsors&lt;/a&gt;. Your sponsorship will help to ensure the accessibility of Flash content for the future. Thank you!&lt;/p&gt; &#xA;&lt;p&gt;Sincere thanks to the diamond level sponsors of Ruffle:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.newgrounds.com&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/newgrounds.png&#34; alt=&#34;Newgrounds.com&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.cpmstar.com&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/cpmstar.png&#34; alt=&#34;CPMStar&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://deepnight.net&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/deepnight.png&#34; alt=&#34;S√©bastien B√©nard&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.crazygames.com&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/crazygames.png&#34; alt=&#34;Crazy Games&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.coolmathgames.com&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/coolmathgames.png&#34; alt=&#34;Cool Math Games&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.nytimes.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/nyt.png&#34; alt=&#34;The New York Times&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.armorgames.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/armorgames.png&#34; alt=&#34;Armor Games&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.ondaeduca.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/ondaeduca.png&#34; alt=&#34;Onda Educa&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.twoplayergames.org/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/twoplayergames.png&#34; alt=&#34;TwoPlayerGames.org&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.wowgame.jp/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/wowgame.png&#34; alt=&#34;wowgame.jp&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://kupogames.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/mattroszak.png&#34; alt=&#34;Matt Roszak&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.dolldivine.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/dolldivine.png&#34; alt=&#34;Doll Divine&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://movavi.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/movavi.svg?sanitize=true&#34; alt=&#34;Movavi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.kongregate.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/kongregate.svg?sanitize=true&#34; alt=&#34;Kongregate&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.bubbleshooter.net/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/bubble-shooter.png&#34; alt=&#34;Bubble Shooter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.neopets.com/&#34;&gt; &lt;img src=&#34;https://ruffle.rs/sponsors/neopets.png&#34; alt=&#34;Neopets&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Ruffle is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT License (&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;Ruffle depends on third-party libraries under compatible licenses. See &lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for full information.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Ruffle welcomes contribution from everyone. See &lt;a href=&#34;https://raw.githubusercontent.com/ruffle-rs/ruffle/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for help getting started.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;p&gt;The entire Ruffle community, including the chat room and GitHub project, is expected to abide by the &lt;a href=&#34;https://www.rust-lang.org/policies/code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt; that the Rust project itself follows.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/leveldb</title>
    <updated>2024-07-01T01:29:16Z</updated>
    <id>tag:github.com,2024-07-01:/google/leveldb</id>
    <link href="https://github.com/google/leveldb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;This repository is receiving very limited maintenance. We will only review the following types of changes.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Fixes for critical bugs, such as data loss or memory corruption&lt;/li&gt; &#xA;  &lt;li&gt;Changes absolutely needed by internally supported leveldb clients. These typically fix breakage introduced by a language/standard library/OS update&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/leveldb/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/google/leveldb/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Authors: Sanjay Ghemawat (&lt;a href=&#34;mailto:sanjay@google.com&#34;&gt;sanjay@google.com&lt;/a&gt;) and Jeff Dean (&lt;a href=&#34;mailto:jeff@google.com&#34;&gt;jeff@google.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keys and values are arbitrary byte arrays.&lt;/li&gt; &#xA; &lt;li&gt;Data is stored sorted by key.&lt;/li&gt; &#xA; &lt;li&gt;Callers can provide a custom comparison function to override the sort order.&lt;/li&gt; &#xA; &lt;li&gt;The basic operations are &lt;code&gt;Put(key,value)&lt;/code&gt;, &lt;code&gt;Get(key)&lt;/code&gt;, &lt;code&gt;Delete(key)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Multiple changes can be made in one atomic batch.&lt;/li&gt; &#xA; &lt;li&gt;Users can create a transient snapshot to get a consistent view of data.&lt;/li&gt; &#xA; &lt;li&gt;Forward and backward iteration is supported over the data.&lt;/li&gt; &#xA; &lt;li&gt;Data is automatically compressed using the &lt;a href=&#34;https://google.github.io/snappy/&#34;&gt;Snappy compression library&lt;/a&gt;, but &lt;a href=&#34;https://facebook.github.io/zstd/&#34;&gt;Zstd compression&lt;/a&gt; is also supported.&lt;/li&gt; &#xA; &lt;li&gt;External activity (file system operations etc.) is relayed through a virtual interface so users can customize the operating system interactions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/leveldb/raw/main/doc/index.md&#34;&gt;LevelDB library documentation&lt;/a&gt; is online and bundled with the source code.&lt;/p&gt; &#xA;&lt;h1&gt;Limitations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is not a SQL database. It does not have a relational data model, it does not support SQL queries, and it has no support for indexes.&lt;/li&gt; &#xA; &lt;li&gt;Only a single process (possibly multi-threaded) can access a particular database at a time.&lt;/li&gt; &#xA; &lt;li&gt;There is no client-server support builtin to the library. An application that needs such support will have to wrap their own server around the library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting the Source&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recurse-submodules https://github.com/google/leveldb.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;This project supports &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; out of the box.&lt;/p&gt; &#xA;&lt;h3&gt;Build for POSIX&lt;/h3&gt; &#xA;&lt;p&gt;Quick start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p build &amp;amp;&amp;amp; cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release .. &amp;amp;&amp;amp; cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building for Windows&lt;/h3&gt; &#xA;&lt;p&gt;First generate the Visual Studio 2017 project/solution files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;mkdir build&#xA;cd build&#xA;cmake -G &#34;Visual Studio 15&#34; ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default default will build for x86. For 64-bit run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;cmake -G &#34;Visual Studio 15 Win64&#34; ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile the Windows solution from the command-line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;devenv /build Debug leveldb.sln&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or open leveldb.sln in Visual Studio and build from within.&lt;/p&gt; &#xA;&lt;p&gt;Please see the CMake documentation and &lt;code&gt;CMakeLists.txt&lt;/code&gt; for more advanced usage.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing to the leveldb Project&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;This repository is receiving very limited maintenance. We will only review the following types of changes.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Bug fixes&lt;/li&gt; &#xA;  &lt;li&gt;Changes absolutely needed by internally supported leveldb clients. These typically fix breakage introduced by a language/standard library/OS update&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The leveldb project welcomes contributions. leveldb&#39;s primary goal is to be a reliable and fast key/value store. Changes that are in line with the features/limitations outlined above, and meet the requirements below, will be considered.&lt;/p&gt; &#xA;&lt;p&gt;Contribution requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tested platforms only&lt;/strong&gt;. We &lt;em&gt;generally&lt;/em&gt; will only accept changes for platforms that are compiled and tested. This means POSIX (for Linux and macOS) or Windows. Very small changes will sometimes be accepted, but consider that more of an exception than the rule.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stable API&lt;/strong&gt;. We strive very hard to maintain a stable API. Changes that require changes for projects using leveldb &lt;em&gt;might&lt;/em&gt; be rejected without sufficient benefit to the project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tests&lt;/strong&gt;: All changes must be accompanied by a new (or changed) test, or a sufficient explanation as to why a new (or changed) test is not required.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Consistent Style&lt;/strong&gt;: This project conforms to the &lt;a href=&#34;https://google.github.io/styleguide/cppguide.html&#34;&gt;Google C++ Style Guide&lt;/a&gt;. To ensure your changes are properly formatted please run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;clang-format -i --style=file &amp;lt;file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We are unlikely to accept contributions to the build configuration files, such as &lt;code&gt;CMakeLists.txt&lt;/code&gt;. We are focused on maintaining a build configuration that allows us to test that the project works in a few supported configurations inside Google. We are not currently interested in supporting other requirements, such as different operating systems, compilers, or build systems.&lt;/p&gt; &#xA;&lt;h2&gt;Submitting a Pull Request&lt;/h2&gt; &#xA;&lt;p&gt;Before any pull request will be accepted the author must first sign a Contributor License Agreement (CLA) at &lt;a href=&#34;https://cla.developers.google.com/&#34;&gt;https://cla.developers.google.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to keep the commit timeline linear &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Squashing-Commits&#34;&gt;squash&lt;/a&gt; your changes down to a single commit and &lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;rebase&lt;/a&gt; on google/leveldb/main. This keeps the commit timeline linear and more easily sync&#39;ed with the internal repository at Google. More information at GitHub&#39;s &lt;a href=&#34;https://help.github.com/articles/about-git-rebase/&#34;&gt;About Git rebase&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h1&gt;Performance&lt;/h1&gt; &#xA;&lt;p&gt;Here is a performance report (with explanations) from the run of the included db_bench program. The results are somewhat noisy, but should be enough to get a ballpark performance estimate.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;We use a database with a million entries. Each entry has a 16 byte key, and a 100 byte value. Values used by the benchmark compress to about half their original size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LevelDB:    version 1.1&#xA;Date:       Sun May  1 12:11:26 2011&#xA;CPU:        4 x Intel(R) Core(TM)2 Quad CPU    Q6600  @ 2.40GHz&#xA;CPUCache:   4096 KB&#xA;Keys:       16 bytes each&#xA;Values:     100 bytes each (50 bytes after compression)&#xA;Entries:    1000000&#xA;Raw Size:   110.6 MB (estimated)&#xA;File Size:  62.9 MB (estimated)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Write performance&lt;/h2&gt; &#xA;&lt;p&gt;The &#34;fill&#34; benchmarks create a brand new database, in either sequential, or random order. The &#34;fillsync&#34; benchmark flushes data from the operating system to the disk after every operation; the other write operations leave the data sitting in the operating system buffer cache for a while. The &#34;overwrite&#34; benchmark does random writes that update existing keys in the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fillseq      :       1.765 micros/op;   62.7 MB/s&#xA;fillsync     :     268.409 micros/op;    0.4 MB/s (10000 ops)&#xA;fillrandom   :       2.460 micros/op;   45.0 MB/s&#xA;overwrite    :       2.380 micros/op;   46.5 MB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each &#34;op&#34; above corresponds to a write of a single key/value pair. I.e., a random write benchmark goes at approximately 400,000 writes per second.&lt;/p&gt; &#xA;&lt;p&gt;Each &#34;fillsync&#34; operation costs much less (0.3 millisecond) than a disk seek (typically 10 milliseconds). We suspect that this is because the hard disk itself is buffering the update in its memory and responding before the data has been written to the platter. This may or may not be safe based on whether or not the hard disk has enough power to save its memory in the event of a power failure.&lt;/p&gt; &#xA;&lt;h2&gt;Read performance&lt;/h2&gt; &#xA;&lt;p&gt;We list the performance of reading sequentially in both the forward and reverse direction, and also the performance of a random lookup. Note that the database created by the benchmark is quite small. Therefore the report characterizes the performance of leveldb when the working set fits in memory. The cost of reading a piece of data that is not present in the operating system buffer cache will be dominated by the one or two disk seeks needed to fetch the data from disk. Write performance will be mostly unaffected by whether or not the working set fits in memory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;readrandom  : 16.677 micros/op;  (approximately 60,000 reads per second)&#xA;readseq     :  0.476 micros/op;  232.3 MB/s&#xA;readreverse :  0.724 micros/op;  152.9 MB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LevelDB compacts its underlying storage data in the background to improve read performance. The results listed above were done immediately after a lot of random writes. The results after compactions (which are usually triggered automatically) are better.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;readrandom  : 11.602 micros/op;  (approximately 85,000 reads per second)&#xA;readseq     :  0.423 micros/op;  261.8 MB/s&#xA;readreverse :  0.663 micros/op;  166.9 MB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the high cost of reads comes from repeated decompression of blocks read from disk. If we supply enough cache to the leveldb so it can hold the uncompressed blocks in memory, the read performance improves again:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;readrandom  : 9.775 micros/op;  (approximately 100,000 reads per second before compaction)&#xA;readrandom  : 5.215 micros/op;  (approximately 190,000 reads per second after compaction)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Repository contents&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/leveldb/main/doc/index.md&#34;&gt;doc/index.md&lt;/a&gt; for more explanation. See &lt;a href=&#34;https://raw.githubusercontent.com/google/leveldb/main/doc/impl.md&#34;&gt;doc/impl.md&lt;/a&gt; for a brief overview of the implementation.&lt;/p&gt; &#xA;&lt;p&gt;The public interface is in include/leveldb/*.h. Callers should not include or rely on the details of any other header files in this package. Those internal APIs may be changed without warning.&lt;/p&gt; &#xA;&lt;p&gt;Guide to header files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/db.h&lt;/strong&gt;: Main interface to the DB: Start here.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/options.h&lt;/strong&gt;: Control over the behavior of an entire database, and also control over the behavior of individual reads and writes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/comparator.h&lt;/strong&gt;: Abstraction for user-specified comparison function. If you want just bytewise comparison of keys, you can use the default comparator, but clients can write their own comparator implementations if they want custom ordering (e.g. to handle different character encodings, etc.).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/iterator.h&lt;/strong&gt;: Interface for iterating over data. You can get an iterator from a DB object.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/write_batch.h&lt;/strong&gt;: Interface for atomically applying multiple updates to a database.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/slice.h&lt;/strong&gt;: A simple module for maintaining a pointer and a length into some other byte array.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/status.h&lt;/strong&gt;: Status is returned from many of the public interfaces and is used to report success and various kinds of errors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/env.h&lt;/strong&gt;: Abstraction of the OS environment. A posix implementation of this interface is in util/env_posix.cc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include/leveldb/table.h, include/leveldb/table_builder.h&lt;/strong&gt;: Lower-level modules that most clients probably won&#39;t use directly.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>