<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-17T01:29:04Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>git-bug/git-bug</title>
    <updated>2025-05-17T01:29:04Z</updated>
    <id>tag:github.com,2025-05-17:/git-bug/git-bug</id>
    <link href="https://github.com/git-bug/git-bug" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed, offline-first bug tracker embedded in git&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;64px&#34; src=&#34;https://cdn.rawgit.com/git-bug/git-bug/master/misc/logo/logo-alpha-flat-bg.svg?sanitize=true&#34;&gt; &#xA; &lt;h1&gt;git-bug: a decentralized issue tracker&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/git-bug/git-bug/actions/workflows/trunk.yml&#34;&gt;&lt;img src=&#34;https://github.com/git-bug/git-bug/actions/workflows/trunk.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;&lt;img src=&#34;https://opencollective.com/git-bug/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;&lt;img src=&#34;https://opencollective.com/git-bug/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3+-blue.svg?sanitize=true&#34; alt=&#34;GPL v3 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/git-bug/git-bug&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/git-bug/git-bug?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/git-bug/git-bug&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/git-bug/git-bug&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/%23git-bug:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on%20matrix-%23238636&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/git-bug/git-bug/issues&#34;&gt;Issues&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/doc&#34;&gt;Documentation&lt;/a&gt; - &lt;a href=&#34;https://github.com/git-bug/git-bug/discussions&#34;&gt;Feedback&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Overview&lt;a name=&#34;overview&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/git-bug/git-bug&#34;&gt;git-bug&lt;/a&gt; is a standalone, distributed, offline-first issue management tool that embeds issues, comments, and more as objects in a git repository (&lt;em&gt;not files!&lt;/em&gt;), enabling you to push and pull them to one or more remotes.&lt;/p&gt; &#xA;&lt;!-- mdformat-toc start --slug=github --maxlevel=6 --minlevel=2 --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#key-features&#34;&gt;Key Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#our-community&#34;&gt;Our Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#backers-star&#34;&gt;Backers &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#sponsors-star2&#34;&gt;Sponsors &lt;span&gt;üåü&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- mdformat-toc end --&gt; &#xA;&lt;h2&gt;Key Features&lt;a name=&#34;key-features&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native Git Storage:&lt;/strong&gt; Manage issues, users, and comments directly within your repository - keeping everything versioned and clutter-free&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distributed &amp;amp; Versioned:&lt;/strong&gt; Leverage Git‚Äôs decentralized architecture to work offline and sync seamlessly later&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightning Fast:&lt;/strong&gt; List and search issues in mere &lt;em&gt;milliseconds&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Third-Party Bridges:&lt;/strong&gt; Easily synchronize issues with platforms like GitHub and GitLab &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/doc/usage/third-party.md&#34;&gt;using bridges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Interfaces:&lt;/strong&gt; Choose how you interact - via CLI, TUI, or a web browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Effortless Integration:&lt;/strong&gt; Start managing issues your repository with minimal setup&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;a name=&#34;getting-started&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üö©&lt;/span&gt; &lt;strong&gt;Install:&lt;/strong&gt; Check out &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/INSTALLATION.md&#34;&gt;&lt;code&gt;//:INSTALLATION.md&lt;/code&gt;&lt;/a&gt; for step-by-step installation instructions or explore &lt;a href=&#34;https://github.com/git-bug/git-bug/releases/latest&#34;&gt;the latest release&lt;/a&gt; to get started immediately.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìÉ&lt;/span&gt; &lt;strong&gt;Explore:&lt;/strong&gt; Read &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/doc&#34;&gt;the documentation&lt;/a&gt; to learn how to use &lt;code&gt;git-bug&lt;/code&gt; effectively&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üíª&lt;/span&gt; &lt;strong&gt;Contribute:&lt;/strong&gt; Interested in hacking on &lt;code&gt;git-bug&lt;/code&gt;? Head over to &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;//:CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; and see how you can help shape the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üí¨&lt;/span&gt; &lt;strong&gt;Connect:&lt;/strong&gt; Chat with us live on Matrix at &lt;a href=&#34;https://matrix.to/#/%23git-bug:matrix.org&#34;&gt;&lt;code&gt;#git-bug:matrix.org&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìö&lt;/span&gt; &lt;strong&gt;Discuss:&lt;/strong&gt; Browse &lt;a href=&#34;https://github.com/git-bug/git-bug/discussions&#34;&gt;existing discussions&lt;/a&gt; or &lt;a href=&#34;https://github.com/git-bug/git-bug/discussions/new/choose&#34;&gt;start a new one&lt;/a&gt; to ask questions and share ideas&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Our Community&lt;a name=&#34;our-community&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-bug&lt;/code&gt; thrives thanks to the passion of its &lt;a href=&#34;https://github.com/git-bug/git-bug/graphs/contributors&#34;&gt;contributors&lt;/a&gt;, the generosity of independent &lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;backers&lt;/a&gt;, and the strategic support of our &lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;sponsors&lt;/a&gt;. Each of you plays a crucial role in our journey, and we deeply appreciate every contribution that helps drive our project forward.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;Make a contribution&lt;/a&gt; to support this project and get featured below!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers &lt;span&gt;‚≠ê&lt;/span&gt;&lt;a name=&#34;backers-star&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://opencollective.com/git-bug&#34;&gt;&lt;img src=&#34;https://opencollective.com/git-bug/tiers/backer.svg?avatarHeight=50&#34; alt=&#34;backers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Sponsors &lt;span&gt;üåü&lt;/span&gt;&lt;a name=&#34;sponsors-star2&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://opencollective.com/git-bug/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/git-bug/tiers/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;License&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Unless otherwise stated, this project and all assets within it are released under &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/LICENSE&#34;&gt;GPLv3&lt;/a&gt; or later, copyright &lt;a href=&#34;https://github.com/MichaelMure&#34;&gt;Michael Mur√©&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;git-bug&lt;/code&gt; logo is authored by and copyright &lt;a href=&#34;https://github.com/vandesign&#34;&gt;Viktor Teplov&lt;/a&gt;, released under a &lt;a href=&#34;https://raw.githubusercontent.com/git-bug/git-bug/master/misc/logo/LICENSE&#34;&gt;CC BY 4.0&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;This project and its vibrant community was initially dreamt up and built by &lt;a href=&#34;https://github.com/MichaelMure&#34;&gt;Michael Mur√©&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Thank you for all of your hard work!&lt;/p&gt; &#xA; &lt;p&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>trycua/cua</title>
    <updated>2025-05-17T01:29:04Z</updated>
    <id>tag:github.com,2025-05-17:/trycua/cua</id>
    <link href="https://github.com/trycua/cua" rel="alternate"></link>
    <summary type="html">&lt;p&gt;c/ua is the Docker Container for Computer-Use AI Agents.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; alt=&#34;Cua logo&#34; height=&#34;150&#34; srcset=&#34;img/logo_white.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; alt=&#34;Cua logo&#34; height=&#34;150&#34; srcset=&#34;img/logo_black.png&#34;&gt; &#xA;  &lt;img alt=&#34;Cua logo&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/trycua/cua/main/img/logo_black.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-333333?logo=python&amp;amp;logoColor=white&amp;amp;labelColor=333333&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-F05138?logo=swift&amp;amp;logoColor=white&#34; alt=&#34;Swift&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/macOS-000000?logo=apple&amp;amp;logoColor=F0F0F0&#34; alt=&#34;macOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/mVnXXpdE85&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-%235865F2.svg?&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://trendshift.io/repositories/13685&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/13685&#34; alt=&#34;trycua%2Fcua | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;c/ua&lt;/strong&gt; (pronounced &#34;koo-ah&#34;) enables AI agents to control full operating systems in high-performance virtual containers with near-native speed on Apple Silicon.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;video src=&#34;https://github.com/user-attachments/assets/c619b4ea-bb8e-4382-860e-f3757e36af20&#34; width=&#34;800&#34; controls&gt;&lt;/video&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;üöÄ Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;Get started with a Computer-Use Agent UI and a VM with a single command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/scripts/playground.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Lume CLI for VM management (if needed)&lt;/li&gt; &#xA; &lt;li&gt;Pull the latest macOS CUA image (if needed)&lt;/li&gt; &#xA; &lt;li&gt;Set up Python environment and install/update required packages&lt;/li&gt; &#xA; &lt;li&gt;Launch the Computer-Use Agent UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Supported &lt;a href=&#34;https://github.com/trycua/cua/raw/main/libs/agent/README.md#agent-loops&#34;&gt;Agent Loops&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trycua/cua/raw/main/libs/agent/README.md#agent-loops&#34;&gt;UITARS-1.5&lt;/a&gt; - Run locally on Apple Silicon with MLX, or use cloud providers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trycua/cua/raw/main/libs/agent/README.md#agent-loops&#34;&gt;OpenAI CUA&lt;/a&gt; - Use OpenAI&#39;s Computer-Use Preview model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trycua/cua/raw/main/libs/agent/README.md#agent-loops&#34;&gt;Anthropic CUA&lt;/a&gt; - Use Anthropic&#39;s Computer-Use capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trycua/cua/raw/main/libs/agent/README.md#agent-loops&#34;&gt;OmniParser-v2.0&lt;/a&gt; - Control UI with &lt;a href=&#34;https://som-gpt4v.github.io/&#34;&gt;Set-of-Marks prompting&lt;/a&gt; using any vision model&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac with Apple Silicon (M1/M2/M3/M4 series)&lt;/li&gt; &#xA; &lt;li&gt;macOS 15 (Sequoia) or newer&lt;/li&gt; &#xA; &lt;li&gt;Disk space for VM images (30GB+ recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üíª For Developers&lt;/h1&gt; &#xA;&lt;h3&gt;Step 1: Install Lume CLI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lume CLI manages high-performance macOS/Linux VMs with near-native speed on Apple Silicon.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Pull the macOS CUA Image&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lume pull macos-sequoia-cua:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The macOS CUA image contains the default Mac apps and the Computer Server for easy automation.&lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Install Python SDK&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;cua-computer[all]&#34; &#34;cua-agent[all]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, see the &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/docs/Developer-Guide.md&#34;&gt;Developer Guide&lt;/a&gt; for building from source.&lt;/p&gt; &#xA;&lt;h3&gt;Step 4: Use in Your Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from computer import Computer&#xA;from agent import ComputerAgent, LLM&#xA;&#xA;async def main():&#xA;    # Start a local macOS VM with a 1024x768 display&#xA;    async with Computer(os_type=&#34;macos&#34;, display=&#34;1024x768&#34;) as computer:&#xA;&#xA;        # Example: Direct control of a macOS VM with Computer&#xA;        await computer.interface.left_click(100, 200)&#xA;        await computer.interface.type_text(&#34;Hello, world!&#34;)&#xA;        screenshot_bytes = await computer.interface.screenshot()&#xA;        &#xA;        # Example: Create and run an agent locally using mlx-community/UI-TARS-1.5-7B-6bit&#xA;        agent = ComputerAgent(&#xA;          computer=computer,&#xA;          loop=&#34;UITARS&#34;,&#xA;          model=LLM(provider=&#34;MLXVLM&#34;, name=&#34;mlx-community/UI-TARS-1.5-7B-6bit&#34;)&#xA;        )&#xA;        await agent.run(&#34;Find the trycua/cua repository on GitHub and follow the quick start guide&#34;)&#xA;&#xA;main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For ready-to-use examples, check out our &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/notebooks/&#34;&gt;Notebooks&lt;/a&gt; collection.&lt;/p&gt; &#xA;&lt;h3&gt;Lume CLI Reference&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Lume CLI and background service&#xA;curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh | bash&#xA;&#xA;# List all VMs&#xA;lume ls&#xA;&#xA;# Pull a VM image&#xA;lume pull macos-sequoia-cua:latest&#xA;&#xA;# Create a new VM&#xA;lume create my-vm --os macos --cpu 4 --memory 8GB --disk-size 50GB&#xA;&#xA;# Run a VM (creates and starts if it doesn&#39;t exist)&#xA;lume run macos-sequoia-cua:latest&#xA;&#xA;# Stop a VM&#xA;lume stop macos-sequoia-cua_latest&#xA;&#xA;# Delete a VM&#xA;lume delete macos-sequoia-cua_latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lumier CLI Reference&lt;/h3&gt; &#xA;&lt;p&gt;For advanced container-like virtualization, check out &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/lumier/README.md&#34;&gt;Lumier&lt;/a&gt; - a Docker interface for macOS and Linux VMs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Lume CLI and background service&#xA;curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh | bash&#xA;&#xA;# Run macOS in a Docker container&#xA;docker run -it --rm \&#xA;    --name lumier-vm \&#xA;    -p 8006:8006 \&#xA;    -v $(pwd)/storage:/storage \&#xA;    -v $(pwd)/shared:/shared \&#xA;    -e VM_NAME=lumier-vm \&#xA;    -e VERSION=ghcr.io/trycua/macos-sequoia-cua:latest \&#xA;    -e CPU_CORES=4 \&#xA;    -e RAM_SIZE=8192 \&#xA;    -e HOST_STORAGE_PATH=$(pwd)/storage \&#xA;    -e HOST_SHARED_PATH=$(pwd)/shared \&#xA;    trycua/lumier:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/mcp-server/README.md&#34;&gt;How to use the MCP Server with Claude Desktop or other MCP clients&lt;/a&gt; - One of the easiest ways to get started with C/ua&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/agent/README.md&#34;&gt;How to use OpenAI Computer-Use, Anthropic, OmniParser, or UI-TARS for your Computer-Use Agent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md&#34;&gt;How to use Lume CLI for managing desktops&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.trycua.com/blog/training-computer-use-models-trajectories-1&#34;&gt;Training Computer-Use Models: Collecting Human Trajectories with C/ua (Part 1)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.trycua.com/blog/build-your-own-operator-on-macos-1&#34;&gt;Build Your Own Operator on macOS (Part 1)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Installation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md&#34;&gt;&lt;strong&gt;Lume&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VM management for macOS/Linux using Apple&#39;s Virtualization.Framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh | bash&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/lumier/README.md&#34;&gt;&lt;strong&gt;Lumier&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker interface for macOS and Linux VMs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;docker pull trycua/lumier:latest&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/computer/README.md&#34;&gt;&lt;strong&gt;Computer&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Interface for controlling virtual machines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install &#34;cua-computer[all]&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/agent/README.md&#34;&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AI agent framework for automating tasks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install &#34;cua-agent[all]&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/mcp-server/README.md&#34;&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MCP server for using CUA with Claude Desktop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install cua-mcp-server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/som/README.md&#34;&gt;&lt;strong&gt;SOM&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Self-of-Mark library for Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install cua-som&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/pylume/README.md&#34;&gt;&lt;strong&gt;PyLume&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python bindings for Lume&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install pylume&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/computer-server/README.md&#34;&gt;&lt;strong&gt;Computer Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server component for Computer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install cua-computer-server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/libs/core/README.md&#34;&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Core utilities&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install cua-core&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Computer Interface Reference&lt;/h2&gt; &#xA;&lt;p&gt;For complete examples, see &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/examples/computer_examples.py&#34;&gt;computer_examples.py&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/notebooks/computer_nb.ipynb&#34;&gt;computer_nb.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Mouse Actions&#xA;await computer.interface.left_click(x, y)       # Left click at coordinates&#xA;await computer.interface.right_click(x, y)      # Right click at coordinates&#xA;await computer.interface.double_click(x, y)     # Double click at coordinates&#xA;await computer.interface.move_cursor(x, y)      # Move cursor to coordinates&#xA;await computer.interface.drag_to(x, y, duration)  # Drag to coordinates&#xA;await computer.interface.get_cursor_position()  # Get current cursor position&#xA;&#xA;# Keyboard Actions&#xA;await computer.interface.type_text(&#34;Hello&#34;)     # Type text&#xA;await computer.interface.press_key(&#34;enter&#34;)     # Press a single key&#xA;await computer.interface.hotkey(&#34;command&#34;, &#34;c&#34;) # Press key combination&#xA;&#xA;# Screen Actions&#xA;await computer.interface.screenshot()           # Take a screenshot&#xA;await computer.interface.get_screen_size()      # Get screen dimensions&#xA;&#xA;# Clipboard Actions&#xA;await computer.interface.set_clipboard(text)    # Set clipboard content&#xA;await computer.interface.copy_to_clipboard()    # Get clipboard content&#xA;&#xA;# File System Operations&#xA;await computer.interface.file_exists(path)      # Check if file exists&#xA;await computer.interface.directory_exists(path) # Check if directory exists&#xA;await computer.interface.run_command(cmd)       # Run shell command&#xA;&#xA;# Accessibility&#xA;await computer.interface.get_accessibility_tree() # Get accessibility tree&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ComputerAgent Reference&lt;/h2&gt; &#xA;&lt;p&gt;For complete examples, see &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/examples/agent_examples.py&#34;&gt;agent_examples.py&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/notebooks/agent_nb.ipynb&#34;&gt;agent_nb.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Import necessary components&#xA;from agent import ComputerAgent, LLM, AgentLoop, LLMProvider&#xA;&#xA;# UI-TARS-1.5 agent for local execution with MLX&#xA;ComputerAgent(loop=AgentLoop.UITARS, model=LLM(provider=LLMProvider.MLXVLM, name=&#34;mlx-community/UI-TARS-1.5-7B-6bit&#34;))   &#xA;# OpenAI Computer-Use agent using OPENAI_API_KEY  &#xA;ComputerAgent(loop=AgentLoop.OPENAI, model=LLM(provider=LLMProvider.OPENAI, name=&#34;computer-use-preview&#34;))&#xA;# Anthropic Claude agent using ANTHROPIC_API_KEY&#xA;ComputerAgent(loop=AgentLoop.ANTHROPIC, model=LLM(provider=LLMProvider.ANTHROPIC))&#xA;&#xA;# OmniParser loop for UI control using Set-of-Marks (SOM) prompting and any vision LLM&#xA;ComputerAgent(loop=AgentLoop.OMNI, model=LLM(provider=LLMProvider.OLLAMA, name=&#34;gemma3:12b-it-q4_K_M&#34;))      &#xA;# OpenRouter example using OAICOMPAT provider&#xA;ComputerAgent(&#xA;    loop=AgentLoop.OMNI,&#xA;    model=LLM(&#xA;        provider=LLMProvider.OAICOMPAT, &#xA;        name=&#34;openai/gpt-4o-mini&#34;,&#xA;        provider_base_url=&#34;https://openrouter.ai/api/v1&#34;&#xA;    ),&#xA;    api_key=&#34;your-openrouter-api-key&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;Check out these demos of the Computer-Use Agent in action:&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;MCP Server: Work with Claude Desktop and Tableau&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;video src=&#34;https://github.com/user-attachments/assets/9f573547-5149-493e-9a72-396f3cff29df&#34; width=&#34;800&#34; controls&gt;&lt;/video&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;AI-Gradio: Multi-app workflow with browser, VS Code and terminal&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;video src=&#34;https://github.com/user-attachments/assets/723a115d-1a07-4c8e-b517-88fbdf53ed0f&#34; width=&#34;800&#34; controls&gt;&lt;/video&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Notebook: Fix GitHub issue in Cursor&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;video src=&#34;https://github.com/user-attachments/assets/f67f0107-a1e1-46dc-aa9f-0146eb077077&#34; width=&#34;800&#34; controls&gt;&lt;/video&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.com/invite/mVnXXpdE85&#34;&gt;Discord community&lt;/a&gt; to discuss ideas, get assistance, or share your demos!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Cua is open-sourced under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft&#39;s OmniParser, which is used in this project, is licensed under the Creative Commons Attribution 4.0 International License (CC-BY-4.0) - see the &lt;a href=&#34;https://github.com/microsoft/OmniParser/raw/master/LICENSE&#34;&gt;OmniParser LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to CUA! Please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;Apple, macOS, and Apple Silicon are trademarks of Apple Inc. Ubuntu and Canonical are registered trademarks of Canonical Ltd. Microsoft is a registered trademark of Microsoft Corporation. This project is not affiliated with, endorsed by, or sponsored by Apple Inc., Canonical Ltd., or Microsoft Corporation.&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our supporters!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/trycua/cua&#34;&gt;&lt;img src=&#34;https://starchart.cc/trycua/cua.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/f-trycua&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/195596869?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;f-trycua&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;f-trycua&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-f-trycua&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://pepicrft.me&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/663605?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Pedro Pi√±era Buend√≠a&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pedro Pi√±era Buend√≠a&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-pepicrft&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://iamit.in&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5647941?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Amit Kumar&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit Kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-aktech&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://productsway.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/870029?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dung Duc Huynh (Kaka)&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dung Duc Huynh (Kaka)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-jellydn&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://zaydkrunz.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70227235?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Zayd Krunz&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zayd Krunz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-ShrootBuck&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/PrashantRaj18198&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/23168997?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Prashant Raj&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Prashant Raj&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-PrashantRaj18198&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.mobile.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/847683?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Leland Takamine&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leland Takamine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-Leland-Takamine&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ddupont808&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3820588?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;ddupont&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ddupont&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-ddupont808&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Lizzard1123&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/46036335?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ethan Gutierrez&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan Gutierrez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-Lizzard1123&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://ricterz.me&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5282759?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ricter Zheng&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ricter Zheng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-RicterZ&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.trytruffle.ai/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50844303?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rahul Karajgikar&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rahul Karajgikar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-rahulkarajgikar&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/trospix&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/81363696?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;trospix&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;trospix&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-trospix&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://wavee.world/invitation/b96d00e6-b802-4a1b-8a66-2e3854a01ffd&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22633385?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ikko Eltociear Ashimine&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Eltociear Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-eltociear&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dp221125&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10572119?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;ÌïúÏÑùÌò∏(MilKyo)&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ÌïúÏÑùÌò∏(MilKyo)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-dp221125&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.encona.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/891558?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rahim Nathwani&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rahim Nathwani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-rahimnathwani&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://mjspeck.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20689127?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Matt Speck&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Speck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-mjspeck&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/FinnBorge&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9272726?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;FinnBorge&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FinnBorge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-FinnBorge&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/jklapacz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5343758?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jakub Klapacz&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Klapacz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trycua/cua/main/#code-jklapacz&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
  <entry>
    <title>happycola233/tchMaterial-parser</title>
    <updated>2025-05-17T01:29:04Z</updated>
    <id>tag:github.com,2025-05-17:/happycola233/tchMaterial-parser</id>
    <link href="https://github.com/happycola233/tchMaterial-parser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ÂõΩÂÆ∂‰∏≠Â∞èÂ≠¶Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞ ÁîµÂ≠êËØæÊú¨‰∏ãËΩΩÂ∑•ÂÖ∑ÔºåÂ∏ÆÂä©ÊÇ®‰ªéÊô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞‰∏≠Ëé∑ÂèñÁîµÂ≠êËØæÊú¨ÁöÑ PDF Êñá‰ª∂ÁΩëÂùÄÂπ∂ËøõË°å‰∏ãËΩΩÔºåËÆ©ÊÇ®Êõ¥Êñπ‰æøÂú∞Ëé∑ÂèñËØæÊú¨ÂÜÖÂÆπ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://basic.smartedu.cn/tchMaterial/&#34;&gt;ÂõΩÂÆ∂‰∏≠Â∞èÂ≠¶Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞&lt;/a&gt; ÁîµÂ≠êËØæÊú¨‰∏ãËΩΩÂ∑•ÂÖ∑&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.x-blue.svg?sanitize=true&#34; alt=&#34;Python Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Made_With-%E2%9D%A4-red.svg?sanitize=true&#34; alt=&#34;Made With Love‚ù§Ô∏è&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] üöÄÊúÄÊñ∞ÁâàÊú¨ v3.0 Áé∞Â∑≤ÂèëÂ∏ÉÔºåÊ¨¢Ëøé‰ΩìÈ™åÔºÅ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Êú¨Â∑•ÂÖ∑ÂèØ‰ª•Â∏ÆÂä©ÊÇ®‰ªé&lt;a href=&#34;https://basic.smartedu.cn/tchMaterial/&#34;&gt;&lt;strong&gt;ÂõΩÂÆ∂‰∏≠Â∞èÂ≠¶Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞&lt;/strong&gt;&lt;/a&gt;Ëé∑ÂèñÁîµÂ≠êËØæÊú¨ÁöÑ PDF Êñá‰ª∂ÁΩëÂùÄÂπ∂ËøõË°å‰∏ãËΩΩÔºåËÆ©ÊÇ®Êõ¥Êñπ‰æøÂú∞Ëé∑ÂèñËØæÊú¨ÂÜÖÂÆπ„ÄÇ&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;Ëá™&lt;strong&gt;2025 Âπ¥ 2 Êúà&lt;/strong&gt;Ëµ∑ÔºåÂõΩÂÆ∂‰∏≠Â∞èÂ≠¶Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞&lt;strong&gt;ÈúÄË¶ÅÁôªÂΩï&lt;/strong&gt;ÊâçËÉΩËÆøÈóÆÁîµÂ≠êËØæÊú¨ËµÑÊ∫êÔºåÁî®Êà∑ÈúÄÊèê‰æõ &lt;strong&gt;Access Token&lt;/strong&gt;ÔºàÂç≥ÁôªÂΩïÂá≠ÊçÆÔºâÊâçÂèØÊ≠£Â∏∏‰ΩøÁî®Êú¨Â∑•ÂÖ∑ÁöÑ‰∏ãËΩΩÂäüËÉΩ„ÄÇ&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;üëâËØ∑ÂÖàÊåâÁÖß&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/#2-%E8%AE%BE%E7%BD%AE-access-token&#34;&gt;‰∏ãÊñπÊåáÂçó&lt;/a&gt;ËÆæÁΩÆ Access TokenÔºåÂê¶ÂàôÁ®ãÂ∫èÂ∞ÜÊó†Ê≥ïËß£ÊûêËµÑÊ∫êÔºÅ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ú®Â∑•ÂÖ∑ÁâπÁÇπ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÊîØÊåÅ Access Token ÁôªÂΩï&lt;/strong&gt;üîëÔºöÊîØÊåÅÁî®Êà∑ÊâãÂä®ËæìÂÖ• Access TokenÔºåÂú® Windows Êìç‰ΩúÁ≥ªÁªü‰∏ã‰ºöÂ≠òÂÖ•Ê≥®ÂÜåË°®Ôºå‰∏ãÊ¨°ÂêØÂä®ÂèØËá™Âä®Âä†ËΩΩ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÊîØÊåÅÊâπÈáè‰∏ãËΩΩ&lt;/strong&gt;üìöÔºö‰∏ÄÊ¨°ËæìÂÖ•Â§ö‰∏™ÁîµÂ≠êËØæÊú¨È¢ÑËßàÈ°µÈù¢ÁΩëÂùÄÔºåÂç≥ÂèØÊâπÈáè‰∏ãËΩΩ PDF ËØæÊú¨Êñá‰ª∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ëá™Âä®Êñá‰ª∂ÂëΩÂêç&lt;/strong&gt;üìÇÔºöÁ®ãÂ∫è‰ºöËá™Âä®‰ΩøÁî®ÊïôÊùêÂêçÁß∞‰Ωú‰∏∫Êñá‰ª∂ÂêçÔºåÊñπ‰æøÁÆ°ÁêÜ‰∏ãËΩΩÁöÑËØæÊú¨Êñá‰ª∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;È´ò DPI ÈÄÇÈÖç&lt;/strong&gt;üñ•Ô∏èÔºö‰ºòÂåñ UI ‰ª•ÈÄÇÈÖçÈ´òÂàÜËæ®ÁéáÂ±èÂπïÔºåÈÅøÂÖçÁïåÈù¢Ê®°Á≥äÈóÆÈ¢ò„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;‰∏ãËΩΩËøõÂ∫¶ÂèØËßÜÂåñ&lt;/strong&gt;üìäÔºöÂÆûÊó∂ÊòæÁ§∫‰∏ãËΩΩËøõÂ∫¶ÔºåÊîØÊåÅÊöÇÂÅú/ÊÅ¢Â§çÊìç‰Ωú„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ë∑®Âπ≥Âè∞ÊîØÊåÅ&lt;/strong&gt;üíªÔºöÊîØÊåÅ Windows„ÄÅLinux„ÄÅmacOS Á≠âÊìç‰ΩúÁ≥ªÁªüÔºàÈúÄË¶ÅÂõæÂΩ¢ÁïåÈù¢Ôºâ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/res/PixPin_2025-03-14_23-44-26.png&#34; alt=&#34;Á®ãÂ∫èÊà™Âõæ&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚¨áÔ∏è‰∏ãËΩΩ‰∏éÂÆâË£ÖÊñπÊ≥ï&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Releases È°µÈù¢&lt;/h3&gt; &#xA;&lt;p&gt;Áî±‰∫éÊàë‰ª¨ÁöÑÁ≤æÂäõÊúâÈôêÔºåÊú¨È°πÁõÆÁöÑ &lt;a href=&#34;https://github.com/happycola233/tchMaterial-parser/releases&#34;&gt;GitHub Releases È°µÈù¢&lt;/a&gt;&lt;strong&gt;‰ªÖ‰ºöÂèëÂ∏ÉÈÄÇÁî®‰∫é Windows ‰∏é Linux Êìç‰ΩúÁ≥ªÁªüÁöÑ x64 Êû∂ÊûÑ&lt;/strong&gt;ÁöÑÁ®ãÂ∫è„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âú®‰∏ãËΩΩÂÆåÊàê‰πãÂêéÔºåÂç≥ÂèØËøêË°åÊú¨Á®ãÂ∫èÔºå‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂÆâË£ÖÊ≠•È™§„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;Arch Áî®Êà∑ËΩØ‰ª∂‰ªìÂ∫ìÔºàAURÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;ÂØπ‰∫é &lt;strong&gt;Arch Linux&lt;/strong&gt; Êìç‰ΩúÁ≥ªÁªüÔºåÊú¨Á®ãÂ∫èÂ∑≤ÂèëÂ∏ÉËá≥&lt;a href=&#34;https://aur.archlinux.org/packages/tchmaterial-parser&#34;&gt;Arch Áî®Êà∑ËΩØ‰ª∂‰ªìÂ∫ì&lt;/a&gt;ÔºåÂõ†Ê≠§ÊÇ®ËøòÂèØ‰ª•ÈÄöËøáÂú®ÁªàÁ´Ø‰∏≠ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§ÂÆâË£ÖÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yay -S tchmaterial-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÊÑüË∞¢ &lt;a href=&#34;https://github.com/iamzhz&#34;&gt;@iamzhz&lt;/a&gt; Âà∂‰Ωú‰∫ÜÊú¨Â∑•ÂÖ∑ÁöÑÂèëË°åÂåÖÔºà&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/issues/26&#34;&gt;#26&lt;/a&gt;ÔºâÔºÅ&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; &#xA;&lt;h3&gt;1. ËæìÂÖ•ÊïôÊùêÈìæÊé•üì•&lt;/h3&gt; &#xA;&lt;p&gt;Â∞ÜÁîµÂ≠êËØæÊú¨ÁöÑ&lt;strong&gt;È¢ÑËßàÈ°µÈù¢ÁΩëÂùÄ&lt;/strong&gt;Á≤òË¥¥Âà∞Á®ãÂ∫èÊñáÊú¨Ê°Ü‰∏≠ÔºåÊîØÊåÅÂ§ö‰∏™ URLÔºàÊØèË°å‰∏Ä‰∏™Ôºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Á§∫‰æãÁΩëÂùÄ&lt;/strong&gt;Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://basic.smartedu.cn/tchMaterial/detail?contentType=assets_document&amp;amp;contentId=XXXXXX&amp;amp;catalogType=tchMaterial&amp;amp;subCatalog=tchMaterial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. ËÆæÁΩÆ Access Tokenüîë&lt;/h3&gt; &#xA;&lt;p&gt;Ëã•ÊÇ®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êú¨Á®ãÂ∫èÔºåÈúÄÁÇπÂáª ‚Äú&lt;strong&gt;ËÆæÁΩÆ Token&lt;/strong&gt;‚Äù ÊåâÈíÆÔºåÁ≤òË¥¥ Access Token Âπ∂‰øùÂ≠ò„ÄÇ&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÊâìÂºÄÊµèËßàÂô®&lt;/strong&gt;ÔºåËÆøÈóÆ&lt;a href=&#34;https://auth.smartedu.cn/uias/login&#34;&gt;ÂõΩÂÆ∂‰∏≠Â∞èÂ≠¶Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞&lt;/a&gt;Âπ∂&lt;strong&gt;ÁôªÂΩïË¥¶Âè∑&lt;/strong&gt;„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Êåâ‰∏ã &lt;strong&gt;F12&lt;/strong&gt; Êàñ &lt;strong&gt;Ctrl+Shift+I&lt;/strong&gt;ÔºåÊàñÂè≥ÈîÆ‚Äî‚ÄîÊ£ÄÊü•ÔºàÂÆ°Êü•ÂÖÉÁ¥†ÔºâÊâìÂºÄ&lt;strong&gt;ÂºÄÂèëËÄÖÂ∑•ÂÖ∑&lt;/strong&gt;ÔºåÈÄâÊã©&lt;strong&gt;ÊéßÂà∂Âè∞ÔºàConsoleÔºâ&lt;/strong&gt;„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®ÊéßÂà∂Âè∞Á≤òË¥¥‰ª•‰∏ã‰ª£Á†ÅÂêéÂõûËΩ¶ÔºàEnterÔºâÔºö&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;(function() {&#xA;  const authKey = Object.keys(localStorage).find(key =&amp;gt; key.startsWith(&#34;ND_UC_AUTH&#34;));&#xA;  if (!authKey) {&#xA;    console.error(&#34;Êú™ÊâæÂà∞ Access TokenÔºåËØ∑Á°Æ‰øùÂ∑≤ÁôªÂΩïÔºÅ&#34;);&#xA;    return;&#xA;  }&#xA;  const tokenData = JSON.parse(localStorage.getItem(authKey));&#xA;  const accessToken = JSON.parse(tokenData.value).access_token;&#xA;  console.log(&#34;%cAccess Token: &#34;, &#34;color: green; font-weight: bold&#34;, accessToken);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Â§çÂà∂ÊéßÂà∂Âè∞ËæìÂá∫ÁöÑ &lt;strong&gt;Access Token&lt;/strong&gt;ÔºåÁÑ∂ÂêéÂú®Êú¨Á®ãÂ∫è‰∏≠ÁÇπÂáª ‚Äú&lt;strong&gt;ËÆæÁΩÆ Token&lt;/strong&gt;‚Äù ÊåâÈíÆÔºåÁ≤òË¥¥Âπ∂‰øùÂ≠ò Token„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Access Token ÂèØËÉΩ‰ºöËøáÊúüÔºåËã•‰∏ãËΩΩÂ§±Ë¥•ÊèêÁ§∫ &lt;strong&gt;401 Unauthorized&lt;/strong&gt;ÔºåËØ∑ÈáçÊñ∞Ëé∑ÂèñÂπ∂ËÆæÁΩÆÊñ∞ÁöÑ Token„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. ÂºÄÂßã‰∏ãËΩΩüöÄ&lt;/h3&gt; &#xA;&lt;p&gt;ÁÇπÂáª ‚Äú&lt;strong&gt;‰∏ãËΩΩ&lt;/strong&gt;‚Äù ÊåâÈíÆÔºåÁ®ãÂ∫èÂ∞ÜËá™Âä®Ëß£ÊûêÂπ∂‰∏ãËΩΩ PDF ËØæÊú¨„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨Â∑•ÂÖ∑ÊîØÊåÅ&lt;strong&gt;ÊâπÈáè‰∏ãËΩΩ&lt;/strong&gt;ÔºåÊâÄÊúâ PDF Êñá‰ª∂‰ºöËá™Âä®ÊåâËØæÊú¨ÂêçÁß∞ÂëΩÂêçÂπ∂‰øùÂ≠òÂú®ÈÄâÂÆöÁõÆÂΩï‰∏≠„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‚ùìÂ∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; &#xA;&lt;h3&gt;1. ‰∏∫‰ªÄ‰πà‰∏ãËΩΩÂ§±Ë¥•Ôºü‚ö†Ô∏è&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê£ÄÊü•ÊòØÂê¶Â∑≤&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/#2-%E8%AE%BE%E7%BD%AE-access-token&#34;&gt;&lt;strong&gt;Ê≠£Á°ÆËÆæÁΩÆ Access Token&lt;/strong&gt;&lt;/a&gt;üîëÔºå‰∏îÊ≤°ÊúâËøáÊúü„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Á°ÆËÆ§ÁΩëÁªúËøûÊé•ÊòØÂê¶Ê≠£Â∏∏&lt;/strong&gt;üåêÔºåÊúâÊó∂ÁΩëÁªú‰∏çÁ®≥ÂÆöÂèØËÉΩÂØºËá¥‰∏ãËΩΩÂ§±Ë¥•„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Á°Æ‰øùËæìÂÖ•ÁöÑÁΩëÂùÄÊúâÊïà&lt;/strong&gt;üîóÔºåÈÉ®ÂàÜÊóßËµÑÊ∫êÂèØËÉΩÂ∑≤Ë¢´ÁßªÈô§„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Access Token ‰øùÂ≠òÂú®Âì™ÈáåÔºüüíæ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows Êìç‰ΩúÁ≥ªÁªü&lt;/strong&gt;ÔºöToken ‰ºöÂ≠òÂÇ®Âú®&lt;strong&gt;Ê≥®ÂÜåË°®&lt;/strong&gt; &lt;code&gt;HKEY_CURRENT_USER\Software\tchMaterial-parser&lt;/code&gt; È°π‰∏≠ÁöÑ &lt;code&gt;AccessToken&lt;/code&gt; ÂÄº„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux Êìç‰ΩúÁ≥ªÁªü&lt;/strong&gt;: Token ‰ºöÂ≠òÂÇ®Âú® &lt;code&gt;~/.config/tchMaterial-parser/data.json&lt;/code&gt; ÁöÑÊñá‰ª∂‰∏≠„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS Á≠âÊìç‰ΩúÁ≥ªÁªü&lt;/strong&gt;ÔºöToken ‰ªÖÂú®ËøêË°åÊó∂‰∏¥Êó∂Â≠òÂÇ®‰∫éÂÜÖÂ≠òÔºå‰∏ç‰ºöËá™Âä®‰øùÂ≠òÔºåÁ®ãÂ∫èÈáçÂêØÂêéÈúÄÈáçÊñ∞ËæìÂÖ•ÔºåÁõÆÂâçÊàë‰ª¨Ê≠£Âú®Âä™ÂäõÊîπËøõËØ•ÂäüËÉΩ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. Token ‰ºö‰∏ç‰ºöÊ≥ÑÈú≤Ôºüüîê&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êú¨Á®ãÂ∫è&lt;strong&gt;‰∏ç‰ºö‰∏ä‰º†&lt;/strong&gt; TokenÔºå‰πü‰∏ç‰ºöÂ≠òÂÇ®Âú®‰∫ëÁ´ØÔºå‰ªÖÁî®‰∫éÊú¨Âú∞ËØ∑Ê±ÇÊéàÊùÉ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ËØ∑ÂãøÂú®ÂÖ¨ÂºÄÂú∫ÂêàÂàÜ‰∫´ Token&lt;/strong&gt;Ôºå‰ª•ÂÖçÊÇ®ÁöÑË¥¶Âè∑Ë¢´‰ªñ‰∫∫‰ΩøÁî®ÔºåÈÄ†Êàê‰∏•ÈáçÂêéÊûú„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚≠êStar History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#happycola233/tchMaterial-parser&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=happycola233/tchMaterial-parser&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§ùË¥°ÁåÆÊåáÂçó&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÊÇ®ÂèëÁé∞ Bug ÊàñÊúâÊîπËøõÂª∫ËÆÆÔºåÊ¨¢ËøéÊèê‰∫§ &lt;strong&gt;Issue&lt;/strong&gt; Êàñ &lt;strong&gt;Pull Request&lt;/strong&gt;ÔºåËÆ©Êàë‰ª¨‰∏ÄËµ∑ÂÆåÂñÑÊú¨Â∑•ÂÖ∑ÔºÅ&lt;/p&gt; &#xA;&lt;h2&gt;üìúËÆ∏ÂèØËØÅ&lt;/h2&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆÂü∫‰∫é &lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/LICENSE&#34;&gt;MIT ËÆ∏ÂèØËØÅ&lt;/a&gt;ÔºåÊ¨¢ËøéËá™Áî±‰ΩøÁî®Âíå‰∫åÊ¨°ÂºÄÂèë„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;üíåÂèãÊÉÖÈìæÊé•&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìöÊÇ®‰πüÂèØ‰ª•Âú® &lt;a href=&#34;https://github.com/TapXWorld/ChinaTextbook&#34;&gt;ChinaTextbook&lt;/a&gt; È°πÁõÆ‰∏≠‰∏ãËΩΩÂΩíÊ°£ÁöÑÊïôÊùê PDF„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>