<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-17T01:29:06Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yihong0618/tg_bot_collections</title>
    <updated>2023-12-17T01:29:06Z</updated>
    <id>tag:github.com,2023-12-17:/yihong0618/tg_bot_collections</id>
    <link href="https://github.com/yihong0618/tg_bot_collections" rel="alternate"></link>
    <summary type="html">&lt;p&gt;collections of yihong0618&#39;s telegram bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tg_bot_collections&lt;/h1&gt; &#xA;&lt;p&gt;Collections of yihong0618&#39;s telegram bot&lt;/p&gt; &#xA;&lt;p&gt;for yihong0618&#39;s channel: &lt;a href=&#34;https://t.me/hyi0618&#34;&gt;https://t.me/hyi0618&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bot -&amp;gt; poster&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/yihong0618/tg_bot_collections/assets/15976103/6cf6b2c0-9f43-42f4-ba5f-be768ea27fd1&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bot -&amp;gt; pretty mapper&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/yihong0618/tg_bot_collections/assets/15976103/29848d22-5289-4953-8ab0-4e84c16f79e3&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bot -&amp;gt; Gemini player&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;visit &lt;a href=&#34;https://makersuite.google.com/app/apikey&#34;&gt;https://makersuite.google.com/app/apikey&lt;/a&gt; get the key&lt;/li&gt; &#xA; &lt;li&gt;export GOOGLE_GEMINI_KEY=${the_key}&lt;/li&gt; &#xA; &lt;li&gt;use &lt;code&gt;gemini: ${message}&lt;/code&gt; to ask&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/yihong0618/tg_bot_collections/assets/15976103/683a9c22-6f64-4a51-93e6-5e36218e1668&#34; alt=&#34;telegram-cloud-photo-size-5-6336976091083817765-y&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;HOW TO Install and Run&lt;/h2&gt; &#xA;&lt;h3&gt;Run with systemd service&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Git clone this repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;cd tg_bot_collections&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy file .env.example to .env&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit .env file and change the following variables&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Google_Gemini_API_Key (Google Gemini API KEY)&lt;/li&gt; &#xA;   &lt;li&gt;Telegram_Bot_Token (Telegram Bot Token)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh&lt;/code&gt; or &lt;code&gt;bash setup.sh&lt;/code&gt; to install and run&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;systemctl status tgbotyh&lt;/code&gt; to check the status&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;systemctl start tgbotyh&lt;/code&gt; to start the service&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;systemctl stop tgbotyh&lt;/code&gt; to stop the service&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;systemctl restart tgbotyh&lt;/code&gt; to restart the service&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manually install&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;pip install -r requirements.txt&lt;/li&gt; &#xA; &lt;li&gt;Get tg token, ask Google or ChatGPT, need get it from &lt;a href=&#34;https://t.me/BotFather&#34;&gt;BotFather&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;export GOOGLE_GEMINI_KEY=${your_google_gemini_apikey}&lt;/li&gt; &#xA; &lt;li&gt;python tg.py ${telegram_bot_token}&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;HOW TO Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Type &lt;code&gt;/gemini: ${message}&lt;/code&gt; to ask&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;gemini: ${message}&lt;/code&gt; and upload picture to ask with picture&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] If you don&#39;t want to use one of these command, you can use &lt;code&gt;--disable-command &amp;lt;command&amp;gt;&lt;/code&gt; option to disable it. This option can be used multiple times.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any issue reports or PRs are welcome.&lt;/li&gt; &#xA; &lt;li&gt;Before PR, use &lt;code&gt;pip install -U black&lt;/code&gt; then &lt;code&gt;black .&lt;/code&gt; first&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledge&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;poster use my repo -&amp;gt; &lt;a href=&#34;https://github.com/yihong0618/GitHubPoster&#34;&gt;https://github.com/yihong0618/GitHubPoster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;pretty map use wonder repo -&amp;gt; &lt;a href=&#34;https://github.com/chrieke/prettymapp&#34;&gt;https://github.com/chrieke/prettymapp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gemini use -&amp;gt; &lt;a href=&#34;https://github.com/google/generative-ai-python&#34;&gt;https://github.com/google/generative-ai-python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thank you, that&#39;s enough. Just enjoy it.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bleedline/aimoneyhunter</title>
    <updated>2023-12-17T01:29:06Z</updated>
    <id>tag:github.com,2023-12-17:/bleedline/aimoneyhunter</id>
    <link href="https://github.com/bleedline/aimoneyhunter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ai副业赚钱大集合，教你如何利用ai做一些副业项目，赚取更多额外收益。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI副业赚钱资讯合集&lt;/h1&gt; &#xA;&lt;p&gt;这是一个ai副业赚钱资讯信息的大合集，将在全网搜索并整理ai副业赚钱的相关方法、技术、工具、以及一些可以赚钱的平台和渠道。 期望能在AI时代，打破信息茧房，让大家都能在这个时代利用AI智能化做副业，赚取工作之余的额外收益。&lt;/p&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%85%B3%E4%BA%8E%E5%90%88%E9%9B%86&#34;&gt;关于合集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%A6%82%E4%BD%95%E5%BC%80%E5%A7%8B%E5%89%AF%E4%B8%9A%E6%9C%80%E7%A8%B3%E5%A6%A5&#34;&gt;如何开始副业最稳妥&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%9B%9B%E6%9D%A1%E5%BB%BA%E8%AE%AE&#34;&gt;四条建议&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E4%B8%80%E6%9D%A1%E7%AD%96%E7%95%A5&#34;&gt;一条策略&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E6%8A%80%E6%9C%AF%E8%B5%9A%E9%92%B1%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB&#34;&gt;AI技术赚钱思路分享&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%8A%80%E6%9C%AF%E8%B5%9A%E9%92%B1%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%A4%E7%9F%A5&#34;&gt;技术赚钱的一些认知&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%B7%B2%E9%AA%8C%E8%AF%81%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF%E8%B5%9A%E9%92%B1%E6%96%B9%E6%A1%88&#34;&gt;已验证的一些技术赚钱方案&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%83%AD%E9%97%A8%E8%AF%AD%E8%A8%80%E5%8D%A1%E7%89%87&#34;&gt;AI自媒体赚钱思路分享&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#ai%E8%84%9A%E6%9C%AC%E8%A7%86%E9%A2%91%E8%B5%9A%E9%92%B1&#34;&gt;ai脚本视频赚钱&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%9B%BE%E7%89%87%E7%BB%98%E6%9C%AC%E6%95%85%E4%BA%8B&#34;&gt;图片绘本故事&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E8%99%9A%E6%8B%9F%E4%BA%BA%E5%8F%A3%E6%92%AD&#34;&gt;虚拟人口播&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%B0%8F%E8%AF%B4%E6%BC%AB%E7%94%BB%E6%8E%A8%E6%96%87&#34;&gt;小说漫画推文&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%94%B5%E5%BD%B1%E5%89%A7%E6%83%85%E8%A7%A3%E8%AF%B4&#34;&gt;电影剧情解说&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%83%AD%E7%82%B9%E9%80%89%E9%A2%98%E6%8A%80%E5%B7%A7&#34;&gt;热点选题技巧&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E8%A7%86%E9%A2%91%E5%8F%98%E5%B9%BB%E8%B5%9A%E9%92%B1&#34;&gt;视频变幻赚钱&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%9E%AC%E6%81%AF%E5%85%A8%E5%AE%87%E5%AE%99&#34;&gt;瞬息全宇宙&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%83%AD%E8%88%9E%E5%B0%8F%E5%A7%90%E5%A7%90&#34;&gt;热舞小姐姐&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%97%A0%E9%99%90%E7%A9%BF%E8%B6%8A%E6%94%BE%E5%A4%A7&amp;amp;%E7%BC%A9%E5%B0%8F%E6%99%AF%E5%88%AB&#34;&gt;无限穿越放大&amp;amp;缩小景别&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E8%A7%86%E9%A2%91%E7%BF%BB%E8%AF%91&amp;amp;%E8%A7%86%E9%A2%91%E6%90%AC%E8%BF%90&#34;&gt;视频翻译&amp;amp;视频搬运&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E5%9B%BE%E7%89%87%E8%B5%9A%E9%92%B1%E5%89%AF%E4%B8%9A&#34;&gt;AI图片赚钱副业&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E4%B8%AA%E4%BA%BA%E5%A4%B4%E5%83%8F&#34;&gt;个人头像&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8&#34;&gt;桌面壁纸&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%A8%A1%E7%89%B9%E6%8D%A2%E8%A3%85&#34;&gt;模特换装&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%95%86%E5%93%81%E5%B9%BF%E5%91%8A&#34;&gt;商品广告&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%84%BF%E7%AB%A5%E7%BB%98%E6%9C%AC&#34;&gt;儿童绘本&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E8%A1%A8%E6%83%85%E5%8C%85&#34;&gt;表情包&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E5%AE%B6%E5%85%B7&amp;amp;%E8%A3%85%E4%BF%AE&#34;&gt;家具&amp;amp;装修&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#LOGO%E5%88%B6%E4%BD%9C&#34;&gt;LOGO制作&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E7%85%A7%E7%89%87%E4%BF%AE%E5%A4%8D&#34;&gt;照片修复&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E6%96%87%E6%A1%88%E8%B5%9A%E9%92%B1%E5%89%AF%E4%B8%9A&#34;&gt;AI文案赚钱副业&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%96%B0%E5%AA%92%E4%BD%93%E6%8E%A8%E6%96%87&#34;&gt;新媒体推文&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E8%AE%BA%E6%96%87%E4%BB%A3%E5%86%99&#34;&gt;AI论文代写&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E5%B0%8F%E8%AF%B4%E7%BC%96%E5%89%A7&#34;&gt;AI小说编剧&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E7%AE%80%E5%8E%86%E6%94%B9%E5%86%99&#34;&gt;AI简历改写&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E9%9F%B3%E9%A2%91%E8%B5%9A%E9%92%B1%E5%89%AF%E4%B8%9A&#34;&gt;AI音频赚钱副业&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E5%A3%B0%E9%9F%B3%E5%85%8B%E9%9A%86&#34;&gt;AI声音克隆&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E9%9F%B3%E4%B9%90&#34;&gt;AI音乐&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#AI%E7%9B%B4%E6%92%AD&#34;&gt;AI直播&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E6%97%A0%E4%BA%BA%E8%B4%A7%E6%9E%B6%E7%9B%B4%E6%92%AD&#34;&gt;无人货架直播&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bleedline/aimoneyhunter/main/#%E8%99%9A%E6%8B%9F%E4%BA%BA%E7%9B%B4%E6%92%AD&#34;&gt;虚拟人直播&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;关于合集&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本合集内容将同步收录至&lt;a href=&#34;https://17yongai.com&#34;&gt;一起用AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;内容主要围绕使用AIGC技术生成内容，通过内容来获取流量或制作对应特定内容的产品进行销售&lt;/li&gt; &#xA; &lt;li&gt;关于程序员在AI方向上的创业选择，我们将分享一些自己的认知&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果你对AI做副业感兴趣，可以关注我们的公众号:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;一起用AI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;如何开始副业最稳妥&lt;/h1&gt; &#xA;&lt;h2&gt;四条建议&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;做内容搞流量，而不是做一个产品去卖&lt;/code&gt; - 搞来流量，流量自然需要产品，找到别人的产品，合作促成交，就可以赚到钱。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;做铲子，而不是挖金子&lt;/code&gt; - 挖金子对项目的全面要求很高，而且风险大，卖铲子往往会更直接。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;贴牌&lt;/code&gt; - 如果你做了一个产品A，记得把产品A当做产品卖给其他人，甚至可以支持贴牌，让大家一起挖金子。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;分销&lt;/code&gt; - 如果你自己在挖金子，你最好想办法能让其他人也挖到金子，分销是个不错的思路。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;不想花钱，就要花时间&lt;/code&gt; - 花钱跟人买认知，然后去执行，风险小但需要付出成本。如果你不想付出成本，就需要付出时间。通过时间来去不断试错，选出来能赚钱的事情做。当然，花钱不一定能买到认知，也可能当了韭菜。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;做资产，而不是卖时间&lt;/code&gt; - 如果你的时间不能同时卖出多份，那和打工没差别。请去累计自己的资产，而不是下场动手做一次性售卖时间的事情。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;一条策略&lt;/h2&gt; &#xA;&lt;p&gt;做自媒体流量，抱着平台吃饭是当下用AI做副业最亲民的一条路径。&lt;/p&gt; &#xA;&lt;h1&gt;AI技术赚钱思路分享&lt;/h1&gt; &#xA;&lt;h2&gt;技术赚钱的一些认知&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;做垂类，而不是做平台&lt;/code&gt; - 如果你想做一个产品，请足够垂直。做GPT套壳的那么多，你很难脱颖而出，但增加一个垂类，你就能被人所知道。比如桌面版GPT？或者自媒体GPT？或者AI女友GPT聊天？…………&lt;/li&gt; &#xA; &lt;li&gt;做顺人性的，而不是逆人性的：做小说就顺人性，搞教育就逆人性&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;从小切入&lt;/code&gt; - 别一上来想搞太大，从最小的地方切入，比如你想做Midjourney绘画站，你可以上来先做个Midjourney API。它这个铲子已经足够可以先挣钱了。&lt;/li&gt; &#xA; &lt;li&gt;开源赚流量，比闭源挖金子强：当你开始开源时，你会源源不断收获资源。远比你闭源没人知道强。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Build in Public&lt;/code&gt; - 结合上一点，这会给你带来极大的公共认同。你有了流量基础，还怕不好启动一个闭源项目吗？&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Copycat&lt;/code&gt; - 获取最新的资讯，去做Copycat，欧美到国内，国内到非洲，有信息茧房就有钱赚。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;做国外而非国内&lt;/code&gt; - 做国外赚美金好一些，因为国内有各种LLM审核问题&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;赚有钱人的钱，赚想赚钱人的钱&lt;/code&gt; - 这两个人群最好付费，其他人群付费成问题&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;该怎么推广&lt;/code&gt; - 如果你问了这个问题，你大概率还没搞明白：你的目标用户，你的核心功能，产品核心卖点，和目标用户聚集地。等你搞明白这四件事儿后，你压根不担心如何完成初期推广。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;已验证的一些技术赚钱方案&lt;/h2&gt; &#xA;&lt;h3&gt;1、套壳站&lt;/h3&gt; &#xA;&lt;p&gt;无论是GPT套壳站，还是MJ套壳站，基本思路就是做个站点，然后搞成SaaS或者支持私有化部署贴牌的，然后几千块一套往外卖给想赚钱的小老板。他们自己去搞流量挣钱。 这种套壳站，往往都离不开分销系统。&lt;/p&gt; &#xA;&lt;h3&gt;2、API聚合&lt;/h3&gt; &#xA;&lt;p&gt;做API封装的，把各类LLM或者AI能力，缝合成API，支持开发者快速调用，省去了自己海外结算账单，部署转发服务器这些错综复杂的事情。 这个主要就是中间商赚差价，找一些号贩子弄点儿便宜的API账号，然后按照比官网低的价格再卖出来，但要持续维护各个版本的变化，以及各种做调度控制，其实还是挺累的。&lt;/p&gt; &#xA;&lt;h3&gt;3、发卡站&lt;/h3&gt; &#xA;&lt;p&gt;各种开源发卡站，自动卖GPT账号，很多号贩子在群里卖账号，都不知道有这些东西。搞个发卡站给他们都能赚钱。。&lt;/p&gt; &#xA;&lt;h3&gt;4、聚焦的AI工具&lt;/h3&gt; &#xA;&lt;p&gt;比如AI写论文，AI自动自媒体发布，AI证件照，把AI能力聚焦到某一个领域或者某一个人群的特定需求上。 这个领域有个特点，必须要刚需才可以。足够聚焦，就会带来力量。&lt;/p&gt; &#xA;&lt;h3&gt;5、模型训练&lt;/h3&gt; &#xA;&lt;p&gt;帮甲方做模型训练，这个生意也挺多的，但是不好交付。因为国内的模型效果上很可能达不到甲方要求。&lt;/p&gt; &#xA;&lt;h1&gt;AI自媒体赚钱思路分享&lt;/h1&gt; &#xA;&lt;h2&gt;ai脚本视频赚钱&lt;/h2&gt; &#xA;&lt;h3&gt;图片绘本故事&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用AI技术重新绘制三国连环画，轻松赚取收益！ &lt;a href=&#34;https://17yongai.com/12163.html&#34;&gt;https://17yongai.com/12163.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;1分钟教你利用ChatGPT+Midjourney做小红书！月入2w+! &lt;a href=&#34;https://17yongai.com/11464.html&#34;&gt;https://17yongai.com/11464.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;人工智能AI助你月入万刀！制作儿童动画视频，轻松实现短视频赚钱和创业梦想！ &lt;a href=&#34;https://17yongai.com/11533.html&#34;&gt;https://17yongai.com/11533.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;在家轻松搬砖赚钱，全程AI操作，手把手教你如何制作民间故事视频赚取丰厚收益！ &lt;a href=&#34;https://17yongai.com/11525.html&#34;&gt;https://17yongai.com/11525.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;虚拟人口播&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;免费AI口播工具推荐！数字人本地部署教程 &lt;a href=&#34;https://17yongai.com/12155.html&#34;&gt;https://17yongai.com/12155.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;免费生成AI数字人！完美应对你的智能化需求！副业方向推荐！ &lt;a href=&#34;https://17yongai.com/11657.html&#34;&gt;https://17yongai.com/11657.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ChatGPT与AI数字人联手，普通人也能轻松实现财富增长！ &lt;a href=&#34;https://17yongai.com/11457.html&#34;&gt;https://17yongai.com/11457.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ChatGPT助力AI数字人，开启自媒体财富新时代！普通人也能轻松产出爆款数字人视频，让财富滚滚而来！ &lt;a href=&#34;https://17yongai.com/11455.html&#34;&gt;https://17yongai.com/11455.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;小说漫画推文&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;揭秘！小说秒变漫画，你绝对想不到的震撼效果！ &lt;a href=&#34;https://17yongai.com/11423.html&#34;&gt;https://17yongai.com/11423.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【免费教程】如何用AI快速制作小说漫画？一天2970，轻松副业！ &lt;a href=&#34;https://17yongai.com/11549.html&#34;&gt;https://17yongai.com/11549.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;在家也能轻松赚钱！全程AI操作，将视频“动漫化”创造收益！快来学习这个简单方法吧！ &lt;a href=&#34;https://17yongai.com/11517.html&#34;&gt;https://17yongai.com/11517.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【新玩法揭秘】如何使用AI工具赚取小说漫画创作的收入？ &lt;a href=&#34;https://17yongai.com/11543.html&#34;&gt;https://17yongai.com/11543.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;电影剧情解说&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【AI副业赚钱】用ChatGPT兼职做电影解说，三天涨粉100000！！！ &lt;a href=&#34;https://17yongai.com/11617.html&#34;&gt;https://17yongai.com/11617.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;用AI生成电影解说视频，半年狂赚43W！只要找对方法，其实富起来也就这两年！ &lt;a href=&#34;https://17yongai.com/11622.html&#34;&gt;https://17yongai.com/11622.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;通过ChatGPT写电影解说赚钱，每天加菜准备长胖！ &lt;a href=&#34;https://17yongai.com/11624.html&#34;&gt;https://17yongai.com/11624.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI快速制作电影解说视频，三天收获3700！操作简单，分享详细实操教程！ &lt;a href=&#34;https://17yongai.com/11626.html&#34;&gt;https://17yongai.com/11626.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;热点选题技巧&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用AI做短视频简直太赚了，AI赚钱新玩法！！！ &lt;a href=&#34;https://17yongai.com/11459.html&#34;&gt;https://17yongai.com/11459.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI自媒体】黑暗心理学：如何在抖音赚钱变现？ &lt;a href=&#34;https://17yongai.com/11538.html&#34;&gt;https://17yongai.com/11538.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI头条玩法！搬砖变现超简单！ &lt;a href=&#34;https://17yongai.com/11439.html&#34;&gt;https://17yongai.com/11439.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;想要月入万刀？试试人工智能AI制作病毒式励志视频吧！跟随ChatGPT教程，轻松开启短视频赚钱和创业之旅，实现你的财富梦想！ &lt;a href=&#34;https://17yongai.com/11529.html&#34;&gt;https://17yongai.com/11529.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;视频变幻赚钱&lt;/h2&gt; &#xA;&lt;h3&gt;瞬息全宇宙&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;科技感转场，酷炫动画插件，简简单单马上学会做爆点视频！ &lt;a href=&#34;https://17yongai.com/11474.html&#34;&gt;https://17yongai.com/11474.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【教程】AI绘画生成视频变动画，瞬息全宇宙教你如何操作！ &lt;a href=&#34;https://17yongai.com/11552.html&#34;&gt;https://17yongai.com/11552.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MJ无限穿越效果教程来啦！涨粉率奇高的一个视频效果技巧！ &lt;a href=&#34;https://17yongai.com/11477.html&#34;&gt;https://17yongai.com/11477.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI自媒体】瞬息全宇宙动画制作秘笈，快来学习！ &lt;a href=&#34;https://17yongai.com/11555.html&#34;&gt;https://17yongai.com/11555.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;热舞小姐姐&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【教程】AnimateDiff AI插件安装和使用指南 &lt;a href=&#34;https://17yongai.com/11571.html&#34;&gt;https://17yongai.com/11571.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI自媒体必备】animatediff迅速玩转Comfy UI，视频效果制作幕后揭秘！ &lt;a href=&#34;https://17yongai.com/11569.html&#34;&gt;https://17yongai.com/11569.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI自媒体变现 | Comfy UI动效制作全流程解析 &lt;a href=&#34;https://17yongai.com/11558.html&#34;&gt;https://17yongai.com/11558.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;学会就能接单做兼职！纯AI丝滑长视频教程来咯！ 用到了comfyUI里的animatediff！ &lt;a href=&#34;https://17yongai.com/11479.html&#34;&gt;https://17yongai.com/11479.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;无限穿越放大&amp;amp;缩小景别&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;掌握SD无限穿越，轻松制作无限放大视频！ &lt;a href=&#34;https://17yongai.com/11629.html&#34;&gt;https://17yongai.com/11629.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【MJ无限穿越】新玩法大揭秘！怎么做无限扩展？ &lt;a href=&#34;https://17yongai.com/11632.html&#34;&gt;https://17yongai.com/11632.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Midjourney新玩法：无限穿越特效制作教程 &lt;a href=&#34;https://17yongai.com/11616.html&#34;&gt;https://17yongai.com/11616.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【MJ新玩法】无限放大无限穿越视频制作教程 &lt;a href=&#34;https://17yongai.com/11614.html&#34;&gt;https://17yongai.com/11614.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;视频翻译&amp;amp;视频搬运&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AI视频搬运工具，助你一键搬运国外视频 &lt;a href=&#34;https://17yongai.com/12159.html&#34;&gt;https://17yongai.com/12159.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;国外视频搬运攻略：如何将国外视频搬运到国内平台？ &lt;a href=&#34;https://17yongai.com/12153.html&#34;&gt;https://17yongai.com/12153.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;功能强大上手简单还免费的AI翻译同声传译！赶快拿来用！去做优质作品！ &lt;a href=&#34;https://17yongai.com/11640.html&#34;&gt;https://17yongai.com/11640.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;自动翻译及配音！效果自己看！超强工具助你直接涨粉引流变现！ &lt;a href=&#34;https://17yongai.com/11635.html&#34;&gt;https://17yongai.com/11635.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AI图片赚钱副业&lt;/h2&gt; &#xA;&lt;h3&gt;个人头像&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【副业】0成本小红书AI头像壁纸赚钱骚操作，坚持1个月日入1000元真香！ &lt;a href=&#34;https://17yongai.com/11447.html&#34;&gt;https://17yongai.com/11447.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;用AI制作头像快速搞钱，一个月几千块轻松到手！ &lt;a href=&#34;https://17yongai.com/11659.html&#34;&gt;https://17yongai.com/11659.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Midjourney🚀生成这样的旧漫头像 &lt;a href=&#34;https://17yongai.com/9318.html&#34;&gt;https://17yongai.com/9318.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;怎样让你的AI头像更“像”你？超详细教程来了 &lt;a href=&#34;https://17yongai.com/9353.html&#34;&gt;https://17yongai.com/9353.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;桌面壁纸&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AI壁纸图片副业0基础多重变现！一分钟学会！ &lt;a href=&#34;https://17yongai.com/11333.html&#34;&gt;https://17yongai.com/11333.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Midjourney生成精美的二次元壁纸 &lt;a href=&#34;https://17yongai.com/9398.html&#34;&gt;https://17yongai.com/9398.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;今日份壁纸请查收 &lt;a href=&#34;https://17yongai.com/9413.html&#34;&gt;https://17yongai.com/9413.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Midjourney生成壁纸-世界树 &lt;a href=&#34;https://17yongai.com/9449.html&#34;&gt;https://17yongai.com/9449.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;模特换装&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用MJ做模特换装，不用本地部署，直接上手做 ，效果很好！ &lt;a href=&#34;https://17yongai.com/11692.html&#34;&gt;https://17yongai.com/11692.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI高仿真模特变装教程！为你的开店成本节省一大笔！ &lt;a href=&#34;https://17yongai.com/11683.html&#34;&gt;https://17yongai.com/11683.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;免费100%保留原型换装教程！电商福音！ &lt;a href=&#34;https://17yongai.com/11690.html&#34;&gt;https://17yongai.com/11690.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;一键搞定AI模特换装！无需SD和MJ，出图超简单！ &lt;a href=&#34;https://17yongai.com/11698.html&#34;&gt;https://17yongai.com/11698.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;商品广告&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自己在家直接输出高级广告！老板劲省广告费！副业者猛赚广告收入！五分钟学会！ &lt;a href=&#34;https://17yongai.com/11433.html&#34;&gt;https://17yongai.com/11433.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI搞钱】利用AI快速生成商品包装 &lt;a href=&#34;https://17yongai.com/9158.html&#34;&gt;https://17yongai.com/9158.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;设计无难事 I 草图一键生成效果图 &lt;a href=&#34;https://17yongai.com/9254.html&#34;&gt;https://17yongai.com/9254.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Midjourney生成产品图-香水 &lt;a href=&#34;https://17yongai.com/9699.html&#34;&gt;https://17yongai.com/9699.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;儿童绘本&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抓住机会！快速入手赚钱！AI儿童绘本制作不学绝对后悔！ &lt;a href=&#34;https://17yongai.com/11668.html&#34;&gt;https://17yongai.com/11668.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI绘图搞钱】快速做手账图 &lt;a href=&#34;https://17yongai.com/9149.html&#34;&gt;https://17yongai.com/9149.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI绘图搞钱】快速做人物手账图 &lt;a href=&#34;https://17yongai.com/9420.html&#34;&gt;https://17yongai.com/9420.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;制作人物手账-消防员小可爱 &lt;a href=&#34;https://17yongai.com/9495.html&#34;&gt;https://17yongai.com/9495.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;表情包&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我用AI生成的表情包搞到钱了！每日都有进账！！ &lt;a href=&#34;https://17yongai.com/11672.html&#34;&gt;https://17yongai.com/11672.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;想要轻松赚取额外收入？试试AI图片副业吧！只需2分钟自动生成表情包，即可获得永久被动收入！ &lt;a href=&#34;https://17yongai.com/11488.html&#34;&gt;https://17yongai.com/11488.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💰用Ai搞钱｜批量生成表情包 &lt;a href=&#34;https://17yongai.com/9115.html&#34;&gt;https://17yongai.com/9115.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI表情包制作教程 超简单 &lt;a href=&#34;https://17yongai.com/9269.html&#34;&gt;https://17yongai.com/9269.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;家具&amp;amp;装修&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【Midjourney教程】如何用AI装修毛坯房客厅？ &lt;a href=&#34;https://17yongai.com/11680.html&#34;&gt;https://17yongai.com/11680.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MJ制作建筑图片-手绘风建筑 &lt;a href=&#34;https://17yongai.com/10435.html&#34;&gt;https://17yongai.com/10435.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MJ制作建筑图片-古风建筑图 &lt;a href=&#34;https://17yongai.com/10498.html&#34;&gt;https://17yongai.com/10498.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MJ制作建筑图片-室内建筑图 &lt;a href=&#34;https://17yongai.com/10502.html&#34;&gt;https://17yongai.com/10502.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LOGO制作&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【AI副业】ChatGPT+Midjourney 2分钟自动生成标志Logo！学会接单日入500！（附教程） &lt;a href=&#34;https://17yongai.com/11466.html&#34;&gt;https://17yongai.com/11466.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【Midjourney教程】如何快速设计品牌logo？ &lt;a href=&#34;https://17yongai.com/11684.html&#34;&gt;https://17yongai.com/11684.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AIlogo制作教程】Midjourney教你如何轻松设计logo &lt;a href=&#34;https://17yongai.com/11687.html&#34;&gt;https://17yongai.com/11687.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI海报LOGO设计】用AI软件StableDiffusion设计各种风格的海报字体logo &lt;a href=&#34;https://17yongai.com/11700.html&#34;&gt;https://17yongai.com/11700.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;照片修复&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【AI绘画】黑白老照片修复上色教程，让回忆更清晰！ &lt;a href=&#34;https://17yongai.com/11670.html&#34;&gt;https://17yongai.com/11670.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI图像修复神器】一键修复老照片，提高画质！ &lt;a href=&#34;https://17yongai.com/11665.html&#34;&gt;https://17yongai.com/11665.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【新玩法】PS+AI带你修复老照片赚钱 &lt;a href=&#34;https://17yongai.com/11674.html&#34;&gt;https://17yongai.com/11674.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;老照片修复攻略：AI绘画轻松接单赚钱 &lt;a href=&#34;https://17yongai.com/11677.html&#34;&gt;https://17yongai.com/11677.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AI文案赚钱副业&lt;/h2&gt; &#xA;&lt;h3&gt;新媒体推文&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;短视频文案制作思维教学！全干货！ &lt;a href=&#34;https://17yongai.com/11735.html&#34;&gt;https://17yongai.com/11735.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;新媒体脚本如何高效率创作？AI解决方案如下！ &lt;a href=&#34;https://17yongai.com/11742.html&#34;&gt;https://17yongai.com/11742.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【副业】ChatGPT批量搞定小红书文案的骚操作！篇篇都是爆款！ &lt;a href=&#34;https://17yongai.com/11733.html&#34;&gt;https://17yongai.com/11733.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;用GPT生成新媒体文案！效率拉满，收益提高！ &lt;a href=&#34;https://17yongai.com/11731.html&#34;&gt;https://17yongai.com/11731.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AI论文代写&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中科院美术专业版GPT Academic免费润色学术论文！ &lt;a href=&#34;https://17yongai.com/11745.html&#34;&gt;https://17yongai.com/11745.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI写论文神器】一键润色、查重，轻松搞定学术写作！ &lt;a href=&#34;https://17yongai.com/11740.html&#34;&gt;https://17yongai.com/11740.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI写论文】如何利用AI工具撰写论文？ &lt;a href=&#34;https://17yongai.com/11738.html&#34;&gt;https://17yongai.com/11738.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【慎用AI写作工具】如何避免论文风险？ &lt;a href=&#34;https://17yongai.com/11727.html&#34;&gt;https://17yongai.com/11727.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AI小说编剧&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【AI编剧神器来袭】一键生成完美剧本，轻松成为编剧达人！ &lt;a href=&#34;https://17yongai.com/11716.html&#34;&gt;https://17yongai.com/11716.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI写小说指南】教你如何玩转AI创意写作 &lt;a href=&#34;https://17yongai.com/11714.html&#34;&gt;https://17yongai.com/11714.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI写作秘籍】7步教你让ChatGPT成为你的小说助手！ &lt;a href=&#34;https://17yongai.com/11547.html&#34;&gt;https://17yongai.com/11547.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI写小说指令教学，提高写作效率 &lt;a href=&#34;https://17yongai.com/11708.html&#34;&gt;https://17yongai.com/11708.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AI简历改写&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;无需GPT的AI简历生成器！助你求职之路更有竞争力！ &lt;a href=&#34;https://17yongai.com/11713.html&#34;&gt;https://17yongai.com/11713.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;应届生的从0到offer：手把手教你用AI打造出面试率99%的简历 &lt;a href=&#34;https://17yongai.com/11707.html&#34;&gt;https://17yongai.com/11707.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;求职神器ChatGPT帮你三分钟搞定从0到满分简历 &lt;a href=&#34;https://17yongai.com/11705.html&#34;&gt;https://17yongai.com/11705.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ChatGPT+简历修改服务，月盈利过万 | 保姆级教程公开，人人可做！ &lt;a href=&#34;https://17yongai.com/11721.html&#34;&gt;https://17yongai.com/11721.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AI音频赚钱副业&lt;/h2&gt; &#xA;&lt;h3&gt;AI声音克隆&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;10分钟学会声音克隆！一键启动包发布！在家自己做AI音频副业！ &lt;a href=&#34;https://17yongai.com/11451.html&#34;&gt;https://17yongai.com/11451.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;最适合新手来做的声音克隆！非常友好！ &lt;a href=&#34;https://17yongai.com/11770.html&#34;&gt;https://17yongai.com/11770.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI变声翻唱教程！做优质内容涨粉！ &lt;a href=&#34;https://17yongai.com/11756.html&#34;&gt;https://17yongai.com/11756.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;低配也能做AI变声！一起来体验DDSP！ &lt;a href=&#34;https://17yongai.com/11765.html&#34;&gt;https://17yongai.com/11765.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AI音乐&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AI音乐生成神器大揭秘！stable audio等工具任你选择 &lt;a href=&#34;https://17yongai.com/12179.html&#34;&gt;https://17yongai.com/12179.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI音乐】音乐人失业！5分钟免费生成歌曲，作曲+填词+自唱！用AI音乐赚钱，从零基础变成创作歌手！ &lt;a href=&#34;https://17yongai.com/11470.html&#34;&gt;https://17yongai.com/11470.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI音乐新利器】Suno：一键生成多样音乐，中英文歌词轻松应对 &lt;a href=&#34;https://17yongai.com/11755.html&#34;&gt;https://17yongai.com/11755.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AI音乐生成工具全攻略，轻松创作免版权音乐！ &lt;a href=&#34;https://17yongai.com/11759.html&#34;&gt;https://17yongai.com/11759.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AI直播&lt;/h2&gt; &#xA;&lt;h3&gt;无人货架直播&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【AI直播】最新无人直播语音技术，还能听出来不是真人讲的吗？ &lt;a href=&#34;https://17yongai.com/11794.html&#34;&gt;https://17yongai.com/11794.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【教程】AI主播能自己介绍商品，回复无人直播间各种互动！ &lt;a href=&#34;https://17yongai.com/11796.html&#34;&gt;https://17yongai.com/11796.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;无人直播玩法来这里学习！ &lt;a href=&#34;https://17yongai.com/11792.html&#34;&gt;https://17yongai.com/11792.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI直播】搭建自己的AI无人直播间！零基础入手赚大钱！ &lt;a href=&#34;https://17yongai.com/11800.html&#34;&gt;https://17yongai.com/11800.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;虚拟人直播&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;制作属于你的AI直播间！立刻生成你的数字形象！ &lt;a href=&#34;https://17yongai.com/11779.html&#34;&gt;https://17yongai.com/11779.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【AI直播】数字人生成项目！直播必备技能！ &lt;a href=&#34;https://17yongai.com/11785.html&#34;&gt;https://17yongai.com/11785.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;一张图片就能虚拟直播！这个门槛确定不来看看吗？ &lt;a href=&#34;https://17yongai.com/11790.html&#34;&gt;https://17yongai.com/11790.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;【虚拟人项目】开源聊天虚拟人项目！最有搞头的项目！ &lt;a href=&#34;https://17yongai.com/11781.html&#34;&gt;https://17yongai.com/11781.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>srush/Tensor-Puzzles</title>
    <updated>2023-12-17T01:29:06Z</updated>
    <id>tag:github.com,2023-12-17:/srush/Tensor-Puzzles</id>
    <link href="https://github.com/srush/Tensor-Puzzles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solve puzzles. Improve your pytorch.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tensor Puzzles&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;by &lt;a href=&#34;http://rush-nlp.com&#34;&gt;Sasha Rush&lt;/a&gt; - &lt;a href=&#34;https://twitter.com/srush_nlp&#34;&gt;srush_nlp&lt;/a&gt; (with Marcos Treviso)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When learning a tensor programming language like PyTorch or Numpy it is tempting to rely on the standard library (or more honestly StackOverflow) to find a magic function for everything. But in practice, the tensor language is extremely expressive, and you can do most things from first principles and clever use of broadcasting.&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of 21 tensor puzzles. Like chess puzzles these are not meant to simulate the complexity of a real program, but to practice in a simplified environment. Each puzzle asks you to reimplement one function in the NumPy standard library without magic.&lt;/p&gt; &#xA;&lt;p&gt;I recommend running in Colab. Click here and copy the notebook to get start.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are interested, there is also a youtube walkthrough of the puzzles&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/Hafo7hIl8MU&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/SiwTAyyvt5s/default.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;!pip install -qqq torchtyping hypothesis pytest git+https://github.com/danoneata/chalk@srush-patch-1&#xA;!wget -q https://github.com/srush/Tensor-Puzzles/raw/main/lib.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lib import draw_examples, make_test, run_test&#xA;import torch&#xA;import numpy as np&#xA;from torchtyping import TensorType as TT&#xA;tensor = torch.tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;These puzzles are about &lt;em&gt;broadcasting&lt;/em&gt;. Know this rule.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/FQywor0WYAssn7Y?format=png&amp;amp;name=large&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Each puzzle needs to be solved in 1 line (&amp;lt;80 columns) of code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You are allowed @, arithmetic, comparison, &lt;code&gt;shape&lt;/code&gt;, any indexing (e.g. &lt;code&gt;a[:j], a[:, None], a[arange(10)]&lt;/code&gt;), and previous puzzle functions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You are &lt;em&gt;not allowed&lt;/em&gt; anything else. No &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;, &lt;code&gt;squeeze&lt;/code&gt;, &lt;code&gt;tensor&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can start with these two functions:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def arange(i: int):&#xA;    &#34;Use this function to replace a for-loop.&#34;&#xA;    return torch.tensor(range(i))&#xA;&#xA;draw_examples(&#34;arange&#34;, [{&#34;&#34; : arange(i)} for i in [5, 3, 9]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_7_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Example of broadcasting.&#xA;examples = [(arange(4), arange(5)[:, None]) ,&#xA;            (arange(3)[:, None], arange(2))]&#xA;draw_examples(&#34;broadcast&#34;, [{&#34;a&#34;: a, &#34;b&#34;:b, &#34;ret&#34;: a + b} for a, b in examples])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_8_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def where(q, a, b):&#xA;    &#34;Use this function to replace an if-statement.&#34;&#xA;    return (q * a) + (~q) * b&#xA;&#xA;# In diagrams, orange is positive/True, where is zero/False, and blue is negative.&#xA;&#xA;examples = [(tensor([False]), tensor([10]), tensor([0])),&#xA;            (tensor([False, True]), tensor([1, 1]), tensor([-10, 0])),&#xA;            (tensor([False, True]), tensor([1]), tensor([-10, 0])),&#xA;            (tensor([[False, True], [True, False]]), tensor([1]), tensor([-10, 0])),&#xA;            (tensor([[False, True], [True, False]]), tensor([[0], [10]]), tensor([-10, 0])),&#xA;           ]&#xA;draw_examples(&#34;where&#34;, [{&#34;q&#34;: q, &#34;a&#34;:a, &#34;b&#34;:b, &#34;ret&#34;: where(q, a, b)} for q, a, b in examples])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_9_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Puzzle 1 - ones&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.ones.html&#34;&gt;ones&lt;/a&gt; - the vector of all ones.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def ones_spec(out):&#xA;    for i in range(len(out)):&#xA;        out[i] = 1&#xA;        &#xA;def ones(i: int) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_ones = make_test(&#34;one&#34;, ones, ones_spec, add_sizes=[&#34;i&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_11_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_ones)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 2 - sum&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.sum.html&#34;&gt;sum&lt;/a&gt; - the sum of a vector.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def sum_spec(a, out):&#xA;    out[0] = 0&#xA;    for i in range(len(a)):&#xA;        out[0] += a[i]&#xA;        &#xA;def sum(a: TT[&#34;i&#34;]) -&amp;gt; TT[1]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_sum = make_test(&#34;sum&#34;, sum, sum_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_14_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_sum)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 3 - outer&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.outer.html&#34;&gt;outer&lt;/a&gt; - the outer product of two vectors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def outer_spec(a, b, out):&#xA;    for i in range(len(out)):&#xA;        for j in range(len(out[0])):&#xA;            out[i][j] = a[i] * b[j]&#xA;            &#xA;def outer(a: TT[&#34;i&#34;], b: TT[&#34;j&#34;]) -&amp;gt; TT[&#34;i&#34;, &#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;    &#xA;test_outer = make_test(&#34;outer&#34;, outer, outer_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_17_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_outer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 4 - diag&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.diag.html&#34;&gt;diag&lt;/a&gt; - the diagonal vector of a square matrix.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def diag_spec(a, out):&#xA;    for i in range(len(a)):&#xA;        out[i] = a[i][i]&#xA;        &#xA;def diag(a: TT[&#34;i&#34;, &#34;i&#34;]) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_diag = make_test(&#34;diag&#34;, diag, diag_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_20_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_diag)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 5 - eye&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.eye.html&#34;&gt;eye&lt;/a&gt; - the identity matrix.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def eye_spec(out):&#xA;    for i in range(len(out)):&#xA;        out[i][i] = 1&#xA;        &#xA;def eye(j: int) -&amp;gt; TT[&#34;j&#34;, &#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;    &#xA;test_eye = make_test(&#34;eye&#34;, eye, eye_spec, add_sizes=[&#34;j&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_23_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_eye)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 6 - triu&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.triu.html&#34;&gt;triu&lt;/a&gt; - the upper triangular matrix.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def triu_spec(out):&#xA;    for i in range(len(out)):&#xA;        for j in range(len(out)):&#xA;            if i &amp;lt;= j:&#xA;                out[i][j] = 1&#xA;            else:&#xA;                out[i][j] = 0&#xA;                &#xA;def triu(j: int) -&amp;gt; TT[&#34;j&#34;, &#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_triu = make_test(&#34;triu&#34;, triu, triu_spec, add_sizes=[&#34;j&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_26_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_triu)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 7 - cumsum&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.cumsum.html&#34;&gt;cumsum&lt;/a&gt; - the cumulative sum.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def cumsum_spec(a, out):&#xA;    total = 0&#xA;    for i in range(len(out)):&#xA;        out[i] = total + a[i]&#xA;        total += a[i]&#xA;&#xA;def cumsum(a: TT[&#34;i&#34;]) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_cumsum = make_test(&#34;cumsum&#34;, cumsum, cumsum_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_29_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_cumsum)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 8 - diff&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.diff.html&#34;&gt;diff&lt;/a&gt; - the running difference.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def diff_spec(a, out):&#xA;    out[0] = a[0]&#xA;    for i in range(1, len(out)):&#xA;        out[i] = a[i] - a[i - 1]&#xA;&#xA;def diff(a: TT[&#34;i&#34;], i: int) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_diff = make_test(&#34;diff&#34;, diff, diff_spec, add_sizes=[&#34;i&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_32_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_diff)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 9 - vstack&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.vstack.html&#34;&gt;vstack&lt;/a&gt; - the matrix of two vectors&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def vstack_spec(a, b, out):&#xA;    for i in range(len(out[0])):&#xA;        out[0][i] = a[i]&#xA;        out[1][i] = b[i]&#xA;&#xA;def vstack(a: TT[&#34;i&#34;], b: TT[&#34;i&#34;]) -&amp;gt; TT[2, &#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_vstack = make_test(&#34;vstack&#34;, vstack, vstack_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_35_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_vstack)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 10 - roll&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.roll.html&#34;&gt;roll&lt;/a&gt; - the vector shifted 1 circular position.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def roll_spec(a, out):&#xA;    for i in range(len(out)):&#xA;        if i + 1 &amp;lt; len(out):&#xA;            out[i] = a[i + 1]&#xA;        else:&#xA;            out[i] = a[i + 1 - len(out)]&#xA;            &#xA;def roll(a: TT[&#34;i&#34;], i: int) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_roll = make_test(&#34;roll&#34;, roll, roll_spec, add_sizes=[&#34;i&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_38_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_roll)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 11 - flip&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.flip.html&#34;&gt;flip&lt;/a&gt; - the reversed vector&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def flip_spec(a, out):&#xA;    for i in range(len(out)):&#xA;        out[i] = a[len(out) - i - 1]&#xA;        &#xA;def flip(a: TT[&#34;i&#34;], i: int) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_flip = make_test(&#34;flip&#34;, flip, flip_spec, add_sizes=[&#34;i&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_41_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_flip)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 12 - compress&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.compress.html&#34;&gt;compress&lt;/a&gt; - keep only masked entries (left-aligned).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def compress_spec(g, v, out):&#xA;    j = 0&#xA;    for i in range(len(g)):&#xA;        if g[i]:&#xA;            out[j] = v[i]&#xA;            j += 1&#xA;            &#xA;def compress(g: TT[&#34;i&#34;, bool], v: TT[&#34;i&#34;], i:int) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_compress = make_test(&#34;compress&#34;, compress, compress_spec, add_sizes=[&#34;i&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_44_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_compress)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 13 - pad_to&lt;/h2&gt; &#xA;&lt;p&gt;Compute pad_to - eliminate or add 0s to change size of vector.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def pad_to_spec(a, out):&#xA;    for i in range(min(len(out), len(a))):&#xA;        out[i] = a[i]&#xA;&#xA;&#xA;def pad_to(a: TT[&#34;i&#34;], i: int, j: int) -&amp;gt; TT[&#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;test_pad_to = make_test(&#34;pad_to&#34;, pad_to, pad_to_spec, add_sizes=[&#34;i&#34;, &#34;j&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_47_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_pad_to)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 14 - sequence_mask&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/sequence_mask&#34;&gt;sequence_mask&lt;/a&gt; - pad out to length per batch.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def sequence_mask_spec(values, length, out):&#xA;    for i in range(len(out)):&#xA;        for j in range(len(out[0])):&#xA;            if j &amp;lt; length[i]:&#xA;                out[i][j] = values[i][j]&#xA;            else:&#xA;                out[i][j] = 0&#xA;    &#xA;def sequence_mask(values: TT[&#34;i&#34;, &#34;j&#34;], length: TT[&#34;i&#34;, int]) -&amp;gt; TT[&#34;i&#34;, &#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;def constraint_set_length(d):&#xA;    d[&#34;length&#34;] = d[&#34;length&#34;] % d[&#34;values&#34;].shape[1]&#xA;    return d&#xA;&#xA;&#xA;test_sequence = make_test(&#34;sequence_mask&#34;,&#xA;    sequence_mask, sequence_mask_spec, constraint=constraint_set_length&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_50_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_sequence)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 15 - bincount&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.bincount.html&#34;&gt;bincount&lt;/a&gt; - count number of times an entry was seen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def bincount_spec(a, out):&#xA;    for i in range(len(a)):&#xA;        out[a[i]] += 1&#xA;        &#xA;def bincount(a: TT[&#34;i&#34;], j: int) -&amp;gt; TT[&#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;def constraint_set_max(d):&#xA;    d[&#34;a&#34;] = d[&#34;a&#34;] % d[&#34;return&#34;].shape[0]&#xA;    return d&#xA;&#xA;&#xA;test_bincount = make_test(&#34;bincount&#34;,&#xA;    bincount, bincount_spec, add_sizes=[&#34;j&#34;], constraint=constraint_set_max&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_53_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_bincount)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 16 - scatter_add&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://pytorch-scatter.readthedocs.io/en/1.3.0/functions/add.html&#34;&gt;scatter_add&lt;/a&gt; - add together values that link to the same location.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def scatter_add_spec(values, link, out):&#xA;    for j in range(len(values)):&#xA;        out[link[j]] += values[j]&#xA;        &#xA;def scatter_add(values: TT[&#34;i&#34;], link: TT[&#34;i&#34;], j: int) -&amp;gt; TT[&#34;j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;&#xA;def constraint_set_max(d):&#xA;    d[&#34;link&#34;] = d[&#34;link&#34;] % d[&#34;return&#34;].shape[0]&#xA;    return d&#xA;&#xA;&#xA;test_scatter_add = make_test(&#34;scatter_add&#34;,&#xA;    scatter_add, scatter_add_spec, add_sizes=[&#34;j&#34;], constraint=constraint_set_max&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_56_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_scatter_add)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 17 - flatten&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.ndarray.flatten.html&#34;&gt;flatten&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def flatten_spec(a, out):&#xA;    k = 0&#xA;    for i in range(len(a)):&#xA;        for j in range(len(a[0])):&#xA;            out[k] = a[i][j]&#xA;            k += 1&#xA;&#xA;def flatten(a: TT[&#34;i&#34;, &#34;j&#34;], i:int, j:int) -&amp;gt; TT[&#34;i * j&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_flatten = make_test(&#34;flatten&#34;, flatten, flatten_spec, add_sizes=[&#34;i&#34;, &#34;j&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_59_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_flatten)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 18 - linspace&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.linspace.html&#34;&gt;linspace&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def linspace_spec(i, j, out):&#xA;    for k in range(len(out)):&#xA;        out[k] = float(i + (j - i) * k / max(1, len(out) - 1))&#xA;&#xA;def linspace(i: TT[1], j: TT[1], n: int) -&amp;gt; TT[&#34;n&#34;, float]:&#xA;    raise NotImplementedError&#xA;&#xA;test_linspace = make_test(&#34;linspace&#34;, linspace, linspace_spec, add_sizes=[&#34;n&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_62_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_linspace)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 19 - heaviside&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.heaviside.html&#34;&gt;heaviside&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def heaviside_spec(a, b, out):&#xA;    for k in range(len(out)):&#xA;        if a[k] == 0:&#xA;            out[k] = b[k]&#xA;        else:&#xA;            out[k] = int(a[k] &amp;gt; 0)&#xA;&#xA;def heaviside(a: TT[&#34;i&#34;], b: TT[&#34;i&#34;]) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_heaviside = make_test(&#34;heaviside&#34;, heaviside, heaviside_spec)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_65_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# run_test(test_heaviside)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Puzzle 20 - repeat (1d)&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://pytorch.org/docs/stable/generated/torch.Tensor.repeat.html&#34;&gt;repeat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def repeat_spec(a, d, out):&#xA;    for i in range(d[0]):&#xA;        for k in range(len(a)):&#xA;            out[i][k] = a[k]&#xA;&#xA;def constraint_set(d):&#xA;    d[&#34;d&#34;][0] = d[&#34;return&#34;].shape[0]&#xA;    return d&#xA;&#xA;            &#xA;def repeat(a: TT[&#34;i&#34;], d: TT[1]) -&amp;gt; TT[&#34;d&#34;, &#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_repeat = make_test(&#34;repeat&#34;, repeat, repeat_spec, constraint=constraint_set)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_68_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Puzzle 21 - bucketize&lt;/h2&gt; &#xA;&lt;p&gt;Compute &lt;a href=&#34;https://pytorch.org/docs/stable/generated/torch.bucketize.html&#34;&gt;bucketize&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def bucketize_spec(v, boundaries, out):&#xA;    for i, val in enumerate(v):&#xA;        out[i] = 0&#xA;        for j in range(len(boundaries)-1):&#xA;            if val &amp;gt;= boundaries[j]:&#xA;                out[i] = j + 1&#xA;        if val &amp;gt;= boundaries[-1]:&#xA;            out[i] = len(boundaries)&#xA;&#xA;&#xA;def constraint_set(d):&#xA;    d[&#34;boundaries&#34;] = np.abs(d[&#34;boundaries&#34;]).cumsum()&#xA;    return d&#xA;&#xA;            &#xA;def bucketize(v: TT[&#34;i&#34;], boundaries: TT[&#34;j&#34;]) -&amp;gt; TT[&#34;i&#34;]:&#xA;    raise NotImplementedError&#xA;&#xA;test_bucketize = make_test(&#34;bucketize&#34;, bucketize, bucketize_spec,&#xA;                           constraint=constraint_set)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/srush/Tensor-Puzzles/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_69_0.svg?sanitize=true&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Speed Run Mode!&lt;/h2&gt; &#xA;&lt;p&gt;What is the smallest you can make each of these?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import inspect&#xA;fns = (ones, sum, outer, diag, eye, triu, cumsum, diff, vstack, roll, flip,&#xA;       compress, pad_to, sequence_mask, bincount, scatter_add)&#xA;&#xA;for fn in fns:&#xA;    lines = [l for l in inspect.getsource(fn).split(&#34;\n&#34;) if not l.strip().startswith(&#34;#&#34;)]&#xA;    &#xA;    if len(lines) &amp;gt; 3:&#xA;        print(fn.__name__, len(lines[2]), &#34;(more than 1 line)&#34;)&#xA;    else:&#xA;        print(fn.__name__, len(lines[1]))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;ones 29&#xA;sum 29&#xA;outer 29&#xA;diag 29&#xA;eye 29&#xA;triu 29&#xA;cumsum 29&#xA;diff 29&#xA;vstack 29&#xA;roll 29&#xA;flip 29&#xA;compress 29&#xA;pad_to 29&#xA;sequence_mask 29&#xA;bincount 29&#xA;scatter_add 29&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>