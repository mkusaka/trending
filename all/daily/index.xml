<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-26T01:29:31Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>QwenLM/Qwen3-Coder</title>
    <updated>2025-07-26T01:29:31Z</updated>
    <id>tag:github.com,2025-07-26:/QwenLM/Qwen3-Coder</id>
    <link href="https://github.com/QwenLM/Qwen3-Coder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qwen3-Coder is the code version of Qwen3, the large language model series developed by Qwen team, Alibaba Cloud.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/qwen3_coder.png&#34; width=&#34;400&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/qwen3-coder-main.jpg&#34; width=&#34;800&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; üíú &lt;a href=&#34;https://chat.qwenlm.ai/&#34;&gt;&lt;b&gt;Qwen Chat&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü§ó &lt;a href=&#34;https://huggingface.co/collections/Qwen/qwen3-coder-687fc861e53c939e52d52d10&#34;&gt;Hugging Face&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü§ñ &lt;a href=&#34;https://modelscope.cn/organization/qwen&#34;&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üìë &lt;a href=&#34;https://qwenlm.github.io/blog/qwen3-coder&#34;&gt;Blog&lt;/a&gt; &amp;nbsp;&amp;nbsp; ÔΩú &amp;nbsp;&amp;nbsp;üìñ &lt;a href=&#34;https://qwen.readthedocs.io/&#34;&gt;Documentation&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üåç &lt;a href=&#34;https://huggingface.co/spaces/Qwen/Qwen3-Coder-WebDev&#34;&gt;WebDev&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;üí¨ &lt;a href=&#34;https://github.com/QwenLM/Qwen/raw/main/assets/wechat.png&#34;&gt;WeChat (ÂæÆ‰ø°)&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü´® &lt;a href=&#34;https://discord.gg/CV4E9rpNSD&#34;&gt; Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üìÑ &lt;a href=&#34;https://arxiv.org/abs/2505.09388&#34;&gt;Arxiv&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üëΩ &lt;a href=&#34;https://github.com/QwenLM/qwen-code&#34;&gt;Qwen Code&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Visit our Hugging Face or ModelScope organization (click links above), search checkpoints with names starting with &lt;code&gt;Qwen3-Coder-&lt;/code&gt;, and you will find all you need! Enjoy!&lt;/p&gt; &#xA;&lt;h1&gt;Qwen3-Coder: Agentic Coding in the World.&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Today, we&#39;re announcing Qwen3-Coder, our most agentic code model to date. &lt;strong&gt;Qwen3-Coder&lt;/strong&gt; is available in multiple sizes, but we&#39;re excited to introduce its most powerful variant first: &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; ‚Äî a 480B-parameter Mixture-of-Experts model with 35B active parameters, offering exceptional performance in both coding and agentic tasks. &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; sets new state-of-the-art results among open models on Agentic Coding, Agentic Browser-Use, and Agentic Tool-Use, comparable to Claude Sonnet.&lt;/p&gt; &#xA;&lt;p&gt;üíª &lt;strong&gt;Significant Performance&lt;/strong&gt;: among open models on &lt;strong&gt;Agentic Coding&lt;/strong&gt;, &lt;strong&gt;Agentic Browser-Use&lt;/strong&gt;, and other foundational coding tasks, achieving results comparable to Claude Sonnet;&lt;/p&gt; &#xA;&lt;p&gt;üìö &lt;strong&gt;Long-context Capabilities&lt;/strong&gt;: with native support for &lt;strong&gt;256K&lt;/strong&gt; tokens, extendable up to &lt;strong&gt;1M&lt;/strong&gt; tokens using Yarn, optimized for repository-scale understanding;&lt;/p&gt; &#xA;&lt;p&gt;üõ† &lt;strong&gt;Agentic Coding&lt;/strong&gt;: supporting for most platform such as &lt;strong&gt;Qwen Code&lt;/strong&gt;, &lt;strong&gt;CLINE&lt;/strong&gt;, featuring a specially designed function call format;&lt;/p&gt; &#xA;&lt;h2&gt;Basic information&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;‚ú® Supporting long context understanding and generation with the context length of 256K tokens;&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Supporting 358 coding languages;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#39;ABAP&#39;, &#39;ActionScript&#39;, &#39;Ada&#39;, &#39;Agda&#39;, &#39;Alloy&#39;, &#39;ApacheConf&#39;, &#39;AppleScript&#39;, &#39;Arc&#39;, &#39;Arduino&#39;, &#39;AsciiDoc&#39;, &#39;AspectJ&#39;, &#39;Assembly&#39;, &#39;Augeas&#39;, &#39;AutoHotkey&#39;, &#39;AutoIt&#39;, &#39;Awk&#39;, &#39;Batchfile&#39;, &#39;Befunge&#39;, &#39;Bison&#39;, &#39;BitBake&#39;, &#39;BlitzBasic&#39;, &#39;BlitzMax&#39;, &#39;Bluespec&#39;, &#39;Boo&#39;, &#39;Brainfuck&#39;, &#39;Brightscript&#39;, &#39;Bro&#39;, &#39;C&#39;, &#39;C#&#39;, &#39;C++&#39;, &#39;C2hs Haskell&#39;, &#39;CLIPS&#39;, &#39;CMake&#39;, &#39;COBOL&#39;, &#39;CSS&#39;, &#39;CSV&#39;, &#34;Cap&#39;n Proto&#34;, &#39;CartoCSS&#39;, &#39;Ceylon&#39;, &#39;Chapel&#39;, &#39;ChucK&#39;, &#39;Cirru&#39;, &#39;Clarion&#39;, &#39;Clean&#39;, &#39;Click&#39;, &#39;Clojure&#39;, &#39;CoffeeScript&#39;, &#39;ColdFusion&#39;, &#39;ColdFusion CFC&#39;, &#39;Common Lisp&#39;, &#39;Component Pascal&#39;, &#39;Coq&#39;, &#39;Creole&#39;, &#39;Crystal&#39;, &#39;Csound&#39;, &#39;Cucumber&#39;, &#39;Cuda&#39;, &#39;Cycript&#39;, &#39;Cython&#39;, &#39;D&#39;, &#39;DIGITAL Command Language&#39;, &#39;DM&#39;, &#39;DNS Zone&#39;, &#39;Darcs Patch&#39;, &#39;Dart&#39;, &#39;Diff&#39;, &#39;Dockerfile&#39;, &#39;Dogescript&#39;, &#39;Dylan&#39;, &#39;E&#39;, &#39;ECL&#39;, &#39;Eagle&#39;, &#39;Ecere Projects&#39;, &#39;Eiffel&#39;, &#39;Elixir&#39;, &#39;Elm&#39;, &#39;Emacs Lisp&#39;, &#39;EmberScript&#39;, &#39;Erlang&#39;, &#39;F#&#39;, &#39;FLUX&#39;, &#39;FORTRAN&#39;, &#39;Factor&#39;, &#39;Fancy&#39;, &#39;Fantom&#39;, &#39;Forth&#39;, &#39;FreeMarker&#39;, &#39;G-code&#39;, &#39;GAMS&#39;, &#39;GAP&#39;, &#39;GAS&#39;, &#39;GDScript&#39;, &#39;GLSL&#39;, &#39;Genshi&#39;, &#39;Gentoo Ebuild&#39;, &#39;Gentoo Eclass&#39;, &#39;Gettext Catalog&#39;, &#39;Glyph&#39;, &#39;Gnuplot&#39;, &#39;Go&#39;, &#39;Golo&#39;, &#39;Gosu&#39;, &#39;Grace&#39;, &#39;Gradle&#39;, &#39;Grammatical Framework&#39;, &#39;GraphQL&#39;, &#39;Graphviz (DOT)&#39;, &#39;Groff&#39;, &#39;Groovy&#39;, &#39;Groovy Server Pages&#39;, &#39;HCL&#39;, &#39;HLSL&#39;, &#39;HTML&#39;, &#39;HTML+Django&#39;, &#39;HTML+EEX&#39;, &#39;HTML+ERB&#39;, &#39;HTML+PHP&#39;, &#39;HTTP&#39;, &#39;Haml&#39;, &#39;Handlebars&#39;, &#39;Harbour&#39;, &#39;Haskell&#39;, &#39;Haxe&#39;, &#39;Hy&#39;, &#39;IDL&#39;, &#39;IGOR Pro&#39;, &#39;INI&#39;, &#39;IRC log&#39;, &#39;Idris&#39;, &#39;Inform 7&#39;, &#39;Inno Setup&#39;, &#39;Io&#39;, &#39;Ioke&#39;, &#39;Isabelle&#39;, &#39;J&#39;, &#39;JFlex&#39;, &#39;JSON&#39;, &#39;JSON5&#39;, &#39;JSONLD&#39;, &#39;JSONiq&#39;, &#39;JSX&#39;, &#39;Jade&#39;, &#39;Jasmin&#39;, &#39;Java&#39;, &#39;Java Server Pages&#39;, &#39;JavaScript&#39;, &#39;Julia&#39;, &#39;Jupyter Notebook&#39;, &#39;KRL&#39;, &#39;KiCad&#39;, &#39;Kit&#39;, &#39;Kotlin&#39;, &#39;LFE&#39;, &#39;LLVM&#39;, &#39;LOLCODE&#39;, &#39;LSL&#39;, &#39;LabVIEW&#39;, &#39;Lasso&#39;, &#39;Latte&#39;, &#39;Lean&#39;, &#39;Less&#39;, &#39;Lex&#39;, &#39;LilyPond&#39;, &#39;Linker Script&#39;, &#39;Liquid&#39;, &#39;Literate Agda&#39;, &#39;Literate CoffeeScript&#39;, &#39;Literate Haskell&#39;, &#39;LiveScript&#39;, &#39;Logos&#39;, &#39;Logtalk&#39;, &#39;LookML&#39;, &#39;Lua&#39;, &#39;M&#39;, &#39;M4&#39;, &#39;MAXScript&#39;, &#39;MTML&#39;, &#39;MUF&#39;, &#39;Makefile&#39;, &#39;Mako&#39;, &#39;Maple&#39;, &#39;Markdown&#39;, &#39;Mask&#39;, &#39;Mathematica&#39;, &#39;Matlab&#39;, &#39;Max&#39;, &#39;MediaWiki&#39;, &#39;Metal&#39;, &#39;MiniD&#39;, &#39;Mirah&#39;, &#39;Modelica&#39;, &#39;Module Management System&#39;, &#39;Monkey&#39;, &#39;MoonScript&#39;, &#39;Myghty&#39;, &#39;NSIS&#39;, &#39;NetLinx&#39;, &#39;NetLogo&#39;, &#39;Nginx&#39;, &#39;Nimrod&#39;, &#39;Ninja&#39;, &#39;Nit&#39;, &#39;Nix&#39;, &#39;Nu&#39;, &#39;NumPy&#39;, &#39;OCaml&#39;, &#39;ObjDump&#39;, &#39;Objective-C++&#39;, &#39;Objective-J&#39;, &#39;Octave&#39;, &#39;Omgrofl&#39;, &#39;Opa&#39;, &#39;Opal&#39;, &#39;OpenCL&#39;, &#39;OpenEdge ABL&#39;, &#39;OpenSCAD&#39;, &#39;Org&#39;, &#39;Ox&#39;, &#39;Oxygene&#39;, &#39;Oz&#39;, &#39;PAWN&#39;, &#39;PHP&#39;, &#39;POV-Ray SDL&#39;, &#39;Pan&#39;, &#39;Papyrus&#39;, &#39;Parrot&#39;, &#39;Parrot Assembly&#39;, &#39;Parrot Internal Representation&#39;, &#39;Pascal&#39;, &#39;Perl&#39;, &#39;Perl6&#39;, &#39;Pickle&#39;, &#39;PigLatin&#39;, &#39;Pike&#39;, &#39;Pod&#39;, &#39;PogoScript&#39;, &#39;Pony&#39;, &#39;PostScript&#39;, &#39;PowerShell&#39;, &#39;Processing&#39;, &#39;Prolog&#39;, &#39;Propeller Spin&#39;, &#39;Protocol Buffer&#39;, &#39;Public Key&#39;, &#39;Pure Data&#39;, &#39;PureBasic&#39;, &#39;PureScript&#39;, &#39;Python&#39;, &#39;Python traceback&#39;, &#39;QML&#39;, &#39;QMake&#39;, &#39;R&#39;, &#39;RAML&#39;, &#39;RDoc&#39;, &#39;REALbasic&#39;, &#39;RHTML&#39;, &#39;RMarkdown&#39;, &#39;Racket&#39;, &#39;Ragel in Ruby Host&#39;, &#39;Raw token data&#39;, &#39;Rebol&#39;, &#39;Red&#39;, &#39;Redcode&#39;, &#34;Ren&#39;Py&#34;, &#39;RenderScript&#39;, &#39;RobotFramework&#39;, &#39;Rouge&#39;, &#39;Ruby&#39;, &#39;Rust&#39;, &#39;SAS&#39;, &#39;SCSS&#39;, &#39;SMT&#39;, &#39;SPARQL&#39;, &#39;SQF&#39;, &#39;SQL&#39;, &#39;STON&#39;, &#39;SVG&#39;, &#39;Sage&#39;, &#39;SaltStack&#39;, &#39;Sass&#39;, &#39;Scala&#39;, &#39;Scaml&#39;, &#39;Scheme&#39;, &#39;Scilab&#39;, &#39;Self&#39;, &#39;Shell&#39;, &#39;ShellSession&#39;, &#39;Shen&#39;, &#39;Slash&#39;, &#39;Slim&#39;, &#39;Smali&#39;, &#39;Smalltalk&#39;, &#39;Smarty&#39;, &#39;Solidity&#39;, &#39;SourcePawn&#39;, &#39;Squirrel&#39;, &#39;Stan&#39;, &#39;Standard ML&#39;, &#39;Stata&#39;, &#39;Stylus&#39;, &#39;SuperCollider&#39;, &#39;Swift&#39;, &#39;SystemVerilog&#39;, &#39;TOML&#39;, &#39;TXL&#39;, &#39;Tcl&#39;, &#39;Tcsh&#39;, &#39;TeX&#39;, &#39;Tea&#39;, &#39;Text&#39;, &#39;Textile&#39;, &#39;Thrift&#39;, &#39;Turing&#39;, &#39;Turtle&#39;, &#39;Twig&#39;, &#39;TypeScript&#39;, &#39;Unified Parallel C&#39;, &#39;Unity3D Asset&#39;, &#39;Uno&#39;, &#39;UnrealScript&#39;, &#39;UrWeb&#39;, &#39;VCL&#39;, &#39;VHDL&#39;, &#39;Vala&#39;, &#39;Verilog&#39;, &#39;VimL&#39;, &#39;Visual Basic&#39;, &#39;Volt&#39;, &#39;Vue&#39;, &#39;Web Ontology Language&#39;, &#39;WebAssembly&#39;, &#39;WebIDL&#39;, &#39;X10&#39;, &#39;XC&#39;, &#39;XML&#39;, &#39;XPages&#39;, &#39;XProc&#39;, &#39;XQuery&#39;, &#39;XS&#39;, &#39;XSLT&#39;, &#39;Xojo&#39;, &#39;Xtend&#39;, &#39;YAML&#39;, &#39;YANG&#39;, &#39;Yacc&#39;, &#39;Zephir&#39;, &#39;Zig&#39;, &#39;Zimpl&#39;, &#39;desktop&#39;, &#39;eC&#39;, &#39;edn&#39;, &#39;fish&#39;, &#39;mupad&#39;, &#39;nesC&#39;, &#39;ooc&#39;, &#39;reStructuredText&#39;, &#39;wisp&#39;, &#39;xBase&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;‚ú® Retain strengths in math and general capabilities from base model.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important]&lt;/p&gt; &#xA; &lt;p&gt;Qwen3-coder function calling relies on our new tool parser &lt;code&gt;qwen3coder_tool_parser.py&lt;/code&gt; &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct/blob/main/qwen3coder_tool_parser.py&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;We updated both the special tokens and their corresponding token ids, in order to maintain consistency with Qwen3. Please make sure to use the new tokenizer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;model name&lt;/th&gt; &#xA;   &lt;th&gt;type&lt;/th&gt; &#xA;   &lt;th&gt;length&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-480B-A35B-Instruct-FP8&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct-FP8&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-480B-A35B-Instruct-FP8&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Detailed performance and introduction are shown in this &lt;a href=&#34;https://qwenlm.github.io/blog/qwen3-coder&#34;&gt; üìë blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important] &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; are instruction models for chatting;&lt;/p&gt; &#xA; &lt;p&gt;This model supports only non-thinking mode and does not generate &lt;code&gt;&amp;lt;think&amp;gt;&amp;lt;/think&amp;gt;&lt;/code&gt; blocks in its output. Meanwhile, specifying &lt;code&gt;enable_thinking=False&lt;/code&gt; is no longer required.**&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üëâüèª Chat with Qwen3-Coder-480B-A35B-Instruct&lt;/h3&gt; &#xA;&lt;p&gt;You can just write several lines of code with &lt;code&gt;transformers&lt;/code&gt; to chat with Qwen3-Coder-480B-A35B-Instruct. Essentially, we build the tokenizer and the model with &lt;code&gt;from_pretrained&lt;/code&gt; method, and we use generate method to perform chatting with the help of chat template provided by the tokenizer. Below is an example of how to chat with &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoModelForCausalLM, AutoTokenizer&#xA;&#xA;model_name = &#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&#xA;&#xA;model = AutoModelForCausalLM.from_pretrained(&#xA;    model_name,&#xA;    torch_dtype=&#34;auto&#34;,&#xA;    device_map=&#34;auto&#34;&#xA;)&#xA;tokenizer = AutoTokenizer.from_pretrained(model_name)&#xA;&#xA;prompt = &#34;write a quick sort algorithm.&#34;&#xA;messages = [&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: prompt}&#xA;]&#xA;text = tokenizer.apply_chat_template(&#xA;    messages,&#xA;    tokenize=False,&#xA;    add_generation_prompt=True&#xA;)&#xA;model_inputs = tokenizer([text], return_tensors=&#34;pt&#34;).to(model.device)&#xA;&#xA;generated_ids = model.generate(&#xA;    **model_inputs,&#xA;    max_new_tokens=65536&#xA;)&#xA;generated_ids = [&#xA;    output_ids[len(input_ids):] for input_ids, output_ids in zip(model_inputs.input_ids, generated_ids)&#xA;]&#xA;&#xA;response = tokenizer.batch_decode(generated_ids, skip_special_tokens=True)[0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;apply_chat_template()&lt;/code&gt; function is used to convert the messages into a format that the model can understand. The &lt;code&gt;add_generation_prompt&lt;/code&gt; argument is used to add a generation prompt, which refers to &lt;code&gt;&amp;lt;|im_start|&amp;gt;assistant\n&lt;/code&gt; to the input. Notably, we apply ChatML template for chat models following our previous practice. The &lt;code&gt;max_new_tokens&lt;/code&gt; argument is used to set the maximum length of the response. The &lt;code&gt;tokenizer.batch_decode()&lt;/code&gt; function is used to decode the response. In terms of the input, the above messages is an example to show how to format your dialog history and system prompt. You can use the other size of instruct model in the same way.&lt;/p&gt; &#xA;&lt;h4&gt;Fill in the middle with Qwen3-Coder-480B-A35B-Instruct&lt;/h4&gt; &#xA;&lt;p&gt;The code insertion task, also referred to as the &#34;fill-in-the-middle&#34; challenge, requires the insertion of code segments in a manner that bridges the gaps within a given code context. For an approach aligned with best practices, we recommend adhering to the formatting guidelines outlined in the paper &#34;Efficient Training of Language Models to Fill in the Middle&#34;[&lt;a href=&#34;https://arxiv.org/abs/2207.14255&#34;&gt;arxiv&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;p&gt;The prompt should be structured as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;&amp;lt;|fim_prefix|&amp;gt;&#39; + prefix_code + &#39;&amp;lt;|fim_suffix|&amp;gt;&#39; + suffix_code + &#39;&amp;lt;|fim_middle|&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Following the approach mentioned, an example would be structured in this manner:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModelForCausalLM&#xA;# load model&#xA;device = &#34;cuda&#34; # the device to load the model onto&#xA;&#xA;TOKENIZER = AutoTokenizer.from_pretrained(&#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;)&#xA;MODEL = AutoModelForCausalLM.from_pretrained(&#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;, device_map=&#34;auto&#34;).eval()&#xA;&#xA;&#xA;input_text = &#34;&#34;&#34;&amp;lt;|fim_prefix|&amp;gt;def quicksort(arr):&#xA;    if len(arr) &amp;lt;= 1:&#xA;        return arr&#xA;    pivot = arr[len(arr) // 2]&#xA;    &amp;lt;|fim_suffix|&amp;gt;&#xA;    middle = [x for x in arr if x == pivot]&#xA;    right = [x for x in arr if x &amp;gt; pivot]&#xA;    return quicksort(left) + middle + quicksort(right)&amp;lt;|fim_middle|&amp;gt;&#34;&#34;&#34;&#xA;            &#xA;messages = [&#xA;    {&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;You are a code completion assistant.&#34;},&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: input_text}&#xA;]&#xA;&#xA;&#xA;text = tokenizer.apply_chat_template(&#xA;    messages,&#xA;    tokenize=False,&#xA;    add_generation_prompt=True&#xA;)&#xA;model_inputs = TOKENIZER([text], return_tensors=&#34;pt&#34;).to(model.device)&#xA;&#xA;# Use `max_new_tokens` to control the maximum output length.&#xA;generated_ids = MODEL.generate(model_inputs.input_ids, max_new_tokens=512, do_sample=False)[0]&#xA;# The generated_ids include prompt_ids, we only need to decode the tokens after prompt_ids.&#xA;output_text = TOKENIZER.decode(generated_ids[len(model_inputs.input_ids[0]):], skip_special_tokens=True)&#xA;&#xA;print(f&#34;Prompt: {input_text}\n\nGenerated text: {output_text}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;h3&gt;Example: Physics-Based Chimney Demolition Simulation with Controlled Explosion&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;‰ΩøÁî® three.js, cannon-es.js ÁîüÊàê‰∏Ä‰∏™ÈúáÊíºÁöÑ3DÂª∫Á≠ëÊãÜÈô§ÊºîÁ§∫„ÄÇ&#xA;&#xA;## Âú∫ÊôØËÆæÁΩÆÔºö&#xA;- Âú∞Èù¢ÊòØ‰∏Ä‰∏™Ê∑±ÁÅ∞Ëâ≤Ê∑∑ÂáùÂúüÂπ≥Èù¢ÔºåÂ∞∫ÂØ∏80*80Ôºå&#xA;- ÊâÄÊúâÁâ©‰Ωì‰∏•Ê†ºÈÅµÂæ™Áé∞ÂÆûÁâ©ÁêÜËßÑÂàôÔºåÂåÖÊã¨ÈáçÂäõ„ÄÅÊë©Êì¶Âäõ„ÄÅÁ¢∞ÊíûÊ£ÄÊµãÂíåÂä®ÈáèÂÆàÊÅí&#xA;&#xA;## Âª∫Á≠ëÁªìÊûÑÔºö&#xA;- ‰∏ÄÂ∫ßÂúÜÂΩ¢È´òÂ±ÇÂª∫Á≠ëÔºåÂë®ÈïøÂØπÂ∫î20‰∏™ÊñπÂùó&#xA;- Âª∫Á≠ëÊÄªÈ´òÂ∫¶60‰∏™ÊñπÂùó&#xA;- ÊØèÂ±ÇÈááÁî®Á†ñÁ†åÁªìÊûÑÔºåÊñπÂùó‰∏éÁ†ñÁªìÊûÑÂª∫Á≠ë‰∏ÄËá¥, ÈîôÂºÄ50%ÊéíÂàóÔºåÂ¢ûÂº∫ÁªìÊûÑÁ®≥ÂÆöÊÄß&#xA;- Âª∫Á≠ëÂ§ñÂ¢ô‰ΩøÁî®Á±≥Ëâ≤ÊñπÂùó&#xA;- **ÈáçË¶ÅÔºöÊñπÂùóÂàùÂßãÊéíÂàóÊó∂ÂøÖÈ°ªÁ°Æ‰øùÁ¥ßÂØÜË¥¥ÂêàÔºåÊó†Èó¥ÈöôÔºåÂèØ‰ª•ÈÄöËøáËΩªÂæÆÈáçÂè†ÊàñË∞ÉÊï¥ÂçäÂæÑÊù•ÂÆûÁé∞**&#xA;- **ÈáçË¶ÅÔºöÂª∫Á≠ëÂàùÂßãÂåñÂÆåÊàêÂêéÔºåÊâÄÊúâÊñπÂùóÂ∫îËØ•Â§Ñ‰∫éÁâ©ÁêÜ&#34;Áù°Áú†&#34;Áä∂ÊÄÅÔºåÁ°Æ‰øùÂª∫Á≠ëÂú®ÁàÜÁÇ∏Ââç‰øùÊåÅÂÆåÁæéÁöÑÈùôÊ≠¢Áä∂ÊÄÅÔºå‰∏ç‰ºöÂõ†ÈáçÂäõËÄå‰∏ãÊ≤âÊàñÊùæÊï£**&#xA;- Âª∫Á≠ëÁ†ñÂùó‰πãÈó¥‰ΩøÁî®Á≤òÊÄßÊùêÊñôÂ°´ÂÖÖÔºà‰∏çÂèØËßÅÔºâÔºåÈÄöËøáÈ´òÊë©Êì¶ÂäõÔºà0.8+ÔºâÂíå‰ΩéÂºπÊÄßÔºà0.05‰ª•‰∏ãÔºâÊù•Ê®°ÊãüÁ≤òÂêàÊïàÊûú&#xA;- Á†ñÂùóÂú®Âª∫Á≠ëÂÄíÂ°åÁû¨Èó¥‰∏ç‰ºöÊï£ÊéâÔºåËÄåÊòØÂª∫Á≠ë‰Ωú‰∏∫‰∏Ä‰∏™Êï¥‰ΩìÂÄíÂú®Âú∞Èù¢ÁöÑÊó∂ÂÄôÊâçÂõ†ÂèóÂäõËøáÂ§ßËÄåÊï£Êéâ&#xA;&#xA;## ÂÆöÂêëÁàÜÁ†¥Á≥ªÁªüÔºö&#xA;- Âú®Âª∫Á≠ëÁöÑÁ¨¨1Â±ÇÁöÑÊúÄÂè≥‰æßÊñπÂùóÈôÑËøëÂÆâË£ÖÁàÜÁÇ∏Ë£ÖÁΩÆÔºà‰∏çÂèØËßÅÔºâ&#xA;- Êèê‰æõÊìç‰ΩúÊåâÈíÆÁÇπÂáªÁàÜÁÇ∏&#xA;- **ÁàÜÁÇ∏Êó∂Âî§ÈÜíÊâÄÊúâÁõ∏ÂÖ≥ÊñπÂùóÁöÑÁâ©ÁêÜÁä∂ÊÄÅ**&#xA;- ÁàÜÁÇ∏ÁÇπ‰∫ßÁîüÂçäÂæÑ2ÁöÑÂº∫ÂäõÂÜ≤ÂáªÊ≥¢ÔºåÂÜ≤ÂáªÊ≥¢ÂΩ±ÂìçÂà∞ÁöÑÊñπÂùó, ÂèóÂà∞2-5Âçï‰ΩçÁöÑÂÜ≤ÂáªÂäõ&#xA;&#xA;## Âª∫Á≠ëÁ®≥ÂÆöÊÄßË¶ÅÊ±ÇÔºö&#xA;- **Á°Æ‰øùÂª∫Á≠ëÂú®Êú™ÁàÜÁÇ∏Êó∂ÂÆåÂÖ®ÈùôÊ≠¢ÔºåÊó†‰ªª‰ΩïÊôÉÂä®Êàñ‰∏ãÊ≤â**&#xA;- **Áâ©ÁêÜ‰∏ñÁïåÂàùÂßãÂåñÂêéÁªôÂª∫Á≠ëÂá†‰∏™Áâ©ÁêÜÊ≠•È™§Êù•Ëá™ÁÑ∂Á®≥ÂÆöÔºåÊàñ‰ΩøÁî®Áù°Áú†Êú∫Âà∂**&#xA;- **ÊñπÂùóÈó¥ÁöÑÊé•Ëß¶ÊùêÊñôÂ∫îÂÖ∑ÊúâÈ´òÊë©Êì¶ÂäõÂíåÊûÅ‰ΩéÂºπÊÄßÔºåÊ®°ÊãüÁ†ñÂùóÈó¥ÁöÑÁ†ÇÊµÜÁ≤òÂêà**&#xA;&#xA;## ÈúáÊíºÁöÑÂÄíÂ°åÊïàÊûúÔºö&#xA;- ÊñπÂùóÂú®ÁàÜÁÇ∏ÂÜ≤Âáª‰∏ã‰∏ç‰ªÖÈ£ûÊï£ÔºåËøò‰ºöÂú®Á©∫‰∏≠ÁøªÊªöÂíåÁ¢∞Êíû&#xA;- ÁÉüÂ∞ò‰ºöÈöèÁùÄÂª∫Á≠ëÂÄíÂ°åÈÄêÊ∏êÊâ©Êï£ÔºåËê•ÈÄ†ÁúüÂÆûÁöÑÊãÜÈô§Áé∞Âú∫Ê∞õÂõ¥&#xA;&#xA;## Â¢ûÂº∫ÁöÑËßÜËßâÊïàÊûúÔºö&#xA;- Ê∑ªÂä†ÁéØÂ¢ÉÂÖâÁÖßÂèòÂåñÔºöÁàÜÁÇ∏Áû¨Èó¥‰∫ÆÂ∫¶ÊøÄÂ¢ûÔºåÁÑ∂ÂêéË¢´ÁÉüÂ∞òÈÅÆÊå°ÂèòÊöó&#xA;- Á≤íÂ≠êÁ≥ªÁªüÂåÖÊã¨ÔºöÁÉüÈõæ„ÄÅÁÅ∞Â∞ò&#xA;&#xA;## ÊäÄÊúØË¶ÅÊ±ÇÔºö&#xA;- Á≤íÂ≠êÁ≥ªÁªüÁî®‰∫éÁÉüÈõæÂíåÁÅ∞Â∞òÊïàÊûú&#xA;- ÊâÄÊúâ‰ª£Á†ÅÈõÜÊàêÂú®Âçï‰∏™HTMLÊñá‰ª∂‰∏≠ÔºåÂåÖÂê´ÂøÖË¶ÅÁöÑCSSÊ†∑Âºè&#xA;- Ê∑ªÂä†ÁÆÄÂçïÁöÑUIÊéßÂà∂ÔºöÈáçÁΩÆÊåâÈíÆ„ÄÅÁõ∏Êú∫ËßíÂ∫¶ÂàáÊç¢, ÁàÜÁÇ∏ÊåâÈíÆ, Èº†Ê†áÂ∑¶ÈîÆÊéßÂà∂ÊëÑÂÉèÊú∫ËßíÂ∫¶ÔºåÂè≥ÈîÆÊéßÂà∂ÊëÑÂÉèÊú∫‰ΩçÁΩÆÔºåÊªöËΩÆÊéßÂà∂ÊëÑÂÉèÊú∫ÁÑ¶Ë∑ù&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo1.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example1.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Multicolor and Interactive Animation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create an amazing animation multicolor and interactive using p5js&#xA;&#xA;use this cdn:&#xA;https://cdn.jsdelivr.net/npm/p5@1.7.0/lib/p5.min.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo2.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example2.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: 3D Google Earth&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;To create a 3D Google Earth, you need to load the terrain map correctly. You can use any online resource. The code is written into an HTML file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo3.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example3.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Testing Your WPM with a Famous Quote&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Qwen-Code CLI &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create an interesting typing game with a keyboard in the lower middle of the screen and some famous articles in the upper middle. When the user types a word correctly, a cool reaction should be given to encourage him. Design a modern soft color scheme inspired by macarons. Come up with a very creative solution first, and then start writing code.&#xA;The game should be able to support typing, and you need to neglect upcase and lowercase.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo4.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example4.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Bouncing Ball in Rotation Hypercube&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Make a page in HTML that shows an animation of a ball bouncing in a rotating hypercube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo5.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example5.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Solar System Simulation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;write a web page to show the solar system simulation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo6.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example6.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: DUET Game&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create a complete, single-file HTML game with CSS and JavaScript. The game is inspired by &#34;Duet&#34;.&#xA;&#xA;Gameplay:&#xA;&#xA;There are two balls, one red and one blue, rotating around a central point.&#xA;The player uses the &#39;A&#39; and &#39;D&#39; keys to rotate them counter-clockwise and clockwise.&#xA;White rectangular obstacles move down from the top of the screen.&#xA;The player must rotate the balls to avoid hitting the obstacles.&#xA;If a ball hits an obstacle, the game is over.&#xA;Visuals:&#xA;&#xA;Make the visual effects amazing.&#xA;Use a dark background with neon glowing effects for the balls and obstacles.&#xA;Animations should be very smooth.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo7.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example7.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#QwenLM/Qwen3-Coder&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=QwenLM/Qwen3-Coder&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our work helpful, feel free to give us a cite.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{qwen3technicalreport,&#xA;      title={Qwen3 Technical Report}, &#xA;      author={Qwen Team},&#xA;      year={2025},&#xA;      eprint={2505.09388},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL},&#xA;      url={https://arxiv.org/abs/2505.09388},&#xA;}&#xA;@article{hui2024qwen2,&#xA;  title={Qwen2. 5-Coder Technical Report},&#xA;  author={Hui, Binyuan and Yang, Jian and Cui, Zeyu and Yang, Jiaxi and Liu, Dayiheng and Zhang, Lei and Liu, Tianyu and Zhang, Jiajun and Yu, Bowen and Dang, Kai and others},&#xA;  journal={arXiv preprint arXiv:2409.12186},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested to leave a message to either our research team or product team, join our &lt;a href=&#34;https://discord.gg/z3GAxXZ9Ce&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://github.com/QwenLM/Qwen/raw/main/assets/wechat.png&#34;&gt;WeChat groups&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34; style=&#34;font-size: 14px; color: #555; margin-top: 20px;&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/#readme-top&#34; style=&#34;text-decoration: none; color: #007bff; font-weight: bold;&#34;&gt; ‚Üë Back to Top ‚Üë &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>software-mansion/react-native-reanimated</title>
    <updated>2025-07-26T01:29:31Z</updated>
    <id>tag:github.com,2025-07-26:/software-mansion/react-native-reanimated</id>
    <link href="https://github.com/software-mansion/react-native-reanimated" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native&#39;s Animated library reimplemented&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&#34; alt=&#34;React Native Reanimated by Software Mansion&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;Create smooth animations with an excellent developer experience.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Reanimated 4 is here! Check out our &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/&#34;&gt;documentation page&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Nightly CI state&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;NPM Reanimated publish nightly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;NPM Worklets publish [Nightly]&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint clang-tidy [Nightly]&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Reanimated compatibility check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Use frameworks Reanimated build check [Nightly]&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;React Native nightly Reanimated build check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Expo DevClient build check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Reanimated TypeScript compatibility test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows hosted app Reanimated build check&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;URL validation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started/#installation&#34;&gt;installation&lt;/a&gt; section of our docs for the detailed installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;React Native Reanimated 4.x supports only the &lt;a href=&#34;https://reactnative.dev/architecture/landing-page&#34;&gt;New React Native architecture&lt;/a&gt; and three latest React Native versions.&lt;/p&gt; &#xA;&lt;p&gt;If your app still runs on the old architecture, please consider adopting the New Architecture or stay with latest 3.x release.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our dedicated documentation page for info about this library, API reference and more: &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/&#34;&gt;https://docs.swmansion.com/react-native-reanimated/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The source code for the example (showcase) app is under the &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/raw/main/apps/common-app/&#34;&gt;&lt;code&gt;apps/common-app&lt;/code&gt;&lt;/a&gt; directory. If you want to play with the API but don&#39;t feel like trying it on a real app, you can run the example project. Check &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/apps/fabric-example/README.md&#34;&gt;Example README&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reanimated library is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/LICENSE&#34;&gt;The MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project has been built and is maintained thanks to the support from &lt;a href=&#34;https://shopify.com&#34;&gt;Shopify&lt;/a&gt;, &lt;a href=&#34;https://expo.io&#34;&gt;Expo.io&lt;/a&gt; and &lt;a href=&#34;https://swmansion.com&#34;&gt;Software Mansion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shopify.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8085?v=3&amp;amp;s=100&#34; alt=&#34;shopify&#34; title=&#34;Shopify.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://expo.io&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/12504344?v=3&amp;amp;s=100&#34; alt=&#34;expo&#34; title=&#34;Expo.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swmansion.com&#34;&gt;&lt;img src=&#34;https://logo.swmansion.com/logo?color=white&amp;amp;variant=desktop&amp;amp;width=150&amp;amp;tag=react-native-reanimated-github&#34; alt=&#34;swm&#34; title=&#34;Software Mansion&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community Discord&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.swmansion.com&#34;&gt;Join the Software Mansion Community Discord&lt;/a&gt; to chat about Reanimated or other Software Mansion libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Reanimated is created by Software Mansion&lt;/h2&gt; &#xA;&lt;p&gt;Since 2012 &lt;a href=&#34;https://swmansion.com&#34;&gt;Software Mansion&lt;/a&gt; is a software agency with experience in building web and mobile apps. We are Core React Native Contributors and experts in dealing with all kinds of React Native issues. We can help you build your next dream product ‚Äì &lt;a href=&#34;https://swmansion.com/contact/projects?utm_source=reanimated&amp;amp;utm_medium=readme&#34;&gt;Hire us&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>semgrep/semgrep</title>
    <updated>2025-07-26T01:29:31Z</updated>
    <id>tag:github.com,2025-07-26:/semgrep/semgrep</id>
    <link href="https://github.com/semgrep/semgrep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://semgrep.dev&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;images/semgrep-logo-light.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;images/semgrep-logo-dark.svg&#34;&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/images/semgrep-logo-light.svg?sanitize=true&#34; height=&#34;100&#34; alt=&#34;Semgrep logo&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Code scanning at ludicrous speed. &lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/semgrep&#34;&gt; &lt;img src=&#34;https://img.shields.io/homebrew/v/semgrep?style=flat-square&#34; alt=&#34;Homebrew&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/semgrep/&#34;&gt; &lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/semgrep?style=flat-square&amp;amp;color=blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://semgrep.dev/docs/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docs-semgrep.dev-purple?style=flat-square&#34; alt=&#34;Documentation&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://go.semgrep.dev/slack&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/slack-3.5k%20members-green?style=flat-square&#34; alt=&#34;Join Semgrep community Slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/semgrep/semgrep/issues/new/choose&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/issues-welcome-green?style=flat-square&#34; alt=&#34;Issues welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/semgrep/semgrep#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/semgrep/semgrep?label=GitHub%20Stars&amp;amp;style=flat-square&#34; alt=&#34;Star Semgrep on GitHub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/semgrep/semgrep&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/semgrep/semgrep.svg?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/semgrep/semgrep&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/semgrep/semgrep.svg?style=flat-square&#34; alt=&#34;Docker Pulls (Old)&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=semgrep&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/semgrep?label=Follow%20semgrep&amp;amp;style=social&amp;amp;color=blue&#34; alt=&#34;Follow @semgrep on Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Semgrep is a fast, open-source, static analysis tool that searches code, finds bugs, and enforces secure guardrails and coding standards. Semgrep &lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#language-support&#34;&gt;supports 30+ languages&lt;/a&gt; and can run in an IDE, as a pre-commit check, and as part of CI/CD workflows.&lt;/p&gt; &#xA;&lt;p&gt;Semgrep is semantic grep for code. While running &lt;code&gt;grep &#34;2&#34;&lt;/code&gt; would only match the exact string &lt;em&gt;2&lt;/em&gt;, Semgrep would &lt;a href=&#34;https://semgrep.dev/playground/s/5rKgj&#34;&gt;match &lt;code&gt;x = 1; y = x + 1&lt;/code&gt; when searching for &lt;em&gt;2&lt;/em&gt;&lt;/a&gt;. Semgrep rules look like the code you already write; no abstract syntax trees, regex wrestling, or painful DSLs.&lt;/p&gt; &#xA;&lt;p&gt;Note that in security contexts, Semgrep Community Edition will miss many true positives as it can only analyze code within the boundaries of a single function or file. If you want to use Semgrep for security purposes (&lt;strong&gt;SAST&lt;/strong&gt;, &lt;strong&gt;SCA&lt;/strong&gt;, or &lt;strong&gt;secrets scanning&lt;/strong&gt;), the Semgrep AppSec Platform is strongly recommended since it adds the following critical capabilities:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Improved core analysis capabilities (cross-file, cross-function, data-flow reachability) that greatly reduce false positives by 25% and increase detected true positives by 250%&lt;/li&gt; &#xA; &lt;li&gt;Contextual post-processing of findings with Semgrep Assistant (AI) to further reduce noise by &lt;a href=&#34;https://a.storyblok.com/f/151984/x/2d12dc0223/whitepaper_-ai-powered-appsec-engineer-automate.pdf?cv=1728584410408&#34;&gt;~20%&lt;/a&gt;. In addition, Assistant enriches findings with tailored, step-by-step remediation guidance that humans find actionable &amp;gt;80% of the time.&lt;/li&gt; &#xA; &lt;li&gt;Customizable policies and seamless integration into developer workflows, giving security teams granular control over where, when, and how different findings are presented to developers (IDE, PR comment, etc.)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The Semgrep AppSec Platform works out-of-the-box with 20000+ proprietary rules across SAST, SCA, and secrets. Pro rules are written and maintained by the Semgrep security research team and are highly accurate, meaning AppSec teams can feel confident bringing findings directly to developers without slowing them down.&lt;/p&gt; &#xA;&lt;p&gt;Semgrep analyzes code locally on your computer or in your build environment: &lt;strong&gt;by default, code is never uploaded&lt;/strong&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#getting-started-&#34;&gt;Get&amp;nbsp;started&amp;nbsp;‚Üí.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#option-1-getting-started-from-the-cli&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/images/semgrep-scan-cli.jpg&#34; alt=&#34;Semgrep CLI image&#34;&gt;&lt;/a&gt; &#xA;&lt;h3&gt;Language support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Semgrep Code&lt;/strong&gt; supports 30+ languages, including:&lt;/p&gt; &#xA;&lt;p&gt;Apex ¬∑ Bash ¬∑ C ¬∑ C++ ¬∑ C# ¬∑ Clojure ¬∑ Dart ¬∑ Dockerfile ¬∑ Elixir ¬∑ HTML ¬∑ Go ¬∑ Java ¬∑ JavaScript ¬∑ JSX ¬∑ JSON ¬∑ Julia ¬∑ Jsonnet ¬∑ Kotlin ¬∑ Lisp ¬∑ Lua ¬∑ OCaml ¬∑ PHP ¬∑ Python ¬∑ R ¬∑ Ruby ¬∑ Rust ¬∑ Scala ¬∑ Scheme ¬∑ Solidity ¬∑ Swift ¬∑ Terraform ¬∑ TypeScript ¬∑ TSX ¬∑ YAML ¬∑ XML ¬∑ Generic (ERB, Jinja, etc.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Semgrep Supply Chain&lt;/strong&gt; supports 12 languages across 15 package managers, including:&lt;/p&gt; &#xA;&lt;p&gt;C# (NuGet) ¬∑ Dart (Pub) ¬∑ Go (Go modules, &lt;code&gt;go mod&lt;/code&gt;) ¬∑ Java (Gradle, Maven) ¬∑ Javascript/Typescript (npm, Yarn, Yarn 2, Yarn 3, pnpm) ¬∑ Kotlin (Gradle, Maven) ¬∑ PHP (Composer) ¬∑ Python (pip, pip-tool, Pipenv, Poetry) ¬∑ Ruby (RubyGems) ¬∑ Rust (Cargo) ¬∑ Scala (Maven) ¬∑ Swift (SwiftPM)&lt;/p&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://semgrep.dev/docs/supported-languages/&#34;&gt;Supported languages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting started üöÄ&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#option-1-getting-started-from-the-semgrep-appsec-platform-recommended&#34;&gt;From the Semgrep AppSec Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#option-2-getting-started-from-the-cli&#34;&gt;From the CLI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For new users, we recommend starting with the &lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/#option-1-getting-started-from-the-semgrep-appsec-platform-recommended&#34;&gt;Semgrep AppSec Platform&lt;/a&gt; because it provides a visual interface, a demo project, result triaging and exploration workflows, and makes setup in CI/CD fast. Scans are still local and code isn&#39;t uploaded. Alternatively, you can also start with the CLI and navigate the terminal output to run one-off searches.&lt;/p&gt; &#xA;&lt;h3&gt;Option 1: Getting started from the Semgrep Appsec Platform (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.semgrep.dev/login-ghrmgo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/images/semgrep-main-image.jpg&#34; alt=&#34;Semgrep platform image&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Register on &lt;a href=&#34;https://go.semgrep.dev/login-ghrmgo&#34; target=&#34;_blank&#34;&gt;semgrep.dev&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Explore the demo findings to learn how Semgrep works&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan your project by navigating to &lt;code&gt;Projects &amp;gt; Scan New Project &amp;gt; Run scan in CI&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select your version control system and follow the onboarding steps to add your project. After this setup, Semgrep will scan your project after every pull request.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Optional] If you want to run Semgrep locally, follow the steps in the CLI section.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Notes:&lt;/h3&gt; &#xA;&lt;p&gt;If there are any issues, &lt;a href=&#34;https://go.semgrep.dev/slack&#34; target=&#34;_blank&#34;&gt;please ask for help in the Semgrep Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Option 2: Getting started from the CLI&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Semgrep CLI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# For macOS&#xA;$ brew install semgrep&#xA;&#xA;# For Ubuntu/WSL/Linux/macOS&#xA;$ python3 -m pip install semgrep&#xA;&#xA;# To try Semgrep without installation run via Docker&#xA;$ docker run -it -v &#34;${PWD}:/src&#34; semgrep/semgrep semgrep login&#xA;$ docker run -e SEMGREP_APP_TOKEN=&amp;lt;TOKEN&amp;gt; --rm -v &#34;${PWD}:/src&#34; semgrep/semgrep semgrep ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;semgrep login&lt;/code&gt; to create your account and login to Semgrep.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Logging into Semgrep gets you access to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/products/semgrep-supply-chain?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=ssc-product&#34;&gt;Semgrep Supply Chain&lt;/a&gt;: A dependency scanner that detects reachable vulnerabilities in third party libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/products/semgrep-code?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=code-pro-rules&#34;&gt;Semgrep Code&#39;s Pro rules&lt;/a&gt;: 600+ high confidence rules written by Semgrep&#39;s security research team&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/products/pro-engine?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=pro-engine&#34;&gt;Semgrep Code&#39;s Pro engine&lt;/a&gt;: An advanced code analysis engine, designed to detect complex vulnerabilities, and reduce false positives&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to your app&#39;s root directory and run &lt;code&gt;semgrep ci&lt;/code&gt;. This will scan your project to check for vulnerabilities in your source code and its dependencies.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try writing your own query interactively with &lt;code&gt;-e&lt;/code&gt;. For example, a check for Python == where the left and right hand sides are the same (potentially a bug): &lt;code&gt;$ semgrep -e &#39;$X == $X&#39; --lang=py path/to/src&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Semgrep Ecosystem&lt;/h3&gt; &#xA;&lt;p&gt;The Semgrep ecosystem includes the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/docs/cli-reference/&#34;&gt;Semgrep Community Edition&lt;/a&gt; - The open-source program analysis engine at the heart of everything. Suitable for ad-hoc use cases with a high tolerance for false positives - think consultants, security auditors, or pentesters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/login?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=appsec-platform&#34;&gt;Semgrep AppSec Platform&lt;/a&gt; - Easily orchestrate and scale SAST, SCA, and Secrets scanning across an organization, with no risk of overwhelming developers. Customize which findings developers see, where they see them, and integrate with CI providers like GitHub, GitLab, CircleCI, and more. Includes both free and paid tiers.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/products/semgrep-code?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=semgrep-code&#34;&gt;Semgrep Code (SAST)&lt;/a&gt; - Make real progress on your vulnerability backlog with SAST that minimizes noise and empowers developers to quickly fix issues on their own, even if they have no security knowledge. Easy to deploy secure guardrails and tailored, step-by-step remediation guidance mean developers actually fix issues since they don&#39;t feel slowed down.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/products/semgrep-supply-chain?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=ssc&#34;&gt;Semgrep Supply Chain (SSC)&lt;/a&gt; - A high-signal dependency scanner that detects reachable vulnerabilities in open source third-party libraries and functions.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/blog/2023/introducing-semgrep-secrets/&#34;&gt;Semgrep Secrets (Secrets scanning)&lt;/a&gt; - Secrets detection that uses semantic analysis, improved entropy analysis, and validation to accurately surface sensitive credentials in the developer workflow.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://semgrep.dev/products/semgrep-code/assistant?utm_medium=readme&amp;amp;utm_source=github&amp;amp;utm_content=assistant&#34;&gt;Semgrep Assistant (AI)&lt;/a&gt; - Assistant is an AI-powered AppSec engineer that helps both developers and AppSec teams prioritize, triage, and remediate Semgrep findings at scale. Humans agree with Assistant auto-triage decisions 97% of the time, and rate generated remediation guidance as helpful 80% of the time. For an overview of how Assistant works, &lt;a href=&#34;https://a.storyblok.com/f/151984/x/2d12dc0223/whitepaper_-ai-powered-appsec-engineer-automate.pdf?cv=1728584410408&#34;&gt;read this overview&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/editor&#34;&gt;Semgrep Playground&lt;/a&gt; - An online interactive tool for writing and sharing rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/explore&#34;&gt;Semgrep Registry&lt;/a&gt; - 2,000+ community-driven rules covering security, correctness, and dependency vulnerabilities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join hundreds of thousands of other developers and security engineers already using Semgrep at companies like GitLab, Dropbox, Slack, Figma, Shopify, HashiCorp, Snowflake, and Trail of Bits.&lt;/p&gt; &#xA;&lt;p&gt;Semgrep is developed and commercially supported by &lt;a href=&#34;https://semgrep.dev&#34;&gt;Semgrep, Inc., a software security company&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Semgrep Rules&lt;/h3&gt; &#xA;&lt;p&gt;Semgrep rules look like the code you already write; no abstract syntax trees, regex wrestling, or painful DSLs. Here&#39;s a quick rule for finding Python &lt;code&gt;print()&lt;/code&gt; statements.&lt;/p&gt; &#xA;&lt;p&gt;Run it online in Semgrep‚Äôs Playground by &lt;a href=&#34;https://semgrep.dev/playground/r/3qUzQD/ievans.print-to-logger&#34;&gt;clicking here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://semgrep.dev/playground/r/3qUzQD/ievans.print-to-logger&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/images/semgrep-example-rules-editor.jpg&#34; width=&#34;582&#34; alt=&#34;Semgrep rule example for finding Python print() statements&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://semgrep.dev/docs/writing-rules/rule-ideas/&#34;&gt;Docs &amp;gt; Rule examples&lt;/a&gt; for use cases and ideas.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Use case&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Semgrep rule&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ban dangerous APIs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/lglB&#34;&gt;Prevent use of exec&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search routes and authentication&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/Y6wD&#34;&gt;Extract Spring routes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enforce the use secure defaults&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/6KwW&#34;&gt;Securely set Flask cookies&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tainted data flowing into sinks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/qEpR&#34;&gt;ExpressJS dataflow into sandbox.run&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enforce project best-practices&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/oEox&#34;&gt;Use assertEqual for == checks&lt;/a&gt;, &lt;a href=&#34;https://semgrep.dev/playground/s/zENk&#34;&gt;Always check subprocess calls&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Codify project-specific knowledge&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/p8zk&#34;&gt;Verify transactions before making them&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Audit security hotspots&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/KPwj&#34;&gt;Finding XSS in Apache Airflow&lt;/a&gt;, &lt;a href=&#34;https://semgrep.dev/playground/s/2Br8&#34;&gt;Hardcoded credentials&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Audit configuration files&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/jEKD&#34;&gt;Find S3 ARN uses&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Migrate from deprecated APIs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/r/java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated&#34;&gt;DES is deprecated&lt;/a&gt;, &lt;a href=&#34;https://semgrep.dev/playground/r/python.flask.maintainability.deprecated.deprecated-apis.flask-deprecated-apis&#34;&gt;Deprecated Flask APIs&lt;/a&gt;, &lt;a href=&#34;https://semgrep.dev/playground/r/python.bokeh.maintainability.deprecated.deprecated_apis.bokeh-deprecated-apis&#34;&gt;Deprecated Bokeh APIs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Apply automatic fixes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://semgrep.dev/playground/s/1Ayk&#34;&gt;Use listenAndServeTLS&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://semgrep.dev/docs/extensions/&#34;&gt;Docs &amp;gt; Extensions&lt;/a&gt; to learn about using Semgrep in your editor or pre-commit. When integrated into CI and configured to scan pull requests, Semgrep will only report issues introduced by that pull request; this lets you start using Semgrep without fixing or ignoring pre-existing issues!&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Browse the full Semgrep &lt;a href=&#34;https://semgrep.dev/docs&#34;&gt;documentation on the website&lt;/a&gt;. If you‚Äôre new to Semgrep, check out &lt;a href=&#34;https://semgrep.dev/docs/getting-started/&#34;&gt;Docs &amp;gt; Getting started&lt;/a&gt; or the &lt;a href=&#34;https://semgrep.dev/learn&#34;&gt;interactive tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Metrics&lt;/h3&gt; &#xA;&lt;p&gt;Using remote configuration from the &lt;a href=&#34;https://semgrep.dev/r&#34;&gt;Registry&lt;/a&gt; (like &lt;code&gt;--config=p/ci&lt;/code&gt;) reports pseudonymous rule metrics to semgrep.dev.&lt;/p&gt; &#xA;&lt;p&gt;When using configs from local files (like &lt;code&gt;--config=xyz.yml&lt;/code&gt;), metrics are sent only when the user is logged in.&lt;/p&gt; &#xA;&lt;p&gt;To disable Registry rule metrics, use &lt;code&gt;--metrics=off&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Semgrep &lt;a href=&#34;https://semgrep.dev/docs/metrics&#34;&gt;privacy policy&lt;/a&gt; describes the principles that guide data-collection decisions and the breakdown of the data that are and are not collected when the metrics are enabled.&lt;/p&gt; &#xA;&lt;h3&gt;More&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/docs/faq/&#34;&gt;Frequently asked questions (FAQs)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/docs/contributing/contributing/&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/INSTALL.md&#34;&gt;Build instructions for developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.semgrep.dev/slack&#34;&gt;Ask questions in the Semgrep community Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/docs/cli-usage&#34;&gt;CLI reference and exit codes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/semgrep&#34;&gt;Semgrep YouTube channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/semgrep/semgrep/develop/LICENSE&#34;&gt;License (LGPL-2.1)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/docs/licensing/&#34;&gt;Licensing Semgrep&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Upgrading&lt;/h3&gt; &#xA;&lt;p&gt;To upgrade, run the command below associated with how you installed Semgrep:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Using Homebrew&#xA;$ brew upgrade semgrep&#xA;&#xA;# Using pip&#xA;$ python3 -m pip install --upgrade semgrep&#xA;&#xA;# Using Docker&#xA;$ docker pull semgrep/semgrep:latest&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>