<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-10T01:28:47Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openai/shap-e</title>
    <updated>2023-05-10T01:28:47Z</updated>
    <id>tag:github.com,2023-05-10:/openai/shap-e</id>
    <link href="https://github.com/openai/shap-e" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate 3D objects conditioned on text or images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shap-E&lt;/h1&gt; &#xA;&lt;p&gt;This is the official code and model release for &lt;a href=&#34;https://arxiv.org/abs/2305.02463&#34;&gt;Shap-E: Generating Conditional 3D Implicit Functions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/#usage&#34;&gt;Usage&lt;/a&gt; for guidance on how to use this repository.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/#samples&#34;&gt;Samples&lt;/a&gt; for examples of what our text-conditional model can generate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Samples&lt;/h1&gt; &#xA;&lt;p&gt;Here are some highlighted samples from our text-conditional model. For random samples on selected prompts, see &lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples.md&#34;&gt;samples.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_chair_that_looks_like_an_avocado/2.gif&#34; alt=&#34;A chair that looks like an avocado&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/an_airplane_that_looks_like_a_banana/3.gif&#34; alt=&#34;An airplane that looks like a banana&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_spaceship/0.gif&#34; alt=&#34;A spaceship&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A chair that looks&lt;br&gt;like an avocado&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;An airplane that looks&lt;br&gt;like a banana&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A spaceship&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_birthday_cupcake/3.gif&#34; alt=&#34;A birthday cupcake&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_chair_that_looks_like_a_tree/2.gif&#34; alt=&#34;A chair that looks like a tree&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_green_boot/3.gif&#34; alt=&#34;A green boot&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A birthday cupcake&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A chair that looks&lt;br&gt;like a tree&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A green boot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_penguin/1.gif&#34; alt=&#34;A penguin&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/ube_ice_cream_cone/3.gif&#34; alt=&#34;Ube ice cream cone&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openai/shap-e/main/samples/a_bowl_of_vegetables/2.gif&#34; alt=&#34;A bowl of vegetables&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A penguin&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ube ice cream cone&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A bowl of vegetables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;&#xA;&lt;h1&gt;Usage&lt;/h1&gt;&#xA;&lt;p&gt;Install with &lt;code&gt;pip install -e .&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;To get started with examples, see the following notebooks:&lt;/p&gt;&#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/shap_e/examples/sample_text_to_3d.ipynb&#34;&gt;sample_text_to_3d.ipynb&lt;/a&gt; - sample a 3D model, conditioned on a text prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/shap_e/examples/sample_image_to_3d.ipynb&#34;&gt;sample_image_to_3d.ipynb&lt;/a&gt; - sample a 3D model, conditioned on an synthetic view image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openai/shap-e/main/shap_e/examples/encode_model.ipynb&#34;&gt;encode_model.ipynb&lt;/a&gt; - loads a 3D model or a trimesh, creates a batch of multiview renders and a point cloud, encodes them into a latent, and renders it back. For this to work, install Blender version 3.3.1 or higher, and set the environment variable &lt;code&gt;BLENDER_PATH&lt;/code&gt; to the path of the Blender executable.&lt;/li&gt; &#xA;&lt;/ul&gt;&#xA;&lt;table&gt;     &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>SCUTlihaoyu/open-chat-video-editor</title>
    <updated>2023-05-10T01:28:47Z</updated>
    <id>tag:github.com,2023-05-10:/SCUTlihaoyu/open-chat-video-editor</id>
    <link href="https://github.com/SCUTlihaoyu/open-chat-video-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source short video automatic generation tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Chat Video Editor&lt;/h1&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;Open Chat Video Editor是开源的短视频生成和编辑工具，整体技术框架如下：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236475457-e6104baa-11c2-4fe9-88b3-f328114d0076.png&#34; alt=&#34;sys中文&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;windows、linux不同系统更方便的install指引&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;创建docker，方便大家一键使用&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;能够在线直接快速体验的url&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 在短视频文案数据上对文本模型finetune,支持更多的文案风格&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; finetune SD模型，提升图像和视频的生成效果&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;目前具有以下特点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;1）&lt;strong&gt;一键生成可用的短视频&lt;/strong&gt;，包括：配音、背景音乐、字幕等。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2）算法和数据均基于开源项目，方便技术交流和学习&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;3）支持多种输入数据，方便对各种各样的数据，一键转短视频，目前支持：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;短句转短视频&lt;/strong&gt;（Text2Video）: 根据输入的简短文字，生成短视频文案，并合成短视频&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;网页链接转短视频&lt;/strong&gt;（Url2Video）: 自动对网页的内容进行提取，生成视频文案，并生成短视频&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;长视频转短视频&lt;/strong&gt;（Long Video to Short Video）: 对输入的长视频进行分析和摘要，并生成短视频&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;4）涵盖&lt;strong&gt;生成模型&lt;/strong&gt;和&lt;strong&gt;多模态检索模型&lt;/strong&gt;等多种主流算法和模型，如: Chatgpt,Stable Diffusion,CLIP 等&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;文本生成上，支持：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; BELLE&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Alpaca&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Dolly 等多种模型&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;视觉信息生成上，支持图像和视频两种模态，生成方式上，支持检索和生成两种模型，目前共有6种模式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图像检索&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图像生成（stable diffusion）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 先图像检索，再基于stable diffusion 进行图像生成&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 视频检索&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 视频生成（stable diffusion）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 视频检索后，再基于stable diffusion 进行视频生成&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;结果展示&lt;/h2&gt; &#xA;&lt;h3&gt;1、短句转短视频（Text2Video）&lt;/h3&gt; &#xA;&lt;p&gt;界面如下: &lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236427963-7e9a166b-c085-4af8-b691-5a67f3e865e5.png&#34; alt=&#34;text2video&#34;&gt; 以输入文案：【小孩子养宠物】为例，利用文本模型（如：chatgpt 等），可以自动生成一个较长的短视频文案：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#39;小孩子养宠物&#39;, &#39;可以更好地提升小孩子的责任感和独立感&#39;, &#39;但也要慎重的选择合适的宠物&#39;, &#39;因为只有经过一定的训练养成&#39;, &#39;它们才能够成长起来&#39;, &#39;一起玩耍和度过一段欢快的时光&#39;, &#39;宠物不仅能够陪伴小孩子渡过寂寞时光&#39;, &#39;还能培养小孩子处事冷静、自信以及情感交流和沟通能力&#39;, &#39;在养宠物的过程中&#39;, &#39;小孩子们可以唤醒和发掘他们被磨练出来的坚毅和耐力&#39;, &#39;能够亲身体验到勤勉 和坚持的重要性&#39;] &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;根据不同的视频生成模式，可以生成不同的视频，各个模式对比如下:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1）图像检索&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/21036347/236428839-9c3c3a2d-6163-4577-82f5-5815772f294f.mp4&#34;&gt;https://user-images.githubusercontent.com/21036347/236428839-9c3c3a2d-6163-4577-82f5-5815772f294f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2）图像生成（stable diffusion）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/21036347/236429111-b151f3b5-64d0-4572-8daa-29a78a3d1f3d.mp4&#34;&gt;https://user-images.githubusercontent.com/21036347/236429111-b151f3b5-64d0-4572-8daa-29a78a3d1f3d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3）先图像检索，再基于stable diffusion 进行图像生成&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/21036347/236429690-93ea7377-e233-4629-868f-ef953a4dfa4c.mp4&#34;&gt;https://user-images.githubusercontent.com/21036347/236429690-93ea7377-e233-4629-868f-ef953a4dfa4c.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4）视频检索&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/21036347/236430102-6054b28c-ebeb-42a2-880e-b2656fc32138.mp4&#34;&gt;https://user-images.githubusercontent.com/21036347/236430102-6054b28c-ebeb-42a2-880e-b2656fc32138.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2、网页转短视频（Url2Video）&lt;/h3&gt; &#xA;&lt;p&gt;界面如下：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236430693-fe9b3d15-8da8-4a50-b7a9-b4dc93614076.png&#34; alt=&#34;url2video&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;1）输入一个url, 例如：&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E7%9F%AD%E6%AF%9B%E7%8C%AB&#34;&gt;https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E7%9F%AD%E6%AF%9B%E7%8C%AB&lt;/a&gt; 其内容是：美国短毛猫的维基百科&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236431138-5fbb6cf2-07c8-41a3-989d-64731a6891d4.png&#34; alt=&#34;wiki&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;2）解析网页并自动摘要成短视频文案，结果如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#39;\n\n美国短毛猫&#39;, &#39;是一种神奇又魔幻的宠物猫品种&#39;, &#39;它们优雅可爱&#39;, &#39;活力无比&#39;, &#39;能拥有多达80多种头毛色彩&#39;, &#39;最出名的是银虎斑&#39;, &#39;其银色毛发中透着浓厚的黑色斑 &#xA;纹&#39;, &#39;除此之外&#39;, &#39;它们还非常温柔&#39;, &#39;是非常适合家庭和人类相处的宠物&#39;, &#39;并且平均寿命达15-20年&#39;, &#39;这种可爱的猫 &#xA;品种&#39;, &#39;正在受到越来越多人的喜爱&#39;, &#39;不妨试试你也来养一只吧&#39;]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3）自动合成短视频 例如图像生成模式下生成的结果如下，其他模式不再一一对比&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/21036347/236431745-9f61ebcc-91b5-4157-adf9-abf9c371e461.mp4&#34;&gt;https://user-images.githubusercontent.com/21036347/236431745-9f61ebcc-91b5-4157-adf9-abf9c371e461.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3、长视频转短视频（Long Video to Short Video）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;即将发布，敬请期待&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装与使用&lt;/h2&gt; &#xA;&lt;h3&gt;环境安装&lt;/h3&gt; &#xA;&lt;p&gt;根据不同需求，选择不同的安装方式1、2、和3、任选其一。&lt;/p&gt; &#xA;&lt;h4&gt;1、Docker&lt;/h4&gt; &#xA;&lt;p&gt;目前docker环境因为每个人的cuda版本可能不一样，所以无法保证都能够正常使用GPU。目前仅支持图像检索模式，且占用比较多的储存（24G）。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull iamjunhonghuang/open-chat-video-editor:retrival&#xA;docker run -it --network=host -v /YourPath/open-chat-video-editor:/YourPath/open-chat-video-editor/ iamjunhonghuang/open-chat-video-editor:retrival bash&#xA;conda activate open_editor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2、Linux (目前仅在centOS测试)&lt;/h4&gt; &#xA;&lt;p&gt;1）首先安装基于conda的python环境，gcc版本安装测试时是8.5.0，所以尽量升级到8以上&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda env create -f env.yaml&#xA;conda env update -f env.yaml #假如第一行出现错误，需要更新使用的命令&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2） 接着安装环境依赖，主要目的是正常安装ImageMagick，其他linux版本可以参考&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# yum groupinstall &#39;Development Tools&#39;&#xA;# yum install ghostscript&#xA;# yum -y install bzip2-devel freetype-devel libjpeg-devel libpng-devel libtiff-devel giflib-devel zlib-devel ghostscript-devel djvulibre-devel libwmf-devel jasper-devel libtool-ltdl-devel libX11-devel libXext-devel libXt-devel libxml2-devel librsvg2-devel OpenEXR-devel php-devel&#xA;# wget https://www.imagemagick.org/download/ImageMagick.tar.gz&#xA;# tar xvzf ImageMagick.tar.gz&#xA;# cd ImageMagick*&#xA;# ./configure&#xA;# make&#xA;# make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3）需要修改moviepy的调用路径，也就是将下面文件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/anaconda3/envs/open_editor/lib/python3.8/site-packages/moviepy/config_defaults.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改成&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#IMAGEMAGICK_BINARY = os.getenv(&#39;IMAGEMAGICK_BINARY&#39;, &#39;auto-detect&#39;)&#xA;IMAGEMAGICK_BINARY=&#39;/usr/local/bin/magick&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4）目前暂不支持中文字幕显示，所以需要修改配置文件yaml中的字体设置，例如’image_by_retrieval_text_by_chatgpt_zh.yaml‘&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  subtitle:&#xA;    font: DejaVu-Sans-Bold-Oblique&#xA;    # font: Cantarell-Regular&#xA;    # font: 华文细黑&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3、Windows&lt;/h4&gt; &#xA;&lt;p&gt;1）安装pytorch&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# GPU 版本&#xA;pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117&#xA;&#xA;# CPU版本&#xA;pip3 install torch torchvision torchaudio&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2）安装其他依赖环境&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;3）安装clip&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install git+https://github.com/openai/CLIP.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;4）安装faiss&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;conda install -c pytorch faiss-cpu&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;代码执行&lt;/h3&gt; &#xA;&lt;p&gt;1）根据实际需要，选择不同的配置文件&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;配置文件&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs/text2video/image_by_retrieval_text_by_chatgpt_zh.yaml&lt;/td&gt; &#xA;   &lt;td&gt;短文本转视频,视频文案采用chatgpt生成,视觉部分采用图像检索来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\text2video\image_by_diffusion_text_by_chatgpt_zh.yaml&lt;/td&gt; &#xA;   &lt;td&gt;短文本转视频,视频文案采用chatgpt生成, 视觉部分采用图像stable diffusion 来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\text2video\image_by_retrieval_then_diffusion_chatgpt_zh.yaml&lt;/td&gt; &#xA;   &lt;td&gt;短文本转视频,视频文案采用chatgpt生成,视觉部分采用先图像检索，然后再基于图像的stable diffusion 来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\text2video\video_by_retrieval_text_by_chatgpt_zh.yaml&lt;/td&gt; &#xA;   &lt;td&gt;短文本转视频, 视频文案采用chatgpt生成,视觉部分采用视频检索来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\url2video\image_by_retrieval_text_by_chatgpt.yaml&lt;/td&gt; &#xA;   &lt;td&gt;url转视频，视频文案采用chatgpt生成,视觉部分采用图像检索来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\url2video\image_by_diffusion_text_by_chatgpt.yaml&lt;/td&gt; &#xA;   &lt;td&gt;url转视频,视频文案采用chatgpt生成, 视觉部分采用图像stable diffusion 来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\url2video\image_by_retrieval_then_diffusion_chatgpt.yaml&lt;/td&gt; &#xA;   &lt;td&gt;url转视频,视频文案采用chatgpt生成,视觉部分采用先图像检索，然后再基于图像的stable diffusion 来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;configs\url2video\video_by_retrieval_text_by_chatgpt.yaml&lt;/td&gt; &#xA;   &lt;td&gt;url转视频,视频文案采用chatgpt生成,视觉部分采用视频检索来生成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;需要注意的是：如果要采用ChatGPT来生成文案，需要在配置文件里面，添加organization 和 api_key&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;2）下载数据索引和meta信息&lt;a href=&#34;https://pan.quark.cn/s/19fa46ceb2cb&#34;&gt;data.tar&lt;/a&gt;,并解压到 data/index 目录下，&lt;/p&gt; &#xA;&lt;p&gt;3）执行脚本&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Text to video &#xA;python  app/app.py --func Text2VideoEditor  --cfg ${cfg_file}&#xA;&#xA;&#xA;# URL to video &#xA;python  app/app.py --func URL2VideoEditor  --cfg ${cfg_file}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;1、数据来源 图像检索数据来源于:&lt;a href=&#34;https://laion.ai/blog/laion-5b/&#34;&gt;LAION-5B&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;视频检索数据来源于：&lt;a href=&#34;https://m-bain.github.io/webvid-dataset/&#34;&gt;webvid-10m&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;请注意，我们并不拥有数据版权&lt;/p&gt; &#xA;&lt;p&gt;2、该项目仅用于交流学习，不得用于商业，以及其他会对社会带来危害的用途。&lt;/p&gt; &#xA;&lt;h2&gt;交流与学习&lt;/h2&gt; &#xA;&lt;p&gt;欢迎通过&lt;a href=&#34;https://discord.gg/yWt59JUd&#34;&gt;Discard&lt;/a&gt; 或者微信与我们交流学习&lt;/p&gt; &#xA;&lt;p&gt;一群200人已满, &lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236461673-53188ad6-ad27-470f-9910-6e648f92c240.jpg&#34; alt=&#34;微信图片_20230505204811&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;二群200人已满，&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21036347/236738826-ec47d75e-5b0d-45ad-8f09-8468e9eb8172.jpeg&#34; alt=&#34;WechatIMG1888&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;请加三群：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26428693/237003622-af8b9c38-1d88-4518-8080-354666e7fa19.jpg&#34; alt=&#34;301683610444_ pic&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hemansnation/God-Level-Data-Science-ML-Full-Stack</title>
    <updated>2023-05-10T01:28:47Z</updated>
    <id>tag:github.com,2023-05-10:/hemansnation/God-Level-Data-Science-ML-Full-Stack</id>
    <link href="https://github.com/hemansnation/God-Level-Data-Science-ML-Full-Stack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of scientific methods, processes, algorithms, and systems to build stories &amp; models. This roadmap contains 16 Chapters, whether you are a fresher in the field or an experienced professional who wants to transition into Data Science &amp; AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;God-Level Data Science ML Full Stack&lt;/h1&gt; &#xA;&lt;p&gt;A collection of scientific methods, processes, algorithms, and systems to build stories &amp;amp; models. This roadmap contains 16 Chapters, whether you are a fresher in the field or an experienced professional who wants to transition into Data Science &amp;amp; AI&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/hemansnation/Data-Science-ML-Full-Stack/raw/master/images/components.png&#34;&gt; &#xA;&lt;h3&gt;The‌ ‌Roadmap‌ ‌is‌ ‌divided‌ ‌into‌ ‌16 ‌Sections‌&lt;/h3&gt; &#xA;&lt;p&gt;Duration:‌ ‌256‌ ‌Hours‌ of Learning ‌(8 ‌Months)‌ ‌and many more hours for practice and project building.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#1--python-programming-and-logic-building&#34;&gt;Python‌ ‌Programming‌ ‌and‌ ‌Logic‌ ‌Building‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#2--data-structure--algorithms&#34;&gt;Data‌ ‌Structure‌ ‌&amp;amp;‌ ‌Algorithms‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#3--pandas-numpy-matplotlib&#34;&gt;Pandas‌ ‌Numpy‌ ‌Matplotlib‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#4--statistics&#34;&gt;Statistics‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#5--machine-learning&#34;&gt;Machine‌ ‌Learning‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#6--mlops&#34;&gt;ML Operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#7--natural-language-processing&#34;&gt;Natural‌ ‌Language‌ ‌Processing‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#8--computer-vision&#34;&gt;Computer‌ ‌Vision‌‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#9--data-visualization-with-tableau&#34;&gt;Data‌ ‌Visualization‌ ‌with‌ ‌Tableau‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#10--structured-query-language-sql&#34;&gt;Structure‌d ‌Query‌ ‌Language‌ ‌(SQL)‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#11--data-engineering&#34;&gt;Data Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#12--data-system-design&#34;&gt;Data System Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#13--five-major-projects-and-git&#34;&gt;Five‌ ‌Major‌ Capstone ‌Projects‌&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#14--interview-preperation&#34;&gt;Interview Preparations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#15--git--github&#34;&gt;Git &amp;amp; GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#16--personal-profile--portfolio&#34;&gt;Personal Branding and portfolio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;Dataset Collection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Technology‌ ‌Stack‌&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python‌&lt;/li&gt; &#xA; &lt;li&gt;Data‌ ‌Structures‌&lt;/li&gt; &#xA; &lt;li&gt;NumPy‌&lt;/li&gt; &#xA; &lt;li&gt;Pandas‌&lt;/li&gt; &#xA; &lt;li&gt;Matplotlib‌&lt;/li&gt; &#xA; &lt;li&gt;Seaborn‌&lt;/li&gt; &#xA; &lt;li&gt;Scikit-Learn‌&lt;/li&gt; &#xA; &lt;li&gt;Statsmodels‌&lt;/li&gt; &#xA; &lt;li&gt;Natural‌ ‌Language‌ ‌Toolkit‌ ‌(‌ ‌NLTK‌ ‌)‌&lt;/li&gt; &#xA; &lt;li&gt;PyTorch‌&lt;/li&gt; &#xA; &lt;li&gt;OpenCV‌&lt;/li&gt; &#xA; &lt;li&gt;Tableau‌&lt;/li&gt; &#xA; &lt;li&gt;Structure‌ ‌Query‌ ‌Language‌ ‌(‌ ‌SQL‌ ‌)‌&lt;/li&gt; &#xA; &lt;li&gt;PySpark‌&lt;/li&gt; &#xA; &lt;li&gt;Azure‌ ‌Fundamentals‌&lt;/li&gt; &#xA; &lt;li&gt;Azure‌ ‌Data‌ ‌Factory‌&lt;/li&gt; &#xA; &lt;li&gt;Databricks‌&lt;/li&gt; &#xA; &lt;li&gt;5‌ ‌Major‌ ‌Projects‌&lt;/li&gt; &#xA; &lt;li&gt;Git‌ ‌and‌ ‌GitHub‌ ‌&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1 | Python Programming and Logic Building&lt;/h1&gt; &#xA;&lt;p&gt;I will prefer Python Programming Language. Python is the best for starting your programming journey. Here is the roadmap of python for logic building.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python basics, Variables, Operators, Conditional Statements&lt;/li&gt; &#xA; &lt;li&gt;List and Strings&lt;/li&gt; &#xA; &lt;li&gt;While Loop, Nested Loops, Loop Else&lt;/li&gt; &#xA; &lt;li&gt;For Loop, Break, and Continue statements&lt;/li&gt; &#xA; &lt;li&gt;Functions, Return Statement, Recursion&lt;/li&gt; &#xA; &lt;li&gt;Dictionary, Tuple, Set&lt;/li&gt; &#xA; &lt;li&gt;File Handling, Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Object-Oriented Programming&lt;/li&gt; &#xA; &lt;li&gt;Modules and Packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hemansnation/Python-Roadmap-2022&#34;&gt;In-Depth Roadmap of Python&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2 | Data Structure &amp;amp; Algorithms&lt;/h1&gt; &#xA;&lt;p&gt;Data Structure is the most important thing to learn not only for data scientists but for all the people working in computer science. With data structure, you get an internal understanding of the working of everything in software.&lt;/p&gt; &#xA;&lt;p&gt;Understand these topics&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Types of Algorithm Analysis&lt;/li&gt; &#xA; &lt;li&gt;Asymptotic Notation, Big-O, Omega, Theta&lt;/li&gt; &#xA; &lt;li&gt;Stacks&lt;/li&gt; &#xA; &lt;li&gt;Queues&lt;/li&gt; &#xA; &lt;li&gt;Linked List&lt;/li&gt; &#xA; &lt;li&gt;Trees&lt;/li&gt; &#xA; &lt;li&gt;Graphs&lt;/li&gt; &#xA; &lt;li&gt;Sorting&lt;/li&gt; &#xA; &lt;li&gt;Searching&lt;/li&gt; &#xA; &lt;li&gt;Hashing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;3 | Pandas Numpy Matplotlib&lt;/h1&gt; &#xA;&lt;p&gt;Python supports n-dimensional arrays with Numpy. For data in 2-dimensions, Pandas is the best library for analysis. You can use other tools but tools have drag-and-drop features and have limitations. Pandas can be customized as per the need as we can code depending upon the real-life problem.&lt;/p&gt; &#xA;&lt;h3&gt;Numpy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vectors, Matrix&lt;/li&gt; &#xA; &lt;li&gt;Operations on Matrix&lt;/li&gt; &#xA; &lt;li&gt;Mean, Variance, and Standard Deviation&lt;/li&gt; &#xA; &lt;li&gt;Reshaping Arrays&lt;/li&gt; &#xA; &lt;li&gt;Transpose and Determinant of Matrix&lt;/li&gt; &#xA; &lt;li&gt;Diagonal Operations, Trace&lt;/li&gt; &#xA; &lt;li&gt;Add, Subtract, Multiply, Dot, and Cross Product.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pandas&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Series and DataFrames&lt;/li&gt; &#xA; &lt;li&gt;Slicing, Rows, and Columns&lt;/li&gt; &#xA; &lt;li&gt;Operations on DataFrame&lt;/li&gt; &#xA; &lt;li&gt;Different ways to create DataFrame&lt;/li&gt; &#xA; &lt;li&gt;Read, Write Operations with CSV files&lt;/li&gt; &#xA; &lt;li&gt;Handling Missing values, replace values, and Regular Expression&lt;/li&gt; &#xA; &lt;li&gt;GroupBy and Concatenation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Matplotlib&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graph Basics&lt;/li&gt; &#xA; &lt;li&gt;Format Strings in Plots&lt;/li&gt; &#xA; &lt;li&gt;Label Parameters, Legend&lt;/li&gt; &#xA; &lt;li&gt;Bar Chart, Pie Chart, Histogram, Scatter Plot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;4 | Statistics&lt;/h1&gt; &#xA;&lt;h3&gt;Descriptive Statistics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Measure of Frequency and Central Tendency&lt;/li&gt; &#xA; &lt;li&gt;Measure of Dispersion&lt;/li&gt; &#xA; &lt;li&gt;Probability Distribution&lt;/li&gt; &#xA; &lt;li&gt;Gaussian Normal Distribution&lt;/li&gt; &#xA; &lt;li&gt;Skewness and Kurtosis&lt;/li&gt; &#xA; &lt;li&gt;Regression Analysis&lt;/li&gt; &#xA; &lt;li&gt;Continuous and Discrete Functions&lt;/li&gt; &#xA; &lt;li&gt;Goodness of Fit&lt;/li&gt; &#xA; &lt;li&gt;Normality Test&lt;/li&gt; &#xA; &lt;li&gt;ANOVA&lt;/li&gt; &#xA; &lt;li&gt;Homoscedasticity&lt;/li&gt; &#xA; &lt;li&gt;Linear and Non-Linear Relationship with Regression&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Inferential Statistics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;t-Test&lt;/li&gt; &#xA; &lt;li&gt;z-Test&lt;/li&gt; &#xA; &lt;li&gt;Hypothesis Testing&lt;/li&gt; &#xA; &lt;li&gt;Type I and Type II errors&lt;/li&gt; &#xA; &lt;li&gt;t-Test and its types&lt;/li&gt; &#xA; &lt;li&gt;One way ANOVA&lt;/li&gt; &#xA; &lt;li&gt;Two way ANOVA&lt;/li&gt; &#xA; &lt;li&gt;Chi-Square Test&lt;/li&gt; &#xA; &lt;li&gt;Implementation of continuous and categorical data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;5 | Machine Learning&lt;/h1&gt; &#xA;&lt;p&gt;The best way to master machine learning algorithms is to work with the Scikit-Learn framework. Scikit-Learn contains predefined algorithms and you can work with them just by generating the object of the class. These are the algorithm you must know including the types of Supervised and Unsupervised Machine Learning:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linear Regression&lt;/li&gt; &#xA; &lt;li&gt;Logistic Regression&lt;/li&gt; &#xA; &lt;li&gt;Decision Tree&lt;/li&gt; &#xA; &lt;li&gt;Gradient Descent&lt;/li&gt; &#xA; &lt;li&gt;Random Forest&lt;/li&gt; &#xA; &lt;li&gt;Ridge and Lasso Regression&lt;/li&gt; &#xA; &lt;li&gt;Naive Bayes&lt;/li&gt; &#xA; &lt;li&gt;Support Vector Machine&lt;/li&gt; &#xA; &lt;li&gt;KMeans Clustering&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Concepts and Topics for ML&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Measuring Accuracy&lt;/li&gt; &#xA; &lt;li&gt;Bias-Variance Trade-off&lt;/li&gt; &#xA; &lt;li&gt;Applying Regularization&lt;/li&gt; &#xA; &lt;li&gt;Elastic Net Regression&lt;/li&gt; &#xA; &lt;li&gt;Predictive Analytics&lt;/li&gt; &#xA; &lt;li&gt;Exploratory Data Analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;6 | MLOps&lt;/h1&gt; &#xA;&lt;p&gt;You can master any one of the cloud services provider from AWS, GCP and Azure. You can switch easily once you understand one of them.&lt;/p&gt; &#xA;&lt;p&gt;We will focus on AWS - Amazon Web Services first&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploy ML models using Flask&lt;/li&gt; &#xA; &lt;li&gt;Amazon Lex - Natural Language Understanding&lt;/li&gt; &#xA; &lt;li&gt;AWS Polly - Voice Analysis&lt;/li&gt; &#xA; &lt;li&gt;Amazon Transcribe - Speech to Text&lt;/li&gt; &#xA; &lt;li&gt;Amazon Textract - Extract Text&lt;/li&gt; &#xA; &lt;li&gt;Amazon Rekognition - Image Applications&lt;/li&gt; &#xA; &lt;li&gt;Amazon SageMaker - Building and deploying models&lt;/li&gt; &#xA; &lt;li&gt;Working with Deep Learning on AWS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;7 | Natural Language Processing&lt;/h1&gt; &#xA;&lt;p&gt;If you are interested in working with Text, you should do some of the work an NLP Engineer do and understand the working of Language models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sentiment analysis&lt;/li&gt; &#xA; &lt;li&gt;POS Tagging, Parsing,&lt;/li&gt; &#xA; &lt;li&gt;Text preprocessing&lt;/li&gt; &#xA; &lt;li&gt;Stemming and Lemmatization&lt;/li&gt; &#xA; &lt;li&gt;Sentiment classification using Naive Bayes&lt;/li&gt; &#xA; &lt;li&gt;TF-IDF, N-gram,&lt;/li&gt; &#xA; &lt;li&gt;Machine Translation, BLEU Score&lt;/li&gt; &#xA; &lt;li&gt;Text Generation, Summarization, ROUGE Score&lt;/li&gt; &#xA; &lt;li&gt;Language Modeling, Perplexity&lt;/li&gt; &#xA; &lt;li&gt;Building a text classifier&lt;/li&gt; &#xA; &lt;li&gt;Identifying the gender&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;8 | Computer Vision&lt;/h1&gt; &#xA;&lt;p&gt;To work on image and video analytics we can master computer vision. To work on computer vision we have to understand images.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyTorch Tensors&lt;/li&gt; &#xA; &lt;li&gt;Understanding Pretrained models like AlexNet, ImageNet, ResNet.&lt;/li&gt; &#xA; &lt;li&gt;Neural Networks&lt;/li&gt; &#xA; &lt;li&gt;Building a perceptron&lt;/li&gt; &#xA; &lt;li&gt;Building a single layer neural network&lt;/li&gt; &#xA; &lt;li&gt;Building a deep neural network&lt;/li&gt; &#xA; &lt;li&gt;Recurrent neural network for sequential data analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Convolutional Neural Networks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Understanding the ConvNet topology&lt;/li&gt; &#xA; &lt;li&gt;Convolution layers&lt;/li&gt; &#xA; &lt;li&gt;Pooling layers&lt;/li&gt; &#xA; &lt;li&gt;Image Content Analysis&lt;/li&gt; &#xA; &lt;li&gt;Operating on images using OpenCV-Python&lt;/li&gt; &#xA; &lt;li&gt;Detecting edges&lt;/li&gt; &#xA; &lt;li&gt;Histogram equalization&lt;/li&gt; &#xA; &lt;li&gt;Detecting corners&lt;/li&gt; &#xA; &lt;li&gt;Detecting SIFT feature points&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;9 | Data Visualization with Tableau&lt;/h1&gt; &#xA;&lt;p&gt;How to use it Visual Perception&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is it, How it works, Why Tableau&lt;/li&gt; &#xA; &lt;li&gt;Connecting to Data&lt;/li&gt; &#xA; &lt;li&gt;Building charts&lt;/li&gt; &#xA; &lt;li&gt;Calculations&lt;/li&gt; &#xA; &lt;li&gt;Dashboards&lt;/li&gt; &#xA; &lt;li&gt;Sharing our work&lt;/li&gt; &#xA; &lt;li&gt;Advanced Charts, Calculated Fields, Calculated Aggregations&lt;/li&gt; &#xA; &lt;li&gt;Conditional Calculation, Parameterized Calculation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;10 | Structured Query Language (SQL)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fundamental to SQL syntax and Installation&lt;/li&gt; &#xA; &lt;li&gt;Creating Tables, Modifiers&lt;/li&gt; &#xA; &lt;li&gt;Inserting and Retrieving Data, SELECT INSERT UPDATE DELETE&lt;/li&gt; &#xA; &lt;li&gt;Aggregating Data using Functions, Filtering and RegEX&lt;/li&gt; &#xA; &lt;li&gt;Subqueries, retrieve data based on conditions, grouping of Data.&lt;/li&gt; &#xA; &lt;li&gt;Practice Questions&lt;/li&gt; &#xA; &lt;li&gt;JOINs&lt;/li&gt; &#xA; &lt;li&gt;Advanced SQL concepts such as transactions, views, stored procedures, and functions.&lt;/li&gt; &#xA; &lt;li&gt;Database Design principles, normalization, and ER diagrams.&lt;/li&gt; &#xA; &lt;li&gt;Practice, Practice, Practice: Practice writing SQL queries on real-world datasets, and work on projects to apply your knowledge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;11 | Data Engineering&lt;/h1&gt; &#xA;&lt;h3&gt;BigData&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is BigData?&lt;/li&gt; &#xA; &lt;li&gt;How is BigData applied within Business?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PySpark&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Resilient Distributed Datasets&lt;/li&gt; &#xA; &lt;li&gt;Schema&lt;/li&gt; &#xA; &lt;li&gt;Lambda Expressions&lt;/li&gt; &#xA; &lt;li&gt;Transformations&lt;/li&gt; &#xA; &lt;li&gt;Actions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Data Modeling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Duplicate Data&lt;/li&gt; &#xA; &lt;li&gt;Descriptive Analysis on Data&lt;/li&gt; &#xA; &lt;li&gt;Visualizations&lt;/li&gt; &#xA; &lt;li&gt;ML lib&lt;/li&gt; &#xA; &lt;li&gt;ML Packages&lt;/li&gt; &#xA; &lt;li&gt;Pipelines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Streaming&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Packaging Spark Applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;12 | Data System Design&lt;/h1&gt; &#xA;&lt;h3&gt;What is system design?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IP and OSI Model&lt;/li&gt; &#xA; &lt;li&gt;Domain Name System (DNS)&lt;/li&gt; &#xA; &lt;li&gt;Load Balancing&lt;/li&gt; &#xA; &lt;li&gt;Clustering&lt;/li&gt; &#xA; &lt;li&gt;Caching&lt;/li&gt; &#xA; &lt;li&gt;Availability, Scalability, Storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Databases and DBMS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SQL databases&lt;/li&gt; &#xA; &lt;li&gt;NoSQL databases&lt;/li&gt; &#xA; &lt;li&gt;SQL vs NoSQL databases&lt;/li&gt; &#xA; &lt;li&gt;Database Replication&lt;/li&gt; &#xA; &lt;li&gt;Indexes&lt;/li&gt; &#xA; &lt;li&gt;Normalization and Denormalization&lt;/li&gt; &#xA; &lt;li&gt;CAP theorem&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;System Design Interview&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;URL Shortener&lt;/li&gt; &#xA; &lt;li&gt;Whatsapp, Twitter, Netflix, Uber&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;13 | Five Major Projects and Git&lt;/h1&gt; &#xA;&lt;p&gt;We follow project-based learning and we will work on all the projects in parallel.&lt;/p&gt; &#xA;&lt;h1&gt;14 | Interview Preperation&lt;/h1&gt; &#xA;&lt;h1&gt;15 | Git &amp;amp; GitHub&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://god-level-python.notion.site/Git-GitHub-Course-Make-Recruiters-reach-You-Build-your-stunning-profile-First-open-source-cont-1d4d70450aa94dd7ad2c062c0fec3cb8&#34;&gt;Git &amp;amp; GitHub Course&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Understanding Git&lt;/li&gt; &#xA; &lt;li&gt;Commands and How to commit your first code?&lt;/li&gt; &#xA; &lt;li&gt;How to use GitHub?&lt;/li&gt; &#xA; &lt;li&gt;How to make your first open-source contribution?&lt;/li&gt; &#xA; &lt;li&gt;How to work with a team? - Part 1&lt;/li&gt; &#xA; &lt;li&gt;How to create your stunning GitHub profile?&lt;/li&gt; &#xA; &lt;li&gt;How to build your own viral repository?&lt;/li&gt; &#xA; &lt;li&gt;Building a personal landing page for your Portfolio for FREE&lt;/li&gt; &#xA; &lt;li&gt;How to grow followers on GitHub?&lt;/li&gt; &#xA; &lt;li&gt;How to work with a team? Part 2 - issues, milestone and projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;16 | Personal Profile &amp;amp; Portfolio&lt;/h1&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;h3&gt;Datasets&lt;/h3&gt; &#xA;&lt;p&gt;1️⃣ &lt;a href=&#34;https://github.com/awesomedata/awesome-public-datasets&#34;&gt;Awesome Public Datasets&lt;/a&gt; This list of a topic-centric public data sources in high quality.&lt;/p&gt; &#xA;&lt;p&gt;2️⃣&lt;a href=&#34;https://github.com/niderhoff/nlp-datasets&#34;&gt;NLP Datasets&lt;/a&gt; Alphabetical list of free/public domain datasets with text data for use in NLP.&lt;/p&gt; &#xA;&lt;p&gt;3️⃣&lt;a href=&#34;https://github.com/jsbroks/awesome-dataset-tools&#34;&gt;Awesome Dataset Tools&lt;/a&gt; A curated list of awesome dataset tools.&lt;/p&gt; &#xA;&lt;p&gt;4️⃣&lt;a href=&#34;https://github.com/xephonhq/awesome-time-series-database&#34;&gt;Awesome time series database&lt;/a&gt; A curated list of time series databases.&lt;/p&gt; &#xA;&lt;p&gt;5️⃣&lt;a href=&#34;https://github.com/shramos/Awesome-Cybersecurity-Datasets&#34;&gt;Awesome-Cybersecurity-Datasets&lt;/a&gt; A curated list of amazingly awesome Cybersecurity datasets.&lt;/p&gt; &#xA;&lt;p&gt;6️⃣&lt;a href=&#34;https://github.com/mint-lab/awesome-robotics-datasets&#34;&gt;Awesome Robotics Datasets&lt;/a&gt; Robotics Dataset Collections.&lt;/p&gt; &#xA;&lt;h1&gt;Research Starting Point&lt;/h1&gt; &#xA;&lt;h3&gt;Machine Learning&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ime.unicamp.br/~dias/Intoduction%20to%20Statistical%20Learning.pdf&#34;&gt;Introduction to Statistical Learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deep Learning&lt;/h3&gt; &#xA;&lt;h3&gt;Reinforcement Learning&lt;/h3&gt; &#xA;&lt;h1&gt;Projects&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hemansnation/God-Level-Data-Science-ML-Full-Stack/tree/master/projects&#34;&gt;Here is the list of project ideas&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Data Science ML Full Stack -&amp;gt; &lt;a href=&#34;https://god-level-python.notion.site/Data-Science-ML-Full-Stack-Roadmap-05e6c16389c845d1a438ed4cff2b9952&#34;&gt;Notion Template&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;Join the WhatsApp Community Group&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.whatsapp.com/BSUPbYhzzM1BcJplcTTIxb&#34;&gt;https://chat.whatsapp.com/BSUPbYhzzM1BcJplcTTIxb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Socials&lt;/h1&gt; &#xA;&lt;h3&gt;Join Telegram for Data Science ML AI Resources:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/+sREuRiFssMo4YWJl&#34;&gt;https://t.me/+sREuRiFssMo4YWJl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Connect with me on these platforms:&lt;/h3&gt; &#xA;&lt;p&gt;LinkedIn: &lt;a href=&#34;https://www.linkedin.com/in/hemansnation/&#34;&gt;https://www.linkedin.com/in/hemansnation/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;YouTube: &lt;a href=&#34;https://www.youtube.com/@Himanshu-Ramchandani&#34;&gt;https://www.youtube.com/@Himanshu-Ramchandani&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/hemansnation&#34;&gt;https://twitter.com/hemansnation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/hemansnation&#34;&gt;https://github.com/hemansnation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instagram: &lt;a href=&#34;https://www.instagram.com/masterdexter.ai/&#34;&gt;https://www.instagram.com/masterdexter.ai/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AI Jobs LinkedIn Group:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/groups/12540639/&#34;&gt;https://www.linkedin.com/groups/12540639/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Medium Blog:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@hemansnation&#34;&gt;https://medium.com/@hemansnation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Notes on Data, Product, and AI - Newsletter:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/build-relation/newsletter-follow?entityUrn=7014799989251956736&#34;&gt;https://www.linkedin.com/build-relation/newsletter-follow?entityUrn=7014799989251956736&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Any Query?&lt;/h3&gt; &#xA;&lt;p&gt;Email Me Here: &lt;a href=&#34;mailto:connect@himanshuramchandani.co&#34;&gt;connect@himanshuramchandani.co&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>