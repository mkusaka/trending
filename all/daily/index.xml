<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-30T01:35:50Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Taiga74164/Akebi-GC</title>
    <updated>2022-09-30T01:35:50Z</updated>
    <id>tag:github.com,2022-09-30:/Taiga74164/Akebi-GC</id>
    <link href="https://github.com/Taiga74164/Akebi-GC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Genshin cheat for OS/CN 3.0&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/#&#34;&gt;&lt;img width=&#34;500&#34; height=&#34;500&#34; src=&#34;https://user-images.githubusercontent.com/67109235/176832758-7089defd-0edd-4c7a-bd69-60eeef99dca7.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/#&#34;&gt;&lt;img width=&#34;690&#34; height=&#34;133&#34; src=&#34;https://user-images.githubusercontent.com/67109235/176832764-471a6bd5-405f-43dd-97ec-c11997880993.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Akebi-Group/Akebi-GC?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Akebi-Group/Akebi-GC/total.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/Akebi-Group/Akebi-GC?style=for-the-badge&amp;amp;color=red&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/MmV8hNZB9S&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/440536354544156683?label=Discord&amp;amp;logo=discord&amp;amp;style=for-the-badge&amp;amp;color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/README.md&#34;&gt;EN&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/README_zh-Hans.md&#34;&gt;简中&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/README_zh-Hant.md&#34;&gt;繁中&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/README_vi-vn.md&#34;&gt;VN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Stable Release&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Head over to the &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/releases&#34;&gt;releases page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the latest binaries&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Latest Release&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Head over to the &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/actions&#34;&gt;Action&lt;/a&gt; page&lt;/li&gt; &#xA; &lt;li&gt;Select the most recent workflow with a green checkmark ✔ (Choose your client version &lt;strong&gt;GLOBAL/CN/BETA&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/#&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96950043/186429274-1e556c58-8027-4ec9-9c1d-3609c75aede4.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; 3. Download Akebi-GC-release in the Artifacts section &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/Akebi-GC/master/#&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96950043/186429302-7c7be3f6-df2f-4e49-9bb9-4a703c3491df.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;Check our wiki - &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/wiki/Building%EF%BD%9C%E5%BB%BA%E7%BD%AE&#34;&gt;Building&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure that &lt;code&gt;CLibrary.dll&lt;/code&gt; is in the same folder that &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;After the login page appeared, press F1 to open Akebi GUI.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Features&lt;/h1&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protection Bypass&lt;/li&gt; &#xA; &lt;li&gt;In-Game GUI&lt;/li&gt; &#xA; &lt;li&gt;Hotkeys&lt;/li&gt; &#xA; &lt;li&gt;Notifications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Player&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;God Mode(Invincible)&lt;/li&gt; &#xA; &lt;li&gt;Attack Modifier: Multi-Hit/Target/Animation&lt;/li&gt; &#xA; &lt;li&gt;No Cooldown: Skill/Ultimate/Sprint/Bow&lt;/li&gt; &#xA; &lt;li&gt;Unlimited Stamina&lt;/li&gt; &#xA; &lt;li&gt;No Clip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;World&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto Seelie&lt;/li&gt; &#xA; &lt;li&gt;Open Team Immediately&lt;/li&gt; &#xA; &lt;li&gt;GameSpeed&lt;/li&gt; &#xA; &lt;li&gt;Dumb Enemies&lt;/li&gt; &#xA; &lt;li&gt;Freeze Enemies&lt;/li&gt; &#xA; &lt;li&gt;Auto Destroy: Ores/Shields/Doodads/Plants&lt;/li&gt; &#xA; &lt;li&gt;Auto Loot/Open Chests&lt;/li&gt; &#xA; &lt;li&gt;Pickup Range&lt;/li&gt; &#xA; &lt;li&gt;Auto Talk&lt;/li&gt; &#xA; &lt;li&gt;Auto Tree Farm&lt;/li&gt; &#xA; &lt;li&gt;Auto Cook&lt;/li&gt; &#xA; &lt;li&gt;Fake Time&lt;/li&gt; &#xA; &lt;li&gt;Auto Fish&lt;/li&gt; &#xA; &lt;li&gt;Kill Aura&lt;/li&gt; &#xA; &lt;li&gt;Mob Vacuum&lt;/li&gt; &#xA; &lt;li&gt;Vacuum Loot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Teleport&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chest/Oculi Teleport (Teleports to nearest)&lt;/li&gt; &#xA; &lt;li&gt;Map Teleport (Teleport to mark on map)&lt;/li&gt; &#xA; &lt;li&gt;Custom Teleport (Teleport through the list)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Visuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP&lt;/li&gt; &#xA; &lt;li&gt;Interactive Map&lt;/li&gt; &#xA; &lt;li&gt;Elemental Sight&lt;/li&gt; &#xA; &lt;li&gt;No Fog&lt;/li&gt; &#xA; &lt;li&gt;FPS Unlock&lt;/li&gt; &#xA; &lt;li&gt;Camera Zoom&lt;/li&gt; &#xA; &lt;li&gt;Chest Indicator&lt;/li&gt; &#xA; &lt;li&gt;Hide UI&lt;/li&gt; &#xA; &lt;li&gt;In-game Embedded Browser&lt;/li&gt; &#xA; &lt;li&gt;Enable Peeking&lt;/li&gt; &#xA; &lt;li&gt;Profile Changer: UID/Nickname/AR/WorldLevel/Avatar/Namecard&lt;/li&gt; &#xA; &lt;li&gt;Custom Weather&lt;/li&gt; &#xA; &lt;li&gt;Free Camera&lt;/li&gt; &#xA; &lt;li&gt;Paimon Follow&lt;/li&gt; &#xA; &lt;li&gt;Texture Changer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entities Manager&lt;/li&gt; &#xA; &lt;li&gt;Position Info&lt;/li&gt; &#xA; &lt;li&gt;FPS Graph&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Akebi-Group/Akebi-PacketSniffer&#34;&gt;Packet Sniffer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Demo&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Map Teleportation&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/map-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Noclip&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/noclip-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Oculi&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/oculi-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Chests&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/chest-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Rapid Fire&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/rapid-fire-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Auto Talk&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/auto-talk-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Bugs&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the short explanation for bug reporting&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You found a bug.&lt;/li&gt; &#xA; &lt;li&gt;Write down what happened, as well as your first thoughts on what you think caused it.&lt;/li&gt; &#xA; &lt;li&gt;Can it be reproduced? Yes or no. If yes: Explain in as much clarity as possible. i.e what happens when the bug occurs and why it occurs.&lt;/li&gt; &#xA; &lt;li&gt;Tell us which version you are using. copy the &lt;code&gt;SHA&lt;/code&gt;/ Version Number of the latest commit when you built the mod. For example: &lt;code&gt;bd17a00ec388f3b93624280cde9e1c66e740edf9&lt;/code&gt; / Release 0.7&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/issues&#34;&gt;Open an Issue(there&#39;s a template!)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;Adding a feature&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/pulls&#34;&gt;Open a Pull Request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;Open an &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/issues&#34;&gt;issue&lt;/a&gt; with the title of the suggestion you want to make. In the description, make sure it is &lt;strong&gt;descriptive enough&lt;/strong&gt; so our devs can understand what you want and how you want it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DataTalksClub/data-engineering-zoomcamp</title>
    <updated>2022-09-30T01:35:50Z</updated>
    <id>tag:github.com,2022-09-30:/DataTalksClub/data-engineering-zoomcamp</id>
    <link href="https://github.com/DataTalksClub/data-engineering-zoomcamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free Data Engineering course!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Data Engineering Zoomcamp&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://airtable.com/shr6oVXeQvSI5HuWD&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/875246/185755203-17945fd1-6b64-46f2-8377-1011dcb1a444.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Register in &lt;a href=&#34;https://datatalks.club/slack.html&#34;&gt;DataTalks.Club&#39;s Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://app.slack.com/client/T01ATQK62F8/C01FABYF2RG&#34;&gt;&lt;code&gt;#course-data-engineering&lt;/code&gt;&lt;/a&gt; channel&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://t.me/dezoomcamp&#34;&gt;course Telegram channel with announcements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The videos are published on &lt;a href=&#34;https://www.youtube.com/c/DataTalksClub&#34;&gt;DataTalks.Club&#39;s YouTube channel&lt;/a&gt; in &lt;a href=&#34;https://www.youtube.com/playlist?list=PL3MmuxUbc_hJed7dXYoJw8DoCuVHhGEQb&#34;&gt;the course playlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/19bnYs80DwuUimHM65UV3sylsCn2j1vziPOwzBwQrebw/edit?usp=sharing&#34;&gt;Frequently asked technical questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Syllabus&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-1-introduction--prerequisites&#34;&gt;Week 1: Introduction &amp;amp; Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-2-data-ingestion&#34;&gt;Week 2: Data ingestion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-3-data-warehouse&#34;&gt;Week 3: Data Warehouse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-4-analytics-engineering&#34;&gt;Week 4: Analytics Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-5-batch-processing&#34;&gt;Week 5: Batch processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-6-streaming&#34;&gt;Week 6: Streaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/#week-7-8--9-project&#34;&gt;Week 7, 8 &amp;amp; 9: Project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Taking the course&lt;/h2&gt; &#xA;&lt;h3&gt;2023 Cohort&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Start&lt;/strong&gt;: 16 January 2023 (Monday)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Registration link&lt;/strong&gt;: &lt;a href=&#34;https://airtable.com/shr6oVXeQvSI5HuWD&#34;&gt;https://airtable.com/shr6oVXeQvSI5HuWD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to our &lt;a href=&#34;https://calendar.google.com/calendar/?cid=ZXIxcjA1M3ZlYjJpcXU0dTFmaG02MzVxMG9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&#34;&gt;public Google Calendar&lt;/a&gt; (it works from Desktop only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Self-paced mode&lt;/h3&gt; &#xA;&lt;p&gt;All the materials of the course are freely available, so that you can take the course at your own pace&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the suggested syllabus (see below) week by week&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t need to fill in the registration form. Just start watching the videos and join Slack&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://docs.google.com/document/d/19bnYs80DwuUimHM65UV3sylsCn2j1vziPOwzBwQrebw/edit?usp=sharing&#34;&gt;FAQ&lt;/a&gt; if you have problems&lt;/li&gt; &#xA; &lt;li&gt;If you can&#39;t find a solution to your problem in FAQ, ask for help in Slack&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2022 Cohort&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Start&lt;/strong&gt;: 17 January 2022&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Registration link&lt;/strong&gt;: &lt;a href=&#34;https://airtable.com/shr6oVXeQvSI5HuWD&#34;&gt;https://airtable.com/shr6oVXeQvSI5HuWD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vR9oQiYnAVvzL4dagnhvp0sngqagF0AceD0FGjhS-dnzMTBzNQIal3-hOgkTibVQvfuqbQ69b0fvRnf/pubhtml&#34;&gt;Leaderboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to our &lt;a href=&#34;https://calendar.google.com/calendar/?cid=ZXIxcjA1M3ZlYjJpcXU0dTFmaG02MzVxMG9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&#34;&gt;public Google Calendar&lt;/a&gt; (it works from Desktop only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Asking for help in Slack&lt;/h3&gt; &#xA;&lt;p&gt;The best way to get support is to use &lt;a href=&#34;https://datatalks.club/slack.html&#34;&gt;DataTalks.Club&#39;s Slack&lt;/a&gt;. Join the &lt;a href=&#34;https://app.slack.com/client/T01ATQK62F8/C01FABYF2RG&#34;&gt;&lt;code&gt;#course-data-engineering&lt;/code&gt;&lt;/a&gt; channel.&lt;/p&gt; &#xA;&lt;p&gt;To make discussions in Slack more organized:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/asking-questions.md&#34;&gt;these recommendations&lt;/a&gt; when asking for help&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://datatalks.club/slack/guidelines.html&#34;&gt;DataTalks.Club community guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Syllabus&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; NYC TLC changed the format of the data we use to parquet. But you can still access the csv files &lt;a href=&#34;https://github.com/DataTalksClub/nyc-tlc-data&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_1_basics_n_setup&#34;&gt;Week 1: Introduction &amp;amp; Prerequisites&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Course overview&lt;/li&gt; &#xA; &lt;li&gt;Introduction to GCP&lt;/li&gt; &#xA; &lt;li&gt;Docker and docker-compose&lt;/li&gt; &#xA; &lt;li&gt;Running Postgres locally with Docker&lt;/li&gt; &#xA; &lt;li&gt;Setting up infrastructure on GCP with Terraform&lt;/li&gt; &#xA; &lt;li&gt;Preparing the environment for the course&lt;/li&gt; &#xA; &lt;li&gt;Homework&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_1_basics_n_setup&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_2_data_ingestion&#34;&gt;Week 2: Data ingestion&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data Lake&lt;/li&gt; &#xA; &lt;li&gt;Workflow orchestration&lt;/li&gt; &#xA; &lt;li&gt;Setting up Airflow locally&lt;/li&gt; &#xA; &lt;li&gt;Ingesting data to GCP with Airflow&lt;/li&gt; &#xA; &lt;li&gt;Ingesting data to local Postgres with Airflow&lt;/li&gt; &#xA; &lt;li&gt;Moving data from AWS to GCP (Transfer service)&lt;/li&gt; &#xA; &lt;li&gt;Homework&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_2_data_ingestion&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_3_data_warehouse&#34;&gt;Week 3: Data Warehouse&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data Warehouse&lt;/li&gt; &#xA; &lt;li&gt;BigQuery&lt;/li&gt; &#xA; &lt;li&gt;Partitioning and clustering&lt;/li&gt; &#xA; &lt;li&gt;BigQuery best practices&lt;/li&gt; &#xA; &lt;li&gt;Internals of BigQuery&lt;/li&gt; &#xA; &lt;li&gt;Integrating BigQuery with Airflow&lt;/li&gt; &#xA; &lt;li&gt;BigQuery Machine Learning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_3_data_warehouse&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_4_analytics_engineering/&#34;&gt;Week 4: Analytics engineering&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basics of analytics engineering&lt;/li&gt; &#xA; &lt;li&gt;dbt (data build tool)&lt;/li&gt; &#xA; &lt;li&gt;BigQuery and dbt&lt;/li&gt; &#xA; &lt;li&gt;Postgres and dbt&lt;/li&gt; &#xA; &lt;li&gt;dbt models&lt;/li&gt; &#xA; &lt;li&gt;Testing and documenting&lt;/li&gt; &#xA; &lt;li&gt;Deployment to the cloud and locally&lt;/li&gt; &#xA; &lt;li&gt;Visualizing the data with google data studio and metabase&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_4_analytics_engineering&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_5_batch_processing&#34;&gt;Week 5: Batch processing&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Batch processing&lt;/li&gt; &#xA; &lt;li&gt;What is Spark&lt;/li&gt; &#xA; &lt;li&gt;Spark Dataframes&lt;/li&gt; &#xA; &lt;li&gt;Spark SQL&lt;/li&gt; &#xA; &lt;li&gt;Internals: GroupBy and joins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_5_batch_processing&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_6_stream_processing&#34;&gt;Week 6: Streaming&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to Kafka&lt;/li&gt; &#xA; &lt;li&gt;Schemas (avro)&lt;/li&gt; &#xA; &lt;li&gt;Kafka Streams&lt;/li&gt; &#xA; &lt;li&gt;Kafka Connect and KSQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_6_stream_processing&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_7_project&#34;&gt;Week 7, 8 &amp;amp; 9: Project&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Putting everything we learned to practice&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 7 and 8: working on your project&lt;/li&gt; &#xA; &lt;li&gt;Week 9: reviewing your peers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_7_project&#34;&gt;More details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Architecture diagram&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/images/architecture/arch_1.jpg&#34;&gt; &#xA;&lt;h3&gt;Technologies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Google Cloud Platform (GCP)&lt;/em&gt;: Cloud-based auto-scaling platform by Google &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Google Cloud Storage (GCS)&lt;/em&gt;: Data Lake&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;BigQuery&lt;/em&gt;: Data Warehouse&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Terraform&lt;/em&gt;: Infrastructure-as-Code (IaC)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Docker&lt;/em&gt;: Containerization&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;SQL&lt;/em&gt;: Data Analysis &amp;amp; Exploration&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Airflow&lt;/em&gt;: Pipeline Orchestration&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;dbt&lt;/em&gt;: Data Transformation&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Spark&lt;/em&gt;: Distributed Processing&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Kafka&lt;/em&gt;: Streaming&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;To get the most out of this course, you should feel comfortable with coding and command line and know the basics of SQL. Prior experience with Python will be helpful, but you can pick Python relatively fast if you have experience with other programming languages.&lt;/p&gt; &#xA;&lt;p&gt;Prior experience with data engineering is not required.&lt;/p&gt; &#xA;&lt;h2&gt;Instructors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ankush Khanna (&lt;a href=&#34;https://linkedin.com/in/ankushkhanna2&#34;&gt;https://linkedin.com/in/ankushkhanna2&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Sejal Vaidya (&lt;a href=&#34;https://linkedin.com/in/vaidyasejal&#34;&gt;https://linkedin.com/in/vaidyasejal&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Victoria Perez Mola (&lt;a href=&#34;https://www.linkedin.com/in/victoriaperezmola/&#34;&gt;https://www.linkedin.com/in/victoriaperezmola/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Alexey Grigorev (&lt;a href=&#34;https://linkedin.com/in/agrigorev&#34;&gt;https://linkedin.com/in/agrigorev&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;p&gt;For this course, you&#39;ll need to have the following software installed on your computer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker and Docker-Compose&lt;/li&gt; &#xA; &lt;li&gt;Python 3 (e.g. via &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;Anaconda&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google Cloud SDK&lt;/li&gt; &#xA; &lt;li&gt;Terraform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/week_1_basics_n_setup&#34;&gt;Week 1&lt;/a&gt; for more details about installing these tools&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: I registered, but haven&#39;t received a confirmation email. Is it normal? &lt;strong&gt;A&lt;/strong&gt;: Yes, it&#39;s normal. It&#39;s not automated. But you will receive an email eventually&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: At what time of the day will it happen? &lt;strong&gt;A&lt;/strong&gt;: Office hours will happen on Mondays at 17:00 CET. But everything will be recorded, so you can watch it whenever it&#39;s convenient for you&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: Will there be a certificate? &lt;strong&gt;A&lt;/strong&gt;: Yes, if you complete the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: I&#39;m 100% not sure I&#39;ll be able to attend. Can I still sign up? &lt;strong&gt;A&lt;/strong&gt;: Yes, please do! You&#39;ll receive all the updates and then you can watch the course at your own pace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: Do you plan to run a ML engineering course as well? &lt;strong&gt;A&lt;/strong&gt;: Glad you asked. &lt;a href=&#34;https://github.com/alexeygrigorev/mlbookcamp-code/tree/master/course-zoomcamp&#34;&gt;We do&lt;/a&gt; :)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: I&#39;m stuck! I&#39;ve got a technical question! &lt;strong&gt;A&lt;/strong&gt;: Ask on Slack! And check out the &lt;a href=&#34;https://docs.google.com/document/d/19bnYs80DwuUimHM65UV3sylsCn2j1vziPOwzBwQrebw/edit?usp=sharing&#34;&gt;student FAQ&lt;/a&gt;; many common issues have been answered already. If your issue is solved, please add how you solved it to the document. Thanks!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supporters and partners&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to support our course and our community? Please reach out to &lt;a href=&#34;https://raw.githubusercontent.com/DataTalksClub/data-engineering-zoomcamp/main/alexey@datatalks.club&#34;&gt;alexey@datatalks.club&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Big thanks to other communities for helping us spread the word about the course:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dphi.tech/&#34;&gt;DPhi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mlops.community/&#34;&gt;MLOps.community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>optiv/Freeze</title>
    <updated>2022-09-30T01:35:50Z</updated>
    <id>tag:github.com,2022-09-30:/optiv/Freeze</id>
    <link href="https://github.com/optiv/Freeze" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Freeze is a payload toolkit for bypassing EDRs using suspended processes, direct syscalls, and alternative execution methods&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Freeze.jpg&#34; height=&#34;310&#34; border=&#34;2px solid #555&#34;&gt; &lt;br&gt; Freeze &lt;/h1&gt; &#xA;&lt;h3&gt;More Information&lt;/h3&gt; &#xA;&lt;p&gt;If you want to learn more about the techniques utilized in this framework, please take a look at &lt;a href=&#34;https://www.optiv.com/insights/source-zero/blog/sacrificing-suspended-processes&#34;&gt;SourceZero Blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Freeze is a payload creation tool used for circumventing EDR security controls to execute shellcode in a stealthy manner. Freeze utilizes multiple techniques to not only remove Userland EDR hooks, but to also execute shellcode in such a way that it circumvents other endpoint monitoring controls.&lt;/p&gt; &#xA;&lt;h3&gt;Creating A Suspended Process&lt;/h3&gt; &#xA;&lt;p&gt;When a process is created, Ntdll.dll is the first DLL that is loaded. This happens before any EDR DLLs are loaded. This means that there is a bit of a delay before an EDR can be loaded and start hooking and modifying the assembly of system DLLs. In looking at Windows syscalls in Ntdll.dll, we can see that nothing is hooked yet. If we create a process in a suspend state (one that is frozen in time), we can see that no other DLLs are loaded, except for Ntdll.dll. You can also see that no EDR DLLs are loaded, meaning that the syscalls located in Ntdll.dll are unmodified.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Suspended_Process.png&#34; border=&#34;2px solid #555&#34;&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Address Space Layout Randomization&lt;/h3&gt; &#xA;&lt;p&gt;In order to use this clean suspended process to remove hooks from Freeze loader, we need a way to programmatically find and read the clean suspended process&#39; memory. This is where address space layout randomization (ASLR) comes into play. ASLR is a security mechanism to prevent stack memory corruption-based vulnerabilities. ASLR randomizes the address space inside of a process, to ensure that all memory-mapped objects, the stack, the heap, and the executable program itself, are unique. Now, this is where it gets interesting because while ASLR works, it does not work for position-independent code such as DLLs. What happens with DLLs, (specifically known system DLLs) is that the address space is randomized once at boot time. This means that we don&#39;t need to enumerate a remote process information to find the base address of its ntdll.dll because it is the same in all processes including the one that we control. Since the address of every DLL is the same place per boot, we can pull this information from our own process and never have to enumerate the suspended process to find the address.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Base_Address.png&#34; border=&#34;2px solid #555&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;With this information, we can use the API ReadProcessMemory to read a process&#39; memory. This API call is commonly associated with the reading of LSASS as part of any credential-based attack; however, on its own it is inherently not malicious, especially if we are just reading an arbitrary section of memory. The only time ReadProcessMemory will be flagged as part of something suspicious is if you are reading something you shouldn&#39;t (like the contents of LSASS). EDR products should never flag the fact that ReadProcessMemory was called, as there are legitimate operational uses for this function and would result in many false positives.&lt;/p&gt; &#xA;&lt;p&gt;We can take this a step further by only reading a section of Ntdll.dll where all syscalls are stored - its .text section, rather than reading the entire DLL.&lt;/p&gt; &#xA;&lt;p&gt;Combining these elements, we can programmatically get a copy of the .text section of Ntdll.dll to overwrite our existing hooked .text section prior to executing shellcode.&lt;/p&gt; &#xA;&lt;h3&gt;ETW Patching&lt;/h3&gt; &#xA;&lt;p&gt;ETW utilizes built-in syscalls to generate this telemetry. Since ETW is also a native feature built into Windows, security products do not need to &#34;hook&#34; the ETW syscalls to access the information. As a result, to prevent ETW, Freeze patches numerous ETW syscalls, flushing out the registers and returning the execution flow to the next instruction. Patching ETW is now default in all loaders.&lt;/p&gt; &#xA;&lt;h3&gt;Shellcode&lt;/h3&gt; &#xA;&lt;p&gt;Since only Ntdll.dll is restored, all subsequent calls to execute shellcode need to reside in Ntdll.dll. Using Go (note you can do this in other languages but in Go, its quite easy to implement) we can define and call the NT syscalls needed to allocate, write, and protect the shellcode, effectively skipping the standard calls that are located in kernel32d.dll, and Kernelbase.dll, as these may still be hooked.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Syscalls.png&#34; border=&#34;2px solid #555&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Userland_EDR.png&#34; border=&#34;2px solid #555&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/optiv/Freeze/main/Screenshots/Kernel_EDR.png&#34; border=&#34;2px solid #555&#34;&gt; &lt;/p&gt;&#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Freeze was developed in Golang.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;To install Freeze, run the following commands, or use the compiled binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build Freeze.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ___________                                    &#xA;        \_   _____/______   ____   ____ ________ ____  &#xA;         |    __) \_  __ \_/ __ \_/ __ \\___   // __ \ &#xA;         |     \   |  | \/\  ___/\  ___/ /    /\  ___/ &#xA;         \___  /   |__|    \___  &amp;gt;\___  &amp;gt;_____ \\___  &amp;gt;&#xA;             \/                \/     \/      \/    \/ &#xA;                                        (@Tyl0us)&#xA;        Soon they will learn that revenge is a dish... best served COLD...&#xA;                 &#xA;Usage of ./Freeze:&#xA;  -I string&#xA;        Path to the raw 64-bit shellcode.&#xA;  -O string&#xA;        Name of output file (e.g. loader.exe or loader.dll). Depending on what file extension defined will determine if Freeze makes a dll or exe.&#xA;  -console&#xA;        Only for Binary Payloads - Generates verbose console information when the payload is executed. This will disable the hidden window feature.&#xA;  -encrypt&#xA;        Encrypts the shellcode using AES 256 encryption&#xA;  -export string&#xA;        For DLL Loaders Only - Specify a specific Export function for a loader to have.&#xA;  -process string&#xA;        The name of process to spawn. This process has to exist in C:\Windows\System32\. Example &#39;notepad.exe&#39; (default &#34;notepad.exe&#34;)&#xA;  -sandbox&#xA;        Enables sandbox evasion by checking:&#xA;                Is Endpoint joined to a domain?&#xA;                Does the Endpoint have more than 2 CPUs?&#xA;                Does the Endpoint have more than 4 gigs of RAM?&#xA;  -sha256&#xA;        Provides the SHA256 value of the loaders (This is useful for tracking)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Binary vs DLL&lt;/h2&gt; &#xA;&lt;p&gt;Freeze can generate either a &lt;code&gt;.exe&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt; file. In order to specify this, ensure that the &lt;code&gt;-O&lt;/code&gt; command line option ends with either a &lt;code&gt;.exe&lt;/code&gt; for binaries or &lt;code&gt;.dll&lt;/code&gt; for dlls. No other file types are currently supported. In the case of DLL files, Freeze can also add additional export functionality. To do this use the &lt;code&gt;-export&lt;/code&gt; with specific export function name.&lt;/p&gt; &#xA;&lt;h2&gt;Console&lt;/h2&gt; &#xA;&lt;p&gt;Freeze utilizes a technique to first create the process and then move it into the background. This does two things - first it helps keep the process hidden, and second, avoids being detected by any EDR product. Spawning a process right away in the background can be very suspicious and an indicator of maliciousness. Freeze does this by calling the ‘GetConsoleWindow’ and ‘ShowWindow’ Windows function after the process is created and the EDR’s hooks are loaded, and then changes the windows attributes to hidden. Freeze utilizes these APIs rather than using the traditional -ldflags -H=windowsgui, as this is highly signatured and classified in most security products as an Indicator of Compromise.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;-console&lt;/code&gt; command-line option is selected, Freeze will not hide the process in the background. Instead, Freeze will add several debug messages displaying what the loader is doing.&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Special thanks to aahmad097 for developing &lt;a href=&#34;https://github.com/aahmad097/AlternativeShellcodeExec&#34;&gt;AlternativeShellcodeExec&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Special thanks to mvdan for developing &lt;a href=&#34;https://github.com/burrowers/garble&#34;&gt;Garble&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>