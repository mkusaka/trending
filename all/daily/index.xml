<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-12T01:28:45Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nexus-xyz/network-api</title>
    <updated>2024-12-12T01:28:45Z</updated>
    <id>tag:github.com,2024-12-12:/nexus-xyz/network-api</id>
    <link href="https://github.com/nexus-xyz/network-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-performance interface for supplying compute to the Nexus network.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nexus Network CLI&lt;/h1&gt; &#xA;&lt;p&gt;A high-performance command-line interface for contributing proofs to the Nexus network.&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;a href=&#34;https://beta.nexus.xyz/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nexus-xyz/network-api/main/assets/images/nexus-network-image.png&#34; alt=&#34;Nexus Network visualization showing a distributed network of interconnected nodes with a &#39;Launch Network&#39; button in the center&#34;&gt; &lt;/a&gt; &#xA; &lt;figcaption&gt; &#xA;  &lt;strong&gt;Verifiable Computation on a Global Scale&lt;/strong&gt;&#xA;  &lt;br&gt; We&#39;re building a global distributed prover network to unite the world&#39;s computers and power a new and better Internet: the Verifiable Internet. Connect to the beta and give it a try today. &#xA; &lt;/figcaption&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://cli.nexus.xyz/ | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have Rust installed, you will be prompted to install it.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&#xA;sudo apt install build-essential pkg-config libssl-dev git-all protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;Install WSL&lt;/a&gt; first, then follow Linux instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of Use&lt;/h2&gt; &#xA;&lt;p&gt;Use of the CLI is subject to the &lt;a href=&#34;https://nexus.xyz/terms-of-use&#34;&gt;Terms of Use&lt;/a&gt;. First-time users will be prompted to accept the terms. For non-interactive acceptance (e.g., CI environments), use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NONINTERACTIVE=1 sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prover Id&lt;/h2&gt; &#xA;&lt;p&gt;The CLI will prompt for your web prover id from &lt;a href=&#34;https://beta.nexus.xyz/&#34;&gt;beta.nexus.xyz&lt;/a&gt; on startup. It is ok to skip this prompt and a random id will be generated, but you&#39;ll be prompted again on startup until your web prover id is entered.&lt;/p&gt; &#xA;&lt;p&gt;The prover id prompt is disabled when NONINTERACTIVE=1 is set. In a server environment, you can manually overwrite $HOME/.nexus/prover-id with your full prover id.&lt;/p&gt; &#xA;&lt;h2&gt;Current Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only latest CLI version is supported&lt;/li&gt; &#xA; &lt;li&gt;No prebuilt binaries yet&lt;/li&gt; &#xA; &lt;li&gt;Proof cycle counting coming soon&lt;/li&gt; &#xA; &lt;li&gt;Program submission requires API key (contact &lt;a href=&#34;mailto:growth@nexus.xyz&#34;&gt;growth@nexus.xyz&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nexus.xyz/network#network-faqs&#34;&gt;Network FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/nexus-xyz&#34;&gt;Discord Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Technical issues? &lt;a href=&#34;https://github.com/nexus-xyz/network-api/issues&#34;&gt;Open an issue&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;network-api/&#xA;‚îú‚îÄ‚îÄ assets/       # Media for documentation&#xA;‚îú‚îÄ‚îÄ clients/&#xA;‚îÇ   ‚îî‚îÄ‚îÄ cli/      # Main CLI implementation&#xA;‚îú‚îÄ‚îÄ proto/        # Shared network interface definition&#xA;‚îî‚îÄ‚îÄ public/       # Files hosted at cli.nexus.xyz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nexus-xyz/network-api/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for development setup and guidelines.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0xPlaygrounds/rig</title>
    <updated>2024-12-12T01:28:45Z</updated>
    <id>tag:github.com,2024-12-12:/0xPlaygrounds/rig</id>
    <link href="https://github.com/0xPlaygrounds/rig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚öôÔ∏èü¶Ä Build portable, modular &amp; lightweight Fullstack Agents&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;img/rig-playgrounds-dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;img/rig-playgrounds-light.svg&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/rig-playgrounds-light.svg?sanitize=true&#34; style=&#34;width: 40%; height: 40%;&#34; alt=&#34;Rig logo&#34;&gt; &#xA; &lt;/picture&gt; &lt;br&gt; &lt;a href=&#34;https://docs.rig.rs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%96%20docs-rig.rs-dca282.svg?sanitize=true&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://docs.rs/rig-core/latest/rig/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-API%20Reference-dca282.svg?sanitize=true&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://crates.io/crates/rig-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/rig-core.svg?color=dca282&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://crates.io/crates/rig-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/rig-core.svg?color=dca282&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/playgrounds&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/511303648119226382?color=%236d82cc&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/0xPlaygrounds/rig&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/0xPlaygrounds/rig?style=social&#34; alt=&#34;stars - rig&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/built_with-Rust-dca282.svg?logo=rust&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://twitter.com/Playgrounds0x&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/Playgrounds0x&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;br&gt; &lt;/p&gt; &amp;nbsp; &#xA;&lt;p&gt;‚ú® If you would like to help spread the word about Rig, please consider starring the repo!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Here be dragons! As we plan to ship a torrent of features in the following months, future updates &lt;strong&gt;will&lt;/strong&gt; contain &lt;strong&gt;breaking changes&lt;/strong&gt;. With Rig evolving, we&#39;ll annotate changes and highlight migration paths as we encounter them.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;What is Rig?&lt;/h2&gt; &#xA;&lt;p&gt;Rig is a Rust library for building scalable, modular, and ergonomic &lt;strong&gt;LLM-powered&lt;/strong&gt; applications.&lt;/p&gt; &#xA;&lt;p&gt;More information about this crate can be found in the &lt;a href=&#34;https://docs.rig.rs&#34;&gt;official&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.rs/rig-core/latest/rig/&#34;&gt;crate&lt;/a&gt; (API Reference) documentations.&lt;/p&gt; &#xA;&lt;p&gt;Help us improve Rig by contributing to our &lt;a href=&#34;https://bit.ly/Rig-Feeback-Form&#34;&gt;Feedback form&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#what-is-rig&#34;&gt;What is Rig?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#table-of-contents&#34;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#high-level-features&#34;&gt;High-level features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#get-started&#34;&gt;Get Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#simple-example&#34;&gt;Simple example:&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;High-level features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full support for LLM completion and embedding workflows&lt;/li&gt; &#xA; &lt;li&gt;Simple but powerful common abstractions over LLM providers (e.g. OpenAI, Cohere) and vector stores (e.g. MongoDB, in-memory)&lt;/li&gt; &#xA; &lt;li&gt;Integrate LLMs in your app with minimal boilerplate&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo add rig-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Simple example:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use rig::{completion::Prompt, providers::openai};&#xA;&#xA;#[tokio::main]&#xA;async fn main() {&#xA;    // Create OpenAI client and model&#xA;    // This requires the `OPENAI_API_KEY` environment variable to be set.&#xA;    let openai_client = openai::Client::from_env();&#xA;&#xA;    let gpt4 = openai_client.agent(&#34;gpt-4&#34;).build();&#xA;&#xA;    // Prompt the model and print its response&#xA;    let response = gpt4&#xA;        .prompt(&#34;Who are you?&#34;)&#xA;        .await&#xA;        .expect(&#34;Failed to prompt GPT-4&#34;);&#xA;&#xA;    println!(&#34;GPT-4: {response}&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note using &lt;code&gt;#[tokio::main]&lt;/code&gt; requires you enable tokio&#39;s &lt;code&gt;macros&lt;/code&gt; and &lt;code&gt;rt-multi-thread&lt;/code&gt; features or just &lt;code&gt;full&lt;/code&gt; to enable all features (&lt;code&gt;cargo add tokio --features macros,rt-multi-thread&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can find more examples each crate&#39;s &lt;code&gt;examples&lt;/code&gt; (ie. &lt;a href=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/src/examples&#34;&gt;&lt;code&gt;src/examples&lt;/code&gt;&lt;/a&gt;) directory. More detailed use cases walkthroughs are regularly published on our &lt;a href=&#34;https://dev.to/0thtachi&#34;&gt;Dev.to Blog&lt;/a&gt; and added to Rig&#39;s official documentation &lt;a href=&#34;http://docs.rig.rs&#34;&gt;(docs.rig.rs)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Integrations&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model Providers&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Vector Stores&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/ChatGPT_logo.svg/1024px-ChatGPT_logo.svg.png&#34; alt=&#34;ChatGPT logo&#34; width=&#34;50em&#34;&gt; &#xA;    &lt;picture&gt;&#xA;     &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://www.fahimai.com/wp-content/uploads/2024/06/Untitled-design-7.png&#34;&gt;&#xA;     &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Claude_Ai.svg/1024px-Claude_Ai.svg.png&#34;&gt;&#xA;     &lt;img src=&#34;https://www.fahimai.com/wp-content/uploads/2024/06/Untitled-design-7.png&#34; alt=&#34;Claude Anthropic logo&#34; width=&#34;50em&#34;&gt;&#xA;    &lt;/picture&gt; &lt;br&gt; &lt;img src=&#34;https://cdn.sanity.io/images/rjtqmwfu/production/0adbf394439f4cd0ab8b5b3b6fe1da10c8099024-201x200.svg?sanitize=true&#34; alt=&#34;Cohere logo&#34; width=&#34;50em&#34;&gt; &lt;img src=&#34;https://logospng.org/download/google-gemini/google-gemini-1024.png&#34; style=&#34;background-color: white; border-radius: 10px; padding: 5px 5px ; width: 3em;&#34; alt=&#34;Gemini logo&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/XAI-Logo.svg/512px-XAI-Logo.svg.png?20240912222841&#34; style=&#34;background-color: white; border-radius: 10px; padding: 5px 5px ; width: 3em;&#34; alt=&#34;xAI logo&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/4763ae96-ddc9-4f69-ab38-23592e6c4ead&#34; style=&#34;background-color: white; border-radius: 10px; padding: 5px 0px ; width: 4em;&#34; alt=&#34;perplexity logo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.prod.website-files.com/6640cd28f51f13175e577c05/664e00a400e23f104ed2b6cd_3b3dd6e8-8a73-5879-84a9-a42d5b910c74.svg?sanitize=true&#34; alt=&#34;Mongo DB logo&#34; width=&#34;50em&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/e/e5/Neo4j-logo_color.png&#34; alt=&#34;Neo4j logo&#34; style=&#34;background-color: white; border-radius: 1em; padding: 1em 1em ; width: 4em;&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/844/1*Jp6VwF0OcdeyRyW0Ln0RMQ@2x.png&#34; width=&#34;100em&#34; alt=&#34;Lance DB logo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Vector stores are available as separate companion-crates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MongoDB vector store: &lt;a href=&#34;https://github.com/0xPlaygrounds/rig/tree/main/rig-mongodb&#34;&gt;&lt;code&gt;rig-mongodb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LanceDB vector store: &lt;a href=&#34;https://github.com/0xPlaygrounds/rig/tree/main/rig-lancedb&#34;&gt;&lt;code&gt;rig-lancedb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Neo4j vector store: &lt;a href=&#34;https://github.com/0xPlaygrounds/rig/tree/main/rig-neo4j&#34;&gt;&lt;code&gt;rig-neo4j&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Qdrant vector store: &lt;a href=&#34;https://github.com/0xPlaygrounds/rig/tree/main/rig-qdrant&#34;&gt;&lt;code&gt;rig-qdrant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/built-by-playgrounds.svg?sanitize=true&#34; alt=&#34;Build by Playgrounds&#34; width=&#34;30%&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lmarzen/esp32-weather-epd</title>
    <updated>2024-12-12T01:28:45Z</updated>
    <id>tag:github.com,2024-12-12:/lmarzen/esp32-weather-epd</id>
    <link href="https://github.com/lmarzen/esp32-weather-epd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A low-power E-Paper weather display powered by an ESP32 microcontroller. Utilizes the OpenWeatherMap API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP32 E-Paper Weather Display&lt;/h1&gt; &#xA;&lt;p&gt;This is a weather display powered by a wifi-enabled ESP32 microcontroller and a 7.5in E-Paper (aka E-ink) display. Current and forecasted weather data is obtained from the OpenWeatherMap API. A sensor provides the display with accurate indoor temperature and humidity.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-front.jpg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-side.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-back.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-bottom-cover.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-bottom-cover-removed.jpg&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The project draws ~14ŒºA when sleeping and an estimated average of ~83mA during its ~15s wake period. The display can be configured to update as frequently as desired. When the refresh interval is set to 30 minutes, the device will run for &amp;gt;6 months on a single 5000mAh battery. The project displays accurate battery life percentage and can be recharged via a USB-C cable connected to a wall adapter or computer.&lt;/p&gt; &#xA;&lt;p&gt;There are configuration options for everything from location, time/date formats, units, and language to air quality index scale and hourly outlook graph bounds.&lt;/p&gt; &#xA;&lt;p&gt;The hourly outlook graph (bottom right) shows a line indicating temperature and shaded bars indicating probability of precipitation (or optionally volume of precipitation).&lt;/p&gt; &#xA;&lt;p&gt;Here are two examples utilizing various configuration options:&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-new-york.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-london.jpg&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#setup-guide&#34;&gt;Setup Guide&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#hardware&#34;&gt;Hardware&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#wiring&#34;&gt;Wiring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#configuration-compilation-and-upload&#34;&gt;Configuration, Compilation, and Upload&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#openweathermap-api-key&#34;&gt;OpenWeatherMap API Key&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#error-messages-and-troubleshooting&#34;&gt;Error Messages and Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#low-battery&#34;&gt;Low Battery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#wifi-connection&#34;&gt;WiFi Connection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#api-error&#34;&gt;API Error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#time-server-error&#34;&gt;Time Server Error&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/#licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup Guide&lt;/h2&gt; &#xA;&lt;h3&gt;Hardware&lt;/h3&gt; &#xA;&lt;p&gt;7.5inch (800√ó480) E-Paper Display&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Advantages of E-Paper&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ultra Low Power Consumption - E-Paper (aka E-Ink) displays are ideal for low-power applications that do not require frequent display refreshes. E-Paper displays only draw power when refreshing the display and do not have a backlight. Images will remain on the screen even when power is removed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Limitations of E-Paper:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Colors - E-Paper has traditionally been limited to just black and white, but in recent years 3-color E-Paper screens have started showing up.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Refresh Times and Ghosting - E-Paper displays are highly susceptible to ghosting effects if refreshed too quickly. To avoid this, E-Paper displays often take a few seconds to refresh(4s for the unit used in this project) and will alternate between black and white a few times, which can be distracting.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Panel support:&lt;/p&gt; &lt;p&gt;Waveshare and Good Display make equivalent panels. Either variant will work.&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Panel&lt;/th&gt; &#xA;     &lt;th&gt;Resolution&lt;/th&gt; &#xA;     &lt;th&gt;Colors&lt;/th&gt; &#xA;     &lt;th&gt;Notes&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Waveshare 7.5in e-paper (v2)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.waveshare.com/product/7.5inch-e-paper.htm&#34;&gt;here&lt;/a&gt;. (recommended)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Good Display 7.5in e-paper (GDEY075T7)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.aliexpress.com/item/3256802683908868.html&#34;&gt;here&lt;/a&gt;. (recommended)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Waveshare 7.5in e-Paper (B)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;Red/Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.waveshare.com/product/7.5inch-e-paper-b.htm&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Good Display 7.5in e-paper (GDEY075Z08)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;Red/Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.aliexpress.com/item/3256803540460035.html&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Waveshare 7.3in ACeP e-Paper (F)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;7-Color&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.waveshare.com/product/displays/e-paper/epaper-1/7.3inch-e-paper-f.htm&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Good Display 7.3in e-paper (GDEY073D46)&lt;/td&gt; &#xA;     &lt;td&gt;800x480px&lt;/td&gt; &#xA;     &lt;td&gt;7-Color&lt;/td&gt; &#xA;     &lt;td&gt;Available &lt;a href=&#34;https://www.aliexpress.com/item/3256805485098421.html&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Waveshare 7.5in e-paper (v1)&lt;/td&gt; &#xA;     &lt;td&gt;640x384px&lt;/td&gt; &#xA;     &lt;td&gt;Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Limited support. Some information not displayed, see &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-waveshare75-version1.jpg&#34;&gt;image&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Good Display 7.5in e-paper (GDEW075T8)&lt;/td&gt; &#xA;     &lt;td&gt;640x384px&lt;/td&gt; &#xA;     &lt;td&gt;Black/White&lt;/td&gt; &#xA;     &lt;td&gt;Limited support. Some information not displayed, see &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-waveshare75-version1.jpg&#34;&gt;image&lt;/a&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;p&gt;This software has limited support for accent colors. E-paper panels with additional colors tend to have longer refresh times, which will reduce battery life.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;DESPI-C02 Adapter Board&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;No level converters, which makes it better for low-power use with 3.3V processors compared to the Waveshare HAT.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Waveshare started shipping revision 2.3 of their e-paper HAT. Some users have reported issues with this HAT (&lt;a href=&#34;https://github.com/lmarzen/esp32-weather-epd/issues/62&#34;&gt;#62&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.e-paper-display.com/products_detail/productId=403.html&#34;&gt;https://www.e-paper-display.com/products_detail/productId=403.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.aliexpress.us/item/3256804446769469.html&#34;&gt;https://www.aliexpress.us/item/3256804446769469.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;FireBeetle 2 ESP32-E Microcontroller&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Why the ESP32?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Onboard WiFi.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;520kB of RAM and 4MB of FLASH, enough to store lots of icons and fonts.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Low power consumption.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Small size, many small development boards available.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why the FireBeetle 2 ESP32-E&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Drobot&#39;s FireBeetle ESP32 models are optimized for low-power consumption (&lt;a href=&#34;https://diyi0t.com/reduce-the-esp32-power-consumption/&#34;&gt;https://diyi0t.com/reduce-the-esp32-power-consumption/&lt;/a&gt;). The Drobot&#39;s FireBeetle 2 ESP32-E variant offers USB-C, but older versions of the board with Micro-USB would work fine too.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Firebeetle ESP32 models include onboard charging circuitry for a 3.7v lithium-ion(LiPo) battery.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;FireBeetle ESP32 models include onboard circuitry to monitor battery voltage of a battery connected to its JST-PH2.0 connector.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dfrobot.com/product-2195.html&#34;&gt;https://www.dfrobot.com/product-2195.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;BME280 - Pressure, Temperature, and Humidity Sensor&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provides accurate indoor temperature and humidity.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Much faster than the DHT22, which requires a 2-second wait before reading temperature and humidity samples.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;3.7V Lipo Battery w/ 2 Pin JST Connector&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Size is up to you. I used a 5000mah battery so that the device can operate on a single charge for &amp;gt;6 months.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The battery can be charged by plugging the FireBeetle ESP32 into the wall via the USB-C connector while the battery is plugged into the ESP32&#39;s JST connector.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; The polarity of JST-PH2.0 connectors is not standardized! You may need to swap the order of the wires in the connector.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stand/Frame&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll want a nice way to show off your project. Here are a few popular choices.&lt;/li&gt; &#xA; &lt;li&gt;DIY Wooden &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I made a small stand by hollowing out a piece of wood from the bottom. On the back, I used a short USB extension cable so that I can charge the battery without needing to remove the components from the stand. I also wired a small reset button to refresh the display manually. Additionally, I 3d printed a cover for the bottom, which is held on by magnets. The E-paper screen is very thin, so I used a thin piece of acrylic to support it.&lt;/li&gt; &#xA;   &lt;li&gt;Measurements: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;depth = 63mm &lt;br&gt; height = 49mm &lt;br&gt; width = 170.2mm (= width of the screen) &lt;br&gt; screen angle = 80deg &lt;br&gt; screen is 15mm from the front&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3D Printable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Here is a list of community designs.&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Contributor&lt;/th&gt; &#xA;       &lt;th&gt;Link&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/@FrAllard_1585397&#34;&gt;Francois Allard&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/791477-weather-station-using-a-esp32&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/@3DNate_451157&#34;&gt;3D Nate&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/661183-e-ink-weather-station-frame&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/Spanholz&#34;&gt;Sven F.&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/657756-case-for-esp32-weather-station&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/@LayersStudio&#34;&gt;Layers Studio&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/655768-esp32-e-paper-weather-display-stand&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/@PJVeltri_1590999&#34;&gt;PJ Veltri&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/692944-base-and-display-holder-for-esp-32-e-paper-weather&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/@TheMeanCanEH_1207348&#34;&gt;TheMeanCanEHdian&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.printables.com/model/841458-weather-display-enclosure&#34;&gt;Printables&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.thingiverse.com/mpharms/designs&#34;&gt;MPHarms&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:6666148&#34;&gt;Thingiverse&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If you want to share your own 3D printable designs, your contributions are highly encouraged and welcome!&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Picture Frame&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wiring&lt;/h3&gt; &#xA;&lt;p&gt;Pin connections are defined in &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/platformio/src/config.cpp&#34;&gt;config.cpp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using the FireBeetle 2 ESP32-E, you can use the connections I used or change them how you would like.&lt;/p&gt; &#xA;&lt;p&gt;I have included 2 wiring diagrams. One for the Waveshare HAT rev2.2 and another using the recommended DESPI-C02.&lt;/p&gt; &#xA;&lt;p&gt;IMPORTANT: The Waveshare E-Paper Driver HAT has two physical switches that MUST be set correctly for the display to work.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Display Config: Set switch to position B.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Interface Config: Set switch to position 0.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;IMPORTANT: The DESPI-C02 adapter has one physical switch that MUST be set correctly for the display to work.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RESE: Set switch to position 0.47.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cut the low power pad for even longer battery life.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;a href=&#34;https://wiki.dfrobot.com/FireBeetle_Board_ESP32_E_SKU_DFR0654&#34;&gt;https://wiki.dfrobot.com/FireBeetle_Board_ESP32_E_SKU_DFR0654&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Low Power Pad: This pad is specially designed for low power consumption. It is connected by default. You can cut off the thin wire in the middle with a knife to disconnect it. After disconnection, the static power consumption can be reduced by 500 ŒºA. The power consumption can be reduced to 13 ŒºA after controlling the maincontroller enter the sleep mode through the program. Note: when the pad is disconnected, you can only drive RGB LED light via the USB Power supply.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/wiring_diagram_despi-c02.png&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/wiring_diagram_waveshare_rev22.png&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-tucson.jpg&#34; width=&#34;32%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Configuration, Compilation, and Upload&lt;/h3&gt; &#xA;&lt;p&gt;PlatformIO for VSCode is used for managing dependencies, code compilation, and uploading to ESP32.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository or download and extract the .zip.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install VSCode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow these instructions to install the PlatformIO extension for VSCode: &lt;a href=&#34;https://platformio.org/install/ide?install=vscode&#34;&gt;https://platformio.org/install/ide?install=vscode&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the project in VSCode.&lt;/p&gt; &lt;p&gt;a. File &amp;gt; Open Folder...&lt;/p&gt; &lt;p&gt;b. Navigate to this project and select the folder called &#34;platformio&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure Options.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Most configuration options are located in &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/platformio/src/config.cpp&#34;&gt;config.cpp&lt;/a&gt;, with a few in &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/platformio/include/config.h&#34;&gt;config.h&lt;/a&gt;. Locale/language options can also be found in include/locales/locale_*.inc.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Important settings to configure in config.cpp:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;WiFi credentials (ssid, password).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Open Weather Map API key (it&#39;s free, see next section for important notes about obtaining an API key).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Latitude and longitude.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Time and date formats.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Sleep duration.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Pin connections for E-Paper (SPI), BME280 (I2C), and battery voltage (ADC).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Important settings to configure in config.h:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Units (Metric or Imperial).&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Comments explain each option in detail.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and Upload Code.&lt;/p&gt; &lt;p&gt;a. Connect ESP32 to your computer via USB.&lt;/p&gt; &lt;p&gt;b. Click the upload arrow along the bottom of the VSCode window. (Should say &#34;PlatformIO: Upload&#34; if you hover over it.)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;PlatformIO will automatically download the required third-party libraries, compile, and upload the code. :)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You will only see this if you have the PlatformIO extension installed.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If you are getting errors during the upload process, you may need to install drivers to allow you to upload code to the ESP32.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;OpenWeatherMap API Key&lt;/h3&gt; &#xA;&lt;p&gt;Sign up here to get an API key; it&#39;s free. &lt;a href=&#34;https://openweathermap.org/api&#34;&gt;https://openweathermap.org/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project will make calls to 2 different APIs (&#34;One Call&#34; and &#34;Air Pollution&#34;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The One Call API 3.0 is only included in the &#34;One Call by Call&#34; subscription. This separate subscription includes 1,000 calls/day for free and allows you to pay only for the number of API calls made to this product.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s how to subscribe and avoid any credit card changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://home.openweathermap.org/subscriptions/billing_info/onecall_30/base?key=base&amp;amp;service=onecall_30&#34;&gt;https://home.openweathermap.org/subscriptions/billing_info/onecall_30/base?key=base&amp;amp;service=onecall_30&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions to complete the subscription.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://home.openweathermap.org/subscriptions&#34;&gt;https://home.openweathermap.org/subscriptions&lt;/a&gt; and set the &#34;Calls per day (no more than)&#34; to 1,000. This ensures you will never overrun the free calls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Error Messages and Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Low Battery&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-low-battery.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears once the battery voltage has fallen below LOW_BATTERY_VOLTAGE (default = 3.20v). The display will not refresh again until it detects battery voltage above LOW_BATTERY_VOLTAGE. When battery voltage is between LOW_BATTERY_VOLTAGE and VERY_LOW_BATTERY_VOLTAGE (default = 3.10v) the esp32 will deep-sleep for periods of LOW_BATTERY_SLEEP_INTERVAL (default = 30min) before checking battery voltage again. If the battery voltage falls between LOW_BATTERY_SLEEP_INTERVAL and CRIT_LOW_BATTERY_VOLTAGE (default = 3.00v), then the display will deep-sleep for periods VERY_LOW_BATTERY_SLEEP_INTERVAL (default = 120min). If battery voltage falls below CRIT_LOW_BATTERY_VOLTAGE, then the esp32 will enter hibernate mode and will require a manual push of the reset (RST) button to begin updating again. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;WiFi Connection&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-wifi.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears when the ESP32 fails to connect to WiFi. If the message reads &#34;WiFi Connection Failed&#34; this might indicate an incorrect password. If the message reads &#34;SSID Not Available&#34; this might indicate that you mistyped the SSID or that the esp32 is out of the range of the access point. The esp32 will retry once every SLEEP_DURATION (default = 30min). &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;API Error&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-api.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears if an error (client or server) occurs when making an API request to OpenWeatherMap. The second line will give the error code followed by a descriptor phrase. Positive error codes correspond to HTTP response status codes, while error codes &amp;lt;= 0 indicate a client(esp32) error. The esp32 will retry once every SLEEP_DURATION (default = 30min). &#xA;&lt;br&gt;&#xA;&lt;br&gt; In the example shown to the left, &#34;401: Unauthorized&#34; may be the result of an incorrect API key or that you are attempting to use the One Call v3 API without the proper account setup. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;Time Server Error&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-time.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears when the esp32 fails to fetch the time from NTP_SERVER_1/NTP_SERVER_2. This error sometimes occurs immediately after uploading to the esp32; in this case, just hit the reset button or wait for SLEEP_DURATION (default = 30min) and the esp32 to automatically retry. If the error persists, try selecting closer/lower latency time servers or increasing NTP_TIMEOUT. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;esp32-weather-epd is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt; with tools, fonts, and icons whose licenses are as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit-GFX-Library/tree/master/fontconvert&#34;&gt;Adafruit-GFX-Library: fontconvert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/fonts/fontconvert/license.txt&#34;&gt;BSD License&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CLI tool for preprocessing fonts to be used with the Adafruit_GFX Arduino library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lmarzen/pollutant-concentration-to-aqi&#34;&gt;pollutant-concentration-to-aqi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/platformio/lib/pollutant-concentration-to-aqi/LICENSE&#34;&gt;GNU Lesser General Public License v2.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C library that converts pollutant concentrations to Air Quality Index(AQI).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnu.org/software/freefont/&#34;&gt;GNU FreeFont&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnu.org/software/freefont/license.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Lato&#34;&gt;Lato&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Montserrat&#34;&gt;Montserrat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Open+Sans&#34;&gt;Open Sans&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Poppins&#34;&gt;Poppins&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Quicksand&#34;&gt;Quicksand&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Raleway&#34;&gt;Raleway&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Roboto&#34;&gt;Roboto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License v2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Roboto+Mono&#34;&gt;Roboto Mono&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License v2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Roboto+Slab&#34;&gt;Roboto Slab&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License v2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://design.ubuntu.com/font&#34;&gt;Ubuntu font&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ubuntu.com/legal/font-licence&#34;&gt;Ubuntu Font Licence v1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Font Family&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/erikflowers/weather-icons&#34;&gt;Weather Themed Icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(wi-**.svg) Weather icon family by Lukas Bischoff/Erik Flowers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fonts.google.com/icons&#34;&gt;Google Icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License v2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(battery**.svg, visibility_icon.svg) Battery and visibility icons from Google Icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://svgsilh.com/image/37775.html&#34;&gt;Biological Hazard Symbol&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Public_domain&#34;&gt;CC0 v1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(biological_hazard_symbol.svg) Biohazard icon.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://seekicon.com/free-icon/house_16&#34;&gt;House Icon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://opensource.org/licenses/mit-license.html&#34;&gt;MIT License&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(house.svg) House icon.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/icons/svg&#34;&gt;Indoor Temerature/Humidity Icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL v1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(house_**.svg) Indoor temerature/humidity icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://svgsilh.com/image/309911.html&#34;&gt;Ionizing Radiation Symbol&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;CC0 v1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(ionizing_radiation_symbol.svg) Ionizing radiation icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/phosphor-icons/homepage&#34;&gt;Phosphor Icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://opensource.org/licenses/mit-license.html&#34;&gt;MIT License&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(wifi**.svg, warning_icon.svg, error_icon.svg) WiFi, Warning, and Error icons from Phosphor Icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.onlinewebfonts.com/icon/251550&#34;&gt;Wind Direction Icon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0&#34;&gt;CC BY v3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(meteorological_wind_direction_**deg.svg) Meteorological wind direction icon from Online Web Fonts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>