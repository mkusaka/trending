<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-30T01:28:45Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hengyoush/kyanos</title>
    <updated>2024-11-30T01:28:45Z</updated>
    <id>tag:github.com,2024-11-30:/hengyoush/kyanos</id>
    <link href="https://github.com/hengyoush/kyanos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Visualize the time packets spend in the kernel, watch &amp; analyze in command line.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kyanos&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/hengyoush/kyanos&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/hengyoush/kyanos&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hengyoush/kyanos/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/hengyoush/kyanos/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/kyanos-demo.gif&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/README_CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | English&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kyanos.pages.dev/&#34;&gt;English Document&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-what-is-kyanos&#34;&gt;What is kyanos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-how-to-get-kyanos&#34;&gt;How to get kyanos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#-feedback-and-contributions&#34;&gt;Feedback and Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#%EF%B8%8F-contacts&#34;&gt;Contacts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is kyanos&lt;/h2&gt; &#xA;&lt;p&gt;Kyanos is an &lt;strong&gt;eBPF-based&lt;/strong&gt; network issue analysis tool that enables you to capture network requests, such as HTTP, Redis, and MySQL requests.&lt;br&gt; It also helps you analyze abnormal network issues and quickly troubleshooting without the complex steps of packet capturing, downloading, and analysis.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful Traffic Filtering&lt;/strong&gt;: Not only can filter based on traditional IP/port information, can also filter by process/container, L7 protocol information, request/response byte size, latency, and more.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Filter by pid&#xA;./kyanos watch --pids 1234&#xA;# Filter by container id&#xA;./kyanos watch --container-id abc&#xA;# Filter by Redis key&#xA;./kyanos watch redis --keys my-key1,my-key2&#xA;# Filter by response byte size&#xA;./kyanos watch --resp-size 10000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced Analysis Capabilities&lt;/strong&gt; : Unlike tcpdump, which only provides fine-grained packet capture, Kyanos supports aggregating captured packet metrics across various dimensions, quickly providing the critical data most useful for troubleshooting.&lt;br&gt; Imagine if the bandwidth of your HTTP service is suddenly maxed out‚Äîhow would you quickly analyze &lt;code&gt;which IPs&lt;/code&gt; and &lt;code&gt;which requests&lt;/code&gt; are causing it?&lt;br&gt; With Kyanos, you just need one command: &lt;code&gt;kyanos stat http --bigresp&lt;/code&gt; to find the largest response byte sizes sent to remote IPs and view specific data on request and response metrics.&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/whatkyanos.gif&#34; alt=&#34;kyanos find big response&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;In-Depth Kernel-Level Latency Details&lt;/strong&gt;: In real-world, slow queries to remote services like Redis can be challenging to diagnose precisely. Kyanos provides kernel trace points from the arrival of requests/responses at the network card to the kernel socket buffer, displaying these details in a visual format. This allows you to identify exactly which stage is causing delays.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/timedetail.jpg&#34; alt=&#34;kyanos time detail&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lightweight and Dependency-Free&lt;/strong&gt;: Almost zero dependencies‚Äîjust a single binary file and one command, with all results displayed in the command line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic SSL Traffic Decryption&lt;/strong&gt; : All captured requests and responses are presented in plaintext.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Capture HTTP Traffic with Latency Details&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./kyanos watch http&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/qs-watch-http.gif&#34; alt=&#34;kyanos quick start watch http&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Capture Redis Traffic with Latency Details&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./kyanos watch redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/qs-redis.gif&#34; alt=&#34;kyanos quick start watch redis&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Identify the Slowest Requests in the Last 5 Seconds&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; ./kyanos stat --slow --time 5 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/qs-stat-slow.gif&#34; alt=&#34;kyanos stat slow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ùó Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Kyanos currently supports kernel versions 3.10(from 3.10.0-957) and 4.14 or above (with plans to support versions between 4.7 and 4.14 in the future).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can check your kernel version using &lt;code&gt;uname -r&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üéØ How to get kyanos&lt;/h2&gt; &#xA;&lt;p&gt;You can download a statically linked binary compatible with x86_64 and arm64 architectures from the &lt;a href=&#34;https://github.com/hengyoush/kyanos/releases&#34;&gt;release page&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar xvf kyanos_vx.x.x_linux_x86.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kyanos watch &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the following table appears: &lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/quickstart-success.png&#34; alt=&#34;kyanos quick start success&#34;&gt; üéâ Congratulations! Kyanos has started successfully.&lt;/p&gt; &#xA;&lt;h2&gt;üìù Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kyanos.pages.dev/&#34;&gt;English Document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚öô Usage&lt;/h2&gt; &#xA;&lt;p&gt;The simplest usage captures all protocols currently supported by Kyanos:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./kyanos watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each request-response record is stored as a row in a table, with each column capturing basic information about that request. You can use the arrow keys or &lt;code&gt;j/k&lt;/code&gt; to move up and down through the records: &lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/watch-result.jpg&#34; alt=&#34;kyanos watch result&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Press &lt;code&gt;Enter&lt;/code&gt; to access the details view:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/docs/public/watch-result-detail.jpg&#34; alt=&#34;kyanos watch result detail&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the details view, the first section shows &lt;strong&gt;Latency Details&lt;/strong&gt;. Each block represents a &#34;node&#34; that the data packet passes through, such as the process, network card, and socket buffer.&lt;br&gt; Each block includes a time value indicating the time elapsed from the previous node to this node, showing the process flow from the process sending the request to the network card, to the response being copied to the socket buffer, and finally read by the process, with each step‚Äôs duration displayed.&lt;/p&gt; &#xA;&lt;p&gt;The second section provides &lt;strong&gt;Detailed Request and Response Content&lt;/strong&gt;, split into Request and Response parts, and truncates content over 1024 bytes.&lt;/p&gt; &#xA;&lt;p&gt;For targeted traffic capture, such as HTTP traffic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./kyanos watch http&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can narrow it further to capture traffic for a specific HTTP path:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./kyanos watch http --path /abc &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more: &lt;a href=&#34;https://kyanos.pages.dev/&#34;&gt;Kyanos Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§ù Feedback and Contributions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] If you encounter any issues or bugs while using the tool, please feel free to ask questions in the issue tracker.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üó®Ô∏è Contacts&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed inquiries, you can use the following contact methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;My Email:&lt;/strong&gt; &lt;a href=&#34;mailto:hengyoush1@163.com&#34;&gt;hengyoush1@163.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;My Blog:&lt;/strong&gt; &lt;a href=&#34;http://blog.deadlock.cloud/&#34;&gt;http://blog.deadlock.cloud&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hengyoush/kyanos/main/#top&#34;&gt;Back to top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yamadashy/repomix</title>
    <updated>2024-11-30T01:28:45Z</updated>
    <id>tag:github.com,2024-11-30:/yamadashy/repomix</id>
    <link href="https://github.com/yamadashy/repomix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì¶ Repomix (formerly Repopack) is a powerful tool that packs your entire repository into a single, AI-friendly file. Perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude, ChatGPT, and Gemini.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì¶ Repomix (formerly Repopack)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yamadashy/repomix/actions?query=workflow%3A%22ci%22&#34;&gt;&lt;img src=&#34;https://github.com/yamadashy/repomix/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/repomix&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/repomix.svg?maxAge=1000&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/repomix&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/d18m/repomix&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yamadashy/repomix/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/repomix.svg?maxAge=1000&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/repomix&#34;&gt;&lt;img src=&#34;https://img.shields.io/node/v/repomix.svg?maxAge=1000&#34; alt=&#34;node&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/yamadashy/repomix&#34;&gt;&lt;img src=&#34;https://codecov.io/github/yamadashy/repomix/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Repomix is a powerful tool that packs your entire repository into a single, AI-friendly file.&lt;br&gt; It is perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude, ChatGPT, and Gemini.&lt;/p&gt; &#xA;&lt;h2&gt;üì¢ Important Notice: Project Renamed to Repomix&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Due to legal considerations, this project has been renamed from &#34;Repopack&#34; to &#34;Repomix&#34;. Only the name is changing; Repomix all functionality and maintainer (&lt;a href=&#34;https://github.com/yamadashy&#34;&gt;@yamadashy&lt;/a&gt;) remain the same. We are committed to ensuring a smooth transition for all users.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Migration Guide&lt;/h3&gt; &#xA;&lt;p&gt;To continue using the tool, simply install the new package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install new package&#xA;npm install -g repomix&#xA;&#xA;# Or use directly with npx&#xA;npx repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can also uninstall the old package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm uninstall -g repopack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Configuration Files&lt;/h4&gt; &#xA;&lt;p&gt;Your existing configuration files (&lt;code&gt;repopack.config.json&lt;/code&gt; and &lt;code&gt;.repopackignore&lt;/code&gt;) will continue to work during the transition period.&lt;br&gt; &lt;code&gt;repomix&lt;/code&gt; will automatically detect these files and offer to migrate them to the new format (&lt;code&gt;repomix.config.json&lt;/code&gt; and &lt;code&gt;.repomixignore&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Timeline&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current: Transition period begins&lt;/li&gt; &#xA; &lt;li&gt;December 1st, 2024: Ownership of the &lt;a href=&#34;https://npmjs.com/repopack&#34;&gt;repopack npm package&lt;/a&gt; will be transferred to another party. The repomix package will continue to be maintained as usual&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We appreciate your understanding and cooperation during this transition.&lt;/p&gt; &#xA;&lt;h2&gt;üåü Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-Optimized&lt;/strong&gt;: Formats your codebase in a way that&#39;s easy for AI to understand and process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Token Counting&lt;/strong&gt;: Provides token counts for each file and the entire repository, useful for LLM context limits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple to Use&lt;/strong&gt;: You need just one command to pack your entire repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: Easily configure what to include or exclude.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Git-Aware&lt;/strong&gt;: Automatically respects your .gitignore files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security-Focused&lt;/strong&gt;: Incorporates &lt;a href=&#34;https://github.com/secretlint/secretlint&#34;&gt;Secretlint&lt;/a&gt; for robust security checks to detect and prevent inclusion of sensitive information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;You can try Repomix instantly in your project directory without installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install globally for repeated use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install using npm&#xA;npm install -g repomix&#xA;&#xA;# Alternatively using yarn&#xA;yarn global add repomix&#xA;&#xA;# Alternatively using Homebrew (macOS)&#xA;brew install repomix&#xA;&#xA;# Then run in any project directory&#xA;repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! Repomix will generate a &lt;code&gt;repomix-output.txt&lt;/code&gt; file in your current directory, containing your entire repository in an AI-friendly format.&lt;/p&gt; &#xA;&lt;h2&gt;üìä Usage&lt;/h2&gt; &#xA;&lt;p&gt;To pack your entire repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pack a specific directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix path/to/directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pack specific files or directories using &lt;a href=&#34;https://github.com/mrmlnc/fast-glob?tab=readme-ov-file#pattern-syntax&#34;&gt;glob patterns&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --include &#34;src/**/*.ts,**/*.md&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To exclude specific files or directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --ignore &#34;**/*.log,tmp/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pack a remote repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --remote https://github.com/yamadashy/repomix&#xA;&#xA;# You can also use GitHub shorthand:&#xA;repomix --remote yamadashy/repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To initialize a new configuration file (&lt;code&gt;repomix.config.json&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have generated the packed file, you can use it with Generative AI tools like Claude, ChatGPT, and Gemini.&lt;/p&gt; &#xA;&lt;h3&gt;Prompt Examples&lt;/h3&gt; &#xA;&lt;p&gt;Once you have generated the packed file with Repomix, you can use it with AI tools like Claude, ChatGPT, and Gemini. Here are some example prompts to get you started:&lt;/p&gt; &#xA;&lt;h4&gt;Code Review and Refactoring&lt;/h4&gt; &#xA;&lt;p&gt;For a comprehensive code review and refactoring suggestions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This file contains my entire codebase. Please review the overall structure and suggest any improvements or refactoring opportunities, focusing on maintainability and scalability.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Documentation Generation&lt;/h4&gt; &#xA;&lt;p&gt;To generate project documentation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Based on the codebase in this file, please generate a detailed README.md that includes an overview of the project, its main features, setup instructions, and usage examples.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Test Case Generation&lt;/h4&gt; &#xA;&lt;p&gt;For generating test cases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Analyze the code in this file and suggest a comprehensive set of unit tests for the main functions and classes. Include edge cases and potential error scenarios.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Code Quality Assessment&lt;/h4&gt; &#xA;&lt;p&gt;Evaluate code quality and adherence to best practices:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Review the codebase for adherence to coding best practices and industry standards. Identify areas where the code could be improved in terms of readability, maintainability, and efficiency. Suggest specific changes to align the code with best practices.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Library Overview&lt;/h4&gt; &#xA;&lt;p&gt;Get a high-level understanding of the library&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This file contains the entire codebase of library. Please provide a comprehensive overview of the library, including its main purpose, key features, and overall architecture.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to modify these prompts based on your specific needs and the capabilities of the AI tool you&#39;re using.&lt;/p&gt; &#xA;&lt;h3&gt;Community Discussion&lt;/h3&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://github.com/yamadashy/repomix/discussions/154&#34;&gt;community discussion&lt;/a&gt; where users share:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Which AI tools they&#39;re using with Repomix&lt;/li&gt; &#xA; &lt;li&gt;Effective prompts they&#39;ve discovered&lt;/li&gt; &#xA; &lt;li&gt;How Repomix has helped them&lt;/li&gt; &#xA; &lt;li&gt;Tips and tricks for getting the most out of AI code analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to join the discussion and share your own experiences! Your insights could help others make better use of Repomix.&lt;/p&gt; &#xA;&lt;h3&gt;Output File Format&lt;/h3&gt; &#xA;&lt;p&gt;Repomix generates a single file with clear separators between different parts of your codebase.&lt;br&gt; To enhance AI comprehension, the output file begins with an AI-oriented explanation, making it easier for AI models to understand the context and structure of the packed repository.&lt;/p&gt; &#xA;&lt;h4&gt;Plain Text Format (default)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;This file is a merged representation of the entire codebase, combining all repository files into a single document.&#xA;&#xA;================================================================&#xA;File Summary&#xA;================================================================&#xA;(Metadata and usage AI instructions)&#xA;&#xA;================================================================&#xA;Repository Structure&#xA;================================================================&#xA;src/&#xA;  cli/&#xA;    cliOutput.ts&#xA;    index.ts&#xA;  config/&#xA;    configLoader.ts&#xA;&#xA;(...remaining directories)&#xA;&#xA;================================================================&#xA;Repository Files&#xA;================================================================&#xA;&#xA;================&#xA;File: src/index.js&#xA;================&#xA;// File contents here&#xA;&#xA;================&#xA;File: src/utils.js&#xA;================&#xA;// File contents here&#xA;&#xA;(...remaining files)&#xA;&#xA;================================================================&#xA;Instruction&#xA;================================================================&#xA;(Custom instructions from `output.instructionFilePath`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;XML Format&lt;/h4&gt; &#xA;&lt;p&gt;To generate output in XML format, use the &lt;code&gt;--style xml&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --style xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The XML format structures the content in a hierarchical manner:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;This file is a merged representation of the entire codebase, combining all repository files into a single document.&#xA;&#xA;&amp;lt;file_summary&amp;gt;&#xA;(Metadata and usage AI instructions)&#xA;&amp;lt;/file_summary&amp;gt;&#xA;&#xA;&amp;lt;repository_structure&amp;gt;&#xA;src/&#xA;  cli/&#xA;    cliOutput.ts&#xA;    index.ts&#xA;&#xA;(...remaining directories)&#xA;&amp;lt;/repository_structure&amp;gt;&#xA;&#xA;&amp;lt;repository_files&amp;gt;&#xA;&amp;lt;file path=&#34;src/index.js&#34;&amp;gt;&#xA;// File contents here&#xA;&amp;lt;/file&amp;gt;&#xA;&#xA;(...remaining files)&#xA;&amp;lt;/repository_files&amp;gt;&#xA;&#xA;&amp;lt;instruction&amp;gt;&#xA;(Custom instructions from `output.instructionFilePath`)&#xA;&amp;lt;/instruction&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For those interested in the potential of XML tags in AI contexts:&lt;br&gt; &lt;a href=&#34;https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags&#34;&gt;https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When your prompts involve multiple components like context, instructions, and examples, XML tags can be a game-changer. They help Claude parse your prompts more accurately, leading to higher-quality outputs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This means that the XML output from Repomix is not just a different format, but potentially a more effective way to feed your codebase into AI systems for analysis, code review, or other tasks.&lt;/p&gt; &#xA;&lt;h4&gt;Markdown Format&lt;/h4&gt; &#xA;&lt;p&gt;To generate output in Markdown format, use the &lt;code&gt;--style markdown&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --style markdown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Markdown format structures the content in a hierarchical manner:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;This file is a merged representation of the entire codebase, combining all repository files into a single document.&#xA;&#xA;# File Summary&#xA;(Metadata and usage AI instructions)&#xA;&#xA;# Repository Structure&#xA;```&#xA;src/&#xA;  cli/&#xA;    cliOutput.ts&#xA;    index.ts&#xA;```&#xA;(...remaining directories)&#xA;&#xA;# Repository Files&#xA;&#xA;## File: src/index.js&#xA;```&#xA;// File contents here&#xA;```&#xA;&#xA;(...remaining files)&#xA;&#xA;# Instruction&#xA;(Custom instructions from `output.instructionFilePath`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This format provides a clean, readable structure that is both human-friendly and easily parseable by AI systems.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line Options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-v, --version&lt;/code&gt;: Show tool version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-o, --output &amp;lt;file&amp;gt;&lt;/code&gt;: Specify the output file name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--include &amp;lt;patterns&amp;gt;&lt;/code&gt;: List of include patterns (comma-separated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-i, --ignore &amp;lt;patterns&amp;gt;&lt;/code&gt;: Additional ignore patterns (comma-separated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-c, --config &amp;lt;path&amp;gt;&lt;/code&gt;: Path to a custom config file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--style &amp;lt;style&amp;gt;&lt;/code&gt;: Specify the output style (&lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;markdown&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--top-files-len &amp;lt;number&amp;gt;&lt;/code&gt;: Number of top files to display in the summary&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--output-show-line-numbers&lt;/code&gt;: Show line numbers in the output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--copy&lt;/code&gt;: Additionally copy generated output to system clipboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--remote &amp;lt;url&amp;gt;&lt;/code&gt;: Process a remote Git repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--verbose&lt;/code&gt;: Enable verbose logging&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix -o custom-output.txt&#xA;repomix -i &#34;*.log,tmp&#34; -v&#xA;repomix -c ./custom-config.json&#xA;repomix --style xml&#xA;repomix --remote https://github.com/user/repo.git&#xA;npx repomix src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updating Repomix&lt;/h3&gt; &#xA;&lt;p&gt;To update a globally installed Repomix:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using npm&#xA;npm update -g repomix&#xA;&#xA;# Using yarn&#xA;yarn global upgrade repomix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;npx repomix&lt;/code&gt; is generally more convenient as it always uses the latest version.&lt;/p&gt; &#xA;&lt;h3&gt;Remote Repository Processing&lt;/h3&gt; &#xA;&lt;p&gt;Repomix supports processing remote Git repositories without the need for manual cloning. This feature allows you to quickly analyze any public Git repository with a single command.&lt;/p&gt; &#xA;&lt;p&gt;To process a remote repository, use the &lt;code&gt;--remote&lt;/code&gt; option followed by the repository URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --remote https://github.com/user/repo.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use GitHub&#39;s shorthand format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --remote user/repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;repomix.config.json&lt;/code&gt; file in your project root for custom configurations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an explanation of the configuration options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.filePath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the output file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;repomix-output.txt&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The style of the output (&lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;markdown&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;plain&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.headerText&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Custom text to include in the file header&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.instructionFilePath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to a file containing detailed custom instructions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.removeComments&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to remove comments from supported file types&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.removeEmptyLines&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to remove empty lines from the output&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.showLineNumbers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to add line numbers to each line in the output&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.copyToClipboard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to copy the output to system clipboard in addition to saving the file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.topFilesLength&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of top files to display in the summary. If set to 0, no summary will be displayed&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;output.includeEmptyDirectories&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to include empty directories in the repository structure&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;include&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Patterns of files to include (using &lt;a href=&#34;https://github.com/mrmlnc/fast-glob?tab=readme-ov-file#pattern-syntax&#34;&gt;glob patterns&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ignore.useGitignore&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to use patterns from the project&#39;s &lt;code&gt;.gitignore&lt;/code&gt; file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ignore.useDefaultPatterns&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to use default ignore patterns&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ignore.customPatterns&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional patterns to ignore (using &lt;a href=&#34;https://github.com/mrmlnc/fast-glob?tab=readme-ov-file#pattern-syntax&#34;&gt;glob patterns&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;security.enableSecurityCheck&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to perform security checks on files&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;output&#34;: {&#xA;    &#34;filePath&#34;: &#34;repomix-output.xml&#34;,&#xA;    &#34;style&#34;: &#34;xml&#34;,&#xA;    &#34;headerText&#34;: &#34;Custom header information for the packed file.&#34;,&#xA;    &#34;removeComments&#34;: false,&#xA;    &#34;removeEmptyLines&#34;: false,&#xA;    &#34;showLineNumbers&#34;: false,&#xA;    &#34;copyToClipboard&#34;: true,&#xA;    &#34;topFilesLength&#34;: 5,&#xA;    &#34;includeEmptyDirectories&#34;: false&#xA;  },&#xA;  &#34;include&#34;: [&#34;**/*&#34;],&#xA;  &#34;ignore&#34;: {&#xA;    &#34;useGitignore&#34;: true,&#xA;    &#34;useDefaultPatterns&#34;: true,&#xA;    &#34;customPatterns&#34;: [&#34;additional-folder&#34;, &#34;**/*.log&#34;]&#xA;  },&#xA;  &#34;security&#34;: {&#xA;    &#34;enableSecurityCheck&#34;: true&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Global Configuration&lt;/h3&gt; &#xA;&lt;p&gt;To create a global configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;repomix --init --global&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The global configuration file will be created in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;%LOCALAPPDATA%\Repomix\repomix.config.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS/Linux: &lt;code&gt;$XDG_CONFIG_HOME/repomix/repomix.config.json&lt;/code&gt; or &lt;code&gt;~/.config/repomix/repomix.config.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Local configuration (if present) takes precedence over global configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Include and Ignore&lt;/h3&gt; &#xA;&lt;h4&gt;Include Patterns&lt;/h4&gt; &#xA;&lt;p&gt;Repomix now supports specifying files to include using &lt;a href=&#34;https://github.com/mrmlnc/fast-glob?tab=readme-ov-file#pattern-syntax&#34;&gt;glob patterns&lt;/a&gt;. This allows for more flexible and powerful file selection:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;**/*.js&lt;/code&gt; to include all JavaScript files in any directory&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;src/**/*&lt;/code&gt; to include all files within the &lt;code&gt;src&lt;/code&gt; directory and its subdirectories&lt;/li&gt; &#xA; &lt;li&gt;Combine multiple patterns like &lt;code&gt;[&#34;src/**/*.js&#34;, &#34;**/*.md&#34;]&lt;/code&gt; to include JavaScript files in &lt;code&gt;src&lt;/code&gt; and all Markdown files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Ignore Patterns&lt;/h4&gt; &#xA;&lt;p&gt;Repomix offers multiple methods to set ignore patterns for excluding specific files or directories during the packing process:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;.gitignore&lt;/strong&gt;: By default, patterns listed in your project&#39;s &lt;code&gt;.gitignore&lt;/code&gt; file are used. This behavior can be controlled with the &lt;code&gt;ignore.useGitignore&lt;/code&gt; setting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Default patterns&lt;/strong&gt;: Repomix includes a default list of commonly excluded files and directories (e.g., node_modules, .git, binary files). This feature can be controlled with the &lt;code&gt;ignore.useDefaultPatterns&lt;/code&gt; setting. Please see &lt;a href=&#34;https://raw.githubusercontent.com/yamadashy/repomix/main/src/config/defaultIgnore.ts&#34;&gt;defaultIgnore.ts&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;.repomixignore&lt;/strong&gt;: You can create a &lt;code&gt;.repomixignore&lt;/code&gt; file in your project root to define Repomix-specific ignore patterns. This file follows the same format as &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom patterns&lt;/strong&gt;: Additional ignore patterns can be specified using the &lt;code&gt;ignore.customPatterns&lt;/code&gt; option in the configuration file. You can overwrite this setting with the &lt;code&gt;-i, --ignore&lt;/code&gt; command line option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Priority Order (from highest to lowest):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Custom patterns &lt;code&gt;ignore.customPatterns&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.repomixignore&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt; (if &lt;code&gt;ignore.useGitignore&lt;/code&gt; is true)&lt;/li&gt; &#xA; &lt;li&gt;Default patterns (if &lt;code&gt;ignore.useDefaultPatterns&lt;/code&gt; is true)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This approach allows for flexible file exclusion configuration based on your project&#39;s needs. It helps optimize the size of the generated pack file by ensuring the exclusion of security-sensitive files and large binary files, while preventing the leakage of confidential information.&lt;/p&gt; &#xA;&lt;p&gt;Note: Binary files are not included in the packed output by default, but their paths are listed in the &#34;Repository Structure&#34; section of the output file. This provides a complete overview of the repository structure while keeping the packed file efficient and text-based.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Instruction&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;output.instructionFilePath&lt;/code&gt; option allows you to specify a separate file containing detailed instructions or context about your project. This allows AI systems to understand the specific context and requirements of your project, potentially leading to more relevant and tailored analysis or suggestions.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how you might use this feature:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a file named &lt;code&gt;repomix-instruction.md&lt;/code&gt; in your project root:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# Coding Guidelines&#xA;- Follow the Airbnb JavaScript Style Guide&#xA;- Suggest splitting files into smaller, focused units when appropriate&#xA;- Add comments for non-obvious logic. Keep all text in English&#xA;- All new features should have corresponding unit tests&#xA;&#xA;# Generate Comprehensive Output&#xA;- Include all content without abbreviation, unless specified otherwise&#xA;- Optimize for handling large codebases while maintaining output quality&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In your &lt;code&gt;repomix.config.json&lt;/code&gt;, add the &lt;code&gt;instructionFilePath&lt;/code&gt; option:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;{&#xA;  &#34;output&#34;: {&#xA;    &#34;instructionFilePath&#34;: &#34;repomix-instruction.md&#34;,&#xA;    // other options...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When Repomix generates the output, it will include the contents of &lt;code&gt;repomix-instruction.md&lt;/code&gt; in a dedicated section.&lt;/p&gt; &#xA;&lt;p&gt;Note: The instruction content is appended at the end of the output file. This placement can be particularly effective for AI systems. For those interested in understanding why this might be beneficial, Anthropic provides some insights in their documentation:&lt;br&gt; &lt;a href=&#34;https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/long-context-tips&#34;&gt;https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/long-context-tips&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Put long-form data at the top: Place your long documents and inputs (~20K+ tokens) near the top of your prompt, above your query, instructions, and examples. This can significantly improve Claude&#39;s performance across all models. Queries at the end can improve response quality by up to 30% in tests, especially with complex, multi-document inputs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Comment Removal&lt;/h3&gt; &#xA;&lt;p&gt;When &lt;code&gt;output.removeComments&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, Repomix will attempt to remove comments from supported file types. This feature can help reduce the size of the output file and focus on the essential code content.&lt;/p&gt; &#xA;&lt;p&gt;Supported languages include:&lt;br&gt; HTML, CSS, JavaScript, TypeScript, Vue, Svelte, Python, PHP, Ruby, C, C#, Java, Go, Rust, Swift, Kotlin, Dart, Shell, and YAML.&lt;/p&gt; &#xA;&lt;p&gt;Note: The comment removal process is conservative to avoid accidentally removing code. In complex cases, some comments might be retained.&lt;/p&gt; &#xA;&lt;h2&gt;üîç Security Check&lt;/h2&gt; &#xA;&lt;p&gt;Repomix includes a security check feature that uses &lt;a href=&#34;https://github.com/secretlint/secretlint&#34;&gt;Secretlint&lt;/a&gt; to detect potentially sensitive information in your files. This feature helps you identify possible security risks before sharing your packed repository.&lt;/p&gt; &#xA;&lt;p&gt;The security check results will be displayed in the CLI output after the packing process is complete. If any suspicious files are detected, you&#39;ll see a list of these files along with a warning message.&lt;/p&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;üîç Security Check:&#xA;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA;2 suspicious file(s) detected:&#xA;1. src/utils/test.txt&#xA;2. tests/utils/secretLintUtils.test.ts&#xA;&#xA;Please review these files for potentially sensitive information.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, Repomix&#39;s security check feature is enabled. You can disable it by setting &lt;code&gt;security.enableSecurityCheck&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;security&#34;: {&#xA;    &#34;enableSecurityCheck&#34;: false&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! To get started, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/yamadashy/repomix/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/yamadashy/repomix/graphs/contributors&#34;&gt; &lt;img alt=&#34;contributors&#34; src=&#34;https://contrib.rocks/image?repo=yamadashy/repomix&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;üìú License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/yamadashy/repomix/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/yamadashy/repomix/main/#-repomix&#34; target=&#34;_blank&#34;&gt; Back To Top &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SimonCropp/Delta</title>
    <updated>2024-11-30T01:28:45Z</updated>
    <id>tag:github.com,2024-11-30:/SimonCropp/Delta</id>
    <link href="https://github.com/SimonCropp/Delta" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An approach to implementing a 304 Not Modified leveraging SqlServer change tracking&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/icon.png&#34; height=&#34;30px&#34;&gt; Delta&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/SimonCropp/Delta&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/20t96gnsmysklh09/branch/main?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Delta/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Delta.svg?label=Delta&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Delta.EF/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Delta.EF.svg?label=Delta.EF&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Delta is an approach to implementing a &lt;a href=&#34;https://www.keycdn.com/support/304-not-modified&#34;&gt;304 Not Modified&lt;/a&gt; leveraging SqlServer change tracking&lt;/p&gt; &#xA;&lt;p&gt;The approach uses a last updated timestamp from the database to generate an &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag&#34;&gt;ETag&lt;/a&gt;. All dynamic requests then have that ETag checked/applied.&lt;/p&gt; &#xA;&lt;p&gt;This approach works well when the frequency of updates is relatively low. In this scenario, the majority of requests will leverage the result in a 304 Not Modified being returned and the browser loading the content its cache.&lt;/p&gt; &#xA;&lt;p&gt;Effectively consumers will always receive the most current data, while the load on the server remains low.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/milestones?state=closed&#34;&gt;Milestones&lt;/a&gt; for release notes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Assumptions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frequency of updates to data is relatively low compared to reads&lt;/li&gt; &#xA; &lt;li&gt;Using either &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/relational-databases/track-changes/track-data-changes-sql-server&#34;&gt;SQL Server Change Tracking&lt;/a&gt; and/or &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/t-sql/data-types/rowversion-transact-sql&#34;&gt;SQL Server Row Versioning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;304 Not Modified Flow&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD&#xA;    Request&#xA;    CalculateEtag[Calculate current ETag&amp;lt;br/&amp;gt;based on timestamp&amp;lt;br/&amp;gt;from web assembly and SQL]&#xA;    IfNoneMatch{Has&amp;lt;br/&amp;gt;If-None-Match&amp;lt;br/&amp;gt;header?}&#xA;    EtagMatch{Current&amp;lt;br/&amp;gt;Etag matches&amp;lt;br/&amp;gt;If-None-Match?}&#xA;    AddETag[Add current ETag&amp;lt;br/&amp;gt;to Response headers]&#xA;    304[Respond with&amp;lt;br/&amp;gt;304 Not-Modified]&#xA;    Request --&amp;gt; CalculateEtag&#xA;    CalculateEtag --&amp;gt; IfNoneMatch&#xA;    IfNoneMatch --&amp;gt;|Yes| EtagMatch&#xA;    IfNoneMatch --&amp;gt;|No| AddETag&#xA;    EtagMatch --&amp;gt;|No| AddETag&#xA;    EtagMatch --&amp;gt;|Yes| 304&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ETag calculation logic&lt;/h2&gt; &#xA;&lt;p&gt;The ETag is calculated from a combination several parts&lt;/p&gt; &#xA;&lt;h4&gt;AssemblyWriteTime&lt;/h4&gt; &#xA;&lt;p&gt;The last write time of the web entry point assembly&lt;/p&gt; &#xA;&lt;!-- snippet: AssemblyWriteTime --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-AssemblyWriteTime&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var webAssemblyLocation = Assembly.GetEntryAssembly()!.Location;&#xA;AssemblyWriteTime = File.GetLastWriteTime(webAssemblyLocation).Ticks.ToString();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Shared.cs#L38-L43&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-AssemblyWriteTime&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;SQL timestamp&lt;/h4&gt; &#xA;&lt;p&gt;A combination of &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/relational-databases/system-functions/change-tracking-current-version-transact-sql&#34;&gt;change_tracking_current_version&lt;/a&gt; (if tracking is enabled) and &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/t-sql/functions/dbts-transact-sql&#34;&gt;@@DBTS (row version timestamp)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- snippet: SqlTimestamp --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-SqlTimestamp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;declare @changeTracking bigint = change_tracking_current_version();&#xA;declare @timeStamp bigint = convert(bigint, @@dbts);&#xA;&#xA;if (@changeTracking is null)&#xA;  select cast(@timeStamp as varchar)&#xA;else&#xA;  select cast(@timeStamp as varchar) + &#39;-&#39; + cast(@changeTracking as varchar)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L189-L197&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-SqlTimestamp&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;Suffix&lt;/h4&gt; &#xA;&lt;p&gt;An optional string suffix that is dynamically calculated at runtime based on the current &lt;code&gt;HttpContext&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- snippet: Suffix --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-Suffix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var app = builder.Build();&#xA;app.UseDelta(suffix: httpContext =&amp;gt; &#34;MySuffix&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L9-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-Suffix&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Combining the above&lt;/h3&gt; &#xA;&lt;!-- snippet: BuildEtag --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-BuildEtag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;internal static string BuildEtag(string timeStamp, string? suffix)&#xA;{&#xA;    if (suffix == null)&#xA;    {&#xA;        return $&#34;\&#34;{AssemblyWriteTime}-{timeStamp}\&#34;&#34;;&#xA;    }&#xA;&#xA;    return $&#34;\&#34;{AssemblyWriteTime}-{timeStamp}-{suffix}\&#34;&#34;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Shared.cs#L130-L142&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-BuildEtag&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;NuGet&lt;/h2&gt; &#xA;&lt;p&gt;Delta is shipped as two nugets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Delta/&#34;&gt;Delta&lt;/a&gt;: Delivers functionality using SqlConnection and SqlTransaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nuget.org/packages/Delta.EF/&#34;&gt;Delta.EF&lt;/a&gt;: Delivers functionality using &lt;a href=&#34;https://learn.microsoft.com/en-us/ef/core/providers/sql-server/?tabs=dotnet-core-cli&#34;&gt;SQL Server EF Database Provider&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Only one of the above should be used.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;DB Schema&lt;/h3&gt; &#xA;&lt;p&gt;Ensure &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/relational-databases/track-changes/track-data-changes-sql-server&#34;&gt;SQL Server Change Tracking&lt;/a&gt; and/or &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/t-sql/data-types/rowversion-transact-sql&#34;&gt;SQL Server Row Versioning&lt;/a&gt; is enabled for all relevant tables.&lt;/p&gt; &#xA;&lt;p&gt;Example SQL schema:&lt;/p&gt; &#xA;&lt;!-- snippet: Usage.Schema.verified.sql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-Usage.Schema.verified.sql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Tables&#xA;&#xA;CREATE TABLE [dbo].[Companies](&#xA;&#x9;[Id] [uniqueidentifier] NOT NULL,&#xA;&#x9;[RowVersion] [timestamp] NOT NULL,&#xA;&#x9;[Content] [nvarchar](max) NULL,&#xA; CONSTRAINT [PK_Companies] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[Id] ASC&#xA;) ON [PRIMARY]&#xA;) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]&#xA;&#xA;CREATE TABLE [dbo].[Employees](&#xA;&#x9;[Id] [uniqueidentifier] NOT NULL,&#xA;&#x9;[RowVersion] [timestamp] NOT NULL,&#xA;&#x9;[CompanyId] [uniqueidentifier] NOT NULL,&#xA;&#x9;[Content] [nvarchar](max) NULL,&#xA;&#x9;[Age] [int] NOT NULL,&#xA; CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[Id] ASC&#xA;) ON [PRIMARY]&#xA;) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]&#xA;&#xA;CREATE NONCLUSTERED INDEX [IX_Employees_CompanyId] ON [dbo].[Employees]&#xA;(&#xA;&#x9;[CompanyId] ASC&#xA;) ON [PRIMARY]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.Schema.verified.sql#L1-L28&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-Usage.Schema.verified.sql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Add to WebApplicationBuilder&lt;/h3&gt; &#xA;&lt;!-- snippet: UseDelta --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-UseDelta&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var builder = WebApplication.CreateBuilder();&#xA;builder.Services.AddScoped(_ =&amp;gt; new SqlConnection(connectionString));&#xA;var app = builder.Build();&#xA;app.UseDelta();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/WebApplication/Program.cs#L10-L17&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-UseDelta&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Add to a Route Group&lt;/h3&gt; &#xA;&lt;p&gt;To add to a specific &lt;a href=&#34;https://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis/route-handlers#route-groups&#34;&gt;Route Group&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;!-- snippet: UseDeltaMapGroup --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-UseDeltaMapGroup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;app.MapGroup(&#34;/group&#34;)&#xA;    .UseDelta()&#xA;    .MapGet(&#34;/&#34;, () =&amp;gt; &#34;Hello Group!&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/WebApplication/Program.cs#L58-L64&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-UseDeltaMapGroup&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;ShouldExecute&lt;/h3&gt; &#xA;&lt;p&gt;Optionally control what requests Delta is executed on.&lt;/p&gt; &#xA;&lt;!-- snippet: ShouldExecute --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-ShouldExecute&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var app = builder.Build();&#xA;app.UseDelta(&#xA;    shouldExecute: httpContext =&amp;gt;&#xA;    {&#xA;        var path = httpContext.Request.Path.ToString();&#xA;        return path.Contains(&#34;match&#34;);&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L19-L29&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-ShouldExecute&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Custom Connection discovery&lt;/h3&gt; &#xA;&lt;p&gt;By default, Delta uses &lt;code&gt;HttpContext.RequestServices&lt;/code&gt; to discover the SqlConnection and SqlTransaction:&lt;/p&gt; &#xA;&lt;!-- snippet: DiscoverConnection --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-DiscoverConnection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;static Connection DiscoverConnection(HttpContext httpContext)&#xA;{&#xA;    var provider = httpContext.RequestServices;&#xA;    var connection = provider.GetRequiredService&amp;lt;SqlConnection&amp;gt;();&#xA;    var transaction = provider.GetService&amp;lt;SqlTransaction&amp;gt;();&#xA;    return new(connection, transaction);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Middleware.cs#L41-L51&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-DiscoverConnection&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;To use custom connection discovery:&lt;/p&gt; &#xA;&lt;!-- snippet: CustomDiscoveryConnection --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-CustomDiscoveryConnection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var application = webApplicationBuilder.Build();&#xA;application.UseDelta(&#xA;    getConnection: httpContext =&amp;gt; httpContext.RequestServices.GetRequiredService&amp;lt;SqlConnection&amp;gt;());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L200-L206&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-CustomDiscoveryConnection&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;To use custom connection and transaction discovery:&lt;/p&gt; &#xA;&lt;!-- snippet: CustomDiscoveryConnectionAndTransaction --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-CustomDiscoveryConnectionAndTransaction&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var webApplication = webApplicationBuilder.Build();&#xA;webApplication.UseDelta(&#xA;    getConnection: httpContext =&amp;gt;&#xA;    {&#xA;        var provider = httpContext.RequestServices;&#xA;        var sqlConnection = provider.GetRequiredService&amp;lt;SqlConnection&amp;gt;();&#xA;        var sqlTransaction = provider.GetService&amp;lt;SqlTransaction&amp;gt;();&#xA;        return new(sqlConnection, sqlTransaction);&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L211-L223&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-CustomDiscoveryConnectionAndTransaction&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;EF Usage&lt;/h2&gt; &#xA;&lt;h3&gt;DbContext using RowVersion&lt;/h3&gt; &#xA;&lt;p&gt;Enable row versioning in Entity Framework&lt;/p&gt; &#xA;&lt;!-- snippet: SampleDbContext.cs --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-SampleDbContext.cs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public class SampleDbContext(DbContextOptions options) :&#xA;    DbContext(options)&#xA;{&#xA;    public DbSet&amp;lt;Employee&amp;gt; Employees { get; set; } = null!;&#xA;    public DbSet&amp;lt;Company&amp;gt; Companies { get; set; } = null!;&#xA;&#xA;    protected override void OnModelCreating(ModelBuilder builder)&#xA;    {&#xA;        var company = builder.Entity&amp;lt;Company&amp;gt;();&#xA;        company.HasKey(_ =&amp;gt; _.Id);&#xA;        company&#xA;            .HasMany(_ =&amp;gt; _.Employees)&#xA;            .WithOne(_ =&amp;gt; _.Company)&#xA;            .IsRequired();&#xA;        company&#xA;            .Property(_ =&amp;gt; _.RowVersion)&#xA;            .IsRowVersion()&#xA;            .HasConversion&amp;lt;byte[]&amp;gt;();&#xA;&#xA;        var employee = builder.Entity&amp;lt;Employee&amp;gt;();&#xA;        employee.HasKey(_ =&amp;gt; _.Id);&#xA;        employee&#xA;            .Property(_ =&amp;gt; _.RowVersion)&#xA;            .IsRowVersion()&#xA;            .HasConversion&amp;lt;byte[]&amp;gt;();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/WebApplicationEF/DataContext/SampleDbContext.cs#L1-L27&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-SampleDbContext.cs&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Add to WebApplicationBuilder&lt;/h3&gt; &#xA;&lt;!-- snippet: UseDeltaEF --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-UseDeltaEF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var builder = WebApplication.CreateBuilder();&#xA;builder.Services.AddSqlServer&amp;lt;SampleDbContext&amp;gt;(database.ConnectionString);&#xA;var app = builder.Build();&#xA;app.UseDelta&amp;lt;SampleDbContext&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/WebApplicationEF/Program.cs#L7-L14&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-UseDeltaEF&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;Add to a Route Group&lt;/h3&gt; &#xA;&lt;p&gt;To add to a specific &lt;a href=&#34;https://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis/route-handlers#route-groups&#34;&gt;Route Group&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;!-- snippet: UseDeltaMapGroupEF --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-UseDeltaMapGroupEF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;app.MapGroup(&#34;/group&#34;)&#xA;    .UseDelta&amp;lt;SampleDbContext&amp;gt;()&#xA;    .MapGet(&#34;/&#34;, () =&amp;gt; &#34;Hello Group!&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/WebApplicationEF/Program.cs#L38-L44&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-UseDeltaMapGroupEF&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;ShouldExecute&lt;/h3&gt; &#xA;&lt;p&gt;Optionally control what requests Delta is executed on.&lt;/p&gt; &#xA;&lt;!-- snippet: ShouldExecuteEF --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-ShouldExecuteEF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var app = builder.Build();&#xA;app.UseDelta&amp;lt;SampleDbContext&amp;gt;(&#xA;    shouldExecute: httpContext =&amp;gt;&#xA;    {&#xA;        var path = httpContext.Request.Path.ToString();&#xA;        return path.Contains(&#34;match&#34;);&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta.EFTests/Usage.cs#L16-L26&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-ShouldExecuteEF&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;UseResponseDiagnostics&lt;/h2&gt; &#xA;&lt;p&gt;Response diagnostics is an opt-in feature that includes extra log information in the response headers.&lt;/p&gt; &#xA;&lt;p&gt;Enable by setting UseResponseDiagnostics to true at startup:&lt;/p&gt; &#xA;&lt;!-- snippet: UseResponseDiagnostics --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-UseResponseDiagnostics&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;DeltaExtensions.UseResponseDiagnostics = true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/ModuleInitializer.cs#L6-L10&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-UseResponseDiagnostics&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Response diagnostics headers are prefixed with &lt;code&gt;Delta-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example Response header when the Request has not &lt;code&gt;If-None-Match&lt;/code&gt; header.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta-No304.png&#34;&gt; &#xA;&lt;h2&gt;Helpers&lt;/h2&gt; &#xA;&lt;p&gt;Utility methods for working with databases using the Delta conventions.&lt;/p&gt; &#xA;&lt;h3&gt;GetLastTimeStamp&lt;/h3&gt; &#xA;&lt;h4&gt;For a &lt;code&gt;SqlConnection&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;!-- snippet: GetLastTimeStampSqlConnection --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetLastTimeStampSqlConnection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var timeStamp = await sqlConnection.GetLastTimeStamp();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L60-L64&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetLastTimeStampSqlConnection&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;For a &lt;code&gt;DbContext&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;!-- snippet: GetLastTimeStampEF --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetLastTimeStampEF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var timeStamp = await dbContext.GetLastTimeStamp();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta.EFTests/Usage.cs#L55-L59&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetLastTimeStampEF&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;GetDatabasesWithTracking&lt;/h3&gt; &#xA;&lt;p&gt;Get a list of all databases with change tracking enabled.&lt;/p&gt; &#xA;&lt;!-- snippet: GetDatabasesWithTracking --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetDatabasesWithTracking&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var trackedDatabases = await sqlConnection.GetTrackedDatabases();&#xA;foreach (var db in trackedDatabases)&#xA;{&#xA;    Trace.WriteLine(db);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L98-L106&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetDatabasesWithTracking&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;!-- snippet: GetTrackedDatabasesSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetTrackedDatabasesSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;select d.name&#xA;from sys.databases as d inner join&#xA;  sys.change_tracking_databases as t on&#xA;  t.database_id = d.database_id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L140-L145&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetTrackedDatabasesSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;GetTrackedTables&lt;/h3&gt; &#xA;&lt;p&gt;Get a list of all tracked tables in database.&lt;/p&gt; &#xA;&lt;!-- snippet: GetTrackedTables --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetTrackedTables&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var trackedTables = await sqlConnection.GetTrackedTables();&#xA;foreach (var db in trackedTables)&#xA;{&#xA;    Trace.WriteLine(db);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L124-L132&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetTrackedTables&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;!-- snippet: GetTrackedTablesSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-GetTrackedTablesSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;select t.Name&#xA;from sys.tables as t left join&#xA;  sys.change_tracking_tables as c on t.[object_id] = c.[object_id]&#xA;where c.[object_id] is not null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L76-L81&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-GetTrackedTablesSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;IsTrackingEnabled&lt;/h3&gt; &#xA;&lt;p&gt;Determine if change tracking is enabled for a database.&lt;/p&gt; &#xA;&lt;!-- snippet: IsTrackingEnabled --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-IsTrackingEnabled&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;var isTrackingEnabled = await sqlConnection.IsTrackingEnabled();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L189-L193&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-IsTrackingEnabled&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;!-- snippet: IsTrackingEnabledSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-IsTrackingEnabledSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;select count(d.name)&#xA;from sys.databases as d inner join&#xA;  sys.change_tracking_databases as t on&#xA;  t.database_id = d.database_id&#xA;where d.name = &#39;{database}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L97-L103&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-IsTrackingEnabledSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;EnableTracking&lt;/h3&gt; &#xA;&lt;p&gt;Enable change tracking for a database.&lt;/p&gt; &#xA;&lt;!-- snippet: EnableTracking --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-EnableTracking&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;await sqlConnection.EnableTracking();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L183-L187&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-EnableTracking&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;!-- snippet: EnableTrackingSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-EnableTrackingSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter database {database}&#xA;set change_tracking = on&#xA;(&#xA;  change_retention = {retentionDays} days,&#xA;  auto_cleanup = on&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L61-L68&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-EnableTrackingSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;DisableTracking&lt;/h3&gt; &#xA;&lt;p&gt;Disable change tracking for a database and all tables within that database.&lt;/p&gt; &#xA;&lt;!-- snippet: DisableTracking --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-DisableTracking&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;await sqlConnection.DisableTracking();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L168-L172&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-DisableTracking&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;h4&gt;For disabling tracking on a database:&lt;/h4&gt; &#xA;&lt;!-- snippet: DisableTrackingSqlDB --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-DisableTrackingSqlDB&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter database [{database}] set change_tracking = off;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L126-L128&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-DisableTrackingSqlDB&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;For disabling tracking on tables:&lt;/h4&gt; &#xA;&lt;!-- snippet: DisableTrackingSqlTable --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-DisableTrackingSqlTable&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter table [{table}] disable change_tracking;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L118-L120&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-DisableTrackingSqlTable&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h3&gt;SetTrackedTables&lt;/h3&gt; &#xA;&lt;p&gt;Enables change tracking for all tables listed, and disables change tracking for all tables not listed.&lt;/p&gt; &#xA;&lt;!-- snippet: SetTrackedTables --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-SetTrackedTables&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;await sqlConnection.SetTrackedTables([&#34;Companies&#34;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/DeltaTests/Usage.cs#L118-L122&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-SetTrackedTables&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;p&gt;Uses the following SQL:&lt;/p&gt; &#xA;&lt;h4&gt;For enabling tracking on a database:&lt;/h4&gt; &#xA;&lt;!-- snippet: EnableTrackingSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-EnableTrackingSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter database {database}&#xA;set change_tracking = on&#xA;(&#xA;  change_retention = {retentionDays} days,&#xA;  auto_cleanup = on&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L61-L68&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-EnableTrackingSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;For enabling tracking on tables:&lt;/h4&gt; &#xA;&lt;!-- snippet: EnableTrackingTableSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-EnableTrackingTableSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter table [{table}] enable change_tracking&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L24-L26&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-EnableTrackingTableSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h4&gt;For disabling tracking on tables:&lt;/h4&gt; &#xA;&lt;!-- snippet: DisableTrackingTableSql --&gt; &#xA;&lt;p&gt;&lt;a id=&#34;snippet-DisableTrackingTableSql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;alter table [{table}] disable change_tracking;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/src/Delta/DeltaExtensions_Sql.cs#L33-L35&#34; title=&#34;Snippet source file&#34;&gt;snippet source&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SimonCropp/Delta/main/#snippet-DisableTrackingTableSql&#34; title=&#34;Start of snippet&#34;&gt;anchor&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;!-- endSnippet --&gt; &#xA;&lt;h2&gt;Programmatic client usage&lt;/h2&gt; &#xA;&lt;p&gt;Delta is primarily designed to support web browsers as a client. All web browsers have the necessary 304 and caching functionally required.&lt;/p&gt; &#xA;&lt;p&gt;In the scenario where web apis (that support using 304) are being consumed using .net as a client, consider using one of the below extensions to cache responses.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SimonCropp/Replicant&#34;&gt;Replicant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tavis-software/Tavis.HttpCache&#34;&gt;Tavis.HttpCache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aliostad/CacheCow&#34;&gt;CacheCow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamesmontemagno/monkey-cache&#34;&gt;Monkey Cache&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Icon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://thenounproject.com/term/estuary/1847616/&#34;&gt;Estuary&lt;/a&gt; designed by &lt;a href=&#34;https://thenounproject.com/Asphaleia/&#34;&gt;Daan&lt;/a&gt; from &lt;a href=&#34;https://thenounproject.com&#34;&gt;The Noun Project&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>