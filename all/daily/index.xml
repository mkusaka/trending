<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-08T01:30:39Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MubertAI/Mubert-Text-to-Music</title>
    <updated>2022-11-08T01:30:39Z</updated>
    <id>tag:github.com,2022-11-08:/MubertAI/Mubert-Text-to-Music</id>
    <link href="https://github.com/MubertAI/Mubert-Text-to-Music" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple notebook demonstrating prompt-based music generation via Mubert API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mubert-Text-to-Music&lt;/h1&gt; &#xA;&lt;p&gt;Colab notebooks demonstrating prompt-based music generation via Mubert API&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/YJu0iXn-T_U&#34;&gt;&lt;strong&gt;WATCH DEMO&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MubertAI/Mubert-Text-to-Music/main/Mubert_Text_to_Music.ipynb&#34;&gt;Mubert Text-to-Music&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A simple demo offering music generation by prompt and duration&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MubertAI/Mubert-Text-to-Music/main/Deforum_Stable_Diffusion_Mubert.ipynb&#34;&gt;Stable Diffusion + Mubert&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A demo of instant prompt-based music video generation based on Deforum Stable Diffusion colab&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;All music is generated by Mubert API – &lt;a href=&#34;http://www.mubert.com/&#34;&gt;www.mubert.com/&lt;/a&gt;. If you want to use it for free – please, tag us on Twitter (&lt;a href=&#34;https://twitter.com/mubertapp&#34;&gt;https://twitter.com/mubertapp&lt;/a&gt;) and include hashtag #mubert.&lt;/p&gt; &#xA;&lt;p&gt;We’re glad to present you our new Text-to-Music demo interface. Now as a Google Colab, and soon we’ll add this feature as a simple form on our website. This has already gone viral, so the community has questions about how everything works&lt;/p&gt; &#xA;&lt;p&gt;People ask how generative this music really is. Each time you send a request, our API generates a unique combination of sounds. The probability of repetition is extremely small. Music is not taken from the database of finished tracks, it is created at the time of the request.&lt;/p&gt; &#xA;&lt;p&gt;How are sounds selected for generation? The input prompt and Mubert API tags are both encoded to latent space vectors of a transformer neural network. Then the closest tags vector is selected for each prompt and corresponding tags are sent to our API for music generation.&lt;/p&gt; &#xA;&lt;p&gt;All sounds (separate loops for bass, leads etc.) are created by musicians and sound designers, they are not synthesized by any neural network. Our paradigm is &#34;from creators to creators&#34;. We are musicians ourselves and it is important for us that musicians stay in the equation.&lt;/p&gt; &#xA;&lt;p&gt;Our proprietary technology is able to analyze and select relevant sounds, as well as build arrangements and compositions from them. In this demo, you can set up what you need, a looped track or a track with a start and end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A custom license works for colab. You can use the music for free with attribution to sync with images and videos, but you can&#39;t release it on DSPs (Spotify, Apple Music, Deezer etc.) as your own. We also ask you to mention @mubertapp and hashtag #mubert. If you need a commercial license — please contact us.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is our first step towards creating a more complex and accurate generation algorithm, but for this we will need time and resources. All your feedback will be very useful, so feel free to write us in the replies or in a PM about your user experience. Have fun!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/react-native</title>
    <updated>2022-11-08T01:30:39Z</updated>
    <id>tag:github.com,2022-11-08:/facebook/react-native</id>
    <link href="https://github.com/facebook/react-native" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A framework for building native applications using React&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://reactnative.dev/&#34;&gt; React Native &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Learn once, write anywhere:&lt;/strong&gt;&lt;br&gt; Build mobile apps with React. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/facebook/react-native/raw/HEAD/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;React Native is released under the MIT license.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/facebook/react-native&#34;&gt; &lt;img src=&#34;https://circleci.com/gh/facebook/react-native.svg?style=shield&#34; alt=&#34;Current CircleCI build status.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/react-native&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/react-native?color=brightgreen&amp;amp;label=npm%20package&#34; alt=&#34;Current npm package version.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://reactnative.dev/docs/contributing&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=reactnative&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/reactnative.svg?label=Follow%20@reactnative&#34; alt=&#34;Follow @reactnative&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://reactnative.dev/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://reactnative.dev/docs/tutorial&#34;&gt;Learn the Basics&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://reactnative.dev/showcase&#34;&gt;Showcase&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://reactnative.dev/docs/contributing&#34;&gt;Contribute&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://reactnative.dev/help&#34;&gt;Community&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://github.com/facebook/react-native/raw/HEAD/.github/SUPPORT.md&#34;&gt;Support&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;React Native brings &lt;a href=&#34;https://reactjs.org/&#34;&gt;&lt;strong&gt;React&lt;/strong&gt;&#39;s&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&#34;https://reactnative.dev/docs/out-of-tree-platforms&#34;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&#34;https://github.com/facebook/react-native/raw/HEAD/ECOSYSTEM.md&#34;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-building-your-first-react-native-app&#34;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-upgrading&#34;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-how-to-contribute&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/react-native/main/#-license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📋 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;React Native apps may target iOS 12.4 and Android 5.0 (API 21) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&#34;https://expo.dev&#34;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; &#xA;&lt;h2&gt;🎉 Building your first React Native app&lt;/h2&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://reactnative.dev/docs/getting-started&#34;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snack.expo.dev/@hramos/hello,-world!&#34;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactnative.dev/docs/getting-started&#34;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactnative.dev/docs/integration-with-existing-apps&#34;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&#34;https://reactnative.dev/docs/getting-started&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&#34;https://reactjs.org/docs/getting-started.html&#34;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&#34;https://github.com/facebook/react-native-website&#34;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&#34;https://reactnative.dev/docs/upgrading&#34;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;p&gt;React Native releases are discussed &lt;a href=&#34;https://github.com/reactwg/react-native-releases/discussions&#34;&gt;in this discussion repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;👏 How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://code.fb.com/codeofconduct/&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&#34;https://code.fb.com/codeofconduct/&#34;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://reactnative.dev/docs/contributing&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://reactnative.dev/docs/contributing&#34;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/facebook/react-native/wiki/Roadmap&#34;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&#34;https://github.com/facebook/react-native/wiki/Roadmap&#34;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Good First Issues&lt;/h3&gt; &#xA;&lt;p&gt;We have a list of &lt;a href=&#34;https://github.com/facebook/react-native/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; &#xA;&lt;h3&gt;Discussions&lt;/h3&gt; &#xA;&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&#34;https://github.com/react-native-community/discussions-and-proposals&#34;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&#34;https://github.com/facebook/react-native/raw/HEAD/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&#34;https://github.com/facebook/react-native/raw/HEAD/LICENSE-docs&#34;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>idanya/algo-trader</title>
    <updated>2022-11-08T01:30:39Z</updated>
    <id>tag:github.com,2022-11-08:/idanya/algo-trader</id>
    <link href="https://github.com/idanya/algo-trader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Trading bot with support for realtime trading, backtesting, custom strategies and much more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;algo-trader&lt;/h1&gt; &#xA;&lt;p&gt;Trading strategies builder, backtester, and real-time trader.&lt;/p&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;algo-trader is an implementation of an algorithmic trading strategy executor and backtester. Capable of backtesting strategies locally and trading them in real-time via your broker API.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please be aware that this is a &lt;strong&gt;work in progress&lt;/strong&gt; and the trader is missing external market data and trade providers. If you&#39;d like to use the trader for real-world trading, you&#39;ll have to implement your broker API. Although real-time trading is not finished, backtesting is fully functional, so implemented strategies can be backtested and used in real trading when it will be ready.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;algo-trader is written in Python, and its current stack composes of:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;MongoDB as a backend data store for backtesting strategies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jesse-ai/tulipy&#34;&gt;tulipy&lt;/a&gt; - Python bindings for &lt;a href=&#34;https://tulipindicators.org/&#34;&gt;Tulip Indicators&lt;/a&gt;. Used to provide technical indicators calculations.&lt;/li&gt; &#xA; &lt;li&gt;ib_client (Optional) - Python library to communicate with Interactive Brokers gateway. Only needed if you plan on doing real trading via IB.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/design/diagram.png&#34; alt=&#34;System design&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sources&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/source.py&#34;&gt;Source&lt;/a&gt; is an implementation of a Candle Iterator. This is the starting point of the pipeline and the &#34;source&#34; for the incoming candles processed.&lt;/p&gt; &#xA;&lt;h3&gt;Processors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/processor.py&#34;&gt;Processor&lt;/a&gt; is the primary processing unit in the pipeline. Processors can be constructed in any order while Candles are flowing from the source, forward through all processors. Each processor is responsible for sending the candles it processes to the next processor (unless it has a reason not to).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;process()&lt;/code&gt; function gets with each candle also an object called &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/shared_context.py&#34;&gt;&lt;code&gt;SharedContext&lt;/code&gt;&lt;/a&gt;. The context is an instance of an in-memory KV store to share context and information between processors.&lt;/p&gt; &#xA;&lt;p&gt;Another way to share data between processors is to make use of the &lt;code&gt;attachments&lt;/code&gt; field on the Candle itself. This field is intended for metadata on the candle, like calculations and state relevant to that candle point in time. Candle attachments are persistent throughout the pipeline.&lt;/p&gt; &#xA;&lt;h4&gt;Reprocessing&lt;/h4&gt; &#xA;&lt;p&gt;Reprocessing is a feature that enables a processor to re-send an already processed candle to the next processor. Reprocessing is useful for processors that do some logic outside the main flow of the pipeline. for example, upon events, external triggers, market/trade provider&#39;s events/issues, etc... An example of reprocessing can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/processors/assets_correlation.py&#34;&gt;AssetCorrelationProcessor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/entities/event.py&#34;&gt;Event&lt;/a&gt; as its name suggests, defines an event that occurred in the system. It follows the same flow as the Candles, passing between processors. Each processor is responsible for propagating the event to the next processor (if needed).&lt;/p&gt; &#xA;&lt;p&gt;Because pipelines are data-driven and not time-driven, events can be used as checkpoints to indicate something that happened in the data stream. For example, running the same pipeline from a DB source and a real-time market data source can have different effects if the processor were to rely on time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;It is crucial to have the same behavior when fast-running from DB and real-time for backtesting to be useful.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Strategies&lt;/h3&gt; &#xA;&lt;p&gt;Strategies are executed per candle by the &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/processors/strategy.py&#34;&gt;StrategyProcessor&lt;/a&gt;. A strategy is responsible for executing the trading logic and dispatching Signals (&lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/entities/strategy_signal.py&#34;&gt;StrategySignal&lt;/a&gt;). In the event a strategy is raising a trading signal, the StrategyProcessor will catch and pass it to the &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/trade/signals_executor.py&#34;&gt;SignalsExecutor&lt;/a&gt; for execution.&lt;/p&gt; &#xA;&lt;h3&gt;Terminators&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/src/pipeline/terminator.py&#34;&gt;Terminator&lt;/a&gt; is an optional final piece of the pipeline. It&#39;s executed at the very end of a pipeline when the Source iterator has been fully consumed. Terminators are useful for unit testing, backtesting, and environment cleanups.&lt;/p&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;p&gt;algo-trader is using MongoDB for data storage. To run Mongo locally use &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Virtual environment&lt;/h2&gt; &#xA;&lt;p&gt;It is best to use a virtual environment to run algo-trader.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 -m venv run&#xA;source run/bin/activate&#xA;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unit: &lt;code&gt;./scripts/test-unit.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integration (needs IB gateway running): &lt;code&gt;./scripts/test-integration.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;All: &lt;code&gt;./scripts/test-all.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and much needed. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/idanya/algo-trader/main/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>