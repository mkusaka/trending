<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-24T01:31:28Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Automattic/pocket-casts-android</title>
    <updated>2022-10-24T01:31:28Z</updated>
    <id>tag:github.com,2022-10-24:/Automattic/pocket-casts-android</id>
    <link href="https://github.com/Automattic/pocket-casts-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pocket Casts Android 🎧&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/308331/194037473-41ad7eba-8602-4be5-be73-49e3c0c48c12.svg#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/308331/194041226-4c6d8181-cafa-4ea8-8735-1d8106f5e5f6.svg#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://buildkite.com/automattic/pocket-casts-android&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/dc67ef3537ad6cf097ff193b28063347418205a341d55f9940.svg?branch=main&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Automattic/pocket-casts-android/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MPL-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Pocket Casts is the world&#39;s most powerful podcast platform, an app by listeners, for listeners. &lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re just looking to install Pocket Casts Android, you can find it on &lt;a href=&#34;https://play.google.com/store/apps/details?id=au.com.shiftyjelly.pocketcasts&#34;&gt;Google Play&lt;/a&gt;. If you&#39;re a developer wanting to contribute, read on.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you&#39;ve installed &lt;a href=&#34;https://developer.android.com/studio/index.html&#34;&gt;Android Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In Android Studio, open the project from the local repository.&lt;/li&gt; &#xA; &lt;li&gt;Go to Tools → Device Manager and create an emulated device.&lt;/li&gt; &#xA; &lt;li&gt;Go to Run → Edit Configurations… and create an Android App configuration.&lt;/li&gt; &#xA; &lt;li&gt;Select the module &#34;pocketcasts-android.app.main&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Run.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build and Test&lt;/h2&gt; &#xA;&lt;p&gt;To build, install, and test the project from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gradlew :app:assembleDebugProd          # assemble the debug .apk&#xA;$ ./gradlew :app:installDebugProd           # install the debug .apk to a connected device&#xA;$ ./gradlew :app:testDebugUnitTest          # assemble, install and run unit tests&#xA;$ ./gradlew :app:connectedDebugAndroidTest  # assemble, install and run Android tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── app                    # Mobile app&#xA;├── automotive             # Automotive app&#xA;├── modules&#xA;│   ├── features&#xA;│   │   ├── account        # Create account and sign in pages.&#xA;│   │   ├── cartheme       # Automotive resources needed for the account pages.&#xA;│   │   ├── discover       # Discover section.&#xA;│   │   ├── filters        # Filters section.&#xA;│   │   ├── navigation     # Navigation utilities.&#xA;│   │   ├── player         # Full screen player&#xA;│   │   ├── podcasts       # Podcasts section.&#xA;│   │   ├── profile        # Profile section.&#xA;│   │   ├── search         # Search pages.&#xA;│   │   └── settings       # Settings pages.&#xA;│   └── services&#xA;│       ├── compose        # Shared Compose code.&#xA;│       ├── images         # Image resources.&#xA;│       ├── localization   # Contains the strings in English and localized strings from GlotPress. &#xA;│       ├── model          # The database logic and entities. Also transfer objects required which aren&#39;t stored in the database.&#xA;│       ├── preferences    # Stores the user preferences and configuration settings.&#xA;│       ├── repositories   # Provides accessing to the data from the &#39;servers&#39; and &#39;model&#39; modules.&#xA;│       ├── servers        # Provides the network calls to the servers. The UI layer should access these through the &#39;repositories&#39; module.&#xA;│       ├── ui             # Shared UI code for the &#39;compose&#39; and &#39;views&#39; modules. This includes the themes.&#xA;│       ├── utils          # Utility classes.&#xA;│       └── views          # Shred Only the old views code.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn about reporting issues, contributing code, and more ways to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you happen to find a security vulnerability, please let us know at &lt;a href=&#34;https://hackerone.com/automattic&#34;&gt;https://hackerone.com/automattic&lt;/a&gt; and allow us to respond before disclosing the issue publicly.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/docs/coding-style.md&#34;&gt;Coding Style&lt;/a&gt; - guidelines and validation and auto-formatting tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/docs/pull-request-guidelines.md&#34;&gt;Pull Request Guidelines&lt;/a&gt; - branch naming and how to write good pull requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Signing a Release&lt;/h2&gt; &#xA;&lt;p&gt;To build a &lt;em&gt;signed&lt;/em&gt; release, add these lines to your ~/.gradle/gradle.properties file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pocketcastsKeyStoreFile=/Users/username/git/secret.keystore&#xA;pocketcastsKeyStorePassword=&#xA;pocketcastsKeyStoreAlias=&#xA;pocketcastsKeyStoreAliasPassword=&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>HarisIqbal88/PlotNeuralNet</title>
    <updated>2022-10-24T01:31:28Z</updated>
    <id>tag:github.com,2022-10-24:/HarisIqbal88/PlotNeuralNet</id>
    <link href="https://github.com/HarisIqbal88/PlotNeuralNet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Latex code for making neural networks diagrams&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PlotNeuralNet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.5281/zenodo.2526396&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.2526396.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Latex code for drawing neural networks for reports and presentation. Have a look into examples to see how they are made. Additionally, lets consolidate any improvements that you make and fix any bugs to help more people with this code.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Following are some network representations:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17570785/50308846-c2231880-049c-11e9-8763-3daa1024de78.png&#34; width=&#34;85%&#34; height=&#34;85%&#34;&gt;&lt;/p&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;FCN-8 (&lt;a href=&#34;https://www.overleaf.com/read/kkqntfxnvbsk&#34;&gt;view on Overleaf&lt;/a&gt;)&lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17570785/50308873-e2eb6e00-049c-11e9-9587-9da6bdec011b.png&#34; width=&#34;85%&#34; height=&#34;85%&#34;&gt;&lt;/p&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;FCN-32 (&lt;a href=&#34;https://www.overleaf.com/read/wsxpmkqvjnbs&#34;&gt;view on Overleaf&lt;/a&gt;)&lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17570785/50308911-03b3c380-049d-11e9-92d9-ce15669017ad.png&#34; width=&#34;85%&#34; height=&#34;85%&#34;&gt;&lt;/p&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;Holistically-Nested Edge Detection (&lt;a href=&#34;https://www.overleaf.com/read/jxhnkcnwhfxp&#34;&gt;view on Overleaf&lt;/a&gt;)&lt;/h6&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the following packages on Ubuntu.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ubuntu 16.04&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt-get install texlive-latex-extra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ubuntu 18.04.2 Base on this &lt;a href=&#34;https://gist.github.com/rain1024/98dd5e2c6c8c28f9ea9d&#34;&gt;website&lt;/a&gt;, please install the following packages.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt-get install texlive-latex-base&#xA;sudo apt-get install texlive-fonts-recommended&#xA;sudo apt-get install texlive-fonts-extra&#xA;sudo apt-get install texlive-latex-extra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Windows&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Download and install &lt;a href=&#34;https://miktex.org/download&#34;&gt;MikTeX&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Download and install bash runner on Windows, recommends &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git bash&lt;/a&gt; or Cygwin(&lt;a href=&#34;https://www.cygwin.com/&#34;&gt;https://www.cygwin.com/&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute the example as followed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd pyexamples/&#xA;bash ../tikzmake.sh test_simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Python interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add easy legend functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add more layer shapes like TruncatedPyramid, 2DSheet etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add examples for RNN and likes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Latex usage&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/HarisIqbal88/PlotNeuralNet/master/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory for usage.&lt;/p&gt; &#xA;&lt;h2&gt;Python usage&lt;/h2&gt; &#xA;&lt;p&gt;First, create a new directory and a new Python file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir my_project&#xA;$ cd my_project&#xA;vim my_arch.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following code to your new file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys&#xA;sys.path.append(&#39;../&#39;)&#xA;from pycore.tikzeng import *&#xA;&#xA;# defined your arch&#xA;arch = [&#xA;    to_head( &#39;..&#39; ),&#xA;    to_cor(),&#xA;    to_begin(),&#xA;    to_Conv(&#34;conv1&#34;, 512, 64, offset=&#34;(0,0,0)&#34;, to=&#34;(0,0,0)&#34;, height=64, depth=64, width=2 ),&#xA;    to_Pool(&#34;pool1&#34;, offset=&#34;(0,0,0)&#34;, to=&#34;(conv1-east)&#34;),&#xA;    to_Conv(&#34;conv2&#34;, 128, 64, offset=&#34;(1,0,0)&#34;, to=&#34;(pool1-east)&#34;, height=32, depth=32, width=2 ),&#xA;    to_connection( &#34;pool1&#34;, &#34;conv2&#34;),&#xA;    to_Pool(&#34;pool2&#34;, offset=&#34;(0,0,0)&#34;, to=&#34;(conv2-east)&#34;, height=28, depth=28, width=1),&#xA;    to_SoftMax(&#34;soft1&#34;, 10 ,&#34;(3,0,0)&#34;, &#34;(pool1-east)&#34;, caption=&#34;SOFT&#34;  ),&#xA;    to_connection(&#34;pool2&#34;, &#34;soft1&#34;),&#xA;    to_end()&#xA;    ]&#xA;&#xA;def main():&#xA;    namefile = str(sys.argv[0]).split(&#39;.&#39;)[0]&#xA;    to_generate(arch, namefile + &#39;.tex&#39; )&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, run the program as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash ../tikzmake.sh my_arch&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>starkscan/starkscan-verifier</title>
    <updated>2022-10-24T01:31:28Z</updated>
    <id>tag:github.com,2022-10-24:/starkscan/starkscan-verifier</id>
    <link href="https://github.com/starkscan/starkscan-verifier" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Verify Cairo contracts on Starkscan in 1 miute.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://starkscan.co&#34;&gt; &lt;img width=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/starkscan/starkscan-verifier/main/docs/logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!-- primary badges --&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/starkscan&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/starkscan&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/starkscan&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/starkscan?color=blueviolet&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/starkscan/starkscan-verifier/raw/main/LICENSE/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-black&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/starkscan/starkscan-verifier/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/starkscan/starkscan-verifier?color=yellow&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://starkware.co/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/powered_by-StarkWare-navy&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;360&#34; src=&#34;https://raw.githubusercontent.com/starkscan/starkscan-verifier/main/docs/demo.gif&#34; alt=&#34;demo&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Why verify?&lt;/h2&gt; &#xA;&lt;p&gt;Anyone can upload any ABI to Starknet and block explorers will assume it is correct when it doesn&#39;t have to be. The information is misleading because it is possible to upload an incorrect ABI. This could potentially introduce a security risk when interacting with unverified contracts on Starknet. This verifier allows you to verify the ABI of a contract on Starknet and confirm that it is correct. Jonathan Lei mentioned this in a &lt;a href=&#34;https://community.starknet.io/t/remove-abi-from-contract-deployment-request-and-get-code-response/308&#34;&gt;community post here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What happens after you verify?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starkscan.co/txs&#34;&gt;Transactions&lt;/a&gt; and &lt;a href=&#34;https://starkscan.co/events&#34;&gt;Events&lt;/a&gt; are correctly decoded to human readable functions, inputs and outputs.&lt;/li&gt; &#xA; &lt;li&gt;Run read and write operations on the contract state safely and accurately.&lt;/li&gt; &#xA; &lt;li&gt;Users who look at your contracts on Starkscan can trust that all the information is correct.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-requisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🐍 Python users that use &lt;a href=&#34;https://github.com/OpenZeppelin/nile&#34;&gt;Nile&lt;/a&gt; please activate your virtual environment.&lt;/li&gt; &#xA; &lt;li&gt;🌟 Protostar users please run &lt;code&gt;protostar install&lt;/code&gt; before running this tool.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h6&gt;npx&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# in your project directory&#xA;npx starkscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;npm&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g starkscan&#xA;&#xA;# in your project directory&#xA;starkscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DM us on &lt;a href=&#34;https://twitter.com/starkscanco&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Diamond Paws Inc&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://github.com/starkscan/starkscan-verifier/raw/main/LICENSE&#34;&gt;AGPL&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starkscan.co&#34;&gt;Starkscan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>