<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-30T01:31:42Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OpenEthan/SMSBoom</title>
    <updated>2022-08-30T01:31:42Z</updated>
    <id>tag:github.com,2022-08-30:/OpenEthan/SMSBoom</id>
    <link href="https://github.com/OpenEthan/SMSBoom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;短信轰炸/短信测压/ | 一个健壮免费的python短信轰炸程序，专门炸坏蛋蛋，百万接口，多线程全自动添加有效接口，支持异步协程百万并发，全免费的短信轰炸工具！！hongkonger开发全网首发！！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEthan/SMSBoom/master/img/smsboom-logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEthan/SMSBoom/master/img/test2.gif&#34; alt=&#34;test&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;三件事&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;原作者 &lt;em&gt;@whalefell&lt;/em&gt; 為保障自身安全及規避風險,於 &lt;code&gt;2022/7/6&lt;/code&gt; 將本倉庫移交給我.至此,本倉庫所有事務與原作者無關.&lt;/li&gt; &#xA; &lt;li&gt;介於本項目在簡中 &lt;strong&gt;GitHub&lt;/strong&gt; 圈影響較大,請大家遵守自己所在國家地區的相關法律,&lt;strong&gt;違反法律者與開發者無關&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;請大家理智甄別,獨立思考.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;简体中文:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;原作者 &lt;em&gt;@whalefell&lt;/em&gt; 为保障自身安全及规避风险,于 &lt;code&gt;2022/7/6&lt;/code&gt; 将本仓库移交给我.至此,本仓库所有事务与原作者无关.&lt;/li&gt; &#xA;  &lt;li&gt;介于本项目在简中 &lt;strong&gt;GitHub&lt;/strong&gt; 圈影响较大,请大家遵守自己所在国家地区的相关法律,&lt;strong&gt;违反法律者与开发者无关&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;请大家理智甄别,独立思考.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;若使用者滥用本项目,本人 &lt;strong&gt;无需承担&lt;/strong&gt; 任何法律责任.&lt;/li&gt; &#xA; &lt;li&gt;本程序仅供娱乐,源码全部开源,&lt;strong&gt;禁止滥用&lt;/strong&gt; 和二次 &lt;strong&gt;贩卖盈利&lt;/strong&gt;. &lt;strong&gt;禁止用于商业用途&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;通过自定义 &lt;code&gt;api.json&lt;/code&gt; 的方式定义接口.&lt;/li&gt; &#xA; &lt;li&gt;支持关键字替换. &lt;strong&gt;时间戳&lt;/strong&gt; &lt;code&gt;[timestamp]&lt;/code&gt; &lt;strong&gt;手机号&lt;/strong&gt; &lt;code&gt;[phone]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;多线程/异步 请求.&lt;/li&gt; &#xA; &lt;li&gt;通过 Flask 提供网页测试/添加接口.&lt;/li&gt; &#xA; &lt;li&gt;友好的命令行参数支持.&lt;/li&gt; &#xA; &lt;li&gt;采用方便的 pipenv 包管理.&lt;/li&gt; &#xA; &lt;li&gt;通过代理调用短信接口, 支持http, socks4, socks5代理.&lt;/li&gt; &#xA; &lt;li&gt;使用随机的User-Agent.&lt;/li&gt; &#xA; &lt;li&gt;可指定轰炸次数, 轰炸间隔时间.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;适用于小白&lt;/h3&gt; &#xA;&lt;p&gt;✨本项目已经使用 &lt;code&gt;pyinstaller&lt;/code&gt; 打包成 &lt;code&gt;EXE&lt;/code&gt; 可执行文件!免去部署 Python 环境的烦恼,适合用于小白白.&lt;/p&gt; &#xA;&lt;p&gt;🔨作者的打包环境为: &lt;code&gt;Windows 10 x64 Python3.8&lt;/code&gt; 如果 Windows 系统不是 &lt;strong&gt;Windows 10 64位&lt;/strong&gt; 版本,&lt;strong&gt;可能会运行失败&lt;/strong&gt;! 如果出现异常报错请截图发 Issue.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载 EXE 可执行文件&lt;br&gt; 请移步到项目的 &lt;a href=&#34;https://github.com/AdminWhaleFall/SMSBoom/releases&#34;&gt;release页&lt;/a&gt; 下载&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;若遇到国内网络环境下载不下来,请参见 &lt;a href=&#34;https://github.do/&#34;&gt;https://github.do/&lt;/a&gt; 等加速镜像.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;运行&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;在任意盘(&lt;strong&gt;除C盘外&lt;/strong&gt;)中新建一个文件夹.将程序移动到其中. e.g.&lt;br&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/AdminWhaleFall/SMSBoom@master/img/e.g.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;Win&lt;/code&gt;+&lt;code&gt;R&lt;/code&gt; 打开cmd.输入存放的盘符.例如: &lt;code&gt;E:&lt;/code&gt; 然后cd到文件夹,例如 &lt;code&gt;cd SMS&lt;/code&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/AdminWhaleFall/SMSBoom@master/img/cmd1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;确认 cmd 路径是 EXE 所在路径后,cmd 输入:&lt;code&gt;smsboom_pyinstall.exe&lt;/code&gt;,若出现命令提示,则说明脚本已正常运行. &lt;img src=&#34;https://cdn.jsdelivr.net/gh/AdminWhaleFall/SMSBoom@master/img/cmd2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;使用前必须更新一遍最新接口&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;若更新接口出现错误 &lt;code&gt;ssl_&lt;/code&gt;,请参见 &lt;a href=&#34;https://github.com/AdminWhaleFall/SMSBoom/issues/2&#34;&gt;issue&lt;/a&gt; &lt;strong&gt;关闭代理软件&lt;/strong&gt;再 update.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ol start=&#34;5&#34;&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WhaleFell/SMSBoom#%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86&#34;&gt;对代理设置的说明&lt;/a&gt;, 小白可以暂时不看&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;传递参数,命令示例:&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;启动64个线程,轰//炸一个人的手机号(198xxxxxxxx),只轰//炸一波。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe run -t 64 -p 198xxxxxxxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;启动64个线程,轰//炸一个人的手机号(19xxxxxxx),启动循环轰//炸, 轮番轰//炸60次&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe run -t 64 -p 198xxxxxxxxx -f 60&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;启动64个线程,轰//炸一个人的手机号(19xxxxxxx),启动循环轰//炸, 轮番轰//炸60次, 每次间隔30秒&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe run -t 64 -p 198xxxxxxxxx -f 60 -i 30&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;启动64个线程,轰//炸一个人的手机号(19xxxxxxx),启动循环轰//炸, 轮番轰//炸60次, 每次间隔30秒, 开启代理列表进行轰炸&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe run -t 64 -p 198xxxxxxxxx -f 60 -i 30 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;启动64个线程,轰//炸多个人的手机号(138xxx,139xxxx),启动循环轰//炸, 轮番轰炸60次, 每次间隔30秒, 开启代理列表进行轰炸&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;smsboom_pyinstall.exe run -t 64 -p 138xxxxxxxx -p 139xxxxxxxx -f 60 -i 30 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;适用于大佬&lt;/h3&gt; &#xA;&lt;h4&gt;下载项目&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;方法一：使用Git:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/AdminWhaleFall/SMSBoom.git/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;墙国加速&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.do/https://github.com/AdminWhaleFall/SMSBoom.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;方法二：点击下载&lt;a href=&#34;https://github.com/AdminWhaleFall/SMSBoom/archive/refs/heads/master.zip&#34;&gt;项目压缩包&lt;/a&gt;并解压.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;配置环境&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;前提条件:&lt;/strong&gt; 请确保自己的电脑有 &lt;code&gt;python3.x&lt;/code&gt; 的环境,推荐使用 &lt;code&gt;3.8&lt;/code&gt; 及以上!&lt;/p&gt; &#xA;&lt;p&gt;方案一: 有 &lt;code&gt;Python3.8&lt;/code&gt; 环境的可以使用 &lt;code&gt;pipenv&lt;/code&gt; 工具.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装 pipenv 包管理工具.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install pipenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;为项目构建虚拟环境.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pipenv install  # 仅使用轰//炸功能&#xA;pipenv install --dev # 使用 webui 调试接口功能.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;尝试运行 smsboom.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pipenv shell # 激活虚拟环境&#xA;python smsboom.py  # linux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若无报错，输出帮助信息，则说明环境已经正确安装。若报错请使用方案二&lt;/p&gt; &#xA;&lt;p&gt;方案二: 只有 &lt;code&gt;Python3.X&lt;/code&gt; 环境的需要使用原生 &lt;code&gt;pip&lt;/code&gt; 工具.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装所需要的库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt # 仅使用轰//炸&#xA;pip install -r requirements-dev.txt # 使用 webui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;尝试运行 smsboom.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若无报错，输出帮助信息，则说明环境已经正确安装。&lt;/p&gt; &#xA;&lt;h4&gt;使用 Docker 运行&lt;/h4&gt; &#xA;&lt;h5&gt;方式一: 一键运行&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm lanqsh/smsboom run -t 1 -p {PHONE} -i 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;方式二: 自建镜像&lt;/h5&gt; &#xA;&lt;p&gt;&lt;strong&gt;前提条件:&lt;/strong&gt; 请确保当前环境已安装 &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;构建镜像&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t whalefell/smsboom .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;尝试运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm whalefell/smsboom:latest --help&#xA;&#xA;Usage: smsboom.py [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;Options:&#xA;  --help  Show this message and exit.&#xA;&#xA;Commands:&#xA;  asyncrun  以最快的方式请求接口(真异步百万并发)&#xA;  onerun    单线程(测试使用)&#xA;  run       传入线程数和手机号启动轰炸,支持多手机号&#xA;  update    从 github 获取最新接口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;运行&lt;/h4&gt; &#xA;&lt;p&gt;若使用虚拟环境,请先激活. &lt;code&gt;pipenv shell&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 输出帮助信息&#xA;python smsboom.py --help&#xA;&#xA;Usage: smsboom.py [OPTIONS] COMMAND [ARGS]...    &#xA;Options:&#xA;--help  Show this message and exit.&#xA;Commands:&#xA;run     传入线程数和手机号启动轰//炸,支持多手机号&#xA;update  从 github 获取最新接口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;启动轰//炸&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;帮助信息:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run --help&#xA;&#xA;Usage: smsboom.py run [OPTIONS]&#xA;&#xA;传入线程数和手机号启动轰//炸,支持多手机号&#xA;&#xA;Options:&#xA;-t, --thread INTEGER       线程数(默认64)&#xA;-p, --phone TEXT           手机号,可传入多个再使用-p传递  [required]&#xA;-f, --frequency INTEGER    执行次数(默认1次)&#xA;-i, --interval INTEGER     间隔时间(默认60s)&#xA;-e, --enable_proxy BOOLEAN 开启代理(默认关闭)&#xA;--help                     Show this message and exit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用代理&lt;/h3&gt; &#xA;&lt;p&gt;本项目不能通过API自动获取代理, 你可以从下面的免费代理网站中手动获取代理, 或是选择使用自己的代理, 或是不使用代理.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://proxyscrape.com/free-proxy-list&#34;&gt;https://proxyscrape.com/free-proxy-list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://openproxy.space/list&#34;&gt;https://openproxy.space/list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;将代理添加到 &lt;code&gt;http_proxy.txt&lt;/code&gt; &lt;code&gt;socks4_proxy.txt&lt;/code&gt; &lt;code&gt;socks5_proxy.txt&lt;/code&gt; 三个文件中, 命令参数添加 &lt;code&gt;-e&lt;/code&gt; 执行即可.&lt;/p&gt; &#xA;&lt;h3&gt;命令示例&lt;/h3&gt; &#xA;&lt;p&gt;启动64个线程,轰//炸一个人的手机号(198xxxxxxxx),只轰//炸一波。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run -t 64 -p 198xxxxxxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动64个线程,轰//炸一个人的手机号(198xxxxxxxx),启动循环轰//炸, 轮番轰//炸60次&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run -t 64 -p 198xxxxxxxx -f 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动64个线程,轰//炸一个人的手机号(198xxxxxxxx),启动循环轰//炸, 轮番轰//炸60次, 每次间隔30秒&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run -t 64 -p 198xxxxxxxx -f 60 -i 30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动64个线程,轰//炸一个人的手机号(198xxxxxxxx),启动循环轰//炸, 轮番轰//炸60次, 每次间隔30秒, 开启代理列表进行轰炸&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run -t 64 -p 198xxxxxxxx -f 60 -i 30 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动64个线程,轰//炸多个人的手机号(198xxxxxxxx,199xxxxxxxx),启动循环轰//炸, 轮番轰炸60次, 每次间隔30秒, 开启代理列表进行轰炸&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python smsboom.py run -t 64 -p 198xxxxxxxx -p 199xxxxxxxx -f 60 -i 30 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;程序提供接口调试工具，但目前还不完善，欢迎前端大佬 PR。&lt;br&gt; 调试工具以 &lt;code&gt;Flask&lt;/code&gt; 为后端，&lt;code&gt;vue&lt;/code&gt; 为前端，实现前后端分离。&lt;br&gt; 目前只有测试接口，添加接口的功能。&lt;/p&gt; &#xA;&lt;h3&gt;Flask 前端调试&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;前提是已经根据前文 Quick Start 的方式安装好 pipenv 环境&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pipenv shell # 激活虚拟环境&#xA;python run_flask_app.py start -p 9090 # 监听9090端口&#xA;提示ModuleNotFoundError: No module named &#39;xxx&#39; 可使用pip install model_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;运行帮助:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Usage: run_flask_app.py [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;Options:&#xA;  --help  Show this message and exit.&#xA;&#xA;Commands:&#xA;  init         初始化数据库&#xA;  json2sqlite  将json数据转为sqlite数据库&#xA;  sqlite2json  将sqlite数据转为json&#xA;  start        启动 flask app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Usage: run_flask_app.py start [OPTIONS]&#xA;&#xA;  启动 flask app&#xA;&#xA;Options:&#xA;  -h, --host TEXT     监听地址&#xA;  -p, --port INTEGER  监听端口&#xA;  --help              Show this message and exit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;默认监听 &lt;em&gt;0.0.0.0:9090&lt;/em&gt; 地址,浏览器访问&lt;a href=&#34;http://127.0.0.1:9090/admin/&#34;&gt;http://127.0.0.1:9090/admin/&lt;/a&gt;若无意外,就可以出现前端调试界面。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEthan/SMSBoom/master/img/webui-test.png&#34; alt=&#34;&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenEthan/SMSBoom/master/img/webui-test-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://afdian.net/@smsboom&#34;&gt;爱发电🔗&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;赞助的金额将用于我每月治疗 &lt;strong&gt;抑/郁症&lt;/strong&gt; 的支出.谢谢大家的支持和鼓励! &lt;strong&gt;比心ing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Star ♥ 趋势图&lt;/h2&gt; &#xA;&lt;img src=&#34;https://starchart.cc/OpenEthan/smsboom.svg?sanitize=true&#34;&gt; &#xA;&lt;h2&gt;✨讨论&lt;/h2&gt; &#xA;&lt;p&gt;欢迎加入讨论对项目提出问题和建议！！！mua!&lt;/p&gt; &#xA;&lt;h3&gt;企鹅🐧群&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;企鹅群不允许讨论相关敏感信息!违者上飞机票✈&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;2022/7/6 停止运作.&lt;/p&gt; &#xA;&lt;h3&gt;Telegram Channel (TG群组)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;涉及敏/感信息,政/治,民/主运动话题请到 &lt;strong&gt;TG群聊&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/SMSBoomPr&#34;&gt;SMSBoomPr&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ainfosec/FISSURE</title>
    <updated>2022-08-30T01:31:42Z</updated>
    <id>tag:github.com,2022-08-30:/ainfosec/FISSURE</id>
    <link href="https://github.com/ainfosec/FISSURE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The RF and reverse engineering framework for everyone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FISSURE - The RF Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Frequency Independent SDR-based Signal Understanding and Reverse Engineering&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;FISSURE is an open-source RF and reverse engineering framework designed for all skill levels with hooks for signal detection and classification, protocol discovery, attack execution, IQ manipulation, vulnerability analysis, automation, and AI/ML. The framework was built to promote the rapid integration of software modules, radios, protocols, signal data, scripts, flow graphs, reference material, and third-party tools. FISSURE is a workflow enabler that keeps software in one location and allows teams to effortlessly get up to speed while sharing the same proven baseline configuration for specific Linux distributions.&lt;/p&gt; &#xA;&lt;p&gt;The framework and tools included with FISSURE are designed to detect the presence of RF energy, understand the characteristics of a signal, collect and analyze samples, develop transmit and/or injection techniques, and craft custom payloads or messages. FISSURE contains a growing library of protocol and signal information to assist in identification, packet crafting, and fuzzing. Online archive capabilities exist to download signal files and build playlists to simulate traffic and test systems.&lt;/p&gt; &#xA;&lt;p&gt;The friendly Python codebase and user interface allows beginners to quickly learn about popular tools and techniques involving RF and reverse engineering. Educators in cybersecurity and engineering can take advantage of the built-in material or utilize the framework to demonstrate their own real-world applications. Developers and researchers can use FISSURE for their daily tasks or to expose their cutting-edge solutions to a wider audience. As awareness and usage of FISSURE grows in the community, so will the extent of its capabilities and the breadth of the technology it encompasses.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are two branches within FISSURE to make file navigation easier and reduce code redundancy. The Python2_maint-3.7 branch contains a codebase built around Python2, PyQt4, and GNU Radio 3.7; while the Python3_maint-3.8 branch is built around Python3, PyQt5, and GNU Radio 3.8.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Operating System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FISSURE Branch&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04.5 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04.6 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 20.04.1 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 20.04.4 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;In-Progress (beta)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;These operating systems are still in beta status. They are under development and several features are known to be missing. Several items in the installer might conflict with existing programs or fail to install until the status is removed.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Operating System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FISSURE Branch&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DragonOS Focal (x86_64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 22.04 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Certain software tools do not work for every OS. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Help/Markdown/SoftwareAndConflicts.md&#34;&gt;Software And Conflicts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ainfosec/fissure.git&#xA;cd FISSURE&#xA;git checkout &amp;lt;Python2_maint-3.7&amp;gt; or &amp;lt;Python3_maint-3.8&amp;gt;&#xA;./install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install PyQt software dependencies required to launch the installation GUIs if they are not found.&lt;/p&gt; &#xA;&lt;p&gt;Next, select the option that best matches your operating system (should be detected automatically if your OS matches an option).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install1b.png&#34; alt=&#34;install1b&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install1a.png&#34; alt=&#34;install1a&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;It is recommended to install FISSURE on a clean operating system to avoid existing conflicts. Select all the recommended checkboxes (Default button) to avoid errors while operating the various tools within FISSURE. There will be multiple prompts throughout the installation, mostly asking for elevated permissions and user names. If an item contains a &#34;Verify&#34; section at the end, the installer will run the command that follows and highlight the checkbox item green or red depending on if any errors are produced by the command. Checked items without a &#34;Verify&#34; section will remain black following the installation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install2.png&#34; alt=&#34;install2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fissure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the FISSURE Help menu for more details on usage.&lt;/p&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dashboard&lt;/li&gt; &#xA; &lt;li&gt;Central Hub (HIPRFISR)&lt;/li&gt; &#xA; &lt;li&gt;Target Signal Identification (TSI)&lt;/li&gt; &#xA; &lt;li&gt;Protocol Discovery (PD)&lt;/li&gt; &#xA; &lt;li&gt;Flow Graph &amp;amp; Script Executor (FGE)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/components.png&#34; alt=&#34;components&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Capabilities&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;padding:10px&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/detector.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Detector&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/iq.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;IQ Manipulation&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/library.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Lookup&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/pd.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Pattern Recognition&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/attack.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Attacks&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/fuzzing.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Fuzzing&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/archive.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Playlists&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/gallery.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Image Gallery&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/packet.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Packet Crafting&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/scapy.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Scapy Integration&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/crc_calculator.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;CRC Calculator&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/log.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Logging&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Lessons&lt;/h2&gt; &#xA;&lt;p&gt;FISSURE comes with several helpful guides to become familiar with different technologies and techniques. Many include steps for using various tools that are integrated into FISSURE.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lesson1: OpenBTS&lt;/li&gt; &#xA; &lt;li&gt;Lesson2: Lua Dissectors&lt;/li&gt; &#xA; &lt;li&gt;Lesson3: Sound eXchange&lt;/li&gt; &#xA; &lt;li&gt;Lesson4: ESP Boards&lt;/li&gt; &#xA; &lt;li&gt;Lesson5: Radiosonde Tracking&lt;/li&gt; &#xA; &lt;li&gt;Lesson6: RFID&lt;/li&gt; &#xA; &lt;li&gt;Lesson7: Data Types&lt;/li&gt; &#xA; &lt;li&gt;Lesson8: Custom GNU Radio Blocks&lt;/li&gt; &#xA; &lt;li&gt;Lesson9: TPMS&lt;/li&gt; &#xA; &lt;li&gt;Lesson10: Ham Radio Exams&lt;/li&gt; &#xA; &lt;li&gt;Lesson11: Wi-Fi Tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add more hardware types, RF protocols, signal parameters, analysis tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support more operating systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create a signal conditioner, feature extractor, and signal classifier with selectable AI/ML techniques&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Develop class material around FISSURE (RF Attacks, Wi-Fi, GNU Radio, PyQt, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Transition the main FISSURE components to a generic sensor node deployment scheme&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Suggestions for improving FISSURE are strongly encouraged. Leave a comment in the &lt;a href=&#34;https://github.com/ainfosec/FISSURE/discussions&#34;&gt;Discussions&lt;/a&gt; page if you have any thoughts regarding the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New feature suggestions and design changes&lt;/li&gt; &#xA; &lt;li&gt;Software tools with installation steps&lt;/li&gt; &#xA; &lt;li&gt;New lessons or additional material for existing lessons&lt;/li&gt; &#xA; &lt;li&gt;RF protocols of interest&lt;/li&gt; &#xA; &lt;li&gt;More hardware and SDR types for integration&lt;/li&gt; &#xA; &lt;li&gt;IQ analysis scripts in Python&lt;/li&gt; &#xA; &lt;li&gt;Installation corrections and improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions to improve FISSURE are crucial to expediting its development. Any contributions you make are greatly appreciated. If you wish to contribute through code development, please fork the repo and create a pull request:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the project&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Creating &lt;a href=&#34;https://github.com/ainfosec/FISSURE/issues&#34;&gt;Issues&lt;/a&gt; to bring attention to bugs is also welcomed.&lt;/p&gt; &#xA;&lt;h2&gt;Collaborating&lt;/h2&gt; &#xA;&lt;p&gt;Contact Assured Information Security, Inc. (AIS) Business Development to propose and formalize any FISSURE collaboration opportunities–whether that is through dedicating time towards integrating your software, having the talented people at AIS develop solutions for your technical challenges, or integrating FISSURE into other platforms/applications.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL-3.0&lt;/p&gt; &#xA;&lt;p&gt;For license details, see LICENSE file.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Follow on Twitter: &lt;a href=&#34;https://twitter.com/fissurerf&#34;&gt;@FissureRF&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/ainfosec&#34;&gt;@AinfoSec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chris Poore - Assured Information Security, Inc. - &lt;a href=&#34;mailto:poorec@ainfosec.com&#34;&gt;poorec@ainfosec.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Business Development - Assured Information Security, Inc. - &lt;a href=&#34;mailto:bd@ainfosec.com&#34;&gt;bd@ainfosec.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;We acknowledge and are grateful to these developers:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/CREDITS.md&#34;&gt;Credits&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to Dr. Samuel Mantravadi and Joseph Reith for their contributions to this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>breck7/pldb</title>
    <updated>2022-08-30T01:31:42Z</updated>
    <id>tag:github.com,2022-08-30:/breck7/pldb</id>
    <link href="https://github.com/breck7/pldb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PLDB: a Programming Language Database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PLDB: a Programming Language Database&lt;/h1&gt; &#xA;&lt;p&gt;PLDB is a public domain database and blog containing over 100,000 facts about over 4,000 programming languages.&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the entire database, blog, and code for &lt;a href=&#34;https://pldb.com&#34;&gt;https://pldb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To analyze the data&lt;/h2&gt; &#xA;&lt;p&gt;The PLDB database is freely available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As CSV: &lt;a href=&#34;https://pldb.com/pldb.csv&#34;&gt;https://pldb.com/pldb.csv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;As JSON: &lt;a href=&#34;https://pldb.com/pldb.json&#34;&gt;https://pldb.com/pldb.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The JSON file is also available via npm:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;// npm install pldb&#xA;console.log(require(&#34;pldb&#34;).javascript.appeared)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Documentation for the columns is available here: &lt;a href=&#34;https://pldb.com/docs/columns.html&#34;&gt;https://pldb.com/docs/columns.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To add a new language&lt;/h2&gt; &#xA;&lt;p&gt;Easy method: &lt;a href=&#34;https://edit.pldb.com/create&#34;&gt;https://edit.pldb.com/create&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Advanced method: Create a new file in &lt;code&gt;database/things&lt;/code&gt; with a unique URL friendly filename ending in &lt;code&gt;.pldb&lt;/code&gt; and send a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;To update a language&lt;/h2&gt; &#xA;&lt;p&gt;Easy method: &lt;a href=&#34;https://edit.pldb.com/&#34;&gt;https://edit.pldb.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Advanced method: Edit the corresponding &lt;code&gt;database/things/*.pldb&lt;/code&gt; file and send a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;To build the full site locally&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/breck7/pldb&#xA;cd pldb&#xA;npm install .&#xA;npm run build&#xA;open pldb.local/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;To explore this repo&lt;/h2&gt; &#xA;&lt;p&gt;The most important folder is &lt;code&gt;database/things/&lt;/code&gt;, which contains a file for each entity. The folder &lt;code&gt;database/grammar/&lt;/code&gt; contains the grammar files (schema) for the database.&lt;/p&gt; &#xA;&lt;p&gt;The blog content is in the &lt;code&gt;blog&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;code&lt;/code&gt; folder contains importer scripts and other code for the database and site.&lt;/p&gt; &#xA;&lt;h2&gt;To cite PLDB&lt;/h2&gt; &#xA;&lt;p&gt;PLDB content is published to the public domain and you can use it freely. If needed, here are 3 options for citing PLDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://pldb.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Breck Yunits et al. (2022) - &#34;PLDB: a Programming Language Database&#34;. Retrieved from: &#39;https://pldb.com&#39; [Online Resource]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{pldb,&#xA;  author = {Breck Yunits et al.},&#xA;  title = {PLDB: a Programming Language Database},&#xA;  journal = {PLDB},&#xA;  year = {2022},&#xA;  note = {https://pldb.com}&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All sources for PLDB can be found here: &lt;a href=&#34;https://pldb.com/pages/acknowledgements.html&#34;&gt;https://pldb.com/pages/acknowledgements.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>