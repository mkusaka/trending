<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-25T01:27:05Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cxli233/FriendsDontLetFriends</title>
    <updated>2024-01-25T01:27:05Z</updated>
    <id>tag:github.com,2024-01-25:/cxli233/FriendsDontLetFriends</id>
    <link href="https://github.com/cxli233/FriendsDontLetFriends" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Friends don&#39;t let friends make certain types of data visualization - What are they and why are they bad.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friends Don&#39;t Let Friends Make Bad Graphs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.5281/zenodo.7542491&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.7542491.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Friends don&#39;t let friends make certain types of data visualization - What are they and why are they bad.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Author: Chenxin Li, postdoctoral associate at Center for Applied Genetic Technologies, University of Georgia.&lt;/li&gt; &#xA; &lt;li&gt;Contact: &lt;a href=&#34;https://raw.githubusercontent.com/cxli233/FriendsDontLetFriends/main/Chenxin.Li@uga.edu&#34;&gt;Chenxin.Li@uga.edu&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/ChenxinLi2&#34;&gt;@ChenxinLi2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is an &lt;em&gt;opinionated&lt;/em&gt; essay about good and bad practices in data visualization. Examples and explanations are below.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Scripts/&lt;/code&gt; directory contains &lt;code&gt;.Rmd&lt;/code&gt; files that generate the graphics shown below. It requires R, RStudio, and the rmarkdown package.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R: &lt;a href=&#34;https://cran.r-project.org/bin/&#34;&gt;R Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RStudio: &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;rmarkdown can be installed using the install packages interface in RStudio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#1-friends-dont-let-friends-make-bar-plots-for-means-separation&#34;&gt;Friends Don&#39;t Let Friends Make Bar Plots For Mean Separation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#2-friends-dont-let-friends-make-violin-plots-for-small-sample-sizes&#34;&gt;Friends Don&#39;t Let Friends Make Violin Plots for Small Sample Sizes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#3-friends-dont-let-friends-use-bidirectional-color-scales-for-unidirectional-data&#34;&gt;Friends Don&#39;t Let Friends Use Bidirectional Color Scales for Unidirectional Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#4-friends-dont-let-friends-make-bar-plot-meadow&#34;&gt;Friends Don&#39;t Let Friends Make Bar Plot Meadow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#5-friends-dont-let-friends-make-heatmap-without-considering-reordering-rows--columns&#34;&gt;Friends Don&#39;t Let Friends Make Heatmap without Reordering Rows &amp;amp; Columns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#6-friends-dont-let-friends-make-heatmap-without-checking-outliers&#34;&gt;Friends Don&#39;t Let Friends Make Heatmap without Checking Outliers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#7-friends-dont-let-friends-forget-to-check-data-range-at-each-factor-level&#34;&gt;Friends Don&#39;t Let Friends Forget to Check Data Range at Each Factor Level&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#8-friends-dont-let-friends-make-network-graphs-without-trying-different-layouts&#34;&gt;Friends Don&#39;t Let Friends Make Network Graphs without Trying Different Layouts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#9-friends-dont-let-friends-confuse-position-based-visualizations-with-length-based-visualizations&#34;&gt;Friends Don&#39;t Let Friends Confuse Position and Length Based Visualizations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#10-friends-dont-let-friends-make-pie-chart&#34;&gt;Friends Don&#39;t Let Friends Make Pie Charts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#11-friends-dont-let-friends-make-concentric-donuts&#34;&gt;Friends Don&#39;t Let Friends Make Concentric Donuts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends#12-friends-dont-let-friends-use-redgreen-and-rainbow-color-scales&#34;&gt;Friends Don&#39;t Let Friends Use Red/green and Rainbow for Color Scales&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/tree/main#13-friends-dont-let-friends-forget-to-reorder-stacked-bar-plot&#34;&gt;Friends Don&#39;t Let Friends Forget to Reorder Stacked Bar Plot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/tree/main#14-friends-dont-let-friends-mix-stacked-bars-and-mean-separation&#34;&gt;Friends Don&#39;t Let Friends Mix Stacked Bars and Mean separation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;1. Friends Don&#39;t Let Friends Make Bar Plots for Means Separation&lt;/h1&gt; &#xA;&lt;p&gt;This has to be the first one. Means separation plots are some of the most common in scientific publications. We have two or more groups, which contains multiple observations; they may have different means, variances, and distributions. The task of the visualization is to show the means and the spread (dispersion) of the data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/dont_bar_plot.png&#34; alt=&#34;No Bar Plots for Means Separation&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, two groups have similar means and standard deviations, but quite different distributions. &lt;strong&gt;Are they really &#34;the same&#34;?&lt;/strong&gt; Just don&#39;t use bar plot for means separation, or at least check a couple things before settling down on a bar plot.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s worth mentioning that I was inspired by many researchers who have tweeted on the limitation of bar graphs. Here is a publication: &lt;a href=&#34;https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1002128&#34;&gt;Weissgerber et al., 2015, PLOS Biology&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;2. Friends Don&#39;t Let Friends Make Violin Plots for Small Sample Sizes&lt;/h1&gt; &#xA;&lt;p&gt;This is quite common in the literature as well, but unfortunately, violin plots (or any sort of smoothed distribution curves) make no sense for small n.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Beware_of_small_n_box_violin_plot.png&#34; alt=&#34;Beware of Violin Plots for Small Sample Sizes&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Distributions and quartiles can vary widely with small n, even if the underlying observations are similar. Distribution and quartiles are only meaningful with large n. I did an experiment before, where I sampled the &lt;em&gt;same&lt;/em&gt; normal distribution several times and computed the quartiles for each sample. The quartiles only stablize when n gets larger than 50.&lt;/p&gt; &#xA;&lt;h1&gt;3. Friends Don&#39;t Let Friends Use Bidirectional Color Scales for Unidirectional Data&lt;/h1&gt; &#xA;&lt;p&gt;Excuse my language, but this is a truly data visualization sin, and again quite common. I can understand why this error is common, because it appears that many of us have not spent a lot of thoughts on this issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/ColorScales.svg?sanitize=true&#34; alt=&#34;Are You Using the Right Color Scale for Your Data?&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Color scales are pretty, but we have to be extra careful. When color scales (or color gradients) are used to represent numerical data, the darkest and lightest colors should have special meanings. You can decide what those special meanings are: e.g., max, min, mean, zero. But they should represent something meaningful. A data visualization sin for heat maps/color gradients is when the lightest or darkest colors are some arbitrary numbers. &lt;em&gt;This is as bad as the longest bar in a bar chart not being the largest value.&lt;/em&gt; Can you imagine that?&lt;/p&gt; &#xA;&lt;h1&gt;4. Friends Don&#39;t Let Friends Make Bar Plot Meadow&lt;/h1&gt; &#xA;&lt;p&gt;We talked about no bar charts for mean separation, but this is a different issue. It has to do with presenting results of a multi-factorial experiment. Bar plot meadows are very common in scientific publications and unfortunately also &lt;em&gt;ineffective&lt;/em&gt; in communicating the results.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/AvoidBarPlotMeadow.png&#34; alt=&#34;Horrendous Giant Bar Plot vs. Better Designed Plot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Data from: &lt;a href=&#34;https://link.springer.com/article/10.1186/s12870-020-2243-7&#34;&gt;Matand et al., 2020, BMC Plant Biology&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bar plot meadows are common because multi-factorial experiments are common. However, a bar plot meadow is poorly designed for its purpose. To communicate results of a multi-factorial experiment, it requires thoughtful designs regarding grouping/faceting by factors of interest.&lt;/p&gt; &#xA;&lt;p&gt;In this example, I focus on comparing the effect of &lt;code&gt;Treatment&lt;/code&gt; &amp;amp; &lt;code&gt;Explant&lt;/code&gt; on &lt;code&gt;Response&lt;/code&gt; at the level of each &lt;code&gt;Variety&lt;/code&gt;. However, if the focus is the effect of &lt;code&gt;Treatment&lt;/code&gt; &amp;amp; &lt;code&gt;Variety&lt;/code&gt; on &lt;code&gt;Response&lt;/code&gt; at the level of each &lt;code&gt;Exaplant&lt;/code&gt;, then it will require a different layout.&lt;/p&gt; &#xA;&lt;h1&gt;5. Friends Don&#39;t Let Friends Make Heatmap without (Considering) Reordering Rows &amp;amp; Columns&lt;/h1&gt; &#xA;&lt;p&gt;Heatmaps are very common in scientific publications, and &lt;em&gt;very very&lt;/em&gt; common in omics papers. However, for heatmaps to be effective, we have to consider the ordering of rows &amp;amp; columns.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Reorder_rows_and_columns_for_heatmap.png&#34; alt=&#34;A Heatmap before and after reordering rows and columns&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, I have cells as columns and features as rows. Grids are showing z scores. It is impossible to get anything useful out of the heatmap without reordering rows and columns. We can reorder rows and columns using clustering, but that is not the only way. Of course, if the rows and columns are mapping to physical entities (rows and columns of a 96-well plate), then you can&#39;t reorder them. But it is a very good idea to at least consider reordering rows and columns.&lt;/p&gt; &#xA;&lt;p&gt;Data from: &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2022.07.04.498697v1&#34;&gt;Li et al., 2022, BioRxiv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bonus: heatmaps can be very pretty&lt;/h2&gt; &#xA;&lt;p&gt;...if you are good are reordering rows/columns and choosing color gradients. Here is an example &#34;abstract aRt&#34; generated from simulated data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Abstract_R_2022_11_24.svg?sanitize=true&#34; alt=&#34;aRt with Heatmap&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;R code for this aRt piece can be found &lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Scripts/Abstract_aRt.R&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a tutorial on how to reorder rows and columns of a heatmap, see this &lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Heatmap_tutorial.md&#34;&gt;markdown file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;6. Friends Don&#39;t Let Friends Make Heatmap without Checking Outliers&lt;/h1&gt; &#xA;&lt;p&gt;Outliers in heatmap can really change how we perceive and interpret the visualization. This generalizes to all sort of visualizations that use colors to represent numeric data. Let me show you an example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Check_outliers_for_heatmap.svg?sanitize=true&#34; alt=&#34;Did you check outliers&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, I have 2 observations. For each observations, I measured 20 features. Without checking for outliers, it may appear that the 2 observations are overall similar, except at 2 features. However, after maxing out the color scale around 95th percentile of the data, it reveals that the two observations are distinct across all features.&lt;/p&gt; &#xA;&lt;h1&gt;7. Friends Don&#39;t Let Friends Forget to Check Data Range at Each Factor Level&lt;/h1&gt; &#xA;&lt;p&gt;This is a common issue that many of us have encountered. In a multifactor experiment, sometimes the range of the response variable changes widely between different factor levels.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Check_range_at_factor_level.svg?sanitize=true&#34; alt=&#34;Did you check data range at each factor level&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This hypothetical experiment measured 3 compounds across 2 groups (control vs. treatment). Without checking data range for each compound, you will likely have missed that the treatment had a strong effect on compound 1. This is because the concentration of compound 1 has a much narrower range than the other compounds in this experiment.&lt;/p&gt; &#xA;&lt;h1&gt;8. Friends Don&#39;t Let Friends Make Network Graphs without Trying Different Layouts&lt;/h1&gt; &#xA;&lt;p&gt;Network graphs are common in scientific publications. They are super useful in presenting relationship data. However, the appearance (not the topology) of the network can make a huge difference in determining if a network graph is effective.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/TryDifferentLayouts.svg?sanitize=true&#34; alt=&#34;Try different network layouts&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Layouts can drastically change the appearance of networks, making them easier or harder to interpret. Here are 3 network graphs from the same data. They look very different from each other. Data from: &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2022.07.04.498697v1&#34;&gt;Li et al., 2022, BioRxiv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;9. Friends Don&#39;t Let Friends Confuse Position-based Visualizations with Length-based Visualizations&lt;/h1&gt; &#xA;&lt;p&gt;This is always the elephant in the room and the essence of many misleading visualizations. In this example, I measured a response variable across 3 time points. Two of the following graphs are fine, but one of them is a data visualization crime. Can you see why?&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Position_and_length_based_visualizations.svg?sanitize=true&#34; alt=&#34;Position vs. length based visualizations&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In dot and line plots, values are represented by positions along the x and y axis. The same idea applies to other position based visualizations, such as box plots. In bar plots, values are represented by the distance from the x axis, and thus the length of the bar.&lt;/p&gt; &#xA;&lt;p&gt;The 3rd graph is not 0-based, which makes the bar length at time point 2 about 3x longer than that at time point 1. In fact, the true difference in means is closer to 1.6x. I hope you can see how confusing length and position based visualizations can lead to misleading graphs.&lt;/p&gt; &#xA;&lt;h2&gt;Watch out for bar plots with broken axis&lt;/h2&gt; &#xA;&lt;p&gt;Broken axis may be useful for depicting data across a wide range of numeric values. (Alternatively, log scaled axis can be used instead.) Broken axis are fine for position based graphics, because the data are represented by positions along the axis. However, we must be very careful with bar plots that have broken axis. Here is an example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Broken_axis.svg?sanitize=true&#34; alt=&#34;Broken axis&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, two graphs (left vs. right) are showing the same data. However, by changing where the axis is broken, one can make certain bars looks longer or shorter. In this example, the length of bar &#34;d&#34; can look &lt;em&gt;really&lt;/em&gt; different. The illusion of bar &#34;d&#34; being very short on the right graph boils down to bar plot being a length based graphics, not a position based graphics.&lt;/p&gt; &#xA;&lt;p&gt;Example R code for broken axis can be found &lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Scripts/Broken_axis.R&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;10. Friends Don&#39;t Let Friends Make Pie Chart&lt;/h1&gt; &#xA;&lt;p&gt;Pie chart is a common type of visualization for fractional data, where fractions add up to 100%. This is achieved by dividing a circle into sectors, and the sectors add up to a full circle. Pie charts have been criticized, because human are much worse in reading angles and area than reading lengths. Here is a &lt;a href=&#34;https://www.data-to-viz.com/caveat/pie.html&#34;&gt;blog post&lt;/a&gt; that explores that.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/dont_pie_chart.svg?sanitize=true&#34; alt=&#34;Don&#39;t make pie charts&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, we have two groups, each contains 4 sub-categories. In classic pie charts, the angles (and thus arc lengths &amp;amp; sector area) represent the data. The problem is that it is &lt;em&gt;very&lt;/em&gt; difficult to compare between groups. We can visually simplify the pie chart into donut charts, where the data are now represented by arc lengths. However, if we want to use lengths to represent the data, why don&#39;t we just unwrap the donut and make stacked bars? In stacked bar graphs, bars are shown side-by-side and thus easier to compare across groups.&lt;/p&gt; &#xA;&lt;p&gt;Fun fact: the scripts underlying stacked bars are much simpler than those underlying the pie charts and donut charts. If you want to produce sub-optimal graph types with ggplot, you actually have to work extra hard.&lt;/p&gt; &#xA;&lt;h1&gt;11. Friends Don&#39;t Let Friends Make Concentric Donuts&lt;/h1&gt; &#xA;&lt;p&gt;In this example, we have 3 groups, each of which contains two sub-categories (Type I or Type II).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/dont_concentric_donuts.svg?sanitize=true&#34; alt=&#34;Don&#39;t make concentric donuts&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In concentric donuts, you might be tempted to say the data are represented by the arc lengths, which is in fact &lt;strong&gt;inaccurate&lt;/strong&gt;. The arc lengths on the outer rings are much longer than those in the inner rings. Group 2 and Group 3 have the same exact values, but the arc lengths of Group 3 are much longer. In fact the data are represented by the &lt;em&gt;arc angles&lt;/em&gt;, which we are bad at reading.&lt;/p&gt; &#xA;&lt;p&gt;Since outer rings are longer, the ordering of the groups (which group goes to which ring) has a big impact on the impression of the plot. It can lead to the apparent paradox where larger values have shorter arcs. The better (and simpler!) alternative is just unwrap the donuts and make a good old stacked bar plot. BTW, this is also my main issue with &lt;a href=&#34;http://circos.ca/&#34;&gt;circos plots&lt;/a&gt; and other circular plot layouts.&lt;/p&gt; &#xA;&lt;h1&gt;12. Friends Don&#39;t Let Friends Use Red/Green and Rainbow color scales&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Color_blind_grey_scale_safe_heatmap.svg?sanitize=true&#34; alt=&#34;are you making a &amp;quot;safe&amp;quot; heatmap?&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Deuteranomaly is the most common type of red/green colorblindness, occurring in 1/16 male and 1/256 female. Any color scales that use shades of red and shades of green in the same time would be a problem for a person with red/green colorblindness (third column of the figure). In addition, red/green and rainbow do not preserve information well at all when printed on black/white (grey scale, second column in figure). Many scientific software still use red/green or rainbow as the default color scales, which drives me crazy. More &#34;modern&#34; color scales, such as &lt;a href=&#34;https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html&#34;&gt;viridis&lt;/a&gt; are both colorblind-friendly and grey scale-safe (third row of figure). And they look nice too.&lt;/p&gt; &#xA;&lt;h1&gt;13. Friends Don&#39;t Let Friends Forget to Reorder Stacked Bar Plot&lt;/h1&gt; &#xA;&lt;p&gt;Stacked bar plots are useful for visualizing proportion data. Stacked bar plots are commonly used to visualize community structure or population structure or admixture analysis. This kind of visualization boils down to a collection of samples, where each sample contains multiple classes of members. However, when we have many samples and many classes, stacked bar plots need to be optimized to be effective. And by &#34;optimize&#34; I mean the grouping and ordering of samples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/Reorder_stacked_bars.png&#34; alt=&#34;Reorder your stacked bars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here we have an example data with 100 samples and 8 classes of member. Due to the number of samples and classes, it is very hard to discern anything from this graph without optimizing the order of bars. What the heck am I looking at? After reordering the bars, &lt;strong&gt;wow&lt;/strong&gt;, that really made a difference, don&#39;t you think? For a tutorial on how to optimize a stack bar plot, see &lt;a href=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Scripts/stacked_bars_optimization.Rmd&#34;&gt;this script&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;14. Friends Don&#39;t Let Friends Mix Stacked Bars and Mean separation&lt;/h1&gt; &#xA;&lt;p&gt;Sometimes a visualization gets confusing and ineffective when it tries to too many things at once. One such example is mixing stacked bar plots and mean separation plots. One displays proportional data adding up to 100%, the other displays the difference in means and dispersion around means. These are very distinct tasks in data visualization.&lt;/p&gt; &#xA;&lt;p&gt;In this hypothetical experiment, we had blueberry plants assigned to two groups. One group was the control; the other was treated with a chemical to make fruit development faster. Each group had 5 plants. The response of the treatment was divided into 3 categories: light green fruits, light blue fruits, and dark blue fruits. 100 fruits from each plant were examined and the number of fruits in each category was counted. The percentage of fruits in each category was calculated and reported. The question of the study is: did the chemical treatment work?&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cxli233/FriendsDontLetFriends/raw/main/Results/stacked_bar_vs_jitter.png&#34; alt=&#34;Don&#39;t mix stacked bar plots with mean separation plots&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The first stacked bar plot is fine as the standard way to visualize proportion data. It is clear that all categories add up to 100%, and the chemical treatment strongly shifted the color profile towards the most developed stage (dark blue).&lt;/p&gt; &#xA;&lt;p&gt;The middle stacked bar plot is problematic, mainly because it is trying to do two distinct data visualization tasks at once. When error bars and dots are overlaid onto the stacked bars, it become unclear which error bars and dots are being compared. Due to the nature of stacked bars, the error bars and dots of the upper stacks have to be shifted upwards, and thus interpretation of the y-axis for error bars and dots become not straightforward.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if the main point of the visualization is mean separation and dispersion around the mean, the third graph is the better choice. There is no ambiguity on which comparisons are being made. As shown in the first stacked bar plot, the chemical treatment strongly increases the proportion of dark blue fruits, at the expense of lighter color fruits.&lt;/p&gt; &#xA;&lt;h1&gt;Conclusion (?)&lt;/h1&gt; &#xA;&lt;p&gt;That&#39;s it for now. I will update this when I have the time (and inspirations) to produce more examples. Not sure what the next one will be, but stay tuned!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LiheYoung/Depth-Anything</title>
    <updated>2024-01-25T01:27:05Z</updated>
    <id>tag:github.com,2024-01-25:/LiheYoung/Depth-Anything</id>
    <link href="https://github.com/LiheYoung/Depth-Anything" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depth Anything: Unleashing the Power of Large-Scale Unlabeled Data&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;Depth Anything: Unleashing the Power of Large-Scale Unlabeled Data&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://liheyoung.github.io/&#34;&gt;&lt;strong&gt;Lihe Yang&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; · &lt;a href=&#34;https://scholar.google.com/citations?user=NmHgX-wAAAAJ&#34;&gt;&lt;strong&gt;Bingyi Kang&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;2+&lt;/sup&gt; · &lt;a href=&#34;http://speedinghzl.github.io/&#34;&gt;&lt;strong&gt;Zilong Huang&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; · &lt;a href=&#34;https://xiaogang00.github.io/&#34;&gt;&lt;strong&gt;Xiaogang Xu&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;3,4&lt;/sup&gt; · &lt;a href=&#34;https://sites.google.com/site/jshfeng/&#34;&gt;&lt;strong&gt;Jiashi Feng&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; · &lt;a href=&#34;https://hszhao.github.io/&#34;&gt;&lt;strong&gt;Hengshuang Zhao&lt;/strong&gt;&lt;/a&gt;&lt;sup&gt;1+&lt;/sup&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;The University of Hong Kong · &lt;sup&gt;2&lt;/sup&gt;TikTok · &lt;sup&gt;3&lt;/sup&gt;Zhejiang Lab · &lt;sup&gt;4&lt;/sup&gt;Zhejiang University&lt;/p&gt; &#xA; &lt;p&gt;&lt;sup&gt;+&lt;/sup&gt;corresponding authors&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2401.10891&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Depth Anything-red&#34; alt=&#34;Paper PDF&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://depth-anything.github.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project_Page-Depth Anything-green&#34; alt=&#34;Project Page&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/LiheYoung/Depth-Anything&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/papers/2401.10891&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Paper-yellow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This work presents Depth Anything, a highly practical solution for robust monocular depth estimation by training on a combination of 1.5M labeled images and &lt;strong&gt;62M+ unlabeled images&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/assets/teaser.png&#34; alt=&#34;teaser&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-01-22:&lt;/strong&gt; Paper, project page, code, models, and demo are released.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features of Depth Anything&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Relative depth estimation&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Our foundation models listed &lt;a href=&#34;https://huggingface.co/spaces/LiheYoung/Depth-Anything/tree/main/checkpoints&#34;&gt;here&lt;/a&gt; can provide relative depth estimation for any given image robustly. Please refer &lt;a href=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/#running&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Metric depth estimation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We fine-tune our Depth Anything model with metric depth information from NYUv2 or KITTI. It offers strong capabilities of both in-domain and zero-shot metric depth estimation. Please refer &lt;a href=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/metric_depth&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Better depth-conditioned ControlNet&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We re-train &lt;strong&gt;a better depth-conditioned ControlNet&lt;/strong&gt; based on Depth Anything. It offers more precise synthesis than the previous MiDaS-based ControlNet. Please refer &lt;a href=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/controlnet/&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Downstream high-level scene understanding&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Depth Anything encoder can be fine-tuned to downstream high-level perception tasks, &lt;em&gt;e.g.&lt;/em&gt;, semantic segmentation, 86.2 mIoU on Cityscapes and 59.4 mIoU on ADE20K. Please refer &lt;a href=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/semseg/&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Here we compare our Depth Anything with the previously best MiDaS v3.1 BEiT&lt;sub&gt;L-512&lt;/sub&gt; model.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the latest MiDaS is also trained on KITTI and NYUv2, while we do not.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Params&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;KITTI&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;NYUv2&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sintel&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DDAD&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ETH3D&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DIODE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AbsRel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;$\delta_1$&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;345.0M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.127&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.850&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.048&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.980&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.587&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.699&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.251&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.766&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.139&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.867&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.075&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.942&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ours-S&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;24.8M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.080&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.936&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.053&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.972&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.464&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.739&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.247&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.768&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.127&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.885&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.076&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.939&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ours-B&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;97.5M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.080&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.939&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.046&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.979&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.432&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.756&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.232&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.786&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.126&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.884&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.069&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.946&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ours-L&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;335.3M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.076&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.947&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.043&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.981&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.458&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.760&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.230&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.789&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;0.127&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.882&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.066&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;0.952&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We highlight the &lt;strong&gt;best&lt;/strong&gt; and &lt;em&gt;second best&lt;/em&gt; results in &lt;strong&gt;bold&lt;/strong&gt; and &lt;em&gt;italic&lt;/em&gt; respectively (&lt;strong&gt;better results&lt;/strong&gt;: AbsRel $\downarrow$ , $\delta_1 \uparrow$).&lt;/p&gt; &#xA;&lt;h2&gt;Pre-trained models&lt;/h2&gt; &#xA;&lt;p&gt;We provide three models of varying scales for robust relative depth estimation:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Params&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Inference Time on V100 (ms)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;A100&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;RTX4090 (&lt;a href=&#34;https://github.com/spacewalk01/depth-anything-tensorrt&#34;&gt;TensorRT&lt;/a&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Depth-Anything-Small&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;24.8M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Depth-Anything-Base&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;97.5M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Depth-Anything-Large&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;335.3M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that the V100 and A100 inference time (&lt;em&gt;without TensorRT&lt;/em&gt;) is computed by excluding the pre-processing and post-processing stages, whereas the last column RTX4090 (&lt;em&gt;with TensorRT&lt;/em&gt;) is computed by including these two stages. See &lt;a href=&#34;&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;You can easily load our pre-trained models by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from depth_anything.dpt import DepthAnything&#xA;&#xA;encoder = &#39;vits&#39; # can also be &#39;vitb&#39; or &#39;vitl&#39;&#xA;depth_anything = DepthAnything.from_pretrained(&#39;LiheYoung/depth_anything_{:}14&#39;.format(encoder))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;No network connection, cannot load these models?&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here for solutions&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;First, please manually download our models (both config and checkpoints files) from here: &lt;a href=&#34;https://huggingface.co/LiheYoung/depth_anything_vits14&#34;&gt;depth-anything-small&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co/LiheYoung/depth_anything_vitb14&#34;&gt;depth-anything-base&lt;/a&gt;, and &lt;a href=&#34;https://huggingface.co/LiheYoung/depth_anything_vitl14&#34;&gt;depth-anything-large&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Second, upload the folder which contains config and checkpoint files to your remote server.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Lastly, load the model locally by:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# suppose the config and checkpoint files are stored under the folder checkpoints/depth_anything_vitb14&#xA;depth_anything = DepthAnything.from_pretrained(&#39;checkpoints/depth_anything_vitb14&#39;, local_files_only=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/LiheYoung/Depth-Anything&#xA;cd Depth-Anything&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python run.py --encoder &amp;lt;vits | vitb | vitl&amp;gt; --img-path &amp;lt;img-directory | single-img | txt-file&amp;gt; --outdir &amp;lt;outdir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the &lt;code&gt;img-path&lt;/code&gt;, you can either 1) point it to an image directory storing all interested images, 2) point it to a single image, or 3) point it to a text file storing all image paths.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python run.py --encoder vitl --img-path assets/examples --outdir depth_visualization&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gradio demo&lt;/h3&gt; &#xA;&lt;p&gt;To use our gradio demo locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also try our &lt;a href=&#34;https://huggingface.co/spaces/LiheYoung/Depth-Anything&#34;&gt;online demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Import Depth Anything to your project&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use Depth Anything in your own project, you can simply follow &lt;a href=&#34;https://raw.githubusercontent.com/LiheYoung/Depth-Anything/main/run.py&#34;&gt;&lt;code&gt;run.py&lt;/code&gt;&lt;/a&gt; to load our models and define data pre-processing.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Code snippet (note the difference between our data pre-processing and that of MiDaS)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from depth_anything.dpt import DepthAnything&#xA;from depth_anything.util.transform import Resize, NormalizeImage, PrepareForNet&#xA;&#xA;import cv2&#xA;import torch&#xA;&#xA;encoder = &#39;vits&#39; # can also be &#39;vitb&#39; or &#39;vitl&#39;&#xA;depth_anything = DepthAnything.from_pretrained(&#39;LiheYoung/depth_anything_{:}14&#39;.format(encoder))&#xA;&#xA;transform = Compose([&#xA;    Resize(&#xA;        width=518,&#xA;        height=518,&#xA;        resize_target=False,&#xA;        keep_aspect_ratio=True,&#xA;        ensure_multiple_of=14,&#xA;        resize_method=&#39;lower_bound&#39;,&#xA;        image_interpolation_method=cv2.INTER_CUBIC,&#xA;    ),&#xA;    NormalizeImage(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),&#xA;    PrepareForNet(),&#xA;])&#xA;&#xA;image = cv2.cvtColor(cv2.imread(&#39;your image path&#39;), cv2.COLOR_BGR2RGB) / 255.0&#xA;image = transform({&#39;image&#39;: image})[&#39;image&#39;]&#xA;image = torch.from_numpy(image).unsqueeze(0)&#xA;&#xA;# depth shape: 1xHxW&#xA;depth = depth_anything(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Community Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;We sincerely appreciate all the extentions built on our Depth Anything from the community. Thank you a lot!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here we list the extensions we have found:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Depth Anything ONNX: &lt;a href=&#34;https://github.com/fabio-sim/Depth-Anything-ONNX&#34;&gt;https://github.com/fabio-sim/Depth-Anything-ONNX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Depth Anything TensorRT: &lt;a href=&#34;https://github.com/spacewalk01/depth-anything-tensorrt&#34;&gt;https://github.com/spacewalk01/depth-anything-tensorrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Depth Anything in ControlNet WebUI: &lt;a href=&#34;https://github.com/Mikubill/sd-webui-controlnet&#34;&gt;https://github.com/Mikubill/sd-webui-controlnet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Depth Anything in X-AnyLabeling: &lt;a href=&#34;https://github.com/CVHub520/X-AnyLabeling&#34;&gt;https://github.com/CVHub520/X-AnyLabeling&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have your amazing projects supporting or improving (&lt;em&gt;e.g.&lt;/em&gt;, speed) Depth Anything, please feel free to drop an issue. We will add them here.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful, please consider citing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{depthanything,&#xA;      title={Depth Anything: Unleashing the Power of Large-Scale Unlabeled Data}, &#xA;      author={Yang, Lihe and Kang, Bingyi and Huang, Zilong and Xu, Xiaogang and Feng, Jiashi and Zhao, Hengshuang},&#xA;      journal={arXiv:2401.10891},&#xA;      year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>xNul/palworld-host-save-fix</title>
    <updated>2024-01-25T01:27:05Z</updated>
    <id>tag:github.com,2024-01-25:/xNul/palworld-host-save-fix</id>
    <link href="https://github.com/xNul/palworld-host-save-fix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fixes the bug which forces a player to create a new character when they already have a save. Useful for migrating maps from co-op to dedicated servers and from one dedicated server to another.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Palworld Host Save Fix&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;&lt;span&gt;⚠&lt;/span&gt; This tool is experimental. Be careful of data loss and &lt;em&gt;always&lt;/em&gt; make a backup.&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Fixes the bug which forces a player to create a new character when they already have a save.&lt;/p&gt; &#xA;&lt;p&gt;Palworld save files are different depending on the type of server you are running. Co-op, Windows dedicated server, Linux dedicated server, SteamCMD dedicated server, all of these are different types of Palworld servers and if you try to migrate a save file from one type of server to another, you can run into a player save bug which forces you to create a new character.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Moving a Windows co-op save to a Windows dedicated server will force the host to create a new character and lose their save.&lt;/li&gt; &#xA; &lt;li&gt;Moving a Windows dedicated server save to a Linux dedicated server will force all players to create a new character and lose their save.&lt;/li&gt; &#xA; &lt;li&gt;Moving a Linux dedicated server save to a Windows dedicated server will force all players to create a new character and lose their save.&lt;/li&gt; &#xA; &lt;li&gt;Moving a Windows co-op save to a Linux dedicated server will force all players to create a new character and lose their save.&lt;/li&gt; &#xA; &lt;li&gt;Etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The bug happens because players are identified and correlated to their save via their GUID. These different types of servers generate player GUIDs differently so when a player joins, the server generates a new GUID that doesn&#39;t match the old save&#39;s GUID and because of this, doesn&#39;t realize the player already has a save.&lt;/p&gt; &#xA;&lt;p&gt;To fix this bug, we&#39;ve made a script that takes the GUID of the player on the new server and applies it to the player save from the old server so that the new server will use the player save from the old server.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trumank/uesave-rs&#34;&gt;uesave-rs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Command:&lt;br&gt; &lt;code&gt;python fix-host-save.py &amp;lt;uesave.exe&amp;gt; &amp;lt;save_path&amp;gt; &amp;lt;new_guid&amp;gt; &amp;lt;old_guid&amp;gt;&lt;/code&gt;&lt;br&gt; &lt;code&gt;&amp;lt;uesave.exe&amp;gt;&lt;/code&gt; - Path to your uesave.exe&lt;br&gt; &lt;code&gt;&amp;lt;save_path&amp;gt;&lt;/code&gt; - Path to your save folder&lt;br&gt; &lt;code&gt;&amp;lt;new_guid&amp;gt;&lt;/code&gt; - GUID of the player on the new server&lt;br&gt; &lt;code&gt;&amp;lt;old_guid&amp;gt;&lt;/code&gt; - GUID of the player from the old server&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;br&gt; &lt;code&gt;python fix-host-save.py &#34;C:\Users\John\.cargo\bin\uesave.exe&#34; &#34;C:\Users\John\Desktop\my_temporary_folder\2E85FD38BAA792EB1D4C09386F3A3CDA&#34; 6E80B1A6000000000000000000000000 00000000000000000000000000000001&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to migrate a co-op save to a Windows dedicated server&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the dependencies &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#usage&#34;&gt;above&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The dedicated server is installed, running, and you&#39;re able to join it.&lt;/li&gt; &#xA; &lt;li&gt;If you have a Viewing Cage, follow the workaround &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#viewing-cage-bug&#34;&gt;below&lt;/a&gt; for the [Viewing Cage bug] in co-op before moving the save.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy your desired save&#39;s folder from &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Pal\Saved\SaveGames\&amp;lt;random_numbers&amp;gt;&lt;/code&gt; to your dedicated server.&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;PalServer\Pal\Saved\Config\WindowsServer\GameUserSettings.ini&lt;/code&gt; file, change the &lt;code&gt;DedicatedServerName&lt;/code&gt; to match your save&#39;s folder name. For example, if your save&#39;s folder name is &lt;code&gt;2E85FD38BAA792EB1D4C09386F3A3CDA&lt;/code&gt;, the &lt;code&gt;DedicatedServerName&lt;/code&gt; changes to &lt;code&gt;DedicatedServerName=2E85FD38BAA792EB1D4C09386F3A3CDA&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Delete &lt;code&gt;PalServer\Pal\Saved\SaveGames\0\&amp;lt;your_save_here&amp;gt;\WorldOption.sav&lt;/code&gt; to allow modification of &lt;code&gt;PalWorldSettings.ini&lt;/code&gt;. Players will have to choose their respawn point again, but nothing else is affected as far as I can tell.&lt;/li&gt; &#xA; &lt;li&gt;Confirm you can connect to your save on the dedicated server and that the world is the one in the save. You can check the world with a character that belongs to a regular player from the co-op.&lt;/li&gt; &#xA; &lt;li&gt;Afterwards, the co-op host must create a new character on the dedicated server. A new &lt;code&gt;.sav&lt;/code&gt; file should appear in &lt;code&gt;PalServer\Pal\Saved\SaveGames\0\&amp;lt;your_save_here&amp;gt;\Players&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The name of that new &lt;code&gt;.sav&lt;/code&gt; file is the co-op host&#39;s new GUID. We will need the co-op host&#39;s new GUID for the script to work.&lt;/li&gt; &#xA; &lt;li&gt;Shut the server down and then copy the entire dedicated server save at &lt;code&gt;PalServer\Pal\Saved\SaveGames\0\&amp;lt;your_save_here&amp;gt;&lt;/code&gt; (it must be the save with the co-op host&#39;s new character!) into a temporary folder and remember the path for the temporary folder because it&#39;s needed to run the script.&lt;/li&gt; &#xA; &lt;li&gt;If you have not already done so, install &lt;a href=&#34;https://github.com/trumank/uesave-rs&#34;&gt;uesave-rs&lt;/a&gt; and get the file path to its install location. If the path does not have &lt;code&gt;uesave.exe&lt;/code&gt; at the end, it&#39;s wrong.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make a backup of your save!&lt;/strong&gt; This is an experimental script and has known bugs so always keep a backup copy of your save.&lt;/li&gt; &#xA; &lt;li&gt;Run the script using the command in the &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#usage&#34;&gt;Usage section&lt;/a&gt; with the information you&#39;ve gathered and using &lt;code&gt;00000000000000000000000000000001&lt;/code&gt; as the co-op host&#39;s old GUID.&lt;/li&gt; &#xA; &lt;li&gt;Copy the save from the temporary folder back to the dedicated server. Move the save you had in the dedicated server somewhere else or rename it to something different.&lt;/li&gt; &#xA; &lt;li&gt;Start the server back up and have the co-op host join the server with their fixed character.&lt;/li&gt; &#xA; &lt;li&gt;If, after 5 minutes of play, your Pals won&#39;t attack for you or do work in the base, follow the &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#pal-bug&#34;&gt;[Pal bug] workaround&lt;/a&gt; to fix them.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to migrate a Windows/Linux dedicated server save to a Linux/Windows dedicated server&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the dependencies &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#usage&#34;&gt;above&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The new dedicated server is installed, running, and you&#39;re able to join it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy the save from your old dedicated server to your new dedicated server.&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;PalServer\Pal\Saved\Config\WindowsorLinuxServer\GameUserSettings.ini&lt;/code&gt; file of the new server, change the &lt;code&gt;DedicatedServerName&lt;/code&gt; to match your save&#39;s folder name. For example, if your save&#39;s folder name is &lt;code&gt;2E85FD38BAA792EB1D4C09386F3A3CDA&lt;/code&gt;, the &lt;code&gt;DedicatedServerName&lt;/code&gt; changes to &lt;code&gt;DedicatedServerName=2E85FD38BAA792EB1D4C09386F3A3CDA&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start the new server and have every player create a new character. When a player creates a new character, a new &lt;code&gt;.sav&lt;/code&gt; file will appear in &lt;code&gt;PalServer\Pal\Saved\SaveGames\0\&amp;lt;your_save_here&amp;gt;\Players&lt;/code&gt;. The name of that new &lt;code&gt;.sav&lt;/code&gt; file is the player&#39;s new GUID. Make sure to keep track of all old GUIDs, new GUIDs, and which player they belong to.&lt;/li&gt; &#xA; &lt;li&gt;Shut the server down and then copy the entire new server save at &lt;code&gt;PalServer\Pal\Saved\SaveGames\0\&amp;lt;your_save_here&amp;gt;&lt;/code&gt; (it must be the save with all the new characters!) into a temporary folder and remember the path for the temporary folder because it&#39;s needed to run the script.&lt;/li&gt; &#xA; &lt;li&gt;If you have not already done so, install &lt;a href=&#34;https://github.com/trumank/uesave-rs&#34;&gt;uesave-rs&lt;/a&gt; and get the file path to its install location. If the path does not have &lt;code&gt;uesave.exe&lt;/code&gt; at the end, it&#39;s wrong.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make a backup of your save!&lt;/strong&gt; This is an experimental script and has known bugs so always keep a backup copy of your save.&lt;/li&gt; &#xA; &lt;li&gt;For each player&#39;s corresponding new GUID and old GUID pair, run the script using the command in the &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#usage&#34;&gt;Usage section&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the save from the temporary folder back to the dedicated server. Move the save you had in the dedicated server somewhere else or rename it to something different.&lt;/li&gt; &#xA; &lt;li&gt;Start the server back up and have each player join the server with their fixed character.&lt;/li&gt; &#xA; &lt;li&gt;If, after 5 minutes of play, a player&#39;s Pals won&#39;t attack for them or do work in their base, have them follow the &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#pal-bug&#34;&gt;[Pal bug] workaround&lt;/a&gt; to fix them.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to migrate a Windows dedicated server save to co-op&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xNul/palworld-host-save-fix/issues/12#issuecomment-1904052304&#34;&gt;Apparently this is possible&lt;/a&gt; but I haven&#39;t tried it yet. Instructions should be very similar to &#34;How to migrate a co-op save to a Windows dedicated server&#34; but where you use the &lt;code&gt;00000000000000000000000000000001&lt;/code&gt; GUID as the new GUID and the player&#39;s current GUID on the dedicated server as the old GUID.&lt;/p&gt; &#xA;&lt;p&gt;If someone wants to make sure this kind of migration works and then create the instructions to do it, I&#39;d accept a PR for them.&lt;/p&gt; &#xA;&lt;h2&gt;Known bugs&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;del&gt;[Guild bug]&lt;/del&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;** Has likely been fixed by &lt;a href=&#34;https://github.com/xNul/palworld-host-save-fix/pull/18&#34;&gt;https://github.com/xNul/palworld-host-save-fix/pull/18&lt;/a&gt;. **&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;Details: Guild membership doesn&#39;t work properly after fixing a character. This is likely happening because there&#39;s some guild configuration being missed in the character migration from the old save to the new save.&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;Workaround: [Co-op Only] In co-op, before moving the save, transfer ownership from the co-op host&#39;s character to another character and have the co-op host&#39;s character leave the guild. Fixes the issue entirely. Doesn&#39;t work when all players lose their save data because there is no working player to hold the guild.&lt;/del&gt;&lt;/p&gt; &#xA;&lt;h3&gt;[Pal bug]&lt;/h3&gt; &#xA;&lt;p&gt;Details: Pals owned by the player won&#39;t do anything at the base. This is likely caused by the Pals not being registered with the correct guild.&lt;/p&gt; &#xA;&lt;p&gt;Workaround: On the new server, after the save has been fixed, have each player&#39;s character go into their base, drop on the ground and pick up every single Pal they own, including the base workers. This can be done using the &#34;Drop&#34; button in the Party menu. This will re-register the Pals with the correct guild and fix the issue entirely.&lt;/p&gt; &#xA;&lt;h3&gt;[Viewing Cage bug]&lt;/h3&gt; &#xA;&lt;p&gt;Details: The Viewing Cage &lt;a href=&#34;https://tech.palworldgame.com/dedicated-server-guide#qa&#34;&gt;isn&#39;t officially supported&lt;/a&gt; on dedicated servers so if you have built one in co-op, it needs to be removed from your co-op save before migrating it to your dedicated server.&lt;/p&gt; &#xA;&lt;p&gt;Workaround: [Co-op Only] If you have built a Viewing Cage, it needs to be removed from your co-op save before migrating it to your dedicated server.&lt;/p&gt; &#xA;&lt;h3&gt;[Left Click bug]&lt;/h3&gt; &#xA;&lt;p&gt;Details: After applying the fix, some players experience a bug where you can&#39;t hold your left mouse button to attack. It seems like this only happens if you didn&#39;t do the &lt;a href=&#34;https://raw.githubusercontent.com/xNul/palworld-host-save-fix/main/#guild-bug&#34;&gt;[Guild bug] workaround&lt;/a&gt; but I&#39;m not sure.&lt;/p&gt; &#xA;&lt;p&gt;Workaround: If you leave the guild and rejoin, it goes away. Thanks &lt;a href=&#34;https://www.reddit.com/r/Palworld/comments/19axeqs/autoswing_not_working/kiq85zr/&#34;&gt;/u/skalibran&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Credit to &lt;a href=&#34;https://gist.github.com/cheahjs/300239464dd84fe6902893b6b9250fd0&#34;&gt;cheahjs&lt;/a&gt; for his very useful script helping me to make this fix!&lt;/h3&gt; &#xA;&lt;h3&gt;Appreciate any help testing and resolving bugs.&lt;/h3&gt;</summary>
  </entry>
</feed>