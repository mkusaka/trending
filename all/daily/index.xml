<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-17T01:28:43Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tj-actions/changed-files</title>
    <updated>2025-03-17T01:28:43Z</updated>
    <id>tag:github.com,2025-03-17:/tj-actions/changed-files</id>
    <link href="https://github.com/tj-actions/changed-files" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Github action to retrieve all (added, copied, modified, deleted, renamed, type changed, unmerged, unknown) files and directories.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ubuntu-E95420?style=for-the-badge&amp;amp;logo=ubuntu&amp;amp;logoColor=white&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&amp;amp;logo=macos&amp;amp;logoColor=F0F0F0&#34; alt=&#34;Mac OS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows-0078D6?style=for-the-badge&amp;amp;logo=windows&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/search?o=desc&amp;amp;q=tj-actions+changed-files+language%3AYAML&amp;amp;s=&amp;amp;type=Code&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?style=for-the-badge&amp;amp;url=https%3A%2F%2Fused-by.vercel.app%2Fapi%2Fgithub-actions%2Fused-by%3Faction%3Dtj-actions%2Fchanged-files%26package_id%3DUGFja2FnZS0yOTQyNTU4MDk5%26badge%3Dtrue&#34; alt=&#34;Public workflows that use this action.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/gh/tj-actions/changed-files/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/4fe2f49c3ab144b0bbe4effc85a061a0&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/tj-actions/changed-files/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/actions/workflows/sync-release-version.yml&#34;&gt;&lt;img src=&#34;https://github.com/tj-actions/changed-files/actions/workflows/sync-release-version.yml/badge.svg?sanitize=true&#34; alt=&#34;Update release version.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-27-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;h2&gt;changed-files&lt;/h2&gt; &#xA;&lt;p&gt;Effortlessly track all changed files and directories relative to a target branch, the current branch (preceding commit or the last remote commit), multiple branches, or custom commits returning &lt;strong&gt;relative paths&lt;/strong&gt; from the project root using this GitHub action.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; &lt;strong&gt;Security Alert:&lt;/strong&gt; A critical security issue was identified in this action due to a compromised commit: &lt;a href=&#34;https://github.com/tj-actions/changed-files/commit/0e58ed8671d6b60d0890c21b07f8835ace038e67&#34;&gt;0e58ed8671d6b60d0890c21b07f8835ace038e67&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;This commit has been &lt;strong&gt;removed&lt;/strong&gt; from all tags and branches, and necessary measures have been implemented to prevent similar issues in the future.&lt;/p&gt; &#xA; &lt;h4&gt;&lt;strong&gt;Action Required:&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Review your workflows executed between March 14 and March 15.&lt;/strong&gt; If you notice unexpected output under the &lt;code&gt;changed-files&lt;/code&gt; section, decode it using the following command: &lt;code&gt;echo &#39;xxx&#39; | base64 -d | base64 -d&lt;/code&gt;&lt;br&gt; If the output contains sensitive information (e.g., tokens or secrets), &lt;strong&gt;revoke and rotate those secrets immediately&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;If your workflows reference this commit directly by its SHA&lt;/strong&gt;, you must update them immediately to avoid using the compromised version.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;If you are using tagged versions&lt;/strong&gt; (e.g., &lt;code&gt;v35&lt;/code&gt;, &lt;code&gt;v44.5.1&lt;/code&gt;), no action is required as these tags have been updated and are now safe to use.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Additionally, as a precaution, we recommend rotating any secrets that may have been exposed during this timeframe to ensure the continued security of your workflows.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;This action solely identifies files that have changed for events such as &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#other-supported-events-electron&#34;&gt;&lt;code&gt;pull_request*&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;merge_group&lt;/code&gt;, &lt;code&gt;release&lt;/code&gt;, and many more&lt;/a&gt;. However, it doesn&#39;t detect pending uncommitted changes created during the workflow execution.&lt;/p&gt; &lt;p&gt;See: &lt;a href=&#34;https://github.com/tj-actions/verify-changed-files&#34;&gt;https://github.com/tj-actions/verify-changed-files&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#features-&#34;&gt;Features üöÄ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#usage-&#34;&gt;Usage üíª&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#on-pull_request-&#34;&gt;On &lt;code&gt;pull_request&lt;/code&gt; üîÄ&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#using-local-git-directory-&#34;&gt;Using local .git directory üìÅ&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#using-githubs-api-octocat&#34;&gt;Using Github&#39;s API &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#on-push-%EF%B8%8F&#34;&gt;On &lt;code&gt;push&lt;/code&gt; ‚¨ÜÔ∏è&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#other-supported-events-electron&#34;&gt;Other supported events &lt;img alt=&#34;electron&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/electron.png?v8&#34;&gt;)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs-%EF%B8%8F&#34;&gt;Inputs ‚öôÔ∏è&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#useful-acronyms-&#34;&gt;Useful Acronyms üßÆ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#outputs-&#34;&gt;Outputs üì§&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#versioning-%EF%B8%8F&#34;&gt;Versioning üè∑Ô∏è&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#examples-&#34;&gt;Examples üìÑ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#real-world-usage-&#34;&gt;Real-world usage üåê&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#open-source-projects-&#34;&gt;Open source projects üì¶&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#scalability-example-&#34;&gt;Scalability Example üìà&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#important-notice-%EF%B8%8F&#34;&gt;Important Notice ‚ö†Ô∏è&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#migration-guide-&#34;&gt;Migration guide üîÑ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#credits-&#34;&gt;Credits üëè&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#report-bugs-&#34;&gt;Report Bugs üêõ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#contributors-&#34;&gt;Contributors ‚ú®&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features üöÄ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast execution, averaging 0-10 seconds.&lt;/li&gt; &#xA; &lt;li&gt;Leverages either &lt;a href=&#34;https://docs.github.com/en/rest/reference/repos#list-commits&#34;&gt;Github&#39;s REST API&lt;/a&gt; or &lt;a href=&#34;https://git-scm.com/docs/git-diff&#34;&gt;Git&#39;s native diff command&lt;/a&gt; to determine changed files.&lt;/li&gt; &#xA; &lt;li&gt;Facilitates easy debugging.&lt;/li&gt; &#xA; &lt;li&gt;Scales to handle large/mono repositories.&lt;/li&gt; &#xA; &lt;li&gt;Supports Git submodules.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue&#34;&gt;merge queues&lt;/a&gt; for pull requests.&lt;/li&gt; &#xA; &lt;li&gt;Generates escaped &lt;a href=&#34;https://github.com/tj-actions/changed-files/raw/main/.github/workflows/matrix-example.yml&#34;&gt;JSON output for running matrix jobs&lt;/a&gt; based on changed files.&lt;/li&gt; &#xA; &lt;li&gt;Lists changed directories. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Limits matching changed directories to a specified maximum depth.&lt;/li&gt; &#xA;   &lt;li&gt;Optionally excludes the current directory.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Writes outputs to a designated &lt;code&gt;.txt&lt;/code&gt; or &lt;code&gt;.json&lt;/code&gt; file for further processing.&lt;/li&gt; &#xA; &lt;li&gt;Restores deleted files to their previous location or a newly specified location.&lt;/li&gt; &#xA; &lt;li&gt;Supports fetching a fixed number of commits, which improves performance.&lt;/li&gt; &#xA; &lt;li&gt;Compatible with all platforms (Linux, MacOS, Windows).&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&#34;&gt;GitHub-hosted runners&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.3/admin/github-actions/getting-started-with-github-actions-for-your-enterprise/getting-started-with-github-actions-for-github-enterprise-server&#34;&gt;GitHub Enterprise Server&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners&#34;&gt;self-hosted runners&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Lists all files and directories that have changed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Between the current pull request branch and the last commit on the target branch.&lt;/li&gt; &#xA;   &lt;li&gt;Between the last commit and the current pushed change.&lt;/li&gt; &#xA;   &lt;li&gt;Between the last remote branch commit and the current HEAD.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restricts change detection to a subset of files and directories: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provides boolean output indicating changes in specific files.&lt;/li&gt; &#xA;   &lt;li&gt;Uses &lt;a href=&#34;https://codepen.io/mrmlnc/pen/OXQjMe&#34;&gt;Glob pattern&lt;/a&gt; matching. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Supports Globstar.&lt;/li&gt; &#xA;     &lt;li&gt;Supports brace expansion.&lt;/li&gt; &#xA;     &lt;li&gt;Supports negation.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Uses &lt;a href=&#34;https://yaml.org/&#34;&gt;YAML&lt;/a&gt; syntax for specifying patterns. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Supports &lt;a href=&#34;https://github.com/tj-actions/changed-files/raw/main/test/changed-files.yml#L8-L12&#34;&gt;YAML anchors &amp;amp; aliases&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Supports &lt;a href=&#34;https://github.com/tj-actions/changed-files/raw/main/test/changed-files.yml#L13-L16&#34;&gt;YAML multi-line strings&lt;/a&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And many more...&lt;/p&gt; &#xA;&lt;h2&gt;Usage üíª&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Push Events&lt;/strong&gt;: When configuring &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;actions/checkout&lt;/code&gt;&lt;/a&gt;, make sure to set &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;fetch-depth&lt;/code&gt;&lt;/a&gt; to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;, depending on your use case.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Mono Repositories&lt;/strong&gt;: To avoid pulling the entire branch history, you can utilize the default &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;actions/checkout&lt;/code&gt;&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;fetch-depth&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;1&lt;/code&gt; for &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request&#34;&gt;&lt;code&gt;pull_request&lt;/code&gt;&lt;/a&gt; events.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Quoting Multiline Inputs&lt;/strong&gt;: Avoid using single or double quotes for &lt;a href=&#34;https://github.com/tj-actions/changed-files/raw/main/test/changed-files.yml#L13-L16&#34;&gt;multiline&lt;/a&gt; inputs. The value is already a string separated by a newline character. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#examples-&#34;&gt;Examples&lt;/a&gt; section for more information.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Credentials Persistence&lt;/strong&gt;: If &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;fetch-depth&lt;/code&gt;&lt;/a&gt; is not set to 0, make sure to set &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;persist-credentials&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt; when configuring &lt;a href=&#34;https://github.com/actions/checkout#usage&#34;&gt;&lt;code&gt;actions/checkout&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Matching Files and Folders&lt;/strong&gt;: To match all files and folders under a directory, this requires a globstar pattern e.g. &lt;code&gt;dir_name/**&lt;/code&gt; which matches any number of subdirectories and files.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/tj-actions/changed-files/discussions&#34;&gt;discussions for more information&lt;/a&gt; or &lt;a href=&#34;https://github.com/tj-actions/changed-files/discussions/new/choose&#34;&gt;create a new discussion&lt;/a&gt; for usage-related questions.&lt;/p&gt; &#xA;&lt;h3&gt;On &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request&#34;&gt;&lt;code&gt;pull_request&lt;/code&gt;&lt;/a&gt; üîÄ&lt;/h3&gt; &#xA;&lt;p&gt;Detect changes to all files in a Pull request relative to the target branch or since the last pushed commit.&lt;/p&gt; &#xA;&lt;h4&gt;Using local .git directory üìÅ&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: CI&#xA;&#xA;on:&#xA;  pull_request:&#xA;    branches:&#xA;      - main&#xA;&#xA;jobs:&#xA;  # ------------------------------------------------------------------------------------------------------------------------------------------------&#xA;  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -&amp;gt; to the current commit of a PR branch.&#xA;  # ------------------------------------------------------------------------------------------------------------------------------------------------&#xA;  changed_files:&#xA;    runs-on: ubuntu-latest  # windows-latest || macos-latest&#xA;    name: Test changed-files&#xA;    steps:&#xA;      - uses: actions/checkout@v4&#xA;&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      # Example 1&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      - name: Get changed files&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v45&#xA;        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g&#xA;        # with:&#xA;        #   since_last_remote_commit: true &#xA;&#xA;      - name: List all changed files&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}&#xA;        run: |&#xA;          for file in ${ALL_CHANGED_FILES}; do&#xA;            echo &#34;$file was changed&#34;&#xA;          done&#xA;&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      # Example 2&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      - name: Get all changed markdown files&#xA;        id: changed-markdown-files&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          # Avoid using single or double quotes for multiline patterns&#xA;          files: |&#xA;            **.md&#xA;            docs/**.md&#xA;&#xA;      - name: List all changed files markdown files&#xA;        if: steps.changed-markdown-files.outputs.any_changed == &#39;true&#39;&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}&#xA;        run: |&#xA;          for file in ${ALL_CHANGED_FILES}; do&#xA;            echo &#34;$file was changed&#34;&#xA;          done&#xA;&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      # Example 3&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      - name: Get all test, doc and src files that have changed&#xA;        id: changed-files-yaml&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          files_yaml: |&#xA;            doc:&#xA;              - &#39;**.md&#39;&#xA;              - docs/**&#xA;            test:&#xA;              - test/**&#xA;              - &#39;!test/**.md&#39;&#xA;            src:&#xA;              - src/**&#xA;          # Optionally set `files_yaml_from_source_file` to read the YAML from a file. e.g `files_yaml_from_source_file: .github/changed-files.yml`&#xA;&#xA;      - name: Run step if test file(s) change&#xA;        # NOTE: Ensure all outputs are prefixed by the same key used above e.g. `test_(...)` | `doc_(...)` | `src_(...)` when trying to access the `any_changed` output.&#xA;        if: steps.changed-files-yaml.outputs.test_any_changed == &#39;true&#39;  &#xA;        env:&#xA;          TEST_ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.test_all_changed_files }}&#xA;        run: |&#xA;          echo &#34;One or more test file(s) has changed.&#34;&#xA;          echo &#34;List all the files that have changed: $TEST_ALL_CHANGED_FILES&#34;&#xA;      &#xA;      - name: Run step if doc file(s) change&#xA;        if: steps.changed-files-yaml.outputs.doc_any_changed == &#39;true&#39;&#xA;        env:&#xA;          DOC_ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.doc_all_changed_files }}&#xA;        run: |&#xA;          echo &#34;One or more doc file(s) has changed.&#34;&#xA;          echo &#34;List all the files that have changed: $DOC_ALL_CHANGED_FILES&#34;&#xA;&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      # Example 4&#xA;      # -----------------------------------------------------------------------------------------------------------&#xA;      - name: Get changed files in the docs folder&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          files: docs/*.{js,html}  # Alternatively using: `docs/**`&#xA;          files_ignore: docs/static.js&#xA;&#xA;      - name: Run step if any file(s) in the docs folder change&#xA;        if: steps.changed-files-specific.outputs.any_changed == &#39;true&#39;&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}&#xA;        run: |&#xA;          echo &#34;One or more files in the docs folder has changed.&#34;&#xA;          echo &#34;List all the files that have changed: $ALL_CHANGED_FILES&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using Github&#39;s API &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: CI&#xA;&#xA;on:&#xA;  pull_request:&#xA;    branches:&#xA;      - main&#xA;&#xA;jobs:&#xA;  # -------------------------------------------------------------&#xA;  # Event `pull_request`: Returns all changed pull request files.&#xA;  # --------------------------------------------------------------&#xA;  changed_files:&#xA;    # NOTE:&#xA;    # - This is limited to pull_request* events and would raise an error for other events.&#xA;    # - A maximum of 3000 files can be returned.&#xA;    # - For more flexibility and no limitations see &#34;Using local .git directory&#34; above.&#xA;&#xA;    runs-on: ubuntu-latest  # windows-latest || macos-latest&#xA;    name: Test changed-files&#xA;    permissions:&#xA;      pull-requests: read&#xA;&#xA;    steps:&#xA;      - name: Get changed files&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v45&#xA;&#xA;      - name: List all changed files&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}&#xA;        run: |&#xA;          for file in ${ALL_CHANGED_FILES}; do&#xA;            echo &#34;$file was changed&#34;&#xA;          done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;On &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push&#34;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; ‚¨ÜÔ∏è&lt;/h3&gt; &#xA;&lt;p&gt;Detect changes to files made since the last pushed commit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: CI&#xA;&#xA;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;&#xA;jobs:&#xA;  # -------------------------------------------------------------&#xA;  # Using GitHub&#39;s API is not supported for push events&#xA;  # -------------------------------------------------------------&#xA;  # &#xA;  # ----------------------------------------------------------------------------------------------&#xA;  # Using local .git history&#xA;  # ----------------------------------------------------------------------------------------------&#xA;  # Event `push`: Compare the preceding remote commit -&amp;gt; to the current commit of the main branch &#xA;  # ----------------------------------------------------------------------------------------------&#xA;  changed_files:&#xA;    runs-on: ubuntu-latest  # windows-latest || macos-latest&#xA;    name: Test changed-files&#xA;    steps:&#xA;      - uses: actions/checkout@v4&#xA;        with:&#xA;          fetch-depth: 0  # OR &#34;2&#34; -&amp;gt; To retrieve the preceding commit.&#xA;&#xA;      - name: Get changed files&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v45&#xA;      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.&#xA;&#xA;      - name: List all changed files&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}&#xA;        run: |&#xA;          for file in ${ALL_CHANGED_FILES}; do&#xA;            echo &#34;$file was changed&#34;&#xA;          done&#xA;      ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other supported events &lt;img alt=&#34;electron&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/electron.png?v8&#34;&gt;)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule&#34;&gt;schedule&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release&#34;&gt;release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch&#34;&gt;workflow_dispatch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run&#34;&gt;workflow_run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#merge_group&#34;&gt;merge_group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment&#34;&gt;issue_comment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;...and many more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To access more examples, navigate to the &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#examples-&#34;&gt;Examples&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;If you feel generous and want to show some extra appreciation:&lt;/p&gt; &#xA;&lt;p&gt;Support this project with a &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/jackton1&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy me a coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;When using &lt;code&gt;files_yaml*&lt;/code&gt; inputs: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;All keys must start with a letter or &lt;code&gt;_&lt;/code&gt; and contain only alphanumeric characters, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, &lt;code&gt;test&lt;/code&gt; or &lt;code&gt;test_key&lt;/code&gt; or &lt;code&gt;test-key&lt;/code&gt; or &lt;code&gt;_test_key&lt;/code&gt; are all valid choices.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Inputs ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;!-- AUTO-DOC-INPUT:START - Do not remove or modify this section --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: tj-actions/changed-files@v46&#xA;  id: changed-files&#xA;  with:&#xA;    # Github API URL.&#xA;    # Type: string&#xA;    # Default: &#34;${{ github.api_url }}&#34;&#xA;    api_url: &#39;&#39;&#xA;&#xA;    # Specify a different base commit &#xA;    # SHA or branch used for &#xA;    # comparing changes &#xA;    # Type: string&#xA;    base_sha: &#39;&#39;&#xA;&#xA;    # Exclude changes outside the current &#xA;    # directory and show path names &#xA;    # relative to it. NOTE: This &#xA;    # requires you to specify the &#xA;    # top-level directory via the `path` &#xA;    # input. &#xA;    # Type: boolean&#xA;    # Default: &#34;true&#34;&#xA;    diff_relative: &#39;&#39;&#xA;&#xA;    # Output unique changed directories instead &#xA;    # of filenames. NOTE: This returns &#xA;    # `.` for changed files located &#xA;    # in the current working directory &#xA;    # which defaults to `$GITHUB_WORKSPACE`. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    dir_names: &#39;&#39;&#xA;&#xA;    # Include only directories that have &#xA;    # been deleted as opposed to &#xA;    # directory names of files that &#xA;    # have been deleted in the &#xA;    # `deleted_files` output when `dir_names` is &#xA;    # set to `true`. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    dir_names_deleted_files_include_only_deleted_dirs: &#39;&#39;&#xA;&#xA;    # Exclude the current directory represented &#xA;    # by `.` from the output &#xA;    # when `dir_names` is set to &#xA;    # `true`. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    dir_names_exclude_current_dir: &#39;&#39;&#xA;&#xA;    # File and directory patterns to &#xA;    # include in the output when &#xA;    # `dir_names` is set to `true`. &#xA;    # NOTE: This returns only the &#xA;    # matching files and also the &#xA;    # directory names. &#xA;    # Type: string&#xA;    dir_names_include_files: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `dir_names_include_files` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    dir_names_include_files_separator: &#39;&#39;&#xA;&#xA;    # Limit the directory output to &#xA;    # a maximum depth e.g `test/test1/test2` &#xA;    # with max depth of `2` &#xA;    # returns `test/test1`. &#xA;    # Type: string&#xA;    dir_names_max_depth: &#39;&#39;&#xA;&#xA;    # Escape JSON output.&#xA;    # Type: boolean&#xA;    # Default: &#34;true&#34;&#xA;    escape_json: &#39;&#39;&#xA;&#xA;    # Exclude changes to submodules.&#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    exclude_submodules: &#39;&#39;&#xA;&#xA;    # Fail when the initial diff &#xA;    # fails. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    fail_on_initial_diff_error: &#39;&#39;&#xA;&#xA;    # Fail when the submodule diff &#xA;    # fails. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    fail_on_submodule_diff_error: &#39;&#39;&#xA;&#xA;    # Fetch additional history for submodules.&#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    fetch_additional_submodule_history: &#39;&#39;&#xA;&#xA;    # Depth of additional branch history &#xA;    # fetched. NOTE: This can be &#xA;    # adjusted to resolve errors with &#xA;    # insufficient history. &#xA;    # Type: string&#xA;    # Default: &#34;25&#34;&#xA;    fetch_depth: &#39;&#39;&#xA;&#xA;    # Maximum number of retries to &#xA;    # fetch missing history. &#xA;    # Type: string&#xA;    # Default: &#34;20&#34;&#xA;    fetch_missing_history_max_retries: &#39;&#39;&#xA;&#xA;    # File and directory patterns used &#xA;    # to detect changes (Defaults to the entire repo if unset). NOTE: &#xA;    # Multiline file/directory patterns should not &#xA;    # include quotes. &#xA;    # Type: string&#xA;    files: &#39;&#39;&#xA;&#xA;    # Source file(s) used to populate &#xA;    # the `files` input. &#xA;    # Type: string&#xA;    files_from_source_file: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files_from_source_file` input. &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_from_source_file_separator: &#39;&#39;&#xA;&#xA;    # Ignore changes to these file(s). &#xA;    # NOTE: Multiline file/directory patterns should &#xA;    # not include quotes. &#xA;    # Type: string&#xA;    files_ignore: &#39;&#39;&#xA;&#xA;    # Source file(s) used to populate &#xA;    # the `files_ignore` input &#xA;    # Type: string&#xA;    files_ignore_from_source_file: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files_ignore_from_source_file` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_ignore_from_source_file_separator: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files_ignore` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_ignore_separator: &#39;&#39;&#xA;&#xA;    # YAML used to define a &#xA;    # set of file patterns to &#xA;    # ignore changes &#xA;    # Type: string&#xA;    files_ignore_yaml: &#39;&#39;&#xA;&#xA;    # Source file(s) used to populate &#xA;    # the `files_ignore_yaml` input. Example: https://github.com/tj-actions/changed-files/blob/main/test/changed-files.yml &#xA;    # Type: string&#xA;    files_ignore_yaml_from_source_file: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files_ignore_yaml_from_source_file` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_ignore_yaml_from_source_file_separator: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_separator: &#39;&#39;&#xA;&#xA;    # YAML used to define a &#xA;    # set of file patterns to &#xA;    # detect changes &#xA;    # Type: string&#xA;    files_yaml: &#39;&#39;&#xA;&#xA;    # Source file(s) used to populate &#xA;    # the `files_yaml` input. Example: https://github.com/tj-actions/changed-files/blob/main/test/changed-files.yml &#xA;    # Type: string&#xA;    files_yaml_from_source_file: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `files_yaml_from_source_file` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    files_yaml_from_source_file_separator: &#39;&#39;&#xA;&#xA;    # Include `all_old_new_renamed_files` output. Note this &#xA;    # can generate a large output &#xA;    # See: #501. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    include_all_old_new_renamed_files: &#39;&#39;&#xA;&#xA;    # Output list of changed files &#xA;    # in a JSON formatted string &#xA;    # which can be used for &#xA;    # matrix jobs. Example: https://github.com/tj-actions/changed-files/blob/main/.github/workflows/matrix-example.yml &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    json: &#39;&#39;&#xA;&#xA;    # Output changed files in a &#xA;    # format that can be used &#xA;    # for matrix jobs. Alias for &#xA;    # setting inputs `json` to `true` &#xA;    # and `escape_json` to `false`. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    matrix: &#39;&#39;&#xA;&#xA;    # Apply the negation patterns first. &#xA;    # NOTE: This affects how changed &#xA;    # files are matched. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    negation_patterns_first: &#39;&#39;&#xA;&#xA;    # Split character for old and &#xA;    # new renamed filename pairs. &#xA;    # Type: string&#xA;    # Default: &#34; &#34;&#xA;    old_new_files_separator: &#39;&#39;&#xA;&#xA;    # Split character for old and &#xA;    # new filename pairs. &#xA;    # Type: string&#xA;    # Default: &#34;,&#34;&#xA;    old_new_separator: &#39;&#39;&#xA;&#xA;    # Directory to store output files.&#xA;    # Type: string&#xA;    # Default: &#34;.github/outputs&#34;&#xA;    output_dir: &#39;&#39;&#xA;&#xA;    # Output renamed files as deleted &#xA;    # and added files. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    output_renamed_files_as_deleted_and_added: &#39;&#39;&#xA;&#xA;    # Specify a relative path under &#xA;    # `$GITHUB_WORKSPACE` to locate the repository. &#xA;    # Type: string&#xA;    # Default: &#34;.&#34;&#xA;    path: &#39;&#39;&#xA;&#xA;    # Use non-ASCII characters to match &#xA;    # files and output the filenames &#xA;    # completely verbatim by setting this &#xA;    # to `false` &#xA;    # Type: boolean&#xA;    # Default: &#34;true&#34;&#xA;    quotepath: &#39;&#39;&#xA;&#xA;    # Recover deleted files.&#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    recover_deleted_files: &#39;&#39;&#xA;&#xA;    # Recover deleted files to a &#xA;    # new destination directory, defaults to &#xA;    # the original location. &#xA;    # Type: string&#xA;    recover_deleted_files_to_destination: &#39;&#39;&#xA;&#xA;    # File and directory patterns used &#xA;    # to recover deleted files, defaults &#xA;    # to the patterns provided via &#xA;    # the `files`, `files_from_source_file`, `files_ignore` and &#xA;    # `files_ignore_from_source_file` inputs or all deleted &#xA;    # files if no patterns are &#xA;    # provided. &#xA;    # Type: string&#xA;    recover_files: &#39;&#39;&#xA;&#xA;    # File and directory patterns to &#xA;    # ignore when recovering deleted files. &#xA;    # Type: string&#xA;    recover_files_ignore: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `recover_files_ignore` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    recover_files_ignore_separator: &#39;&#39;&#xA;&#xA;    # Separator used to split the &#xA;    # `recover_files` input &#xA;    # Type: string&#xA;    # Default: &#34;\n&#34;&#xA;    recover_files_separator: &#39;&#39;&#xA;&#xA;    # Apply sanitization to output filenames &#xA;    # before being set as output. &#xA;    # Type: boolean&#xA;    # Default: &#34;true&#34;&#xA;    safe_output: &#39;&#39;&#xA;&#xA;    # Split character for output strings.&#xA;    # Type: string&#xA;    # Default: &#34; &#34;&#xA;    separator: &#39;&#39;&#xA;&#xA;    # Specify a different commit SHA &#xA;    # or branch used for comparing &#xA;    # changes &#xA;    # Type: string&#xA;    sha: &#39;&#39;&#xA;&#xA;    # Get changed files for commits &#xA;    # whose timestamp is older than &#xA;    # the given time. &#xA;    # Type: string&#xA;    since: &#39;&#39;&#xA;&#xA;    # Use the last commit on &#xA;    # the remote branch as the &#xA;    # `base_sha`. Defaults to the last &#xA;    # non-merge commit on the target &#xA;    # branch for pull request events &#xA;    # and the previous remote commit &#xA;    # of the current branch for &#xA;    # push events. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    since_last_remote_commit: &#39;&#39;&#xA;&#xA;    # Skip initially fetching additional history &#xA;    # to improve performance for shallow &#xA;    # repositories. NOTE: This could lead &#xA;    # to errors with missing history. &#xA;    # It&#39;s intended to be used &#xA;    # when you&#39;ve fetched all necessary &#xA;    # history to perform the diff. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    skip_initial_fetch: &#39;&#39;&#xA;&#xA;    # Tags pattern to ignore.&#xA;    # Type: string&#xA;    tags_ignore_pattern: &#39;&#39;&#xA;&#xA;    # Tags pattern to include.&#xA;    # Type: string&#xA;    # Default: &#34;*&#34;&#xA;    tags_pattern: &#39;&#39;&#xA;&#xA;    # GitHub token used to fetch &#xA;    # changed files from Github&#39;s API. &#xA;    # Type: string&#xA;    # Default: &#34;${{ github.token }}&#34;&#xA;    token: &#39;&#39;&#xA;&#xA;    # Get changed files for commits &#xA;    # whose timestamp is earlier than &#xA;    # the given time. &#xA;    # Type: string&#xA;    until: &#39;&#39;&#xA;&#xA;    # Use POSIX path separator `/` &#xA;    # for output file paths on &#xA;    # Windows. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    use_posix_path_separator: &#39;&#39;&#xA;&#xA;    # Force the use of Github&#39;s &#xA;    # REST API even when a &#xA;    # local copy of the repository &#xA;    # exists &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    use_rest_api: &#39;&#39;&#xA;&#xA;    # Write outputs to the `output_dir` &#xA;    # defaults to `.github/outputs` folder. NOTE: &#xA;    # This creates a `.txt` file &#xA;    # by default and a `.json` &#xA;    # file if `json` is set &#xA;    # to `true`. &#xA;    # Type: boolean&#xA;    # Default: &#34;false&#34;&#xA;    write_output_files: &#39;&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- AUTO-DOC-INPUT:END --&gt; &#xA;&lt;h2&gt;Useful Acronyms üßÆ&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Acronym&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Added&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;C&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Copied&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Modified&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;D&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deleted&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;R&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Renamed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;T&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Type changed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;U&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unmerged&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unknown&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;When using &lt;code&gt;files_yaml*&lt;/code&gt; inputs: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;it&#39;s required to prefix all outputs with the key to ensure that the correct outputs are accessible.&lt;/p&gt; &lt;p&gt;For example, if you use &lt;code&gt;test&lt;/code&gt; as the key, you can access outputs like &lt;code&gt;added_files&lt;/code&gt;, &lt;code&gt;any_changed&lt;/code&gt;, and so on by prefixing them with the key &lt;code&gt;test_added_files&lt;/code&gt; or &lt;code&gt;test_any_changed&lt;/code&gt; etc.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Outputs üì§&lt;/h2&gt; &#xA;&lt;!-- AUTO-DOC-OUTPUT:START - Do not remove or modify this section --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OUTPUT&lt;/th&gt; &#xA;   &lt;th&gt;TYPE&lt;/th&gt; &#xA;   &lt;th&gt;DESCRIPTION&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_added_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_added_files&#34;&gt;added_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Added (A).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_added_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_added_files_count&#34;&gt;added_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;added_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_changed_and_modified_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_changed_and_modified_files&#34;&gt;all_changed_and_modified_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all changed and modified &lt;br&gt;files i.e. a combination of &lt;br&gt;(ACMRDTUX)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_changed_and_modified_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_changed_and_modified_files_count&#34;&gt;all_changed_and_modified_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;all_changed_and_modified_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_changed_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_changed_files&#34;&gt;all_changed_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all changed files i.e. &lt;br&gt;a combination of all added, &lt;br&gt;copied, modified and renamed files &lt;br&gt;(ACMR)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_changed_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_changed_files_count&#34;&gt;all_changed_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;all_changed_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_modified_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_modified_files&#34;&gt;all_modified_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all changed files i.e. &lt;br&gt;a combination of all added, &lt;br&gt;copied, modified, renamed and deleted &lt;br&gt;files (ACMRD).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_modified_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_modified_files_count&#34;&gt;all_modified_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;all_modified_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_old_new_renamed_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_old_new_renamed_files&#34;&gt;all_old_new_renamed_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Renamed and lists their old &lt;br&gt;and new names. &lt;strong&gt;NOTE:&lt;/strong&gt; This &lt;br&gt;requires setting &lt;code&gt;include_all_old_new_renamed_files&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. &lt;br&gt;Also, keep in mind that &lt;br&gt;this output is global and &lt;br&gt;wouldn&#39;t be nested in outputs &lt;br&gt;generated when the &lt;code&gt;*_yaml_*&lt;/code&gt; input &lt;br&gt;is used. (R)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_all_old_new_renamed_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_all_old_new_renamed_files_count&#34;&gt;all_old_new_renamed_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;all_old_new_renamed_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_any_changed&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_any_changed&#34;&gt;any_changed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when any of &lt;br&gt;the filenames provided using the &lt;br&gt;&lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs have changed. This &lt;br&gt;defaults to &lt;code&gt;true&lt;/code&gt; when no &lt;br&gt;patterns are specified. i.e. &lt;em&gt;includes a combination of all added, copied, modified and renamed files (ACMR)&lt;/em&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_any_deleted&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_any_deleted&#34;&gt;any_deleted&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when any of &lt;br&gt;the filenames provided using the &lt;br&gt;&lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs have been deleted. &lt;br&gt;This defaults to &lt;code&gt;true&lt;/code&gt; when &lt;br&gt;no patterns are specified. (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_any_modified&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_any_modified&#34;&gt;any_modified&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when any of &lt;br&gt;the filenames provided using the &lt;br&gt;&lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs have been modified. &lt;br&gt;This defaults to &lt;code&gt;true&lt;/code&gt; when &lt;br&gt;no patterns are specified. i.e. &lt;br&gt;&lt;em&gt;includes a combination of all added, copied, modified, renamed, and deleted files (ACMRD)&lt;/em&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_changed_keys&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_changed_keys&#34;&gt;changed_keys&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all changed YAML keys &lt;br&gt;when the &lt;code&gt;files_yaml&lt;/code&gt; input is &lt;br&gt;used. i.e. key that contains &lt;br&gt;any path that has either &lt;br&gt;been added, copied, modified, and &lt;br&gt;renamed (ACMR)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_copied_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_copied_files&#34;&gt;copied_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Copied (C).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_copied_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_copied_files_count&#34;&gt;copied_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;copied_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_deleted_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_deleted_files&#34;&gt;deleted_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Deleted (D).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_deleted_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_deleted_files_count&#34;&gt;deleted_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;deleted_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_modified_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_modified_files&#34;&gt;modified_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Modified (M).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_modified_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_modified_files_count&#34;&gt;modified_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;modified_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_modified_keys&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_modified_keys&#34;&gt;modified_keys&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all modified YAML keys &lt;br&gt;when the &lt;code&gt;files_yaml&lt;/code&gt; input is &lt;br&gt;used. i.e. key that contains &lt;br&gt;any path that has either &lt;br&gt;been added, copied, modified, and &lt;br&gt;deleted (ACMRD)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_only_changed&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_only_changed&#34;&gt;only_changed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when only files &lt;br&gt;provided using the &lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs &lt;br&gt;have changed. i.e. &lt;em&gt;includes a combination of all added, copied, modified and renamed files (ACMR)&lt;/em&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_only_deleted&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_only_deleted&#34;&gt;only_deleted&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when only files &lt;br&gt;provided using the &lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs &lt;br&gt;have been deleted. (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_only_modified&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_only_modified&#34;&gt;only_modified&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; when only files &lt;br&gt;provided using the &lt;code&gt;files*&lt;/code&gt; or &lt;code&gt;files_ignore*&lt;/code&gt; inputs &lt;br&gt;have been modified. (ACMRD).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_changed_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_changed_files&#34;&gt;other_changed_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all other changed files &lt;br&gt;not listed in the files &lt;br&gt;input i.e. includes a combination &lt;br&gt;of all added, copied, modified &lt;br&gt;and renamed files (ACMR).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_changed_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_changed_files_count&#34;&gt;other_changed_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;other_changed_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_deleted_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_deleted_files&#34;&gt;other_deleted_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all other deleted files &lt;br&gt;not listed in the files &lt;br&gt;input i.e. a combination of &lt;br&gt;all deleted files (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_deleted_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_deleted_files_count&#34;&gt;other_deleted_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;other_deleted_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_modified_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_modified_files&#34;&gt;other_modified_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns all other modified files &lt;br&gt;not listed in the files &lt;br&gt;input i.e. a combination of &lt;br&gt;all added, copied, modified, and &lt;br&gt;deleted files (ACMRD)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_other_modified_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_other_modified_files_count&#34;&gt;other_modified_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;other_modified_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_renamed_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_renamed_files&#34;&gt;renamed_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Renamed (R).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_renamed_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_renamed_files_count&#34;&gt;renamed_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;renamed_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_type_changed_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_type_changed_files&#34;&gt;type_changed_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that have &lt;br&gt;their file type changed (T).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_type_changed_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_type_changed_files_count&#34;&gt;type_changed_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;type_changed_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_unknown_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_unknown_files&#34;&gt;unknown_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Unknown (X).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_unknown_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_unknown_files_count&#34;&gt;unknown_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;unknown_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_unmerged_files&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_unmerged_files&#34;&gt;unmerged_files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns only files that are &lt;br&gt;Unmerged (U).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;output_unmerged_files_count&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#output_unmerged_files_count&#34;&gt;unmerged_files_count&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Returns the number of &lt;code&gt;unmerged_files&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- AUTO-DOC-OUTPUT:END --&gt; &#xA;&lt;h2&gt;Versioning üè∑Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;This GitHub Action follows the principles of &lt;a href=&#34;https://semver.org&#34;&gt;Semantic Versioning&lt;/a&gt; for versioning releases.&lt;/p&gt; &#xA;&lt;p&gt;The format of the version string is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;major: indicates significant changes or new features that may not be backward compatible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;minor: indicates minor changes or new features that are backward compatible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;patch: indicates bug fixes or other small changes that are backward compatible.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples üìÑ&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files in the current branch&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files without escaping unsafe filename characters&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        safe_output: false # set to false because we are using an environment variable to store the output and avoid command injection.&#xA;&#xA;    - name: List all added files&#xA;      env:&#xA;        ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}&#xA;      run: |&#xA;        for file in ${ADDED_FILES}; do&#xA;          echo &#34;$file was added&#34;&#xA;        done&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files and use a comma separator&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get all changed files and use a comma separator in the output&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        separator: &#34;,&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Get all changed files and list all added files&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;&#xA;    - name: List all added files&#xA;      env:&#xA;        ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}&#xA;      run: |&#xA;        for file in ${ADDED_FILES}; do&#xA;          echo &#34;$file was added&#34;&#xA;        done&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#outputs&#34;&gt;outputs&lt;/a&gt; for a list of all available outputs.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files and optionally run a step if a file was modified&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;&#xA;    - name: Run a step if my-file.txt was modified&#xA;      if: contains(steps.changed-files.outputs.modified_files, &#39;my-file.txt&#39;)&#xA;      run: |&#xA;        echo &#34;my-file.txt file has been modified.&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#outputs&#34;&gt;outputs&lt;/a&gt; for a list of all available outputs.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files and write the outputs to a txt file&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;&#xA;   - name: Get changed files and write the outputs to a Txt file&#xA;     id: changed-files-write-output-files-txt&#xA;     uses: tj-actions/changed-files@v45&#xA;     with:&#xA;       write_output_files: true&#xA;&#xA;   - name: Verify the contents of the .github/outputs/added_files.txt file&#xA;     run: |&#xA;       cat .github/outputs/added_files.txt&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files and write the outputs to a json file&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;   - name: Get changed files and write the outputs to a JSON file&#xA;     id: changed-files-write-output-files-json&#xA;     uses: tj-actions/changed-files@v45&#xA;     with:&#xA;       json: true&#xA;       write_output_files: true&#xA;&#xA;   - name: Verify the contents of the .github/outputs/added_files.json file&#xA;     run: |&#xA;       cat .github/outputs/added_files.json&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using a list of files&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        files: |&#xA;          my-file.txt&#xA;          *.sh&#xA;          *.png&#xA;          !*.md&#xA;          test_directory/**&#xA;          **/*.sql&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using a list of files and take action based on the changes&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files&#xA;      id: changed-files-specific&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        files: |&#xA;          my-file.txt&#xA;          *.sh&#xA;          *.png&#xA;          !*.md&#xA;          test_directory/**&#xA;          **/*.sql&#xA;&#xA;    - name: Run step if any of the listed files above change&#xA;      if: steps.changed-files-specific.outputs.any_changed == &#39;true&#39;&#xA;      run: |&#xA;        echo &#34;One or more files listed above has changed.&#34;&#xA;&#xA;    - name: Run step if only the files listed above change&#xA;      if: steps.changed-files-specific.outputs.only_changed == &#39;true&#39;&#xA;      run: |&#xA;        echo &#34;Only files listed above have changed.&#34;&#xA;&#xA;    - name: Run step if any of the listed files above is deleted&#xA;      if: steps.changed-files-specific.outputs.any_deleted == &#39;true&#39;&#xA;      env:&#xA;        DELETED_FILES: ${{ steps.changed-files-specific.outputs.deleted_files }}&#xA;      run: |&#xA;        for file in ${DELETED_FILES}; do&#xA;          echo &#34;$file was deleted&#34;&#xA;        done&#xA;&#xA;    - name: Run step if all listed files above have been deleted&#xA;      if: steps.changed-files-specific.outputs.only_deleted == &#39;true&#39;&#xA;      env:&#xA;        DELETED_FILES: ${{ steps.changed-files-specific.outputs.deleted_files }}&#xA;      run: |&#xA;        for file in ${DELETED_FILES}; do&#xA;          echo &#34;$file was deleted&#34;&#xA;        done&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#outputs&#34;&gt;outputs&lt;/a&gt; for a list of all available outputs.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using a source file or list of file(s) to populate to files input&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files using a source file or list of file(s) to populate to files input.&#xA;      id: changed-files-specific-source-file&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        files_from_source_file: test/changed-files-list.txt&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get changed files using a source file or list of file(s) to populate to files input and optionally specify more files&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files using a source file or list of file(s) to populate to files input and optionally specify more files.&#xA;      id: changed-files-specific-source-file-and-specify-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        files_from_source_file: |&#xA;          test/changed-files-list.txt&#xA;        files: |&#xA;          test.txt&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using a different SHA&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files using a different SHA&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        sha: ${{ github.event.pull_request.head.sha }}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using a different base SHA&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed files using a different base SHA&#xA;      id: changed-files&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        base_sha: ${{ github.event.pull_request.base.sha }}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files between the previous tag and the current tag&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;on:&#xA;  push:&#xA;    tags:&#xA;      - &#39;v*&#39;&#xA;&#xA;jobs:&#xA;  release:&#xA;    name: Release&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - name: Checkout&#xA;        uses: actions/checkout@v4&#xA;        with:&#xA;          fetch-depth: 0&#xA;&#xA;      - name: Get changed files&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v45&#xA;&#xA;      - name: List changed files&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}&#xA;        run: |&#xA;          echo &#34;List all the files that have changed: $ALL_CHANGED_FILES&#34;&#xA;&#xA;      - name: Get changed files in the .github folder&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          files: .github/**&#xA;&#xA;      - name: Run step if any file(s) in the .github folder change&#xA;        if: steps.changed-files-specific.outputs.any_changed == &#39;true&#39;&#xA;        env:&#xA;          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}&#xA;        run: |&#xA;          echo &#34;One or more files in the .github folder has changed.&#34;&#xA;          echo &#34;List all the files that have changed: $ALL_CHANGED_FILES&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files for a repository located in a different path&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Checkout into dir1&#xA;      uses: actions/checkout@v4&#xA;      with:&#xA;        fetch-depth: 0&#xA;        path: dir1&#xA;&#xA;    - name: Run changed-files with defaults in dir1&#xA;      id: changed-files-for-dir1&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        path: dir1&#xA;&#xA;    - name: List all added files in dir1&#xA;      env:&#xA;        ADDED_FILES: ${{ steps.changed-files-for-dir1.outputs.added_files }}&#xA;      run: |&#xA;        for file in ${ADDED_FILES}; do&#xA;          echo &#34;$file was added&#34;&#xA;        done&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files with non-√§≈°ƒáƒØ√≠ characters i.e (Filename in other languages)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Run changed-files with quotepath disabled&#xA;      id: changed-files-quotepath&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        quotepath: &#34;false&#34;&#xA;&#xA;    - name: Run changed-files with quotepath disabled for a specified list of file(s)&#xA;      id: changed-files-quotepath-specific&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        files: test/test-√®.txt&#xA;        quotepath: &#34;false&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files using the last successful commit of the base branch&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;Push event&lt;/summary&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;      - name: Get branch name&#xA;        id: branch-name&#xA;        uses: tj-actions/branch-names@v6&#xA;&#xA;      - uses: nrwl/nx-set-shas@v3&#xA;        id: last_successful_commit_push&#xA;        with:&#xA;          main-branch-name: ${{ steps.branch-name.outputs.current_branch }} # Get the last successful commit for the current branch.&#xA;          workflow-id: &#39;test.yml&#39;&#xA;&#xA;      - name: Run changed-files with the commit of the last successful test workflow run&#xA;        id: changed-files-base-sha-push&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          base_sha: ${{ steps.last_successful_commit_push.outputs.base }}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;Pull request events &lt;/summary&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;      - name: Get branch name&#xA;        id: branch-name&#xA;        uses: tj-actions/branch-names@v5&#xA;&#xA;      - uses: nrwl/nx-set-shas@v3&#xA;        id: last_successful_commit_pull_request&#xA;        with:&#xA;          main-branch-name: ${{ steps.branch-name.outputs.base_ref_branch }} # Get the last successful commit on the master or main branch&#xA;          workflow_id: &#39;test.yml&#39;&#xA;&#xA;      - name: Run changed-files with the commit of the last successful test workflow run on the main branch&#xA;        id: changed-files-base-sha-pull-request&#xA;        uses: tj-actions/changed-files@v45&#xA;        with:&#xA;          base_sha: ${{ steps.last_successful_commit_pull_request.outputs.base }}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;p&gt;This setting overrides the commit sha used by setting &lt;code&gt;since_last_remote_commit&lt;/code&gt; to true. It is recommended to use either solution that works for your use case.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files but only return the directory names&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Run changed-files with dir_names&#xA;      id: changed-files-dir-names&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        dir_names: &#34;true&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files and return JSON formatted outputs&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Run changed-files with JSON output&#xA;      id: changed-files-json&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        json: &#34;true&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Get all changed files by commits pushed in the past&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    - name: Get changed-files since 2022-08-19&#xA;      id: changed-files-since&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        since: &#34;2022-08-19&#34;&#xA;&#xA;    - name: Get changed-files until 2022-08-20&#xA;      id: changed-files-until&#xA;      uses: tj-actions/changed-files@v45&#xA;      with:&#xA;        until: &#34;2022-08-20&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#inputs&#34;&gt;inputs&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Real-world usage üåê&lt;/h2&gt; &#xA;&lt;h3&gt;Open source projects üì¶&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vitejs/vite/raw/8da04227d6f818a8ad9efc0056101968037c2e36/.github/workflows/ci.yml#L61&#34;&gt;vitejs/vite: uses tj-actions/changed-files to automate testing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qgis/QGIS/raw/a5333497e90ac9de4ca70463d8e0b64c3f294d63/.github/workflows/code_layout.yml#L147&#34;&gt;qgis/QGIS: uses tj-actions/changed-files to automate spell checking&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coder/code-server/raw/c32a31d802f679846876b8ad9aacff6cf7b5361d/.github/workflows/build.yaml#L48&#34;&gt;coder/code-server: uses tj-actions/changed-files to automate detecting changes and run steps based on the outcome&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tldr-pages/tldr/raw/c1b714c55cb0048037b79a681a10d7f3ddb0164c/.github/workflows/codespell.yml#L18-L26&#34;&gt;tldr-pages/tldr: uses tj-actions/changed-files to automate detecting spelling errors&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/docker-node/raw/3c4fa6daf06a4786d202f2f610351837806a0380/.github/workflows/build-test.yml#L29&#34;&gt;nodejs/docker-node: uses tj-actions/changed-files to generate matrix jobs based on changes detected&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/refined-github/refined-github/raw/b754bfe58904da8a599d7876fdaaf18302785629/.github/workflows/features.yml#L35&#34;&gt;refined-github: uses tj-actions/changed-files to automate test URL validation in added/edited files&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awsdocs/aws-doc-sdk-examples/raw/2393723ef6b0cad9502f4852f5c72f7be58ca89d/.github/workflows/javascript.yml#L22&#34;&gt;aws-doc-sdk-examples: uses tj-actions/changed-files to automate testing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nhost/nhost/raw/71a8ce444618a8ac4d660518172fba4883c4014b/.github/workflows/ci.yaml#L44-L48&#34;&gt;nhost: uses tj-actions/changed-files to automate testing based on changes detected&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qmk/qmk_firmware/raw/7a737235ffd49c32d2c5561e8fe53fd96baa7f96/.github/workflows/lint.yml#L30&#34;&gt;qmk_firmware uses tj-actions/changed-files to run linters&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/argoproj/argo-cd/raw/5bc1850aa1d26301043be9f2fb825d88c80c111c/.github/workflows/ci-build.yaml#L33&#34;&gt;argo-cd uses tj-actions/changed-files to detect changed frontend or backend files&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/argoproj/argo-workflows/raw/baef4856ff2603c76dbe277c825eaa3f9788fc91/.github/workflows/ci-build.yaml#L34&#34;&gt;argo-workflows uses tj-actions/changed-files to run specific jobs based on changes detected&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And many more...&lt;/p&gt; &#xA;&lt;h3&gt;Scalability Example üìà&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tj-actions/changed-files/assets/17484350/23767413-4c51-42fb-ab1c-39ef72c44904&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important Notice ‚ö†Ô∏è&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Spaces in file names can introduce bugs when using bash loops. See: &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues/216&#34;&gt;#216&lt;/a&gt; However, this action will handle spaces in file names, with a recommendation of using a separator to prevent any hidden issues.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17484350/138558767-b13c90bf-a1ae-4e86-9520-70a6a4624f41.png&#34; alt=&#34;Screen Shot 2021-10-23 at 9 37 34 AM&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Migration guide üîÑ&lt;/h2&gt; &#xA;&lt;p&gt;With the switch from using grep&#39;s Extended regex to match files to the natively supported workflow glob pattern matching syntax introduced in &lt;a href=&#34;https://github.com/tj-actions/changed-files/releases/tag/v13&#34;&gt;v13&lt;/a&gt; you&#39;ll need to modify patterns used to match &lt;code&gt;files&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;...&#xA;      - name: Get specific changed files&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v24&#xA;        with:&#xA;          files: |&#xA;-            \.sh$&#xA;-            .(sql|py)$&#xA;-            ^(dir1|dir2)&#xA;+            **/*.{sh,sql,py}&#xA;+            {dir1,dir2}/**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Free software: &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits üëè&lt;/h2&gt; &#xA;&lt;p&gt;This package was created with &lt;a href=&#34;https://github.com/tj-actions/cookiecutter-action&#34;&gt;cookiecutter-action&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/auto-doc&#34;&gt;tj-actions/auto-doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/verify-changed-files&#34;&gt;tj-actions/verify-changed-files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/demo&#34;&gt;tj-actions/demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/demo2&#34;&gt;tj-actions/demo2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/demo3&#34;&gt;tj-actions/demo3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/release-tagger&#34;&gt;tj-actions/release-tagger&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Report Bugs üêõ&lt;/h2&gt; &#xA;&lt;p&gt;Report bugs at &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues&#34;&gt;https://github.com/tj-actions/changed-files/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are reporting a bug, please include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your operating system name and version.&lt;/li&gt; &#xA; &lt;li&gt;All essential details about your workflow that might be helpful in troubleshooting. (&lt;strong&gt;NOTE&lt;/strong&gt;: Ensure that you include full log outputs with debugging enabled)&lt;/li&gt; &#xA; &lt;li&gt;Detailed steps to reproduce the bug.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/jsoref&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2119212?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Josh Soref&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh Soref&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=jsoref&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/monoxgas&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1223016?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nick Landers&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Landers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=monoxgas&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Kras4ooo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1948054?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Krasimir Nikolov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krasimir Nikolov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Kras4ooo&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Kras4ooo&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/IvanPizhenko&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11859904?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ivan Pizhenko&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Pizhenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=IvanPizhenko&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=IvanPizhenko&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/talva-tr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/82046981?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;talva-tr&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;talva-tr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=talva-tr&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://bandism.net/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22633385?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ikko Ashimine&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=eltociear&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Zamiell&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5511220?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;James&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Zamiell&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/wushujames&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/677529?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;James Cheng&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Cheng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=wushujames&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://qiita.com/SUZUKI_Masaya&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15100604?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Masaya Suzuki&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masaya Suzuki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=massongit&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://fagai.net&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1772112?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;fagai&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fagai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=fagai&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/pkit&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/805654?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Constantine Peresypkin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Constantine Peresypkin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=pkit&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/deronnax&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/439279?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mathieu Dupuy&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mathieu Dupuy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=deronnax&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/JoeOvo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/100686542?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Joe Moggridge&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Moggridge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=JoeOvo&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.credly.com/users/thyarles/badges&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1340046?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Charles Santos&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Charles Santos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=thyarles&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kostiantyn-korniienko-aurea&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37180625?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kostiantyn Korniienko&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kostiantyn Korniienko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=kostiantyn-korniienko-aurea&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/lpulley&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7193187?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Logan Pulley&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Logan Pulley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=lpulley&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/kenji-miyake/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31987104?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kenji Miyake&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kenji Miyake&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=kenji-miyake&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/adonisgarciac&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/71078987?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;adonisgarciac&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;adonisgarciac&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=adonisgarciac&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=adonisgarciac&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/cfernhout&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22294606?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Chiel Fernhout&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chiel Fernhout&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=cfernhout&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/albertoperdomo2&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62241095?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Alberto Perdomo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alberto Perdomo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=albertoperdomo2&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://arthurvolant.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37664438?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Arthur&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arthur&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/issues?q=author%3AV0lantis&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=V0lantis&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/rodrigorfk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1995033?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rodrigo Fior Kuntzer&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rodrigo Fior Kuntzer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=rodrigorfk&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=rodrigorfk&#34; title=&#34;Tests&#34;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues?q=author%3Arodrigorfk&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/levenleven&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6463364?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Aleksey Levenstein&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aleksey Levenstein&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=levenleven&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dan-hill2802&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5046322?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Daniel Hill&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Hill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=dan-hill2802&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://keisukeyamashita.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/23056537?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;KeisukeYamashita&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KeisukeYamashita&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=KeisukeYamashita&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/codesculpture&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/63452117?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Aravind&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aravind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=codesculpture&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues?q=author%3Acodesculpture&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://lukaspfahler.de&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2308119?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lukas Pfahler&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Pfahler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Whadup&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ai-christianson/RA.Aid</title>
    <updated>2025-03-17T01:28:43Z</updated>
    <id>tag:github.com,2025-03-17:/ai-christianson/RA.Aid</id>
    <link href="https://github.com/ai-christianson/RA.Aid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Develop software autonomously.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;assets/logo-white-transparent.gif&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;assets/logo-black-transparent.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/assets/logo-black-transparent.png&#34; alt=&#34;RA.Aid - Develop software autonomously.&#34; style=&#34;margin-bottom: 20px;&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.8%2B-blue&#34; alt=&#34;Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-Beta-yellow&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Develop software autonomously.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;RA.Aid (pronounced &#34;raid&#34;) helps you develop software autonomously. It is a standalone coding agent built on LangGraph&#39;s agent-based task execution framework. The tool provides an intelligent assistant that can help with research, planning, and implementation of multi-step development tasks. RA.Aid can optionally integrate with &lt;code&gt;aider&lt;/code&gt; (&lt;a href=&#34;https://aider.chat/&#34;&gt;https://aider.chat/&lt;/a&gt;) via the &lt;code&gt;--use-aider&lt;/code&gt; flag to leverage its specialized code editing capabilities.&lt;/p&gt; &#xA;&lt;p&gt;The result is &lt;strong&gt;near-fully-autonomous software development&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enjoying RA.Aid?&lt;/strong&gt; Show your support by giving us a star ‚≠ê on &lt;a href=&#34;https://github.com/ai-christianson/RA.Aid&#34;&gt;GitHub&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a demo of RA.Aid adding a feature to itself:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/assets/demo-ra-aid-task-1.gif&#34; alt=&#34;RA.Aid Demo&#34; autoplay loop style=&#34;width: 100%; max-width: 800px;&#34;&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Complete documentation is available at &lt;a href=&#34;https://docs.ra-aid.ai&#34;&gt;https://docs.ra-aid.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Key sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/quickstart/installation&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/quickstart/recommended&#34;&gt;Recommended Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/quickstart/open-models&#34;&gt;Open Models Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/category/usage&#34;&gt;Usage Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/configuration/logging&#34;&gt;Logging System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/configuration/memory-management&#34;&gt;Memory Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/contributing&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ra-aid.ai/getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#development-setup&#34;&gt;Development Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üëã &lt;strong&gt;Pull requests are very welcome!&lt;/strong&gt; Have ideas for how to impove RA.Aid? Don&#39;t be shy - your help makes a real difference!&lt;/p&gt; &#xA; &lt;p&gt;üí¨ &lt;strong&gt;Join our Discord community:&lt;/strong&gt; &lt;a href=&#34;https://discord.gg/f6wYbzHYxV&#34;&gt;Click here to join&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;IMPORTANT: USE AT YOUR OWN RISK&lt;/strong&gt; ‚ö†Ô∏è&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This tool &lt;strong&gt;can and will&lt;/strong&gt; automatically execute shell commands and make code changes&lt;/li&gt; &#xA; &lt;li&gt;The --cowboy-mode flag can be enabled to skip shell command approval prompts&lt;/li&gt; &#xA; &lt;li&gt;No warranty is provided, either express or implied&lt;/li&gt; &#xA; &lt;li&gt;Always use in version-controlled repositories&lt;/li&gt; &#xA; &lt;li&gt;Review proposed changes in your git diff before committing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Step Task Planning&lt;/strong&gt;: The agent breaks down complex tasks into discrete, manageable steps and executes them sequentially. This systematic approach ensures thorough implementation and reduces errors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automated Command Execution&lt;/strong&gt;: The agent can run shell commands automatically to accomplish tasks. While this makes it powerful, it also means you should carefully review its actions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ability to Leverage Expert Reasoning Models&lt;/strong&gt;: The agent can use advanced reasoning models such as OpenAI&#39;s o1 &lt;em&gt;just when needed&lt;/em&gt;, e.g. to solve complex debugging problems or in planning for complex feature implementation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web Research Capabilities&lt;/strong&gt;: Leverages Tavily API for intelligent web searches to enhance research and gather real-world context for development tasks&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Three-Stage Architecture&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Research&lt;/strong&gt;: Analyzes codebases and gathers context&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Planning&lt;/strong&gt;: Breaks down tasks into specific, actionable steps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Implementation&lt;/strong&gt;: Executes each planned step sequentially&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What sets RA.Aid apart is its ability to handle complex programming tasks that extend beyond single-shot code edits. By combining research, strategic planning, and implementation into a cohesive workflow, RA.Aid can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Break down and execute multi-step programming tasks&lt;/li&gt; &#xA; &lt;li&gt;Research and analyze complex codebases to answer architectural questions&lt;/li&gt; &#xA; &lt;li&gt;Plan and implement significant code changes across multiple files&lt;/li&gt; &#xA; &lt;li&gt;Provide detailed explanations of existing code structure and functionality&lt;/li&gt; &#xA; &lt;li&gt;Execute sophisticated refactoring operations with proper planning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Three-Stage Architecture&lt;/strong&gt;: The workflow consists of three powerful stages:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Research&lt;/strong&gt; üîç - Gather and analyze information&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Planning&lt;/strong&gt; üìã - Develop execution strategy&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Implementation&lt;/strong&gt; ‚ö° - Execute the plan with AI assistance&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;Each stage is powered by dedicated AI agents and specialized toolsets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced AI Integration&lt;/strong&gt;: Built on LangChain and leverages the latest LLMs for natural language understanding and generation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Human-in-the-Loop Interaction&lt;/strong&gt;: Optional mode that enables the agent to ask you questions during task execution, ensuring higher accuracy and better handling of complex tasks that may require your input or clarification&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Comprehensive Toolset&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Shell command execution&lt;/li&gt; &#xA;   &lt;li&gt;Expert querying system&lt;/li&gt; &#xA;   &lt;li&gt;File operations and management&lt;/li&gt; &#xA;   &lt;li&gt;Memory management&lt;/li&gt; &#xA;   &lt;li&gt;Research and planning tools&lt;/li&gt; &#xA;   &lt;li&gt;Code analysis capabilities&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interactive CLI Interface&lt;/strong&gt;: Simple yet powerful command-line interface for seamless interaction&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modular Design&lt;/strong&gt;: Structured as a Python package with specialized modules for console output, processing, text utilities, and tools&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git Integration&lt;/strong&gt;: Built-in support for Git operations and repository management&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Python 3.8 or higher from &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install required system dependencies: &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# Install Chocolatey if not already installed (run in admin PowerShell)&#xA;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://community.chocolatey.org/install.ps1&#39;))&#xA;&#xA;# Install ripgrep using Chocolatey&#xA;choco install ripgrep&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install RA.Aid: &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;pip install ra-aid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Windows-specific dependencies: &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;pip install pywin32&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set up your API keys in a &lt;code&gt;.env&lt;/code&gt; file: &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;ANTHROPIC_API_KEY=your_anthropic_key&#xA;OPENAI_API_KEY=your_openai_key&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Unix/Linux Installation&lt;/h3&gt; &#xA;&lt;p&gt;RA.Aid can be installed directly using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ra-aid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Before using RA.Aid, you&#39;ll need API keys for the required AI services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set up API keys based on your preferred provider:&#xA;&#xA;# For Anthropic Claude models (recommended)&#xA;export ANTHROPIC_API_KEY=your_api_key_here&#xA;&#xA;# For OpenAI models (optional)&#xA;export OPENAI_API_KEY=your_api_key_here&#xA;&#xA;# For OpenRouter provider (optional)&#xA;export OPENROUTER_API_KEY=your_api_key_here&#xA;&#xA;# For OpenAI-compatible providers (optional)&#xA;export OPENAI_API_BASE=your_api_base_url&#xA;&#xA;# For Gemini provider (optional)&#xA;export GEMINI_API_KEY=your_api_key_here&#xA;&#xA;# For web research capabilities&#xA;export TAVILY_API_KEY=your_api_key_here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: When using the &lt;code&gt;--use-aider&lt;/code&gt; flag, the programmer tool (aider) will automatically select its model based on your available API keys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If ANTHROPIC_API_KEY is set, it will use Claude models&lt;/li&gt; &#xA; &lt;li&gt;If only OPENAI_API_KEY is set, it will use OpenAI models&lt;/li&gt; &#xA; &lt;li&gt;You can set multiple API keys to enable different features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can get your API keys from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anthropic API key: &lt;a href=&#34;https://console.anthropic.com/&#34;&gt;https://console.anthropic.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenAI API key: &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;https://platform.openai.com/api-keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenRouter API key: &lt;a href=&#34;https://openrouter.ai/keys&#34;&gt;https://openrouter.ai/keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gemini API key: &lt;a href=&#34;https://aistudio.google.com/app/apikey&#34;&gt;https://aistudio.google.com/app/apikey&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Complete installation documentation is available in our &lt;a href=&#34;https://docs.ra-aid.ai/quickstart/installation&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;RA.Aid is designed to be simple yet powerful. Here&#39;s how to use it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Basic usage&#xA;ra-aid -m &#34;Your task or query here&#34;&#xA;&#xA;# Research-only mode (no implementation)&#xA;ra-aid -m &#34;Explain the authentication flow&#34; --research-only&#xA;&#xA;# File logging with console warnings (default mode)&#xA;ra-aid -m &#34;Add new feature&#34; --log-mode file&#xA;&#xA;# Console-only logging with detailed output&#xA;ra-aid -m &#34;Add new feature&#34; --log-mode console --log-level debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information is available in our &lt;a href=&#34;https://docs.ra-aid.ai/category/usage&#34;&gt;Usage Examples&lt;/a&gt;, &lt;a href=&#34;https://docs.ra-aid.ai/configuration/logging&#34;&gt;Logging System&lt;/a&gt;, and &lt;a href=&#34;https://docs.ra-aid.ai/configuration/memory-management&#34;&gt;Memory Management&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line Options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-m, --message&lt;/code&gt;: The task or query to be executed (required except in chat mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--research-only&lt;/code&gt;: Only perform research without implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--provider&lt;/code&gt;: The LLM provider to use (choices: anthropic, openai, openrouter, openai-compatible, gemini)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--model&lt;/code&gt;: The model name to use (required for non-Anthropic providers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--use-aider&lt;/code&gt;: Enable aider integration for code editing. When enabled, RA.Aid uses aider&#39;s specialized code editing capabilities instead of its own native file modification tools. This option is useful when you need aider&#39;s specific editing features or prefer its approach to code modifications. This feature is optional and disabled by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--research-provider&lt;/code&gt;: Provider to use specifically for research tasks (falls back to --provider if not specified)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--research-model&lt;/code&gt;: Model to use specifically for research tasks (falls back to --model if not specified)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--planner-provider&lt;/code&gt;: Provider to use specifically for planning tasks (falls back to --provider if not specified)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--planner-model&lt;/code&gt;: Model to use specifically for planning tasks (falls back to --model if not specified)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cowboy-mode&lt;/code&gt;: Skip interactive approval for shell commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--expert-provider&lt;/code&gt;: The LLM provider to use for expert knowledge queries (choices: anthropic, openai, openrouter, openai-compatible, gemini)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--expert-model&lt;/code&gt;: The model name to use for expert knowledge queries (required for non-OpenAI providers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--hil, -H&lt;/code&gt;: Enable human-in-the-loop mode for interactive assistance during task execution&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--chat&lt;/code&gt;: Enable chat mode with direct human interaction (implies --hil)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--log-mode&lt;/code&gt;: Logging mode (choices: file, console) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;file&lt;/code&gt; (default): Logs to both file and console (only warnings and errors to console)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;console&lt;/code&gt;: Logs to console only at the specified log level with no file logging&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--log-level&lt;/code&gt;: Set specific logging level (debug, info, warning, error, critical) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;With &lt;code&gt;--log-mode=file&lt;/code&gt;: Controls the file logging level (console still shows only warnings+)&lt;/li&gt; &#xA;   &lt;li&gt;With &lt;code&gt;--log-mode=console&lt;/code&gt;: Controls the console logging level directly&lt;/li&gt; &#xA;   &lt;li&gt;Default: warning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--experimental-fallback-handler&lt;/code&gt;: Enable experimental fallback handler to attempt to fix too calls when the same tool fails 3 times consecutively. (OPENAI_API_KEY recommended as openai has the top 5 tool calling models.) See &lt;code&gt;ra_aid/tool_leaderboard.py&lt;/code&gt; for more info.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--pretty-logger&lt;/code&gt;: Enables colored panel-style formatted logging output for better readability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--temperature&lt;/code&gt;: LLM temperature (0.0-2.0) to control randomness in responses&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--disable-limit-tokens&lt;/code&gt;: Disable token limiting for Anthropic Claude react agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--recursion-limit&lt;/code&gt;: Maximum recursion depth for agent operations (default: 100)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--test-cmd&lt;/code&gt;: Custom command to run tests. If set user will be asked if they want to run the test command&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--auto-test&lt;/code&gt;: Automatically run tests after each code change&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--max-test-cmd-retries&lt;/code&gt;: Maximum number of test command retry attempts (default: 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--test-cmd-timeout&lt;/code&gt;: Timeout in seconds for test command execution (default: 300)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--version&lt;/code&gt;: Show program version number and exit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--server&lt;/code&gt;: Launch the server with web interface (alpha feature)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--server-host&lt;/code&gt;: Host to listen on for server (default: 0.0.0.0) (alpha feature)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--server-port&lt;/code&gt;: Port to listen on for server (default: 1818) (alpha feature)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example Tasks&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Code Analysis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Explain how the authentication middleware works&#34; --research-only&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complex Changes:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Refactor the database connection code to use connection pooling&#34; --cowboy-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automated Updates:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Update deprecated API calls across the entire codebase&#34; --cowboy-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code Research:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Analyze the current error handling patterns&#34; --research-only&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code Research:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Explain how the authentication middleware works&#34; --research-only&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refactoring:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Refactor the database connection code to use connection pooling&#34; --cowboy-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Human-in-the-Loop Mode&lt;/h3&gt; &#xA;&lt;p&gt;Enable interactive mode to allow the agent to ask you questions during task execution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Implement a new feature&#34; --hil&#xA;# or&#xA;ra-aid -m &#34;Implement a new feature&#34; -H&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This mode is particularly useful for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complex tasks requiring human judgment&lt;/li&gt; &#xA; &lt;li&gt;Clarifying ambiguous requirements&lt;/li&gt; &#xA; &lt;li&gt;Making architectural decisions&lt;/li&gt; &#xA; &lt;li&gt;Validating critical changes&lt;/li&gt; &#xA; &lt;li&gt;Providing domain-specific knowledge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Research&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/assets/demo-web-research-1.gif&#34; alt=&#34;RA.Aid Demo&#34; autoplay loop style=&#34;width: 100%; max-width: 800px;&#34;&gt; &#xA;&lt;p&gt;The agent features autonomous web research capabilities powered by the &lt;a href=&#34;https://tavily.com/&#34;&gt;Tavily&lt;/a&gt; API, seamlessly integrating real-world information into its problem-solving workflow. Web research is conducted automatically when the agent determines additional context would be valuable - no explicit configuration required.&lt;/p&gt; &#xA;&lt;p&gt;For example, when researching modern authentication practices or investigating new API requirements, the agent will autonomously:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for current best practices and security recommendations&lt;/li&gt; &#xA; &lt;li&gt;Find relevant documentation and technical specifications&lt;/li&gt; &#xA; &lt;li&gt;Gather real-world implementation examples&lt;/li&gt; &#xA; &lt;li&gt;Stay updated on latest industry standards&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While web research happens automatically as needed, you can also explicitly request research-focused tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Focused research task with web search capabilities&#xA;ra-aid -m &#34;Research current best practices for API rate limiting&#34; --research-only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to set your TAVILY_API_KEY environment variable to enable this feature.&lt;/p&gt; &#xA;&lt;h3&gt;Chat Mode&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/assets/demo-chat-mode-1.gif&#34; alt=&#34;Chat Mode Demo&#34; autoplay loop style=&#34;display: block; margin: 0 auto; width: 100%; max-width: 800px;&#34;&gt; &#xA;&lt;p&gt;Enable with &lt;code&gt;--chat&lt;/code&gt; to transform ra-aid into an interactive assistant that guides you through research and implementation tasks. Have a natural conversation about what you want to build, explore options together, and dispatch work - all while maintaining context of your discussion. Perfect for when you want to think through problems collaboratively rather than just executing commands.&lt;/p&gt; &#xA;&lt;h3&gt;Server with Web Interface&lt;/h3&gt; &#xA;&lt;p&gt;RA.Aid includes a modern server with web interface that provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Beautiful dark-themed chat interface&lt;/li&gt; &#xA; &lt;li&gt;Real-time streaming of command output&lt;/li&gt; &#xA; &lt;li&gt;Request history with quick resubmission&lt;/li&gt; &#xA; &lt;li&gt;Responsive design that works on all devices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To launch the server with web interface:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start with default settings (0.0.0.0:1818)&#xA;ra-aid --server&#xA;&#xA;# Specify custom host and port&#xA;ra-aid --server --server-host 127.0.0.1 --server-port 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Command line options for server with web interface:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--server&lt;/code&gt;: Launch the server with web interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--server-host&lt;/code&gt;: Host to listen on (default: 0.0.0.0)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--server-port&lt;/code&gt;: Port to listen on (default: 1818)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After starting the server, open your web browser to the displayed URL (e.g., &lt;a href=&#34;http://localhost:1818&#34;&gt;http://localhost:1818&lt;/a&gt;). The interface provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Left sidebar showing request history&lt;/li&gt; &#xA; &lt;li&gt;Main chat area with real-time output&lt;/li&gt; &#xA; &lt;li&gt;Input box for typing requests&lt;/li&gt; &#xA; &lt;li&gt;Automatic reconnection handling&lt;/li&gt; &#xA; &lt;li&gt;Error reporting and status messages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All ra-aid commands sent through the web interface automatically use cowboy mode for seamless execution.&lt;/p&gt; &#xA;&lt;h3&gt;Command Interruption and Feedback&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/assets/demo-chat-mode-interrupted-1.gif&#34; alt=&#34;Command Interrupt Demo&#34; autoplay loop style=&#34;display: block; margin: 0 auto; width: 100%; max-width: 800px;&#34;&gt; &#xA;&lt;p&gt;You can interrupt the agent at any time by pressing &lt;code&gt;Ctrl-C&lt;/code&gt;. This pauses the agent, allowing you to provide feedback, adjust your instructions, or steer the execution in a new direction. Press &lt;code&gt;Ctrl-C&lt;/code&gt; again if you want to completely exit the program.&lt;/p&gt; &#xA;&lt;h3&gt;Shell Command Automation with Cowboy Mode üèá&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;--cowboy-mode&lt;/code&gt; flag enables automated shell command execution without confirmation prompts. This is useful for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CI/CD pipelines&lt;/li&gt; &#xA; &lt;li&gt;Automated testing environments&lt;/li&gt; &#xA; &lt;li&gt;Batch processing operations&lt;/li&gt; &#xA; &lt;li&gt;Scripted workflows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Update all deprecated API calls&#34; --cowboy-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Important Safety Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cowboy mode skips confirmation prompts for shell commands&lt;/li&gt; &#xA; &lt;li&gt;Always use in version-controlled repositories&lt;/li&gt; &#xA; &lt;li&gt;Ensure you have a clean working tree before running&lt;/li&gt; &#xA; &lt;li&gt;Review changes in git diff before committing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Model Configuration&lt;/h3&gt; &#xA;&lt;p&gt;RA.Aid supports multiple AI providers and models. The default model is Anthropic&#39;s Claude 3 Sonnet (&lt;code&gt;claude-3-7-sonnet-20250219&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;When using the &lt;code&gt;--use-aider&lt;/code&gt; flag, the programmer tool (aider) automatically selects its model based on your available API keys. It will use Claude models if ANTHROPIC_API_KEY is set, or fall back to OpenAI models if only OPENAI_API_KEY is available.&lt;/p&gt; &#xA;&lt;p&gt;Note: The expert tool can be configured to use different providers (OpenAI, Anthropic, OpenRouter, Gemini) using the --expert-provider flag along with the corresponding EXPERT_*API_KEY environment variables. Each provider requires its own API key set through the appropriate environment variable.&lt;/p&gt; &#xA;&lt;h4&gt;Environment Variables&lt;/h4&gt; &#xA;&lt;p&gt;RA.Aid supports multiple providers through environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;: Required for the default Anthropic provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;: Required for OpenAI provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt;: Required for OpenRouter provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt;: Required for DeepSeek provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_API_BASE&lt;/code&gt;: Required for OpenAI-compatible providers along with &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GEMINI_API_KEY&lt;/code&gt;: Required for Gemini provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Expert Tool Environment Variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_OPENAI_API_KEY&lt;/code&gt;: API key for expert tool using OpenAI provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_ANTHROPIC_API_KEY&lt;/code&gt;: API key for expert tool using Anthropic provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_OPENROUTER_API_KEY&lt;/code&gt;: API key for expert tool using OpenRouter provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_OPENAI_API_BASE&lt;/code&gt;: Base URL for expert tool using OpenAI-compatible provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_GEMINI_API_KEY&lt;/code&gt;: API key for expert tool using Gemini provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPERT_DEEPSEEK_API_KEY&lt;/code&gt;: API key for expert tool using DeepSeek provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can set these permanently in your shell&#39;s configuration file (e.g., &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Default provider (Anthropic)&#xA;export ANTHROPIC_API_KEY=your_api_key_here&#xA;&#xA;# For OpenAI features and expert tool&#xA;export OPENAI_API_KEY=your_api_key_here&#xA;&#xA;# For OpenRouter provider&#xA;export OPENROUTER_API_KEY=your_api_key_here&#xA;&#xA;# For OpenAI-compatible providers&#xA;export OPENAI_API_BASE=your_api_base_url&#xA;&#xA;# For Gemini provider&#xA;export GEMINI_API_KEY=your_api_key_here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Model Examples&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Anthropic (Default)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Uses default model (claude-3-7-sonnet-20250219)&#xA;ra-aid -m &#34;Your task&#34;&#xA;&#xA;# Or explicitly specify:&#xA;ra-aid -m &#34;Your task&#34; --provider anthropic --model claude-3-5-sonnet-20241022&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using OpenAI&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Your task&#34; --provider openai --model gpt-4o&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using OpenRouter&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ra-aid -m &#34;Your task&#34; --provider openrouter --model mistralai/mistral-large-2411&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using DeepSeek&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Direct DeepSeek provider (requires DEEPSEEK_API_KEY)&#xA;ra-aid -m &#34;Your task&#34; --provider deepseek --model deepseek-reasoner&#xA;&#xA;# DeepSeek via OpenRouter&#xA;ra-aid -m &#34;Your task&#34; --provider openrouter --model deepseek/deepseek-r1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configuring Expert Provider&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The expert tool is used by the agent for complex logic and debugging tasks. It can be configured to use different providers (OpenAI, Anthropic, OpenRouter, Gemini, openai-compatible) using the --expert-provider flag along with the corresponding EXPERT_*API_KEY environment variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Use Anthropic for expert tool&#xA;export EXPERT_ANTHROPIC_API_KEY=your_anthropic_api_key&#xA;ra-aid -m &#34;Your task&#34; --expert-provider anthropic --expert-model claude-3-5-sonnet-20241022&#xA;&#xA;# Use OpenRouter for expert tool&#xA;export OPENROUTER_API_KEY=your_openrouter_api_key&#xA;ra-aid -m &#34;Your task&#34; --expert-provider openrouter --expert-model mistralai/mistral-large-2411&#xA;&#xA;# Use DeepSeek for expert tool&#xA;export DEEPSEEK_API_KEY=your_deepseek_api_key&#xA;ra-aid -m &#34;Your task&#34; --expert-provider deepseek --expert-model deepseek-reasoner&#xA;&#xA;# Use default OpenAI for expert tool&#xA;export EXPERT_OPENAI_API_KEY=your_openai_api_key&#xA;ra-aid -m &#34;Your task&#34; --expert-provider openai --expert-model o1&#xA;&#xA;# Use Gemini for expert tool&#xA;export EXPERT_GEMINI_API_KEY=your_gemini_api_key&#xA;ra-aid -m &#34;Your task&#34; --expert-provider gemini --expert-model gemini-2.0-flash-thinking-exp-1219&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Aider specific Environment Variables you can add:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AIDER_FLAGS&lt;/code&gt;: Optional comma-separated list of flags to pass to the underlying aider tool (e.g., &#34;yes-always,dark-mode&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Optional: Configure aider behavior&#xA;export AIDER_FLAGS=&#34;yes-always,dark-mode,no-auto-commits&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: For &lt;code&gt;AIDER_FLAGS&lt;/code&gt;, you can specify flags with or without the leading &lt;code&gt;--&lt;/code&gt;. Multiple flags should be comma-separated, and spaces around flags are automatically handled. For example, both &lt;code&gt;&#34;yes-always,dark-mode&#34;&lt;/code&gt; and &lt;code&gt;&#34;--yes-always, --dark-mode&#34;&lt;/code&gt; are valid.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Performance varies between models. The default Claude 3 Sonnet model currently provides the best and most reliable results.&lt;/li&gt; &#xA; &lt;li&gt;Model configuration is done via command line arguments: &lt;code&gt;--provider&lt;/code&gt; and &lt;code&gt;--model&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;--model&lt;/code&gt; argument is required for all providers except Anthropic (which defaults to &lt;code&gt;claude-3-7-sonnet-20250219&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information is available in our &lt;a href=&#34;https://docs.ra-aid.ai/quickstart/open-models&#34;&gt;Open Models Setup&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;RA.Aid implements a three-stage architecture for handling development and research tasks:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Research Stage&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Gathers information and context&lt;/li&gt; &#xA;   &lt;li&gt;Analyzes requirements&lt;/li&gt; &#xA;   &lt;li&gt;Identifies key components and dependencies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Planning Stage&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Develops detailed implementation plans&lt;/li&gt; &#xA;   &lt;li&gt;Breaks down tasks into manageable steps&lt;/li&gt; &#xA;   &lt;li&gt;Identifies potential challenges and solutions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Implementation Stage&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Executes planned tasks&lt;/li&gt; &#xA;   &lt;li&gt;Generates code or documentation&lt;/li&gt; &#xA;   &lt;li&gt;Performs necessary system operations&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Core Components&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Console Module&lt;/strong&gt; (&lt;code&gt;console/&lt;/code&gt;): Handles console output formatting and user interaction&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Processing Module&lt;/strong&gt; (&lt;code&gt;proc/&lt;/code&gt;): Manages interactive processing and workflow control&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Text Module&lt;/strong&gt; (&lt;code&gt;text/&lt;/code&gt;): Provides text processing and manipulation utilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tools Module&lt;/strong&gt; (&lt;code&gt;tools/&lt;/code&gt;): Contains various utility tools for file operations, search, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Core Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;langchain-anthropic&lt;/code&gt;: LangChain integration with Anthropic&#39;s Claude&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tavily-python&lt;/code&gt;: Tavily API client for web research&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;langgraph&lt;/code&gt;: Graph-based workflow management&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rich&amp;gt;=13.0.0&lt;/code&gt;: Terminal formatting and output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GitPython==3.1.41&lt;/code&gt;: Git repository management&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fuzzywuzzy==0.18.0&lt;/code&gt;: Fuzzy string matching&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python-Levenshtein==0.23.0&lt;/code&gt;: Fast string matching&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pathspec&amp;gt;=0.11.0&lt;/code&gt;: Path specification utilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pytest&amp;gt;=7.0.0&lt;/code&gt;: Testing framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pytest-timeout&amp;gt;=2.2.0&lt;/code&gt;: Test timeout management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ai-christianson/RA.Aid.git&#xA;cd RA.Aid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create and activate a virtual environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv venv&#xA;source venv/bin/activate  # On Windows use `venv\Scripts\activate`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install development dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -e &#34;.[dev]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run tests:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create a feature branch:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b feature/your-feature-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Make your changes and commit:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &#39;Add some feature&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Push to your fork:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin feature/your-feature-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Guidelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow PEP 8 style guidelines&lt;/li&gt; &#xA; &lt;li&gt;Add tests for new features&lt;/li&gt; &#xA; &lt;li&gt;Update documentation as needed&lt;/li&gt; &#xA; &lt;li&gt;Keep commits focused and message clear&lt;/li&gt; &#xA; &lt;li&gt;Ensure all tests pass before submitting PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information is available in our &lt;a href=&#34;https://docs.ra-aid.ai/contributing&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&#34;https://raw.githubusercontent.com/ai-christianson/RA.Aid/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2024 AI Christianson&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: Please report bugs and feature requests on our &lt;a href=&#34;https://github.com/ai-christianson/RA.Aid/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Repository&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ai-christianson/RA.Aid&#34;&gt;https://github.com/ai-christianson/RA.Aid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ai-christianson/RA.Aid#readme&#34;&gt;https://github.com/ai-christianson/RA.Aid#readme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RIP-Comm/sossoldi</title>
    <updated>2025-03-17T01:28:43Z</updated>
    <id>tag:github.com,2025-03-17:/RIP-Comm/sossoldi</id>
    <link href="https://github.com/RIP-Comm/sossoldi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#34;Sossoldi&#34; is a wealth management / personal finance / Net Worth tracking app, made with Flutter.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/assets/iosicon.png&#34; width=&#34;100&#34; alt=&#34;Sossoldi icon&#34;&gt; &#xA; &lt;h1&gt;Sossoldi&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Wealth management app&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.com/invite/PcaUZnvPzS&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/919139369774891088?style=flat&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/#Contributing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-blue&#34; alt=&#34;Shield: Contributions Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://ios.sossoldi.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/docs/assets/app-store-badge.svg?sanitize=true&#34; height=&#34;50&#34; alt=&#34;Download on the App Store&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://android.sossoldi.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/docs/assets/google-play-badge.png&#34; height=&#34;50&#34; alt=&#34;Get it on Google Play&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h1&gt;Sossoldi (Wealth management app)&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Sossoldi&lt;/strong&gt; is a free and open source wealth management / personal finance / Net Worth tracking app, made with Flutter.&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/assets/sossoldi%20project%20cover.jpg&#34; width=&#34;1000&#34; alt=&#34;Sossoldi icon&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;‚ùì What problem we are solving &amp;amp; why&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://retireinprogress.com/&#34;&gt;Mr. Rip&lt;/a&gt; is a blogger that has a &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1ilL6rBdzIQ6yRotqOKLUKI7KXFxu5_cZ5FQgdYTSHJk/edit#gid=138629885&#34;&gt;spreadsheet&lt;/a&gt; in which he tracks his net worth. Sossoldi is a Mobile + Desktop app that aims at replacing that spreadsheet and make it easier for everyone to track their net worth even if they are not as skilled with Google Sheets or Excel.&lt;/p&gt; &#xA;&lt;p&gt;The app is being developed using the &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;Flutter&lt;/a&gt; framework which makes it possible to have one codebase for different platforms (Android, iOS, Windows, macOS, Linux). We are currently working on a beta which hopefully will be out soon.&lt;/p&gt; &#xA;&lt;h2&gt;This app is for you if you want to...&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìà track your net worth&lt;/li&gt; &#xA; &lt;li&gt;üí∏ track your expenses to better understand where you are spending your money&lt;/li&gt; &#xA; &lt;li&gt;üëÄ keep track of your investments&lt;/li&gt; &#xA; &lt;li&gt;ü™¶ keep everything in one place like Mr. Rip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What features do we want to implement?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üí∏ Track expenses (even recurrent ones)&lt;/li&gt; &#xA; &lt;li&gt;üè¶ Track different bank accounts&lt;/li&gt; &#xA; &lt;li&gt;üìä Graphs, statistics and reports&lt;/li&gt; &#xA; &lt;li&gt;üíª All data are stored locally (with the option to share it in different platforms)&lt;/li&gt; &#xA; &lt;li&gt;üëÄ Track investments: Stocks, Bonds, Crypto, Private equity&lt;/li&gt; &#xA; &lt;li&gt;üí∂ Track taxes&lt;/li&gt; &#xA; &lt;li&gt;üí¥ Net worth on different currencies&lt;/li&gt; &#xA; &lt;li&gt;‚ÜîÔ∏è Import/export data&lt;/li&gt; &#xA; &lt;li&gt;üîó Link bank accounts that support the OpenBanking PSD2 API&lt;/li&gt; &#xA; &lt;li&gt;ü§ì Advanced onboarding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/RIP-Comm/sossoldi/main/assets/Sossoldi-portfolio-card-image.png&#34; width=&#34;500&#34; alt=&#34;Sossoldi icon&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Phase 1 (Ongoing)&lt;/h2&gt; &#xA;&lt;p&gt;We will not build the complete app all at once. We will start from the basic features and then we will move onto the others. Phase 1 will be completed when the following features will be ready:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üí∏ Expenses (even recurrent ones) tracker&lt;/li&gt; &#xA; &lt;li&gt;ü§ë Income tracker&lt;/li&gt; &#xA; &lt;li&gt;‚öñÔ∏è Bank accounts balance (without the use of API)&lt;/li&gt; &#xA; &lt;li&gt;üìä Basic stats&lt;/li&gt; &#xA; &lt;li&gt;üì± Data stored only locally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The pages that will be implemented are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dashboard&lt;/li&gt; &#xA; &lt;li&gt;Movements page&lt;/li&gt; &#xA; &lt;li&gt;Basic settings&lt;/li&gt; &#xA; &lt;li&gt;Basic onboarding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to help with this project you are more than welcome! Sossoldi is completely free and open source, the best place to start is from the issue tab and look for something that seems interesting to you. If you are unsure on where to start feel free to reach out to us on &lt;a href=&#34;https://discord.sossoldi.com&#34;&gt;Discord&lt;/a&gt;, we will be more than happy to help you find what&#39;s best for you!&lt;/p&gt; &#xA;&lt;p&gt;Also, you can refer to internal docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rip-comm.github.io/sossoldi/setup/setup.html&#34;&gt;Setup Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rip-comm.github.io/sossoldi/contributing/PR-guide.html&#34;&gt;PR Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Useful links to get started&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RIP-Comm/sossoldi&#34;&gt;Github Repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.sossoldi.com&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/file/6NyY9yqunpbU7HIkbNEAL3/Sossoldi-App?node-id=0%3A1&#34;&gt;Design file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.federicopozzato.it/portfolio/sossoldi-personal-finance-app&#34;&gt;UX Research&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/file/xjVHAaHznRW1OFAJvp8DXn/Sossoldi-App---Figjam?node-id=0%3A1&#34;&gt;Information architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.notion.so/Sossoldi-Personal-finance-app-dd37eb9cbb2c44e59dd74f85e843e865&#34;&gt;Interface study&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;New to Flutter? Here are some good (and free!) resources:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/Freecodecamp/search?query=flutter&#34;&gt;FreeCodeCampCourses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/#new-to-flutter&#34;&gt;Flutter Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ&#34;&gt;Flutter for beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCYhryp9JC06XRKQUQsLZlfQ&#34;&gt;Flutter course in italian&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>