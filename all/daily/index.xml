<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-15T01:24:00Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TryQuiet/quiet</title>
    <updated>2023-09-15T01:24:00Z</updated>
    <id>tag:github.com,2023-09-15:/TryQuiet/quiet</id>
    <link href="https://github.com/TryQuiet/quiet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A private, p2p alternative to Slack and Discord built on Tor &amp; IPFS&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://avatars.githubusercontent.com/u/59660937?s=200&amp;amp;v=4&#34; alt=&#34;Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;Quiet&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Encrypted p2p team chat with no servers, just Tor. &lt;br&gt; &#xA; &lt;!--    &lt;a href=&#34;https://tryquiet.org&#34;&gt;&lt;strong&gt;tryquiet.org Â»&lt;/strong&gt;&lt;/a&gt; --&gt; &lt;a href=&#34;https://github.com/TryQuiet/quiet/releases/tag/quiet%401.8.0&#34;&gt;&lt;strong&gt;Downloads&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#how-it-works&#34;&gt;&lt;strong&gt;How it Works&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#features&#34;&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/TryQuiet/monorepo/wiki/Threat-Model&#34;&gt;&lt;strong&gt;Threat Model&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#our-mission&#34;&gt;&lt;strong&gt;Mission&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/TryQuiet/monorepo/wiki/Quiet-FAQ&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/TryQuiet/quiet/raw/develop/packages/desktop/README.md&#34;&gt;&lt;strong&gt;Developer setup&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; Quiet is an alternative to team chat apps like Slack, Discord, and Element that does not require trusting a central server or running one&#39;s own. In Quiet, all data syncs directly between a team&#39;s devices over &#xA;&lt;a href=&#34;https://torproject.org&#34;&gt;Tor&lt;/a&gt; with no server required. &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Quiet is not audited and should not be used when privacy and security are critical. It lacks basic features and probably won&#39;t replace your Slack or Discord yet. That said, it works surprisingly well and we use it daily as a Slack replacement.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Quiet is for fans of software freedom, decentralization and privacy tech, and for anyone craving a future where humanity can collaborate effectively online without trusting our communities, networks, and data to giant corporations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quiet is written (mostly) in TypeScript, with Electron and React Native frontends, and welcomes outside contributions! See: &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#contributing-to-quiet&#34;&gt;Contributing to Quiet&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/213678/177447638-29d6805c-5458-4f5e-b4ed-7a5d6cb51f6e.png&#34; alt=&#34;Screenshot&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;While apps like Slack, Discord, and Signal use central servers, Quiet syncs messages directly between a team&#39;s devices, over Tor, with no server required.&lt;/p&gt; &#xA;&lt;p&gt;Each group of people (Quiet calls them &#34;communities&#34;) gets their own insular network, so that data from one community never touches the devices of Quiet users in &lt;em&gt;other&lt;/em&gt; communities. Not even in encrypted form!&lt;/p&gt; &#xA;&lt;p&gt;Message syncing is taken care of by a project called &lt;a href=&#34;https://orbitdb.org&#34;&gt;OrbitDB&lt;/a&gt;, which works like a mashup of Git, a &lt;a href=&#34;https://en.wikipedia.org/wiki/Gossip_protocol&#34;&gt;gossip protocol&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/BitTorrent&#34;&gt;BitTorrent&lt;/a&gt;; it broadcasts new messages, syncs the latest messages, and fetches files. Syncing means that users typically receive all messages sent while they were offline.&lt;/p&gt; &#xA;&lt;p&gt;Invites, access, and usernames are granted by a community owner, i.e. whoever creates the community. The owner hands out an &#34;invitation code&#34; which invitees use to connect to the owner&#39;s device, register a username, and get a standard cryptographic certificate so they can prove to other peers they&#39;re part of the community.&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/TryQuiet/monorepo/wiki/Quiet-FAQ&#34;&gt;FAQ&lt;/a&gt; for answers to common questions and a comparison of Quiet with similar apps.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To try Quiet, download the &lt;a href=&#34;https://github.com/TryQuiet/quiet/releases/tag/quiet%401.8.0&#34;&gt;latest release&lt;/a&gt; for your platform (.dmg for macOS, .exe for Windows, etc.) and install it in the normal way. Then create a community and open the community&#39;s settings to invite members.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to help develop Quiet, see &lt;a href=&#34;https://raw.githubusercontent.com/TryQuiet/quiet/develop/#contributing-to-quiet&#34;&gt;Contributing to Quiet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Team Chat&lt;/strong&gt; - Create a &#34;community&#34; for your team or organization and invite members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-to-end Encryption&lt;/strong&gt; - All data is encrypted end-to-end between member devices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Channels&lt;/strong&gt; - Organize chats in Slack-like channels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt; - Send and receive images, with copy/paste, drag &amp;amp; drop, and image previews.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Files&lt;/strong&gt; - Send and receive giant files without arbitrary limits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt; - Get desktop notifications for new messages, with optional sounds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Invite links&lt;/strong&gt; - Share invite links, just like in WhatsApp, Signal, or Discord.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keyboard Controls&lt;/strong&gt; - Navigate channels without using the mouse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Desktop Apps&lt;/strong&gt; - Desktop apps for Mac, Windows, and Linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android App&lt;/strong&gt; - A fully peer-to-peer Android app with working notifications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No email or phone number required&lt;/strong&gt; - Unlike Slack, Discord, WhatsApp, Telegram, and Signal, no email or phone number is required to create or join a community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Planned (but still-missing) features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS App&lt;/strong&gt; - Join communities and sync messages on iOS, with no central server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct Messages&lt;/strong&gt; - Send and receive direct messages that are encrypted to the recipient and unreadable by other community members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mentions&lt;/strong&gt; - Send @ mentions that notify other users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Removal&lt;/strong&gt; - Remove users from your community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User Profiles&lt;/strong&gt; - Add an avatar or bio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Deletion&lt;/strong&gt; - Delete individual messages and set timed deletion rules (&#34;disappearing messages&#34;) for the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; - See your own connection status and the online status of other users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reactions&lt;/strong&gt; - React with emojis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Communities&lt;/strong&gt; - Join multiple communities, as you would in Slack or Discord.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Account Recovery&lt;/strong&gt; - Recover owner accounts from a backup phrase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Private channels&lt;/strong&gt; - Create private channels with multiple members that are unreadable to the community at large.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Post-1.0 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Large Communities&lt;/strong&gt; - Create a community with 1000 members or more (right now ~30-100 members is the limit.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Moderation&lt;/strong&gt; - Appoint moderators who can hide messages and shadowban or remove users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spam and Denial-of-Service Protection&lt;/strong&gt; - Settings to automatically remove users who send disruptive messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt; - Robust message search.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Threads&lt;/strong&gt; - Reply to messages in threads.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tor Bridges&lt;/strong&gt; - Connect via public or private bridges to avoid Internet censorship.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tor Browser Support&lt;/strong&gt; - Join communities as a full member with Tor Browser, without downloading an app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browser Support&lt;/strong&gt; - Join communities with &lt;em&gt;any&lt;/em&gt; modern browser via &lt;a href=&#34;https://gitlab.torproject.org/tpo/core/arti/-/issues/103&#34;&gt;Arti-in-WASM&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Publishing&lt;/strong&gt; - Share files (or entire websites) from your community to the web, via Tor, &lt;a href=&#34;https://github.com/asn-d6/onionbalance&#34;&gt;OnionBalance&lt;/a&gt;, and &lt;a href=&#34;https://www.tor2web.org/&#34;&gt;Tor2web&lt;/a&gt; + IPFS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technical overview&lt;/h2&gt; &#xA;&lt;p&gt;This is a concise technical summary of the main points.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Granting access:&lt;/strong&gt; community owners use standard PKI (&lt;a href=&#34;https://pkijs.org/&#34;&gt;PKI.js&lt;/a&gt;) to grant access, with each community owner serving as the community&#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Certificate_authority&#34;&gt;certificate authority&lt;/a&gt;; this is handled by Quiet and transparent to users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; a valid signed certificate from the community owner is required to connect to peers, receive connections from peers, and for messages to be visible to other peers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Networking:&lt;/strong&gt; peers connect via &lt;a href=&#34;https://en.wikipedia.org/wiki/Tor_(network)#Onion_services&#34;&gt;Tor onion services&lt;/a&gt;, exclusively with their fellow community members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Privacy:&lt;/strong&gt; Tor encrypts all data in transit, and a Quiet user&#39;s device connects only to the devices of their fellow community members, so all messages are encrypted to recipients.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Syncing:&lt;/strong&gt; IPFS and &lt;a href=&#34;https://orbitdb.org&#34;&gt;OrbitDB&lt;/a&gt;, an &lt;a href=&#34;https://ipfs.io/&#34;&gt;IPFS&lt;/a&gt;-based &lt;a href=&#34;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&#34;&gt;CRDT&lt;/a&gt;, ensure that all data (messages, user data, etc) syncs between peers with &lt;a href=&#34;https://arxiv.org/abs/2012.00472&#34;&gt;eventual consistency&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous messaging:&lt;/strong&gt; because messages sync to all members, members can communicate without being contemporaneously online, provided that there is &#34;continuous liveness&#34;, a continuous chain of online peers who each sync the latest updates, between the sender and the recipient.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Identity:&lt;/strong&gt; a valid certificate from the community owner on account creation establishes a username, which the owner attests is unique; in future versions, Quiet will warn all members if community owners are caught issuing non-unique usernames, to protect against impersonation by malicious or compromised owners. (See: &lt;a href=&#34;https://github.com/TryQuiet/monorepo/issues/119&#34;&gt;#119&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Invitation:&lt;/strong&gt; to invite new members, community owners provide (via some other secure channel) an onion address that points to a registration API which accepts a certificate signing request, responds with a signed certificate, and provides sufficient peer information to connect to other peers; in future versions this onion address will expire. (See: &lt;a href=&#34;https://github.com/TryQuiet/monorepo/issues/536&#34;&gt;#536&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Account recovery:&lt;/strong&gt; owners must back up their data (e.g. by copying a folder, or someday with a wallet-style passphrase) and members request new accounts from owners.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User removal:&lt;/strong&gt; TBD, but likely a combination of expiring invitation onion addresses, certificate revocation, and message-layer encryption with updated keys.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple device support:&lt;/strong&gt; TBD, but most likely based on &lt;a href=&#34;https://github.com/local-first-web/auth&#34;&gt;local-first-web/auth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile push notifications:&lt;/strong&gt; barring a major victory for consumer rights, iOS notifications require using a centralized push notification service that connects to Apple, but message data can still be encrypted; in proof-of-concept, Quiet works well as an always-on background app on Android, so Android versions will likely not require a push notification server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stack:&lt;/strong&gt; Our backend is in Node.js (on iOS/Android we use &lt;a href=&#34;https://github.com/nodejs-mobile&#34;&gt;nodejs-mobile&lt;/a&gt;); we use Electron on desktop and React Native on mobile.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Our Mission&lt;/h2&gt; &#xA;&lt;p&gt;We are building Quiet to sharpen the tools that &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_society&#34;&gt;open societies&lt;/a&gt; use to hold power accountable. Each year, movements use the Internet to hold power accountable in breathtaking new ways. But the rise of big tech has made the Internet &lt;em&gt;itself&lt;/em&gt; seem like &lt;em&gt;yet another&lt;/em&gt; unaccountable power. The medium that brought us &lt;em&gt;Occupy&lt;/em&gt; Wall Street now looks like regular old Wall Street. We believe this happened because software became too dependent on company-run infrastructure, which undermined the role &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_software&#34;&gt;free software&lt;/a&gt; has historically played in holding the software industry accountable. Our goal is to fix that.&lt;/p&gt; &#xA;&lt;p&gt;In the 2000s, when key dominant tech products had viable free software competitors that were radically pro-user (products like &lt;a href=&#34;https://en.wikipedia.org/wiki/Firefox&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/BitTorrent&#34;&gt;BitTorrent&lt;/a&gt;, &lt;a href=&#34;https://www.videolan.org/&#34;&gt;VLC&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/HandBrake&#34;&gt;Handbrake&lt;/a&gt;, or &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux&#34;&gt;Linux&lt;/a&gt;) there was a limit to how much big tech could abuse users before users fled.&lt;/p&gt; &#xA;&lt;p&gt;But software for communication and collaboration seemed to require servers, whose cost grew with the software&#39;s popularity, so the question &#34;who runs the server?&#34; became a dilemma for free software projects. Should the project itself run the server? What about when costs grew too high? Should users run the server? But only a small niche of hobbyists have servers! Should an organization run the server? If so, then that organization now controls the data and relationships that make the product useful, limiting the freedom to &lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_(software_development)#Forking_of_free_and_open-source_software&#34;&gt;fork&lt;/a&gt; and flee that makes free software so accountable and desirable. Reddit, for example, &lt;a href=&#34;https://www.reddit.com/r/changelog/comments/6xfyfg/an_update_on_the_state_of_the_redditreddit_and/&#34;&gt;was once free software&lt;/a&gt;, but because forking Reddit&#39;s &lt;em&gt;code&lt;/em&gt; would never have resulted in anything more than an empty website (since all the conversations and relationships that make Reddit what it is sit on &lt;em&gt;company-run servers&lt;/em&gt;) Reddit being free software never gave Reddit&#39;s users any real power to hold it accountable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Federation_(information_technology)&#34;&gt;Federation&lt;/a&gt; is a proposed solution to this dilemma, but Gmail shows its limits. After all, email is the most well-known federated product, but Google can still build must-have features like spam filtering on the server side, and Gmail controls a user&#39;s email address, so exiting Gmail means updating dozens or hundreds of accounts created with that address. Exiting Gmail might be easier than exiting Facebook or Instagram, but no Gmail competitor can make exiting Gmail as easy and delightful an experience as Firefox made exiting Internet Explorer, because Gmail controls infrastructure, where Internet Explorer never did. So while federation does help, we must do better if we want to hold big tech accountable.&lt;/p&gt; &#xA;&lt;p&gt;Regulation is an even weaker proposed solution. Even when regulation worksâand a quick look at the media, telecom, energy, or banking industries will illustrate its limitsâregulation tends to create a cozy relationship between industry and regulators that makes industries easy targets for government subversion. For example, the highly-regulated telecom industry &lt;a href=&#34;https://www.theguardian.com/world/2013/jun/06/nsa-phone-records-verizon-court-order&#34;&gt;bends&lt;/a&gt; &lt;a href=&#34;https://www.vice.com/en/article/wx8jax/researchers-find-powerful-ss7-cellphone-location-surveillance-in-europe-middle-east-australia&#34;&gt;over&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Room_641A&#34;&gt;backwards&lt;/a&gt; every time governments want help carrying out unpopular mass surveillance. Is this what we want from big tech?&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re building Quiet because we believe that, for a broad and growing class of software, the best answer to the &#34;who runs the server?&#34; dilemma is &#34;no one.&#34; Eliminate the server; in terms of accountability, it is a burden and a weakness. By eliminating servers from software&#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Attack_surface&#34;&gt;attack surface&lt;/a&gt;, software can be more private and secure. By eliminating exponentially growing server costs and the expertise-intensive work of scaling servers, software can be built by smaller teams under less financial pressure to betray users. Most importantly, by eliminating the server operator&#39;s control of relationships and data, users will be free to fork and exit, so they will once again have real power to hold software accountable.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re building Quiet to spark a new phase of the free software movement where it is easy and normal to build apps this way. We want to make a private alternative to Slack &amp;amp; Discord that people love, to figure out the best and easiest technical approach along the way, andâby doing all thisâto blaze a trail that other free software teams building other products can follow. Once one team (us, we hope!) can build a good alternative to Slack that doesn&#39;t use servers, other teams can build alternatives to Google Docs, Figma, Asana, Trello, 1Password, and so on, until somedayâand this is technically much more difficultâhumanity can build fully-forkable alternatives to things like Facebook, Twitter, Instagram, or even more complex applications. Big tech&#39;s users will be free to flee, and the Internet can stop being yet another unaccountable power, and keep being the breathtaking medium for holding power accountable that open societies need.&lt;/p&gt; &#xA;&lt;p&gt;Join us, and let&#39;s figure this out.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Quiet&lt;/h2&gt; &#xA;&lt;p&gt;Even though Quiet is completely peer-to-peer, it is mostly written in TypeScript and will be familiar to anyone accustomed to Node.js web development. Desktop and mobile versions share a common Node.js &lt;a href=&#34;https://github.com/TryQuiet/monorepo/tree/develop/packages/backend&#34;&gt;backend&lt;/a&gt; and React &lt;a href=&#34;https://github.com/TryQuiet/monorepo/tree/develop/packages/state-manager&#34;&gt;state manager&lt;/a&gt;, with &lt;a href=&#34;https://torproject.org&#34;&gt;Tor&lt;/a&gt; binaries for each platform and architecture, using Electron and React Native and for their respective frontends.&lt;/p&gt; &#xA;&lt;p&gt;To get started hacking on Quiet, follow the instructions for &lt;a href=&#34;https://github.com/TryQuiet/quiet/raw/develop/packages/desktop/README.md&#34;&gt;Quiet Desktop&lt;/a&gt; or &lt;a href=&#34;https://github.com/TryQuiet/monorepo/tree/develop/packages/mobile#readme&#34;&gt;Quiet Mobile&lt;/a&gt;. (If you&#39;re new to the project, start with Quiet Desktop, as it&#39;s more stable and vastly easier to start hacking on.) Here are some &lt;a href=&#34;https://github.com/orgs/TryQuiet/projects/3/views/1?filterQuery=label%3A%22good+first+issue%22&#34;&gt;good first issues&lt;/a&gt;, and you can see upcoming priorities in our &lt;a href=&#34;https://github.com/orgs/TryQuiet/projects/3/views/1&#34;&gt;project board&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most of all, if you&#39;re interested in contributing, be in touch! Drop us a line at &lt;a href=&#34;mailto:h@quiet.chat&#34;&gt;h@quiet.chat&lt;/a&gt; and we&#39;ll add you to the project&#39;s Quiet community and (if you like) plan an onboarding session.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ianpatt/sfse</title>
    <updated>2023-09-15T01:24:00Z</updated>
    <id>tag:github.com,2023-09-15:/ianpatt/sfse</id>
    <link href="https://github.com/ianpatt/sfse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Starfield Script Extender&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/ianpatt/sfse/workflows/testbuild/badge.svg?sanitize=true&#34; alt=&#34;testbuild&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ianpatt/sfse&#xA;cmake -B sfse/build -S sfse&#xA;cmake --build sfse/build --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Runtime Support&lt;/h2&gt; &#xA;&lt;p&gt;SFSE supports the latest version of Starfield on Steam. The MS Store/Gamepass version is not supported. No, making it so you can see the files doesn&#39;t solve the problem.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenBMB/AgentVerse</title>
    <updated>2023-09-15T01:24:00Z</updated>
    <id>tag:github.com,2023-09-15:/OpenBMB/AgentVerse</id>
    <link href="https://github.com/OpenBMB/AgentVerse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ð¤ AgentVerse ðª provides a flexible framework that simplifies the process of building custom multi-agent environments for large language models (LLMs).&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; ð¤ AgentVerse ðª &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;p&gt;A Framework for Multi-LLM Environment Simulation&lt;/p&gt; &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;License: Apache2&#34; src=&#34;https://img.shields.io/badge/License-Apache_2.0-green.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/release/python-3916/&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/badge/python-3.9+-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/imgs/title.png&#34; width=&#34;512&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AgentVerse&lt;/strong&gt; offers a versatile framework that streamlines the process of creating custom multi-agent environments for large language models (LLMs). Designed to facilitate swift development and customization with minimal effort, our framework empowers researchers to concentrate on their research, rather than being bogged down by implementation details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;â¨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ð¥³ &lt;strong&gt;Efficient Environment Building:&lt;/strong&gt; Our framework provides a collection of essential building blocks for effortlessly creating a multi-agent environment. With only a few lines in a configuration file, you can easily construct basic environments such as a chat room for LLMs. This process entails defining the environment&#39;s settings and prompts for LLMs, enabling researchers like you to concentrate on experimentation and analysis.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;âï¸ &lt;strong&gt;Customizable Components&lt;/strong&gt;: AgentVerse simplifies the multi-agent environment by dividing it into five functional modules and defining their respective interfaces. For complex environments that cannot be constructed directly using the basic modules offered in AgentVerse, you can customize one or more of the interfaces within these five functional modules to efficiently create your own multi-agent environment according to your requirements.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ð  &lt;strong&gt;Tools (Plugins) Utilization&lt;/strong&gt;: AgentVerse supports the multi-agent environments with tools. Currently, AgentVerse supports tools provided in &lt;a href=&#34;https://github.com/OpenBMB/BMTools&#34;&gt;BMTools&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ð° What&#39;s New&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2023/8/22] ð We&#39;re excited to share our work-in-progress paper &lt;a href=&#34;https://arxiv.org/abs/2308.10848&#34;&gt;AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors in Agents&lt;/a&gt; related to this repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;616&#34; alt=&#34;Screen Shot 2023-09-01 at 12 08 57 PM&#34; src=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/6db1c907-b7fc-42f9-946c-89853a28f386&#34;&gt; &#xA;&lt;p&gt;You could refer the stay-tuned code in this &lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/tree/AgentVerse-TaskSolving&#34;&gt;branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2023/6/5] ð We are thrilled to present an array of &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-simple-demo-video&#34;&gt;demos&lt;/a&gt;, including &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#nlp-classroom&#34;&gt;NLP Classroom&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#prisoner-dilemma&#34;&gt;Prisoner Dilemma&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#software-design&#34;&gt;Software Design&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#database-administrator-dba&#34;&gt;Database Administrator&lt;/a&gt;, and a simple &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#pokemon&#34;&gt;H5 Pokemon Game&lt;/a&gt; that enables the interaction with the characters in Pokemon! Try out these demos and have fun!&lt;/li&gt; &#xA; &lt;li&gt;[2023/5/1] ð &lt;a href=&#34;https://github.com/OpenBMB/AgentVerse&#34;&gt;AgentVerse&lt;/a&gt; is officially launched!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ð Coming Soon&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Code release of our &lt;a href=&#34;https://arxiv.org/abs/2308.10848&#34;&gt;paper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support more sophisticated memory for conversation history&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for local LLM&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Auto-generate UI based on the given multi-agent environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ð¾ Simple Demo Video&lt;/h2&gt; &#xA;&lt;p&gt;We demonstrate the following cases that are expertly crafted by AgentVerse.&lt;/p&gt; &#xA;&lt;!--&#xA;### [![Demo video](https://i.imgur.com/vKb2F1B.png)](https://youtu.be/9JCVfzMFhaM)&#xA;--&gt; &#xA;&lt;!--![image](imgs/multiagent-min.gif)--&gt; &#xA;&lt;!-- - **NLP Classroom**: --&gt; &#xA;&lt;h4&gt;NLP Classroom&lt;/h4&gt; &#xA;&lt;p&gt;In the NLP class, the professor and students engage in interactive communication. When students have a question, they raise their hands and patiently wait for the professor to call on them. Only after being called on by the professor, students can speak and ask their questions.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the NLP Classroom example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Prisoner Dilemma&lt;/h4&gt; &#xA;&lt;p&gt;A prisoner&#39;s Dilemma is a thought experiment that challenges two completely rational agents to a dilemma: they can cooperate with their partner for mutual benefit or betray their partner (&#34;defect&#34;) for individual reward.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the Prisoner Dilemma example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task prisoner_dilemma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Software Design&lt;/h4&gt; &#xA;&lt;p&gt;In the Software Design example, a code writer, a code tester and a code reviewer collaborate on the code generation problem. Given a problem, the code writer first composes the code implementation. The code tester runs the unit tests and provides the feedback. The code viewer then generates a review. After collecting the test feedback and review, the code writer iteratively refines the code.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the Software Design example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task sde_team/sde_team_2players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/zhouxh19/AgentVerse_for_Database_Diagnosis&#34;&gt;Database Administrator (DBA)&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;In the database diagnosis scenario, the Chief DBA monitors the database system for anomalies. If detected, the memory and CPU agents are alerted to analyze root causes and suggest optimization solutions. The Chief DBA then provides a summarized diagnosis to the user, who can also contribute by giving instructions or evaluating the effectiveness of proposed solutions.&lt;/p&gt; &#xA;&lt;p&gt;You should first configure the &lt;a href=&#34;https://github.com/OpenBMB/BMTools/raw/main/bmtools/tools/db_diag/readme.md&#34;&gt;database tool&lt;/a&gt; in BMTools, and launch the BMTools server according to the &lt;a href=&#34;https://github.com/OpenBMB/BMTools/tree/main#211-local-tools&#34;&gt;guidance&lt;/a&gt;. Then use the following command to launch the Database Administrator example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task db_diag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/c633419d-afbb-47d4-bb12-6bb512e7af3a&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/c633419d-afbb-47d4-bb12-6bb512e7af3a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/chanchimin/ChatEval&#34;&gt;Text Evaluation (ChatEval)&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;In the context of the text evaluation scenario, we recommend users explore the &lt;a href=&#34;https://github.com/chanchimin/ChatEval&#34;&gt;ChatEval&lt;/a&gt; repo. They&#39;ve implemented a multi-agent referee team on AgentVerse to assess the quality of text generated by different models. When given two distinct pieces of text, roles within ChatEval can autonomously debate the nuances and disparities, drawing upon their assigned personas, and subsequently provide their judgments. Experiments indicate that their referee team, enriched with diverse roles specified in &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#2-configuring-the-agents&#34;&gt;config.yaml&lt;/a&gt;, aligns more closely with human evaluations. This demo is built upon the &lt;a href=&#34;https://github.com/lm-sys/FastChat&#34;&gt;Fastchat&lt;/a&gt; repo, and we&#39;d like to express our appreciation for their foundational work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/75533759/58f33468-f15b-4bac-ae01-8d0780019f85&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/75533759/58f33468-f15b-4bac-ae01-8d0780019f85&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Pokemon&lt;/h4&gt; &#xA;&lt;p&gt;In the game, agents can visit shops, train their PokÃ©mon at the gym, and interact with one another. As a player, you take on the role of an agent and can engage with others at any time. There are 6 characters in the PokÃ©mon environment who appeared in Pokemon Emerald: &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/May_(game)&#34;&gt;May&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Professor_Birch&#34;&gt;Professor Birch&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Steven_Stone&#34;&gt;Steven Stone&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Maxie&#34;&gt;Maxie&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Archie&#34;&gt;Archie&lt;/a&gt; and &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Mr._Stone&#34;&gt;Joseph&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To launch the Pokemon game, first launch a local server with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uvicorn pokemon_server:app --reload --port 10002&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open another terminal in the project&#39;s root path and run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ui&#xA;# If you do not have npm installed, you need to install it before running the following commands &#xA;# https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#xA;# We have tested on npm@9.6.4, node@20.0.0&#xA;npm install&#xA;npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for the compilation to complete, and have fun! (WASD for moving around, and SPACE for launching a conversation.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/4d07da68-f942-4205-b558-f155e95782e7&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/4d07da68-f942-4205-b558-f155e95782e7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-features&#34;&gt;â¨ Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-whats-new&#34;&gt;ð° What&#39;s New&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-coming-soon&#34;&gt;ð Coming Soon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-simple-demo-video&#34;&gt;ð¾ Simple Demo Video&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#nlp-classroom&#34;&gt;NLP Classroom&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#prisoner-dilemma&#34;&gt;Prisoner Dilemma&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#software-design&#34;&gt;Software Design&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#database-administrator-dba&#34;&gt;Database Administrator (DBA)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#text-evaluation-chateval&#34;&gt;Text Evaluation (ChatEval)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#pokemon&#34;&gt;Pokemon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-getting-started&#34;&gt;ð Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#cli-example&#34;&gt;CLI Example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#local-website-demo&#34;&gt;Local Website Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-philosophy&#34;&gt;ð¡ Philosophy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#environment&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#agent&#34;&gt;Agent&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#%EF%B8%8F-customize-your-own-environment&#34;&gt;âï¸ Customize Your Own Environment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#a-simple-example-building-a-classroom-environment&#34;&gt;A Simple Example: Building a Classroom Environment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#1-creating-a-task-directory-and-configuring-the-environment&#34;&gt;1. Creating a Task Directory and Configuring the Environment&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#2-configuring-the-agents&#34;&gt;2. Configuring the Agents&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#3-writing-an-output-parser&#34;&gt;3. Writing an Output Parser&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#customization-guide-for-more-complex-environments&#34;&gt;Customization Guide for More Complex Environments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-examples&#34;&gt;ð Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ð Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U agentverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can install the package by manually cloning the latest repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/OpenBMB/AgentVerse.git --depth 1&#xA;cd AgentVerse&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some users have reported problems installing the &lt;code&gt;orjson&lt;/code&gt; required by &lt;code&gt;gradio&lt;/code&gt;. One simple workaround is to install it with Anaconda &lt;code&gt;conda install -c conda-forge orjson&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You also need to export your OpenAI API key as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Export your OpenAI API key&#xA;export OPENAI_API_KEY=&#34;your_api_key_here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the tools provided by BMTools, you need to install BMTools as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git+https://github.com/OpenBMB/BMTools.git&#xA;cd BMTools&#xA;pip install -r requirements.txt&#xA;python setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--&#xA;# Install BMTools&#xA;cd ../&#xA;git clone git@github.com:OpenBMB/BMTools.git&#xA;cd BMTools&#xA;python setup.py develop&#xA;--&gt; &#xA;&lt;h3&gt;CLI Example&lt;/h3&gt; &#xA;&lt;p&gt;You can create a multi-agent environments provided by us. Using the classroom scenario as an example. In this scenario, there are nine agents, one playing the role of a professor and the other eight as students.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 main.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Website Demo&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a local website demo for this environment. You can launch it with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 main_demo.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After successfully launching the local server, you can visit &lt;a href=&#34;http://127.0.0.1:7860/&#34;&gt;http://127.0.0.1:7860/&lt;/a&gt; to view the classroom environment.&lt;/p&gt; &#xA;&lt;h2&gt;ð¡ Philosophy&lt;/h2&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;p&gt;At the core of our framework is the environment, which plays a crucial role in enabling researchers to study the behavior of agents under different conditions. We believe that the environment should be flexible and extensible, allowing researchers to easily customize it to fit their needs. To achieve this, we have abstracted the environment into five rule components, and implementing different environments is actually implementing different rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Describer&lt;/strong&gt;: This component provides a description of the environment at each turn for each agent. You can customize the describer to define the specific requirements of their environment, such as the agents with whom an agent can interact.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Order&lt;/strong&gt;: This component defines the order in which agents take actions within the environment. You can customize the order to reflect the desired interaction between agents. We provide several basic order options, including &lt;code&gt;random&lt;/code&gt;, &lt;code&gt;sequential&lt;/code&gt;, and &lt;code&gt;concurrent&lt;/code&gt; (in which all agents take an action in each turn).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: This component selects the valid messages generated by agents. Sometimes agents may generate invalid responses, and the selector is used to filter out unexpected results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Updater&lt;/strong&gt;: This component updates the memory of each agent. In certain cases, the response generated by one agent should not be seen by all agents (e.g., if agents are in different rooms). For each response, the updater updates only the agents who can see it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visibility&lt;/strong&gt;: This component maintains the list of agents that each agent can see throughout the environment&#39;s changes. For example, when an agent moves from one room to another, the list of visible agents of each agent should be updated by &lt;code&gt;visibility&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By abstracting the environment into these five components, we have created a highly flexible and extensible framework that enables researchers to easily build and customize their own multi-agent environments.&lt;/p&gt; &#xA;&lt;h3&gt;Agent&lt;/h3&gt; &#xA;&lt;p&gt;Another fundamental component is the agent. Currently we provide two types of agents: &lt;strong&gt;ConversationAgent&lt;/strong&gt; and &lt;strong&gt;ToolAgent&lt;/strong&gt;. You can also customize your own agent by inheriting BaseAgent class (tutorial coming soon).&lt;/p&gt; &#xA;&lt;h2&gt;âï¸ Customize Your Own Environment&lt;/h2&gt; &#xA;&lt;p&gt;We have provided several examples in the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory. To customize your environment, you should&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a task directory in &lt;code&gt;agentverse/tasks&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write the configuration file&lt;/li&gt; &#xA; &lt;li&gt;Write the output parser that parses the response of your agents.&lt;/li&gt; &#xA; &lt;li&gt;Add your parser in &lt;code&gt;agentverse/tasks/__init__.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will use a simple example in &lt;code&gt;agentverse/tasks/nlp_classroom_3players&lt;/code&gt; to illustrate the procedure.&lt;/p&gt; &#xA;&lt;h3&gt;A Simple Example: Building a Classroom Environment&lt;/h3&gt; &#xA;&lt;p&gt;To illustrate how to customize your environment, we&#39;ll use a simple example of building a classroom environment where one agent is the professor, one is the student, and one is the teaching assistant.&lt;/p&gt; &#xA;&lt;h5&gt;1. Creating a Task Directory and Configuring the Environment&lt;/h5&gt; &#xA;&lt;p&gt;First, we need to create a task directory and write our configuration file for the environment. In the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory, create a new directory called &lt;code&gt;nlp_classroom_3players&lt;/code&gt;. Inside this directory, create a &lt;code&gt;config.yaml&lt;/code&gt; file and write the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# config.yaml&#xA;environment:&#xA;  env_type: basic&#x9;&#x9;&#x9;&#x9;# Use the basic environment provided in AgentVerse&#xA;  max_turns: 10&#x9;&#x9;&#x9;&#x9;&#x9;# Specify the maximum number of dialogue turns&#xA;  rule:&#xA;    order:&#xA;      type: sequential&#x9;# Use the sequential order&#xA;    visibility:&#xA;      type: all&#x9;&#x9;&#x9;&#x9;&#x9;# Each message can be seen by all agents&#xA;    selector:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic selector (do not select)&#xA;    updater:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic updater (update the message to all agents)&#xA;    describer:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic describer (no description)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This configuration specifies that we will use the basic environment provided in AgentVerse, with a maximum of 10 dialogue turns. We&#39;ll use the sequential order, with all messages visible to all agents. We won&#39;t be using any selectors, our updater will update the messages to all the agents and our describer will provide no description.&lt;/p&gt; &#xA;&lt;h5&gt;2. Configuring the Agents&lt;/h5&gt; &#xA;&lt;p&gt;Next, we&#39;ll configure the agents. In the &lt;code&gt;config.yaml&lt;/code&gt; file, we&#39;ll add the configuration for each agent. Here&#39;s an example configuration for the professor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# config.yaml&#xA;agents:&#xA;  -&#xA;    agent_type: conversation&#xA;    name: Professor Micheal&#x9;&#x9;# Name of the agent&#xA;    role_description: You are Prof. Micheal, ...&#x9;# Description of the agent&#xA;    memory: &#xA;      memory_type: chat_history&#x9;&#x9;# Will store all the chat history&#xA;    prompt_template: *professor_prompt&#xA;    llm:&#xA;      llm_type: text-davinci-003    # Will use OpenAICompletion LLM&#xA;      model: text-davinci-003       # The arguments passed to the api call&#xA;      temperature: 0.7&#xA;      max_tokens: 250&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, we&#39;ll use the &lt;code&gt;conversation&lt;/code&gt; agent type. We&#39;ve given the agent a name and a description, and we&#39;ll store the chat history in memory. We&#39;ve also provided a prompt template with placeholders marked as ${placeholder}. These will be instantiated by the &lt;code&gt;_fill_prompt_template&lt;/code&gt; method of the agent.&lt;/p&gt; &#xA;&lt;h5&gt;3. Writing an Output Parser&lt;/h5&gt; &#xA;&lt;p&gt;The next step is to write a simple parser for your agent&#39;s response. Because you may have specified the output format in your prompt template, you need to provide a corresponding parser. In this example, we inform the model to output in the following format in our prompt template&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Action: Speak&#xA;Action Input: (the content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We&#39;ll write a parser to extract the content from the agent&#39;s response. Refer to the code for more details. We&#39;ve decorated our parser function with &lt;code&gt;@output_parser_registry.register(&#39;classroom_parser&#39;)&lt;/code&gt; to register it with our framework. Finally, we import our parser in &lt;code&gt;agentverse/tasks/__init__.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With these steps, we&#39;ve successfully built a simple classroom environment and customized it for our needs.&lt;/p&gt; &#xA;&lt;h3&gt;Customization Guide for More Complex Environments&lt;/h3&gt; &#xA;&lt;p&gt;While we provide a basic framework for building environments with our five rule components, more complex environments may require further customization. A detailed documentation and tutorial is coming soon. Here we briefly introduce some steps you can take to customize your environment:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the five rule components&lt;/strong&gt;. Each rule component has an interface, allowing you to customize its behavior to suit your specific needs. It&#39;s important to note that these components are not necessarily independent and can interact through the &lt;code&gt;rule_params&lt;/code&gt; dictionary in the environment. You can create your own rule components and integrate them with the existing ones to build more complex interactions between agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the environment itself&lt;/strong&gt;. Our &lt;code&gt;basic&lt;/code&gt; environment provides a default execution order for the five rule components that is suitable for most cases, but you can inherit the &lt;code&gt;BaseEnvironment&lt;/code&gt; class and write your own &lt;code&gt;run&lt;/code&gt; method to implement a more sophisticated execution order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the agent&lt;/strong&gt;. Depending on your specific use case, you may also need to inherit the &lt;code&gt;BaseAgent&lt;/code&gt; class. For example, you may want to use your local LLM as your agents or create agents with specialized knowledge or skills.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ð Examples&lt;/h2&gt; &#xA;&lt;p&gt;Currently, we offer some simple examples in the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory, each demonstrating different possibilities of our framework. While the performance of these examples may not be optimal due to limited prompt engineering, they are intended to showcase the capabilities of our framework, such as allowing the use of tools.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a brief overview of each example:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_3players&lt;/code&gt;: This example illustrates a simple case in which agents will speak in sequential order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_9players&lt;/code&gt;: This is an NLP class example. Here, students can raise their hand when they have a question, and the professor can call on the students to let them ask. Students are only allowed to speak after they are called on.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_9players_group&lt;/code&gt;: This example showcases group discussions. The professor may initiate a group discussion when needed, and students can exclusively interact with fellow students within the same group during the discussion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_3players_withtool&lt;/code&gt;: Students in this classroom can use Bing search API when listening to the class.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;math_problem_2players_tools&lt;/code&gt;: A simple example demonstrating how two agents can use the WolframAlpha API to play an arithmetic game.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prisoner_dilema&lt;/code&gt;: The Prisoner&#39;s Dilemma is a thought experiment involving two rational agents facing a choice between cooperating for mutual benefit or betraying their partner for individual gain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;db_diag&lt;/code&gt;: The Chief DBA monitors (agents) the database system for anomalies and alerts memory and CPU agents if any are detected. They (agents) analyze root causes and suggest optimization solutions. The Chief DBA (agent) provides a diagnosis summary to the user, who can give instructions or evaluate the proposed solutions&#39; effectiveness.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sde_team&lt;/code&gt;: In the SDE team, code writer, code tester and code reviewer collaborate on the code generation problem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pokemon&lt;/code&gt;: This example intimates Pokemon game.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#OpenBMB/AgentVerse&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=OpenBMB/AgentVerse&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this repo helpful, feel free to cite us.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{chen2023agentverse,&#xA;      title={AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors in Agents}, &#xA;      author={Weize Chen and Yusheng Su and Jingwei Zuo and Cheng Yang and Chenfei Yuan and Chen Qian and Chi-Min Chan and Yujia Qin and Yaxi Lu and Ruobing Xie and Zhiyuan Liu and Maosong Sun and Jie Zhou},&#xA;      year={2023},&#xA;      eprint={2308.10848},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Weize Chen: &lt;a href=&#34;mailto:chenwz21@mails.tsinghua.edu.cn&#34;&gt;chenwz21@mails.tsinghua.edu.cn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://yushengsu-thu.github.io/&#34;&gt;Yusheng Su&lt;/a&gt;: &lt;a href=&#34;mailto:yushengsu.thu@gmail.com&#34;&gt;yushengsu.thu@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>