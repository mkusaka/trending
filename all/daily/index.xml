<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-24T01:24:54Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dominant-strategies/go-quai</title>
    <updated>2023-08-24T01:24:54Z</updated>
    <id>tag:github.com,2023-08-24:/dominant-strategies/go-quai</id>
    <link href="https://github.com/dominant-strategies/go-quai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Go Implementation of the Quai Network&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Go Quai&lt;/h2&gt; &#xA;&lt;p&gt;Official Golang implementation of the Quai protocol.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/dominant-strategies/go-quai/common&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/915b7be44ada53c290eb157634330494ebe3e30a/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f676f6c616e672f6764646f3f7374617475732e737667&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dominant-strategies/go-quai&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dominant-strategies/go-quai&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ngw88VXXnV&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building the source&lt;/h2&gt; &#xA;&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href=&#34;https://docs.quai.network/develop/installation&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First, clone the repository and navigate to it using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/dominant-strategies/go-quai.git&#xA;$ cd go-quai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, you will need to copy some default environment variables to your machine. You can do this by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cp network.env.dist network.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building &lt;code&gt;go-quai&lt;/code&gt; requires both a Go (version 1.19 or later) and a C compiler. You can install them using your favorite package manager. Once these dependencies are installed, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make go-quai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Executables&lt;/h2&gt; &#xA;&lt;p&gt;The go-quai project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;code&gt;go-quai&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Our main Quai CLI client. It is the entry point into the Quai network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Quai network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;go-quai --help&lt;/code&gt; for command line options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;code&gt;test&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs a battery of tests on the repository to ensure it builds and functions correctly.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running &lt;code&gt;go-quai&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Full node on the main Quai network&lt;/h3&gt; &#xA;&lt;p&gt;Using the makefile will preload configuration values from the &lt;code&gt;network.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make run-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full node on the Garden test network&lt;/h3&gt; &#xA;&lt;p&gt;Garden test network is based on the Blake3 proof-of-work consensus algorithm. As such, it has certain extra overhead and is more susceptible to reorganization attacks due to the network&#39;s low difficulty/security.&lt;/p&gt; &#xA;&lt;h3&gt;Viewing logs&lt;/h3&gt; &#xA;&lt;p&gt;Logs are stored in the &lt;code&gt;go-quai/nodelogs&lt;/code&gt; directory by default. You can view them by using tail or another utility, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tail -f nodelogs/zone-0-0.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Modify the &lt;code&gt;network.env&lt;/code&gt; configuration file to reflect: &lt;code&gt;NETWORK=garden&lt;/code&gt;. You should also set &lt;code&gt;ENABLE_ARCHIVE=true&lt;/code&gt; to make sure to save the trie-nodes after you stop your node. Then build and run with the same commands as mainnet.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Configuration is handled in &lt;code&gt;network.env.dist&lt;/code&gt; file. You will need to copy or rename the file to &lt;code&gt;network.env&lt;/code&gt;. The make commands will automatically pull from this file for configuration changes.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering to help out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to go-quai, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href=&#34;https://discord.gg/Nd8JhaENvU&#34;&gt;our Discord Server&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code must adhere to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#formatting&#34;&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Code must be documented adhering to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#commentary&#34;&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;E.g. &#34;rpc: make trace configs optional&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://docs.quai.network/contributors/contribute&#34;&gt;Developers&#39; Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The go-quai library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/lgpl-3.0.en.html&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The go-quai binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tinygrad/teenygrad</title>
    <updated>2023-08-24T01:24:54Z</updated>
    <id>tag:github.com,2023-08-24:/tinygrad/teenygrad</id>
    <link href="https://github.com/tinygrad/teenygrad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;If tinygrad wasn&#39;t small enough for you...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;teenygrad is &amp;lt;1000 line MNIST trainer&lt;/p&gt; &#xA;&lt;p&gt;It shares 90% of its code with tinygrad, so understanding teenygrad is a good step to understanding tinygrad.&lt;/p&gt; &#xA;&lt;p&gt;While it supports most of tinygrad&#39;s functionality, the extra 3k lines in tinygrad get you speed and diverse backend support.&lt;/p&gt; &#xA;&lt;p&gt;tensor.py and mlops.py are both tinygrad&#39;s and teenygrad&#39;s frontend. lazy.py is a replacement for all of tinygrad&#39;s backend.&lt;/p&gt; &#xA;&lt;p&gt;The only dependency of teenygrad is numpy (well, and tqdm)&lt;/p&gt; &#xA;&lt;p&gt;Usage: pip install numpy tqdm PYTHONPATH=&#34;.&#34; python mnist.py&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cgpotts/cs224u</title>
    <updated>2023-08-24T01:24:54Z</updated>
    <id>tag:github.com,2023-08-24:/cgpotts/cs224u</id>
    <link href="https://github.com/cgpotts/cs224u" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code for Stanford CS224u&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CS224u: Natural Language Understanding&lt;/h1&gt; &#xA;&lt;p&gt;Code for &lt;a href=&#34;http://web.stanford.edu/class/cs224u/&#34;&gt;the Stanford course&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Spring 2023&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://web.stanford.edu/~cgpotts/&#34;&gt;Christopher Potts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Core components&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;setup.ipynb&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Details on how to get set up to work with this code.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;hw_*.ipynb&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The set of homeworks for the current run of the course.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;tutorial_*&lt;/code&gt; notebooks&lt;/h3&gt; &#xA;&lt;p&gt;Introductions to Juypter notebooks, scientific computing with NumPy and friends, and PyTorch.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;torch_*.py&lt;/code&gt; modules&lt;/h3&gt; &#xA;&lt;p&gt;A generic optimization class (&lt;code&gt;torch_model_base.py&lt;/code&gt;) and subclasses for GloVe, Autoencoders, shallow neural classifiers, RNN classifiers, tree-structured networks, and grounded natural language generation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tutorial_pytorch_models.ipynb&lt;/code&gt; shows how to use these modules as a general framework for creating original systems.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;evaluation_*.ipynb&lt;/code&gt; and &lt;code&gt;projects.md&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Notebooks covering key experimental methods and practical considerations, and tips on writing up and presenting work in the field.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;iit*&lt;/code&gt; and &lt;code&gt;feature_attribution.ipynb&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Part of our unit on explainability and model analysis.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;np_*.py&lt;/code&gt; modules&lt;/h3&gt; &#xA;&lt;p&gt;This is now considered background material for the course.&lt;/p&gt; &#xA;&lt;p&gt;Reference implementations for the &lt;code&gt;torch_*.py&lt;/code&gt; models, designed to reveal more about how the optimization process works.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;vsm_*&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is now considered background material for the course.&lt;/p&gt; &#xA;&lt;p&gt;A unit on vector space models of meaning, covering traditional methods like PMI and LSA as well as newer methods like Autoencoders and GloVe. &lt;code&gt;vsm.py&lt;/code&gt; provides a lot of the core functionality, and &lt;code&gt;torch_glove.py&lt;/code&gt; and &lt;code&gt;torch_autoencoder.py&lt;/code&gt; are the learned models that we cover. &lt;code&gt;vsm_03_contextualreps.ipynb&lt;/code&gt; explores methods for deriving static representations from contextual models.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;sst_*&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is now considered background material for the course.&lt;/p&gt; &#xA;&lt;p&gt;A unit on sentiment analysis with the &lt;a href=&#34;https://nlp.stanford.edu/sentiment/treebank.html&#34;&gt;English Stanford Sentiment Treebank&lt;/a&gt;. The core code is &lt;code&gt;sst.py&lt;/code&gt;, which includes a flexible experimental framework. All the PyTorch classifiers are put to use as well: &lt;code&gt;torch_shallow_neural_network.py&lt;/code&gt;, &lt;code&gt;torch_rnn_classifier.py&lt;/code&gt;, and &lt;code&gt;torch_tree_nn.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;finetuning.ipynb&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is now considered background material for the course.&lt;/p&gt; &#xA;&lt;p&gt;Using pretrained parameters from &lt;a href=&#34;https://huggingface.co&#34;&gt;Hugging Face&lt;/a&gt; for featurization and fine-tuning.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;utils.py&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Miscellaneous core functions used throughout the code.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;test/&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To run these tests, use&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;py.test -vv test/*&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or, for just the tests in &lt;code&gt;test_shallow_neural_classifiers.py&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;py.test -vv test/test_shallow_neural_classifiers.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the above commands don&#39;t work, try&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 -m pytest -vv test/test_shallow_neural_classifiers.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The materials in this repo are licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/cgpotts/cs224u/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt; and a &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>