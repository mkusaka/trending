<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-07T01:29:38Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>themactep/thingino-firmware</title>
    <updated>2025-08-07T01:29:38Z</updated>
    <id>tag:github.com,2025-08-07:/themactep/thingino-firmware</id>
    <link href="https://github.com/themactep/thingino-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source firmware for Ingenic SoC IP cameras&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Thingino&lt;/h2&gt; &#xA;&lt;p&gt;Thingino is an open-source firmware for Ingenic SoC IP cameras.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/6fe68e13-eb49-4c33-8836-af1e97bf8b4e&#34; alt=&#34;Thingino Web UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported Hardware&lt;/h3&gt; &#xA;&lt;p&gt;Please find &lt;a href=&#34;https://raw.githubusercontent.com/themactep/thingino-firmware/master/docs/supported_hardware.md&#34;&gt;the full list of supported cameras&lt;/a&gt; in a separate document. Visit &lt;a href=&#34;https://thingino.com/&#34;&gt;our website&lt;/a&gt; for an illustrated version of the list.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/themactep/thingino-firmware&#xA;cd thingino-firmware&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://github.com/themactep/thingino-firmware/wiki/Building-from-sources&#34;&gt;Building from sources&lt;/a&gt; article for more info.&lt;/p&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thingino.com/&#34;&gt;Project Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/themactep/thingino-firmware/wiki&#34;&gt;Project Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Buildroot Manual &lt;a href=&#34;https://buildroot.org/downloads/manual/manual.html&#34;&gt;HTML&lt;/a&gt; &lt;a href=&#34;https://nightly.buildroot.org/manual.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/xDmqS944zr&#34;&gt;Discord channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/thingino&#34;&gt;Telegram group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GitHub CI Status&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/themactep/thingino-firmware/actions/workflows/toolchain.yaml&#34;&gt;&lt;img src=&#34;https://github.com/themactep/thingino-firmware/actions/workflows/toolchain-x86_64.yaml/badge.svg?sanitize=true&#34; alt=&#34;toolchain-x86_64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/themactep/thingino-firmware/actions/workflows/firmware.yaml&#34;&gt;&lt;img src=&#34;https://github.com/themactep/thingino-firmware/actions/workflows/firmware-x86_64.yaml/badge.svg?sanitize=true&#34; alt=&#34;firmware-x86_64&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dstotijn/hetty</title>
    <updated>2025-08-07T01:29:38Z</updated>
    <id>tag:github.com,2025-08-07:/dstotijn/hetty</id>
    <link href="https://github.com/dstotijn/hetty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An HTTP toolkit for security research.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/983924/156430531-6193e187-7400-436b-81c6-f86862783ea5.svg#gh-light-mode-only&#34; width=&#34;240&#34;&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/983924/156430660-9d5bd555-dcfd-47e2-ba70-54294c20c1b4.svg#gh-dark-mode-only&#34; width=&#34;240&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dstotijn/hetty/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/dstotijn/hetty?color=25ae8f&#34; alt=&#34;Latest GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dstotijn/hetty/actions/workflows/build-test.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fdstotijn%2Fhetty%2Fbadge%3Fref%3Dmain&amp;amp;label=build&amp;amp;color=24ae8f&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/dstotijn/hetty/total?color=25ae8f&#34; alt=&#34;GitHub download count&#34;&gt; &lt;a href=&#34;https://github.com/dstotijn/hetty/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dstotijn/hetty?color=25ae8f&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hetty.xyz/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/hetty-docs-25ae8f&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hetty&lt;/strong&gt; is an HTTP toolkit for security research. It aims to become an open source alternative to commercial software like Burp Suite Pro, with powerful features tailored to the needs of the infosec and bug bounty community.&lt;/p&gt; &#xA;&lt;img src=&#34;https://hetty.xyz/img/hero.png&#34; width=&#34;907&#34; alt=&#34;Hetty proxy logs (screenshot)&#34;&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Machine-in-the-middle (MITM) HTTP proxy, with logs and advanced search&lt;/li&gt; &#xA; &lt;li&gt;HTTP client for manually creating/editing requests, and replay proxied requests&lt;/li&gt; &#xA; &lt;li&gt;Intercept requests and responses for manual review (edit, send/receive, cancel)&lt;/li&gt; &#xA; &lt;li&gt;Scope support, to help keep work organized&lt;/li&gt; &#xA; &lt;li&gt;Easy-to-use web based admin interface&lt;/li&gt; &#xA; &lt;li&gt;Project based database storage, to help keep work organized&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üë∑‚Äç‚ôÇÔ∏è Hetty is under active development. Check the &lt;a href=&#34;https://github.com/dstotijn/hetty/projects/1&#34;&gt;backlog&lt;/a&gt; for the current status.&lt;/p&gt; &#xA;&lt;p&gt;üì£ Are you pen testing professionaly in a team? I would love to hear your thoughts on tooling via &lt;a href=&#34;https://forms.gle/36jtgNc3TJ2imi5A8&#34;&gt;this 5 minute survey&lt;/a&gt;. Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;üí° The &lt;a href=&#34;https://hetty.xyz/docs/getting-started&#34;&gt;Getting started&lt;/a&gt; doc has more detailed install and usage instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The quickest way to install and update Hetty is via a package manager:&lt;/p&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install hettysoft/tap/hetty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo snap install hetty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop bucket add hettysoft https://github.com/hettysoft/scoop-bucket.git&#xA;scoop install hettysoft/hetty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Other&lt;/h4&gt; &#xA;&lt;p&gt;Alternatively, you can &lt;a href=&#34;https://github.com/dstotijn/hetty/releases/latest&#34;&gt;download the latest release from GitHub&lt;/a&gt; for your OS and architecture, and move the binary to a directory in your &lt;code&gt;$PATH&lt;/code&gt;. If your OS is not available for one of the package managers or not listed in the GitHub releases, you can compile from source &lt;em&gt;(link coming soon)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;Docker images are distributed via &lt;a href=&#34;https://github.com/dstotijn/hetty/pkgs/container/hetty&#34;&gt;GitHub&#39;s Container registry&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/dstotijn/hetty&#34;&gt;Docker Hub&lt;/a&gt;. To run Hetty via with a volume for database and certificate storage, and port 8080 forwarded:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -v $HOME/.hetty:/root/.hetty -p 8080:8080 \&#xA;  ghcr.io/dstotijn/hetty:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Once installed, start Hetty via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hetty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;üí° Read the &lt;a href=&#34;https://hetty.xyz/docs/getting-started&#34;&gt;Getting started&lt;/a&gt; doc for more details.&lt;/p&gt; &#xA;&lt;p&gt;To list all available options, run: &lt;code&gt;hetty --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hetty --help&#xA;&#xA;Usage:&#xA;    hetty [flags] [subcommand] [flags]&#xA;&#xA;Runs an HTTP server with (MITM) proxy, GraphQL service, and a web based admin interface.&#xA;&#xA;Options:&#xA;    --cert         Path to root CA certificate. Creates file if it doesn&#39;t exist. (Default: &#34;~/.hetty/hetty_cert.pem&#34;)&#xA;    --key          Path to root CA private key. Creates file if it doesn&#39;t exist. (Default: &#34;~/.hetty/hetty_key.pem&#34;)&#xA;    --db           Database file path. Creates file if it doesn&#39;t exist. (Default: &#34;~/.hetty/hetty.db&#34;)&#xA;    --addr         TCP address for HTTP server to listen on, in the form \&#34;host:port\&#34;. (Default: &#34;:8080&#34;)&#xA;    --chrome       Launch Chrome with proxy settings applied and certificate errors ignored. (Default: false)&#xA;    --verbose      Enable verbose logging.&#xA;    --json         Encode logs as JSON, instead of pretty/human readable output.&#xA;    --version, -v  Output version.&#xA;    --help, -h     Output this usage text.&#xA;&#xA;Subcommands:&#xA;    - cert  Certificate management&#xA;&#xA;Run `hetty &amp;lt;subcommand&amp;gt; --help` for subcommand specific usage instructions.&#xA;&#xA;Visit https://hetty.xyz to learn more about Hetty.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;üìñ &lt;a href=&#34;https://hetty.xyz/docs&#34;&gt;Read the docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/dstotijn/hetty/issues&#34;&gt;issues&lt;/a&gt; for bug reports and feature requests, and &lt;a href=&#34;https://github.com/dstotijn/hetty/discussions&#34;&gt;discussions&lt;/a&gt; for questions and troubleshooting.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;üí¨ &lt;a href=&#34;https://discord.gg/3HVsj5pTFP&#34;&gt;Join the Hetty Discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? Great! Please check the &lt;a href=&#34;https://raw.githubusercontent.com/dstotijn/hetty/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to the &lt;a href=&#34;https://www.hacker101.com/discord&#34;&gt;Hacker101 community on Discord&lt;/a&gt; for the encouragement and early feedback.&lt;/li&gt; &#xA; &lt;li&gt;The font used in the logo and admin interface is &lt;a href=&#34;https://www.jetbrains.com/lp/mono/&#34;&gt;JetBrains Mono&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;üíñ Are you enjoying Hetty? You can &lt;a href=&#34;https://github.com/sponsors/dstotijn&#34;&gt;sponsor me&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dstotijn/hetty/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;¬© 2019‚Äì2025 Hetty Software&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prisma/prisma</title>
    <updated>2025-08-07T01:29:38Z</updated>
    <id>tag:github.com,2025-08-07:/prisma/prisma</id>
    <link href="https://github.com/prisma/prisma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next-generation ORM for Node.js &amp; TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/h6UIYTu.png&#34; alt=&#34;Prisma&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Prisma&lt;/h1&gt; &#xA; &lt;a href=&#34;https://www.npmjs.com/package/prisma&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/prisma.svg?style=flat&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pris.ly/discord&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/937751382725886062?label=Discord&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart&#34;&gt;Quickstart&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/&#34;&gt;Website&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/docs/&#34;&gt;Docs&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma-examples/&#34;&gt;Examples&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/blog&#34;&gt;Blog&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://pris.ly/discord?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme&#34;&gt;Discord&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://pris.ly/x?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme&#34;&gt;Twitter&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://pris.ly/youtube?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme&#34;&gt;Youtube&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is Prisma?&lt;/h2&gt; &#xA;&lt;p&gt;Prisma ORM is a &lt;strong&gt;next-generation ORM&lt;/strong&gt; that consists of these tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client&#34;&gt;&lt;strong&gt;Prisma Client&lt;/strong&gt;&lt;/a&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-migrate&#34;&gt;&lt;strong&gt;Prisma Migrate&lt;/strong&gt;&lt;/a&gt;: Declarative data modeling &amp;amp; migration system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prisma/studio&#34;&gt;&lt;strong&gt;Prisma Studio&lt;/strong&gt;&lt;/a&gt;: GUI to view and edit data in your database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prisma Client can be used in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application (including serverless applications and microservices). This can be a &lt;a href=&#34;https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/rest&#34;&gt;REST API&lt;/a&gt;, a &lt;a href=&#34;https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/graphql&#34;&gt;GraphQL API&lt;/a&gt;, a gRPC API, or anything else that needs a database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need a database to use with Prisma ORM, check out &lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres?utm_source=github&amp;amp;utm_medium=prisma-readme&#34;&gt;Prisma Postgres&lt;/a&gt; or if you are looking for our MCP Server, head &lt;a href=&#34;https://github.com/prisma/mcp&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Quickstart (5min)&lt;/h3&gt; &#xA;&lt;p&gt;The fastest way to get started with Prisma is by following the quickstart guides. You can choose either of two databases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres&#34;&gt;Prisma Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart-sqlite&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bring your own database&lt;/h3&gt; &#xA;&lt;p&gt;If you already have your own database, you can follow these guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-typescript-postgresql&#34;&gt;Add Prisma to an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-postgresql&#34;&gt;Set up a new project with Prisma from scratch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Prisma ORM works&lt;/h2&gt; &#xA;&lt;p&gt;This section provides a high-level overview of how Prisma ORM works and its most important technical components. For a more thorough introduction, visit the &lt;a href=&#34;https://www.prisma.io/docs/&#34;&gt;Prisma documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The Prisma schema&lt;/h3&gt; &#xA;&lt;p&gt;Every project that uses a tool from the Prisma toolkit starts with a &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-schema&#34;&gt;Prisma schema file&lt;/a&gt;. The Prisma schema allows developers to define their &lt;em&gt;application models&lt;/em&gt; in an intuitive data modeling language. It also contains the connection to a database and defines a &lt;em&gt;generator&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-prisma&#34;&gt;// Data source&#xA;datasource db {&#xA;  provider = &#34;postgresql&#34;&#xA;  url      = env(&#34;DATABASE_URL&#34;)&#xA;}&#xA;&#xA;// Generator&#xA;generator client {&#xA;  provider = &#34;prisma-client-js&#34;&#xA;}&#xA;&#xA;// Data model&#xA;model Post {&#xA;  id        Int     @id @default(autoincrement())&#xA;  title     String&#xA;  content   String?&#xA;  published Boolean @default(false)&#xA;  author    User?   @relation(fields:  [authorId], references: [id])&#xA;  authorId  Int?&#xA;}&#xA;&#xA;model User {&#xA;  id    Int     @id @default(autoincrement())&#xA;  email String  @unique&#xA;  name  String?&#xA;  posts Post[]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this schema, you configure three things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data source&lt;/strong&gt;: Specifies your database connection (via an environment variable)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generator&lt;/strong&gt;: Indicates that you want to generate Prisma Client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data model&lt;/strong&gt;: Defines your application models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;The Prisma data model&lt;/h3&gt; &#xA;&lt;p&gt;On this page, the focus is on the data model. You can learn more about &lt;a href=&#34;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/data-sources&#34;&gt;Data sources&lt;/a&gt; and &lt;a href=&#34;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/generators&#34;&gt;Generators&lt;/a&gt; on the respective docs pages.&lt;/p&gt; &#xA;&lt;h4&gt;Functions of Prisma models&lt;/h4&gt; &#xA;&lt;p&gt;The data model is a collection of &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#defining-models&#34;&gt;models&lt;/a&gt;. A model has two major functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Represent a table in the underlying database&lt;/li&gt; &#xA; &lt;li&gt;Provide the foundation for the queries in the Prisma Client API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Getting a data model&lt;/h4&gt; &#xA;&lt;p&gt;There are two major workflows for &#34;getting&#34; a data model into your Prisma schema:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate the data model from &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/introspection&#34;&gt;introspecting&lt;/a&gt; a database&lt;/li&gt; &#xA; &lt;li&gt;Manually writing the data model and mapping it to the database with &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-migrate&#34;&gt;Prisma Migrate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once the data model is defined, you can &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client&#34;&gt;generate Prisma Client&lt;/a&gt; which will expose CRUD and more queries for the defined models. If you&#39;re using TypeScript, you&#39;ll get full type-safety for all queries (even when only retrieving the subsets of a model&#39;s fields).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Accessing your database with Prisma Client&lt;/h3&gt; &#xA;&lt;h4&gt;Generating Prisma Client&lt;/h4&gt; &#xA;&lt;p&gt;The first step when using Prisma Client is installing its npm package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install @prisma/client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the installation of this package invokes the &lt;code&gt;prisma generate&lt;/code&gt; command which reads your Prisma schema and &lt;em&gt;generates&lt;/em&gt; the Prisma Client code. The code will be located in &lt;code&gt;node_modules/.prisma/client&lt;/code&gt;, which is exported by &lt;code&gt;node_modules/@prisma/client/index.d.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After you change your data model, you&#39;ll need to manually re-generate Prisma Client to ensure the code inside &lt;code&gt;node_modules/.prisma/client&lt;/code&gt; gets updated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx prisma generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the documentation for more information about &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client&#34;&gt;&#34;generating the Prisma client&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Using Prisma Client to send queries to your database&lt;/h4&gt; &#xA;&lt;p&gt;Once the Prisma Client is generated, you can import it in your code and send queries to your database. This is what the setup code looks like.&lt;/p&gt; &#xA;&lt;h5&gt;Import and instantiate Prisma Client&lt;/h5&gt; &#xA;&lt;p&gt;You can import and instantiate Prisma Client as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { PrismaClient } from &#39;@prisma/client&#39;&#xA;&#xA;const prisma = new PrismaClient()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { PrismaClient } = require(&#39;@prisma/client&#39;)&#xA;&#xA;const prisma = new PrismaClient()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can start sending queries via the generated Prisma Client API, here are a few sample queries. Note that all Prisma Client queries return &lt;em&gt;plain old JavaScript objects&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about the available operations in the &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client&#34;&gt;Prisma Client docs&lt;/a&gt; or watch this &lt;a href=&#34;https://www.youtube.com/watch?v=LggrE5kJ75I&amp;amp;list=PLn2e1F9Rfr6k9PnR_figWOcSHgc_erDr5&amp;amp;index=4&#34;&gt;demo video&lt;/a&gt; (2 min).&lt;/p&gt; &#xA;&lt;h5&gt;Retrieve all &lt;code&gt;User&lt;/code&gt; records from the database&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const allUsers = await prisma.user.findMany()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Include the &lt;code&gt;posts&lt;/code&gt; relation on each returned &lt;code&gt;User&lt;/code&gt; object&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const allUsers = await prisma.user.findMany({&#xA;  include: { posts: true },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Filter all &lt;code&gt;Post&lt;/code&gt; records that contain &lt;code&gt;&#34;prisma&#34;&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const filteredPosts = await prisma.post.findMany({&#xA;  where: {&#xA;    OR: [{ title: { contains: &#39;prisma&#39; } }, { content: { contains: &#39;prisma&#39; } }],&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Create a new &lt;code&gt;User&lt;/code&gt; and a new &lt;code&gt;Post&lt;/code&gt; record in the same query&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const user = await prisma.user.create({&#xA;  data: {&#xA;    name: &#39;Alice&#39;,&#xA;    email: &#39;alice@prisma.io&#39;,&#xA;    posts: {&#xA;      create: { title: &#39;Join us for Prisma Day 2021&#39; },&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Update an existing &lt;code&gt;Post&lt;/code&gt; record&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const post = await prisma.post.update({&#xA;  where: { id: 42 },&#xA;  data: { published: true },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage with TypeScript&lt;/h4&gt; &#xA;&lt;p&gt;Note that when using TypeScript, the result of this query will be &lt;em&gt;statically typed&lt;/em&gt; so that you can&#39;t accidentally access a property that doesn&#39;t exist (and any typos are caught at compile-time). Learn more about leveraging Prisma Client&#39;s generated types on the &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/advanced-usage-of-generated-types&#34;&gt;Advanced usage of generated types&lt;/a&gt; page in the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Prisma has a large and supportive &lt;a href=&#34;https://www.prisma.io/community&#34;&gt;community&lt;/a&gt; of enthusiastic application developers. You can join us on &lt;a href=&#34;https://pris.ly/discord&#34;&gt;Discord&lt;/a&gt; and here on &lt;a href=&#34;https://github.com/prisma/prisma/discussions&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Badges&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://prisma.io&#34;&gt;&lt;img src=&#34;http://made-with.prisma.io/dark.svg?sanitize=true&#34; alt=&#34;Made with Prisma&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prisma.io&#34;&gt;&lt;img src=&#34;http://made-with.prisma.io/indigo.svg?sanitize=true&#34; alt=&#34;Made with Prisma&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Built something awesome with Prisma? üåü Show it off with these &lt;a href=&#34;https://github.com/prisma/presskit?tab=readme-ov-file#badges&#34;&gt;badges&lt;/a&gt;, perfect for your readme or website.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/dark.svg)](https://prisma.io)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/indigo.svg)](https://prisma.io)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you have a security issue to report, please contact us at &lt;a href=&#34;mailto:security@prisma.io?subject=%5BGitHub%5D%20Prisma%202%20Security%20Report%20&#34;&gt;security@prisma.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;h3&gt;Ask a question about Prisma&lt;/h3&gt; &#xA;&lt;p&gt;You can ask questions and initiate &lt;a href=&#34;https://github.com/prisma/prisma/discussions/&#34;&gt;discussions&lt;/a&gt; about Prisma-related topics in the &lt;code&gt;prisma&lt;/code&gt; repository on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://github.com/prisma/prisma/discussions/new&#34;&gt;&lt;strong&gt;Ask a question&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create a bug report for Prisma&lt;/h3&gt; &#xA;&lt;p&gt;If you see an error message or run into an issue, please make sure to create a bug report! You can find &lt;a href=&#34;https://www.prisma.io/docs/guides/other/troubleshooting-orm/creating-bug-reports&#34;&gt;best practices for creating bug reports&lt;/a&gt; (like including additional debugging output) in the docs.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://pris.ly/prisma-prisma-bug-report&#34;&gt;&lt;strong&gt;Create bug report&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Submit a feature request&lt;/h3&gt; &#xA;&lt;p&gt;If Prisma currently doesn&#39;t have a certain feature, be sure to check out the &lt;a href=&#34;https://www.prisma.io/docs/more/roadmap&#34;&gt;roadmap&lt;/a&gt; to see if this is already planned for the future.&lt;/p&gt; &#xA;&lt;p&gt;If the feature on the roadmap is linked to a GitHub issue, please make sure to leave a üëç reaction on the issue and ideally a comment with your thoughts about the feature!&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://github.com/prisma/prisma/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;&lt;strong&gt;Submit feature request&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct for contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tests Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prisma Tests Status: &lt;a href=&#34;https://github.com/prisma/prisma/actions/workflows/test.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/prisma/prisma/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Prisma Tests Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ecosystem Tests Status: &lt;a href=&#34;https://github.com/prisma/ecosystem-tests/actions/workflows/test.yaml?query=branch%3Adev&#34;&gt;&lt;img src=&#34;https://github.com/prisma/ecosystem-tests/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;Ecosystem Tests Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>