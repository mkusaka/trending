<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-08T01:22:53Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>opentffoundation/opentf</title>
    <updated>2023-09-08T01:22:53Z</updated>
    <id>tag:github.com,2023-09-08:/opentffoundation/opentf</id>
    <link href="https://github.com/opentffoundation/opentf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenTF lets you declaratively manage your cloud infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTF&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manifesto: &lt;a href=&#34;https://opentf.org&#34;&gt;https://opentf.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;About the OpenTF fork: &lt;a href=&#34;https://opentf.org/fork&#34;&gt;https://opentf.org/fork&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/opentfcommunity/shared_invite/zt-22ifsm1t2-AF6cL0cOdzivP8E~4deDJA&#34;&gt;Join our Slack community!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img alt=&#34;OpenTF&#34; src=&#34;https://raw.githubusercontent.com/opentffoundation/brand-artifacts/main/full/transparent/SVG/on-light.svg?sanitize=true&#34; width=&#34;600px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Note: This repository is currently a work in progress while we&#39;re preparing it for the first alpha release and fine-tuning the community contribution process. Please read the &lt;a href=&#34;https://opentf.org/fork&#34;&gt;announcement post&lt;/a&gt; for important context and the &lt;a href=&#34;https://raw.githubusercontent.com/opentffoundation/opentf/main/CONTRIBUTING.md&#34;&gt;contributing docs&lt;/a&gt; for instructions on how to contribute. Additionally, please be mindful that building this repository in its current state and running it might put you in violation of the &lt;a href=&#34;https://web.archive.org/web/https://registry.terraform.io/terms&#34;&gt;Terraform Registry ToS&lt;/a&gt;, if that&#39;s where you fetch your providers or modules from.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenTF is an OSS tool for building, changing, and versioning infrastructure safely and efficiently. OpenTF can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; &#xA;&lt;p&gt;The key features of OpenTF are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: OpenTF has a &#34;planning&#34; step where it generates an execution plan. The execution plan shows what OpenTF will do when you call apply. This lets you avoid any surprises when OpenTF manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: OpenTF builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, OpenTF builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what OpenTF will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing OpenTF&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains OpenTF Core, which includes the command line interface and the main graph engine.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To learn more about compiling OpenTF and contributing suggested changes, refer to &lt;a href=&#34;https://raw.githubusercontent.com/opentffoundation/opentf/main/CONTRIBUTING.md&#34;&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To submit bug reports or enhancement requests, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/opentffoundation/opentf/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; as well.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opentffoundation/opentf/raw/main/LICENSE&#34;&gt;Mozilla Public License v2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>measuredco/puck</title>
    <updated>2023-09-08T01:22:53Z</updated>
    <id>tag:github.com,2023-09-08:/measuredco/puck</id>
    <link href="https://github.com/measuredco/puck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The self-hosted drag and drop editor for React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;puck&lt;/h1&gt; &#xA;&lt;p&gt;The self-hosted, drag and drop editor for React.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üñ±Ô∏è &lt;strong&gt;Drag and drop&lt;/strong&gt;: Visual editing for your existing React component library&lt;/li&gt; &#xA; &lt;li&gt;üåê &lt;strong&gt;Integrations&lt;/strong&gt;: Load your content from a 3rd party headless CMS&lt;/li&gt; &#xA; &lt;li&gt;‚úçÔ∏è &lt;strong&gt;Inline editing&lt;/strong&gt;: Author content directly via puck for convenience&lt;/li&gt; &#xA; &lt;li&gt;‚≠êÔ∏è &lt;strong&gt;No vendor lock-in&lt;/strong&gt;: Self-host or integrate with your existing application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://puck-editor-demo.vercel.app/edit&#34;&gt;See demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Render the editor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Editor.jsx&#xA;import { Puck } from &#34;@measured/puck&#34;;&#xA;&#xA;// Create puck component config&#xA;const config = {&#xA;  components: {&#xA;    HeadingBlock: {&#xA;      fields: {&#xA;        children: {&#xA;          type: &#34;text&#34;,&#xA;        },&#xA;      },&#xA;      render: ({ children }) =&amp;gt; {&#xA;        return &amp;lt;h1&amp;gt;{children}&amp;lt;/h1&amp;gt;;&#xA;      },&#xA;    },&#xA;  },&#xA;};&#xA;&#xA;// Describe the initial data&#xA;const initialData = {};&#xA;&#xA;// Save the data to your database&#xA;const save = (data) =&amp;gt; {};&#xA;&#xA;// Render Puck editor&#xA;export function Editor() {&#xA;  return &amp;lt;Puck config={config} data={initialData} onPublish={save} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Render the page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Page.jsx&#xA;import { Render } from &#34;@measured/puck&#34;;&#xA;&#xA;export function Page() {&#xA;  return &amp;lt;Render config={config} data={data} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the package&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i @measured/puck --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or generate a puck application using a recipe&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx create-puck-app my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Recipes&lt;/h2&gt; &#xA;&lt;p&gt;Puck is a React component that can be easily integrated into your existing application. We also provide helpful recipes for common use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes/next&#34;&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/a&gt;: Next.js app example&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Puck can be configured to work with plugins. Plugins can extend the functionality to support novel functionality.&lt;/p&gt; &#xA;&lt;h3&gt;Official plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/packages/plugin-heading-analyzer&#34;&gt;&lt;code&gt;heading-analyzer&lt;/code&gt;&lt;/a&gt;: Analyze the heading outline of your page and be warned when you&#39;re not respecting WCAG 2 accessiblity standards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developing a plugin&lt;/h3&gt; &#xA;&lt;p&gt;The plugin API follows a React paradigm. Each plugin passed to the Puck editor can provide three functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;renderRoot&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root node of the preview content&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;renderRootFields&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root fields&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;renderFields&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the fields for the currently selected component&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each render function receives the &lt;code&gt;children&lt;/code&gt; prop, which you must render, and the &lt;code&gt;data&lt;/code&gt; prop, which can be used to read the data model.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s a basic plugin that renders a &#34;My plugin&#34; heading in the root field area:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const myPlugin = {&#xA;  renderRootFields: (props) =&amp;gt; (&#xA;    &amp;lt;div&amp;gt;&#xA;      {props.children}&#xA;&#xA;      &amp;lt;h2&amp;gt;My plugin&amp;lt;/h2&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  ),&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;Puck&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;Puck&amp;gt;&lt;/code&gt; component renders the Puck editor.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; (&lt;code&gt;Config&lt;/code&gt;): Puck component configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; (&lt;code&gt;Data&lt;/code&gt;): Initial data to render&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;onChange&lt;/strong&gt; (&lt;code&gt;(Data) =&amp;gt; void&lt;/code&gt; [optional]): Callback that triggers when the user makes a change&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;onPublish&lt;/strong&gt; (&lt;code&gt;(Data) =&amp;gt; void&lt;/code&gt; [optional]): Callback that triggers when the user hits the &#34;Publish&#34; button&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderHeader&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt; [optional]): Render function for overriding the Puck header component&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderHeaderActions&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt; [optional]): Render function for overriding the Puck header actions. Use a fragment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headerTitle&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; [optional]): Set the title shown in the header title&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headerPath&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; [optional]): Set a path to show after the header title&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;plugins&lt;/strong&gt; (&lt;code&gt;Plugin[]&lt;/code&gt; [optional]): Array of plugins that can be used to enhance Puck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;Render&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;Render&amp;gt;&lt;/code&gt; component renders user-facing UI using Puck data.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; (&lt;code&gt;Config&lt;/code&gt;): Puck component configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; (&lt;code&gt;Data&lt;/code&gt;): Data to render&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Config&lt;/code&gt; object describes which components Puck should render, how they should render and which inputs are available to them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;root&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): Title of the content, typically used for the page title.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;[fieldName]&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): User defined fields, used to describe the input data stored in the &lt;code&gt;root&lt;/code&gt; key.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;render&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render a React component at the root of your component tree. Useful for defining context providers.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;components&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Definitions for each of the components you want to show in the visual editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[componentName]&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): The Field objects describing the input data stored against this component.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;render&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render function for your React component. Receives props as defined in fields.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;defaultProps&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt; [optional]): Default props to pass to your component. Will show in fields.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Field&lt;/code&gt; represents a user input field shown in the Puck interface.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; (&lt;code&gt;text&lt;/code&gt; | &lt;code&gt;textarea&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;select&lt;/code&gt; | &lt;code&gt;radio&lt;/code&gt; | &lt;code&gt;external&lt;/code&gt; | &lt;code&gt;array&lt;/code&gt;): The input type to render&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;label&lt;/strong&gt; (&lt;code&gt;text&lt;/code&gt; [optional]): A label for the input. Will use the key if not provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;arrayFields&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Object describing sub-fields for items in an &lt;code&gt;array&lt;/code&gt; input &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[fieldName]&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): The Field objects describing the input data for each item&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;getItemSummary&lt;/strong&gt; (&lt;code&gt;(object, number) =&amp;gt; string&lt;/code&gt; [optional]): Function to get the name of each item when using the &lt;code&gt;array&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt; field types&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;defaultItemProps&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt; [optional]): Default props to pass to each new item added, when using a &lt;code&gt;array&lt;/code&gt; field type&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; (&lt;code&gt;object[]&lt;/code&gt;): array of items to render for select or radio inputs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;label&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adaptor&lt;/strong&gt; (&lt;code&gt;Adaptor&lt;/code&gt;): Content adaptor if using the &lt;code&gt;external&lt;/code&gt; input type&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adaptorParams&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Paramaters passed to the adaptor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Data&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Data&lt;/code&gt; object stores the puck state.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;root&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; (string): Title of the content, typically used for the page title&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[prop]&lt;/strong&gt; (string): User defined data from &lt;code&gt;root&lt;/code&gt; fields&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;content&lt;/strong&gt; (&lt;code&gt;object[]&lt;/code&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; (string): Component name&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;props&lt;/strong&gt; (object): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;[prop]&lt;/strong&gt; (string): User defined data from component fields&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Adaptor&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;An &lt;code&gt;Adaptor&lt;/code&gt; can be used to load content from an external content repository, like Strapi.js.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt;): The human-readable name of the adaptor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fetchList&lt;/strong&gt; (&lt;code&gt;(adaptorParams: object) =&amp;gt; object&lt;/code&gt;): Fetch a list of content and return an array&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NB Using an adaptor on the reserved field name &lt;code&gt;_data&lt;/code&gt; will spread the resulting data over your object, and lock the overridden fields.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;code&gt;Plugin&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Plugins that can be used to enhance Puck.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderRoot&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root node of the preview content&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderRootFields&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root fields&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderFields&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the fields for the currently selected component&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hire the Puck team&lt;/h2&gt; &#xA;&lt;p&gt;Puck is developed and maintained by &lt;strong&gt;Measured&lt;/strong&gt;, a small group of industry veterans with decades of experience helping companies solve hard UI problems. We offer consultancy and development services for scale-ups, SMEs and enterprises.&lt;/p&gt; &#xA;&lt;p&gt;If you need support integrating Puck or creating a beautiful component library, please reach out via &lt;a href=&#34;https://measured.co&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://github.com/measuredco&#34;&gt;Measured Co.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>run-llama/sec-insights</title>
    <updated>2023-09-08T01:22:53Z</updated>
    <id>tag:github.com,2023-09-08:/run-llama/sec-insights</id>
    <link href="https://github.com/run-llama/sec-insights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A real world full-stack application using LlamaIndex&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SEC Insights üè¶&lt;/h1&gt; &#xA;&lt;p&gt;SEC Insights uses the Retrieval Augmented Generation (RAG) capabilities of &lt;a href=&#34;https://github.com/jerryjliu/llama_index&#34;&gt;LlamaIndex&lt;/a&gt; to answer questions about SEC 10-K &amp;amp; 10-Q documents.&lt;/p&gt; &#xA;&lt;p&gt;You can start using the application now at &lt;a href=&#34;https://www.secinsights.ai/&#34;&gt;secinsights.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also check out our &lt;a href=&#34;https://youtu.be/2O52Tfj79T4?si=CYUcaBkc9P9g_m0P&#34;&gt;End-to-End tutorial guide on YouTube&lt;/a&gt; for this project! This video covers product features, system architecture, development environment setup, and how to use this application with your own custom documents &lt;em&gt;(beyond just SEC filings!)&lt;/em&gt;. The video has chapters so you can skip to the section most relevant to you.&lt;/p&gt; &#xA;&lt;h2&gt;Why did we make this? ü§î&lt;/h2&gt; &#xA;&lt;p&gt;As RAG applications look to move increasingly from prototype to production, we thought our developer community would find value in having a complete example of a working real world RAG application.&lt;/p&gt; &#xA;&lt;p&gt;SEC Insights works as well locally as it does in the cloud. It also comes with many product features that will be immediately applicable to most RAG applications.&lt;/p&gt; &#xA;&lt;p&gt;Use this repository as a reference when building out your own RAG application or fork it entirely to start your project off with a solid foundation.&lt;/p&gt; &#xA;&lt;h2&gt;Product Features üòé&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat-based Document Q&amp;amp;A against a pool of documents&lt;/li&gt; &#xA; &lt;li&gt;Citation of source data that LLM response was based on&lt;/li&gt; &#xA; &lt;li&gt;PDF Viewer with highlighting of citations&lt;/li&gt; &#xA; &lt;li&gt;Use of API-based tools (&lt;a href=&#34;https://polygon.io/&#34;&gt;polygon.io&lt;/a&gt;) for answering quantitative questions&lt;/li&gt; &#xA; &lt;li&gt;Token-level streaming of LLM responses via &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&#34;&gt;Server-Sent Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Streaming of Reasoning Steps (Sub-Questions) within Chat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Features ü§ì&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infrastructure-as-code for deploying directly to &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://render.com/&#34;&gt;Render&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robust local environment setup making use of &lt;a href=&#34;https://localstack.cloud/&#34;&gt;LocalStack&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; compose&lt;/li&gt; &#xA; &lt;li&gt;Monitoring &amp;amp; Profiling provided by &lt;a href=&#34;https://sentry.io/welcome/&#34;&gt;Sentry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Load Testing provided by &lt;a href=&#34;https://loader.io/&#34;&gt;Loader.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Variety of python scripts for REPL-based interaction &amp;amp; data management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack ‚öíÔ∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt; / &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Backend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.sqlalchemy.org/&#34;&gt;SQLAlchemy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; (gpt-3.5-turbo + text-embedding-ada-002)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;PGVector&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.llamaindex.ai/&#34;&gt;LlamaIndex ü¶ô&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Infrastructure &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://render.com/&#34;&gt;Render.com&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Backend hosting&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres 15&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Frontend Hosting&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/cloudfront/&#34;&gt;Cloudfront&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;S3&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;System Architecture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.plantuml.com/plantuml/uml/jLJ1RjD04BtxAuPmo2bLsgGIaH0YYMqe0XhL4HoggjhOKsVRzMoqEsuR4F_EncxTDEjGX8GFbdRUcpTldZVfGeXNaX2KMEkI8PC6KvQQRF0ggv7FKJo_d9zUdfry-3WFWgR3wiAzUAtS6vabvJQmDv9MmeW2LYAz4Jd2pm3SCt6dtEYIigbMsi3hy70wZ4O0NKYGOT70a5OuQoW4fqlW9O8mHj_LG2scJORcGMXGFLKzriI9_85mE6pEFYjXDAXvlS8jFAuU3s_qsf1gyubMsGuuLZ8dI95S9VWLR6MIAbrc_psHez6R_cJKdi1pFvbWiH1sxqUAmsWIzlq9uU1usE__pOJQQ2t_R4-lUJWS7KTLTRwKwGsXjN3qN8nqji_gt0YoZeN4EtPzx0NB1bCMbAkzgKJZA8p2bjodW-Zu3way2NVEa5pVGQgB3WWBzV5XtdaiB8zd9zLW1rpKrQdH19_qeZusNswcBUS6xMP0VRqwu-y998FEezoiN2YPmYoCOL8wHNuGd1bvAnWXOMr4ZbDDZFVSS9xqedj6Gq91WkPMfcWRwIIQTYr4MIuCECSNyBQNwJlgxRXrixHQvveEf8POag1KEhbGiDXfQryzGMAptZH_qIHP6qdvfadX5UzjEbqXZKyUFRyumwTxcxX47l_KEj_GfAYQ8Bwwv0wkBSIEp4wq8dSXSNpd5KHsNLekaDX2QJULfSmofFhdOGE_7thdDUMYpR5NsQOtDwAnlWstteTsvaitfDLskUgzynstKXsnpOpNN36RhThXFLxz3Vsv7kMV51j_mNjdgYnKy1i0&#34;&gt;&lt;img src=&#34;https://www.plantuml.com/plantuml/png/jLJ1RjD04BtxAuPmo2bLsgGIaH0YYMqe0XhL4HoggjhOKsVRzMoqEsuR4F_EncxTDEjGX8GFbdRUcpTldZVfGeXNaX2KMEkI8PC6KvQQRF0ggv7FKJo_d9zUdfry-3WFWgR3wiAzUAtS6vabvJQmDv9MmeW2LYAz4Jd2pm3SCt6dtEYIigbMsi3hy70wZ4O0NKYGOT70a5OuQoW4fqlW9O8mHj_LG2scJORcGMXGFLKzriI9_85mE6pEFYjXDAXvlS8jFAuU3s_qsf1gyubMsGuuLZ8dI95S9VWLR6MIAbrc_psHez6R_cJKdi1pFvbWiH1sxqUAmsWIzlq9uU1usE__pOJQQ2t_R4-lUJWS7KTLTRwKwGsXjN3qN8nqji_gt0YoZeN4EtPzx0NB1bCMbAkzgKJZA8p2bjodW-Zu3way2NVEa5pVGQgB3WWBzV5XtdaiB8zd9zLW1rpKrQdH19_qeZusNswcBUS6xMP0VRqwu-y998FEezoiN2YPmYoCOL8wHNuGd1bvAnWXOMr4ZbDDZFVSS9xqedj6Gq91WkPMfcWRwIIQTYr4MIuCECSNyBQNwJlgxRXrixHQvveEf8POag1KEhbGiDXfQryzGMAptZH_qIHP6qdvfadX5UzjEbqXZKyUFRyumwTxcxX47l_KEj_GfAYQ8Bwwv0wkBSIEp4wq8dSXSNpd5KHsNLekaDX2QJULfSmofFhdOGE_7thdDUMYpR5NsQOtDwAnlWstteTsvaitfDLskUgzynstKXsnpOpNN36RhThXFLxz3Vsv7kMV51j_mNjdgYnKy1i0&#34; alt=&#34;System Architecture&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage üíª&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;README.md&lt;/code&gt; files in &lt;code&gt;frontend/&lt;/code&gt; &amp;amp; &lt;code&gt;backend/&lt;/code&gt; folders for individual setup instructions for each. As mentioned above, we also have a YouTube tutorial &lt;a href=&#34;https://youtu.be/2O52Tfj79T4?si=1Tm3zvuqna5ei4Cu&amp;amp;t=677&#34;&gt;here&lt;/a&gt; that covers how to setup up this project&#39;s development environment.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve also included a config for a &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;Github Codespace&lt;/a&gt; in &lt;a href=&#34;https://github.com/run-llama/sec-insights/raw/main/.devcontainer/devcontainer.json&#34;&gt;&lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt;&lt;/a&gt;. If you choose to use Github Codespaces, your codespace will come pre-configured with a lot of the libraries and system dependencies that are needed to run this project. This is probably the fastest way to get this project up and running!&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions when trying to run this project, you may find your answer quickly by reviewing our &lt;a href=&#34;https://raw.githubusercontent.com/run-llama/sec-insights/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt; or by searching through our &lt;a href=&#34;https://github.com/run-llama/sec-insights/issues&#34;&gt;Github issues&lt;/a&gt;! If you don&#39;t see a satisfactory answer to your question, feel free to &lt;a href=&#34;https://github.com/run-llama/sec-insights/issues/new&#34;&gt;open a Github issue&lt;/a&gt; so we may assist you!&lt;/p&gt; &#xA;&lt;h2&gt;Caveats üßê&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The frontend currently doesn&#39;t support Mobile&lt;/li&gt; &#xA; &lt;li&gt;Our main goal with this project is to provide a solid foundation for full-stack RAG apps. There is still room for improvement in terms of RAG performance!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing üí°&lt;/h2&gt; &#xA;&lt;p&gt;We remain very open to contributions! We&#39;re looking forward to seeing the ideas and improvements the LlamaIndex community is able to provide.&lt;/p&gt; &#xA;&lt;p&gt;Huge shoutout to &lt;a href=&#34;https://github.com/Evanc123&#34;&gt;&lt;strong&gt;@Evanc123&lt;/strong&gt;&lt;/a&gt; for his fantastic work building the frontend for this project!&lt;/p&gt;</summary>
  </entry>
</feed>