<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-10T01:28:30Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dbeaver/dbeaver</title>
    <updated>2024-10-10T01:28:30Z</updated>
    <id>tag:github.com,2024-10-10:/dbeaver/dbeaver</id>
    <link href="https://github.com/dbeaver/dbeaver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free universal database tool and SQL client&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/dbeaver_news&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/dbeaver_news.svg?style=social&amp;amp;label=Follow%20%40dbeaver_news&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codacy.com/gh/dbeaver/dbeaver/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/fa0bb9cf5a904c7d87424f8f6351ba92&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cronn-de/jira-sync.svg?sanitize=true&#34; alt=&#34;Apache 2.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/dbeaver/dbeaver/wiki/images/dbeaver-icon-64x64.png&#34; align=&#34;right&#34;&gt; &#xA;&lt;h1&gt;DBeaver&lt;/h1&gt; &#xA;&lt;p&gt;Free multi-platform database tool for developers, SQL programmers, database administrators and analysts.&lt;br&gt; Supports any database which has JDBC driver (which basically means - ANY database). &lt;a href=&#34;https://dbeaver.com/download/&#34;&gt;Commercial versions&lt;/a&gt; also support non-JDBC datasources such as MongoDB, Cassandra, Couchbase, Redis, BigTable, ScyllaDB, DynamoDB, etc. You can find the list of all databases supported in commercial versions &lt;a href=&#34;https://dbeaver.com/databases/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Has a lot of &lt;a href=&#34;https://github.com/dbeaver/dbeaver/wiki&#34;&gt;features&lt;/a&gt; including metadata editor, SQL editor, rich data editor, ERD, data export/import/migration, SQL execution plans, etc.&lt;/li&gt; &#xA; &lt;li&gt;Based on &lt;a href=&#34;https://wiki.eclipse.org/Rich_Client_Platform&#34;&gt;Eclipse&lt;/a&gt; platform.&lt;/li&gt; &#xA; &lt;li&gt;Uses plugins architecture and provides additional functionality for the following databases: MySQL/MariaDB, PostgreSQL, Greenplum, Oracle, IBM Db2, Exasol, SQL Server, Sybase/SAP ASE, SQLite, Firebird, H2, HSQLDB, Derby, Teradata, Vertica, Netezza, Informix, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dbeaver.io/product/dbeaver-ss-mock.png&#34;&gt;&lt;img src=&#34;https://dbeaver.io/product/dbeaver-ss-mock.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dbeaver.io/product/dbeaver-ss-erd.png&#34;&gt;&lt;img src=&#34;https://dbeaver.io/product/dbeaver-ss-erd.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dbeaver.io/product/dbeaver-ss-classic-new.png&#34;&gt;&lt;img src=&#34;https://dbeaver.io/product/dbeaver-ss-classic-new.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dbeaver.io/product/dbeaver-ss-dark-new.png&#34;&gt;&lt;img src=&#34;https://dbeaver.io/product/dbeaver-ss-dark-new.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;You can download prebuilt binaries from &lt;a href=&#34;https://dbeaver.io/download&#34; target=&#34;_blank&#34;&gt;official website&lt;/a&gt; or directly from &lt;a href=&#34;https://github.com/dbeaver/dbeaver/releases&#34;&gt;GitHub releases&lt;/a&gt;.&lt;br&gt; You can also download &lt;a href=&#34;https://dbeaver.io/files/ea&#34; target=&#34;_blank&#34;&gt;Early Access&lt;/a&gt; version. We publish daily.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Just run an installer (or unzip an archive) and run &lt;code&gt;dbeaver&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: DBeaver needs Java to run. &lt;a href=&#34;https://adoptium.net/&#34; target=&#34;_blank&#34;&gt;Open JDK 17&lt;/a&gt; is included in all DBeaver distributions. You can change default JDK version by replacing directory &lt;code&gt;jre&lt;/code&gt; in dbeaver installation folder.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dbeaver.com/docs/dbeaver/&#34;&gt;Full product documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dbeaver/dbeaver/wiki&#34;&gt;WIKI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dbeaver/dbeaver/issues&#34;&gt;Issue tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build from sources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dbeaver/dbeaver/wiki/Build-from-sources&#34;&gt;See this article.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For bug reports and feature requests - please &lt;a href=&#34;https://github.com/dbeaver/dbeaver/issues&#34;&gt;create a ticket&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have any questions, ideas, etc - please &lt;a href=&#34;https://github.com/dbeaver/dbeaver/discussions&#34;&gt;start a discussion&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests are welcome.&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://dbeaver.com&#34;&gt;https://dbeaver.com&lt;/a&gt; for more information.&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://twitter.com/dbeaver_news/&#34;&gt;Twitter&lt;/a&gt; and watch educational video on &lt;a href=&#34;https://www.youtube.com/@DBeaver_video&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thanks for using DBeaver! Star if you like it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution: help the Beaver!&lt;/h2&gt; &#xA;&lt;p&gt;Hooray, we have reached 35k+ stars on GitHub and continue to grow!&lt;br&gt; That&#39;s really cool, and we are glad that you like DBeaver.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are actively looking for new source code contributors. We have added labels “Good first issue” and “Help wanted” to some tickets. If you want to be a part of our development team, just be brave and take a ticket. &lt;a href=&#34;https://dbeaver.com/help-dbeaver/&#34;&gt;We are happy to reward&lt;/a&gt; our most active contributors every major sprint.&lt;/li&gt; &#xA; &lt;li&gt;You can buy &lt;a href=&#34;https://dbeaver.com/buy/&#34;&gt;one of our commercial versions&lt;/a&gt;. They include NoSQL databases support, additional extensions, and official online support. Also, licensed users have priorities in bug fixes and the development of new features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dbeaver/dbeaver/graphs/contributors&#34;&gt;DBeaver Team&lt;/a&gt; (contributors)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dbeaver/cloudbeaver/&#34;&gt;&lt;img src=&#34;https://github.com/dbeaver/cloudbeaver/wiki/images/cloudbeaver-logo.png&#34; width=&#34;250&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DBeaver is a desktop client.&lt;br&gt; If you are looking for a web-based database management tool - check our new product: &lt;a href=&#34;https://cloudbeaver.io/&#34;&gt;CloudBeaver&lt;/a&gt;.&lt;br&gt; It is based on DBeaver platform and thus supports any database and most of DBeaver features.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/terraform-provider-azurerm</title>
    <updated>2024-10-10T01:28:30Z</updated>
    <id>tag:github.com,2024-10-10:/hashicorp/terraform-provider-azurerm</id>
    <link href="https://github.com/hashicorp/terraform-provider-azurerm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform provider for Azure Resource Manager&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://terraform.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/.github/tf.png&#34; alt=&#34;Terraform logo&#34; title=&#34;Terraform&#34; align=&#34;left&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Terraform Provider for Azure (Resource Manager)&lt;/h1&gt; &#xA;&lt;p&gt;The AzureRM Terraform Provider allows managing resources within Azure Resource Manager.&lt;/p&gt; &#xA;&lt;p&gt;When using version 4.0 of the AzureRM Provider we recommend using the latest version of Terraform Core (&lt;a href=&#34;https://developer.hashicorp.com/terraform/install&#34;&gt;the latest version can be found here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terraform.io&#34;&gt;Terraform Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;AzureRM Provider Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;AzureRM Provider Usage Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terraform-azure.slack.com&#34;&gt;Slack Workspace for Contributors&lt;/a&gt; (&lt;a href=&#34;https://join.slack.com/t/terraform-azure/shared_invite/enQtNDMzNjQ5NzcxMDc3LWNiY2ZhNThhNDgzNmY0MTM0N2MwZjE4ZGU0MjcxYjUyMzRmN2E5NjZhZmQ0ZTA1OTExMGNjYzA4ZDkwZDYxNDE&#34;&gt;Request Invite&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# 1. Specify the version of the AzureRM Provider to use&#xA;terraform {&#xA;  required_providers {&#xA;    azurerm = {&#xA;      source = &#34;hashicorp/azurerm&#34;&#xA;      version = &#34;=3.0.1&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;# 2. Configure the AzureRM Provider&#xA;provider &#34;azurerm&#34; {&#xA;  # The AzureRM Provider supports authenticating using via the Azure CLI, a Managed Identity&#xA;  # and a Service Principal. More information on the authentication methods supported by&#xA;  # the AzureRM Provider can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#authenticating-to-azure&#xA;&#xA;  # The features block allows changing the behaviour of the Azure Provider, more&#xA;  # information can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block&#xA;  features {}&#xA;}&#xA;&#xA;# 3. Create a resource group&#xA;resource &#34;azurerm_resource_group&#34; &#34;example&#34; {&#xA;  name     = &#34;example-resources&#34;&#xA;  location = &#34;West Europe&#34;&#xA;}&#xA;&#xA;# 4. Create a virtual network within the resource group&#xA;resource &#34;azurerm_virtual_network&#34; &#34;example&#34; {&#xA;  name                = &#34;example-network&#34;&#xA;  resource_group_name = azurerm_resource_group.example.name&#xA;  location            = azurerm_resource_group.example.location&#xA;  address_space       = [&#34;10.0.0.0/16&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;Usage documentation for the AzureRM Provider can be found in the Terraform Registry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/azure-get-started&#34;&gt;Learn more about Terraform and the AzureRM Provider on HashiCorp Learn&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;Additional examples can be found in the &lt;code&gt;./examples&lt;/code&gt; folder within this repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing &amp;amp; Contributing to the Provider&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt; file is a basic outline on how to build and develop the provider while more detailed guides geared towards contributors can be found in the &lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/contributing&#34;&gt;&lt;code&gt;/contributing&lt;/code&gt;&lt;/a&gt; directory of this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HumanSignal/label-studio</title>
    <updated>2024-10-10T01:28:30Z</updated>
    <id>tag:github.com,2024-10-10:/HumanSignal/label-studio</id>
    <link href="https://github.com/HumanSignal/label-studio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Label Studio is a multi-type data labeling and annotation tool with standardized output format&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12534576/192582340-4c9e4401-1fe6-4dbb-95bb-fdbba5493f61.png&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg?sanitize=true&#34; alt=&#34;label-studio:build&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases&#34; alt=&#34;GitHub release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://labelstud.io/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://labelstud.io/guide/&#34;&gt;Docs&lt;/a&gt; • &lt;a href=&#34;https://twitter.com/labelstudiohq&#34;&gt;Twitter&lt;/a&gt; • &lt;a href=&#34;https://slack.labelstud.io/?source=github-1&#34;&gt;Join Slack Community &lt;img src=&#34;https://app.heartex.ai/docs/images/slack-mini.png&#34; width=&#34;18px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Label Studio?&lt;/h2&gt; &#xA;&lt;!-- &lt;a href=&#34;https://labelstud.io/blog/release-130.html&#34;&gt;&lt;img src=&#34;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&#34; align=&#34;right&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;p&gt;Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#try-out-label-studio&#34;&gt;Try out Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#what-you-get-from-label-studio&#34;&gt;What you get from Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#included-templates-for-labeling-data-in-label-studio&#34;&gt;Included templates for labeling data in Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#set-up-machine-learning-models-with-Label-Studio&#34;&gt;Set up machine learning models with Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#integrate-label-studio-with-your-existing-tools&#34;&gt;Integrate Label Studio with your existing tools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif&#34; alt=&#34;Gif of Label Studio annotating different types of data&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Have a custom dataset? You can customize Label Studio to fit your needs. Read an &lt;a href=&#34;https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881&#34;&gt;introductory blog post&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Try out Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Install Label Studio locally, or deploy it in a cloud instance. &lt;a href=&#34;https://heartex.com/free-trial&#34;&gt;Or, sign up for a free trial of our Enterprise edition.&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-docker&#34;&gt;Install locally with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#run-with-docker-compose&#34;&gt;Run with Docker Compose (Label Studio + Nginx + PostgreSQL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-pip&#34;&gt;Install locally with pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-poetry&#34;&gt;Install locally with poetry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-anaconda&#34;&gt;Install locally with Anaconda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-for-local-development&#34;&gt;Install for local development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#deploy-in-a-cloud-instance&#34;&gt;Deploy in a cloud instance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install locally with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Official Label Studio docker image is &lt;a href=&#34;https://hub.docker.com/r/heartexlabs/label-studio&#34;&gt;here&lt;/a&gt; and it can be downloaded with &lt;code&gt;docker pull&lt;/code&gt;. Run Label Studio in a Docker container and access it at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull heartexlabs/label-studio:latest&#xA;docker run -it -p 8080:8080 -v $(pwd)/mydata:/label-studio/data heartexlabs/label-studio:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find all the generated assets, including SQLite3 database storage &lt;code&gt;label_studio.sqlite3&lt;/code&gt; and uploaded files, in the &lt;code&gt;./mydata&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;Override default Docker install&lt;/h4&gt; &#xA;&lt;p&gt;You can override the default launch command by appending the new arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it -p 8080:8080 -v $(pwd)/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build a local image with Docker&lt;/h4&gt; &#xA;&lt;p&gt;If you want to build a local image, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t heartexlabs/label-studio:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Docker Compose script provides production-ready stack consisting of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Label Studio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; - proxy web server used to load various static data, including uploaded audio, images, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; - production-ready database that replaces less performant SQLite3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To start using the app from &lt;code&gt;http://localhost&lt;/code&gt; run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with Docker Compose + MinIO&lt;/h3&gt; &#xA;&lt;p&gt;You can also run it with an additional MinIO server for local S3 storage. This is particularly useful when you want to test the behavior with S3 storage on your local system. To start Label Studio in this way, you need to run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add sudo on Linux if you are not a member of the docker group&#xA;docker compose -f docker-compose.yml -f docker-compose.minio.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not have a static IP address, you must create an entry in your hosts file so that both Label Studio and your browser can access the MinIO server. For more detailed instructions, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/docs/source/guide/storedata.md&#34;&gt;our guide on storing data&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install locally with pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Requires Python &amp;gt;=3.8&#xA;pip install label-studio&#xA;&#xA;# Start the server at http://localhost:8080&#xA;label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with poetry&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### install poetry&#xA;pip install poetry&#xA;&#xA;### set poetry environment&#xA;poetry new my-label-studio&#xA;cd my-label-studio&#xA;poetry add label-studio&#xA;&#xA;### activate poetry environment&#xA;poetry shell&#xA;&#xA;### Start the server at http://localhost:8080&#xA;label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with Anaconda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --name label-studio&#xA;conda activate label-studio&#xA;conda install psycopg2&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install for local development&lt;/h3&gt; &#xA;&lt;p&gt;You can run the latest Label Studio version locally without installing the package from pypi.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install all package dependencies&#xA;pip install poetry&#xA;poetry install&#xA;# Run database migrations&#xA;python label_studio/manage.py migrate&#xA;python label_studio/manage.py collectstatic&#xA;# Start the server in development mode at http://localhost:8080&#xA;python label_studio/manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy in a cloud instance&lt;/h3&gt; &#xA;&lt;p&gt;You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json&#34;&gt;&lt;img src=&#34;https://aka.ms/deploytoazurebutton&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deploy.cloud.run&#34;&gt;&lt;img src=&#34;https://deploy.cloud.run/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Apply frontend changes&lt;/h4&gt; &#xA;&lt;p&gt;For information about updating the frontend, see &lt;a href=&#34;https://github.com/HumanSignal/label-studio/raw/develop/web/README.md#installation-instructions&#34;&gt;label-studio/web/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Install dependencies on Windows&lt;/h4&gt; &#xA;&lt;p&gt;To run Label Studio on Windows, download and install the following wheel packages from &lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs&#34;&gt;Gohlke builds&lt;/a&gt; to ensure you&#39;re using the correct version of Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&#34;&gt;lxml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Upgrade pip &#xA;pip install -U pip&#xA;&#xA;# If you&#39;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:&#xA;pip install lxml‑4.5.0‑cp38‑cp38‑win_amd64.whl&#xA;&#xA;# Install label studio&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run test suite&lt;/h3&gt; &#xA;&lt;p&gt;To add the tests&#39; dependencies to your local install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install --with test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, it is possible to run the unit tests from a Docker container in which the test dependencies are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build-testing-image&#xA;make docker-testing-shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In either case, to run the unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd label_studio&#xA;&#xA;# sqlite3&#xA;DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio pytest -vv&#xA;&#xA;# postgres (assumes default postgres user,db,pass. Will not work in Docker&#xA;# testing container without additional configuration)&#xA;DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio pytest -vv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What you get from Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif&#34; alt=&#34;Screenshot of Label Studio data manager grid view with images&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user labeling&lt;/strong&gt; sign up and login, when you create an annotation it&#39;s tied to your account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple projects&lt;/strong&gt; to work on all your datasets in one instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Streamlined design&lt;/strong&gt; helps you focus on your task, not how to use the software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable label formats&lt;/strong&gt; let you customize the visual interface to meet your specific labeling needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support for multiple data types&lt;/strong&gt; including images, audio, text, HTML, time-series, and video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import from files or from cloud storage&lt;/strong&gt; in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integration with machine learning models&lt;/strong&gt; so that you can visualize and compare predictions from different models and perform pre-labeling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embed it in your data pipeline&lt;/strong&gt; REST API makes it easy to make it a part of your pipeline&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Included templates for labeling data in Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&#34;&gt; &#xA;&lt;h2&gt;Set up machine learning models with Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start your own machine learning backend server. See &lt;a href=&#34;https://github.com/heartexlabs/label-studio-ml-backend&#34;&gt;more detailed instructions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect Label Studio to the server on the model page found in project settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This lets you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pre-label&lt;/strong&gt; your data using model predictions.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;online learning&lt;/strong&gt; and retrain your model while new annotations are being created.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;active learning&lt;/strong&gt; by labeling only the most complex examples in your data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrate Label Studio with your existing tools&lt;/h2&gt; &#xA;&lt;p&gt;You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.&lt;/p&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;label-studio&lt;/td&gt; &#xA;   &lt;td&gt;Server, distributed as a pip package&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/web/libs/editor/&#34;&gt;Frontend library&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Label Studio frontend library. This uses React to build the UI and mobx-state-tree for state management.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/web/libs/datamanager/&#34;&gt;Data Manager library&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A library for the Data Manager, our data exploration tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HumanSignal/label-studio-converter&#34;&gt;label-studio-converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Encode labels in the format of your favorite machine learning library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HumanSignal/label-studio-transformers&#34;&gt;label-studio-transformers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transformers library connected and configured for use with Label Studio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@misc{Label Studio,&#xA;  title={{Label Studio}: Data labeling software},&#xA;  url={https://github.com/HumanSignal/label-studio},&#xA;  note={Open source software available from https://github.com/HumanSignal/label-studio},&#xA;  author={&#xA;    Maxim Tkachenko and&#xA;    Mikhail Malyuk and&#xA;    Andrey Holmanyuk and&#xA;    Nikolai Liubimov},&#xA;  year={2020-2024},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/HumanSignal/label-studio/develop/LICENSE&#34;&gt;Apache 2.0 LICENSE&lt;/a&gt; © &lt;a href=&#34;https://www.heartex.com/&#34;&gt;Heartex&lt;/a&gt;. 2020-2024&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/12534576/192582529-cf628f58-abc5-479b-a0d4-8a3542a4b35e.png&#34; title=&#34;Hey everyone!&#34; width=&#34;180&#34;&gt;</summary>
  </entry>
</feed>