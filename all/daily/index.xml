<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-26T01:25:26Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Unity-Technologies/TermsOfService</title>
    <updated>2023-09-26T01:25:26Z</updated>
    <id>tag:github.com,2023-09-26:/Unity-Technologies/TermsOfService</id>
    <link href="https://github.com/Unity-Technologies/TermsOfService" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Current and prior versions of the terms that apply to your use of the Unity Editor software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UNITY EDITOR SOFTWARE ADDITIONAL TERMS&lt;/h1&gt; &#xA;&lt;p&gt;We are republishing this GitHub repository, where you can find all current and prior versions of our Unity Editor Software Additional Terms (previously titled ‘Unity Software Additional Terms’) from June 28, 2016.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unity.com/legal&#34;&gt;Unity.com/legal&lt;/a&gt; is the best place to find all of our latest agreements all in one place. Other agreements may be applicable to you depending on the products and services you’re using. When we update any of our agreements, we post a summary of the changes under the heading “What’s changed”, and include a link on each page to the immediately prior version of such terms.&lt;/p&gt; &#xA;&lt;p&gt;The last changes were made on April 3, 2023. We are working to make sure that you can stay on the terms applicable for the version of Unity you are using as long as you keep using that version. More details to come. We will post these changes here and on &lt;a href=&#34;https://unity.com/legal&#34;&gt;https://unity.com/legal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Revisions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/master/Unity%20Software%20Additional%20Terms.md&#34;&gt;April 3, 2023&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/71654bf/Unity%20Software%20Additional%20Terms.md&#34;&gt;October 13, 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/d7b5909/Unity%20Software%20Additional%20Terms.md&#34;&gt;March 10, 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/a99de88/Unity%20Software%20Additional%20Terms.md&#34;&gt;January 16, 2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/847ff5f/Unity%20Software%20Additional%20Terms.md&#34;&gt;December 05, 2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/d2917a6/Unity%20Software%20Additional%20Terms.md&#34;&gt;February 21, 2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/7532a20/Unity%20Software%20Additional%20Terms.md&#34;&gt;November 04, 2016&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Unity-Technologies/TermsOfService/2f4f89f/Unity%20Software%20Additional%20Terms.md&#34;&gt;June 28, 2016&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In September 2023 the metadata in this repository was modified to update the email address used for all commits.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jaytaph/gosub-browser</title>
    <updated>2023-09-26T01:25:26Z</updated>
    <id>tag:github.com,2023-09-26:/jaytaph/gosub-browser</id>
    <link href="https://github.com/jaytaph/gosub-browser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A html5 tokenizer / parser that hopefully grow up to be a browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoSub: Gateway to Optimized Searching and Unlimited Browsing&lt;/h1&gt; &#xA;&lt;p&gt;A feeble attempt on writing a browser and learning rust.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: code in the main branch is currently not stable and might not even compile.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;                       _     &#xA;                      | |    &#xA;  __ _  ___  ___ _   _| |__  &#xA; / _` |/ _ \/ __| | | | &#39;_ \ &#xA;| (_| | (_) \__ \ |_| | |_) |&#xA; \__, |\___/|___/\__,_|_.__/ &#xA;  __/ |  The Gateway to                    &#xA; |___/   Optimized Searching and &#xA;         Unlimited Browsing                    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This repository is part of the GoSub browser project. Currently there is only a single component/repository (this one), but the idea will be that there are many other components that as a whole make up a full-fledged browser. Each of the components can probably function as something standalone (ie: html5 parser, css parser, etc).&lt;/p&gt; &#xA;&lt;p&gt;In the future, this component (html5 parser) will receive through an API a stream of bytes and will output a stream of events. The events will be consumed by the next component and so on, until we can display something in a window/user agent. This could very well be a text-mode browser, but the idea is to have a graphical browser.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This is a work in progress. The current status is that the parser can parse a few html5 documents, but it is far from ready. The main goal is to be able to parse correctly all the tests in the html5lib-tests repository (&lt;a href=&#34;https://github.com/html5lib/html5lib-tests&#34;&gt;https://github.com/html5lib/html5lib-tests&lt;/a&gt;). As soon as we can do this, we can try and see if we can generate a DOM tree and then we can start thinking about the next component (css parser).&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;This project uses cargo (&lt;a href=&#34;https://doc.rust-lang.org/cargo/&#34;&gt;https://doc.rust-lang.org/cargo/&lt;/a&gt;). To build the project, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create the following binaries and libs:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gosub-engine&lt;/td&gt; &#xA;   &lt;td&gt;lib&lt;/td&gt; &#xA;   &lt;td&gt;The actual html5 parser/tokenizer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gosub-browser&lt;/td&gt; &#xA;   &lt;td&gt;bin&lt;/td&gt; &#xA;   &lt;td&gt;Dummy browser (see below)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;parser_test&lt;/td&gt; &#xA;   &lt;td&gt;bin&lt;/td&gt; &#xA;   &lt;td&gt;A test suite for the parser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tokenizer_test&lt;/td&gt; &#xA;   &lt;td&gt;bin&lt;/td&gt; &#xA;   &lt;td&gt;A test suite for the tokenizer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Gosub-engine&lt;/h3&gt; &#xA;&lt;p&gt;This is the actual html5 parser/tokenizer. It is a library that can be used by other projects. It is not a standalone project. It is used by the gosub-browser project.&lt;/p&gt; &#xA;&lt;h3&gt;Gosub-browser&lt;/h3&gt; &#xA;&lt;p&gt;This is a dummy browser. It is not a real browser, it is just a test project to see if the parser/tokenizer is working and tries to parse the given url on the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gosub-browser https://www.google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parser_test&lt;/h3&gt; &#xA;&lt;p&gt;This is a test suite for the parser. It is not a standalone project. It is used by the gosub-engine project. You need to specify the directory to the html5lib-test in order to run, or it will use the default one (./html5lib-tests).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ parser_test /path/to/html5lib-tests&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>SlejmUr/PayCheck3</title>
    <updated>2023-09-26T01:25:26Z</updated>
    <id>tag:github.com,2023-09-26:/SlejmUr/PayCheck3</id>
    <link href="https://github.com/SlejmUr/PayCheck3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PayDay 3 Server Emulator Attempt&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PayCheck3&lt;/h1&gt; &#xA;&lt;p&gt;PayDay 3 (Live/Master Branch) Server emulator&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must own a legitimate copy of PAYDAY 3 to use this software, which can be purchased at &lt;a href=&#34;https://www.paydaythegame.com/payday3/#buy&#34;&gt;https://www.paydaythegame.com/payday3/#buy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The contributors of PayCheck3 in no way support piracy, and actively ensure that PayCheck3 does not work with an illegitimate copy. We&#39;re sorry to have caused any confusion that this could be used for piracy.&lt;/li&gt; &#xA; &lt;li&gt;This project is in no way affliated or endorsed by Starbreeze Entertainment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CURRENTLY MATCHMAKING IS NOT WORKING!&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for understanding! I working on a solution, no ETA yet.&lt;/p&gt; &#xA;&lt;h2&gt;Current State&lt;/h2&gt; &#xA;&lt;p&gt;Left to do (&amp;amp; Working on it):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WSS Response&lt;/li&gt; &#xA; &lt;li&gt;Party and GameSessions&lt;/li&gt; &#xA; &lt;li&gt;New Responses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Need more Interogation:&lt;br&gt; UDP Connection&lt;/p&gt; &#xA;&lt;p&gt;How to run:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go To Cert folder and follow readme.txt&lt;/li&gt; &#xA; &lt;li&gt;Copy crt &amp;amp; pfx files and paste next to PayCheck3ServerApp.exe&lt;/li&gt; &#xA; &lt;li&gt;Start the server.&lt;/li&gt; &#xA; &lt;li&gt;Go to your c:\Windows\System32\Drivers\etc\hosts and open it.&lt;/li&gt; &#xA; &lt;li&gt;Copy all stuff from hosts_edit.txt&lt;/li&gt; &#xA; &lt;li&gt;Run your Client &amp;amp; Have fun.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want your friends to join you, they need to edit the 127.0.0.1 to your IP (Can be Lan or your External)&lt;/p&gt; &#xA;&lt;h1&gt;Where can I get the built server?&lt;/h1&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/SlejmUr/PayCheck3/actions&#34;&gt;Github Actions&lt;/a&gt; you find most recent pushes/request Build version.&lt;/p&gt; &#xA;&lt;h1&gt;Configurate your server.&lt;/h1&gt; &#xA;&lt;p&gt;You see a config.json where you can edit some things that can edit server stuff.&lt;/p&gt; &#xA;&lt;h3&gt;Saves&lt;/h3&gt; &#xA;&lt;p&gt;SaveRequest: In here you can save each request when client send any change in the inventory. (Usefull for debug)&lt;br&gt; Extension: It basicly a json but with a funny extension&lt;/p&gt; &#xA;&lt;h3&gt;Hosting&lt;/h3&gt; &#xA;&lt;p&gt;IP: Currently is its 127.0.0.1 but can be changed to your IP or anything as IP (IT HOST GSTATIC,WSS,UDP too!!!)&lt;br&gt; WSS: Can enable/disable to run the HTTPS/WSS Server&lt;br&gt; UDP: Can enable/disable to run the UDP Server (GameServer?) [NOT USED]&lt;br&gt; GSTATIC: Can enable/disable to run the GSTATIC server (Enable you to play without internet)&lt;br&gt; UDP_PORT: Can set Port for UDP connection&lt;/p&gt; &#xA;&lt;h3&gt;InDevFeatures&lt;/h3&gt; &#xA;&lt;p&gt;Can enable/disable certain features that could land you something now work perfectly.&lt;/p&gt; &#xA;&lt;h1&gt;Soon stuff&#39;s&lt;/h1&gt; &#xA;&lt;p&gt;Aka just ideas&lt;/p&gt; &#xA;&lt;h3&gt;How to add your server&lt;/h3&gt; &#xA;&lt;p&gt;Open servers.json&lt;br&gt; Duplicate the eu-central-1 alias server&lt;br&gt; Edit the Status, Region, Port, IP to your UDP one&lt;/p&gt;</summary>
  </entry>
</feed>