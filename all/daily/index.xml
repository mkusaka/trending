<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-10T01:29:14Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>linsomniac/spotify_to_ytmusic</title>
    <updated>2025-06-10T01:29:14Z</updated>
    <id>tag:github.com,2025-06-10:/linsomniac/spotify_to_ytmusic</id>
    <link href="https://github.com/linsomniac/spotify_to_ytmusic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Copy playlists and liked music from Spotify to YTMusic&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;This is a set of scripts for copying &#34;liked&#34; songs and playlists from Spotify to YTMusic. It provides a GUI (implemented by Yoween, formerly called spotify_to_ytmusic_gui).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Preparation/Pre-Conditions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Python and Git&lt;/strong&gt; (you may already have them installed).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Uninstall the pip package from the original repository&lt;/strong&gt; (if you previously installed &lt;code&gt;linsomniac/spotify_to_ytmusic&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;On Windows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pip uninstall spotify2ytmusic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;On Linux or Mac:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip uninstall spotify2ytmusic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Setup Instructions&lt;/h3&gt; &#xA;&lt;h4&gt;1. Clone, Create a Virtual Environment, and Install Required Packages&lt;/h4&gt; &#xA;&lt;p&gt;Start by creating and activating a Python virtual environment to isolate dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linsomniac/spotify_to_ytmusic.git&#xA;cd spotify_to_ytmusic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv .venv&#xA;.venv\Scripts\activate&#xA;pip install ytmusicapi tk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux or Mac:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m venv .venv&#xA;source .venv/bin/activate&#xA;pip install ytmusicapi tk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;2. Generate YouTube Music Credentials&lt;/h4&gt; &#xA;&lt;p&gt;To use the YouTube Music API, you need to generate valid credentials. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Log in to YouTube Music&lt;/strong&gt;: Open YouTube Music in Firefox and ensure you are logged in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open the Inspection Tool&lt;/strong&gt;: Press &lt;code&gt;F12&lt;/code&gt; or right-click and select &lt;em&gt;Inspect&lt;/em&gt; to open the browser&#39;s inspection tool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access the Network Tab&lt;/strong&gt;: Navigate to the Network tab and filter by &lt;code&gt;/browse&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Select a Request&lt;/strong&gt;: Click one of the requests under the filtered results and locate the &lt;em&gt;Request Headers&lt;/em&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Toggle RAW View&lt;/strong&gt;: Click the RAW toggle button to view the headers in raw format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copy Headers&lt;/strong&gt;: Right-click, choose &lt;em&gt;Select All&lt;/em&gt;, and copy the content.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Paste into &lt;code&gt;raw_headers.txt&lt;/code&gt;&lt;/strong&gt;: Open the &lt;code&gt;raw_headers.txt&lt;/code&gt; file located in the main directory of this project and paste the copied content into it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the Script&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Execute the following command to generate the credentials file:&lt;/p&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python spotify2ytmusic/ytmusic_credentials.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux or Mac:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 spotify2ytmusic/ytmusic_credentials.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: After running this script, the authentication file will be created. When you launch the GUI in the next step, it will automatically detect this file and log in to YouTube Music without requiring manual input. You’ll see a log message confirming this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;File detected, auto login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The GUI will &lt;strong&gt;ignore the &#39;Login to YT Music&#39; tab&lt;/strong&gt; and jump straight to the &#39;Spotify Backup&#39; tab.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;3. Use the GUI for Migration&lt;/h4&gt; &#xA;&lt;p&gt;Now you can use the graphical user interface (GUI) to migrate your playlists and liked songs to YouTube Music. Start the GUI with the following command:&lt;/p&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m spotify2ytmusic gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux or Mac:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m spotify2ytmusic gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;GUI Features&lt;/h3&gt; &#xA;&lt;p&gt;Once the GUI is running, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backup Your Spotify Playlists&lt;/strong&gt;: Save your playlists and liked songs into the file &lt;code&gt;playlists.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Load Liked Songs&lt;/strong&gt;: Migrate your Spotify liked songs to YouTube Music.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;List Playlists&lt;/strong&gt;: View your playlists and their details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copy All Playlists&lt;/strong&gt;: Migrate all Spotify playlists to YouTube Music.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copy a Specific Playlist&lt;/strong&gt;: Select and migrate a specific Spotify playlist to YouTube Music.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Import Your Liked Songs - Tab 3&lt;/h3&gt; &#xA;&lt;h4&gt;Click the &lt;code&gt;import&lt;/code&gt; button, and wait until it finished and switched to the next tab&lt;/h4&gt; &#xA;&lt;p&gt;It will go through your Spotify liked songs, and like them on YTMusic. It will display the song from Spotify and then the song that it found on YTMusic that it is liking. I&#39;ve spot-checked my songs and it seems to be doing a good job of matching YTMusic songs with Spotify. So far I haven&#39;t seen a single failure across a couple hundred songs, but more esoteric titles it may have issues with.&lt;/p&gt; &#xA;&lt;h3&gt;List Your Playlists - Tab 4&lt;/h3&gt; &#xA;&lt;h4&gt;Click the &lt;code&gt;list&lt;/code&gt; button, and wait until it finished and switched to the next tab&lt;/h4&gt; &#xA;&lt;p&gt;This will list the playlists you have on both Spotify and YTMusic, so you can individually copy them.&lt;/p&gt; &#xA;&lt;h3&gt;Copy Your Playlists - Tab 5&lt;/h3&gt; &#xA;&lt;p&gt;You can either copy &lt;strong&gt;all&lt;/strong&gt; playlists, or do a more surgical copy of individual playlists. Copying all playlists will use the name of the Spotify playlist as the destination playlist name on YTMusic.&lt;/p&gt; &#xA;&lt;h4&gt;To copy all the playlists click the &lt;code&gt;copy&lt;/code&gt; button, and wait until it finished and switched to the next tab&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This does not copy the Liked playlist (see above to do that).&lt;/p&gt; &#xA;&lt;h3&gt;Copy specific Playlist - Tab 6&lt;/h3&gt; &#xA;&lt;p&gt;In the list output, find the &#34;playlist id&#34; (the first column) of the Spotify playlist and of the YTMusic playlist.&lt;/p&gt; &#xA;&lt;h4&gt;Then fill both input fields and click the &lt;code&gt;copy&lt;/code&gt; button&lt;/h4&gt; &#xA;&lt;p&gt;The copy playlist will take the name of the YTMusic playlist and will create the playlist if it does not exist, if you start the YTMusic playlist with a &#34;+&#34;:&lt;/p&gt; &#xA;&lt;p&gt;Re-running &#34;copy_playlist&#34; or &#34;load_liked&#34; in the event that it fails should be safe, it will not duplicate entries on the playlist.&lt;/p&gt; &#xA;&lt;h2&gt;Command Line Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Ways to Run&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: There are two possible ways to run these commands, one is via standalone commands if the application was installed, which takes the form of: &lt;code&gt;s2yt_load_liked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If not fully installed, you can replace the &#34;s2yt_&#34; with &#34;python -m spotify2ytmusic&#34;, for example: &lt;code&gt;s2yt_load_liked&lt;/code&gt; becomes &lt;code&gt;python -j spotify2ytmusic load_liked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Login to YTMusic&lt;/h3&gt; &#xA;&lt;p&gt;See &#34;Generate YouTube Music Credentials&#34; above.&lt;/p&gt; &#xA;&lt;h3&gt;Backup Your Spotify Playlists&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;spotify2ytmusic/spotify_backup.py&lt;/code&gt; and it will help you authorize access to your spotify account.&lt;/p&gt; &#xA;&lt;p&gt;Run: &lt;code&gt;python3 spotify_backup.py playlists.json --dump=liked,playlists --format=json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will save your playlists and liked songs into the file &#34;playlists.json&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Import Your Liked Songs&lt;/h3&gt; &#xA;&lt;p&gt;Run: &lt;code&gt;s2yt_load_liked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will go through your Spotify liked songs, and like them on YTMusic. It will display the song from spotify and then the song that it found on YTMusic that it is liking. I&#39;ve spot-checked my songs and it seems to be doing a good job of matching YTMusic songs with Spotify. So far I haven&#39;t seen a single failure across a couple thousand songs, but more esoteric titles it may have issues with.&lt;/p&gt; &#xA;&lt;h3&gt;Import Your Liked Albums&lt;/h3&gt; &#xA;&lt;p&gt;Run: &lt;code&gt;s2yt_load_liked_albums&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Spotify stores liked albums outside of the &#34;Liked Songs&#34; playlist. This is the command to load your liked albums into YTMusic liked songs.&lt;/p&gt; &#xA;&lt;h3&gt;List Your Playlists&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;s2yt_list_playlists&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will list the playlists you have on both Spotify and YTMusic. You will need to individually copy them.&lt;/p&gt; &#xA;&lt;h3&gt;Copy Your Playlists&lt;/h3&gt; &#xA;&lt;p&gt;You can either copy &lt;strong&gt;all&lt;/strong&gt; playlists, or do a more surgical copy of individual playlists. Copying all playlists will use the name of the Spotify playlist as the destination playlist name on YTMusic. To copy all playlists, run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;s2yt_copy_all_playlists&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This does not copy the Liked playlist (see above to do that).&lt;/p&gt; &#xA;&lt;p&gt;In the list output above, find the &#34;playlist id&#34; (the first column) of the Spotify playlist, and of the YTMusic playlist, and then run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;s2yt_copy_playlist &amp;lt;SPOTIFY_PLAYLIST_ID&amp;gt; &amp;lt;YTMUSIC_PLAYLIST_ID&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you need to create a playlist, you can run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;s2yt_create_playlist &#34;&amp;lt;PLAYLIST_NAME&amp;gt;&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Or&lt;/em&gt; the copy playlist can take the name of the YTMusic playlist and will create the playlist if it does not exist, if you start the YTMusic playlist with a &#34;+&#34;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;s2yt_copy_playlist &amp;lt;SPOTIFY_PLAYLIST_ID&amp;gt; +&amp;lt;YTMUSIC_PLAYLIST_NAME&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;s2yt_copy_playlist SPOTIFY_PLAYLIST_ID &#34;+Feeling Like a PUNK&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Re-running &#34;copy_playlist&#34; or &#34;load_liked&#34; in the event that it fails should be safe, it will not duplicate entries on the playlist.&lt;/p&gt; &#xA;&lt;h3&gt;Searching for YTMusic Tracks&lt;/h3&gt; &#xA;&lt;p&gt;This is mostly for debugging, but there is a command to search for tracks in YTMusic:&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;s2yt_search --artist &amp;lt;ARTIST&amp;gt; --album &amp;lt;ALBUM&amp;gt; &amp;lt;TRACK_NAME&amp;gt;&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Details About Search Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;The function first searches for albums by the given artist name on YTMusic.&lt;/p&gt; &#xA;&lt;p&gt;It then iterates over the first three album results and tries to find a track with the exact same name as the given track name. If it finds a match, it returns the track information.&lt;/p&gt; &#xA;&lt;p&gt;If the function can&#39;t find the track in the albums, it then searches for songs by the given track name and artist name.&lt;/p&gt; &#xA;&lt;p&gt;Depending on the yt_search_algo parameter, it performs one of the following actions:&lt;/p&gt; &#xA;&lt;p&gt;If yt_search_algo is 0, it simply returns the first song result.&lt;/p&gt; &#xA;&lt;p&gt;If yt_search_algo is 1, it iterates over the song results and returns the first song that matches the track name, artist name, and album name exactly. If it can&#39;t find a match, it raises a ValueError.&lt;/p&gt; &#xA;&lt;p&gt;If yt_search_algo is 2, it performs a fuzzy match. It removes everything in brackets in the song title and checks for a match with the track name, artist name, and album name. If it can&#39;t find a match, it then searches for videos with the track name and artist name. If it still can&#39;t find a match, it raises a ValueError.&lt;/p&gt; &#xA;&lt;p&gt;If the function can&#39;t find the track using any of the above methods, it raises a ValueError.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My copy is failing after 20-40 minutes. Is my session timing out?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Try playing music in the browser on Youtube Music while you are loading the playlists, this has been reported to keep the session from timing out.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does this run on mobile?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;No, this runs on Linux/Windows/MacOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;How does the lookup algorithm work?&lt;/p&gt; &lt;p&gt;Given the Spotify track information, it does a lookup for the album by the same artist on YTMusic, then looks at the first 3 hits looking for a track with exactly the same name. In the event that it can&#39;t find that exact track, it then does a search of songs for the track name by the same artist and simply returns the first hit.&lt;/p&gt; &lt;p&gt;The idea is that finding the album and artist and then looking for the exact track match will be more likely to be accurate than searching for the song and artist and relying on the YTMusic algorithm to figure things out, especially for short tracks that might be have many contradictory hits like &#34;Survival by Yes&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;My copy is failing with repeated &#34;ERROR: (Retrying) Server returned HTTP 400: Bad Request&#34;.&lt;/p&gt; &lt;p&gt;Try running with &#34;--track-sleep=3&#34; argument to do a 3 second sleep between tracks. This will take much longer, but may succeed where faster rates have failed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Creative Commons Zero v1.0 Universal&lt;/p&gt; &#xA;&lt;p&gt;spotify-backup.py licensed under MIT License. See &lt;a href=&#34;https://github.com/caseychu/spotify-backup&#34;&gt;https://github.com/caseychu/spotify-backup&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eythaann/Seelen-UI</title>
    <updated>2025-06-10T01:29:14Z</updated>
    <id>tag:github.com,2025-06-10:/eythaann/Seelen-UI</id>
    <link href="https://github.com/eythaann/Seelen-UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Fully Customizable Desktop Environment for Windows 10/11.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/logo.svg?sanitize=true&#34; width=&#34;44&#34; align=&#34;top&#34; alt=&#34;Seelen UI Logo&#34;&gt; Seelen UI &lt;/h1&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Fully Customizable Desktop Environment for Windows &lt;br&gt; Available in 70+ Languages &lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/eythaann/seelen-ui/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/eythaann/seelen-ui.svg?sanitize=true&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eythaann/seelen-ui/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/eythaann/seelen-ui.svg?sanitize=true&#34; alt=&#34;Last Commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eythaann/seelen-ui/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/eythaann/seelen-ui.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eythaann/seelen-ui/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/eythaann/seelen-ui/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/preview.png&#34; width=&#34;100%&#34; alt=&#34;Screenshot of Seelen UI desktop showing a customized desktop environment&#34;&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;33%&#34;&gt; &lt;a href=&#34;https://apps.microsoft.com/detail/Seelen%20UI/9p67c2d4t9fb?mode=full&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; aria-label=&#34;Download Seelen UI from Microsoft Store&#34;&gt; &lt;img src=&#34;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&#34; width=&#34;100%&#34; alt=&#34;Download Seelen UI from Microsoft Store&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;33%&#34;&gt; &lt;a href=&#34;https://discord.gg/ABfASx5ZAJ&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; aria-label=&#34;Join the Seelen UI Discord community&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/discord.png&#34; width=&#34;100%&#34; alt=&#34;Join the Seelen UI Discord community&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;33%&#34;&gt; &lt;a href=&#34;https://ko-fi.com/O4O41ADV7D&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; aria-label=&#34;Buy me a coffee&#34;&gt; &lt;img src=&#34;https://storage.ko-fi.com/cdn/kofi1.png?v=6&#34; width=&#34;100%&#34; alt=&#34;Buy Me a Coffee at ko-fi.com&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://seelen.io/apps/seelen-ui&#34;&gt;Seelen UI&lt;/a&gt; is a tool designed to enhance your Windows desktop experience with a focus on customization and productivity. It integrates smoothly into your system, providing a range of features that allow you to personalize your desktop and optimize your workflow.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be Creative&lt;/strong&gt;: Seelen UI lets you tailor your desktop to fit your style and needs. You can adjust menus, widgets, icons, and other elements to create a personalized and visually appealing desktop environment.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/theme_preview.png&#34; alt=&#34;Seelen UI Custom Theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhance Your Productivity&lt;/strong&gt;: Seelen UI helps you organize your desktop efficiently. With a Tiling Windows Manager, windows automatically arrange themselves to support multitasking, making your work more streamlined.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/twm_preview.png&#34; alt=&#34;Seelen UI Tiling Window Manager&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy your music&lt;/strong&gt;: With an integrated media module that&#39;s compatible with most music players, Seelen UI allows you to enjoy your music seamlessly. You can pause, resume, and skip tracks at any time without the need to open additional windows.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/media_module_preview.png&#34; alt=&#34;Seelen UI Media Module&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be faster!&lt;/strong&gt;: With an app launcher inspired by Rofi, Seelen UI provides a simple and intuitive way to quickly access your applications and execute commands.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/app_launcher_preview.png&#34; alt=&#34;Seelen UI App Launcher&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;User-Friendly Configuration&lt;/strong&gt;: Seelen UI offers an intuitive interface for easy customization. Adjust settings such as themes, taskbar layouts, icons, etc. With just a few clicks.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/settings_preview.png&#34; alt=&#34;Seelen UI Settings&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] Seelen UI requires the WebView runtime to be installed. On Windows 11, it comes pre-installed with the system. However, on Windows 10, the WebView runtime is included with the &lt;code&gt;setup.exe&lt;/code&gt; installer. Additionally, Microsoft Edge is necessary to function correctly. Some users may have modified their system and removed Edge, so please ensure both Edge and the WebView runtime are installed on your system.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] On fresh installations of Windows, the app might show a white or dark screen. You only need to update your Windows through Windows Update and restart your PC.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can choose from different installation options based on your preference:&lt;/p&gt; &#xA;&lt;h3&gt;Microsoft Store &lt;em&gt;(recommended)&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest version from the &lt;a href=&#34;https://www.microsoft.com/store/productId/9P67C2D4T9FB?ocid=pdpshare&#34;&gt;Store&lt;/a&gt; page. This is the recommended option because you will receive updates and a secure version of the program.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: It may take around 1 to 3 business days for changes to be reflected in the Microsoft Store, as updates are approved by real people in the store.&lt;/p&gt; &#xA;&lt;h3&gt;Winget&lt;/h3&gt; &#xA;&lt;p&gt;Install the latest version using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;winget install --id Seelen.SeelenUI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This option also uses the signed &lt;code&gt;.msix&lt;/code&gt; package and ensures you have the latest secure version. Similar to the Microsoft Store, it may take around 1 to 3 business days for changes to be reflected in Winget, as updates are approved by real people in the &lt;code&gt;winget-pkg&lt;/code&gt; project.&lt;/p&gt; &#xA;&lt;h3&gt;.msix Installer&lt;/h3&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;.msix&lt;/code&gt; installer from the &lt;a href=&#34;https://github.com/eythaann/seelen-ui/releases&#34;&gt;Releases&lt;/a&gt; page. This package is signed, ensuring a secure installation. This is the same option as the Microsoft Store but is a portable installer.&lt;/p&gt; &#xA;&lt;h3&gt;.exe Installer&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest version from the &lt;a href=&#34;https://github.com/eythaann/seelen-ui/releases&#34;&gt;Releases&lt;/a&gt; page and run the &lt;code&gt;setup.exe&lt;/code&gt; installer. This option is less recommended as the installer is not signed, which may cause it to be flagged as a potential threat by some antivirus programs. The &lt;code&gt;setup.exe&lt;/code&gt; is updated more quickly than the Microsoft Store or Winget versions and also it receives notifications updates on new release.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Once installed or extracted, simply open the program. The easy-to-use and intuitive GUI will guide you through the configuration process. Customize your desktop environment effortlessly.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For in-depth details on various aspects of Seelen UI, explore the following documents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/languages.md&#34;&gt;Languages&lt;/a&gt; - Information regarding translations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/toolbar.md&#34;&gt;Toolbar&lt;/a&gt; - Details about customizing and using the toolbar.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://seelen.io/blog/seelen-ui-theme-tutorial&#34;&gt;Themes&lt;/a&gt; - Guidance on creating and applying themes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/window_manager.md&#34;&gt;Window Manager&lt;/a&gt; - Instructions on configuring the window manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md&#34;&gt;Project&lt;/a&gt; - General information about the project and its structure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upcoming Features&lt;/h2&gt; &#xA;&lt;p&gt;I’m excited to share some upcoming features for Seelen UI! Here’s a glimpse of what’s planned for the future:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;del&gt;App Launcher&lt;/del&gt; ✅&lt;/h3&gt; &#xA;&lt;p&gt;I’m planning to develop an app launcher inspired by &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;Rofi&lt;/a&gt; on Linux. This feature will provide a sleek and highly customizable way to quickly access your applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/files/master/rofi/previews/colorful/main.gif&#34; alt=&#34;App Launcher Preview&#34;&gt; &lt;em&gt;Image courtesy of &lt;a href=&#34;https://github.com/dctxmei/rofi-themes&#34;&gt;rofi-themes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Customizable Popup Widgets&lt;/h3&gt; &#xA;&lt;p&gt;I aim to introduce a set of fully customizable popup widgets, similar to the features available in &lt;a href=&#34;https://github.com/elkowar/eww&#34;&gt;EWW&lt;/a&gt;. These widgets will be highly configurable and adaptable to your needs, providing an enhanced and interactive way to manage your desktop environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/widgets/main/previews/dashboard.png&#34; alt=&#34;Customizable Widgets Preview&#34;&gt; &lt;em&gt;Image courtesy of &lt;a href=&#34;https://github.com/adi1090x/widgets&#34;&gt;adi1090x&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Alt + Tab (Task Switching)&lt;/h3&gt; &#xA;&lt;p&gt;An upgraded Alt + Tab system for task switching is on the horizon. This will offer a more visually appealing and functional experience, allowing for smoother transitions between open applications and windows.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Virtual Desktops Viewer and Animations&lt;/h3&gt; &#xA;&lt;p&gt;I’m also working on a custom virtual desktops viewer and dynamic animations to improve navigation between different workspaces. This will provide a more intuitive and immersive multitasking experience.&lt;/p&gt; &#xA;&lt;p&gt;Stay tuned for more updates as I develop these features. I appreciate your support and enthusiasm!&lt;/p&gt; &#xA;&lt;p&gt;Happy customizing!&lt;/p&gt; &#xA;&lt;p&gt;The Seelen UI Team&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/CONTRIBUTING&#34;&gt;Contribution Guidelines&lt;/a&gt; to get started with terms.&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md&#34;&gt;Project Documentation&lt;/a&gt; to understand the project structure and how to use it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/eythaann/Seelen-UI/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For inquiries and support, please contact me on &lt;a href=&#34;https://discord.gg/ABfASx5ZAJ&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See you later&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;                   .      .&amp;amp;     _,x&amp;amp;&#34;``&#xA;                    &amp;amp; .   &amp;amp;&#39;  ;.&amp;amp;&amp;amp;&#39;&#xA;              &amp;amp;.  . &amp;amp;.&amp;amp;     .0&amp;amp;&amp;amp;&amp;amp;;&amp;amp;&#34;&#34;`&#xA;         .    &#39;&amp;amp;  &amp;amp;.&amp;amp;&amp;amp;&amp;amp;  .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#39;&#xA;       .&amp;amp;         ;&amp;amp;&amp;amp;&amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#39;&#xA;      &amp;amp;&amp;amp;          &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;     &amp;amp;&amp;amp;&amp;amp;&#xA;     0&amp;amp;    .     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#34;&#34;&#xA;    &amp;amp;&amp;amp;   .0     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#xA;   0&amp;amp;&amp;amp; .&amp;amp;&#39;     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#xA;  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;    . &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; &#xA;  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;    &amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#xA;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&#39;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;               .&amp;amp;&amp;amp;&amp;amp;x&amp;amp;&#xA;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;   :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0.&amp;amp;&#39;        , .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;;.&#xA;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;.  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;        .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#39;               .&#xA;  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;       ,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;                &amp;amp;&#xA;  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0       ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             ;  .0&#xA;   0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0     ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             &amp;amp;  &amp;amp;;&#xA;    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0   :&#39;,;&#34;.&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#34;.&amp;amp;             &amp;amp;&amp;amp; &amp;amp;0&#xA;     0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0  &#39;,;&#39;,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#34; ,&amp;amp;&#39;             &amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0 ,x&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#34; .&amp;amp;&amp;amp;&amp;amp;              &amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;        0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&#34;&#39;&#39;&#39;&#34;&amp;amp;&amp;amp;&#34;&amp;amp;&amp;amp;            &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;         0&amp;amp;&amp;amp; .&amp;amp;&amp;amp;;``       `&amp;amp;: :&amp;amp;         &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;            &amp;amp;&#34;&#39; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;   &amp;amp;&#34;&amp;amp; &amp;amp;&#34;&amp;amp;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;              0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;                 0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0         Seelen&#xA;                      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;📌 &lt;strong&gt;Official Website&lt;/strong&gt;: &lt;a href=&#34;https://seelen.io&#34;&gt;https://seelen.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Seelen Inc © 2024 - All rights reserved&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eyaltoledano/claude-task-master</title>
    <updated>2025-06-10T01:29:14Z</updated>
    <id>tag:github.com,2025-06-10:/eyaltoledano/claude-task-master</id>
    <link href="https://github.com/eyaltoledano/claude-task-master" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Task Master &lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/js/task-master-ai&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/task-master-ai.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/taskmasterai&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg?sanitize=true&#34; alt=&#34;License: MIT with Commons Clause&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/d18m/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;By &lt;a href=&#34;https://x.com/eyaltoledano&#34;&gt;@eyaltoledano&lt;/a&gt;, &lt;a href=&#34;https://x.com/RalphEcom&#34;&gt;@RalphEcom&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://x.com/jasonzhou1993&#34;&gt;@jasonzhou1993&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/eyaltoledano&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/eyaltoledano&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/RalphEcom&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/RalphEcom&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/jasonzhou1993&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/jasonzhou1993&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed information, check out the documentation in the &lt;code&gt;docs&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/configuration.md&#34;&gt;Configuration Guide&lt;/a&gt; - Set up environment variables and customize Task Master&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/tutorial.md&#34;&gt;Tutorial&lt;/a&gt; - Step-by-step guide to getting started with Task Master&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/command-reference.md&#34;&gt;Command Reference&lt;/a&gt; - Complete list of all available commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/task-structure.md&#34;&gt;Task Structure&lt;/a&gt; - Understanding the task format and features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md&#34;&gt;Example Interactions&lt;/a&gt; - Common Cursor AI interaction examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/migration-guide.md&#34;&gt;Migration Guide&lt;/a&gt; - Guide to migrating to the new project structure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Quick Install for Cursor 1.0+ (One-Click)&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;cursor://anysphere.cursor-deeplink/mcp/install?name=taskmaster-ai&amp;amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIi0tcGFja2FnZT10YXNrLW1hc3Rlci1haSIsInRhc2stbWFzdGVyLWFpIl0sImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUJFX0FQSV9LRVkiOiJZT1VSX0FaVVJFX0tFWV9IRVJFIiwiT0xMQU1BX0FQSV9LRVkiOiJZT1VSX09MTEFNQV9BUElfS0VZX0hFUkUifX0%3D&#34;&gt;&lt;img src=&#34;https://cursor.com/deeplink/mcp-install-dark.png&#34; alt=&#34;Add Task Master MCP server to Cursor&#34; style=&#34;max-height: 26px;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; After clicking the install button, you&#39;ll still need to add your API keys to the configuration. The button installs the MCP server with placeholder keys that you&#39;ll need to replace with your actual API keys.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#39;ll need an Anthropic API key.&lt;/p&gt; &#xA;&lt;p&gt;You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.&lt;/p&gt; &#xA;&lt;p&gt;At least one (1) of the following is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anthropic API key (Claude API)&lt;/li&gt; &#xA; &lt;li&gt;OpenAI API key&lt;/li&gt; &#xA; &lt;li&gt;Google Gemini API key&lt;/li&gt; &#xA; &lt;li&gt;Perplexity API key (for research model)&lt;/li&gt; &#xA; &lt;li&gt;xAI API Key (for research or main model)&lt;/li&gt; &#xA; &lt;li&gt;OpenRouter API Key (for research or main model)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the research model is optional but highly recommended. You will need at least ONE API key. Adding all API keys enables you to seamlessly switch between model providers at will.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: MCP (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;MCP (Model Control Protocol) lets you run Task Master directly from your editor.&lt;/p&gt; &#xA;&lt;h4&gt;1. Add your MCP config at the following path depending on your editor&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Editor&lt;/th&gt; &#xA;   &lt;th&gt;Scope&lt;/th&gt; &#xA;   &lt;th&gt;Linux/macOS Path&lt;/th&gt; &#xA;   &lt;th&gt;Windows Path&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Cursor&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Windsurf&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.codeium\windsurf\mcp_config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.vscode/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.vscode\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;servers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Manual Configuration&lt;/h5&gt; &#xA;&lt;h6&gt;Cursor &amp;amp; Windsurf (&lt;code&gt;mcpServers&lt;/code&gt;)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;taskmaster-ai&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--package=task-master-ai&#34;, &#34;task-master-ai&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;ANTHROPIC_API_KEY&#34;: &#34;YOUR_ANTHROPIC_API_KEY_HERE&#34;,&#xA;        &#34;PERPLEXITY_API_KEY&#34;: &#34;YOUR_PERPLEXITY_API_KEY_HERE&#34;,&#xA;        &#34;OPENAI_API_KEY&#34;: &#34;YOUR_OPENAI_KEY_HERE&#34;,&#xA;        &#34;GOOGLE_API_KEY&#34;: &#34;YOUR_GOOGLE_KEY_HERE&#34;,&#xA;        &#34;MISTRAL_API_KEY&#34;: &#34;YOUR_MISTRAL_KEY_HERE&#34;,&#xA;        &#34;OPENROUTER_API_KEY&#34;: &#34;YOUR_OPENROUTER_KEY_HERE&#34;,&#xA;        &#34;XAI_API_KEY&#34;: &#34;YOUR_XAI_KEY_HERE&#34;,&#xA;        &#34;AZURE_OPENAI_API_KEY&#34;: &#34;YOUR_AZURE_KEY_HERE&#34;,&#xA;        &#34;OLLAMA_API_KEY&#34;: &#34;YOUR_OLLAMA_API_KEY_HERE&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🔑 Replace &lt;code&gt;YOUR_…_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don&#39;t use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h6&gt;VS Code (&lt;code&gt;servers&lt;/code&gt; + &lt;code&gt;type&lt;/code&gt;)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;servers&#34;: {&#xA;    &#34;taskmaster-ai&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--package=task-master-ai&#34;, &#34;task-master-ai&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;ANTHROPIC_API_KEY&#34;: &#34;YOUR_ANTHROPIC_API_KEY_HERE&#34;,&#xA;        &#34;PERPLEXITY_API_KEY&#34;: &#34;YOUR_PERPLEXITY_API_KEY_HERE&#34;,&#xA;        &#34;OPENAI_API_KEY&#34;: &#34;YOUR_OPENAI_KEY_HERE&#34;,&#xA;        &#34;GOOGLE_API_KEY&#34;: &#34;YOUR_GOOGLE_KEY_HERE&#34;,&#xA;        &#34;MISTRAL_API_KEY&#34;: &#34;YOUR_MISTRAL_KEY_HERE&#34;,&#xA;        &#34;OPENROUTER_API_KEY&#34;: &#34;YOUR_OPENROUTER_KEY_HERE&#34;,&#xA;        &#34;XAI_API_KEY&#34;: &#34;YOUR_XAI_KEY_HERE&#34;,&#xA;        &#34;AZURE_OPENAI_API_KEY&#34;: &#34;YOUR_AZURE_KEY_HERE&#34;&#xA;      },&#xA;      &#34;type&#34;: &#34;stdio&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🔑 Replace &lt;code&gt;YOUR_…_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don&#39;t use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;2. (Cursor-only) Enable Taskmaster MCP&lt;/h4&gt; &#xA;&lt;p&gt;Open Cursor Settings (Ctrl+Shift+J) ➡ Click on MCP tab on the left ➡ Enable task-master-ai with the toggle&lt;/p&gt; &#xA;&lt;h4&gt;3. (Optional) Configure the models you want to use&lt;/h4&gt; &#xA;&lt;p&gt;In your editor&#39;s AI chat pane, say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Change the main, research and fallback models to &amp;lt;model_name&amp;gt;, &amp;lt;model_name&amp;gt; and &amp;lt;model_name&amp;gt; respectively.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/models.md&#34;&gt;Table of available models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4. Initialize Task Master&lt;/h4&gt; &#xA;&lt;p&gt;In your editor&#39;s AI chat pane, say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Initialize taskmaster-ai in my project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Make sure you have a PRD (Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;For &lt;strong&gt;new projects&lt;/strong&gt;: Create your PRD at &lt;code&gt;.taskmaster/docs/prd.txt&lt;/code&gt;&lt;br&gt; For &lt;strong&gt;existing projects&lt;/strong&gt;: You can use &lt;code&gt;scripts/prd.txt&lt;/code&gt; or migrate with &lt;code&gt;task-master migrate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;An example PRD template is available after initialization in &lt;code&gt;.taskmaster/templates/example_prd.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] While a PRD is recommended for complex projects, you can always create individual tasks by asking &#34;Can you help me implement [description of what you want to do]?&#34; in chat.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Always start with a detailed PRD.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The more detailed your PRD, the better the generated tasks will be.&lt;/p&gt; &#xA;&lt;h4&gt;6. Common Commands&lt;/h4&gt; &#xA;&lt;p&gt;Use your AI assistant to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parse requirements: &lt;code&gt;Can you parse my PRD at scripts/prd.txt?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Plan next step: &lt;code&gt;What&#39;s the next task I should work on?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Implement a task: &lt;code&gt;Can you help me implement task 3?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expand a task: &lt;code&gt;Can you help me expand task 4?&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md&#34;&gt;More examples on how to use Task Master in chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Option 2: Using Command Line&lt;/h3&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install globally&#xA;npm install -g task-master-ai&#xA;&#xA;# OR install locally within your project&#xA;npm install task-master-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Initialize a new project&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If installed globally&#xA;task-master init&#xA;&#xA;# If installed locally&#xA;npx task-master init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will prompt you for project details and set up a new project with the necessary files and structure.&lt;/p&gt; &#xA;&lt;h4&gt;Common Commands&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Initialize a new project&#xA;task-master init&#xA;&#xA;# Parse a PRD and generate tasks&#xA;task-master parse-prd your-prd.txt&#xA;&#xA;# List all tasks&#xA;task-master list&#xA;&#xA;# Show the next task to work on&#xA;task-master next&#xA;&#xA;# Generate task files&#xA;task-master generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;If &lt;code&gt;task-master init&lt;/code&gt; doesn&#39;t respond&lt;/h3&gt; &#xA;&lt;p&gt;Try running it with Node directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node node_modules/claude-task-master/scripts/init.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or clone the repository and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/eyaltoledano/claude-task-master.git&#xA;cd claude-task-master&#xA;node scripts/init.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&#34; alt=&#34;Task Master project contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#eyaltoledano/claude-task-master&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Task Master is licensed under the MIT License with Commons Clause. This means you can:&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Allowed&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Task Master for any purpose (personal, commercial, academic)&lt;/li&gt; &#xA; &lt;li&gt;Modify the code&lt;/li&gt; &#xA; &lt;li&gt;Distribute copies&lt;/li&gt; &#xA; &lt;li&gt;Create and sell products built using Task Master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;❌ &lt;strong&gt;Not Allowed&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sell Task Master itself&lt;/li&gt; &#xA; &lt;li&gt;Offer Task Master as a hosted service&lt;/li&gt; &#xA; &lt;li&gt;Create competing products based on Task Master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for the complete license text and &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/licensing.md&#34;&gt;licensing details&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>