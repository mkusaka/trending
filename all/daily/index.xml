<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-11T01:28:36Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pr3y/Bruce</title>
    <updated>2024-11-11T01:28:36Z</updated>
    <id>tag:github.com,2024-11-11:/pr3y/Bruce</id>
    <link href="https://github.com/pr3y/Bruce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Predatory ESP32 Firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/bruce_banner.jpg&#34; alt=&#34;Bruce Main Menu&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;ü¶à&lt;/span&gt; Bruce&lt;/h1&gt; &#xA;&lt;p&gt;Bruce is meant to be a versatile ESP32 firmware that supports a ton of offensive features focusing on facilitating Red Team operations. It also supports m5stack products and works great with Cardputer, Sticks and M5Cores.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üèó&lt;/span&gt; How to install&lt;/h2&gt; &#xA;&lt;h3&gt;The easiest way to install Bruce is using our official Web Flasher!&lt;/h3&gt; &#xA;&lt;h3&gt;Check out: &lt;a href=&#34;https://bruce.computer/flasher&#34;&gt;https://bruce.computer/flasher&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can download the latest binary from releases or actions and flash locally using esptool.py&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;esptool.py --port /dev/ttyACM0 write_flash 0x00000 Bruce-&amp;lt;device&amp;gt;.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For m5stack devices&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you already use M5Launcher to manage your m5stack device, you can install it with OTA&lt;/p&gt; &#xA;&lt;p&gt;Or you can burn it directly from the &lt;a href=&#34;https://docs.m5stack.com/en/download&#34;&gt;m5burner tool&lt;/a&gt;, just search for &#39;Bruce&#39; (My official builds will be uploaded by &#34;owner&#34; and have photos.) on the device category you want to and click on burn&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚å®&lt;/span&gt; Discord Server&lt;/h2&gt; &#xA;&lt;p&gt;Contact us in our &lt;a href=&#34;https://discord.gg/WJ9XF9czVT&#34;&gt;Discord Server&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìë&lt;/span&gt; Wiki&lt;/h2&gt; &#xA;&lt;p&gt;For more information on each function supported by Bruce, &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki&#34;&gt;read our wiki here&lt;/a&gt;. Also, &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FAQ&#34;&gt;read our FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíª&lt;/span&gt; List of Features&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;WiFi&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Connect to WiFi&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WiFi AP&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Disconnect WiFi&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#wifi-atks&#34;&gt;WiFi Atks&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#beacon-spam&#34;&gt;Beacon Spam&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#target-atk&#34;&gt;Target Atk&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Information&lt;/li&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Target Deauth&lt;/li&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EvilPortal + Deauth&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Deauth Flood (More than one target)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Wardriving&#34;&gt;Wardriving&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#telnet&#34;&gt;TelNet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#ssh&#34;&gt;SSH&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#raw-sniffer&#34;&gt;RAW Sniffer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#dpwo-esp32&#34;&gt;DPWO-ESP32&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&#34;&gt;Evil Portal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&#34;&gt;Scan Hosts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#wireguard-tunneling&#34;&gt;Wireguard Tunneling&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Brucegotchi &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pwnagotchi friend&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pwngrid spam faces &amp;amp; names &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; [Optional] DoScreen a very long name and face&lt;/li&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; [Optional] Flood uniq peer identifiers&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;BLE&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/BLE#ble-scan&#34;&gt;BLE Scan&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bad BLE - Run Ducky scripts, similar to &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;BadUsb&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLE Keyboard - Cardputer Only (for now)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; iOS Spam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Windows Spam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Samsung Spam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android Spam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spam All&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;RF&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scan/Copy&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/RF#replay-payloads-like-flipper&#34;&gt;Custom SubGhz&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spectrum&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Jammer Full (sends a full squared wave into output)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Jammer Intermittent (sends PWM signal into output)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF TX Pin&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF RX Pin&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF Module &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF433 T/R M5Stack&lt;/li&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/CC1101&#34;&gt;CC1101 (Sub-Ghz)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF Frequency&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Replay&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;RFID&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read tag&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read 125kHz&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Clone tag&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Write NDEF records&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Amiibolink&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chameleon&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Write data&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Erase data&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Save file&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Load file&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/RFID#supported-modules&#34;&gt;RFID Module&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PN532&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Emulate tag&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;IR&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; TV-B-Gone&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; IR Receiver&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/IR#replay-payloads-like-flipper&#34;&gt;Custom IR (NEC, NEC42, NECExt, SIRC, SIRC15, SIRC20, Samsung32, RC5, RC5X, RC6)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ir TX Pin&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ir RX Pin&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;FM&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#play_or_pause_button-broadcast-standard&#34;&gt;Broadcast standard&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#no_entry_sign-broadcast-rerserved&#34;&gt;Broadcast reserved&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#stop_button-broadcast-stop&#34;&gt;Broadcast stop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#ocean-fm-spectrum&#34;&gt;FM Spectrum&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#car-hijack-ta&#34;&gt;Hijack Traffic Announcements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#bookmark_tabs-config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;NRF24&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/BLE#nrf24-jammer&#34;&gt;NRF24 Jammer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2.4G Spectrum&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Mousejack&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Scripts&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Interpreter&#34;&gt;JavaScript Interpreter&lt;/a&gt; &lt;a href=&#34;https://github.com/justinknight93/Doolittle&#34;&gt;Credits to justinknight93&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Others&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mic Spectrum&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; QRCodes &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PIX (Brazil bank transfer system)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#sd-card-mngr&#34;&gt;SD Card Mngr&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View image (jpg)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Info&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Wardriving#how-to-upload&#34;&gt;Wigle Upload&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Play Audio&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View File&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#littlefs-mngr&#34;&gt;LittleFS Mngr&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#webui&#34;&gt;WebUI&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Server Structure&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Html&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SDCard Mngr&lt;/li&gt; &#xA;    &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spiffs Mngr&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Megalodon&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;BADUsb (New features, LittleFS and SDCard)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; USB Keyboard&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#openhaystack&#34;&gt;Openhaystack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#led-control&#34;&gt;LED Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Clock&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTC Support&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NTP time adjust&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Manual adjust&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Connect (ESPNOW)&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Send File&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Receive File&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Config&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Brightness&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dim Time&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Orientation&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; UI Color&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Boot Sound on/off&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Clock&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sleep&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Restart&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Specific functions per Device, the ones not mentioned here are available to all.&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Device&lt;/th&gt; &#xA;   &lt;th&gt;CC1101&lt;/th&gt; &#xA;   &lt;th&gt;NRF24&lt;/th&gt; &#xA;   &lt;th&gt;Interpreter&lt;/th&gt; &#xA;   &lt;th&gt;FMRadio&lt;/th&gt; &#xA;   &lt;th&gt;PN532&lt;/th&gt; &#xA;   &lt;th&gt;Mic_SPM1423&lt;/th&gt; &#xA;   &lt;th&gt;BadUSB&lt;/th&gt; &#xA;   &lt;th&gt;RGB Led&lt;/th&gt; &#xA;   &lt;th&gt;Speaker&lt;/th&gt; &#xA;   &lt;th&gt;LITE_MODE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cardputer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NS4168&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StickCPlus2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StickCPlus 1.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Core&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Core2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CoreSe/SE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CYD-2432S028&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lilygo T-Embed CC1101&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;LITE_MODE&lt;/em&gt;: TelNet, SSH, DPWO, WireGuard, ScanHosts, RawSniffer, Brucegotchi, BLEBacon, BLEScan, Interpreter and OpenHaystack are NOT available for M5Launcher Compatibility&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CYD has a LITE_MODE version for Launcher Compatibility&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ú®&lt;/span&gt; Why and how does it look?&lt;/h2&gt; &#xA;&lt;p&gt;Bruce stems from a keen observation within the community focused on devices like Flipper Zero. While these devices offered a glimpse into the world of offensive security, there was a palpable sense that something more could be achieved without being that overpriced, particularly with the robust and modular hardware ecosystem provided by ESP32 Devices, Lilygo and M5Stack products.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/pic1.png&#34; alt=&#34;Bruce Main Menu&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/core.png&#34; alt=&#34;Bruce on M5Core&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/stick.png&#34; alt=&#34;Bruce on Stick&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/cyd.png&#34; alt=&#34;Bruce on CYD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Other media can be &lt;a href=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üëè&lt;/span&gt; Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bmorcelli&#34;&gt;@bmorcelli&lt;/a&gt; for new core and a bunch of new features, also porting to many devices!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IncursioHack&#34;&gt;@IncursioHack&lt;/a&gt; for adding RF and RFID modules features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Luidiblu&#34;&gt;@Luidiblu&lt;/a&gt; for logo and UI design assistance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eadmaster&#34;&gt;@eadmaster&lt;/a&gt; for adding a lot of features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rennancockles&#34;&gt;@rennancockles&lt;/a&gt; for a lot of RFID code, refactoring and others features.&lt;/li&gt; &#xA; &lt;li&gt;Everyone who contributed in some way to the project, thanks &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöß&lt;/span&gt; Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Bruce is a tool for cyber offensive and red team operations, distributed under the terms of the Affero General Public License (AGPL). It is intended for legal and authorized security testing purposes only. Use of this software for any malicious or unauthorized activities is strictly prohibited. By downloading, installing, or using Bruce, you agree to comply with all applicable laws and regulations. This software is provided free of charge, and we do not accept payments for copies or modifications. The developers of Bruce assume no liability for any misuse of the software. Use at your own risk.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>letta-ai/letta</title>
    <updated>2024-11-11T01:28:36Z</updated>
    <id>tag:github.com,2024-11-11:/letta-ai/letta</id>
    <link href="https://github.com/letta-ai/letta" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Letta (formerly MemGPT) is a framework for creating LLM services with memory.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;assets/Letta-logo-RGB_GreyonTransparent_cropped_small.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;assets/Letta-logo-RGB_OffBlackonTransparent_cropped_small.png&#34;&gt; &#xA;  &lt;img alt=&#34;Letta logo&#34; src=&#34;https://raw.githubusercontent.com/letta-ai/letta/main/assets/Letta-logo-RGB_GreyonOffBlack_cropped_small.png&#34; width=&#34;500&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Letta (previously MemGPT)&lt;/h1&gt; &#xA; &lt;h3&gt; &lt;p&gt;&lt;a href=&#34;https://letta.com&#34;&gt;Homepage&lt;/a&gt; // &lt;a href=&#34;https://docs.letta.com&#34;&gt;Documentation&lt;/a&gt; // &lt;a href=&#34;https://forms.letta.com/early-access&#34;&gt;Letta Cloud&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;üëæ Letta&lt;/strong&gt; is an open source framework for building stateful LLM applications. You can use Letta to build &lt;strong&gt;stateful agents&lt;/strong&gt; with advanced reasoning capabilities and transparent long-term memory. The Letta framework is white box and model-agnostic.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/letta&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1161736243340640419?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=5865F2&amp;amp;style=flat-square&amp;amp;color=5865F2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Letta_AI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow-%40Letta__AI-1DA1F2?style=flat-square&amp;amp;logo=x&amp;amp;logoColor=white&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2310.08560&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Research-2310.08560-B31B1B?logo=arxiv&amp;amp;style=flat-square&#34; alt=&#34;arxiv 2310.08560&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/letta-ai/letta/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-silver?style=flat-square&#34; alt=&#34;Apache 2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cpacker/MemGPT/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/cpacker/MemGPT?style=flat-square&amp;amp;label=Release&amp;amp;color=limegreen&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cpacker/MemGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/cpacker/MemGPT?style=flat-square&amp;amp;logo=github&amp;amp;label=Stars&amp;amp;color=gold&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/3612&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/3612&#34; alt=&#34;cpacker%2FMemGPT | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;Looking for MemGPT?&lt;/strong&gt; You&#39;re in the right place!&lt;/p&gt; &#xA; &lt;p&gt;The MemGPT package and Docker image have been renamed to &lt;code&gt;letta&lt;/code&gt; to clarify the distinction between MemGPT agents and the API server / runtime that runs LLM agents as &lt;em&gt;services&lt;/em&gt;.&lt;/p&gt; &#xA; &lt;p&gt;You use the &lt;strong&gt;Letta &lt;em&gt;framework&lt;/em&gt;&lt;/strong&gt; to create &lt;strong&gt;MemGPT &lt;em&gt;agents&lt;/em&gt;&lt;/strong&gt;. Read more about the relationship between MemGPT and Letta &lt;a href=&#34;https://www.letta.com/blog/memgpt-and-letta&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ö° Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;The two main ways to install Letta are through &lt;strong&gt;pypi&lt;/strong&gt; (&lt;code&gt;pip&lt;/code&gt;) or via &lt;strong&gt;Docker&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;pip&lt;/code&gt;&lt;/strong&gt; (guide below) - the easiest way to try Letta, will default to using SQLite and ChromaDB for the database backends&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; (guide &lt;a href=&#34;https://docs.letta.com/install#run-letta-with-docker&#34;&gt;here&lt;/a&gt;) - recommended for production settings, will default to using Postgres (+ pgvector) for the database backend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1 - Install Letta using &lt;code&gt;pip&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pip install -U letta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2 - Set your environment variables for your chosen LLM / embedding providers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ export OPENAI_API_KEY=sk-...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Ollama (see our full &lt;a href=&#34;https://docs.letta.com/install&#34;&gt;documentation&lt;/a&gt; for examples of how to set up various providers):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ export OLLAMA_BASE_URL=http://localhost:11434&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3 - Run the Letta CLI&lt;/h3&gt; &#xA;&lt;p&gt;You can create agents and chat with them via the Letta CLI tool (&lt;code&gt;letta run&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ letta run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;üß¨ Creating new agent...&#xA;? Select LLM model: letta-free [type=openai] [ip=https://inference.memgpt.ai]&#xA;? Select embedding model: letta-free [type=hugging-face] [ip=https://embeddings.memgpt.ai]&#xA;-&amp;gt;  ü§ñ Using persona profile: &#39;sam_pov&#39;&#xA;-&amp;gt;  üßë Using human profile: &#39;basic&#39;&#xA;-&amp;gt;  üõ†Ô∏è  8 tools: send_message, pause_heartbeats, conversation_search, conversation_search_date, archival_memory_insert, archival_memory_search, core_memory_append, core_memory_replace&#xA;&#xA;üéâ Created new agent &#39;InspiringSpinach&#39;&#xA;&#xA;Hit enter to begin (will request first Letta message)&#xA;&#xA;üí≠ User engaged. Recognize as Chad. Acknowledge presence and establish connection. Explore interests and engage in meaningful discourse.&#xA;ü§ñ Hello, Chad. It&#39;s nice to meet you. I am keen on learning and exploring new ideas and concepts. Is there a specific topic you&#39;d like to discuss today?&#xA;&#xA;&amp;gt; Enter your message: my name is Brad, not Chad...&#xA;&#xA;üí≠ A discrepancy in identity. Reflect this change in core memory. Apologize for the oversight, and rectify the error.&#xA;‚ö°üß† [function] updating memory with core_memory_replace&#xA;         First name: Chad&#xA;        ‚Üí First name: Brad&#xA;üí≠ Apologize for the mistake in recognizing his name, and begin the conversation anew, addressing him by the correct name this time.&#xA;ü§ñ I apologize for the oversight, Brad. Let&#39;s restart. It&#39;s a pleasure to meet you, Brad. Is there a specific topic you&#39;d like to discuss today?&#xA;&#xA;&amp;gt; Enter your message:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 4 - Run the Letta server&lt;/h3&gt; &#xA;&lt;p&gt;You can start the Letta API server with &lt;code&gt;letta server&lt;/code&gt; (see the full API reference &lt;a href=&#34;https://docs.letta.com/api-reference&#34;&gt;here&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ letta server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Initializing database...&#xA;Running: uvicorn server:app --host localhost --port 8283&#xA;INFO:     Started server process [47750]&#xA;INFO:     Waiting for application startup.&#xA;INFO:     Application startup complete.&#xA;INFO:     Uvicorn running on http://localhost:8283 (Press CTRL+C to quit)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you start the Letta API server, the ADE (Agent Development Environment) will be available on &lt;code&gt;http://localhost:8283&lt;/code&gt;: &lt;img alt=&#34;Screenshot of the Letta ADE (Agent Development Environment)&#34; src=&#34;https://raw.githubusercontent.com/letta-ai/letta/main/assets/letta_ade_screenshot.png&#34; width=&#34;1600&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In Letta, all agents are stored/persisted in the same database, so the agents you create in the CLI are accessible via the API and ADE, and vice versa. Check out the &lt;a href=&#34;https://docs.letta.com/quickstart&#34;&gt;quickstart guide on our docs&lt;/a&gt; for a tutorial where you create an agent in the Letta CLI and message the same agent via the Letta API.&lt;/p&gt; &#xA;&lt;h2&gt;ü§ó How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Letta is an open source project built by over a hundred contributors. There are many ways to get involved in the Letta OSS project!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contribute to the project&lt;/strong&gt;: Interested in contributing? Start by reading our &lt;a href=&#34;https://github.com/cpacker/MemGPT/tree/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ask a question&lt;/strong&gt;: Join our community on &lt;a href=&#34;https://discord.gg/letta&#34;&gt;Discord&lt;/a&gt; and direct your questions to the &lt;code&gt;#support&lt;/code&gt; channel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Report ssues or suggest features&lt;/strong&gt;: Have an issue or a feature request? Please submit them through our &lt;a href=&#34;https://github.com/cpacker/MemGPT/issues&#34;&gt;GitHub Issues page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explore the roadmap&lt;/strong&gt;: Curious about future developments? View and comment on our &lt;a href=&#34;https://github.com/cpacker/MemGPT/issues/1533&#34;&gt;project roadmap&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Join community events&lt;/strong&gt;: Stay updated with the &lt;a href=&#34;https://lu.ma/berkeley-llm-meetup&#34;&gt;event calendar&lt;/a&gt; or follow our &lt;a href=&#34;https://twitter.com/Letta_AI&#34;&gt;Twitter account&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Legal notices&lt;/strong&gt;: By using Letta and related Letta services (such as the Letta endpoint or hosted service), you are agreeing to our &lt;a href=&#34;https://www.letta.com/privacy-policy&#34;&gt;privacy policy&lt;/a&gt; and &lt;a href=&#34;https://www.letta.com/terms-of-service&#34;&gt;terms of service&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actualbudget/actual</title>
    <updated>2024-11-11T01:28:36Z</updated>
    <id>tag:github.com,2024-11-11:/actualbudget/actual</id>
    <link href="https://github.com/actualbudget/actual" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local-first personal finance app&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/actualbudget/actual/master/demo.png&#34; alt=&#34;Actualbudget&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in contributing, or want to know how development works, see our &lt;a href=&#34;https://actualbudget.org/docs/contributing/&#34;&gt;contributing&lt;/a&gt; document we would love to have you.&lt;/p&gt; &#xA;&lt;p&gt;Want to say thanks? Click the ‚≠ê at the top of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Key Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Actual &lt;a href=&#34;https://discord.gg/pRYNYr4W5A&#34;&gt;discord&lt;/a&gt; community.&lt;/li&gt; &#xA; &lt;li&gt;Actual &lt;a href=&#34;https://actualbudget.org/docs&#34;&gt;Community Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://actualbudget.org/docs/faq&#34;&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are four ways to deploy Actual:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;One-click deployment &lt;a href=&#34;https://www.pikapods.com/pods?run=actual&#34;&gt;via PikaPods&lt;/a&gt; (~1.40 $/month) - recommended for non-technical users&lt;/li&gt; &#xA; &lt;li&gt;Managed hosting &lt;a href=&#34;https://actualbudget.org/docs/install/fly&#34;&gt;via Fly.io&lt;/a&gt; (~1.50 $/month)&lt;/li&gt; &#xA; &lt;li&gt;Self-hosted by using &lt;a href=&#34;https://actualbudget.org/docs/install/docker&#34;&gt;a Docker image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Local-only apps - &lt;a href=&#34;https://actualbudget.org/download/&#34;&gt;downloadable Windows, Mac and Linux apps&lt;/a&gt; you can run on your device&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Learn more in the &lt;a href=&#34;https://actualbudget.org/docs/install/&#34;&gt;installation instructions docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ready to Start Budgeting?&lt;/h2&gt; &#xA;&lt;p&gt;Read about &lt;a href=&#34;https://actualbudget.org/docs/getting-started/envelope-budgeting&#34;&gt;Envelope budgeting&lt;/a&gt; to know more about the idea behind Actual Budget.&lt;/p&gt; &#xA;&lt;h3&gt;Are you new to budgeting or want to start fresh?&lt;/h3&gt; &#xA;&lt;p&gt;Check out the community&#39;s &lt;a href=&#34;https://actualbudget.org/docs/getting-started/starting-fresh&#34;&gt;Starting Fresh&lt;/a&gt; guide so you can quickly get up and running!&lt;/p&gt; &#xA;&lt;h3&gt;Are you migrating from other budgeting apps?&lt;/h3&gt; &#xA;&lt;p&gt;Check out the community&#39;s &lt;a href=&#34;https://actualbudget.org/docs/migration/&#34;&gt;Migration&lt;/a&gt; guide to start jumping on the Actual Budget train!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We have a wide range of documentation on how to use Actual, this is all available in our &lt;a href=&#34;https://actualbudget.org/docs&#34;&gt;Community Documentation&lt;/a&gt;, this includes topics on Budgeting, Account Management, Tips &amp;amp; Tricks and some documentation for developers.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Actual is a community driven product. Learn more about &lt;a href=&#34;https://actualbudget.org/docs/contributing/&#34;&gt;contributing to Actual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code structure&lt;/h3&gt; &#xA;&lt;p&gt;The Actual app is split up into a few packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;loot-core - The core application that runs on any platform&lt;/li&gt; &#xA; &lt;li&gt;desktop-client - The desktop UI&lt;/li&gt; &#xA; &lt;li&gt;desktop-electron - The desktop app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information on the project structure is available in our &lt;a href=&#34;https://actualbudget.org/docs/contributing/project-details&#34;&gt;community documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;Current feature requests can be seen &lt;a href=&#34;https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc&#34;&gt;here&lt;/a&gt;. Vote for your favorite requests by reacting &lt;span&gt;üëç&lt;/span&gt; to the top comment of the request.&lt;/p&gt; &#xA;&lt;p&gt;To add new feature requests, open a new Issue of the &#34;Feature Request&#34; type.&lt;/p&gt; &#xA;&lt;h3&gt;Translation&lt;/h3&gt; &#xA;&lt;p&gt;Make Actual Budget accessible to more people by helping with the &lt;a href=&#34;https://actualbudget.org/docs/contributing/i18n/&#34;&gt;Internationalization&lt;/a&gt; of Actual. We are using a crowd sourcing tool to manage the translations, see our &lt;a href=&#34;https://hosted.weblate.org/projects/actualbudget/&#34;&gt;Weblate Project&lt;/a&gt;. Weblate proudly supports open-source software projects through their &lt;a href=&#34;https://weblate.org/en/hosting/#libre&#34;&gt;Libre plan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to our wonderful sponsors who make Actual Budget possible!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/v3/img/components/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>