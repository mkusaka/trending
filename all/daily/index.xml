<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-12T01:22:23Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kepano/flexoki</title>
    <updated>2023-10-12T01:22:23Z</updated>
    <id>tag:github.com,2023-10-12:/kepano/flexoki</id>
    <link href="https://github.com/kepano/flexoki" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An inky color scheme for prose and code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://stephango.com/flexoki&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kepano/flexoki/main/_images/flexoki-dark.png&#34; alt=&#34;Flexoki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flexoki is an inky color scheme for prose and code. Flexoki is designed for reading and writing on digital screens. It is inspired by analog printing inks and warm shades of paper.&lt;/p&gt; &#xA;&lt;p&gt;Learn more at &lt;a href=&#34;https://stephango.com/flexoki&#34;&gt;stephango.com/flexoki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Syntax highlighting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kepano/flexoki/main/_images/flexoki-code.png&#34; alt=&#34;Flexoki&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ports&lt;/h2&gt; &#xA;&lt;p&gt;Flexoki is available for the following apps and tools.&lt;/p&gt; &#xA;&lt;h3&gt;Apps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/alacritty&#34;&gt;Alacritty&lt;/a&gt; by @willtheodore&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crmsnbleyd/flexoki-emacs-theme&#34;&gt;Emacs&lt;/a&gt; by @crmsnbleyd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/iterm2&#34;&gt;iTerm2&lt;/a&gt; by @techvlad and @pingiun&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/kitty&#34;&gt;Kitty&lt;/a&gt; by @peterjbachman&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/lite_xl&#34;&gt;Lite XL&lt;/a&gt; by @chambored&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/neovim&#34;&gt;Neovim&lt;/a&gt; by @stevedylandev&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki-obsidian&#34;&gt;Obsidian&lt;/a&gt; and part of &lt;a href=&#34;https://github.com/kepano/obsidian-minimal&#34;&gt;Minimal theme&lt;/a&gt; by @kepano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/terminal&#34;&gt;macOS Terminal&lt;/a&gt; by @getninjaN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki-sublime&#34;&gt;Sublime Text&lt;/a&gt; by @kepano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/vscode&#34;&gt;Visual Studio Code&lt;/a&gt; by @Railly&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/warp-terminal&#34;&gt;Warp&lt;/a&gt; by @tplesnar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/wezterm&#34;&gt;WezTerm&lt;/a&gt; by @jbromley&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/windows-terminal&#34;&gt;Windows Terminal&lt;/a&gt; by @joukevandermaas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/xresources&#34;&gt;Xresources&lt;/a&gt; by @dmb2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/phenomen/affd8c346538378548febd20dccdbfcc&#34;&gt;Shadcn&lt;/a&gt; by @phenomen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/martin-mael/4b50fa8e55da846f3f73399d84fa1848&#34;&gt;Tailwind&lt;/a&gt; by @martin-mael&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/theme.sh&#34;&gt;theme.sh&lt;/a&gt; by @TheLastZombie&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/community/file/1293274371462921490/flexoki&#34;&gt;Figma&lt;/a&gt; by @kepano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepano/flexoki/tree/main/gimp&#34;&gt;GIMP palette&lt;/a&gt; by @xTibor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Flexoki is MIT licensed. You are free to port Flexoki to any app. Please include attribution and a link to &lt;a href=&#34;https://stephango.com/flexoki&#34;&gt;stephango.com/flexoki&lt;/a&gt;. Add a link to your port in the list above via pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h4&gt;Sublime Text&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kepano/flexoki/main/_images/flexoki-sublime.png&#34; alt=&#34;Flexoki Sublime&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;VS Code&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kepano/flexoki/main/vscode/flexoki-vscode-dark.png&#34; alt=&#34;Flexoki VS Code Dark&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kepano/flexoki/main/vscode/flexoki-vscode-light.png&#34; alt=&#34;Flexoki VS Code Light&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Colors&lt;/h2&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://stephango.com/flexoki&#34;&gt;see documentation&lt;/a&gt; for how to apply these colors.&lt;/p&gt; &#xA;&lt;h3&gt;Base tones&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Hex&lt;/th&gt; &#xA;   &lt;th&gt;RGB&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;black&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#100F0F&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;16, 15, 15&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;950&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#1C1B1A&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;28, 27, 26&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;900&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#282726&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;40, 39, 38&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;850&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#343331&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;52, 51, 49&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;800&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#403E3C&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;64, 62, 60&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;700&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#575653&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;87, 86, 83&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;600&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#6F6E69&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;111, 110, 105&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;500&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#878580&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;135, 133, 128&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;300&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#B7B5AC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;183, 181, 172&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;200&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#CECDC3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;206, 205, 195&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;150&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#DAD8CE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;218, 216, 206&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#E6E4D9&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;230, 228, 217&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#F2F0E5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;242, 240, 229&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;paper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#FFFCF0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;255, 252, 240&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Dark colors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Color&lt;/th&gt; &#xA;   &lt;th&gt;Hex&lt;/th&gt; &#xA;   &lt;th&gt;RGB&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;red&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#AF3029&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;175, 48, 41&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;orange&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#BC5215&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;188, 82, 21&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;yellow&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#AD8301&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;173, 131, 1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;green&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#66800B&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;102, 128, 11&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cyan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#24837B&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;36, 131, 123&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#205EA6&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;32, 94, 166&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;purple&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#5E409D&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;94, 64, 157&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;magenta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#A02F6F&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;160, 47, 111&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Light colors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Color&lt;/th&gt; &#xA;   &lt;th&gt;Hex&lt;/th&gt; &#xA;   &lt;th&gt;RGB&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;red&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#D14D41&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;209, 77, 65&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;orange&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#DA702C&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;218, 112, 44&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;yellow&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#D0A215&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;208, 162, 21&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;green&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#879A39&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;135, 154, 57&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cyan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#3AA99F&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;58, 169, 159&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#4385BE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;67, 133, 190&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;purple&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#8B7EC8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;139, 126, 200&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;magenta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;#CE5D97&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;206, 93, 151&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>XuanchenLin/NanUI</title>
    <updated>2023-10-12T01:22:23Z</updated>
    <id>tag:github.com,2023-10-12:/XuanchenLin/NanUI</id>
    <link href="https://github.com/XuanchenLin/NanUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NanUI is an open source .NET project for .NET developers who want to create desktop applications with HTML, CSS and JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/XuanchenLin/NanUI/master/artworks/WinFormiumLogo.png&#34; width=&#34;144&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The WinFormium Project&lt;br&gt;(A.K.A. NanUI)&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;Easily build powerful WinForm applications with HTML, CSS and JavaScript.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WinFormium&lt;/h1&gt; &#xA;&lt;p&gt;点击&lt;a href=&#34;https://gitee.com/dotNetChina/NanUI/&#34;&gt;[此处]&lt;/a&gt;切换到&lt;strong&gt;简体中文&lt;/strong&gt;仓库首页。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/XuanchenLin/WinFormium&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/nuget/v/NetDimension.NanUI&#34; alt=&#34;Nuget&#34;&gt; &lt;img src=&#34;https://img.shields.io/nuget/dt/NetDimension.NanUI&#34; alt=&#34;Nuget&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;NanUI has always been in the testing stage. After 9 years, it is time to release the official v1.0 version of NanUI! When version 1.0 is released, the new name of the project will be officially launched - &lt;strong&gt;WinFormium&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📢 致谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢各位朋友近期对 NanUI 项目的关注，能引起共鸣和关注我感到非常荣幸。但是恳请大家别再打钱，这样我压力好大，各位的好意林某已心领了。&lt;/p&gt; &#xA;&lt;p&gt;在此也祝福那些和我一样人到中年还对编程依然饱有热情的朋友们，生活纵然不易，希望任怀初心！&lt;/p&gt; &#xA;&lt;h2&gt;⭐ About&lt;/h2&gt; &#xA;&lt;p&gt;WinFormium is a open source framework on .NET platform for creating user interface of WinForm Applicaitons using HTML5, CSS3, and JavaScript. It is based on the &lt;a href=&#34;https://bitbucket.org/xilium/xilium.cefglue/wiki/Home&#34;&gt;Xilium.CefGlue&lt;/a&gt; project, which is a .NET wrapper around the &lt;a href=&#34;https://bitbucket.org/chromiumembedded/cef&#34;&gt;Chromium Embedded Framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for a framework for creating a WinForm application with a modern user interface, WinFormium is a good choice. you can use HTML, CSS, and JavaScript to create a user interface, and use C# to write the business logic of the application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please give WinFormium project a star⭐ if you like it.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If this project helps, please consider funding it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/mrjson?country.x=C2&amp;amp;locale.x=zh_XC&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🖥️ Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET Framework 4.6.2 or higher / .NET 6.0 or higher&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 2019 or higher (VS2022 is recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Deployment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Windows 7 Service Pack 1 or higher&lt;/li&gt; &#xA; &lt;li&gt;.Net Framework 4.6.2 or higher&lt;/li&gt; &#xA; &lt;li&gt;.NET 6.0 for Windows 7 and higher.&lt;/li&gt; &#xA; &lt;li&gt;.NET 7.0/8.0 for Windows 10 and higher.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;Windows Only&lt;/strong&gt; framework, it can not run on Linux or Mac OS.&lt;/p&gt; &#xA;&lt;p&gt;The minimum supported Windows is Windows 7 Service Pack 1, and some features (such as DirectComposition Offscreen Rendering) are not supported on Windows 7.&lt;/p&gt; &#xA;&lt;h2&gt;🧰 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Create a simple WinFormium Application by following the steps below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Create a WinForm Application by default template.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Install WinFormium NuGet Package&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open the NuGet Package Manager to install or use NuGet Package Manager Console, and run the following command to install WinFormium nuget package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;PM&amp;gt; Install-Package NetDimension.NanUI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the dependencies of Chromium Embedded Framework that WinFormium depends on:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;PM&amp;gt; Install-Package NetDimension.NanUI.Runtime&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. A basic WinFormium application requires the following code:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Modify the code in the &lt;strong&gt;Program.cs&lt;/strong&gt; file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using WinFormium;&#xA;&#xA;class Program&#xA;{&#xA;    [STAThread]&#xA;    static void Main(string[] args)&#xA;    {&#xA;        var builder = WinFormiumApp.CreateBuilder();&#xA;&#xA;        builder.UseWinFormiumApp&amp;lt;MyApp&amp;gt;();&#xA;&#xA;        var app = builder.Build();&#xA;&#xA;        app.Run();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a class implements &lt;strong&gt;WinFormiumStartup&lt;/strong&gt; for configuring the application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using WinFormium;&#xA;&#xA;class MyAPP : WinFormiumStartup&#xA;{&#xA;    protected override MainWindowCreationAction? UseMainWindow(MainWindowOptions opts)&#xA;    {&#xA;        // Configure the main window of this application&#xA;        return opts.UseMainFormium&amp;lt;MyWindow&amp;gt;();&#xA;    }&#xA;&#xA;    protected override void WinFormiumMain(string[] args)&#xA;    {&#xA;        // The codes in Main function should be here, this function only runs in Main process. So it can prevent the codes in Main process running in sub-processes.&#xA;        ApplicationConfiguration.Initialize();&#xA;    }&#xA;&#xA;    protected override void ConfigurationChromiumEmbedded(ChromiumEnvironmentBuiler cef)&#xA;    {&#xA;        // Configure the Chromium Embedded Framework here&#xA;    }&#xA;&#xA;    protected override void ConfigureServices(IServiceCollection services)&#xA;    {&#xA;        // Configure the services of this application here&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a class implements &lt;strong&gt;Formium&lt;/strong&gt; for configuring the main window of the application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using WinFormium;&#xA;using WinFormium.Forms;&#xA;&#xA;class MyWindow : Formium&#xA;{&#xA;    public MyWindow()&#xA;    {&#xA;        Url = &#34;https://www.google.com&#34;;&#xA;    }&#xA;&#xA;    protected override FormStyle ConfigureWindowStyle(WindowStyleBuilder builder)&#xA;    {&#xA;        // Configure the style of the window here or leave it blank to use the default style&#xA;&#xA;        var style = builder.UseSystemForm();&#xA;&#xA;        style.TitleBar = false;&#xA;&#xA;        style.DefaultAppTitle = &#34;My first WinFomrim app&#34;;&#xA;&#xA;        return style;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Build and run your WinFormium application&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more info please see - &lt;a href=&#34;https://raw.githubusercontent.com/XuanchenLin/NanUI/master/docs/README.md&#34;&gt;Documentation&lt;/a&gt; or &lt;a href=&#34;https://github.com/XuanchenLin/WinFormium/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤖 Demos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XuanchenLin/NanUI/master/examples/MinimalWinFormiumApp&#34;&gt;Minimal WinFormium App&lt;/a&gt; - Introduction to the basic usage of WinFormium.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Third-Party References &amp;amp; Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CEF - &lt;a href=&#34;&#34;&gt;https://bitbucket.org/chromiumembedded/cef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Xilium.CefGlue - &lt;a href=&#34;&#34;&gt;https://gitlab.com/xiliumhq/chromiumembedded/cefglue/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vanara.Library - &lt;a href=&#34;&#34;&gt;https://github.com/dahall/Vanara/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vortice.Windows - &lt;a href=&#34;&#34;&gt;https://github.com/amerkoleci/Vortice.Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SkiaSharp - &lt;a href=&#34;&#34;&gt;https://github.com/mono/SkiaSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React - &lt;a href=&#34;&#34;&gt;https://github.com/facebook/react&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React-Router - &lt;a href=&#34;&#34;&gt;https://github.com/remix-run/react-router&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vite - &lt;a href=&#34;&#34;&gt;https://github.com/vitejs/vite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏆 Inspirations&lt;/h2&gt; &#xA;&lt;p&gt;I was inspired by the following songs and albums when creating this version of WinFormium.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strandels&lt;/strong&gt; - Chance Of Rain&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;One Direction&lt;/strong&gt; - What a Feeling (Made In The A.M.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Thomas Rhett&lt;/strong&gt; - VHS (Center Point Road)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sammy Kershaw&lt;/strong&gt; - She Don&#39;t Know She&#39;s Beautiful (Haunted Heart)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chrissy Steele&lt;/strong&gt; - Two Bodies (Magnet To Steele)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Halestorm&lt;/strong&gt; - I Like It Heavy (Into the Wild Life)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Joan Jett &amp;amp; The Blackhearts&lt;/strong&gt; - I Hate Myself for Loving You (Up Your Alley)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>zeromicro/go-zero</title>
    <updated>2023-10-12T01:22:23Z</updated>
    <id>tag:github.com,2023-10-12:/zeromicro/go-zero</id>
    <link href="https://github.com/zeromicro/go-zero" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cloud-native Go microservices framework with cli tool for productivity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-zero&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/go-zero.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;go-zero is a web and rpc framework with lots of builtin engineering practices. It’s born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/zeromicro/go-zero/actions&#34;&gt;&lt;img src=&#34;https://github.com/zeromicro/go-zero/workflows/Go/badge.svg?branch=master&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/zeromicro/go-zero&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/zeromicro/go-zero/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/zeromicro/go-zero&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/zeromicro/go-zero&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zeromicro/go-zero&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/zeromicro/go-zero.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/zeromicro/go-zero&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/zeromicro/go-zero.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/4JQvC5A4Fe&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/794530774463414292?label=chat&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🤷‍ What is go-zero?&lt;/h2&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/zeromicro/go-zero/master/readme-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/go-zero?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-go-zero&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=334030&amp;amp;theme=light&#34; alt=&#34;go-zero - A web &amp;amp; rpc framework written in Go. | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;go-zero (listed in CNCF Landscape: &lt;a href=&#34;https://landscape.cncf.io/?selected=go-zero&#34;&gt;https://landscape.cncf.io/?selected=go-zero&lt;/a&gt;) is a web and rpc framework with lots of builtin engineering practices. It’s born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years.&lt;/p&gt; &#xA;&lt;p&gt;go-zero contains simple API description syntax and code generation tool called &lt;code&gt;goctl&lt;/code&gt;. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from .api files with &lt;code&gt;goctl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Advantages of go-zero:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;improve the stability of the services with tens of millions of daily active users&lt;/li&gt; &#xA; &lt;li&gt;builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed&lt;/li&gt; &#xA; &lt;li&gt;builtin middlewares also can be integrated into your frameworks&lt;/li&gt; &#xA; &lt;li&gt;simple API syntax, one command to generate a couple of different languages&lt;/li&gt; &#xA; &lt;li&gt;auto validate the request parameters from clients&lt;/li&gt; &#xA; &lt;li&gt;plenty of builtin microservice management and concurrent toolkits&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/architecture-en.png&#34; alt=&#34;Architecture&#34; width=&#34;1500&#34;&gt; &#xA;&lt;h2&gt;Backgrounds of go-zero&lt;/h2&gt; &#xA;&lt;p&gt;At the beginning of 2018, we decided to re-design our system, from monolithic architecture with Java+MongoDB to microservice architecture. After research and comparison, we chose to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Golang based &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;great performance&lt;/li&gt; &#xA;   &lt;li&gt;simple syntax&lt;/li&gt; &#xA;   &lt;li&gt;proven engineering efficiency&lt;/li&gt; &#xA;   &lt;li&gt;extreme deployment experience&lt;/li&gt; &#xA;   &lt;li&gt;less server resource consumption&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Self-designed microservice architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I have rich experience in designing microservice architectures&lt;/li&gt; &#xA;   &lt;li&gt;easy to locate the problems&lt;/li&gt; &#xA;   &lt;li&gt;easy to extend the features&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Design considerations on go-zero&lt;/h2&gt; &#xA;&lt;p&gt;By designing the microservice architecture, we expected to ensure stability, as well as productivity. And from just the beginning, we have the following design principles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;keep it simple&lt;/li&gt; &#xA; &lt;li&gt;high availability&lt;/li&gt; &#xA; &lt;li&gt;stable on high concurrency&lt;/li&gt; &#xA; &lt;li&gt;easy to extend&lt;/li&gt; &#xA; &lt;li&gt;resilience design, failure-oriented programming&lt;/li&gt; &#xA; &lt;li&gt;try best to be friendly to the business logic development, encapsulate the complexity&lt;/li&gt; &#xA; &lt;li&gt;one thing, one way&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After almost half a year, we finished the transfer from a monolithic system to microservice system and deployed on August 2018. The new system guaranteed business growth and system stability.&lt;/p&gt; &#xA;&lt;h2&gt;The implementation and features of go-zero&lt;/h2&gt; &#xA;&lt;p&gt;go-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;powerful tool included, less code to write&lt;/li&gt; &#xA; &lt;li&gt;simple interfaces&lt;/li&gt; &#xA; &lt;li&gt;fully compatible with net/http&lt;/li&gt; &#xA; &lt;li&gt;middlewares are supported, easy to extend&lt;/li&gt; &#xA; &lt;li&gt;high performance&lt;/li&gt; &#xA; &lt;li&gt;failure-oriented programming, resilience design&lt;/li&gt; &#xA; &lt;li&gt;builtin service discovery, load balancing&lt;/li&gt; &#xA; &lt;li&gt;builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto-trigger, auto recover&lt;/li&gt; &#xA; &lt;li&gt;auto validation of API request parameters&lt;/li&gt; &#xA; &lt;li&gt;chained timeout control&lt;/li&gt; &#xA; &lt;li&gt;auto management of data caching&lt;/li&gt; &#xA; &lt;li&gt;call tracing, metrics, and monitoring&lt;/li&gt; &#xA; &lt;li&gt;high concurrency protected&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As below, go-zero protects the system with a couple of layers and mechanisms:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/resilience-en.png&#34; alt=&#34;Resilience&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;The simplified architecture that we use with go-zero&lt;/h2&gt; &#xA;&lt;img width=&#34;1067&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/1918356/171880372-5010d846-e8b1-4942-8fe2-e2bbb584f762.png&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Run the following command under your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get -u github.com/zeromicro/go-zero&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;full examples can be checked out from below:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zeromicro/zero-doc/raw/main/doc/shorturl-en.md&#34;&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zeromicro/zero-doc/raw/main/docs/zero/bookstore-en.md&#34;&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;install goctl&lt;/p&gt; &lt;p&gt;&lt;code&gt;goctl&lt;/code&gt;can be read as &lt;code&gt;go control&lt;/code&gt;. &lt;code&gt;goctl&lt;/code&gt; means not to be controlled by code, instead, we control it. The inside &lt;code&gt;go&lt;/code&gt; is not &lt;code&gt;golang&lt;/code&gt;. At the very beginning, I was expecting it to help us improve productivity, and make our lives easier.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# for Go&#xA;go install github.com/zeromicro/go-zero/tools/goctl@latest&#xA;&#xA;# For Mac&#xA;brew install goctl&#xA;&#xA;# docker for amd64 architecture&#xA;docker pull kevinwan/goctl&#xA;# run goctl like&#xA;docker run --rm -it -v `pwd`:/app kevinwan/goctl goctl --help&#xA;&#xA;# docker for arm64 (M1) architecture&#xA;docker pull kevinwan/goctl:latest-arm64&#xA;# run goctl like&#xA;docker run --rm -it -v `pwd`:/app kevinwan/goctl:latest-arm64 goctl --help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;make sure goctl is executable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type (&#xA;  Request {&#xA;    Name string `path:&#34;name,options=[you,me]&#34;` // parameters are auto validated&#xA;  }&#xA;&#xA;  Response {&#xA;    Message string `json:&#34;message&#34;`&#xA;  }&#xA;)&#xA;&#xA;service greet-api {&#xA;  @handler GreetHandler&#xA;  get /greet/from/:name(Request) returns (Response)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the .api files also can be generated by goctl, like below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;goctl api -o greet.api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;generate the go server-side code&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;goctl api go -api greet.api -dir greet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the generated files look like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Plain&#34;&gt;├── greet&#xA;│&amp;nbsp;&amp;nbsp; ├── etc&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── greet-api.yaml        // configuration file&#xA;│&amp;nbsp;&amp;nbsp; ├── greet.go                  // main file&#xA;│&amp;nbsp;&amp;nbsp; └── internal&#xA;│&amp;nbsp;&amp;nbsp;     ├── config&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── config.go         // configuration definition&#xA;│&amp;nbsp;&amp;nbsp;     ├── handler&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; ├── greethandler.go   // get/put/post/delete routes are defined here&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── routes.go         // routes list&#xA;│&amp;nbsp;&amp;nbsp;     ├── logic&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── greetlogic.go     // request logic can be written here&#xA;│&amp;nbsp;&amp;nbsp;     ├── svc&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── servicecontext.go // service context, mysql/redis can be passed in here&#xA;│&amp;nbsp;&amp;nbsp;     └── types&#xA;│&amp;nbsp;&amp;nbsp;         └── types.go          // request/response defined here&#xA;└── greet.api                     // api description file&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the generated code can be run directly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd greet&#xA;go mod init&#xA;go mod tidy&#xA;go run greet.go -f etc/greet-api.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;by default, it’s listening on port 8888, while it can be changed in the configuration file.&lt;/p&gt; &lt;p&gt;you can check it by curl:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -i http://localhost:8888/greet/from/you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the response looks like below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;HTTP/1.1 200 OK&#xA;Date: Sun, 30 Aug 2020 15:32:35 GMT&#xA;Content-Length: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write the business logic code&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the dependencies can be passed into the logic within servicecontext.go, like mysql, reds, etc.&lt;/li&gt; &#xA;   &lt;li&gt;add the logic code in a logic package according to .api file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate code like Java, TypeScript, Dart, JavaScript, etc. just from the api file&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;goctl api java -api greet.api -dir greet&#xA;goctl api dart -api greet.api -dir greet&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/benchmark.png&#34; alt=&#34;benchmark&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smallnest/go-web-framework-benchmark&#34;&gt;Checkout the test code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go-zero.dev/&#34;&gt;Documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zeromicro/zero-doc/raw/main/doc/shorturl-en.md&#34;&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zeromicro/zero-doc/raw/main/docs/zero/bookstore-en.md&#34;&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zeromicro/zero-examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chat group&lt;/h2&gt; &#xA;&lt;p&gt;Join the chat via &lt;a href=&#34;https://discord.gg/4JQvC5A4Fe&#34;&gt;https://discord.gg/4JQvC5A4Fe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloud Native Landscape&lt;/h2&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://landscape.cncf.io/images/right-logo.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;go-zero enlisted in the &lt;a href=&#34;https://landscape.cncf.io/?selected=go-zero&#34;&gt;CNCF Cloud Native Landscape&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Give a Star! ⭐&lt;/h2&gt; &#xA;&lt;p&gt;If you like or are using this project to learn or start your solution, please give it a star. Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Buy me a coffee&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/kevwan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>