<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-07T01:29:01Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>expo/expo</title>
    <updated>2025-05-07T01:29:01Z</updated>
    <id>tag:github.com,2025-05-07:/expo/expo</id>
    <link href="https://github.com/expo/expo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://expo.dev/&#34;&gt; &lt;img alt=&#34;Expo logo&#34; height=&#34;128&#34; src=&#34;https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://expo.dev/&#34;&gt;Expo&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;a href=&#34;https://expo.dev/&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;SDK version&#34; href=&#34;https://www.npmjs.com/package/expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo SDK version&#34; src=&#34;https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Chat or ask a question&#34; href=&#34;https://chat.expo.dev&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Chat or ask a question&#34; src=&#34;https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=Chat%20with%20us&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Expo is free to use&#34; href=&#34;https://github.com/expo/expo/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: MIT&#34; src=&#34;https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;expo downloads&#34; href=&#34;http://www.npmtrends.com/expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;try expo with snack&#34; href=&#34;https://snack.expo.dev&#34;&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt; ‚ÄÇ‚Ä¢‚ÄÇ &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://docs.expo.dev&#34;&gt;Read the Documentation&lt;/a&gt; ‚ÄÇ‚Ä¢‚ÄÇ &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://expo.dev/blog&#34;&gt;Learn more on our blog&lt;/a&gt; ‚ÄÇ‚Ä¢‚ÄÇ &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://expo.canny.io/feature-requests&#34;&gt;Request a feature&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;Follow us on&lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;Follow @expo on X&#34; href=&#34;https://x.com/intent/follow?screen_name=expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo on X&#34; src=&#34;https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label=&#34;Follow @expo on GitHub&#34; href=&#34;https://github.com/expo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo on GitHub&#34; src=&#34;https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label=&#34;Follow @expo on Reddit&#34; href=&#34;https://www.reddit.com/r/expo/&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo on Reddit&#34; src=&#34;https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;amp;logo=reddit&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label=&#34;Follow @expo on Bluesky&#34; href=&#34;https://bsky.app/profile/expo.dev&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo on Bluesky&#34; src=&#34;https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;amp;logo=bluesky&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label=&#34;Follow @expo on LinkedIn&#34; href=&#34;https://www.linkedin.com/company/expo-dev&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Expo on LinkedIn&#34; src=&#34;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. &lt;a href=&#34;https://expo.dev/eas&#34;&gt;Expo Application Services (EAS)&lt;/a&gt; is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://expo.dev/guidelines&#34;&gt;Expo Community Guidelines&lt;/a&gt; before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-documentation&#34;&gt;üìö Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-project-layout&#34;&gt;üó∫ Project Layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-badges&#34;&gt;üèÖ Badges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-contributing&#34;&gt;üëè Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-faq&#34;&gt;‚ùì FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#-the-team&#34;&gt;üíô The Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label=&#34;expo documentation&#34; href=&#34;https://docs.expo.dev&#34;&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/versions/latest/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/workflow/customizing/&#34;&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üó∫ Project Layout&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for Expo modules, if you want to edit a library or just see how it works this is where you&#39;ll find it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/apps&#34;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development modules. You&#39;ll do most of your testing in here.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/apps/expo-go&#34;&gt;&lt;code&gt;apps/expo-go&lt;/code&gt;&lt;/a&gt; This is where you can find the source code for Expo Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/apps/expo-go/ios&#34;&gt;&lt;code&gt;apps/expo-go/ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. When developing iOS, always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href=&#34;https://docs.expo.dev&#34;&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/templates&#34;&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;npx create-expo-app&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/react-native-lab&#34;&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt; used to build Expo Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/guides&#34;&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/tools&#34;&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contain build and configuration tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/template-files&#34;&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json&#34;&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üèÖ Badges&lt;/h2&gt; &#xA;&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://expo.dev/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000&#34; alt=&#34;runs with Expo Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://expo.dev/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000&#34; alt=&#34;runs with Expo Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)&#xA;&#xA;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üëè Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href=&#34;https://github.com/expo/expo/tree/main/packages/%40expo/cli&#34;&gt;CLI package&lt;/a&gt; to work on the Expo CLI.&lt;/p&gt; &#xA;&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href=&#34;https://docs.expo.dev/faq/&#34;&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;If you still have questions you can ask them on our &lt;a href=&#34;https://chat.expo.dev&#34;&gt;Discord and Forums&lt;/a&gt; or X &lt;a href=&#34;https://x.com/expo&#34;&gt;@expo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üíô The Team&lt;/h2&gt; &#xA;&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href=&#34;https://expo.dev/about&#34;&gt;team members&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Expo source code is made available under the &lt;a href=&#34;https://raw.githubusercontent.com/expo/expo/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt; &#xA;&lt;img alt=&#34;Star the Expo repo on GitHub to support the project&#34; src=&#34;https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif&#34; width=&#34;50%&#34;&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/agents-course</title>
    <updated>2025-05-07T01:29:01Z</updated>
    <id>tag:github.com,2025-05-07:/huggingface/agents-course</id>
    <link href="https://github.com/huggingface/agents-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the Hugging Face Agents Course.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://hf.co/learn/agents-course&#34; target=&#34;_blank&#34;&gt;The Hugging Face Agents Course&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If you like the course, &lt;strong&gt;don&#39;t hesitate to ‚≠ê star this repository&lt;/strong&gt;. This helps us to &lt;strong&gt;make the course more visible ü§ó&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://huggingface.co/datasets/agents-course/course-images/resolve/main/en/communication/please_star.gif&#34; alt=&#34;Star the repo&#34;&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;p&gt;The course is divided into 4 units. These will take you from &lt;strong&gt;the basics of agents to a final assignment with a benchmark&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sign up here (it&#39;s free) üëâ &lt;a href=&#34;https://bit.ly/hf-learn-agents&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://bit.ly/hf-learn-agents&#34;&gt;https://bit.ly/hf-learn-agents&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can access the course here üëâ &lt;a href=&#34;https://hf.co/learn/agents-course&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://hf.co/learn/agents-course&#34;&gt;https://hf.co/learn/agents-course&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Unit&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/en/unit0/introduction&#34;&gt;Welcome to the Course&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Welcome, guidelines, necessary tools, and course overview.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/en/unit1/introduction&#34;&gt;Introduction to Agents&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Definition of agents, LLMs, model family tree, and special tokens.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1 Bonus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/bonus-unit1/introduction&#34;&gt;Fine-tuning an LLM for Function-calling&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to fine-tune an LLM for Function-Calling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit2/introduction&#34;&gt;Frameworks for AI Agents&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Overview of &lt;code&gt;smolagents&lt;/code&gt;, &lt;code&gt;LangGraph&lt;/code&gt; and &lt;code&gt;LlamaIndex&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit2/smolagents/introduction&#34;&gt;The Smolagents Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to build effective agents using the &lt;code&gt;smolagents&lt;/code&gt; library, a lightweight framework for creating capable AI agents.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit2/llama-index/introduction&#34;&gt;The LlamaIndex Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to build LLM-powered agents over your data using indexes and workflows using the &lt;code&gt;LlamaIndex&lt;/code&gt; toolkit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit2/langgraph/introduction&#34;&gt;The LangGraph Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to build production-ready applications using the &lt;code&gt;LangGraph&lt;/code&gt; framework giving you control tools over the flow of your agent.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2 Bonus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/bonus-unit2/introduction&#34;&gt;Observability and Evaluation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to trace and evaluate your agents.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit3/agentic-rag/introduction&#34;&gt;Use Case for Agentic RAG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to use Agentic RAG to help agents respond to different use cases using various frameworks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/learn/agents-course/unit4/introduction&#34;&gt;Final Project - Create, Test and Certify Your Agent&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated evaluation of agents and leaderboard with student results.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic knowledge of Python&lt;/li&gt; &#xA; &lt;li&gt;Basic knowledge of LLMs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this course, you&#39;re welcome to do so. Feel free to open an issue or join the discussion in the &lt;a href=&#34;https://discord.gg/UrrTSsSyjb&#34;&gt;Discord&lt;/a&gt;. For specific contributions, here are some guidelines:&lt;/p&gt; &#xA;&lt;h3&gt;Small typo and grammar fixes&lt;/h3&gt; &#xA;&lt;p&gt;If you find a small typo or grammar mistake, please fix it yourself and submit a pull request. This is very helpful for students.&lt;/p&gt; &#xA;&lt;h3&gt;New unit&lt;/h3&gt; &#xA;&lt;p&gt;If you want to add a new unit, &lt;strong&gt;please create an issue in the repository, describe the unit, and why it should be added&lt;/strong&gt;. We will discuss it and if it&#39;s a good addition, we can collaborate on it.&lt;/p&gt; &#xA;&lt;h2&gt;Citing the project&lt;/h2&gt; &#xA;&lt;p&gt;To cite this repository in publications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{agents-course,&#xA;  author = {Burtenshaw, Ben and Thomas, Joffrey and Simonini, Thomas and Paniego, Sergio},&#xA;  title = {The Hugging Face Agents Course},&#xA;  year = {2025},&#xA;  howpublished = {\url{https://github.com/huggingface/agents-course}},&#xA;  note = {GitHub repository},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>awslabs/agent-squad</title>
    <updated>2025-05-07T01:29:01Z</updated>
    <id>tag:github.com,2025-05-07:/awslabs/agent-squad</id>
    <link href="https://github.com/awslabs/agent-squad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible and powerful framework for managing multiple AI agents and handling complex conversations&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt;Agent Squad&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Flexible, lightweight open-source framework for orchestrating multiple AI agents to handle complex conversations.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;üì¢ New Name Alert:&lt;/strong&gt; Multi-Agent Orchestrator is now &lt;strong&gt;Agent Squad!&lt;/strong&gt; üéâ&lt;br&gt; Same powerful functionalities, new catchy name. Embrace the squad! &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/awslabs/agent-squad&#34;&gt;&lt;img alt=&#34;GitHub Repo&#34; src=&#34;https://img.shields.io/badge/GitHub-Repo-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/agent-squad&#34;&gt;&lt;img alt=&#34;npm&#34; src=&#34;https://img.shields.io/npm/v/agent-squad.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/agent-squad/&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/agent-squad.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- GitHub Stats --&gt; &lt;img src=&#34;https://img.shields.io/github/stars/awslabs/agent-squad?style=social&#34; alt=&#34;GitHub stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/awslabs/agent-squad?style=social&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/watchers/awslabs/agent-squad?style=social&#34; alt=&#34;GitHub watchers&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- Repository Info --&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/awslabs/agent-squad&#34; alt=&#34;Last Commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/awslabs/agent-squad&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/awslabs/agent-squad&#34; alt=&#34;Pull Requests&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://awslabs.github.io/agent-squad/&#34; style=&#34;display: inline-block; background-color: #0066cc; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; font-weight: bold; font-size: 15px; transition: background-color 0.3s;&#34;&gt; üìö Explore Full Documentation &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üîñ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üß† &lt;strong&gt;Intelligent intent classification&lt;/strong&gt; ‚Äî Dynamically route queries to the most suitable agent based on context and content.&lt;/li&gt; &#xA; &lt;li&gt;üî§ &lt;strong&gt;Dual language support&lt;/strong&gt; ‚Äî Fully implemented in both &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;TypeScript&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;üåä &lt;strong&gt;Flexible agent responses&lt;/strong&gt; ‚Äî Support for both streaming and non-streaming responses from different agents.&lt;/li&gt; &#xA; &lt;li&gt;üìö &lt;strong&gt;Context management&lt;/strong&gt; ‚Äî Maintain and utilize conversation context across multiple agents for coherent interactions.&lt;/li&gt; &#xA; &lt;li&gt;üîß &lt;strong&gt;Extensible architecture&lt;/strong&gt; ‚Äî Easily integrate new agents or customize existing ones to fit your specific needs.&lt;/li&gt; &#xA; &lt;li&gt;üåê &lt;strong&gt;Universal deployment&lt;/strong&gt; ‚Äî Run anywhere - from AWS Lambda to your local environment or any cloud platform.&lt;/li&gt; &#xA; &lt;li&gt;üì¶ &lt;strong&gt;Pre-built agents and classifiers&lt;/strong&gt; ‚Äî A variety of ready-to-use agents and multiple classifier implementations available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s the Agent Squad ‚ùì&lt;/h2&gt; &#xA;&lt;p&gt;The Agent Squad is a flexible framework for managing multiple AI agents and handling complex conversations. It intelligently routes queries and maintains context across interactions.&lt;/p&gt; &#xA;&lt;p&gt;The system offers pre-built components for quick deployment, while also allowing easy integration of custom agents and conversation messages storage solutions.&lt;/p&gt; &#xA;&lt;p&gt;This adaptability makes it suitable for a wide range of applications, from simple chatbots to sophisticated AI systems, accommodating diverse requirements and scaling efficiently.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üèóÔ∏è High-level architecture flow diagram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/img/flow.jpg&#34; alt=&#34;High-level architecture flow diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The process begins with user input, which is analyzed by a Classifier.&lt;/li&gt; &#xA; &lt;li&gt;The Classifier leverages both Agents&#39; Characteristics and Agents&#39; Conversation history to select the most appropriate agent for the task.&lt;/li&gt; &#xA; &lt;li&gt;Once an agent is selected, it processes the user input.&lt;/li&gt; &#xA; &lt;li&gt;The orchestrator then saves the conversation, updating the Agents&#39; Conversation history, before delivering the response back to the user.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/img/new.png&#34; alt=&#34;&#34;&gt; Introducing SupervisorAgent: Agents Coordination&lt;/h2&gt; &#xA;&lt;p&gt;The Agent Squad now includes a powerful new SupervisorAgent that enables sophisticated team coordination between multiple specialized agents. This new component implements a &#34;agent-as-tools&#34; architecture, allowing a lead agent to coordinate a team of specialized agents in parallel, maintaining context and delivering coherent responses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/img/flow-supervisor.jpg&#34; alt=&#34;SupervisorAgent flow diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Key capabilities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü§ù &lt;strong&gt;Team Coordination&lt;/strong&gt; - Coordonate multiple specialized agents working together on complex tasks&lt;/li&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;Parallel Processing&lt;/strong&gt; - Execute multiple agent queries simultaneously&lt;/li&gt; &#xA; &lt;li&gt;üß† &lt;strong&gt;Smart Context Management&lt;/strong&gt; - Maintain conversation history across all team members&lt;/li&gt; &#xA; &lt;li&gt;üîÑ &lt;strong&gt;Dynamic Delegation&lt;/strong&gt; - Intelligently distribute subtasks to appropriate team members&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ &lt;strong&gt;Agent Compatibility&lt;/strong&gt; - Works with all agent types (Bedrock, Anthropic, Lex, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The SupervisorAgent can be used in two powerful ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct Usage&lt;/strong&gt; - Call it directly when you need dedicated team coordination for specific tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Classifier Integration&lt;/strong&gt; - Add it as an agent within the classifier to build complex hierarchical systems with multiple specialized teams&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here are just a few examples where this agent can be used:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customer Support Teams with specialized sub-teams&lt;/li&gt; &#xA; &lt;li&gt;AI Movie Production Studios&lt;/li&gt; &#xA; &lt;li&gt;Travel Planning Services&lt;/li&gt; &#xA; &lt;li&gt;Product Development Teams&lt;/li&gt; &#xA; &lt;li&gt;Healthcare Coordination Systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://awslabs.github.io/agent-squad/agents/built-in/supervisor-agent&#34;&gt;Learn more about SupervisorAgent ‚Üí&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Demo App&lt;/h2&gt; &#xA;&lt;p&gt;In the screen recording below, we demonstrate an extended version of the demo app that uses 6 specialized agents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Travel Agent&lt;/strong&gt;: Powered by an Amazon Lex Bot&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weather Agent&lt;/strong&gt;: Utilizes a Bedrock LLM Agent with a tool to query the open-meteo API&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Restaurant Agent&lt;/strong&gt;: Implemented as an Amazon Bedrock Agent&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Math Agent&lt;/strong&gt;: Utilizes a Bedrock LLM Agent with two tools for executing mathematical operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tech Agent&lt;/strong&gt;: A Bedrock LLM Agent designed to answer questions on technical topics&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Health Agent&lt;/strong&gt;: A Bedrock LLM Agent focused on addressing health-related queries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Watch as the system seamlessly switches context between diverse topics, from booking flights to checking weather, solving math problems, and providing health information. Notice how the appropriate agent is selected for each query, maintaining coherence even with brief follow-up inputs.&lt;/p&gt; &#xA;&lt;p&gt;The demo highlights the system&#39;s ability to handle complex, multi-turn conversations while preserving context and leveraging specialized agents across various domains.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/img/demo-app.gif?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üéØ Examples &amp;amp; Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Get hands-on experience with the Agent Squad through our diverse set of examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Demo Applications&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/python&#34;&gt;Streamlit Global Demo&lt;/a&gt;: A single Streamlit application showcasing multiple demos, including: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;AI Movie Production Studio&lt;/li&gt; &#xA;     &lt;li&gt;AI Travel Planner&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://awslabs.github.io/agent-squad/cookbook/examples/chat-demo-app/&#34;&gt;Chat Demo App&lt;/a&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Explore multiple specialized agents handling various domains like travel, weather, math, and health&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://awslabs.github.io/agent-squad/cookbook/examples/ecommerce-support-simulator/&#34;&gt;E-commerce Support Simulator&lt;/a&gt;: Experience AI-powered customer support with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Automated response generation for common queries&lt;/li&gt; &#xA;     &lt;li&gt;Intelligent routing of complex issues to human support&lt;/li&gt; &#xA;     &lt;li&gt;Real-time chat and email-style communication&lt;/li&gt; &#xA;     &lt;li&gt;Human-in-the-loop interactions for complex cases&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sample Projects&lt;/strong&gt;: Explore our example implementations in the &lt;code&gt;examples&lt;/code&gt; folder: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/chat-demo-app&#34;&gt;&lt;code&gt;chat-demo-app&lt;/code&gt;&lt;/a&gt;: Web-based chat interface with multiple specialized agents&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/ecommerce-support-simulator&#34;&gt;&lt;code&gt;ecommerce-support-simulator&lt;/code&gt;&lt;/a&gt;: AI-powered customer support system&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/chat-chainlit-app&#34;&gt;&lt;code&gt;chat-chainlit-app&lt;/code&gt;&lt;/a&gt;: Chat application built with Chainlit&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/fast-api-streaming&#34;&gt;&lt;code&gt;fast-api-streaming&lt;/code&gt;&lt;/a&gt;: FastAPI implementation with streaming support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/text-2-structured-output&#34;&gt;&lt;code&gt;text-2-structured-output&lt;/code&gt;&lt;/a&gt;: Natural Language to Structured Data&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/bedrock-inline-agents&#34;&gt;&lt;code&gt;bedrock-inline-agents&lt;/code&gt;&lt;/a&gt;: Bedrock Inline Agents sample&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/tree/main/examples/bedrock-prompt-routing&#34;&gt;&lt;code&gt;bedrock-prompt-routing&lt;/code&gt;&lt;/a&gt;: Bedrock Prompt Routing sample code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples are available in both Python and TypeScript. Check out our &lt;a href=&#34;https://awslabs.github.io/agent-squad/&#34;&gt;documentation&lt;/a&gt; for comprehensive guides on setting up and using the Agent Squad framework!&lt;/p&gt; &#xA;&lt;h2&gt;üìö Deep Dives: Stories, Blogs &amp;amp; Podcasts&lt;/h2&gt; &#xA;&lt;p&gt;Discover creative implementations and diverse applications of the Agent Squad:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://community.aws/content/2lCi8jEKydhDm8eE8QFIQ5K23pF/from-bonjour-to-boarding-pass-multilingual-ai-chatbot-for-flight-reservations&#34;&gt;From &#39;Bonjour&#39; to &#39;Boarding Pass&#39;: Multilingual AI Chatbot for Flight Reservations&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This article demonstrates how to build a multilingual chatbot using the Agent Squad framework. The article explains how to use an &lt;strong&gt;Amazon Lex&lt;/strong&gt; bot as an agent, along with 2 other new agents to make it work in many languages with just a few lines of code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://community.aws/content/2lq6cYYwTYGc7S3Zmz28xZoQNQj/beyond-auto-replies-building-an-ai-powered-e-commerce-support-system&#34;&gt;Beyond Auto-Replies: Building an AI-Powered E-commerce Support system&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This article demonstrates how to build an AI-driven multi-agent system for automated e-commerce customer email support. It covers the architecture and setup of specialized AI agents using the Agent Squad framework, integrating automated processing with human-in-the-loop oversight. The guide explores email ingestion, intelligent routing, automated response generation, and human verification, providing a comprehensive approach to balancing AI efficiency with human expertise in customer support.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://community.aws/content/2mt7CFG7xg4yw6GRHwH9akhg0oD/speak-up-ai-voicing-your-agents-with-amazon-connect-lex-and-bedrock&#34;&gt;Speak Up, AI: Voicing Your Agents with Amazon Connect, Lex, and Bedrock&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This article demonstrates how to build an AI customer call center. It covers the architecture and setup of specialized AI agents using the Agent Squad framework interacting with voice via &lt;strong&gt;Amazon Connect&lt;/strong&gt; and &lt;strong&gt;Amazon Lex&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://community.aws/content/2pTsHrYPqvAbJBl9ht1XxPOSPjR/unlock-bedrock-invokeinlineagent-api-s-hidden-potential-with-agent-squad&#34;&gt;Unlock Bedrock InvokeInlineAgent API&#39;s Hidden Potential&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Learn how to scale &lt;strong&gt;Amazon Bedrock Agents&lt;/strong&gt; beyond knowledge base limitations using the Agent Squad framework and &lt;strong&gt;InvokeInlineAgent API&lt;/strong&gt;. This article demonstrates dynamic agent creation and knowledge base selection for enterprise-scale AI applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://community.aws/content/2phMjQ0bqWMg4PBwejBs1uf4YQE/supercharging-amazon-bedrock-flows-with-aws-agent-squad&#34;&gt;Supercharging Amazon Bedrock Flows&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Learn how to enhance &lt;strong&gt;Amazon Bedrock Flows&lt;/strong&gt; with conversation memory and multi-flow orchestration using the Agent Squad framework. This guide shows how to overcome Bedrock Flows&#39; limitations to build more sophisticated AI workflows with persistent memory and intelligent routing between flows.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üéôÔ∏è Podcast Discussions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üá´üá∑ Podcast (French)&lt;/strong&gt;: L&#39;orchestrateur multi-agents : Un orchestrateur open source pour vos agents IA&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Platforms&lt;/strong&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/be/podcast/lorchestrateur-multi-agents/id1452118442?i=1000684332612&#34;&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/episode/4RdMazSRhZUyW2pniG91Vf&#34;&gt;Spotify&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üá¨üáß Podcast (English)&lt;/strong&gt;: An Orchestrator for Your AI Agents&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Platforms&lt;/strong&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/an-orchestrator-for-your-ai-agents/id1574162669?i=1000677039579&#34;&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/episode/2a9DBGZn2lVqVMBLWGipHU&#34;&gt;Spotify&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TypeScript Version&lt;/h3&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üîÑ &lt;code&gt;multi-agent-orchestrator&lt;/code&gt; becomes &lt;code&gt;agent-squad&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install agent-squad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;p&gt;The following example demonstrates how to use the Agent Squad with two different types of agents: a Bedrock LLM Agent with Converse API support and a Lex Bot Agent. This showcases the flexibility of the system in integrating various AI services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { AgentSquad, BedrockLLMAgent, LexBotAgent } from &#34;agent-squad&#34;;&#xA;&#xA;const orchestrator = new AgentSquad();&#xA;&#xA;// Add a Bedrock LLM Agent with Converse API support&#xA;orchestrator.addAgent(&#xA;  new BedrockLLMAgent({&#xA;      name: &#34;Tech Agent&#34;,&#xA;      description:&#xA;        &#34;Specializes in technology areas including software development, hardware, AI, cybersecurity, blockchain, cloud computing, emerging tech innovations, and pricing/costs related to technology products and services.&#34;,&#xA;      streaming: true&#xA;  })&#xA;);&#xA;&#xA;// Add a Lex Bot Agent for handling travel-related queries&#xA;orchestrator.addAgent(&#xA;  new LexBotAgent({&#xA;    name: &#34;Travel Agent&#34;,&#xA;    description: &#34;Helps users book and manage their flight reservations&#34;,&#xA;    botId: process.env.LEX_BOT_ID,&#xA;    botAliasId: process.env.LEX_BOT_ALIAS_ID,&#xA;    localeId: &#34;en_US&#34;,&#xA;  })&#xA;);&#xA;&#xA;// Example usage&#xA;const response = await orchestrator.routeRequest(&#xA;  &#34;I want to book a flight&#34;,&#xA;  &#39;user123&#39;,&#xA;  &#39;session456&#39;&#xA;);&#xA;&#xA;// Handle the response (streaming or non-streaming)&#xA;if (response.streaming == true) {&#xA;    console.log(&#34;\n** RESPONSE STREAMING ** \n&#34;);&#xA;    // Send metadata immediately&#xA;    console.log(`&amp;gt; Agent ID: ${response.metadata.agentId}`);&#xA;    console.log(`&amp;gt; Agent Name: ${response.metadata.agentName}`);&#xA;    console.log(`&amp;gt; User Input: ${response.metadata.userInput}`);&#xA;    console.log(`&amp;gt; User ID: ${response.metadata.userId}`);&#xA;    console.log(`&amp;gt; Session ID: ${response.metadata.sessionId}`);&#xA;    console.log(&#xA;      `&amp;gt; Additional Parameters:`,&#xA;      response.metadata.additionalParams&#xA;    );&#xA;    console.log(`\n&amp;gt; Response: `);&#xA;&#xA;    // Stream the content&#xA;    for await (const chunk of response.output) {&#xA;      if (typeof chunk === &#34;string&#34;) {&#xA;        process.stdout.write(chunk);&#xA;      } else {&#xA;        console.error(&#34;Received unexpected chunk type:&#34;, typeof chunk);&#xA;      }&#xA;    }&#xA;&#xA;} else {&#xA;    // Handle non-streaming response (AgentProcessingResult)&#xA;    console.log(&#34;\n** RESPONSE ** \n&#34;);&#xA;    console.log(`&amp;gt; Agent ID: ${response.metadata.agentId}`);&#xA;    console.log(`&amp;gt; Agent Name: ${response.metadata.agentName}`);&#xA;    console.log(`&amp;gt; User Input: ${response.metadata.userInput}`);&#xA;    console.log(`&amp;gt; User ID: ${response.metadata.userId}`);&#xA;    console.log(`&amp;gt; Session ID: ${response.metadata.sessionId}`);&#xA;    console.log(&#xA;      `&amp;gt; Additional Parameters:`,&#xA;      response.metadata.additionalParams&#xA;    );&#xA;    console.log(`\n&amp;gt; Response: ${response.output}`);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python Version&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üîÑ &lt;code&gt;multi-agent-orchestrator&lt;/code&gt; becomes &lt;code&gt;agent-squad&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Optional: Set up a virtual environment&#xA;python -m venv venv&#xA;source venv/bin/activate  # On Windows use `venv\Scripts\activate`&#xA;pip install agent-squad[aws]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Default Usage&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s an equivalent Python example demonstrating the use of the Agent Squad with a Bedrock LLM Agent and a Lex Bot Agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys&#xA;import asyncio&#xA;from agent_squad.orchestrator import AgentSquad&#xA;from agent_squad.agents import BedrockLLMAgent, BedrockLLMAgentOptions, AgentStreamResponse&#xA;&#xA;orchestrator = AgentSquad()&#xA;&#xA;tech_agent = BedrockLLMAgent(BedrockLLMAgentOptions(&#xA;  name=&#34;Tech Agent&#34;,&#xA;  streaming=True,&#xA;  description=&#34;Specializes in technology areas including software development, hardware, AI, \&#xA;  cybersecurity, blockchain, cloud computing, emerging tech innovations, and pricing/costs \&#xA;  related to technology products and services.&#34;,&#xA;  model_id=&#34;anthropic.claude-3-sonnet-20240229-v1:0&#34;,&#xA;))&#xA;orchestrator.add_agent(tech_agent)&#xA;&#xA;&#xA;health_agent = BedrockLLMAgent(BedrockLLMAgentOptions(&#xA;  name=&#34;Health Agent&#34;,&#xA;  streaming=True,&#xA;  description=&#34;Specializes in health and well being&#34;,&#xA;))&#xA;orchestrator.add_agent(health_agent)&#xA;&#xA;async def main():&#xA;    # Example usage&#xA;    response = await orchestrator.route_request(&#xA;        &#34;What is AWS Lambda?&#34;,&#xA;        &#39;user123&#39;,&#xA;        &#39;session456&#39;,&#xA;        {},&#xA;        True&#xA;    )&#xA;&#xA;    # Handle the response (streaming or non-streaming)&#xA;    if response.streaming:&#xA;        print(&#34;\n** RESPONSE STREAMING ** \n&#34;)&#xA;        # Send metadata immediately&#xA;        print(f&#34;&amp;gt; Agent ID: {response.metadata.agent_id}&#34;)&#xA;        print(f&#34;&amp;gt; Agent Name: {response.metadata.agent_name}&#34;)&#xA;        print(f&#34;&amp;gt; User Input: {response.metadata.user_input}&#34;)&#xA;        print(f&#34;&amp;gt; User ID: {response.metadata.user_id}&#34;)&#xA;        print(f&#34;&amp;gt; Session ID: {response.metadata.session_id}&#34;)&#xA;        print(f&#34;&amp;gt; Additional Parameters: {response.metadata.additional_params}&#34;)&#xA;        print(&#34;\n&amp;gt; Response: &#34;)&#xA;&#xA;        # Stream the content&#xA;        async for chunk in response.output:&#xA;            async for chunk in response.output:&#xA;              if isinstance(chunk, AgentStreamResponse):&#xA;                  print(chunk.text, end=&#39;&#39;, flush=True)&#xA;              else:&#xA;                  print(f&#34;Received unexpected chunk type: {type(chunk)}&#34;, file=sys.stderr)&#xA;&#xA;    else:&#xA;        # Handle non-streaming response (AgentProcessingResult)&#xA;        print(&#34;\n** RESPONSE ** \n&#34;)&#xA;        print(f&#34;&amp;gt; Agent ID: {response.metadata.agent_id}&#34;)&#xA;        print(f&#34;&amp;gt; Agent Name: {response.metadata.agent_name}&#34;)&#xA;        print(f&#34;&amp;gt; User Input: {response.metadata.user_input}&#34;)&#xA;        print(f&#34;&amp;gt; User ID: {response.metadata.user_id}&#34;)&#xA;        print(f&#34;&amp;gt; Session ID: {response.metadata.session_id}&#34;)&#xA;        print(f&#34;&amp;gt; Additional Parameters: {response.metadata.additional_params}&#34;)&#xA;        print(f&#34;\n&amp;gt; Response: {response.output.content}&#34;)&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;  asyncio.run(main())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These examples showcase:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The use of a Bedrock LLM Agent with Converse API support, allowing for multi-turn conversations.&lt;/li&gt; &#xA; &lt;li&gt;Integration of a Lex Bot Agent for specialized tasks (in this case, travel-related queries).&lt;/li&gt; &#xA; &lt;li&gt;The orchestrator&#39;s ability to route requests to the most appropriate agent based on the input.&lt;/li&gt; &#xA; &lt;li&gt;Handling of both streaming and non-streaming responses from different types of agents.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Modular Installation Options&lt;/h3&gt; &#xA;&lt;p&gt;The Agent Squad is designed with a modular architecture, allowing you to install only the components you need while ensuring you always get the core functionality.&lt;/p&gt; &#xA;&lt;h4&gt;Installation Options&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. AWS Integration&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pip install &#34;agent-squad[aws]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Includes core orchestration functionality with comprehensive AWS service integrations (&lt;code&gt;BedrockLLMAgent&lt;/code&gt;, &lt;code&gt;AmazonBedrockAgent&lt;/code&gt;, &lt;code&gt;LambdaAgent&lt;/code&gt;, etc.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Anthropic Integration&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;agent-squad[anthropic]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. OpenAI Integration&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;agent-squad[openai]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adds OpenAI&#39;s GPT models for agents and classification, along with core packages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Full Installation&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;agent-squad[all]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Includes all optional dependencies for maximum flexibility.&lt;/p&gt; &#xA;&lt;h3&gt;üôå &lt;strong&gt;We Want to Hear From You!&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Have something to share, discuss, or brainstorm? We‚Äôd love to connect with you and hear about your journey with the &lt;strong&gt;Agent Squad framework&lt;/strong&gt;. Here‚Äôs how you can get involved:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üôå Show &amp;amp; Tell&lt;/strong&gt;: Got a success story, cool project, or creative implementation? Share it with us in the &lt;a href=&#34;https://github.com/awslabs/agent-squad/discussions/categories/show-and-tell&#34;&gt;&lt;strong&gt;Show and Tell&lt;/strong&gt;&lt;/a&gt; section. Your work might inspire the entire community! üéâ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üí¨ General Discussion&lt;/strong&gt;: Have questions, feedback, or suggestions? Join the conversation in our &lt;a href=&#34;https://github.com/awslabs/agent-squad/discussions/categories/general&#34;&gt;&lt;strong&gt;General Discussions&lt;/strong&gt;&lt;/a&gt; section. It‚Äôs the perfect place to connect with other users and contributors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üí° Ideas&lt;/strong&gt;: Thinking of a new feature or improvement? Share your thoughts in the &lt;a href=&#34;https://github.com/awslabs/agent-squad/discussions/categories/ideas&#34;&gt;&lt;strong&gt;Ideas&lt;/strong&gt;&lt;/a&gt; section. We‚Äôre always open to exploring innovative ways to make the orchestrator even better!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let‚Äôs collaborate, learn from each other, and build something incredible together! üöÄ&lt;/p&gt; &#xA;&lt;h2&gt;üìù Pull Request Guidelines&lt;/h2&gt; &#xA;&lt;h3&gt;Issue-First Policy&lt;/h3&gt; &#xA;&lt;p&gt;This repository follows an &lt;strong&gt;Issue-First&lt;/strong&gt; policy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Every pull request must be linked to an existing issue&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;If there isn&#39;t an issue for the changes you want to make, please create one first&lt;/li&gt; &#xA; &lt;li&gt;Use the issue to discuss proposed changes before investing time in implementation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Link Pull Requests to Issues&lt;/h3&gt; &#xA;&lt;p&gt;When creating a pull request, you must link it to an issue using one of these methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Include a reference in the PR description using keywords:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Fixes #123&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Resolves #123&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Closes #123&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manually link the PR to an issue through GitHub&#39;s UI:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On the right sidebar of your PR, click &#34;Development&#34; and then &#34;Link an issue&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Automated Enforcement&lt;/h3&gt; &#xA;&lt;p&gt;We use GitHub Actions to automatically verify that each PR is linked to an issue. PRs without linked issues will not pass required checks and cannot be merged.&lt;/p&gt; &#xA;&lt;p&gt;This policy helps us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Maintain clear documentation of changes and their purposes&lt;/li&gt; &#xA; &lt;li&gt;Ensure community discussion before implementation&lt;/li&gt; &#xA; &lt;li&gt;Keep a structured development process&lt;/li&gt; &#xA; &lt;li&gt;Make project history more traceable and understandable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Note: Our project has been renamed from &lt;strong&gt;Multi-Agent Orchestrator&lt;/strong&gt; to &lt;strong&gt;Agent Squad&lt;/strong&gt;. Please use the new name in your contributions and discussions.&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è We value your contributions! Before submitting changes, please start a discussion by opening an issue to share your proposal.&lt;/p&gt; &#xA;&lt;p&gt;Once your proposal is approved, here are the next steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;üìö Review our &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí° Create a &lt;a href=&#34;https://github.com/awslabs/agent-squad/issues&#34;&gt;GitHub Issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üî® Submit a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;‚úÖ Follow existing project structure and include documentation for new features.&lt;/p&gt; &#xA;&lt;p&gt;üåü &lt;strong&gt;Stay Updated&lt;/strong&gt;: Star the repository to be notified about new features, improvements, and exciting developments in the Agent Squad framework!&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/corneliucroitoru/&#34;&gt;Corneliu Croitoru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/anthonybernabeu/&#34;&gt;Anthony Bernabeu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üë• Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Big shout out to our awesome contributors! Thank you for making this project better! üåü ‚≠ê üöÄ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/agent-squad/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=awslabs/agent-squad&amp;amp;max=2000&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; for guidelines on how to propose bugfixes and improvements.&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache 2.0 licence - see the &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/agent-squad/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ Font License&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the JetBrainsMono NF font, licensed under the SIL Open Font License 1.1. For full license details, see &lt;a href=&#34;https://github.com/JetBrains/JetBrainsMono/raw/master/OFL.txt&#34;&gt;FONT-LICENSE.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>