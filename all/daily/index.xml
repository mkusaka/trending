<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-14T01:32:22Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>acheong08/ChatGPT-Proxy</title>
    <updated>2023-02-14T01:32:22Z</updated>
    <id>tag:github.com,2023-02-14:/acheong08/ChatGPT-Proxy</id>
    <link href="https://github.com/acheong08/ChatGPT-Proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Forward requests and inject cloudflare cookies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT-Proxy&lt;/h1&gt; &#xA;&lt;p&gt;Forward requests and inject CloudFlare cookies&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;One-click scripts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With Docker: &lt;code&gt;curl https://raw.githubusercontent.com/acheong08/ChatGPT-Proxy/main/scripts/run-with-docker.sh | sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Simple steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Check if Pipenv is installed. If not, run &lt;code&gt;pip install pipenv -U&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then, run &lt;code&gt;pipenv update -d&lt;/code&gt; in this directory, to automatically install the requirements of the proxy.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pipenv run proxy&lt;/code&gt; in the base directory, and enjoy it! Uvicorn will provide a high-performance HTTP server for the API service.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;These options can be configured by setting environment variables using &lt;code&gt;-e KEY=&#34;VALUE&#34;&lt;/code&gt; in the &lt;code&gt;docker run&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GPT_PROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;socks5://127.0.0.1:1080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The proxy of your server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GPT_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The hostname of your server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GPT_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The port of your server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>lllyasviel/ControlNet</title>
    <updated>2023-02-14T01:32:22Z</updated>
    <id>tag:github.com,2023-02-14:/lllyasviel/ControlNet</id>
    <link href="https://github.com/lllyasviel/ControlNet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Let us control diffusion models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ControlNet&lt;/h1&gt; &#xA;&lt;p&gt;Official implementation of &lt;a href=&#34;https://github.com/lllyasviel/ControlNet/raw/main/github_page/control.pdf&#34;&gt;Adding Conditional Control to Text-to-Image Diffusion Models&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ControlNet is a neural network structure to control diffusion models by adding extra conditions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/he.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It copys the weights of neural network blocks into a &#34;locked&#34; copy and a &#34;trainable&#34; copy.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;trainable&#34; one learns your condition. The &#34;locked&#34; one preserves your model.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to this, training with small dataset of image pairs will not destroy the production-ready diffusion models.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;zero convolution&#34; is 1Ã—1 convolution with both weight and bias initialized as zeros.&lt;/p&gt; &#xA;&lt;p&gt;Before training, all zero convolutions output zeros, and ControlNet will not cause any distortion.&lt;/p&gt; &#xA;&lt;p&gt;No layer is trained from scratch. You are still fine-tuning. Your original model is safe.&lt;/p&gt; &#xA;&lt;p&gt;This allows training on small-scale or even personal devices.&lt;/p&gt; &#xA;&lt;p&gt;This is also friendly to merge/replacement/offsetting of models/weights/blocks/layers.&lt;/p&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; But wait, if the weight of a conv layer is zero, the gradient will also be zero, and the network will not learn anything. Why &#34;zero convolution&#34; works?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; This is not true. &lt;a href=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/docs/faq.md&#34;&gt;See an explanation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Stable Diffusion + ControlNet&lt;/h1&gt; &#xA;&lt;p&gt;By repeating the above simple structure 14 times, we can control stable diffusion in this way:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/sd.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that the way we connect layers is computational efficient. The original SD encoder does not need to store gradients (the locked original SD Encoder Block 1234 and Middle). The required GPU memory is not much larger than original SD, although many layers are added. Great!&lt;/p&gt; &#xA;&lt;h1&gt;Production-Ready Pretrained Models&lt;/h1&gt; &#xA;&lt;p&gt;First create a new conda environment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda env create -f environment.yaml&#xA;conda activate control&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All models and detectors can be downloaded from &lt;a href=&#34;https://huggingface.co/lllyasviel/ControlNet&#34;&gt;our Hugging Face page&lt;/a&gt;. Make sure that SD models are put in &#34;ControlNet/models&#34; and detectors are put in &#34;ControlNet/annotator/ckpts&#34;. Make sure that you download all necessary pretrained weights and detector models from that Hugging Face page, including HED edge detection model, Midas depth estimation model, Openpose, and so on.&lt;/p&gt; &#xA;&lt;p&gt;We provide 9 Gradio apps with these models.&lt;/p&gt; &#xA;&lt;p&gt;All test images can be found at the folder &#34;test_imgs&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;News&lt;/h3&gt; &#xA;&lt;p&gt;2023/02/12 - Now you can play with any community model by &lt;a href=&#34;https://github.com/lllyasviel/ControlNet/discussions/12&#34;&gt;Transferring the ControlNet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;2023/02/11 - &lt;a href=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/docs/low_vram.md&#34;&gt;Low VRAM mode&lt;/a&gt; is added. Please use this mode if you are using 8GB GPU(s) or if you want larger batch size.&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Canny Edge&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using simple Canny edge detection)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_canny2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Gradio app also allows you to change the Canny edge thresholds. Just try it for more details.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;bird&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p1.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;cute dog&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p2.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with M-LSD Lines&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using simple M-LSD straight line detection)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_hough2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Gradio app also allows you to change the M-LSD thresholds. Just try it for more details.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;room&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p3.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;building&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p4.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with HED Boundary&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using soft HED Boundary)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_hed2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The soft HED Boundary will preserve many details in input images, making this app suitable for recoloring and stylizing. Just try it for more details.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;oil painting of handsome old man, masterpiece&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p5.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Cyberpunk robot&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p6.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with User Scribbles&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using Scribbles)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_scribble2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the UI is based on Gradio, and Gradio is somewhat difficult to customize. Right now you need to draw scribbles outside the UI (using your favorite drawing software, for example, MS Paint) and then import the scribble image to Gradio.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;turtle&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p7.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;hot air balloon&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p8.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Interface&lt;/h3&gt; &#xA;&lt;p&gt;We actually provide an interactive interface&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_scribble2image_interactive.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, because gradio is very &lt;a href=&#34;https://github.com/gradio-app/gradio/issues/3166&#34;&gt;buggy&lt;/a&gt; and difficult to customize, right now, user need to first set canvas width and heights and then click &#34;Open drawing canvas&#34; to get a drawing area. Please do not upload image to that drawing canvas. Also, the drawing area is very small; it should be bigger. But I failed to find out how to make it larger. Again, gradio is really buggy.&lt;/p&gt; &#xA;&lt;p&gt;The below dog sketch is drawn by me. Perhaps we should draw a better dog for showcase.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;dog in a room&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p20.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Fake Scribbles&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using fake scribbles)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_fake_scribble2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes we are lazy, and we do not want to draw scribbles. This script use the exactly same scribble-based model but use a simple algorithm to synthesize scribbles from input images.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;bag&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p9.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;shose&#34; (Note that &#34;shose&#34; is a typo; it should be &#34;shoes&#34;. But it still seems to work.) &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p10.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Human Pose&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using human pose)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_pose2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apparently, this model deserves a better UI to directly manipulate pose skeleton. However, again, Gradio is somewhat difficult to customize. Right now you need to input an image and then the Openpose will detect the pose for you.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Chief in the kitchen&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p11.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;An astronaut on the moon&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p12.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Semantic Segmentation&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using semantic segmentation)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_seg2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This model use ADE20K&#39;s segmentation protocol. Again, this model deserves a better UI to directly draw the segmentations. However, again, Gradio is somewhat difficult to customize. Right now you need to input an image and then a model called Uniformer will detect the segmentations for you. Just try it for more details.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;House&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p13.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;River&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p14.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Depth&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using depth map)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_depth2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Great! Now SD 1.5 also have a depth control. FINALLY. So many possibilities (considering SD1.5 has much more community models than SD2).&lt;/p&gt; &#xA;&lt;p&gt;Note that different from Stability&#39;s model, the ControlNet receive the full 512Ã—512 depth map, rather than 64Ã—64 depth. Note that Stability&#39;s SD2 depth model use 64*64 depth maps. This means that the ControlNet will preserve more details in the depth map.&lt;/p&gt; &#xA;&lt;p&gt;This is always a strength because if users do not want to preserve more details, they can simply use another SD to post-process an i2i. But if they want to preserve more details, ControlNet becomes their only choice. Again, SD2 uses 64Ã—64 depth, we use 512Ã—512.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Stormtrooper&#39;s lecture&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p15.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Normal Map&lt;/h2&gt; &#xA;&lt;p&gt;Stable Diffusion 1.5 + ControlNet (using normal map)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gradio_normal2image.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This model use normal map. Rightnow in the APP, the normal is computed from the midas depth map and a user threshold (to determine how many area is background with identity normal face to viewer, tune the &#34;Normal background threshold&#34; in the gradio app to get a feeling).&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Cute toy&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p17.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Plaster statue of Abraham Lincoln&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p18.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compared to depth model, this model seems to be a bit better at preserving the geometry. This is intuitive: minor details are not salient in depth maps, but are salient in normal maps. Below is the depth result with same inputs. You can see that the hairstyle of the man in the input image is modified by depth model, but preserved by the normal model.&lt;/p&gt; &#xA;&lt;p&gt;Prompt: &#34;Plaster statue of Abraham Lincoln&#34; &lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p19.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ControlNet with Anime Line Drawing&lt;/h2&gt; &#xA;&lt;p&gt;We also trained a relatively simple ControlNet for anime line drawings. This tool may be useful for artistic creations. (Although the image details in the results is a bit modified, since it still diffuse latent images.)&lt;/p&gt; &#xA;&lt;p&gt;This model is not available right now. We need to evaluate the potential risks before releasing this model. Nevertheless, you may be interested in &lt;a href=&#34;https://github.com/lllyasviel/ControlNet/discussions/12&#34;&gt;transferring the ControlNet to any community model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/github_page/p21.png&#34; alt=&#34;p&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Annotate Your Own Data&lt;/h1&gt; &#xA;&lt;p&gt;We provide simple python scripts to process images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/docs/annotator.md&#34;&gt;See a gradio example here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Train with Your Own Data&lt;/h1&gt; &#xA;&lt;p&gt;Training a ControlNet is as easy as (or even easier than) training a simple pix2pix.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lllyasviel/ControlNet/main/docs/train.md&#34;&gt;See the steps here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{control2023,&#xA;author = &#34;Lvmin Zhang and Maneesh Agrawala&#34;,&#xA;title = &#34;Adding Conditional Control to Text-to-Image Diffusion Models&#34;,&#xA;month = &#34;Feb&#34;,&#xA;year = &#34;2022&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lllyasviel/ControlNet/raw/main/github_page/control.pdf&#34;&gt;Download the paper here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ayyucedemirbas/TurkeyLearningInitiative</title>
    <updated>2023-02-14T01:32:22Z</updated>
    <id>tag:github.com,2023-02-14:/ayyucedemirbas/TurkeyLearningInitiative</id>
    <link href="https://github.com/ayyucedemirbas/TurkeyLearningInitiative" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TLI offers educational resources for earthquake-affected communities in Turkey. Find a comprehensive curriculum and detailed course materials in this repository, covering a range of subjects. Join the effort to support continued education and make a difference.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ayyucedemirbas/TurkeyLearningInitiative?style=social&#34; alt=&#34;GitHub stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/ayyucedemirbas/TurkeyLearningInitiative?style=social&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/watchers/ayyucedemirbas/TurkeyLearningInitiative?style=social&#34; alt=&#34;GitHub watchers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/ayyucedemirbas/TurkeyLearningInitiative?style=plastic&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/count/ayyucedemirbas/TurkeyLearningInitiative?style=plastic&#34; alt=&#34;GitHub language count&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/ayyucedemirbas/TurkeyLearningInitiative?style=plastic&#34; alt=&#34;GitHub top language&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/ayyucedemirbas/TurkeyLearningInitiative?color=red&amp;amp;style=plastic&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/ayyucedemirbas/TurkeyLearningInitiative&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LÃ¼tfen kitap pdf&#39;leri veya belgeleri eklemeyin. Telif hakkÄ±yla korunuyorlar, bu reponun kapanmasÄ±yla sonuÃ§lanabilir. Bu yÃ¼zden lÃ¼tfen kitap YÃœKLEMEYÄ°N, yalnÄ±zca not yÃ¼kleyin.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AyrÄ±ca bu notlarÄ±n kiÅŸisel mi alÄ±ndÄ±ÄŸÄ± yoksa hocalarÄ±n mÄ± verdiÄŸi, el yazÄ±sÄ± mÄ± yoksa bilgisayar da mÄ± oluÅŸturulduÄŸu, hangi Ã¼niversiteye, hocaya, yÄ±la ve dÃ¶neme ait olduÄŸu gibi bilgilere sahipseniz commit mesajÄ±nÄ±zda belirtmenizi rica ediyoruz.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TÃ¼rkiye Ã–ÄŸrenme Ä°nisiyatifi&lt;/h1&gt; &#xA;&lt;p&gt;Bu repo, TÃ¼rkiye&#39;de son depremlerden etkilenenlere eÄŸitim kaynaklarÄ± saÄŸlamayÄ± amaÃ§layan bir proje olan TÃ¼rkiye Ã–ÄŸrenme GiriÅŸimi (TLI) iÃ§in mÃ¼fredat ve ders materyalleri iÃ§ermektedir.&lt;/p&gt; &#xA;&lt;p&gt;TLI&#39;nin amacÄ±, afetin ardÄ±ndan Ã¼niversite eÄŸitimi de dahil olmak Ã¼zere tÃ¼m eÄŸitim kademelerinin sÃ¼resiz olarak askÄ±ya alÄ±nmasÄ±na raÄŸmen Ã¶ÄŸrencilerin eÄŸitimlerine devam etmelerine destek olmaktÄ±r.&lt;/p&gt; &#xA;&lt;h2&gt;Ä°Ã§erik&lt;/h2&gt; &#xA;&lt;p&gt;Bu depoda ÅŸunlarÄ± bulacaksÄ±nÄ±z:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ã‡eÅŸitli konularÄ± kapsayan kapsamlÄ± bir mÃ¼fredat&lt;/li&gt; &#xA; &lt;li&gt;Ders slaytlarÄ± ve Ã§alÄ±ÅŸma notlarÄ± dahil olmak Ã¼zere ayrÄ±ntÄ±lÄ± kurs materyalleri&lt;/li&gt; &#xA; &lt;li&gt;Ã–nerilen okumalar ve alÄ±ÅŸtÄ±rmalar gibi ek kaynaklar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Harici Kaynaklar&lt;/h2&gt; &#xA;&lt;p&gt;Bu repo dÄ±ÅŸÄ±nda daha Ã¶nce oluÅŸturulmuÅŸ olan aÅŸaÄŸÄ±daki repo adreslerine de gÃ¶z atabilirsiniz&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coderserdar&#34;&gt;coderserdar&lt;/a&gt; tarafÄ±ndan oluÅŸturulmuÅŸ, yabancÄ± dili henÃ¼z yeterli olmayan arkadaÅŸlar iÃ§in hazÄ±rlanmÄ±ÅŸ ve klasÃ¶r bazlÄ± kategorilendirilmiÅŸ olan &lt;a href=&#34;https://github.com/coderserdar/TurkceKaynaklar&#34;&gt;TÃ¼rkÃ§e Kaynaklar&lt;/a&gt; reposu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coderserdar&#34;&gt;coderserdar&lt;/a&gt; tarafÄ±ndan oluÅŸturulmuÅŸ, genel olarak &lt;em&gt;Ä°ngilizce&lt;/em&gt; dokÃ¼manlardan oluÅŸan &lt;a href=&#34;https://github.com/coderserdar/Documents&#34;&gt;Documents&lt;/a&gt; reposu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coderserdar&#34;&gt;coderserdar&lt;/a&gt; tarafÄ±ndan oluÅŸturulmuÅŸ, okul zamanÄ±ndan kalma ders notlarÄ±, kitaplar, sÄ±navlar vb. iÃ§eren &lt;a href=&#34;https://github.com/coderserdar/HacettepeBBM&#34;&gt;HacettepeBBM&lt;/a&gt; reposu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baristunar/&#34;&gt;baristunar&lt;/a&gt; tarafÄ±ndan oluÅŸturulmuÅŸ, &lt;em&gt;TasarÄ±m Ã–rÃ¼ntÃ¼leri (Design Patterns)&lt;/em&gt; hakkÄ±nda makalelerden oluÅŸan &lt;a href=&#34;https://github.com/baristunar/design-patterns-tr&#34;&gt;Design-Patterns-TR&lt;/a&gt; reposu&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Not:&lt;/strong&gt; Buraya kendi repo adreslerinizi eklerken eÄŸer repo &lt;em&gt;readme&lt;/em&gt; iÃ§erisinde belirtilmemiÅŸse lÃ¼tfen reponun ne hakkÄ±nda olduÄŸunu detaylÄ± bir ÅŸekilde yazÄ±nÄ±z.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;NasÄ±l kaynak yÃ¼kleyebilirsiniz?&lt;/h2&gt; &#xA;&lt;p&gt;Github&#39;da istediÄŸiniz repoya dosya yÃ¼klemek oldukÃ§a kolay. Bu repoya dosya isimleriniz &lt;code&gt;BÃ¶lÃ¼mÄ°smi_DersÄ°smi_KonuÄ°smi&lt;/code&gt; olacak ÅŸekilde istediÄŸiniz formatta dosyalarÄ±nÄ±zÄ± gerekli klasÃ¶rÃ¼n altÄ±nda yÃ¼kleyebilirsiniz. Åžu adÄ±mlarÄ± izlemeniz yeterli.&lt;/p&gt; &#xA;&lt;h1&gt;1. Github HesabÄ± OluÅŸturun&lt;/h1&gt; &#xA;&lt;p&gt;EÄŸer daha Ã¶nce Github hesabÄ±nÄ±z yoksa, bir hesap oluÅŸturmanÄ±z gerekir. &lt;a href=&#34;https://github.com/&#34;&gt;github.com&lt;/a&gt; adresine gidin ve saÄŸ Ã¼st kÃ¶ÅŸedeki &#34;Sign Up&#34; dÃ¼ÄŸmesine tÄ±klayÄ±n. HesabÄ±nÄ±zÄ± oluÅŸturmak iÃ§in yÃ¶nergeleri takip edin.&lt;/p&gt; &#xA;&lt;h1&gt;2. Repoyu kendi hesabÄ±nÄ±za forklayÄ±n&lt;/h1&gt; &#xA;&lt;p&gt;Fork, baÅŸkalarÄ±nÄ±n projeleri Ã¼stÃ¼nde kolayca Ã§alÄ±ÅŸma yapmanÄ±zÄ± saÄŸlayan bir yÃ¶ntem. Bunun Ã¼zerine Ã§ok kafa yormanÄ±za gerek yok. Bu ÅŸekilde projeyi kendi hesabÄ±nÄ±za forklayabilirsiniz. &lt;img width=&#34;1512&#34; alt=&#34;Screen Shot 2023-02-11 at 14 06 45&#34; src=&#34;https://user-images.githubusercontent.com/72661473/218254740-ac6a8bda-e58d-49b6-8d05-7c20564176ae.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;SaÄŸ Ã¼stteki Fork seÃ§eneÄŸine basÄ±n. Daha sonra karÅŸÄ±nÄ±za ÅŸÃ¶yle bir ekran gelecek.&lt;/p&gt; &#xA;&lt;img width=&#34;898&#34; alt=&#34;Screen Shot 2023-02-11 at 14 08 01&#34; src=&#34;https://user-images.githubusercontent.com/72661473/218254774-8399bb9e-7c1e-4aa0-bed0-ec0e1ed152a5.png&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Owner&lt;/strong&gt; kÄ±smÄ±nda eÄŸer hesabÄ±nÄ±zÄ± yeni aÃ§tÄ±ysanÄ±z sadece sizin hesabÄ±nÄ±zÄ±n ismi gÃ¶zÃ¼kecektir. Ben Ã§oktan forkladÄ±ÄŸÄ±m iÃ§in diÄŸer iÃ§erisinde bulunduÄŸum kuruluÅŸlarÄ± gÃ¶steriyor.&lt;/p&gt; &#xA;&lt;p&gt;Bu adÄ±mda kendi hesabÄ±nÄ±z olduÄŸuna emin olduktan sonra hiÃ§bir ÅŸeyi deÄŸiÅŸtirmeden &lt;code&gt;Create fork&lt;/code&gt; seÃ§eneÄŸine basmanÄ±z yeterli.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/72661473/218254900-24f49615-ca0d-459c-a518-349456e18dfd.mov&#34;&gt;https://user-images.githubusercontent.com/72661473/218254900-24f49615-ca0d-459c-a518-349456e18dfd.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ArtÄ±k kendi hesabÄ±nÄ±zÄ±n altÄ±nda bu repoya ulaÅŸÄ±p, deÄŸiÅŸiklikler yapabilirsiniz.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;https://github.com/GithubHesapÄ°sminiz/TurkeyLearningInitiative&lt;/code&gt; linki altÄ±ndan reponuza ulaÅŸabilirsiniz. Ya da bu ÅŸekilde ulaÅŸabilirsiniz:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/72661473/218255092-04ab8052-9693-4fef-bfa7-47a8190ee869.mov&#34;&gt;https://user-images.githubusercontent.com/72661473/218255092-04ab8052-9693-4fef-bfa7-47a8190ee869.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. Dosya YÃ¼kleme&lt;/h1&gt; &#xA;&lt;p&gt;ArtÄ±k bir reponuz var, dosyalarÄ±nÄ±zÄ± yÃ¼kleyebilirsiniz. Depo sayfanÄ±za gidin ve &#34;Upload files&#34; dÃ¼ÄŸmesine tÄ±klayÄ±n.&lt;/p&gt; &#xA;&lt;p&gt;BilgisayarÄ±nÄ±zdan tarayÄ±cÄ±ya dosyalarÄ± sÃ¼rÃ¼kleyip bÄ±rakabilir ya da &#34;Choose your files&#34; dÃ¼ÄŸmesine tÄ±klayarak bilgisayarÄ±nÄ±zdaki dosyalardan seÃ§ebilirsiniz.&lt;/p&gt; &#xA;&lt;p&gt;Ya da repo iÃ§erisinde yeni dosya oluÅŸturabilirsiniz.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ã–nemli Not: EÄŸer yÃ¼kleyeceÄŸiniz bÃ¶lÃ¼m notuna ait klasÃ¶r varsa, o klasÃ¶rÃ¼n altÄ±na giderek ilgili notlarÄ±nÄ±zÄ± anlatÄ±lan ÅŸekilde yÃ¼kleyiniz. Yoksa istenen dosya ismi formatÄ±nda dosyalarÄ±nÄ±zÄ± yÃ¼kleyebilirsiniz. Gerekli eklemeler yapÄ±lacaktÄ±r. Browser Ã¼zerinden klasÃ¶r yÃ¼klemesi yapÄ±lamamaktadÄ±r.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1506&#34; alt=&#34;Screen Shot 2023-02-11 at 14 21 25&#34; src=&#34;https://user-images.githubusercontent.com/72661473/218255285-037ac135-364b-477b-b1eb-90ee11fa656f.png&#34;&gt; &#xA;&lt;p&gt;Buradaki seÃ§eneklerden &#39;Upload files&#39; seÃ§eneÄŸine tÄ±klÄ±yoruz.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/72661473/218255338-9c9ef50e-683b-430e-86e2-e87ac41bab79.mov&#34;&gt;https://user-images.githubusercontent.com/72661473/218255338-9c9ef50e-683b-430e-86e2-e87ac41bab79.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Commit mesajÄ±nÄ±z bu durumda Ã§ok Ã¶nemli. &#34;Commit&#34;, deÄŸiÅŸikliklerinizin depoya kaydedilmesidir. Bu mesajÄ±n bu deÄŸiÅŸiklikte ne yaptÄ±ÄŸÄ±nÄ±zÄ± anlatmasÄ± gerekir. Bu yÃ¼zden yÃ¼klediÄŸiniz bÃ¶lÃ¼mlerin mesaj iÃ§erisinde olmasÄ± iyi bir adÄ±m olabilir. Her deÄŸiÅŸiklikte tek bir bÃ¶lÃ¼m ile ilgili iÃ§erik yÃ¼klemeniz daha doÄŸru olacaktÄ±r.&lt;/p&gt; &#xA;&lt;h1&gt;Pull Request&lt;/h1&gt; &#xA;&lt;p&gt;Bu deÄŸiÅŸiklikler sadece sizin reponuzda gÃ¶rÃ¼nÃ¼r olacaktÄ±r. Bu deÄŸiÅŸikliklerin asÄ±l repoya gidebilmesi iÃ§in &lt;code&gt;pull request&lt;/code&gt; aÃ§manÄ±z gerekir. BÃ¶ylece asÄ±l proje sahibi eklemek istediÄŸiniz ÅŸeyleri inceler ve orijinal repoya ekler.&lt;/p&gt; &#xA;&lt;img width=&#34;1512&#34; alt=&#34;Screen Shot 2023-02-11 at 14 29 09&#34; src=&#34;https://user-images.githubusercontent.com/72661473/218255588-52771ea8-4f29-4da6-816d-347ca1e53e76.png&#34;&gt; &#xA;&lt;p&gt;Reponuzda &lt;code&gt;Contribute&lt;/code&gt; kÄ±smÄ±nda bÃ¶yle bir mesaj gÃ¶receksiniz. &lt;code&gt;Open Pull Request&lt;/code&gt; seÃ§eneÄŸine tÄ±klayÄ±n. TÄ±kladÄ±ktan sonra gerekli mesajlar ile pull requestinizin proje sahibi tarafÄ±ndan incelenmesini saÄŸlayabilirsiniz.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/72661473/218255649-014ae5c1-8d43-4775-9f83-9e290f615e9b.mov&#34;&gt;https://user-images.githubusercontent.com/72661473/218255649-014ae5c1-8d43-4775-9f83-9e290f615e9b.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bu adÄ±mlardan sonra gerekli incelemelerden sonra kodunuz orijinal repoya eklenecektir.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Herhangi bir sorunuz olmasÄ± durumunda bize ulaÅŸabilirsiniz.&lt;/strong&gt; Email adreslerimiz:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:a.ayyuce.de@gmail.com&#34;&gt;a.ayyuce.de@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:gdenizbektass@gmail.com&#34;&gt;gdenizbektass@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;TurkeyLearningInitiative&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains curriculum and course materials for the Turkey Learning Initiative (TLI), a project aimed at providing educational resources to those affected by the recent earthquakes in Turkey.&lt;/p&gt; &#xA;&lt;p&gt;The goal of TLI is to support learners in continuing their education despite the indefinite suspension of all levels of education, including university education, due to the aftermath of the disaster.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;In this repository, you will find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A comprehensive curriculum covering a variety of subjects&lt;/li&gt; &#xA; &lt;li&gt;Detailed course materials, including lecture slides and handouts&lt;/li&gt; &#xA; &lt;li&gt;Additional resources, such as recommended readings and exercises&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;KatkÄ±da Bulunanlar/Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/ayyucedemirbas/TurkeyLearningInitiative/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=ayyucedemirbas/TurkeyLearningInitiative&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To start learning with the TLI materials, simply clone or download the repository to your local machine. The materials are intended to be self-contained, but if you have any questions or feedback, please feel free to open an issue in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! If you would like to contribute to the TLI project, please see our contributing guide for information on how to get involved.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;The TLI project would not be possible without the support of our contributors and the wider educational community. Thank you for your commitment to providing education to those in need.&lt;/p&gt;</summary>
  </entry>
</feed>