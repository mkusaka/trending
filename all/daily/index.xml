<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-22T01:30:49Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dblalock/bolt</title>
    <updated>2022-06-22T01:30:49Z</updated>
    <id>tag:github.com,2022-06-22:/dblalock/bolt</id>
    <link href="https://github.com/dblalock/bolt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;10x faster matrix and vector operations&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/dblalock/bolt/raw/master/assets/bolt.jpg?raw=true&#34; alt=&#34;Bolt&#34; width=&#34;611px&#34; height=&#34;221px&#34;&gt; &#xA; &lt;!-- &lt;img src=&#34;https://github.com/dblalock/bolt/blob/master/assets/bolt.jpg?raw=true&#34; alt=&#34;Bolt&#34; width=&#34;685px&#34; height=&#34;248px&#34;/&gt; --&gt; &lt;/p&gt; &#xA;&lt;p&gt;Bolt is an algorithm for compressing vectors of real-valued data and running mathematical operations directly on the compressed representations.&lt;/p&gt; &#xA;&lt;p&gt;If you have a large collection of mostly-dense vectors and can tolerate lossy compression, Bolt can probably save you 10-200x space and compute time.&lt;/p&gt; &#xA;&lt;p&gt;Bolt also has &lt;a href=&#34;https://github.com/dblalock/bolt/raw/master/assets/bolt-theory.pdf?raw=true&#34;&gt;theoretical guarantees&lt;/a&gt; bounding the errors in its approximations.&lt;/p&gt; &#xA;&lt;p&gt;EDIT: this repo now also features the source code for &lt;a href=&#34;https://arxiv.org/abs/2106.10860&#34;&gt;MADDNESS&lt;/a&gt;, our shiny new algorithm for approximate matrix multiplication. MADDNESS has no Python wrapper yet, and is referred to as &#34;mithral&#34; in the source code. Name changed because apparently I&#39;m the only who gets Lord of the Rings references. MADDNESS runs ridiculously fast and, under reasonable assumptions, requires zero multiply-adds. Realistically, it&#39;ll be most useful for speeding up neural net inference on CPUs, but it&#39;ll take another couple papers to get it there; we need to generalize it to convolution and write the CUDA kernels to allow GPU training. See also the &lt;a href=&#34;https://github.com/dblalock/bolt/raw/master/assets/blalock-maddness-poster.png&#34;&gt;poster&lt;/a&gt; and &lt;a href=&#34;https://github.com/dblalock/bolt/raw/master/assets/snn-maddness.pdf&#34;&gt;slides&lt;/a&gt;. &#xA; &lt;!-- (it&#39;s lightweight, but still full strength! Get it? Guys...?). --&gt;&lt;/p&gt; &#xA;&lt;p&gt;EDIT2: Looking for a research project? See our &lt;a href=&#34;https://github.com/dblalock/bolt/tree/master/experiments&#34;&gt;list of ideas&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;EDIT3: See &lt;a href=&#34;https://github.com/dblalock/bolt/raw/master/BUILD.md&#34;&gt;Build.md&lt;/a&gt; for a working dockerfile that builds and runs Bolt, contributed by @mneilly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: All below code refers to the Python wrapper for Bolt and has nothing to do with MADDNESS.&lt;/strong&gt; It also seems to be &lt;a href=&#34;https://github.com/dblalock/bolt/issues/4&#34;&gt;no longer building&lt;/a&gt; for many people. If you want to use MADDNESS, see the &lt;a href=&#34;https://github.com/dblalock/bolt/raw/45454e6cfbc9300a43da6770abf9715674b47a0f/experiments/python/vq_amm.py#L273&#34;&gt;Python Implementation&lt;/a&gt; driven by &lt;a href=&#34;https://github.com/dblalock/bolt/raw/45454e6cfbc9300a43da6770abf9715674b47a0f/experiments/python/amm_main.py&#34;&gt;amm_main.py&lt;/a&gt; or &lt;a href=&#34;https://github.com/dblalock/bolt/raw/45454e6cfbc9300a43da6770abf9715674b47a0f/cpp/src/quantize/mithral.cpp&#34;&gt;C++ implementation&lt;/a&gt;. All code is ugly, but Python code should be pretty easy to add new AMM methods/variations to.&lt;/p&gt; &#xA;&lt;!-- NOTE: All the code, documentation, and results associated with Bolt&#39;s KDD paper can be found in the `experiments/` directory. See the README therein for details. A cleaned-up version of the paper is available [here](https://github.com/dblalock/bolt/blob/master/assets/bolt.pdf?raw=true). --&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h4&gt;Python&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ brew install swig  # for wrapping C++; use apt-get, yum, etc, if not OS X&#xA;  $ pip install numpy  # bolt installation needs numpy already present&#xA;  $ git clone https://github.com/dblalock/bolt.git&#xA;  $ cd bolt &amp;amp;&amp;amp; python setup.py install&#xA;  $ pytest tests/  # optionally, run the tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run into any problems, please don&#39;t hesitate to mention it &lt;a href=&#34;https://github.com/dblalock/bolt/issues/4&#34;&gt;in the Python build problems issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;C++&lt;/h4&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt;, Google&#39;s open-source build system. Then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ git clone https://github.com/dblalock/bolt.git&#xA;  $ cd bolt/cpp &amp;amp;&amp;amp; bazel run :main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;bazel run&lt;/code&gt; command will build the project and run the tests and benchmarks.&lt;/p&gt; &#xA;&lt;p&gt;If you want to integrate Bolt with another C++ project, include &lt;code&gt;cpp/src/include/public.hpp&lt;/code&gt; and add the remaining files under &lt;code&gt;cpp/src&lt;/code&gt; to your builds. You should let me know if you&#39;re interested in doing such an integration because I&#39;m hoping to see Bolt become part of many libraries and thus would be happy to help you. &#xA; &lt;!-- Note that the `BoltEncoder` object you&#39;ll interact with presently needs something else to feed it k-means centroids-see `python/bolt/bolt_api.py` for an example. --&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Notes&lt;/h4&gt; &#xA;&lt;p&gt;Bolt currently only supports machines with &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#Advanced_Vector_Extensions_2&#34;&gt;AVX2 instructions&lt;/a&gt;, which basically means x86 machines from fall 2013 or later. Contributions for ARM support &lt;a href=&#34;https://github.com/dblalock/bolt/issues/2&#34;&gt;are welcome&lt;/a&gt;. Also note that the Bolt Python wrapper is currently configured to require Clang, since GCC apparently &lt;a href=&#34;https://github.com/dblalock/bolt/issues/4&#34;&gt;runs into issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;Bolt is based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Vector_quantization&#34;&gt;vector quantization&lt;/a&gt;. For details, see the &lt;a href=&#34;https://arxiv.org/abs/1706.10283&#34;&gt;Bolt paper&lt;/a&gt; or &lt;a href=&#34;https://github.com/dblalock/bolt/raw/master/assets/bolt-slides.pdf?raw=true&#34;&gt;slides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Bolt includes a thorough set of speed and accuracy benchmarks. See the &lt;code&gt;experiments/&lt;/code&gt; directory. This is also what you want if you want to reproduce the results in the paper.&lt;/p&gt; &#xA;&lt;p&gt;Note that all of the timing results use the raw C++ implementation. At present, the Python wrapper is slightly slower due to Python overhead. If you&#39;re interested in having a full-speed wrapper, let me know and I&#39;ll allocate time to making this happen.&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;X, queries = some N x D array, some iterable of length D arrays&#xA;&#xA;# these are approximately equal (though the latter are shifted and scaled)&#xA;enc = bolt.Encoder(reduction=&#39;dot&#39;).fit(X)&#xA;[np.dot(X, q) for q in queries]&#xA;[enc.transform(q) for q in queries]&#xA;&#xA;# same for these&#xA;enc = bolt.Encoder(reduction=&#39;l2&#39;).fit(X)&#xA;[np.sum((X - q) * (X - q), axis=1) for q in queries]&#xA;[enc.transform(q) for q in queries]&#xA;&#xA;# but enc.transform() is 10x faster or more&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example: Matrix-vector multiplies&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import bolt&#xA;import numpy as np&#xA;from scipy.stats import pearsonr as corr&#xA;from sklearn.datasets import load_digits&#xA;import timeit&#xA;&#xA;# for simplicity, use the sklearn digits dataset; we&#39;ll split&#xA;# it into a matrix X and a set of queries Q&#xA;X, _ = load_digits(return_X_y=True)&#xA;nqueries = 20&#xA;X, Q = X[:-nqueries], X[-nqueries:]&#xA;&#xA;enc = bolt.Encoder(reduction=&#39;dot&#39;, accuracy=&#39;lowest&#39;) # can tweak acc vs speed&#xA;enc.fit(X)&#xA;&#xA;dot_corrs = np.empty(nqueries)&#xA;for i, q in enumerate(Q):&#xA;    dots_true = np.dot(X, q)&#xA;    dots_bolt = enc.transform(q)&#xA;    dot_corrs[i] = corr(dots_true, dots_bolt)[0]&#xA;&#xA;# dot products closely preserved despite compression&#xA;print &#34;dot product correlation: {} +/- {}&#34;.format(&#xA;    np.mean(dot_corrs), np.std(dot_corrs))  # &amp;gt; .97&#xA;&#xA;# massive space savings&#xA;print(X.nbytes)  # 1777 rows * 64 cols * 8B = 909KB&#xA;print(enc.nbytes)  # 1777 * 2B = 3.55KB&#xA;&#xA;# massive time savings (~10x here, but often &amp;gt;100x on larger&#xA;# datasets with less Python overhead; see the paper)&#xA;t_np = timeit.Timer(&#xA;    lambda: [np.dot(X, q) for q in Q]).timeit(5)        # ~9ms&#xA;t_bolt = timeit.Timer(&#xA;    lambda: [enc.transform(q) for q in Q]).timeit(5)    # ~800us&#xA;print &#34;Numpy / BLAS time, Bolt time: {:.3f}ms, {:.3f}ms&#34;.format(&#xA;    t_np * 1000, t_bolt * 1000)&#xA;&#xA;# can get output without offset/scaling if needed&#xA;dots_bolt = [enc.transform(q, unquantize=True) for q in Q]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example: K-Nearest Neighbor / Maximum Inner Product Search&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# search using squared Euclidean distances&#xA;# (still using the Digits dataset from above)&#xA;enc = bolt.Encoder(&#39;l2&#39;, accuracy=&#39;high&#39;).fit(X)&#xA;bolt_knn = [enc.knn(q, k_bolt) for q in Q]  # knn for each query&#xA;&#xA;# search using dot product (maximum inner product search)&#xA;enc = bolt.Encoder(&#39;dot&#39;, accuracy=&#39;medium&#39;).fit(X)&#xA;bolt_knn = [enc.knn(q, k_bolt) for q in Q]  # knn for each query&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;p&gt;Bolt stands for &#34;Based On Lookup Tables&#34;. Feel free to use this exciting fact at parties.&lt;/p&gt; &#xA;&lt;!-- 2) If you use Bolt, let me know and I&#39;ll link to your project/company. --&gt;</summary>
  </entry>
  <entry>
    <title>spacedriveapp/spacedrive</title>
    <updated>2022-06-22T01:30:49Z</updated>
    <id>tag:github.com,2022-06-22:/spacedriveapp/spacedrive</id>
    <link href="https://github.com/spacedriveapp/spacedrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spacedrive is an open source cross-platform file explorer, powered by a virtual distributed filesystem written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/spacedriveapp/.github/main/profile/spacedrive_icon.png&#34; alt=&#34;Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;Spacedrive&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A file explorer from the future. &lt;br&gt; &lt;a href=&#34;https://spacedrive.com&#34;&gt;&lt;strong&gt;spacedrive.com »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;Download for &lt;/b&gt; macOS · Windows · Linux · iOS · watchOS · Android &lt;br&gt; &lt;i&gt;~ Links will be added once a release is available. ~&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; Spacedrive is an open source cross-platform file manager, powered by a virtual distributed filesystem (&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#what-is-a-vdfs&#34;&gt;VDFS&lt;/a&gt;) written in Rust. &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Spacedrive is under active development, most of the listed features are still experimental and subject to change.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Organize files across many devices in one place. From cloud services to offline hard drives, Spacedrive combines the storage capacity and processing power of your devices into one personal distributed cloud, that is both secure and intuitive to use.&lt;/p&gt; &#xA;&lt;p&gt;For independent creatives, hoarders and those that want to own their digital footprint. Spacedrive provides a file management experience like no other, and it&#39;s completely free.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spacedriveapp/.github/main/profile/app.png&#34; alt=&#34;Logo&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/gTaF2Z44f5&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/949090953497567312?label=Discord&amp;amp;color=5865F2&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/spacedriveapp&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Twitter-00acee?logo=twitter&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://instagram.com/spacedriveapp&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Instagram-E4405F?logo=instagram&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Licence&amp;amp;message=GNU%20v3&amp;amp;color=000&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Bundled%20Size&amp;amp;message=16.3MB&amp;amp;color=0974B4&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Stage&amp;amp;message=Alpha&amp;amp;color=2BB4AB&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h1&gt;What is a VDFS?&lt;/h1&gt; &#xA;&lt;p&gt;A VDFS (virtual distributed filesystem) is a filesystem designed to work across a variety of storage layers. It is not restricted to a single machine, with a uniform API to manipulate and access content across many devices. It achieves this by maintaining a virtual index of all storage locations, synchronizing the database between clients in realtime. This implementation also uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Content-addressable_storage&#34;&gt;CAS&lt;/a&gt; (Content-addressable storage) to uniquely identify files, while keeping record of logical file paths relative to the storage locations.&lt;/p&gt; &#xA;&lt;p&gt;The first implementation of a VDFS can be found in this UC Berkeley &lt;a href=&#34;https://www2.eecs.berkeley.edu/Pubs/TechRpts/2018/EECS-2018-29.pdf&#34;&gt;paper&lt;/a&gt; by Haoyuan Li. This paper describes its use for cloud computing, however the underlying concepts can be translated to open consumer software.&lt;/p&gt; &#xA;&lt;h1&gt;Motivation&lt;/h1&gt; &#xA;&lt;p&gt;Many of us have multiple cloud accounts, drives that aren’t backed up and data at risk of loss. We depend on cloud services like Google Photos and iCloud, but are locked in with limited capacity and almost zero interoperability between services and operating systems. Photo albums shouldn’t be stuck in a device ecosystem, or harvested for advertising data. They should be OS agnostic, permanent and personally owned. Data we create is our legacy, that will long outlive us—open source technology is the only way to ensure we retain absolute control over the data that defines our lives, at unlimited scale.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Links are for highlight purposes only until feature specific documentation is complete.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Complete:&lt;/strong&gt; &lt;em&gt;(in testing)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;File discovery&lt;/a&gt;&lt;/strong&gt; - Scan devices, drives and cloud accounts to build a directory of all files with metadata.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Preview generation&lt;/a&gt;&lt;/strong&gt; - Auto generate lower resolution stand-ins for image and video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Statistics&lt;/a&gt;&lt;/strong&gt; - Total capacity, index size, preview media size, free space etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;In progress:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;File Explorer&lt;/a&gt;&lt;/strong&gt; - Browse online/offline storage locations, view files with metadata, perform basic CRUD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Realtime synchronization&lt;/a&gt;&lt;/strong&gt; - Data index synchronized in realtime between devices, prioritizing peer-to-peer LAN connections (WiFi sync).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;To be developed (MVP):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Photos&lt;/a&gt;&lt;/strong&gt; - Photo and video albums similar to Apple/Google photos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Search&lt;/a&gt;&lt;/strong&gt; - Deep search into your filesystem with a keybind, including offline locations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Tags&lt;/a&gt;&lt;/strong&gt; - Define routines on custom tags to automate workflows, easily tag files individually, in bulk and automatically via rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Extensions&lt;/a&gt;&lt;/strong&gt; - Build tools on top of Spacedrive, extend functionality and integrate third party services. Extension directory on &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;spacedrive.com/extensions&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;To be developed (Post-MVP):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Cloud integration&lt;/a&gt;&lt;/strong&gt; - Index &amp;amp; backup to Apple Photos, Google Drive, Dropbox, OneDrive &amp;amp; Mega + easy API for the community to add more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Encrypted vault(s)&lt;/a&gt;&lt;/strong&gt; - Effortlessly manage &amp;amp; encrypt sensitive files, built on top of VeraCrypt. Encrypt individual files or create flexible-size vaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Key manager&lt;/a&gt;&lt;/strong&gt; - View, mount, dismount and hide keys. Mounted keys automatically unlock respective areas of your filesystem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Redundancy Goal&lt;/a&gt;&lt;/strong&gt; - Ensure a specific amount of copies exist for your important data, discover at-risk files and monitor device/drive health.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Timeline&lt;/a&gt;&lt;/strong&gt; - View a linear timeline of content, travel to any time and see media represented visually.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Media encoder&lt;/a&gt;&lt;/strong&gt; - Encode video and audio into various formats, use Tags to automate. Built with FFMPEG.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Workers&lt;/a&gt;&lt;/strong&gt; - Utilize the compute power of your devices in unison to encode and perform tasks at increased speeds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Spacedrive Cloud&lt;/a&gt;&lt;/strong&gt; - We&#39;ll host an always-on cloud device for you, with pay-as-you-go plans for storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#features&#34;&gt;Self hosted&lt;/a&gt;&lt;/strong&gt; - Spacedrive can be deployed as a service, behaving as just another device powering your personal cloud.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Developer Guide&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; for how to install Spacedrive from sources.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;This project is using what I&#39;m calling the &lt;strong&gt;&#34;PRRTT&#34;&lt;/strong&gt; stack (Prisma, Rust, React, TypeScript, Tauri).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prisma on the front-end? 🤯 Made possible thanks to &lt;a href=&#34;https://github.com/brendonovich/prisma-client-rust&#34;&gt;prisma-client-rust&lt;/a&gt;, developed by &lt;a href=&#34;https://github.com/brendonovich&#34;&gt;Brendonovich&lt;/a&gt;. Gives us access to the powerful migration CLI in development, along with the Prisma syntax for our schema. The application bundles with the Prisma query engine and codegen for a beautiful Rust API. Our lightweight migration runner is custom built for a desktop app context.&lt;/li&gt; &#xA; &lt;li&gt;Tauri allows us to create a pure Rust native OS webview, without the overhead of your average Electron app. This brings the bundle size and average memory usage down dramatically. It also contributes to a more native feel, especially on macOS due to Safari&#39;s close integration with the OS.&lt;/li&gt; &#xA; &lt;li&gt;The core (&lt;code&gt;sdcore&lt;/code&gt;) is written in pure Rust.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Monorepo structure:&lt;/h2&gt; &#xA;&lt;h3&gt;Apps:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href=&#34;https://tauri.studio&#34;&gt;Tauri&lt;/a&gt; app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mobile&lt;/code&gt;: A &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt; app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt; webapp.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;landing&lt;/code&gt;: A &lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt; app using Vite SSR &amp;amp; Vite pages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Core:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;core&lt;/code&gt;: The &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;Rust&lt;/a&gt; core, referred to internally as &lt;code&gt;sdcore&lt;/code&gt;. Contains filesystem, database and networking logic. Can be deployed in a variety of host applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Packages:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;TypeScript&lt;/a&gt; client library to handle dataflow via RPC between UI and the Rust core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/%5B#%5D(https://reactjs.org)&#34;&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;interface&lt;/code&gt;: The complete user interface in React (used by apps &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;landing&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; and all &lt;code&gt;tsconfig.json&lt;/code&gt; configs used throughout the monorepo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macos&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;Swift&lt;/a&gt; Native binary for MacOS system extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ios&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;Swift&lt;/a&gt; Native binary (planned).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;C#&lt;/a&gt; Native binary (planned).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;android&lt;/code&gt;: A &lt;a href=&#34;https://raw.githubusercontent.com/spacedriveapp/spacedrive/main/#&#34;&gt;Kotlin&lt;/a&gt; Native binary (planned).&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>NomicFoundation/hardhat</title>
    <updated>2022-06-22T01:30:49Z</updated>
    <id>tag:github.com,2022-06-22:/NomicFoundation/hardhat</id>
    <link href="https://github.com/NomicFoundation/hardhat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hardhat is a development environment to compile, deploy, test, and debug your Ethereum software. Get Solidity stack traces &amp; console.log.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/176499/96893278-ebc67580-1460-11eb-9530-d5df3a3d65d0.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.npmjs.org/package/hardhat&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/hardhat.svg?style=flat-square&#34; alt=&#34;NPM Package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Hardhat is an Ethereum development environment for professionals. It facilitates performing frequent tasks, such as running tests, automatically checking code for mistakes or interacting with a smart contract. Check out the &lt;a href=&#34;https://hardhat.org/plugins/&#34;&gt;plugin list&lt;/a&gt; to use it with your existing tools.&lt;/p&gt; &#xA;&lt;p&gt;Built by the &lt;a href=&#34;https://nomic.foundation/&#34;&gt;Nomic Foundation&lt;/a&gt; for the Ethereum community.&lt;/p&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://hardhat.org/discord&#34;&gt;Hardhat Support Discord server&lt;/a&gt; to stay up to date on new releases, plugins and tutorials.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install Hardhat, go to an empty folder, initialize an &lt;code&gt;npm&lt;/code&gt; project (i.e. &lt;code&gt;npm init&lt;/code&gt;), and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --save-dev hardhat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it&#39;s installed, just run this command and follow its instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx hardhat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://hardhat.org&#34;&gt;Hardhat&#39;s website&lt;/a&gt; you will find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/getting-started/&#34;&gt;Guides to get started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/&#34;&gt;Hardhat Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/plugins/&#34;&gt;Plugin list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome! Feel free to open any issue or send a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://raw.githubusercontent.com/NomicFoundation/hardhat/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to learn about how to set up Hardhat&#39;s development environment.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback, help and news&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hardhat.org/discord&#34;&gt;Hardhat Support Discord server&lt;/a&gt;: for questions and feedback.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/HardhatHQ&#34;&gt;Follow Hardhat on Twitter.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Happy building!&lt;/h2&gt; &#xA;&lt;p&gt;👷‍♀️👷‍♂️👷‍♀️👷‍♂️👷‍♀️👷‍♂️👷‍♀️👷‍♂️👷‍♀️👷‍♂️👷‍♀️👷‍♂️👷‍♀️👷‍♂️&lt;/p&gt;</summary>
  </entry>
</feed>