<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-08T01:28:23Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zigbee2mqtt/hassio-zigbee2mqtt</title>
    <updated>2025-01-08T01:28:23Z</updated>
    <id>tag:github.com,2025-01-08:/zigbee2mqtt/hassio-zigbee2mqtt</id>
    <link href="https://github.com/zigbee2mqtt/hassio-zigbee2mqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Zigbee2MQTT Home Assistant add-on&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/zigbee2mqtt/hassio-zigbee2mqtt/master/zigbee2mqtt/logo.png&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div style=&#34;display: flex;&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/actions?query=workflow%3ACI&#34;&gt; &lt;img src=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/workflows/CI/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/zigbee2mqtt/hassio-zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zigbee2mqtt/hassio-zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/dadfWYE&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/556563650429583360.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;http://zigbee2mqtt.discourse.group/&#34;&gt; &lt;img src=&#34;https://img.shields.io/discourse/https/zigbee2mqtt.discourse.group/status.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h1&gt;Official Zigbee2MQTT Home Assistant add-on&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you don&#39;t have an MQTT broker yet; in Home Assistant go to &lt;strong&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/supervisor_store/&#34;&gt;Settings → Add-ons → Add-on store&lt;/a&gt;&lt;/strong&gt; and install the &lt;strong&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/supervisor_addon/?addon=core_mosquitto&#34;&gt;Mosquitto broker&lt;/a&gt;&lt;/strong&gt; add-on, then start it.&lt;/li&gt; &#xA; &lt;li&gt;Go back to the &lt;strong&gt;Add-on store&lt;/strong&gt;, click &lt;strong&gt;⋮ → Repositories&lt;/strong&gt;, fill in&lt;br&gt; &lt;code&gt;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&lt;/code&gt; and click &lt;strong&gt;Add → Close&lt;/strong&gt; or click the &lt;strong&gt;Add repository&lt;/strong&gt; button below, click &lt;strong&gt;Add → Close&lt;/strong&gt; (You might need to enter the &lt;strong&gt;internal IP address&lt;/strong&gt; of your Home Assistant instance first).&lt;br&gt; &lt;a href=&#34;https://my.home-assistant.io/redirect/supervisor_add_addon_repository/?repository_url=https%3A%2F%2Fgithub.com%2Fzigbee2mqtt%2Fhassio-zigbee2mqtt&#34;&gt;&lt;img src=&#34;https://my.home-assistant.io/badges/supervisor_add_addon_repository.svg?sanitize=true&#34; alt=&#34;Open your Home Assistant instance and show the add add-on repository dialog with a specific repository URL pre-filled.&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The repository includes two add-ons: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Zigbee2MQTT&lt;/strong&gt; is the stable release that tracks the released versions of Zigbee2MQTT. (&lt;strong&gt;recommended for most users&lt;/strong&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Zigbee2MQTT Edge&lt;/strong&gt; tracks the &lt;code&gt;dev&lt;/code&gt; branch of Zigbee2MQTT such that you can install the edge version if there are features or fixes in the Zigbee2MQTT dev branch that are not yet released.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click on the add-on and press &lt;strong&gt;Install&lt;/strong&gt; and wait till the add-on is installed.&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Configuration&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are &lt;strong&gt;not&lt;/strong&gt; using the Mosquitto broker add-on fill in your MQTT details (leave empty when using the Mosquitto broker add-on) under the &lt;code&gt;mqtt&lt;/code&gt; section. Format can be found &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/configuration/mqtt.html#server-connection&#34;&gt;here&lt;/a&gt;, but skip the initial &lt;code&gt;mqtt:&lt;/code&gt; indent. e.g.: &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;server: mqtt://localhost:1883&#xA;user: my_user&#xA;password: &#34;my_password&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; Note: If the &lt;code&gt;password&lt;/code&gt; includes certain special characters (reserved by yaml specification), the enclosing quotes are required. So it is recommended to always quote it when in doubt.&lt;/li&gt; &#xA;   &lt;li&gt;Since Zigbee2MQTT automatically attempts to detect the adapter, you can leave the &lt;code&gt;serial&lt;/code&gt; section empty for now; we may need it later in step 7.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Save&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; it is possible to refer to variables in the Home Assistant &lt;code&gt;secrets.yaml&lt;/code&gt; file (not the Zigbee2MQTT one!) by using e.g. &lt;code&gt;password: &#39;!secret mqtt_pass&#39;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;CAUTION:&lt;/strong&gt; settings configured through the add-on configuration page will take precedence over settings in the &lt;code&gt;configuration.yaml&lt;/code&gt; page (e.g. you set &lt;code&gt;rtscts: false&lt;/code&gt; in add-on configuration page and &lt;code&gt;rtscts: true&lt;/code&gt; in &lt;code&gt;configuration.yaml&lt;/code&gt;, &lt;code&gt;rtscts: false&lt;/code&gt; will be used).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the add-on by going to &lt;strong&gt;Info&lt;/strong&gt; and click &lt;strong&gt;Start&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wait till Zigbee2MQTT starts and press &lt;strong&gt;OPEN WEB UI&lt;/strong&gt; to verify Zigbee2MQTT started correctly. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If it shows &lt;code&gt;502: Bad Gateway&lt;/code&gt; wait a bit more and refresh the page.&lt;/li&gt; &#xA;   &lt;li&gt;If this takes too long (e.g. 2 minutes +) check the &lt;strong&gt;Log&lt;/strong&gt; tab to see what went wrong.&lt;/li&gt; &#xA;   &lt;li&gt;In case the add-on fails to start with the following error: &lt;code&gt;USB adapter discovery error (No valid USB adapter found). Specify valid &#39;adapter&#39; and &#39;port&#39; in your configuration.&lt;/code&gt;, we need to fill in the &lt;code&gt;serial&lt;/code&gt; section (which we skipped in step 5). Format can be found &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/configuration/adapter-settings.html#adapter-settings&#34;&gt;here&lt;/a&gt;, but skip the initial &lt;code&gt;serial:&lt;/code&gt; indent. e.g.: &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;port: /dev/serial/by-id/usb-Texas_Instruments_TI_CC2531_USB_CDC___0X00124B0018ED3DDF-if00&#xA;adapter: zstack&#xA;&lt;/code&gt;&lt;/pre&gt; If you don&#39;t know the port and you have just one USB device connected to your machine try &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; or &lt;code&gt;/dev/ttyAMA0&lt;/code&gt;. Else use the &lt;a href=&#34;https://www.home-assistant.io/common-tasks/os#home-assistant-via-the-command-line&#34;&gt;Home Assistant CLI&lt;/a&gt; and execute &lt;code&gt;ha hardware info&lt;/code&gt; to find out.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/raw/master/zigbee2mqtt/DOCS.md&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Restoring data from a standalone installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure that both environments are running the same version&lt;/li&gt; &#xA; &lt;li&gt;Ensure you can &lt;a href=&#34;https://community.home-assistant.io/t/howto-how-to-access-the-home-assistant-os-host-itself-over-ssh/263352&#34;&gt;SSH to your Home Assistant OS&lt;/a&gt; (NOT to the SSH Add-on)&lt;/li&gt; &#xA; &lt;li&gt;Backup your standalone environment &lt;code&gt;data&lt;/code&gt; folder (possibly leaving out the &lt;code&gt;logs/&lt;/code&gt; folder)&lt;/li&gt; &#xA; &lt;li&gt;Start the Zigbee2MQTT HA add-on with a non-existing &lt;code&gt;tty&lt;/code&gt; device, to create the &lt;code&gt;data&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Restore your &lt;code&gt;data&lt;/code&gt; folder contents into &lt;code&gt;/mnt/data/supervisor/homeassistant/zigbee2mqtt&lt;/code&gt;, e.g. via &lt;code&gt;scp -O -P 22222 -i PATHTOUSEDSSHKEY ./data/* root@hass:/mnt/data/supervisor/homeassistant/zigbee2mqtt/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure your serial port and MQTT settings using the HA add-on configuration UI&lt;/li&gt; &#xA; &lt;li&gt;Edit the &lt;code&gt;/usr/share/hassio/homeassistant/zigbee2mqtt/configuration.yaml&lt;/code&gt; file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ensure that the serial port section matches the one configured with the UI&lt;/li&gt; &#xA;   &lt;li&gt;Remove any irrelevant sections from the config (e.g. &lt;code&gt;mqtt&lt;/code&gt; (if not needed), &lt;code&gt;advanced/log_syslog&lt;/code&gt;, &lt;code&gt;frontend&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the add-on&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;The format is based on &lt;a href=&#34;http://keepachangelog.com/en/1.0.0/&#34;&gt;Keep a Changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All notable changes to this project will be documented in the &lt;a href=&#34;https://raw.githubusercontent.com/zigbee2mqtt/hassio-zigbee2mqtt/master/zigbee2mqtt/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Version for releases is based on &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt&#34;&gt;Zigbee2MQTT&lt;/a&gt; format: &lt;code&gt;X.Y.Z&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Any changes on the add-on that do not require a new version of Zigbee2MQTT will use the format: &lt;code&gt;X.Y.Z-A&lt;/code&gt; where &lt;code&gt;X.Y.Z&lt;/code&gt; is fixed on the Zigbee2MQTT release version and &lt;code&gt;A&lt;/code&gt; is related to the add-on.&lt;/p&gt; &#xA;&lt;p&gt;Edge version will not maintain a CHANGELOG and doesn&#39;t have a version.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you find any issues with the add-on, please check the &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/issues&#34;&gt;issue tracker&lt;/a&gt; for similar issues before creating one. If your issue is regarding specific devices or, more generally, an issue that arises after Zigbee2MQTT has successfully started, it should likely be reported in the &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/issues&#34;&gt;Zigbee2MQTT issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to create a PR for fixes and enhancements.&lt;/p&gt; &#xA;&lt;h3&gt;Testing changes locally&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re submitting a PR and wish to test it locally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gain root access to your Home Assistant installation&lt;/li&gt; &#xA; &lt;li&gt;In the Add-on Settings, Ensure &#34;Watchdog&#34; is turned off so the container isn&#39;t automatically restarted when it&#39;s stopped via the CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1923186/198087147-7ab2ba1e-1a68-41b8-9a84-76b25b329786.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enter the &lt;code&gt;zigbee2mqtt&lt;/code&gt; container interactively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec -it $(docker ps | grep zigbee2mqtt | cut -d&#34; &#34; -f 1) /bin/sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit the file you&#39;d like to test &amp;amp; save.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;vi node_modules/zigbee-herdsman-converters/converters/toZigbee.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Back on the Home Assistant installation, restart the &lt;code&gt;zigbee2mqtt&lt;/code&gt; container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker restart $(docker ps | grep zigbee2mqtt | cut -d&#34; &#34; -f 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refresh the web UI and perform your testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielwelch&#34;&gt;danielwelch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ciotlosm&#34;&gt;ciotlosm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Koenkk&#34;&gt;Koenkk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rectorphp/rector</title>
    <updated>2025-01-08T01:28:23Z</updated>
    <id>tag:github.com,2025-01-08:/rectorphp/rector</id>
    <link href="https://github.com/rectorphp/rector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant Upgrades and Automated Refactoring of any PHP 5.3+ code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rector - Instant Upgrades and Automated Refactoring&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/rector/rector&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/rector/rector.svg?style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Rector instantly upgrades and refactors the PHP code of your application. It can help you in 2 major areas:&lt;/p&gt; &#xA;&lt;h3&gt;1. Instant Upgrades&lt;/h3&gt; &#xA;&lt;p&gt;Rector now supports upgrades from PHP 5.3 to 8.4 and major open-source projects like &lt;a href=&#34;https://github.com/rectorphp/rector-symfony&#34;&gt;Symfony&lt;/a&gt;, &lt;a href=&#34;https://github.com/rectorphp/rector-phpunit&#34;&gt;PHPUnit&lt;/a&gt;, and &lt;a href=&#34;https://github.com/rectorphp/rector-doctrine&#34;&gt;Doctrine&lt;/a&gt;. Do you want to &lt;strong&gt;be constantly on the latest PHP and Framework without effort&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Use Rector to handle &lt;strong&gt;instant upgrades&lt;/strong&gt; for you.&lt;/p&gt; &#xA;&lt;h3&gt;2. Automated Refactoring&lt;/h3&gt; &#xA;&lt;p&gt;Do you have code quality you need, but struggle to keep it with new developers in your team? Do you want to see smart code-reviews even when every senior developers sleeps?&lt;/p&gt; &#xA;&lt;p&gt;Add Rector to your CI and let it &lt;strong&gt;continuously refactor your code&lt;/strong&gt; and keep the code quality high.&lt;/p&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://getrector.com/blog/new-setup-ci-command-to-let-rector-work-for-you&#34;&gt;blogpost&lt;/a&gt; to see how to set up automated refactoring.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require rector/rector --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Rector&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 main ways to use Rector:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;em&gt;single rule&lt;/em&gt;, to have the change under control&lt;/li&gt; &#xA; &lt;li&gt;or group of rules called &lt;em&gt;sets&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use them, create a &lt;code&gt;rector.php&lt;/code&gt; in your root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And modify it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Rector\Config\RectorConfig;&#xA;use Rector\TypeDeclaration\Rector\Property\TypedPropertyFromStrictConstructorRector;&#xA;&#xA;return RectorConfig::configure()&#xA;    // register single rule&#xA;    -&amp;gt;withRules([&#xA;        TypedPropertyFromStrictConstructorRector::class&#xA;    ])&#xA;    // here we can define, what prepared sets of rules will be applied&#xA;    -&amp;gt;withPreparedSets(&#xA;        deadCode: true,&#xA;        codeQuality: true&#xA;    );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then dry run Rector:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src --dry-run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rector will show you diff of files that it &lt;em&gt;would&lt;/em&gt; change. To &lt;em&gt;make&lt;/em&gt; the changes, drop &lt;code&gt;--dry-run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find &lt;a href=&#34;https://getrector.com/documentation/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getrector.com/find-rule&#34;&gt;Explore Rector Rules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Learn Faster with a Book&lt;/h2&gt; &#xA;&lt;p&gt;Are you curious, how Rector works internally, how to create your own rules and test them and why Rector was born? Read &lt;a href=&#34;https://leanpub.com/rector-the-power-of-automated-refactoring&#34;&gt;Rector - The Power of Automated Refactoring&lt;/a&gt; that will take you step by step through the Rector setup and how to create your own rules.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Empowered by Community &lt;span&gt;❤️&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The Rector community is powerful thanks to active maintainers who take care of Rector sets for particular projects.&lt;/p&gt; &#xA;&lt;p&gt;Among there projects belong:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/palantirnet/drupal-rector&#34;&gt;palantirnet/drupal-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/craftcms/rector&#34;&gt;craftcms/rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FriendsOfShopware/shopware-rector&#34;&gt;FriendsOfShopware/shopware-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sabbelasichon/typo3-rector&#34;&gt;sabbelasichon/typo3-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sulu/sulu-rector&#34;&gt;sulu/sulu-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/efabrica-team/rector-nette&#34;&gt;efabrica-team/rector-nette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sylius/SyliusRector&#34;&gt;Sylius/SyliusRector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoditoNet/rector-money&#34;&gt;CoditoNet/rector-money&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laminas/laminas-servicemanager-migration&#34;&gt;laminas/laminas-servicemanager-migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cakephp/upgrade&#34;&gt;cakephp/upgrade&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/driftingly/rector-laravel&#34;&gt;driftingly/rector-laravel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/contao/contao-rector&#34;&gt;contao/contao-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/php-static-analysis/rector-rule&#34;&gt;php-static-analysis/rector-rule&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hire us to get Job Done &lt;span&gt;💪&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Rector is a tool that &lt;a href=&#34;https://getrector.com/&#34;&gt;we develop&lt;/a&gt; and share for free, so anyone can automate their refactoring. But not everyone has dozens of hours to understand complexity of abstract-syntax-tree in their own time. &lt;strong&gt;That&#39;s why we provide commercial support - to save your time&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Would you like to apply Rector on your code base but don&#39;t have time for the struggle with your project? &lt;a href=&#34;https://getrector.com/contact&#34;&gt;Hire us&lt;/a&gt; to get there faster.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rectorphp/rector/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; or go to development repository &lt;a href=&#34;https://github.com/rectorphp/rector-src&#34;&gt;rector/rector-src&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;--debug&lt;/code&gt; option, that will print nested exceptions output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src/Controller --dry-run --debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with Xdebug:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure &lt;a href=&#34;https://xdebug.org/&#34;&gt;Xdebug&lt;/a&gt; is installed and configured&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;--xdebug&lt;/code&gt; option when running Rector&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src/Controller --dry-run --xdebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To assist with simple debugging Rector provides 2 helpers to pretty-print AST-nodes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use PhpParser\Node\Scalar\String_;&#xA;$node = new String_(&#39;hello world!&#39;);&#xA;&#xA;// prints node to string, as PHP code displays it&#xA;print_node($node);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Known Drawbacks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Rector uses &lt;a href=&#34;https://github.com/nikic/PHP-Parser/&#34;&gt;nikic/php-parser&lt;/a&gt;, built on technology called an &lt;em&gt;abstract syntax tree&lt;/em&gt; (AST). An AST doesn&#39;t know about spaces and when written to a file it produces poorly formatted code in both PHP and docblock annotations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rector in parallel mode will work most of the times for most OS. On Windows, you may encounter issues unresolvable despite of following the &lt;a href=&#34;https://getrector.com/documentation/troubleshooting-parallel&#34;&gt;Troubleshooting Parallel&lt;/a&gt; guide. In such case, check if you are using Powershell 7 (pwsh). Change your terminal to command prompt (cmd) or bash for Windows.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Apply Coding Standards?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your project needs to have a coding standard tool&lt;/strong&gt; and a set of formatting rules, so it can make Rector&#39;s output code nice and shiny again.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re using &lt;a href=&#34;https://github.com/symplify/easy-coding-standard&#34;&gt;ECS&lt;/a&gt; with &lt;a href=&#34;https://github.com/rectorphp/rector-src/raw/main/ecs.php&#34;&gt;this setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;May cause unexpected output on File with mixed PHP+HTML content&lt;/h3&gt; &#xA;&lt;p&gt;When you apply changes to files with PHP + HTML content, you may need to manually verify the changed file after apply the changes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prometheus/prometheus</title>
    <updated>2025-01-08T01:28:23Z</updated>
    <id>tag:github.com,2025-01-08:/prometheus/prometheus</id>
    <link href="https://github.com/prometheus/prometheus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Prometheus monitoring system and time series database.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34; style=&#34;border-bottom: none&#34;&gt; &lt;a href=&#34;https://prometheus.io&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;Prometheus&#34; src=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/documentation/images/prometheus-logo.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;br&gt;Prometheus &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Visit &lt;a href=&#34;https://prometheus.io&#34; target=&#34;_blank&#34;&gt;prometheus.io&lt;/a&gt; for the full documentation, examples and guides.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/prometheus/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/prometheus/prometheus/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://quay.io/repository/prometheus/prometheus/status&#34; alt=&#34;Docker Repository on Quay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/prom/prometheus/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/prom/prometheus.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/prometheus/prometheus&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/486&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/486/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/prometheus/prometheus/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://clomonitor.io/projects/cncf/prometheus&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/prometheus/badge&#34; alt=&#34;CLOMonitor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:prometheus&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/prometheus.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Prometheus, a &lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.&lt;/p&gt; &#xA;&lt;p&gt;The features that distinguish Prometheus from other metrics and monitoring systems are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;multi-dimensional&lt;/strong&gt; data model (time series defined by metric name and set of key/value dimensions)&lt;/li&gt; &#xA; &lt;li&gt;PromQL, a &lt;strong&gt;powerful and flexible query language&lt;/strong&gt; to leverage this dimensionality&lt;/li&gt; &#xA; &lt;li&gt;No dependency on distributed storage; &lt;strong&gt;single server nodes are autonomous&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;An HTTP &lt;strong&gt;pull model&lt;/strong&gt; for time series collection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pushing time series&lt;/strong&gt; is supported via an intermediary gateway for batch jobs&lt;/li&gt; &#xA; &lt;li&gt;Targets are discovered via &lt;strong&gt;service discovery&lt;/strong&gt; or &lt;strong&gt;static configuration&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multiple modes of &lt;strong&gt;graphing and dashboarding support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for hierarchical and horizontal &lt;strong&gt;federation&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/documentation/images/architecture.svg?sanitize=true&#34; alt=&#34;Architecture overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;There are various ways of installing Prometheus.&lt;/p&gt; &#xA;&lt;h3&gt;Precompiled binaries&lt;/h3&gt; &#xA;&lt;p&gt;Precompiled binaries for released versions are available in the &lt;a href=&#34;https://prometheus.io/download/&#34;&gt;&lt;em&gt;download&lt;/em&gt; section&lt;/a&gt; on &lt;a href=&#34;https://prometheus.io&#34;&gt;prometheus.io&lt;/a&gt;. Using the latest production release binary is the recommended way of installing Prometheus. See the &lt;a href=&#34;https://prometheus.io/docs/introduction/install/&#34;&gt;Installing&lt;/a&gt; chapter in the documentation for all the details.&lt;/p&gt; &#xA;&lt;h3&gt;Docker images&lt;/h3&gt; &#xA;&lt;p&gt;Docker images are available on &lt;a href=&#34;https://quay.io/repository/prometheus/prometheus&#34;&gt;Quay.io&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/r/prom/prometheus/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can launch a Prometheus container for trying it out with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prometheus will now be reachable at &lt;a href=&#34;http://localhost:9090/&#34;&gt;http://localhost:9090/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;To build Prometheus from source code, You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;version 1.22 or greater&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;NodeJS &lt;a href=&#34;https://nodejs.org/&#34;&gt;version 16 or greater&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;npm &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;version 7 or greater&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Start by cloning the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/prometheus/prometheus.git&#xA;cd prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;go&lt;/code&gt; tool to build and install the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries into your &lt;code&gt;GOPATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GO111MODULE=on go install github.com/prometheus/prometheus/cmd/...&#xA;prometheus --config.file=your_config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, when using &lt;code&gt;go install&lt;/code&gt; to build Prometheus, Prometheus will expect to be able to read its web assets from local filesystem directories under &lt;code&gt;web/ui/static&lt;/code&gt; and &lt;code&gt;web/ui/templates&lt;/code&gt;. In order for these assets to be found, you will have to run Prometheus from the root of the cloned repository. Note also that these directories do not include the React UI unless it has been built explicitly using &lt;code&gt;make assets&lt;/code&gt; or &lt;code&gt;make build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An example of the above configuration file can be found &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/documentation/examples/prometheus.yml&#34;&gt;here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also build using &lt;code&gt;make build&lt;/code&gt;, which will compile in the web assets so that Prometheus can be run from anywhere:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build&#xA;./prometheus --config.file=your_config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Makefile provides several targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;build&lt;/em&gt;: build the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries (includes building and compiling in web assets)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;test&lt;/em&gt;: run the tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;test-short&lt;/em&gt;: run the short tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;format&lt;/em&gt;: format the source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;vet&lt;/em&gt;: check the source code for common errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;assets&lt;/em&gt;: build the React UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Service discovery plugins&lt;/h3&gt; &#xA;&lt;p&gt;Prometheus is bundled with many service discovery plugins. When building Prometheus from source, you can edit the &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/plugins.yml&#34;&gt;plugins.yml&lt;/a&gt; file to disable some service discoveries. The file is a yaml-formatted list of go import path that will be built into the Prometheus binary.&lt;/p&gt; &#xA;&lt;p&gt;After you have changed the file, you need to run &lt;code&gt;make build&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;p&gt;If you are using another method to compile Prometheus, &lt;code&gt;make plugins&lt;/code&gt; will generate the plugins file accordingly.&lt;/p&gt; &#xA;&lt;p&gt;If you add out-of-tree plugins, which we do not endorse at the moment, additional steps might be needed to adjust the &lt;code&gt;go.mod&lt;/code&gt; and &lt;code&gt;go.sum&lt;/code&gt; files. As always, be extra careful when loading third party code.&lt;/p&gt; &#xA;&lt;h3&gt;Building the Docker image&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;make docker&lt;/code&gt; target is designed for use in our CI system. You can build a docker image locally with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make promu&#xA;promu crossbuild -p linux/amd64&#xA;make npm_licenses&#xA;make common-docker-amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Prometheus as a Go Library&lt;/h2&gt; &#xA;&lt;h3&gt;Remote Write&lt;/h3&gt; &#xA;&lt;p&gt;We are publishing our Remote Write protobuf independently at &lt;a href=&#34;https://buf.build/prometheus/prometheus/assets&#34;&gt;buf.build&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use that as a library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get buf.build/gen/go/prometheus/prometheus/protocolbuffers/go@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is experimental.&lt;/p&gt; &#xA;&lt;h3&gt;Prometheus code base&lt;/h3&gt; &#xA;&lt;p&gt;In order to comply with &lt;a href=&#34;https://go.dev/ref/mod#versions&#34;&gt;go mod&lt;/a&gt; rules, Prometheus release number do not exactly match Go module releases.&lt;/p&gt; &#xA;&lt;p&gt;For the Prometheus v3.y.z releases, we are publishing equivalent v0.3y.z tags. The y in v0.3y.z is always padded to two digits, with a leading zero if needed.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, a user that would want to use Prometheus v3.0.0 as a library could do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get github.com/prometheus/prometheus@v0.300.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the Prometheus v2.y.z releases, we published the equivalent v0.y.z tags.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, a user that would want to use Prometheus v2.35.0 as a library could do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get github.com/prometheus/prometheus@v0.35.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This solution makes it clear that we might break our internal Go APIs between minor user-facing releases, as &lt;a href=&#34;https://semver.org/#spec-item-4&#34;&gt;breaking changes are allowed in major version zero&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;React UI Development&lt;/h2&gt; &#xA;&lt;p&gt;For more information on building, running, and developing on the React-based UI, see the React app&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/web/ui/README.md&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Godoc documentation is available via &lt;a href=&#34;https://pkg.go.dev/github.com/prometheus/prometheus&#34;&gt;pkg.go.dev&lt;/a&gt;. Due to peculiarities of Go Modules, v3.y.z will be displayed as v0.3y.z (the y in v0.3y.z is always padded to two digits, with a leading zero if needed), while v2.y.z will be displayed as v0.y.z.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://prometheus.io/community&#34;&gt;Community page&lt;/a&gt; for how to reach the Prometheus developers and users on various communication channels.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0, see &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>