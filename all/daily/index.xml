<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-26T01:31:00Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>antirez/botlib</title>
    <updated>2023-11-26T01:31:00Z</updated>
    <id>tag:github.com,2023-11-26:/antirez/botlib</id>
    <link href="https://github.com/antirez/botlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C Telegram bot framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BOTLIB - Telegram C bot framework&lt;/h1&gt; &#xA;&lt;p&gt;WARNING: API is work in progress. Don&#39;t consider it reliable until this message is removed.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create your bot using the Telegram &lt;a href=&#34;https://t.me/botfather&#34;&gt;@BotFather&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;After obtaining your bot API key, store it into a file called &lt;code&gt;apikey.txt&lt;/code&gt; inside the bot working directory. Alternatively you can use the &lt;code&gt;--apikey&lt;/code&gt; command line argument to provide your Telegram API key.&lt;/li&gt; &#xA; &lt;li&gt;Optionally edit &lt;code&gt;mybot.c&lt;/code&gt; to personalized the bot.&lt;/li&gt; &#xA; &lt;li&gt;Build the bot: you need libcurl and libsqlite installed. Just type &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run with &lt;code&gt;./mybot&lt;/code&gt;. There is also a debug mode if you run it using the &lt;code&gt;--debug&lt;/code&gt; option (add --debug multiple times for even more verbose messages). For a more moderate output use &lt;code&gt;--verbose&lt;/code&gt;. Try &lt;code&gt;mybot --help&lt;/code&gt; for the full list of command line options.&lt;/li&gt; &#xA; &lt;li&gt;Add the bot to your Telegram channel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The bot &lt;em&gt;must&lt;/em&gt; be an administrator of the channel in order to read all the messages that are sent in such channel. Private messages will work regardless.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By default the bot will create an SQLite database in the working directory. If you want to specify another path for your SQLite db, use the &lt;code&gt;--dbfile&lt;/code&gt; command line option.&lt;/p&gt; &#xA;&lt;h2&gt;APIs&lt;/h2&gt; &#xA;&lt;p&gt;... Work in progress ...&lt;/p&gt; &#xA;&lt;p&gt;For the bot API check &lt;code&gt;mybot.c&lt;/code&gt; example itself. The basic usage is pretty simple. However for all the other stuff, like the Sqlite3 abstractions, they are taken from &lt;a href=&#34;https://github.com/antirez/stonky&#34;&gt;Stonky&lt;/a&gt;, so the code there (which is very accessible) will provide some help. I hope to document this project better. For now my main goal was to stop duplicating Stonly to create new bots with all the common code inside.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bgstaal/multipleWindow3dScene</title>
    <updated>2023-11-26T01:31:00Z</updated>
    <id>tag:github.com,2023-11-26:/bgstaal/multipleWindow3dScene</id>
    <link href="https://github.com/bgstaal/multipleWindow3dScene" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A quick example of how one can &#34;synchronize&#34; a 3d scene across multiple windows using three.js and localStorage&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;3d scene spanning multiple windows using three.js and localStorage&lt;/h2&gt; &#xA;&lt;p&gt;A simple example showing how to setup a 3d scene across windows on the same origin using three.js and localStorage. Code should be self explanatory&lt;/p&gt; &#xA;&lt;p&gt;follow me on twitter at &lt;a href=&#34;https://twitter.com/_nonfigurativ_&#34;&gt;@&lt;em&gt;nonfigurativ&lt;/em&gt;&lt;/a&gt; for more stuff like this&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>teslamotors/roadster</title>
    <updated>2023-11-26T01:31:00Z</updated>
    <id>tag:github.com,2023-11-26:/teslamotors/roadster</id>
    <link href="https://github.com/teslamotors/roadster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;2008-2012 Roadster Development and Diagnostic Software files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Roadster&lt;/h1&gt; &#xA;&lt;p&gt;The materials in this repository are released under the terms of &lt;a href=&#34;https://service.tesla.com/roadster&#34;&gt;&lt;em&gt;Disclosed Research and Development Documents&lt;/em&gt;&lt;/a&gt; for Roadster.&lt;/p&gt;</summary>
  </entry>
</feed>