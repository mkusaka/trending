<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-26T01:29:05Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mitsuhiko/rye</title>
    <updated>2023-04-26T01:29:05Z</updated>
    <id>tag:github.com,2023-04-26:/mitsuhiko/rye</id>
    <link href="https://github.com/mitsuhiko/rye" rel="alternate"></link>
    <summary type="html">&lt;p&gt;an experimental alternative to poetry/pip/pipenv/pyenv/venv/virtualenv/pdm/hatch/â€¦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rye&lt;/h1&gt; &#xA;&lt;p&gt;Rye is &lt;a href=&#34;https://github.com/mitsuhiko/&#34;&gt;Armin&#39;s&lt;/a&gt; personal one-stop-shop for all his Python needs. It installs and manages Python installations, manages &lt;code&gt;pyproject.toml&lt;/code&gt; files, installs and uninstalls dependencies, manages virtualenvs behind the scenes. It supports monorepos and global tool installations.&lt;/p&gt; &#xA;&lt;p&gt;It is a wish of what Python was, with no guarantee to work for anyone else. It&#39;s an exploration, and it&#39;s far from perfect. Thus also the question: &lt;strong&gt;&lt;a href=&#34;https://github.com/mitsuhiko/rye/discussions/6&#34;&gt;Should it exist?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://youtu.be/CyI8TBuKPF0&#34;&gt; &lt;img src=&#34;https://img.youtube.com/vi/CyI8TBuKPF0/sddefault.jpg&#34; alt=&#34;Watch the instruction&#34; width=&#34;40%&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;Click on the thumbnail to watch a 9 minute introduction video&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Rye is built in Rust. There is no binary distribution yet, it only works on Linux and macOS as of today:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo install --git https://github.com/mitsuhiko/rye rye&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing &lt;code&gt;rye&lt;/code&gt;, all you need to enjoy automatic management of everything is &lt;code&gt;rye sync&lt;/code&gt; (and optionally &lt;code&gt;rye pin&lt;/code&gt; to pick a specific Python version):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ rye pin cpython@3.11&#xA;$ rye sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The virtualenv that &lt;code&gt;rye&lt;/code&gt; manages is placed in &lt;code&gt;.venv&lt;/code&gt; next to your &lt;code&gt;pyproject.toml&lt;/code&gt;. You can activate and work with it as normal with one notable exception: the Python installation in it does not contain &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;python&lt;/code&gt; will by default just be your regular Python. To have it automatically pick up the right Python without manually activating the virtualenv, you can add &lt;code&gt;~/.rye/shims&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; at higher preference than normal. If you operate outside of a rye managed project, the regular Python is picked up automatically. For the global tool installation you need to add the shims to the path.&lt;/p&gt; &#xA;&lt;h2&gt;Some of the things it does&lt;/h2&gt; &#xA;&lt;p&gt;It automatically installs and manages Python:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rye pin 3.11&#xA;$ rye run python&#xA;Python 3.11.1 (main, Jan 16 2023, 16:02:03) [Clang 15.0.7 ] on darwin&#xA;Type &#34;help&#34;, &#34;copyright&#34;, &#34;credits&#34; or &#34;license&#34; for more information.&#xA;&amp;gt;&amp;gt;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install tools in isolation globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rye install maturin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Manage dependencies of a local &lt;code&gt;pyproject.toml&lt;/code&gt; and update the virtualenv automatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rye add flask&#xA;$ rye sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Decisions Made&lt;/h2&gt; &#xA;&lt;p&gt;To understand why things are the way they are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Virtualenvs:&lt;/strong&gt; while I personally do not like virtualenvs that much, they are so widespread and have reasonable tooling support, so I chose this over &lt;code&gt;__pypackages__&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Default Dependencies:&lt;/strong&gt; the virtualenvs when they come up are completely void of dependencies. Not even &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;setuptools&lt;/code&gt; are installed into it. Rye manages the virtualenv from outside the virtualenv.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Core Non Standard Stuff:&lt;/strong&gt; Rye (with the exception of it&#39;s own &lt;code&gt;tool&lt;/code&gt; section in the &lt;code&gt;pyproject.toml&lt;/code&gt;) uses standardized keys. That means it uses regular requirements as you would expect. It also does not use a custom lock file format and uses &lt;a href=&#34;https://github.com/jazzband/pip-tools&#34;&gt;&lt;code&gt;pip-tools&lt;/code&gt;&lt;/a&gt; behind the scenes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Pip:&lt;/strong&gt; Rye uses pip, but it does not expose it. It manage dependencies in &lt;code&gt;pyproject.toml&lt;/code&gt; only.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No System Python:&lt;/strong&gt; I can&#39;t deal with any more linux distribution weird Python installations or whatever mess there is on macOS. I used to build my own Pythons that are the same everywhere, now I use &lt;a href=&#34;https://github.com/indygreg/python-build-standalone&#34;&gt;indygreg&#39;s Python builds&lt;/a&gt;. Rye will automatically download and manage Python builds from there. No compiling, no divergence.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Project Local Shims:&lt;/strong&gt; Rye maintains a &lt;code&gt;python&lt;/code&gt; shim that auto discovers the current &lt;code&gt;pyproject.toml&lt;/code&gt; and automatically operates below it. Just add the shims to your shell and you can run &lt;code&gt;python&lt;/code&gt; and it will automatically always operate in the right project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What Could Be?&lt;/h2&gt; &#xA;&lt;p&gt;There are a few shortcomings in the Python packaging world, largely as a result of lack of standardization. Here is what this project ran into over the years:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Python Binary Distributions:&lt;/strong&gt; CPython builds from python.org are completely inadequate. On some platforms you only get an .msi installer, on some you literally only get tarballs. The various Python distributions that became popular over the years are diverging greatly and cause all kinds of nonsense downstream. This is why this Project uses the indygreg standalone builds. I hope that with time someone will start distributing well maintained and reliable Python builds to replace the mess we are dealing with today.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Dev Dependencies:&lt;/strong&gt; Rye currently needs a custom section in the &lt;code&gt;pyproject.toml&lt;/code&gt; to represent dev dependencies. There is no standard in the ecosystem for this. It really should be added.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Local Dependency Overlays:&lt;/strong&gt; There is no standard for how to represent local dependencies. Rust for this purpose has something like &lt;code&gt;{ path = &#34;../foo&#34; }&lt;/code&gt; which allows both remote and local references to co-exist and it rewrites them on publish.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Exposed Pip:&lt;/strong&gt; pip is intentionally not exposed. If you were to install something into the virtualenv, it disappears next time you sync. If you symlink &lt;code&gt;rye&lt;/code&gt; to &lt;code&gt;~/.rye/shims/pip&lt;/code&gt; you can get access to pip without installating it into the virtualenv. There be dragons.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Workspace Spec:&lt;/strong&gt; for monorepos and things of that nature, the Python ecosystem would need a definition of workspaces. Today that does not exist which forces every tool to come up with it&#39;s own solutions to this problem.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Basic Script Section:&lt;/strong&gt; There should be a standard in &lt;code&gt;pyproject.toml&lt;/code&gt; to represent scripts like &lt;code&gt;rye&lt;/code&gt; does in &lt;code&gt;rye.tools.scripts&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adding Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;To add a new dependency run &lt;code&gt;rye add&lt;/code&gt; with the name of the package that you want to install. Additionally a proprietary extension to &lt;code&gt;pyproject.toml&lt;/code&gt; exists to add development only packages. For those add &lt;code&gt;--dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ rye add &#34;flask&amp;gt;=2.0&#34;&#xA;$ rye add --dev black&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adding dependencies will not directly install them. To install them run &lt;code&gt;rye sync&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;h2&gt;Workspaces&lt;/h2&gt; &#xA;&lt;p&gt;To have multiple projects share the same virtualenv, it&#39;s possible to declare workspaces in the &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[tool.rye.workspace]&#xA;members = [&#34;foo-*&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;rye sync&lt;/code&gt; is run in a workspace, then all packages are installed at all times. This also means that they can inter-depend as they will all be installed editable by default.&lt;/p&gt; &#xA;&lt;h2&gt;Lockfiles&lt;/h2&gt; &#xA;&lt;p&gt;Rye does not try to re-invent the world (yet!). This means it uses &lt;code&gt;pip-tools&lt;/code&gt; behind the scenes automatically. As neither &lt;code&gt;pip&lt;/code&gt; nor &lt;code&gt;pip-tools&lt;/code&gt; provide lockfiles today Rye uses generated &lt;code&gt;requirements.txt&lt;/code&gt; files as replacement. Whenever you run &lt;code&gt;rye sync&lt;/code&gt; it updates the &lt;code&gt;requirements.lock&lt;/code&gt; and &lt;code&gt;requirements-dev.lock&lt;/code&gt; files automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;rye run&lt;/code&gt; can be used to invoke a binary from the virtualenv or a configured script. Rye allows you to define basic scripts in the &lt;code&gt;pyproject.toml&lt;/code&gt; in the &lt;code&gt;tool.rye.scripts&lt;/code&gt; section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[tool.rye.scripts]&#xA;serve = &#34;python -m http.server 8000&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;They are only available via &lt;code&gt;rye run &amp;lt;script_name&amp;gt;&lt;/code&gt;. Each script can either be a string or an array where each item is an argument to the script. The scripts will be run with the virtualenv activated.&lt;/p&gt; &#xA;&lt;p&gt;To see what&#39;s available, run &lt;code&gt;rye run&lt;/code&gt; without arguments and it will list all scripts.&lt;/p&gt; &#xA;&lt;h2&gt;Python Distributions&lt;/h2&gt; &#xA;&lt;p&gt;Rye does not use system python installations. Instead it uses Gregory Szorc&#39;s standalone Python builds: &lt;a href=&#34;https://github.com/indygreg/python-build-standalone&#34;&gt;python-build-standalone&lt;/a&gt;. This is done to create a unified experience of Python installations and to avoid incompatibilities created by different Python distributions. Most importantly this also means you never need to compile a Python any more, it just downloads prepared binaries.&lt;/p&gt; &#xA;&lt;h2&gt;Managing Python Toolchains&lt;/h2&gt; &#xA;&lt;p&gt;You can register custom Python toolchains with &lt;code&gt;rye toolchain register&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rye toolchain register ~/Downloads/pypy3.9-v7.3.11-macos_arm64/bin/python&#xA;Registered /Users/mitsuhiko/Downloads/pypy3.9-v7.3.11-macos_arm64/bin/python as pypy@3.9.16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards you can pin it, in this case with &lt;code&gt;rye pin pypy@3.9.16&lt;/code&gt;. The auto detection of the name might not be great, in which case you can provide an explicit name with &lt;code&gt;--name&lt;/code&gt;. To remove downloaded or linked toolchains, you can use the &lt;code&gt;rye toolchain remove&lt;/code&gt; command. To list what&#39;s available, use &lt;code&gt;rye toolchain list&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Global Tools&lt;/h2&gt; &#xA;&lt;p&gt;If you want tools to be installed into isolated virtualenvs (like pipsi and pipx), you can use &lt;code&gt;rye&lt;/code&gt; too (requires &lt;code&gt;~/.rye/shims&lt;/code&gt; to be on the path):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rye install pycowsay&#xA;$ pycowsay Wow&#xA;&#xA;  ---&#xA;&amp;lt; Wow &amp;gt;&#xA;  ---&#xA;   \   ^__^&#xA;    \  (oo)\_______&#xA;       (__)\       )\/\&#xA;           ||----w |&#xA;           ||     ||&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall run &lt;code&gt;rye uninstall pycowsay&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;h2&gt;Using The Virtualenv&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to use the virtual environment. One is to just activate it like you would do normally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ . .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The other is to use &lt;code&gt;rye run &amp;lt;script&amp;gt;&lt;/code&gt; to run a script (installed into &lt;code&gt;.venv/bin&lt;/code&gt;) in the context of the virtual environment. This for instance can be used to run black:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ rye add --dev black&#xA;$ rye sync&#xA;$ rye run black .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;License: MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bhaskatripathi/pdfGPT</title>
    <updated>2023-04-26T01:29:05Z</updated>
    <id>tag:github.com,2023-04-26:/bhaskatripathi/pdfGPT</id>
    <link href="https://github.com/bhaskatripathi/pdfGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PDF GPT allows you to chat with the contents of your PDF file by using GPT capabilities. The only open source solution to turn your pdf files in a chatbot!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pdfGPT&lt;/h1&gt; &#xA;&lt;h3&gt;Problem Description :&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When you pass a large text to Open AI, it suffers from a 4K token limit. It cannot take an entire pdf file as an input&lt;/li&gt; &#xA; &lt;li&gt;Open AI sometimes becomes overtly chatty and returns irrelevant response not directly related to your query. This is because Open AI uses poor embeddings.&lt;/li&gt; &#xA; &lt;li&gt;ChatGPT cannot directly talk to external data. Some solutions use Langchain but it is token hungry if not implemented correctly.&lt;/li&gt; &#xA; &lt;li&gt;There are a number of solutions like &lt;a href=&#34;https://www.chatpdf.com&#34;&gt;https://www.chatpdf.com&lt;/a&gt;, &lt;a href=&#34;https://www.bespacific.com/chat-with-any-pdf&#34;&gt;https://www.bespacific.com/chat-with-any-pdf&lt;/a&gt;, &lt;a href=&#34;https://www.filechat.io&#34;&gt;https://www.filechat.io&lt;/a&gt; they have poor content quality and are prone to hallucination problem. One good way to avoid hallucinations and improve truthfulness is to use improved embeddings. One good solution is to use improved embeddings with Universal Sentence Encoder family of algorithms (Read more here: &lt;a href=&#34;https://tfhub.dev/google/collections/universal-sentence-encoder/1&#34;&gt;https://tfhub.dev/google/collections/universal-sentence-encoder/1&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Solution: What is PDF GPT ?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PDF GPT allows you to chat with an uploaded PDF file using GPT functionalities.&lt;/li&gt; &#xA; &lt;li&gt;The application intelligently breaks the document into smaller chunks and employs a powerful Deep Averaging Network Encoder to generate embeddings.&lt;/li&gt; &#xA; &lt;li&gt;A semantic search is first performed on your pdf content and the most relevant embeddings are passed to the Open AI.&lt;/li&gt; &#xA; &lt;li&gt;A custom logic generates precise responses. The returned response can even cite the page number in square brackets([]) where the information is located, adding credibility to the responses and helping to locate pertinent information quickly. The Responses are much better than the naive responses by Open AI.&lt;/li&gt; &#xA; &lt;li&gt;Andrej Karpathy mentioned in this post that KNN algorithm is most appropriate for similar problems: &lt;a href=&#34;https://twitter.com/karpathy/status/1647025230546886658&#34;&gt;https://twitter.com/karpathy/status/1647025230546886658&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;Demo URL: &lt;a href=&#34;https://bit.ly/41ZXBJM&#34;&gt;https://bit.ly/41ZXBJM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Please star this project if you like it!&lt;/p&gt; &#xA;&lt;h3&gt;UML&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;    participant User&#xA;    participant System&#xA;&#xA;    User-&amp;gt;&amp;gt;System: Enter API Key&#xA;    User-&amp;gt;&amp;gt;System: Upload PDF/PDF URL&#xA;    User-&amp;gt;&amp;gt;System: Ask Question&#xA;    User-&amp;gt;&amp;gt;System: Submit Call to Action&#xA;&#xA;    System-&amp;gt;&amp;gt;System: Blank field Validations&#xA;    System-&amp;gt;&amp;gt;System: Convert PDF to Text&#xA;    System-&amp;gt;&amp;gt;System: Decompose Text to Chunks (150 word length)&#xA;    System-&amp;gt;&amp;gt;System: Check if embeddings file exists&#xA;    System-&amp;gt;&amp;gt;System: If file exists, load embeddings and set the fitted attribute to True&#xA;    System-&amp;gt;&amp;gt;System: If file doesn&#39;t exist, generate embeddings, fit the recommender, save embeddings to file and set fitted attribute to True&#xA;    System-&amp;gt;&amp;gt;System: Perform Semantic Search and return Top 5 Chunks with KNN&#xA;    System-&amp;gt;&amp;gt;System: Load Open AI prompt&#xA;    System-&amp;gt;&amp;gt;System: Embed Top 5 Chunks in Open AI Prompt&#xA;    System-&amp;gt;&amp;gt;System: Generate Answer with Davinci&#xA;&#xA;    System--&amp;gt;&amp;gt;User: Return Answer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flowchart&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart TB&#xA;A[Input] --&amp;gt; B[URL]&#xA;A -- Upload File manually --&amp;gt; C[Parse PDF]&#xA;B --&amp;gt; D[Parse PDF] -- Preprocess --&amp;gt; E[Dynamic Text Chunks]&#xA;C -- Preprocess --&amp;gt; E[Dynamic Text Chunks with citation history]&#xA;E --Fit--&amp;gt;F[Generate text embedding with Deep Averaging Network Encoder on each chunk]&#xA;F -- Query --&amp;gt; G[Get Top Results]&#xA;G -- K-Nearest Neighbour --&amp;gt; K[Get Nearest Neighbour - matching citation references]&#xA;K -- Generate Prompt --&amp;gt; H[Generate Answer]&#xA;H -- Output --&amp;gt; I[Output]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#bhaskatripathi/pdfGPT&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=bhaskatripathi/pdfGPT&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xtekky/gpt4free</title>
    <updated>2023-04-26T01:29:05Z</updated>
    <id>tag:github.com,2023-04-26:/xtekky/gpt4free</id>
    <link href="https://github.com/xtekky/gpt4free" rel="alternate"></link>
    <summary type="html">&lt;p&gt;decentralising the Ai Industry, free gpt-4/3.5 scripts through several reverse engineered api&#39;s ( poe.com, phind.com, chat.openai.com, phind.com, writesonic.com, sqlchat.ai, t3nsor.com, you.com etc...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT4free - use ChatGPT, for free!!&lt;/h1&gt; &#xA;&lt;img width=&#34;1383&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/98614666/233799515-1a7cb6a3-b17f-42c4-956d-8d2a0664466f.png&#34;&gt; &#xA;&lt;p&gt;Have you ever come across some amazing projects that you couldn&#39;t use &lt;strong&gt;just because you didn&#39;t have an OpenAI API key?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We&#39;ve got you covered!&lt;/strong&gt; This repository offers &lt;strong&gt;reverse-engineered&lt;/strong&gt; third-party APIs for &lt;code&gt;GPT-4/3.5&lt;/code&gt;, sourced from various websites. You can simply &lt;strong&gt;download&lt;/strong&gt; this repository, and use the available modules, which are designed to be used &lt;strong&gt;just like OpenAI&#39;s official package&lt;/strong&gt;. &lt;strong&gt;Unleash ChatGPT&#39;s potential for your projects, now!&lt;/strong&gt; You are welcome ; ).&lt;/p&gt; &#xA;&lt;p&gt;By the way, thank you so much for &lt;code&gt;5.3k&lt;/code&gt; stars and all the support!!&lt;/p&gt; &#xA;&lt;h2&gt;Announcement&lt;/h2&gt; &#xA;&lt;p&gt;Dear Gpt4free Community,&lt;/p&gt; &#xA;&lt;p&gt;I want to thank you for your interest in and support of this project, which I only intended to be for entertainment and educational purposes; I had no idea it would end up being so popular.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m aware of the concerns about the project&#39;s legality and its impact on smaller sites hosting APIs. I take these concerns seriously and plan to address them.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s what I&#39;m doing to fix these issues:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Removing APIs from smaller sites: To reduce the impact on smaller sites, I have removed their APIs from the repository. Please shoot me a dm if you are an owner of a site and want it removed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commitment to ethical use: I want to emphasize my commitment to promoting ethical use of language models. I don&#39;t support any illegal or unethical behavior, and I expect users to follow the same principles.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Thank you for your support and understanding. I appreciate your continued interest in gpt4free and am committed to addressing your concerns.&lt;/p&gt; &#xA;&lt;p&gt;Sincerely, xtekky&lt;/p&gt; &#xA;&lt;h2&gt;Legal Notice &lt;a name=&#34;legal-notice&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses third-party APIs and AI models and is &lt;em&gt;not&lt;/em&gt; associated with or endorsed by the API providers or the original developers of the models. This project is intended &lt;strong&gt;for educational purposes only&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: The APIs, services, and trademarks mentioned in this repository belong to their respective owners. This project is &lt;em&gt;not&lt;/em&gt; claiming any right over them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Responsibility&lt;/strong&gt;: The author of this repository is &lt;em&gt;not&lt;/em&gt; responsible for any consequences arising from the use or misuse of this repository or the content provided by the third-party APIs and any damage or losses caused by users&#39; actions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Educational Purposes Only&lt;/strong&gt;: This repository and its content are provided strictly for educational purposes. By using the information and code provided, users acknowledge that they are using the APIs and models at their own risk and agree to comply with any applicable laws and regulations.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#todo&#34;&gt;To do list&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#current-sites&#34;&gt;Current Sites&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#best-sites&#34;&gt;Best Sites for gpt4&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#install&#34;&gt;How to install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#legal-notice&#34;&gt;Legal Notice&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/README.md&#34;&gt;Usage Examples&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/quora/README.md&#34;&gt;&lt;code&gt;quora (poe)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/phind/README.md&#34;&gt;&lt;code&gt;phind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/t3nsor/README.md&#34;&gt;&lt;code&gt;t3nsor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/writesonic/README.md&#34;&gt;&lt;code&gt;writesonic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/you/README.md&#34;&gt;&lt;code&gt;you&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/sqlchat/README.md&#34;&gt;&lt;code&gt;sqlchat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/#replit&#34;&gt;replit Example (feel free to fork this repl)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo &lt;a name=&#34;todo&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add a GUI for the repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a general package named &lt;code&gt;openai_rev&lt;/code&gt;, instead of different folders&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Live api status to know which are down and which can be used&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrate more API&#39;s in &lt;code&gt;./unfinished&lt;/code&gt; as well as other ones in the lists&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make an API to use as proxy for other projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a pypi package&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current Sites &lt;a name=&#34;current-sites&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Website&lt;/th&gt; &#xA;   &lt;th&gt;Model(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://poe.com&#34;&gt;poe.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-4/3.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://writesonic.com&#34;&gt;writesonic.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5 / Internet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://t3nsor.com&#34;&gt;t3nsor.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://you.com&#34;&gt;you.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5 / Internet / good search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://phind.com&#34;&gt;phind.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-4 / Internet / good search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sqlchat.ai&#34;&gt;sqlchat.ai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;chat.openai.com/chat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bard.google.com&#34;&gt;bard.google.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;custom / search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bing.com/chat&#34;&gt;bing.com/chat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPT-4/3.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Best sites &lt;a name=&#34;best-sites&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;gpt-4&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xtekky/gpt4free/main/phind/README.md&#34;&gt;&lt;code&gt;/phind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;pro: only stable gpt-4 with streaming ( no limit )&lt;/li&gt; &#xA; &lt;li&gt;contra: weird backend prompting&lt;/li&gt; &#xA; &lt;li&gt;why not &lt;code&gt;ora&lt;/code&gt; anymore ? gpt-4 requires login + limited&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;gpt-3.5&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;looking for a stable api at the moment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install &lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;download or clone this GitHub repo&lt;br&gt; install requirements with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;To start gpt4free GUI&lt;/h2&gt; &#xA;&lt;p&gt;move &lt;code&gt;streamlit_app.py&lt;/code&gt; from &lt;code&gt;./gui&lt;/code&gt; to the base folder&lt;br&gt; then run:&lt;br&gt; &lt;code&gt;streamlit run streamlit_app.py&lt;/code&gt; or &lt;code&gt;python3 -m streamlit run streamlit_app.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;Build&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t gpt4free:latest -f Docker/Dockerfile .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8501:8501 gpt4free:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ChatGPT clone&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;currently implementing new features and trying to scale it, please be patient it may be unstable&lt;br&gt; &lt;a href=&#34;https://chat.chatbot.sex/chat&#34;&gt;https://chat.chatbot.sex/chat&lt;/a&gt; This site was developed by me and includes &lt;strong&gt;gpt-4/3.5&lt;/strong&gt;, &lt;strong&gt;internet access&lt;/strong&gt; and &lt;strong&gt;gpt-jailbreak&#39;s&lt;/strong&gt; like DAN&lt;br&gt; run locally here: &lt;a href=&#34;https://github.com/xtekky/chatgpt-clone&#34;&gt;https://github.com/xtekky/chatgpt-clone&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Copyright:&lt;/h2&gt; &#xA;&lt;p&gt;This program is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.txt&#34;&gt;GNU GPL v3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Most code, with the exception of &lt;code&gt;quora/api.py&lt;/code&gt; (by &lt;a href=&#34;https://github.com/ading2210&#34;&gt;ading2210&lt;/a&gt;), has been written by me, &lt;a href=&#34;https://github.com/xtekky&#34;&gt;xtekky&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Copyright Notice: &lt;a name=&#34;copyright&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;xtekky/openai-gpt4: multiple reverse engineered language-model api&#39;s to decentralise the ai industry.  &#xA;Copyright (C) 2023 xtekky&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;replit&lt;/h2&gt; &#xA;&lt;p&gt;You can fork this repl to host your own ChatGPT-clone WebUI. &lt;a href=&#34;https://replit.com/@gpt4free/gpt4free-webui&#34;&gt;https://replit.com/@gpt4free/gpt4free-webui&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>