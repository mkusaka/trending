<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-10T01:31:10Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Snailclimb/JavaGuide</title>
    <updated>2022-06-10T01:31:10Z</updated>
    <id>tag:github.com,2022-06-10:/Snailclimb/JavaGuide</id>
    <link href="https://github.com/Snailclimb/JavaGuide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 官方知识星球&lt;/a&gt;来啦！！！如果你需要专属面试小册/一对一交流/简历修改/专属求职指南/学习打卡，不妨花 3 分钟左右看看星球的详细介绍： &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 知识星球详细介绍&lt;/a&gt; （一定要确定自己真的需要再加入，一定要看完详细介绍之后再加我）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/media/sponsor/xingqiu.png&#34; style=&#34;margin: 0 auto; width: 850px;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img-blog.csdnimg.cn/img_convert/1c00413c65d1995993bf2b0daf7b4f03.png#pic_center&#34; width=&#34;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://javaguide.cn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/阅读-read-brightgreen.svg&#34; alt=&#34;阅读&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Snailclimb/JavaGuide&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Snailclimb/JavaGuide&#34; alt=&#34;forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Snailclimb/JavaGuide&#34; alt=&#34;issues&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://gitee.com/SnailClimb/JavaGuide&#34;&gt;Gitee&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;面试专版&lt;/strong&gt; ：准备面试的小伙伴可以考虑面试专版：&lt;a href=&#34;https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7&#34;&gt;《Java 面试进阶指北 》&lt;/a&gt; (质量很高，专为面试打造，配合 JavaGuide 食用)。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;知识星球&lt;/strong&gt; ：专属面试小册/一对一交流/简历修改/专属求职指南，欢迎加入 &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 知识星球&lt;/a&gt;（点击链接即可查看星球的详细介绍，一定一定一定确定自己真的需要再加入，一定一定要看完详细介绍之后再加我）。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;转载须知&lt;/strong&gt; ：以下所有文章如非文首说明为转载皆为我（Guide 哥）的原创，转载在文首注明出处，如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;推荐你通过在线阅读网站进行阅读，体验更好，速度更快！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/&#34;&gt;JavaGuide 在线阅读网站（新版，推荐👍）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snailclimb.gitee.io/javaguide/#/&#34;&gt;JavaGuide 在线阅读版（老版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;你可能需要：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/intro.md&#34;&gt;项目介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/contribution-guideline.md&#34;&gt;贡献指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/faq.md&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/todo&#34;&gt;项目代办.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-01.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-02.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(中)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-03.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/why-there-only-value-passing-in-java.md&#34;&gt;为什么 Java 中只有值传递？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/serialization.md&#34;&gt;Java 序列化详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/reflection.md&#34;&gt;反射机制详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/proxy.md&#34;&gt;Java 代理模式详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/io.md&#34;&gt;IO 模型详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/bigdecimal.md&#34;&gt;BigDecimal 详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;集合&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-01.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(上)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-02.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(下)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-precautions-for-use.md&#34;&gt;Java 容器使用注意事项总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;源码分析&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/arraylist-source-code.md&#34;&gt;ArrayList 源码+扩容机制分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/hashmap-source-code.md&#34;&gt;HashMap(JDK1.8)源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/concurrent-hash-map-source-code.md&#34;&gt;ConcurrentHashMap 源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;并发&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题&lt;/strong&gt; : (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-01.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（基础篇）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-02.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（进阶篇）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;线程池&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-summary.md&#34;&gt;Java 线程池详解&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-best-practices.md&#34;&gt;Java 线程池最佳实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/threadlocal.md&#34;&gt;ThreadLocal 关键字解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-collections.md&#34;&gt;Java 并发容器总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/atomic-classes.md&#34;&gt;Atomic 原子类总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/aqs.md&#34;&gt;AQS 原理以及 AQS 同步组件总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/completablefuture-intro.md&#34;&gt;CompletableFuture入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JVM (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;JVM 这部分内容主要参考 &lt;a href=&#34;https://docs.oracle.com/javase/specs/jvms/se8/html/index.html&#34;&gt;JVM 虚拟机规范-Java8 &lt;/a&gt; 和周志明老师的&lt;a href=&#34;https://book.douban.com/subject/34907497/&#34;&gt;《深入理解Java虚拟机（第3版）》&lt;/a&gt; （强烈建议阅读多遍！）。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/memory-area.md&#34;&gt;Java 内存区域&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-garbage-collection.md&#34;&gt;JVM 垃圾回收&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jdk-monitoring-and-troubleshooting-tools.md&#34;&gt;JDK 监控和故障处理工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-file-structure.md&#34;&gt;类文件结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-loading-process.md&#34;&gt;类加载过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/classloader.md&#34;&gt;类加载器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-parameters-intro.md&#34;&gt;【待完成】最重要的 JVM 参数总结（翻译完善了一半）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-intro.md&#34;&gt;【加餐】大白话带你认识 JVM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;新特性&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Java 8&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-tutorial-translate.md&#34;&gt;Java 8 新特性总结（翻译）&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-common-new-features.md&#34;&gt;Java8常用新特性总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java9.md&#34;&gt;Java 9 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java10.md&#34;&gt;Java 10 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java11.md&#34;&gt;Java 11 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java12-13.md&#34;&gt;Java 12~13 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java14-15.md&#34;&gt;Java 14~15 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;计算机基础&lt;/h2&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=100021725&amp;amp;idx=1&amp;amp;sn=2db9664ca25363139a81691043e9fd8f&amp;amp;chksm=4ea19a1679d61300d8990f7e43bfc7f476577a81b712cf0f9c6f6552a8b219bc081efddb5c54#rd&#34;&gt;图解计算机基础 PDF 下载&lt;/a&gt;&lt;/strong&gt; 。&lt;/p&gt; &#xA;&lt;h3&gt;操作系统&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/operating-system-basic-questions-01.md&#34;&gt;操作系统常见问题总结！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/linux-intro.md&#34;&gt;后端程序员必备的 Linux 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/shell-intro.md&#34;&gt;Shell 编程入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;网络&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/osi&amp;amp;tcp-ip-model.md&#34;&gt;OSI 和 TCP/IP 网络分层模型详解（基础）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http&amp;amp;https.md&#34;&gt;HTTP vs HTTPS（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http1.0&amp;amp;http1.1.md&#34;&gt;HTTP 1.0 vs HTTP 1.1（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/other-network-questions.md&#34;&gt;计算机网络常见知识点&amp;amp;面试题（补充）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/%E8%B0%A2%E5%B8%8C%E4%BB%81%E8%80%81%E5%B8%88%E7%9A%84%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E5%86%85%E5%AE%B9%E6%80%BB%E7%BB%93.md&#34;&gt;谢希仁老师的《计算机网络》内容总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;数据结构&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;图解数据结构：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/linear-data-structure.md&#34;&gt;线性数据结构 :数组、链表、栈、队列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/graph.md&#34;&gt;图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/heap.md&#34;&gt;堆&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/tree.md&#34;&gt;树&lt;/a&gt; ：重点关注&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/red-black-tree.md&#34;&gt;红黑树&lt;/a&gt;、B-，B+，B*树、LSM树&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;其他常用数据结构 ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/bloom-filter.md&#34;&gt;布隆过滤器&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;算法&lt;/h3&gt; &#xA;&lt;p&gt;算法这部分内容非常重要，如果你不知道如何学习算法的话，可以看下我写的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/323359308/answer/1545320858&#34;&gt;算法学习书籍+资源推荐&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/31092580/answer/1534887374&#34;&gt;如何刷Leetcode?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;常见算法问题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/string-algorithm-problems.md&#34;&gt;几道常见的字符串算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/linkedlist-algorithm-problems.md&#34;&gt;几道常见的链表算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/the-sword-refers-to-offer.md&#34;&gt;剑指 offer 部分编程题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/10-classical-sorting-algorithms.md&#34;&gt;十大经典排序算法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，&lt;a href=&#34;https://www.geeksforgeeks.org/fundamentals-of-algorithms/&#34;&gt;GeeksforGeeks&lt;/a&gt; 这个网站总结了常见的算法 ，比较全面系统。&lt;/p&gt; &#xA;&lt;h2&gt;数据库&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/basis.md&#34;&gt;数据库基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/character-set.md&#34;&gt;字符集详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-questions-01.md&#34;&gt;MySQL知识点总结&lt;/a&gt;&lt;/strong&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/a-thousand-lines-of-mysql-study-notes.md&#34;&gt;一千行 MySQL 学习笔记&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-high-performance-optimization-specification-recommendations.md&#34;&gt;MySQL 高性能优化规范建议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-index.md&#34;&gt;MySQL数据库索引总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/transaction-isolation-level.md&#34;&gt;事务隔离级别(图文详解)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-logs.md&#34;&gt;MySQL三大日志(binlog、redo log和undo log)详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/innodb-implementation-of-mvcc.md&#34;&gt;InnoDB存储引擎对MVCC的实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/how-sql-executed-in-mysql.md&#34;&gt;SQL语句在MySQL中的执行过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/some-thoughts-on-database-storage-time.md&#34;&gt;关于数据库中如何存储时间的一点思考&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/index-invalidation-caused-by-implicit-conversion.md&#34;&gt;MySQL中的隐式转换造成的索引失效&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Redis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-01.md&#34;&gt;Redis 常见问题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/3-commonly-used-cache-read-and-write-strategies.md&#34;&gt;3种常用的缓存读写策略&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-memory-fragmentation.md&#34;&gt;Redis 内存碎片&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;搜索引擎&lt;/h2&gt; &#xA;&lt;p&gt;用于提高搜索效率，功能和浏览器搜索引擎类似。比较常见的搜索引擎是 Elasticsearch（推荐） 和 Solr。&lt;/p&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md&#34;&gt;Docker 基本概念解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md&#34;&gt;Docker从入门到上手干事&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Git 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/github-tips.md&#34;&gt;Github 小技巧&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统设计&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/RESTfulAPI.md&#34;&gt;RestFul API 简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/naming.md&#34;&gt;Java 命名之道&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/refactoring.md&#34;&gt;重构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;常用框架&lt;/h3&gt; &#xA;&lt;p&gt;如果你没有接触过 Java Web 开发的话，可以先看一下我总结的 &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md&#34;&gt;《J2EE 基础知识》&lt;/a&gt; 。虽然，这篇文章中的很多内容已经淘汰，但是可以让你对 Java 后台技术发展有更深的认识。&lt;/p&gt; &#xA;&lt;h4&gt;Spring/SpringBoot (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题&lt;/strong&gt; :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-knowledge-and-questions-summary.md&#34;&gt;Spring 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Snailclimb/springboot-guide&#34;&gt;SpringBoot 入门指南&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-common-annotations.md&#34;&gt;Spring/Spring Boot 常用注解总结！安排！&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-transaction.md&#34;&gt;Spring 事务总结&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-design-patterns-summary.md&#34;&gt;Spring 中都用到了那些设计模式?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-boot-auto-assembly-principles.md&#34;&gt;SpringBoot 自动装配原理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;MyBatis&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/mybatis/mybatis-interview.md&#34;&gt;MyBatis 常见面试题总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Spring Cloud&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/springcloud/springcloud-intro.md&#34;&gt;大白话入门 Spring Cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;安全&lt;/h3&gt; &#xA;&lt;h4&gt;认证授权&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/basis-of-authority-certification.md&#34;&gt;认证授权基础&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/jwt-intro.md&#34;&gt;JWT 基本概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/advantages&amp;amp;disadvantages-of-jwt.md&#34;&gt;JWT 优缺点分析以及常见问题解决方案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sso-intro.md&#34;&gt;SSO 单点登录详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;数据脱敏&lt;/h4&gt; &#xA;&lt;p&gt;数据脱敏说的就是我们根据特定的规则对敏感信息数据进行变形，比如我们把手机号、身份证号某些位数使用 * 来代替。&lt;/p&gt; &#xA;&lt;h4&gt;敏感词过滤&lt;/h4&gt; &#xA;&lt;p&gt;系统需要对用户输入的文本进行敏感词过滤如色情、政治、暴力相关的词汇。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sentive-words-filter.md&#34;&gt;《敏感词过滤》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;定时任务&lt;/h3&gt; &#xA;&lt;p&gt;最近有朋友问到定时任务相关的问题。于是，我简单写了一篇文章总结一下定时任务的一些概念以及一些常见的定时任务技术选型：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/schedule-task.md&#34;&gt;《Java定时任务大揭秘》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;分布式&lt;/h2&gt; &#xA;&lt;h3&gt;CAP 理论和 BASE 理论&lt;/h3&gt; &#xA;&lt;p&gt;CAP 也就是 Consistency（一致性）、Availability（可用性）、Partition Tolerance（分区容错性） 这三个单词首字母组合。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; 是 &lt;strong&gt;Basically Available（基本可用）&lt;/strong&gt; 、&lt;strong&gt;Soft-state（软状态）&lt;/strong&gt; 和 &lt;strong&gt;Eventually Consistent（最终一致性）&lt;/strong&gt; 三个短语的缩写。BASE 理论是对 CAP 中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于 CAP 定理逐步演化而来的，它大大降低了我们对系统的要求。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/cap&amp;amp;base-theorem.md&#34;&gt;CAP 理论和 BASE 理论解读&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Paxos 算法和 Raft 算法&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Paxos 算法&lt;/strong&gt; 诞生于 1990 年，这是一种解决分布式系统一致性的经典算法 。但是，由于 Paxos 算法非常难以理解和实现，不断有人尝试简化这一算法。到了2013 年才诞生了一个比 Paxos 算法更易理解和实现的分布式一致性算法—&lt;strong&gt;Raft 算法&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/paxos-algorithm.md&#34;&gt;Paxos 算法解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/raft-algorithm.md&#34;&gt;Raft 算法解读&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RPC&lt;/h3&gt; &#xA;&lt;p&gt;RPC 让调用远程服务调用像调用本地方法那样简单。&lt;/p&gt; &#xA;&lt;p&gt;Dubbo 是一款国产的 RPC 框架，由阿里开源。相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/dubbo.md&#34;&gt;Dubbo 常见问题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/why-use-rpc.md&#34;&gt;服务之间的调用为啥不直接用 HTTP 而用 RPC？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API 网关&lt;/h3&gt; &#xA;&lt;p&gt;网关主要用于请求转发、安全认证、协议转换、容灾。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/api-gateway.md&#34;&gt;为什么要网关？你知道有哪些常见的网关系统？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.meituan.com/2021/05/20/shepherd-api-gateway.html&#34;&gt;百亿规模API网关服务Shepherd的设计与实现&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式 id&lt;/h3&gt; &#xA;&lt;p&gt;在复杂分布式系统中，往往需要对大量的数据和消息进行唯一标识。比如数据量太大之后，往往需要对数据进行分库分表，分库分表后需要有一个唯一 ID 来标识一条数据或消息，数据库的自增 ID 显然不能满足需求。相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-id.md&#34;&gt;为什么要分布式 id ？分布式 id 生成方案有哪些？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式事务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;分布式事务就是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。&lt;/p&gt; &#xA;&lt;h3&gt;分布式协调&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;ZooKeeper&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;前两篇文章可能有内容重合部分，推荐都看一遍。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.md&#34;&gt;【入门】ZooKeeper 相关概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.md&#34;&gt;【进阶】ZooKeeper 相关概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.md&#34;&gt;【实战】ZooKeeper 实战&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;高性能&lt;/h2&gt; &#xA;&lt;h3&gt;消息队列&lt;/h3&gt; &#xA;&lt;p&gt;消息队列在分布式系统中主要是为了解耦和削峰。相关阅读： &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/message-queue.md&#34;&gt;消息队列常见问题总结&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-intro.md&#34;&gt;RabbitMQ 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RocketMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-intro&#34;&gt;RocketMQ 入门&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-questions.md&#34;&gt;RocketMQ 的几个简单问题与答案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kafka&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/kafka-questions-01.md&#34;&gt;Kafka 常见问题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;读写分离&amp;amp;分库分表&lt;/h3&gt; &#xA;&lt;p&gt;读写分离主要是为了将数据库的读和写操作分不到不同的数据库节点上。主服务器负责写，从服务器负责读。另外，一主一从或者一主多从都可以。&lt;/p&gt; &#xA;&lt;p&gt;读写分离可以大幅提高读性能，小幅提高写的性能。因此，读写分离更适合单机并发读请求比较多的场景。&lt;/p&gt; &#xA;&lt;p&gt;分库分表是为了解决由于库、表数据量过大，而导致数据库性能持续下降的问题。&lt;/p&gt; &#xA;&lt;p&gt;常见的分库分表工具有： &lt;code&gt;sharding-jdbc&lt;/code&gt; （当当）、 &lt;code&gt;TSharding&lt;/code&gt; （蘑菇街）、 &lt;code&gt;MyCAT&lt;/code&gt; （基于 Cobar）、 &lt;code&gt;Cobar&lt;/code&gt; （阿里巴巴）...。 推荐使用 &lt;code&gt;sharding-jdbc&lt;/code&gt; 。 因为， &lt;code&gt;sharding-jdbc&lt;/code&gt; 是一款轻量级 &lt;code&gt;Java&lt;/code&gt; 框架，以 &lt;code&gt;jar&lt;/code&gt; 包形式提供服务，不要我们做额外的运维工作，并且兼容性也很好。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读： &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/read-and-write-separation-and-library-subtable.md&#34;&gt;读写分离&amp;amp;分库分表常见问题总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;负载均衡&lt;/h3&gt; &#xA;&lt;p&gt;负载均衡系统通常用于将任务比如用户请求处理分配到多个服务器处理以提高网站、应用或者数据库的性能和可靠性。&lt;/p&gt; &#xA;&lt;p&gt;常见的负载均衡系统包括 3 种：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;DNS 负载均衡&lt;/strong&gt; ：一般用来实现地理级别的均衡。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;硬件负载均衡&lt;/strong&gt; ： 通过单独的硬件设备比如 F5 来实现负载均衡功能（硬件的价格一般很贵）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;软件负载均衡&lt;/strong&gt; ：通过负载均衡软件比如 Nginx 来实现负载均衡功能。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;高可用&lt;/h2&gt; &#xA;&lt;p&gt;高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的 。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读： &lt;strong&gt;《&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/high-availability-system-design.md&#34;&gt;如何设计一个高可用系统？要考虑哪些地方？&lt;/a&gt;》&lt;/strong&gt; 。&lt;/p&gt; &#xA;&lt;h3&gt;限流&lt;/h3&gt; &#xA;&lt;p&gt;限流是从用户访问压力的角度来考虑如何应对系统故障。&lt;/p&gt; &#xA;&lt;p&gt;限流为了对服务端的接口接受请求的频率进行限制，防止服务挂掉。比如某一接口的请求限制为 100 个每秒, 对超过限制的请求放弃处理或者放到队列中等待处理。限流可以有效应对突发请求过多。相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/limit-request.md&#34;&gt;何为限流？限流算法有哪些？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;降级&lt;/h3&gt; &#xA;&lt;p&gt;降级是从系统功能优先级的角度考虑如何应对系统故障。&lt;/p&gt; &#xA;&lt;p&gt;服务降级指的是当服务器压力剧增的情况下，根据当前业务情况及流量对一些服务和页面有策略的降级，以此释放服务器资源以保证核心任务的正常运行。&lt;/p&gt; &#xA;&lt;h3&gt;熔断&lt;/h3&gt; &#xA;&lt;p&gt;熔断和降级是两个比较容易混淆的概念，两者的含义并不相同。&lt;/p&gt; &#xA;&lt;p&gt;降级的目的在于应对系统自身的故障，而熔断的目的在于应对当前系统依赖的外部系统或者第三方系统的故障。&lt;/p&gt; &#xA;&lt;h3&gt;排队&lt;/h3&gt; &#xA;&lt;p&gt;另类的一种限流，类比于现实世界的排队。玩过英雄联盟的小伙伴应该有体会，每次一有活动，就要经历一波排队才能进入游戏。&lt;/p&gt; &#xA;&lt;h3&gt;集群&lt;/h3&gt; &#xA;&lt;p&gt;相同的服务部署多份，避免单点故障。&lt;/p&gt; &#xA;&lt;h3&gt;超时和重试机制&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;一旦用户的请求超过某个时间得不到响应就结束此次请求并抛出异常。&lt;/strong&gt; 如果不进行超时设置可能会导致请求响应速度慢，甚至导致请求堆积进而让系统无法再处理请求。&lt;/p&gt; &#xA;&lt;p&gt;重试的次数一般设为 3 次，再多的重试次数没有好处，反而会加重服务器压力（部分场景使用失败重试机制会不太适合）。在一次重试失败之后通常会加上一个时间间隔 delay 再进行下一次重试，时间间隔 delay 通常建议是随机的。&lt;/p&gt; &#xA;&lt;p&gt;并且，为了更好地保护下游，我们还可以结合断路器。&lt;/p&gt; &#xA;&lt;h3&gt;灾备设计和异地多活&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;灾备&lt;/strong&gt; = 容灾+备份。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;备份&lt;/strong&gt; ： 将系统所产生的的所有重要数据多备份几份。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;容灾&lt;/strong&gt; ： 在异地建立两个完全相同的系统。当某个地方的系统突然挂掉，整个应用系统可以切换到另一个，这样系统就可以正常提供服务了。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;异地多活&lt;/strong&gt; 描述的是将服务部署在异地并且服务同时对外提供服务。和传统的灾备设计的最主要区别在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/T6mMDdtTfBuIiEowCpqu6Q&#34;&gt;搞懂异地多活，看这篇就够了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hMD-IS__4JE5_nQhYPYSTg&#34;&gt;四步构建异地多活&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gk.link/a/10pKZ&#34;&gt;《从零开始学架构》— 28 | 业务高可用的保障：异地多活架构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Git 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Github 小技巧&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md&#34;&gt;Docker 基本概念解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md&#34;&gt;Docker从入门到上手干事&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于作者&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/&#34;&gt;个人介绍 Q&amp;amp;A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/internet-addiction-teenager/&#34;&gt;我曾经也是网瘾少年&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/feelings-after-one-month-of-induction-training/&#34;&gt;入职培训一个月后的感受&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/feelings-of-half-a-year-from-graduation-to-entry/&#34;&gt;从毕业到入职半年的感受&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/my-article-was-stolen-and-made-into-video-and-it-became-popular/&#34;&gt;某培训机构盗我文章做成视频还上了B站热门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star 趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Snailclimb/JavaGuide&amp;amp;type=Date&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;《Java面试突击》:&lt;/strong&gt; 由本文档衍生的专为面试而生的《Java面试突击》PDF 版本&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/#%E5%85%AC%E4%BC%97%E5%8F%B7&#34;&gt;公众号&lt;/a&gt;后台回复 &lt;strong&gt;&#34;面试突击&#34;&lt;/strong&gt; 即可免费领取！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/167598cd2e17b8ec.png&#34; alt=&#34;我的公众号&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/7af97d4dccdb4123a541f336a107ca86.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3a2d826918a44bcbaa8d9272db3ad7d2~tplv-k3u1fbpfcp-watermark.image&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>onnx/onnx</title>
    <updated>2022-06-10T01:31:10Z</updated>
    <id>tag:github.com,2022-06-10:/onnx/onnx</id>
    <link href="https://github.com/onnx/onnx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open standard for machine learning interoperability&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;40%&#34; src=&#34;https://github.com/onnx/onnx/raw/main/docs/ONNX_logo_main.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=5&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/Windows-CI?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=7&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/Linux-CI?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=6&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/MacOS-CI?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3313&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3313/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://onnx.ai&#34;&gt;Open Neural Network Exchange (ONNX)&lt;/a&gt; is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).&lt;/p&gt; &#xA;&lt;p&gt;ONNX is &lt;a href=&#34;http://onnx.ai/supported-tools&#34;&gt;widely supported&lt;/a&gt; and can be found in many frameworks, tools, and hardware. Enabling interoperability between different frameworks and streamlining the path from research to production helps increase the speed of innovation in the AI community. We invite the community to join us and further evolve ONNX.&lt;/p&gt; &#xA;&lt;h1&gt;Use ONNX&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onnx/tutorials&#34;&gt;Tutorials for creating ONNX models&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onnx/models&#34;&gt;Pre-trained ONNX models&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Learn about the ONNX spec&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/Overview.md&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/IR.md&#34;&gt;ONNX intermediate representation spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/Versioning.md&#34;&gt;Versioning principles of the spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/Operators.md&#34;&gt;Operators documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/PythonAPIOverview.md&#34;&gt;Python API Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Programming utilities for working with ONNX Graphs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/ShapeInference.md&#34;&gt;Shape and Type Inference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onnx/optimizer&#34;&gt;Graph Optimization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/VersionConverter.md&#34;&gt;Opset Version Conversion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribute&lt;/h1&gt; &#xA;&lt;p&gt;ONNX is a &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/community/readme.md&#34;&gt;community project&lt;/a&gt;. We encourage you to join the effort and contribute feedback, ideas, and code. You can participate in the &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/community/sigs.md&#34;&gt;Special Interest Groups&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/community/working-groups.md&#34;&gt;Working Groups&lt;/a&gt; to shape the future of ONNX.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;p&gt;If you think some operator should be added to ONNX specification, please read &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/AddNewOp.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Discuss&lt;/h1&gt; &#xA;&lt;p&gt;We encourage you to open &lt;a href=&#34;https://github.com/onnx/onnx/issues&#34;&gt;Issues&lt;/a&gt;, or use &lt;a href=&#34;https://lfaifoundation.slack.com/&#34;&gt;Slack&lt;/a&gt; (If you have not joined yet, please use this &lt;a href=&#34;https://join.slack.com/t/lfaifoundation/shared_invite/zt-o65errpw-gMTbwNr7FnNbVXNVFkmyNA&#34;&gt;link&lt;/a&gt; to join the group) for more real-time discussion.&lt;/p&gt; &#xA;&lt;h1&gt;Follow Us&lt;/h1&gt; &#xA;&lt;p&gt;Stay up to date with the latest ONNX news. [&lt;a href=&#34;https://www.facebook.com/onnxai/&#34;&gt;Facebook&lt;/a&gt;] [&lt;a href=&#34;https://twitter.com/onnxai&#34;&gt;Twitter&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Official Python packages&lt;/h2&gt; &#xA;&lt;p&gt;ONNX released packages are published in PyPi.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://test.pypi.org/project/onnx-weekly/&#34;&gt;Weekly packages&lt;/a&gt; are published in test pypi to enable experimentation and early testing.&lt;/p&gt; &#xA;&lt;h2&gt;Conda packages&lt;/h2&gt; &#xA;&lt;p&gt;A binary build of ONNX is available from &lt;a href=&#34;https://conda.io&#34;&gt;Conda&lt;/a&gt;, in &lt;a href=&#34;https://conda-forge.org/&#34;&gt;conda-forge&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use the &lt;a href=&#34;https://hub.docker.com/r/onnx/onnx-dev&#34;&gt;onnx-dev docker image&lt;/a&gt; for a Linux-based installation without having to worry about dependency versioning.&lt;/p&gt; &#xA;&lt;h2&gt;Build ONNX from Source&lt;/h2&gt; &#xA;&lt;p&gt;Before building from source uninstall any existing versions of onnx &lt;code&gt;pip uninstall onnx&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Generally speaking, you need to install &lt;a href=&#34;https://github.com/protocolbuffers/protobuf&#34;&gt;protobuf C/C++ libraries and tools&lt;/a&gt; before proceeding forward. Then depending on how you installed protobuf, you need to set environment variable CMAKE_ARGS to &#34;-DONNX_USE_PROTOBUF_SHARED_LIBS=ON&#34; or &#34;-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF&#34;. For example, you may need to run the following command:&lt;/p&gt; &#xA;&lt;p&gt;Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CMAKE_ARGS=&#34;-DONNX_USE_PROTOBUF_SHARED_LIBS=ON&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set CMAKE_ARGS=&#34;-DONNX_USE_PROTOBUF_SHARED_LIBS=ON&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ON/OFF depends on what kind of protobuf library you have. Shared libraries are files ending with *.dll/*.so/*.dylib. Static libraries are files ending with *.a/*.lib. This option depends on how you get your protobuf library and how it was built. And it is default OFF. You don&#39;t need to run the commands above if you&#39;d prefer to use a static protobuf library.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;If you are building ONNX from source, it is recommended that you also build Protobuf locally as a static library. The version distributed with conda-forge is a DLL, but ONNX expects it to be a static library. Building protobuf locally also lets you control the version of protobuf. The tested and recommended version is 3.16.0.&lt;/p&gt; &#xA;&lt;p&gt;The instructions in this README assume you are using Visual Studio. It is recommended that you run all the commands from a shell started from &#34;x64 Native Tools Command Prompt for VS 2019&#34; and keep the build system generator for cmake (e.g., cmake -G &#34;Visual Studio 16 2019&#34;) consistent while building protobuf as well as ONNX.&lt;/p&gt; &#xA;&lt;p&gt;You can get protobuf by running the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;git clone https://github.com/protocolbuffers/protobuf.git&#xA;cd protobuf&#xA;git checkout v3.16.0&#xA;cd cmake&#xA;cmake -G &#34;Visual Studio 16 2019&#34; -A x64 -DCMAKE_INSTALL_PREFIX=&amp;lt;protobuf_install_dir&amp;gt; -Dprotobuf_MSVC_STATIC_RUNTIME=OFF -Dprotobuf_BUILD_SHARED_LIBS=OFF -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_EXAMPLES=OFF .&#xA;msbuild protobuf.sln /m /p:Configuration=Release&#xA;msbuild INSTALL.vcxproj /p:Configuration=Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then it will be built as a static library and installed to &amp;lt;protobuf_install_dir&amp;gt;. Please add the bin directory(which contains protoc.exe) to your PATH.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set PATH=&amp;lt;protobuf_install_dir&amp;gt;/bin;%PATH%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: if your protobuf_install_dir contains spaces, &lt;strong&gt;do not&lt;/strong&gt; add quotation marks around it.&lt;/p&gt; &#xA;&lt;p&gt;Alternative: if you don&#39;t want to change your PATH, you can set ONNX_PROTOC_EXECUTABLE instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set CMAKE_ARGS=-DONNX_PROTOC_EXECUTABLE=&amp;lt;full_path_to_protoc.exe&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build ONNX as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/onnx/onnx.git&#xA;cd onnx&#xA;git submodule update --init --recursive&#xA;# prefer lite proto&#xA;set CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;First, you need to install protobuf.&lt;/p&gt; &#xA;&lt;p&gt;Ubuntu users: the quickest way to install protobuf is to run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install python3-pip python3-dev libprotobuf-dev protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build ONNX as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export CMAKE_ARGS=&#34;-DONNX_USE_PROTOBUF_SHARED_LIBS=ON&#34;&#xA;git clone --recursive https://github.com/onnx/onnx.git&#xA;cd onnx&#xA;# prefer lite proto&#xA;set CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, you may need to install it from source. You can use the following commands to do it:&lt;/p&gt; &#xA;&lt;p&gt;Debian/Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/protocolbuffers/protobuf.git&#xA;cd protobuf&#xA;git checkout v3.16.0&#xA;git submodule update --init --recursive&#xA;mkdir build_source &amp;amp;&amp;amp; cd build_source&#xA;cmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release&#xA;make -j$(nproc)&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CentOS/RHEL/Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/protocolbuffers/protobuf.git&#xA;cd protobuf&#xA;git checkout v3.16.0&#xA;git submodule update --init --recursive&#xA;mkdir build_source &amp;amp;&amp;amp; cd build_source&#xA;cmake ../cmake  -DCMAKE_INSTALL_LIBDIR=lib64 -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release&#xA;make -j$(nproc)&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here &#34;-DCMAKE_POSITION_INDEPENDENT_CODE=ON&#34; is crucial. By default static libraries are built without &#34;-fPIC&#34; flag, they are not position independent code. But shared libraries must be position independent code. Python C/C++ extensions(like ONNX) are shared libraries. So if a static library was not built with &#34;-fPIC&#34;, it can&#39;t be linked to such a shared library.&lt;/p&gt; &#xA;&lt;p&gt;Once build is successful, update PATH to include protobuf paths.&lt;/p&gt; &#xA;&lt;p&gt;Then you can build ONNX as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/onnx/onnx.git&#xA;cd onnx&#xA;git submodule update --init --recursive&#xA;# prefer lite proto&#xA;set CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;export NUM_CORES=`sysctl -n hw.ncpu`&#xA;brew update&#xA;brew install autoconf &amp;amp;&amp;amp; brew install automake&#xA;wget https://github.com/protocolbuffers/protobuf/releases/download/v3.16.0/protobuf-cpp-3.16.0.tar.gz&#xA;tar -xvf protobuf-cpp-3.16.0.tar.gz&#xA;cd protobuf-3.16.0&#xA;mkdir build_source &amp;amp;&amp;amp; cd build_source&#xA;cmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release&#xA;make -j${NUM_CORES}&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once build is successful, update PATH to include protobuf paths.&lt;/p&gt; &#xA;&lt;p&gt;Then you can build ONNX as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/onnx/onnx.git&#xA;cd onnx&#xA;# prefer lite proto&#xA;set CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verify Installation&lt;/h2&gt; &#xA;&lt;p&gt;After installation, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;import onnx&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to verify it works.&lt;/p&gt; &#xA;&lt;h2&gt;Common Build Options&lt;/h2&gt; &#xA;&lt;p&gt;For full list refer to CMakeLists.txt &lt;strong&gt;Environment variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;USE_MSVC_STATIC_RUNTIME&lt;/code&gt; should be 1 or 0, not ON or OFF. When set to 1 onnx links statically to runtime library. &lt;strong&gt;Default&lt;/strong&gt;: USE_MSVC_STATIC_RUNTIME=0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DEBUG&lt;/code&gt; should be 0 or 1. When set to 1 onnx is built in debug mode. or debug versions of the dependencies, you need to open the &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/CMakeLists.txt&#34;&gt;CMakeLists file&lt;/a&gt; and append a letter &lt;code&gt;d&lt;/code&gt; at the end of the package name lines. For example, &lt;code&gt;NAMES protobuf-lite&lt;/code&gt; would become &lt;code&gt;NAMES protobuf-lited&lt;/code&gt;. &lt;strong&gt;Default&lt;/strong&gt;: Debug=0&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;CMake variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ONNX_USE_PROTOBUF_SHARED_LIBS&lt;/code&gt; should be ON or OFF. &lt;strong&gt;Default&lt;/strong&gt;: ONNX_USE_PROTOBUF_SHARED_LIBS=OFF USE_MSVC_STATIC_RUNTIME=0 &lt;code&gt;ONNX_USE_PROTOBUF_SHARED_LIBS&lt;/code&gt; determines how onnx links to protobuf libraries.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When set to ON - onnx will dynamically link to protobuf shared libs, PROTOBUF_USE_DLLS will be defined as described &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/raw/master/cmake/README.md#dlls-vs-static-linking&#34;&gt;here&lt;/a&gt;, Protobuf_USE_STATIC_LIBS will be set to OFF and &lt;code&gt;USE_MSVC_STATIC_RUNTIME&lt;/code&gt; must be 0.&lt;/li&gt; &#xA;   &lt;li&gt;When set to OFF - onnx will link statically to protobuf, and Protobuf_USE_STATIC_LIBS will be set to ON (to force the use of the static libraries) and &lt;code&gt;USE_MSVC_STATIC_RUNTIME&lt;/code&gt; can be 0 or 1.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ONNX_USE_LITE_PROTO&lt;/code&gt; should be ON or OFF. When set to ON onnx uses lite protobuf instead of full protobuf. &lt;strong&gt;Default&lt;/strong&gt;: ONNX_USE_LITE_PROTO=OFF&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ONNX_WERROR&lt;/code&gt; should be ON or OFF. When set to ON warnings are treated as errors. &lt;strong&gt;Default&lt;/strong&gt;: ONNX_WERROR=OFF in local builds, ON in CI and release pipelines.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Errors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Note: the &lt;code&gt;import onnx&lt;/code&gt; command does not work from the source checkout directory; in this case you&#39;ll see &lt;code&gt;ModuleNotFoundError: No module named &#39;onnx.onnx_cpp2py_export&#39;&lt;/code&gt;. Change into another directory to fix this error.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Building ONNX on Ubuntu works well, but on CentOS/RHEL and other ManyLinux systems, you might need to open the [CMakeLists file][CMakeLists] and replace all instances of &lt;code&gt;/lib&lt;/code&gt; with &lt;code&gt;/lib64&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;ONNX uses &lt;a href=&#34;https://docs.pytest.org&#34;&gt;pytest&lt;/a&gt; as test driver. In order to run tests, you will first need to install pytest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install pytest nbval&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing pytest, use the following command to run tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/docs/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onnx/onnx/main/LICENSE&#34;&gt;Apache License v2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://onnx.ai/codeofconduct.html&#34;&gt;ONNX Open Source Code of Conduct&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaperMC/Paper</title>
    <updated>2022-06-10T01:31:10Z</updated>
    <id>tag:github.com,2022-06-10:/PaperMC/Paper</id>
    <link href="https://github.com/PaperMC/Paper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paper &lt;a href=&#34;https://github.com/PaperMC/Paper/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/PaperMC/Paper/Build%20Paper/master&#34; alt=&#34;Paper Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/papermc&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/289587909051416579.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/PaperMC&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/papermc?label=GitHub%20Sponsors&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/papermc&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/papermc?label=OpenCollective%20Sponsors&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Support and Project Discussion:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.papermc.io/&#34;&gt;Our forums&lt;/a&gt;, &lt;a href=&#34;https://discord.gg/papermc&#34;&gt;Discord&lt;/a&gt;, or &lt;a href=&#34;https://webchat.esper.net/?channels=paper&#34;&gt;IRC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To (Server Admins)&lt;/h2&gt; &#xA;&lt;p&gt;Paperclip is a jar file that you can download and run just like a normal jar file.&lt;/p&gt; &#xA;&lt;p&gt;Download Paper from our &lt;a href=&#34;https://papermc.io/downloads&#34;&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the Paperclip jar directly from your server. Just like old times&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation on using Paper: &lt;a href=&#34;https://docs.papermc.io&#34;&gt;docs.papermc.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For a sneak peek on upcoming features, &lt;a href=&#34;https://github.com/PaperMC/Paper/projects&#34;&gt;see here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To (Plugin Developers)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See our API patches &lt;a href=&#34;https://raw.githubusercontent.com/PaperMC/Paper/master/patches/api&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See upcoming, pending, and recently added API &lt;a href=&#34;https://github.com/PaperMC/Paper/projects/6&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paper API javadocs here: &lt;a href=&#34;https://papermc.io/javadocs/&#34;&gt;papermc.io/javadocs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Maven Repo (for paper-api):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;repository&amp;gt;&#xA;    &amp;lt;id&amp;gt;papermc&amp;lt;/id&amp;gt;&#xA;    &amp;lt;url&amp;gt;https://repo.papermc.io/repository/maven-public/&amp;lt;/url&amp;gt;&#xA;&amp;lt;/repository&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Artifact Information:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;io.papermc.paper&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;paper-api&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.18.2-R0.1-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Or alternatively, with Gradle:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Repository:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven {&#xA;        url = uri(&#34;https://repo.papermc.io/repository/maven-public/&#34;)&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;    compileOnly(&#34;io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT&#34;)&#xA;}&#xA;&#xA;java {&#xA;    toolchain.languageVersion.set(JavaLanguageVersion.of(17))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How To (Compiling Jar From Source)&lt;/h2&gt; &#xA;&lt;p&gt;To compile Paper, you need JDK 17 and an internet connection.&lt;/p&gt; &#xA;&lt;p&gt;Clone this repo, run &lt;code&gt;./gradlew applyPatches&lt;/code&gt;, then &lt;code&gt;./gradlew createReobfBundlerJar&lt;/code&gt; from your terminal. You can find the compiled jar in the project root&#39;s &lt;code&gt;build/libs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;To get a full list of tasks, run &lt;code&gt;./gradlew tasks&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How To (Pull Request)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/PaperMC/Paper/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support Us&lt;/h2&gt; &#xA;&lt;p&gt;First of all, thank you for considering helping out, we really appreciate that!&lt;/p&gt; &#xA;&lt;p&gt;PaperMC has various recurring expenses, mostly related to infrastructure. Paper uses &lt;a href=&#34;https://opencollective.com/&#34;&gt;Open Collective&lt;/a&gt; via the &lt;a href=&#34;https://opencollective.com/opensource&#34;&gt;Open Source Collective fiscal host&lt;/a&gt; to manage expenses. Open Collective allows us to be extremely transparent, so you can always see how your donations are used. You can read more about finanically supporting PaperMC &lt;a href=&#34;https://papermc.io/sponsors&#34;&gt;on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find our collective &lt;a href=&#34;https://opencollective.com/papermc&#34;&gt;here&lt;/a&gt;, or you can donate via GitHub Sponsors &lt;a href=&#34;https://github.com/sponsors/PaperMC&#34;&gt;here&lt;/a&gt;, which will also go towards the collective.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks To:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com/&#34;&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;YourKit-Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com/&#34;&gt;YourKit&lt;/a&gt;, makers of the outstanding java profiler, support open source projects of all kinds with their full featured &lt;a href=&#34;https://www.yourkit.com/java/profiler&#34;&gt;Java&lt;/a&gt; and &lt;a href=&#34;https://www.yourkit.com/.net/profiler&#34;&gt;.NET&lt;/a&gt; application profilers. We thank them for granting Paper an OSS license so that we can make our software the best it can be.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21148213/121807008-8ffc6700-cc52-11eb-96a7-2f6f260f8fda.png&#34; alt=&#34;&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;, creators of the IntelliJ IDEA, supports Paper with one of their &lt;a href=&#34;https://www.jetbrains.com/opensource/&#34;&gt;Open Source Licenses&lt;/a&gt;. IntelliJ IDEA is the recommended IDE for working with Paper, and most of the Paper team uses it.&lt;/p&gt; &#xA;&lt;p&gt;All our sponsors!&lt;br&gt; &lt;a href=&#34;https://papermc.io/sponsors&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PaperMC/papermc.io/data/sponsors.png&#34; alt=&#34;Sponsor Image&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>