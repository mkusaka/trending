<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-09T01:19:55Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>boxyhq/saas-starter-kit</title>
    <updated>2024-03-09T01:19:55Z</updated>
    <id>tag:github.com,2024-03-09:/boxyhq/saas-starter-kit</id>
    <link href="https://github.com/boxyhq/saas-starter-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üî• Enterprise SaaS Starter Kit - Kickstart your enterprise app development with the Next.js SaaS boilerplate üöÄ&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/boxyhq/jackson/assets/66887028/871d9c0f-d351-49bb-9458-2542830d7910&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://github.com/boxyhq/jackson/assets/66887028/4073c181-0653-4d5b-b74f-e7e84fe79da8&#34;&gt; &#xA; &lt;img alt=&#34;BoxyHQ Banner&#34; src=&#34;https://github.com/boxyhq/jackson/assets/66887028/b40520b7-dbce-400b-88d3-400d1c215ea1&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;‚≠ê Enterprise SaaS Starter Kit&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/boxyhq/saas-starter-kit&#34; alt=&#34;Github stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/boxyhq/saas-starter-kit&#34; alt=&#34;Github issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/boxyhq/saas-starter-kit&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/BoxyHQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/BoxyHQ?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/company/boxyhq&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-blue&#34; alt=&#34;LinkedIn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/uyb7pYt4Pa&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/877585485235630130&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;The Open Source Next.js SaaS boilerplate for Enterprise SaaS app development.&lt;/p&gt; &#xA;&lt;p&gt;Please star ‚≠ê the repo if you want us to continue developing and improving the SaaS Starter Kit! üòÄ&lt;/p&gt; &#xA;&lt;h2&gt;üìñ Additional Resources&lt;/h2&gt; &#xA;&lt;p&gt;Video - &lt;a href=&#34;https://www.youtube.com/watch?v=oF8QIwQIhyo&#34;&gt;BoxyHQ&#39;s SaaS Starter Kit: Your Ultimate Enterprise-Compliant Boilerplate&lt;/a&gt; &lt;br&gt; Blog - &lt;a href=&#34;https://boxyhq.com/blog/enterprise-ready-saas-starter-kit&#34;&gt;Enterprise-ready Saas Starter Kit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next.js-based SaaS starter kit saves you months of development by starting you off with all the features that are the same in every product, so you can focus on what makes your app unique.&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Built With&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io&#34;&gt;Prisma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boxyhq/jackson&#34;&gt;SAML Jackson&lt;/a&gt; (Provides SAML SSO, Directory Sync)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.svix.com/&#34;&gt;Svix&lt;/a&gt; (Provides Webhook Orchestration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/retracedhq/retraced&#34;&gt;Retraced&lt;/a&gt; (Provides Audit Logs Service)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Deployment&lt;/h2&gt; &#xA;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fboxyhq%2Fsaas-starter-kit&amp;amp;env=NEXTAUTH_SECRET,SMTP_HOST,SMTP_PORT,SMTP_USER,SMTP_PASSWORD,SMTP_FROM,DATABASE_URL,APP_URL&#34;&gt; &lt;img width=&#34;90&#34; alt=&#34;Deploy with Vercel&#34; src=&#34;https://vercel.com/button&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://heroku.com/deploy&#34; alt=&#34;Deploy to Heroku&#34;&gt; &lt;img alt=&#34;Deploy to Heroku&#34; src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://cloud.digitalocean.com/apps/new?repo=https://github.com/boxyhq/saas-starter-kit/tree/main&#34; alt=&#34;Deploy to DO&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Deploy to DO&#34; src=&#34;https://www.deploytodo.com/do-btn-blue-ghost.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;‚ú® Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please follow these simple steps to get a local copy up and running.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (Version: &amp;gt;=18.x)&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;NPM&lt;/li&gt; &#xA; &lt;li&gt;Docker compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;h4&gt;1. Setup&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/fork&#34;&gt;Fork&lt;/a&gt; the repository&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository by using this command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/&amp;lt;your_github_username&amp;gt;/saas-starter-kit.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Go to the project folder&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd saas-starter-kit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Install dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Set up your .env file&lt;/h4&gt; &#xA;&lt;p&gt;Duplicate &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Create a database (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;To make the process of installing dependencies easier, we offer a &lt;code&gt;docker-compose.yml&lt;/code&gt; with a Postgres container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Set up database schema&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx prisma db push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;7. Start the server&lt;/h4&gt; &#xA;&lt;p&gt;In a development environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;8. Start the Prisma Studio&lt;/h4&gt; &#xA;&lt;p&gt;Prisma Studio is a visual editor for the data in your database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx prisma studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;9. Testing&lt;/h4&gt; &#xA;&lt;p&gt;We are using &lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt; to execute E2E tests. Add all tests inside the &lt;code&gt;/tests&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Update &lt;code&gt;playwright.config.ts&lt;/code&gt; to change the playwright configuration.&lt;/p&gt; &#xA;&lt;h5&gt;Install Playwright dependencies&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run playwright:update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Run E2E tests&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run test:e2e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: HTML test report is generated inside the &lt;code&gt;report&lt;/code&gt; folder. Currently supported browsers for test execution &lt;code&gt;chromium&lt;/code&gt; and &lt;code&gt;firefox&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Fully customizable boilerplate out of the box, see images below üëáüëáüëá&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/boxyhq/saas-starter-kit/main/public/saas-starter-kit-poster.png&#34; alt=&#34;saas-starter-kit-poster&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü•á Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create account&lt;/li&gt; &#xA; &lt;li&gt;Sign in with Email and Password&lt;/li&gt; &#xA; &lt;li&gt;Sign in with Magic Link&lt;/li&gt; &#xA; &lt;li&gt;Sign in with SAML SSO&lt;/li&gt; &#xA; &lt;li&gt;Sign in with Google [&lt;a href=&#34;https://support.google.com/cloud/answer/6158849?hl=en&#34;&gt;Setting up Google OAuth&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Sign in with GitHub [&lt;a href=&#34;https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;Creating a Github OAuth App&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Directory Sync (SCIM)&lt;/li&gt; &#xA; &lt;li&gt;Update account&lt;/li&gt; &#xA; &lt;li&gt;Create team&lt;/li&gt; &#xA; &lt;li&gt;Invite users to the team&lt;/li&gt; &#xA; &lt;li&gt;Manage team members&lt;/li&gt; &#xA; &lt;li&gt;Update team settings&lt;/li&gt; &#xA; &lt;li&gt;Webhooks &amp;amp; Events&lt;/li&gt; &#xA; &lt;li&gt;Internationalization&lt;/li&gt; &#xA; &lt;li&gt;Audit logs&lt;/li&gt; &#xA; &lt;li&gt;Roles and Permissions&lt;/li&gt; &#xA; &lt;li&gt;Dark mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚û°Ô∏è Coming Soon&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Billing &amp;amp; subscriptions&lt;/li&gt; &#xA; &lt;li&gt;Unit and integration tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for taking the time to contribute! Contributions make the open-source community a fantastic place to learn, inspire, and create. Any contributions you make are greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;Please try to create bug reports that are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Reproducible.&lt;/em&gt; Include steps to reproduce the problem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Specific.&lt;/em&gt; Include as much detail as possible: which version, what environment, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Unique.&lt;/em&gt; Do not duplicate existing opened issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Scoped to a Single Bug.&lt;/em&gt; One bug per report.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§© Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/uyb7pYt4Pa&#34;&gt;Discord&lt;/a&gt; (For live discussion with the Open-Source Community and BoxyHQ team)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/BoxyHQ&#34;&gt;Twitter&lt;/a&gt; / &lt;a href=&#34;https://www.linkedin.com/company/boxyhq&#34;&gt;LinkedIn&lt;/a&gt; (Follow us)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@boxyhq&#34;&gt;Youtube&lt;/a&gt; (Watch community events and tutorials)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/issues&#34;&gt;GitHub Issues&lt;/a&gt; (Contributions, report issues, and product ideas)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üåç Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=boxyhq/saas-starter-kit&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ°Ô∏è License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boxyhq/saas-starter-kit/raw/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>QwenLM/Qwen-Agent</title>
    <updated>2024-03-09T01:19:55Z</updated>
    <id>tag:github.com,2024-03-09:/QwenLM/Qwen-Agent</id>
    <link href="https://github.com/QwenLM/Qwen-Agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Agent framework and applications built upon Qwen1.5, featuring Function Calling, Code Interpreter, RAG, and Chrome extension.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/README_CN.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; ÔΩú English&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/assets/qwen_agent/logo-qwen-agent.png&#34; width=&#34;400&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p&gt;Qwen-Agent is a framework for developing LLM applications based on the instruction following, tool usage, planning, and memory capabilities of Qwen. It also comes with example applications such as Browser Assistant, Code Interpreter, and Custom Assistant.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install dependencies.&#xA;git clone https://github.com/QwenLM/Qwen-Agent.git&#xA;cd Qwen-Agent&#xA;pip install -e ./&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preparation: Model Service&lt;/h2&gt; &#xA;&lt;p&gt;You can either use the model service provided by Alibaba Cloud&#39;s &lt;a href=&#34;https://help.aliyun.com/zh/dashscope/developer-reference/quick-start&#34;&gt;DashScope&lt;/a&gt;, or deploy and use your own model service using the open-source Qwen models.&lt;/p&gt; &#xA;&lt;p&gt;If you choose to use the model service offered by DashScope, please ensure that you set the environment variable &lt;code&gt;DASHSCOPE_API_KEY&lt;/code&gt; to your unique DashScope API key.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, if you prefer to deploy and utilize your own model service, kindly follow the instructions outlined in the &lt;a href=&#34;https://github.com/QwenLM/Qwen1.5?tab=readme-ov-file#deployment&#34;&gt;Deployment&lt;/a&gt; section of Qwen1.5&#39;s README to start an OpenAI-compatible API service.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Your Own Agent&lt;/h2&gt; &#xA;&lt;p&gt;Qwen-Agent provides atomic components such as LLMs and prompts, as well as high-level components such as Agents. The example below uses the Assistant component as an illustration, demonstrating how to add custom tools and quickly develop an agent that uses tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import json&#xA;import os&#xA;&#xA;import json5&#xA;import urllib.parse&#xA;from qwen_agent.agents import Assistant&#xA;from qwen_agent.tools.base import BaseTool, register_tool&#xA;&#xA;llm_cfg = {&#xA;    # Use the model service provided by DashScope:&#xA;    &#39;model&#39;: &#39;qwen-max&#39;,&#xA;    &#39;model_server&#39;: &#39;dashscope&#39;,&#xA;    # &#39;api_key&#39;: &#39;YOUR_DASHSCOPE_API_KEY&#39;,&#xA;    # It will use the `DASHSCOPE_API_KEY&#39; environment variable if &#39;api_key&#39; is not set here.&#xA;&#xA;    # Use your own model service compatible with OpenAI API:&#xA;    # &#39;model&#39;: &#39;Qwen/Qwen1.5-72B-Chat&#39;,&#xA;    # &#39;model_server&#39;: &#39;http://localhost:8000/v1&#39;,  # api_base&#xA;    # &#39;api_key&#39;: &#39;EMPTY&#39;,&#xA;&#xA;    # (Optional) LLM hyperparameters for generation:&#xA;    &#39;generate_cfg&#39;: {&#xA;        &#39;top_p&#39;: 0.8&#xA;    }&#xA;}&#xA;system = &#39;According to the user\&#39;s request, you first draw a picture and then automatically run code to download the picture &#39; + \&#xA;          &#39;and select an image operation from the given document to process the image&#39;&#xA;&#xA;# Add a custom tool named my_image_genÔºö&#xA;@register_tool(&#39;my_image_gen&#39;)&#xA;class MyImageGen(BaseTool):&#xA;    description = &#39;AI painting (image generation) service, input text description, and return the image URL drawn based on text information.&#39;&#xA;    parameters = [{&#xA;        &#39;name&#39;: &#39;prompt&#39;,&#xA;        &#39;type&#39;: &#39;string&#39;,&#xA;        &#39;description&#39;: &#39;Detailed description of the desired image content, in English&#39;,&#xA;        &#39;required&#39;: True&#xA;    }]&#xA;&#xA;    def call(self, params: str, **kwargs) -&amp;gt; str:&#xA;        prompt = json5.loads(params)[&#39;prompt&#39;]&#xA;        prompt = urllib.parse.quote(prompt)&#xA;        return json.dumps(&#xA;            {&#39;image_url&#39;: f&#39;https://image.pollinations.ai/prompt/{prompt}&#39;},&#xA;            ensure_ascii=False)&#xA;&#xA;&#xA;tools = [&#39;my_image_gen&#39;, &#39;code_interpreter&#39;]  # code_interpreter is a built-in tool in Qwen-Agent&#xA;bot = Assistant(llm=llm_cfg,&#xA;                system_message=system,&#xA;                function_list=tools,&#xA;                files=[os.path.abspath(&#39;doc.pdf&#39;)])&#xA;&#xA;messages = []&#xA;while True:&#xA;    query = input(&#39;user question: &#39;)&#xA;    messages.append({&#39;role&#39;: &#39;user&#39;, &#39;content&#39;: query})&#xA;    response = []&#xA;    for response in bot.run(messages=messages):&#xA;        print(&#39;bot response:&#39;, response)&#xA;    messages.extend(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The framework also provides more atomic components for developers to combine. For additional showcases, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h1&gt;Example Application: BrowserQwen&lt;/h1&gt; &#xA;&lt;p&gt;We have also developed an example application based on Qwen-Agent: a &lt;strong&gt;Chrome browser extension&lt;/strong&gt; called BrowserQwen, which has key features such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can discuss with Qwen regarding the current webpage or PDF document.&lt;/li&gt; &#xA; &lt;li&gt;It records the web pages and PDF/Word/PowerPoint materials that you have browsed. It helps you understand multiple pages, summarize your browsing content, and automate writing tasks.&lt;/li&gt; &#xA; &lt;li&gt;It comes with plugin integration, including &lt;strong&gt;Code Interpreter&lt;/strong&gt; for math problem solving and data visualization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;BrowserQwen Demonstration&lt;/h2&gt; &#xA;&lt;p&gt;You can watch the following showcase videos to learn about the basic operations of BrowserQwen:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Long-form writing based on visited webpages and PDFs. &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/assets/qwen_agent/showcase_write_article_based_on_webpages_and_pdfs.mp4&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Drawing a plot using code interpreter based on the given information. &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/assets/qwen_agent/showcase_chat_with_docs_and_code_interpreter.mp4&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uploading files, multi-turn conversation, and data analysis using code interpreter. &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/assets/qwen_agent/showcase_code_interpreter_multi_turn_chat.mp4&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Workstation - Editor Mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;This mode is designed for creating long articles based on browsed web pages and PDFs.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-writing.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;p&gt;&lt;strong&gt;It allows you to call plugins to assist in rich text creation.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-editor-movie.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h3&gt;Workstation - Chat Mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;In this mode, you can engage in multi-webpage QA.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-multi-web-qa.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create data charts using the code interpreter.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-ci.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h3&gt;Browser Assistant&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Web page QA&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-web-qa.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;p&gt;&lt;strong&gt;PDF document QA&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen-Agent/main/assets/screenshot-pdf-qa.png&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h2&gt;BrowserQwen User Guide&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1. Deploy Local Database Service&lt;/h3&gt; &#xA;&lt;p&gt;On your local machine (the machine where you can open the Chrome browser), you will need to deploy a database service to manage your browsing history and conversation history.&lt;/p&gt; &#xA;&lt;p&gt;If you are using DashScope&#39;s model service, then please execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start the database service, specifying the model on DashScope by using the --llm flag.&#xA;# The value of --llm can be one of the following, in increasing order of resource consumption:&#xA;#   - qwen1.5-7b/14b/72b-chat (the same as the open-sourced Qwen1.5 7B/14B/72B Chat model)&#xA;#   - qwen-turbo, qwen-plus, qwen-max (qwen-max is recommended)&#xA;# &#34;YOUR_DASHSCOPE_API_KEY&#34; is a placeholder. The user should replace it with their actual key.&#xA;python run_server.py --llm qwen-max --model_server dashscope --workstation_port 7864 --api_key YOUR_DASHSCOPE_API_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using your own model service instead of DashScope, then please execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Specify the model service, and start the database service.&#xA;# Example: Assuming Qwen/Qwen1.5-72B-Chat is deployed at http://localhost:8000 using vLLM, you can specify the model service as:&#xA;#   --llm Qwen/Qwen1.5-72B-Chat --model_server http://localhost:8000/v1 --api_key EMPTY&#xA;python run_server.py --llm {MODEL} --model_server {API_BASE} --workstation_port 7864 --api_key {API_KEY}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can access &lt;a href=&#34;http://127.0.0.1:7864/&#34;&gt;http://127.0.0.1:7864/&lt;/a&gt; to use the Workstation&#39;s Editor mode and Chat mode.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2. Install Browser Assistant&lt;/h3&gt; &#xA;&lt;p&gt;Install the BrowserQwen Chrome extension:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the Chrome browser and enter &lt;code&gt;chrome://extensions/&lt;/code&gt; in the address bar, then press Enter.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that the &lt;code&gt;Developer mode&lt;/code&gt; in the top right corner is turned on, then click on &lt;code&gt;Load unpacked&lt;/code&gt; to upload the &lt;code&gt;browser_qwen&lt;/code&gt; directory from this project and enable it.&lt;/li&gt; &#xA; &lt;li&gt;Click the extension icon in the top right corner of the Chrome browser to pin BrowserQwen to the toolbar.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that after installing the Chrome extension, you need to refresh the page for the extension to take effect.&lt;/p&gt; &#xA;&lt;p&gt;When you want Qwen to read the content of the current webpage:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click the &lt;code&gt;Add to Qwen&#39;s Reading List&lt;/code&gt; button on the screen to authorize Qwen to analyze the page in the background.&lt;/li&gt; &#xA; &lt;li&gt;Click the Qwen icon in the browser&#39;s top right corner to start interacting with Qwen about the current page&#39;s content.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;This project is currently under active development, and backward compatibility may occasionally be broken.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Important: The code interpreter is not sandboxed, and it executes code in your own environment. Please do not ask Qwen to perform dangerous tasks, and do not directly use the code interpreter for production purposes.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>daytonaio/daytona</title>
    <updated>2024-03-09T01:19:55Z</updated>
    <id>tag:github.com,2024-03-09:/daytonaio/daytona</id>
    <link href="https://github.com/daytonaio/daytona" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open Source Dev Environment Manager.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png&#34;&gt; &#xA;  &lt;img alt=&#34;Daytona logo&#34; src=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png&#34; width=&#34;40%&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache--2.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/daytonaio/daytona&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/daytonaio/daytona&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/daytonaio/daytona/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/daytonaio/daytona&#34; alt=&#34;Issues - daytona&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/daytonaio/daytona&#34; alt=&#34;GitHub Release&#34;&gt; &lt;a href=&#34;https://console.algora.io/org/daytonaio/bounties?status=open&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fdaytonaio%2Fbounties%3Fstatus%3Dopen&#34; alt=&#34;Open Bounties&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://console.algora.io/org/daytonaio/bounties?status=completed&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fdaytonaio%2Fbounties%3Fstatus%3Dcompleted&#34; alt=&#34;Rewarded Bounties&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The Open Source Development Environment Manager&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  Set up a development environment on any infrastructure, with a single command. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+&#34;&gt;Report Bug&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+&#34;&gt;Request Feature&lt;/a&gt; ¬∑ &lt;a href=&#34;https://join.slack.com/t/daytonacommunity/shared_invite/zt-273yohksh-Q5YSB5V7tnQzX2RoTARr7Q&#34;&gt;Join Our Slack&lt;/a&gt; ¬∑ &lt;a href=&#34;https://twitter.com/Daytonaio&#34;&gt;Twitter&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/daytona_demo.gif&#34; width=&#34;40%&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Single Command&lt;/strong&gt;: Activate a fully configured development environment with a single command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Runs everywhere&lt;/strong&gt;: spin up your development environment on any machine ‚Äî whether it&#39;s local, remote, cloud-based, physical server, or a VM &amp;amp; any architecture x86 or ARM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration File Support&lt;/strong&gt;: Initially support for &lt;a href=&#34;https://containers.dev/&#34;&gt;dev container&lt;/a&gt;, ability to expand to DevFile, Nix &amp;amp; Flox (Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prebuilds System&lt;/strong&gt;: Drastically improve environment setup times (Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IDE Support&lt;/strong&gt; : Seamlessly supports &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;VS Code&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.jetbrains.com/remote-development/gateway/&#34;&gt;JetBrains&lt;/a&gt; locally, ready to use without configuration. Includes a built-in Web IDE for added convenience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Git Provider Integration&lt;/strong&gt;: GitHub, GitLab &amp;amp; Bitbucket can be connected, allowing easy repo branch or PR pull and commit back from the workspaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Project Workspace&lt;/strong&gt;: Support for multiple project repositories in the same workspace, making it easy to develop using a micro-service architecture.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reverse Proxy Integration&lt;/strong&gt;: Enable collaboration and streamline feedback loops by leveraging reverse proxy functionality. Access preview ports and the Web IDE seamlessly, even behind firewalls.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensibility&lt;/strong&gt;: Enable extensibility with plugin or provider development. Moreover, in any dynamic language, not just Go(Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Automatically creates a VPN connection between the client machine and the development environment, ensuring a fully secure connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;All Ports&lt;/strong&gt;: The VPN connection enables access to all ports on the development environments, removing the need to setup port forwards over SSH connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Works on my Machine&lt;/strong&gt;: Never experience it again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To install Daytona all you need to do is execute this script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Daytona into ~/bin or ~/.local/bin&#xA;curl -sf -L https://download.daytona.io/daytona/get-server.sh | bash&#xA;&#xA;# OR if you want to install Daytona to /usr/loca/bin or /opt/bin&#xA;# curl -sf -L https://download.daytona.io/daytona/get-server.sh | sudo bash&#xA;&#xA;# Start Daytona server&#xA;daytona server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create your first dev environment by opening a new terminal, and executing just this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;daytona create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start coding.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Why Daytona?&lt;/h2&gt; &#xA;&lt;p&gt;Daytona is a radically simple open source development environment manager.&lt;/p&gt; &#xA;&lt;p&gt;Setting up development environments has become increasingly challenging over time, especially when aiming to set up remotely, where the complexity increases by a order of magnitude. The process is so complex that we&#39;ve compiled a &lt;a href=&#34;https://www.daytona.io/dotfiles/diy-guide-to-transform-any-machine-into-a-codespace&#34;&gt;comprehensive guide&lt;/a&gt; detailing all the necessary steps to set one up‚Äîspanning &lt;strong&gt;5,000 words&lt;/strong&gt;, &lt;strong&gt;7 steps&lt;/strong&gt;, and requiring anywhere from 15 to &lt;strong&gt;45 minutes&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This complexity is unnecessary.&lt;/p&gt; &#xA;&lt;p&gt;With Daytona, you need only to execute a single command: &lt;code&gt;daytona create&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Daytona automates the entire process; provisioning the instance, interpreting and applying the configuration, setting up prebuilds, establishing a secure VPN connection, securely connecting your local or a Web IDE, and assigning a fully qualified domain name to the development environment for easy sharing and collaboration.&lt;/p&gt; &#xA;&lt;p&gt;As a developer, you can immediately start focusing on what matters most‚Äîyour code.&lt;/p&gt; &#xA;&lt;h2&gt;Backstory&lt;/h2&gt; &#xA;&lt;p&gt;We spent most of our careers building cloud development environments. In 2009, we launched what was likely the first commercial &lt;a href=&#34;https://codeanywhere.com&#34;&gt;Cloud IDE&lt;/a&gt; project. At that time, technology was lacking, forcing us to develop everything from scratch‚Äîthe IDE, the environment orchestrator, and almost everything else. A lot of people were interested, and over 2.5 million developers signed up! But we were too early, and we asked too much from our users to change how they worked.&lt;/p&gt; &#xA;&lt;p&gt;Now, 15 years since its inception, we have noticed quite a few things. First, the technology we wished for back then exists now. Second, approximately 50% of developers work in remote dev environments, and third, and most importantly, setting up development environments has become more complex than ever, both locally and to a greater magnitude for remote.&lt;/p&gt; &#xA;&lt;p&gt;So, we took everything we learned and decided to solve these issues once and for all as a fully open-source project. Our goal was to create a single binary that allows you to set up a development environment anywhere you wish, completely free, and finally fulfill the promise that many have attempted to make.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Before starting the installation script, please go over all the necessary requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hardware Resources&lt;/strong&gt;: Depending on the project requirements, ensure your machine has sufficient resources. Minimum hardware specification is 1cpu, 2GB of RAM and 10GB of disk space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Ensure &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker&lt;/a&gt; is installed and running.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Daytona&lt;/h3&gt; &#xA;&lt;p&gt;Daytona allows you to manage your Development Environments using the Daytona CLI. To install it, please execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://download.daytona.io/daytona/get-server.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Initializing Daytona&lt;/h3&gt; &#xA;&lt;p&gt;To initialize Daytona, follow these steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Start the Daytona Service:&lt;/strong&gt; This initiates the Daytona service, which must always be running for Daytona to function. Use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Add Your Git Provider of Choice:&lt;/strong&gt; Daytona supports GitHub, GitLab, and Bitbucket. To add them to your profile, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona git-providers add&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the steps provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Add Your Provider Target:&lt;/strong&gt; This step is for choosing where to deploy Development Environments. By default, Daytona includes a Docker provider to spin up environments on your local machine. For remote development environments, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona target set&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Following the steps this command adds SSH machines to your targets.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Choose Your Default IDE:&lt;/strong&gt; The default setting for Daytona is VS Code locally. If you prefer, you can switch to VS Code - Browser or any IDE from the JetBrains portfolio (Contributions welcome here!) using the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona ide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that you have installed and initialized Daytona, you can proceed to setting up your development environments and start coding instantly.&lt;/p&gt; &#xA;&lt;h3&gt;Creating Dev Environments&lt;/h3&gt; &#xA;&lt;p&gt;Creating development environments with Daytona is a straightforward process, accomplished with just one command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon executing this command, you will be prompted with two questions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Choose the provider to decide where to create a dev environment.&lt;/li&gt; &#xA; &lt;li&gt;Select or type the Git repository you wish to use to create a dev environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After making your selections, press enter, and Daytona will handle the rest. All that remains for you to do is to execute the following command to open your default IDE:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command opens your development environment in your preferred IDE, allowing you to start coding instantly.&lt;/p&gt; &#xA;&lt;h2&gt;How to Extend Daytona&lt;/h2&gt; &#xA;&lt;p&gt;Daytona offers flexibility for extension through the creation of plugins and providers.&lt;/p&gt; &#xA;&lt;h3&gt;Providers&lt;/h3&gt; &#xA;&lt;p&gt;Daytona is designed to be infrastructure-agnostic, capable of creating and managing development environments across various platforms. Providers are the components that encapsulate the logic for provisioning compute resources on a specific target platform. They allow for the configuration of different targets within a single provider, enabling, for instance, multiple AWS profiles within an AWS provider.&lt;/p&gt; &#xA;&lt;p&gt;How does it work? When executing the &lt;code&gt;daytona create&lt;/code&gt; command, Daytona communicates the environment details to the selected provider, which then provisions the necessary compute resources. Once provisioned, Daytona sets up the environment on these resources, allowing the user to interact with the environment seamlessly.&lt;/p&gt; &#xA;&lt;p&gt;Providers are independent projects that adhere to the Daytona Provider interface. They can be developed in nearly any major programming language. More details coming soon.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Plugins enhance Daytona&#39;s core functionalities by adding new CLI commands, API methods, or services within the development environments. They offer configurable settings to tailor the plugin&#39;s behavior to the user&#39;s needs.&lt;/p&gt; &#xA;&lt;p&gt;Similar to providers, plugins are independent projects that conform to the Daytona Plugin interface and can be developed in a wide range of programming languages. More details coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Daytona is Open Source under the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;, and is the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE&#34;&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, you must:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTORS.md&#34;&gt;Contributors&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Agree to the terms by having a commit in your pull request &#34;signing&#34; the file by adding your name and GitHub handle on a new line at the bottom of the file.&lt;/li&gt; &#xA; &lt;li&gt;Make sure your commits Author metadata matches the name and handle you added to the file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This ensures that users, distributors, and other contributors can rely on all the software related to Daytona being contributed under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;License&lt;/a&gt;. No contributions will be accepted without following this process.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards, navigate to the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains Daytona, covered under the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;, except where noted (any Daytona logos or trademarks are not covered under the Apache License, and should be explicitly noted by a LICENSE file.)&lt;/p&gt; &#xA;&lt;p&gt;Daytona is a product produced from this open source software, exclusively by Daytona Platforms, Inc. It is distributed under our commercial terms.&lt;/p&gt; &#xA;&lt;p&gt;Others are allowed to make their own distribution of the software, but they cannot use any of the Daytona trademarks, cloud services, etc.&lt;/p&gt; &#xA;&lt;p&gt;We explicitly grant permission for you to make a build that includes our trademarks while developing Daytona itself. You may not publish or share the build, and you may not use that build to run Daytona for any other purpose.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adapted the Code of Conduct from the &lt;a href=&#34;https://www.contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt;. For more information see the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; or contact &lt;a href=&#34;mailto:codeofconduct@daytona.io&#34;&gt;codeofconduct@daytona.io.&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;For more information on how to use and develop Daytona, talk to us on &lt;a href=&#34;https://join.slack.com/t/daytonacommunity/shared_invite/zt-273yohksh-Q5YSB5V7tnQzX2RoTARr7Q&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>