<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:30:12Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>godotengine/godot</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/godotengine/godot</id>
    <link href="https://github.com/godotengine/godot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Godot Engine – Multi-platform 2D and 3D game engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Godot Engine&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://godotengine.org&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot/master/logo_outlined.svg?sanitize=true&#34; width=&#34;400&#34; alt=&#34;Godot Engine logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;2D and 3D cross-platform game engine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://godotengine.org&#34;&gt;Godot Engine&lt;/a&gt; is a feature-packed, cross-platform game engine to create 2D and 3D games from a unified interface.&lt;/strong&gt; It provides a comprehensive set of &lt;a href=&#34;https://godotengine.org/features&#34;&gt;common tools&lt;/a&gt;, so that users can focus on making games without having to reinvent the wheel. Games can be exported with one click to a number of platforms, including the major desktop platforms (Linux, macOS, Windows), mobile platforms (Android, iOS), as well as Web-based platforms (HTML5) and &lt;a href=&#34;https://docs.godotengine.org/en/latest/tutorials/platform/consoles.html&#34;&gt;consoles&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Free, open source and community-driven&lt;/h2&gt; &#xA;&lt;p&gt;Godot is completely free and open source under the very permissive &lt;a href=&#34;https://godotengine.org/license&#34;&gt;MIT license&lt;/a&gt;. No strings attached, no royalties, nothing. The users&#39; games are theirs, down to the last line of engine code. Godot&#39;s development is fully independent and community-driven, empowering users to help shape their engine to match their expectations. It is supported by the &lt;a href=&#34;https://sfconservancy.org/&#34;&gt;Software Freedom Conservancy&lt;/a&gt; not-for-profit.&lt;/p&gt; &#xA;&lt;p&gt;Before being open sourced in &lt;a href=&#34;https://github.com/godotengine/godot/commit/0b806ee0fc9097fa7bda7ac0109191c9c5e0a1ac&#34;&gt;February 2014&lt;/a&gt;, Godot had been developed by &lt;a href=&#34;https://github.com/reduz&#34;&gt;Juan Linietsky&lt;/a&gt; and &lt;a href=&#34;https://github.com/punto-&#34;&gt;Ariel Manzur&lt;/a&gt; (both still maintaining the project) for several years as an in-house engine, used to publish several work-for-hire titles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot-design/master/screenshots/editor_tps_demo_1920x1080.jpg&#34; alt=&#34;Screenshot of a 3D scene in the Godot Engine editor&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting the engine&lt;/h2&gt; &#xA;&lt;h3&gt;Binary downloads&lt;/h3&gt; &#xA;&lt;p&gt;Official binaries for the Godot editor and the export templates can be found &lt;a href=&#34;https://godotengine.org/download&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling from source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.godotengine.org/en/latest/development/compiling/&#34;&gt;See the official docs&lt;/a&gt; for compilation instructions for every supported platform.&lt;/p&gt; &#xA;&lt;h2&gt;Community and contributing&lt;/h2&gt; &#xA;&lt;p&gt;Godot is not only an engine but an ever-growing community of users and engine developers. The main community channels are listed &lt;a href=&#34;https://godotengine.org/community&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The best way to get in touch with the core engine developers is to join the &lt;a href=&#34;https://chat.godotengine.org&#34;&gt;Godot Contributors Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started contributing to the project, see the &lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and demos&lt;/h2&gt; &#xA;&lt;p&gt;The official documentation is hosted on &lt;a href=&#34;https://docs.godotengine.org&#34;&gt;ReadTheDocs&lt;/a&gt;. It is maintained by the Godot community in its own &lt;a href=&#34;https://github.com/godotengine/godot-docs&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.godotengine.org/en/latest/classes/&#34;&gt;class reference&lt;/a&gt; is also accessible from the Godot editor.&lt;/p&gt; &#xA;&lt;p&gt;We also maintain official demos in their own &lt;a href=&#34;https://github.com/godotengine/godot-demo-projects&#34;&gt;GitHub repository&lt;/a&gt; as well as a list of &lt;a href=&#34;https://github.com/godotengine/awesome-godot&#34;&gt;awesome Godot community resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also a number of other &lt;a href=&#34;https://docs.godotengine.org/en/latest/community/tutorials.html&#34;&gt;learning resources&lt;/a&gt; provided by the community, such as text and video tutorials, demos, etc. Consult the &lt;a href=&#34;https://godotengine.org/community&#34;&gt;community channels&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codetriage.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/godotengine/godot/badges/users.svg?sanitize=true&#34; alt=&#34;Code Triagers Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/godot-engine/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/godot-engine/-/godot/svg-badge.svg?sanitize=true&#34; alt=&#34;Translate on Weblate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/godotengine/godot/alerts&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/godotengine/godot.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts on LGTM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://badgen.net/https/api.tickgit.com/badgen/github.com/godotengine/godot&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skyline-emu/skyline</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/skyline-emu/skyline</id>
    <link href="https://github.com/skyline-emu/skyline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Nintendo Switch homebrew &amp; games on your Android device!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;60%&#34; width=&#34;60%&#34; src=&#34;https://raw.github.com/skyline-emu/branding/master/banner/skyline-banner-rounded.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/XnbXNQM&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/545842171459272705.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&amp;amp;labelColor=404EED&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/BUILDING.md&#34;&gt;Building Guide&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Skyline&lt;/b&gt; is an experimental emulator that runs on &lt;b&gt;ARMv8 Android™&lt;/b&gt; devices and emulates the functionality of a &lt;b&gt;Nintendo Switch™&lt;/b&gt; system, licensed under &lt;a href=&#34;https://github.com/skyline-emu/skyline/raw/master/LICENSE.md&#34;&gt;&lt;b&gt;Mozilla Public License 2.0&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;You can contact the core developers of Skyline at our &lt;strong&gt;&lt;a href=&#34;https://discord.gg/XnbXNQM&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt;. If you have any questions, feel free to ask. It&#39;s also a good place to just keep up with the emulator, as most talk regarding development goes on over there.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;p&gt;A few noteworthy teams/projects who&#39;ve helped us along the way are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ryujinx.org/&#34;&gt;Ryujinx&lt;/a&gt;:&lt;/strong&gt; We&#39;ve used Ryujinx for reference throughout the project, the accuracy of their HLE implementations of Switch subsystems make it an amazing reference. The team behind the project has been extremely helpful with any queries we&#39;ve had and have constantly helped us with any issues we&#39;ve come across. &lt;strong&gt;It should be noted that Skyline is not based on Ryujinx&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;yuzu&lt;/a&gt;:&lt;/strong&gt; Skyline&#39;s shader compiler is a &lt;strong&gt;fork&lt;/strong&gt; of &lt;em&gt;yuzu&lt;/em&gt;&#39;s shader compiler with Skyline-specific changes, using it allowed us to focus on the parts of GPU emulation that we could specifically optimize for mobile while having a high-quality shader compiler implementation as a base. The team behind &lt;em&gt;yuzu&lt;/em&gt; has also often helped us and have graciously provided us with a license exemption.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/&#34;&gt;Switchbrew&lt;/a&gt;:&lt;/strong&gt; We&#39;ve extensively used Switchbrew whether that be their &lt;strong&gt;&lt;a href=&#34;https://switchbrew.org/&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; with its colossal amount of information on the Switch that has saved us countless hours of time or &lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/libnx&#34;&gt;libnx&lt;/a&gt;&lt;/strong&gt; which was crucial to initial development of the emulator to ensure that our HLE kernel and sysmodule implementations were accurate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nintendo Switch&lt;/strong&gt; is a trademark of &lt;strong&gt;Nintendo Co., Ltd&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; is a trademark of &lt;strong&gt;Google LLC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>coolsnowwolf/lede</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/coolsnowwolf/lede</id>
    <link href="https://github.com/coolsnowwolf/lede" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lean&#39;s OpenWrt source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;欢迎来到 Lean 的 Openwrt 源码仓库&lt;/h1&gt; &#xA;&lt;p&gt;如何编译自己需要的 OpenWrt 固件 &lt;a href=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;不要用 root 用户进行编译&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;国内用户编译前最好准备好梯子&lt;/li&gt; &#xA; &lt;li&gt;默认登陆IP 192.168.1.1 密码 password&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;编译命令&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装编译依赖&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y&#xA;sudo apt full-upgrade -y&#xA;sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \&#xA;bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \&#xA;git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \&#xA;libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \&#xA;mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils \&#xA;rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载源代码，更新 feeds 并选择配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/coolsnowwolf/lede&#xA;cd lede&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;make menuconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载 dl 库，编译固件 （-j 后面是线程数，第一次编译推荐用单线程）&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make download -j8&#xA;make V=s -j1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;本套代码保证肯定可以编译成功。里面包括了 R21 所有源代码，包括 IPK 的。&lt;/p&gt; &#xA;&lt;p&gt;你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！&lt;/p&gt; &#xA;&lt;p&gt;二次编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd lede&#xA;git pull&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;make defconfig&#xA;make download -j8&#xA;make V=s -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果需要重新配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf ./tmp &amp;amp;&amp;amp; rm -rf .config&#xA;make menuconfig&#xA;make V=s -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;编译完成后输出路径：bin/targets&lt;/p&gt; &#xA;&lt;h3&gt;如果你使用 WSL/WSL2 进行编译&lt;/h3&gt; &#xA;&lt;p&gt;由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 &lt;code&gt;make&lt;/code&gt; 前面加上：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS 原生系统进行编译&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;在 AppStore 中安装 Xcode&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 Homebrew：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 Homebrew 安装工具链、依赖与基础软件包:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew unlink awk&#xA;brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz&#xA;brew install gcc@11&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;然后输入以下命令，添加到系统环境变量中：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;export PATH=&#34;/usr/local/opt/coreutils/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/findutils/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-getopt/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/grep/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/make/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重新加载一下 shell 启动文件 &lt;code&gt;source ~/.bashrc&lt;/code&gt;，然后输入 &lt;code&gt;bash&lt;/code&gt; 进入 bash shell，就可以和 Linux 一样正常编译了&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;特别提示&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件， SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如有技术问题需要讨论，欢迎加入 QQ 讨论群： OP 共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【 OP 共享技术交流群】：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL&#34; title=&#34;OP共享技术交流群&#34;&gt;点击加入&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;想学习 OpenWrt 开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学 OpenWrt 开发入门培训班助你能学有所成 报名地址：&lt;a href=&#34;http://forgotfun.org/2018/04/openwrt-training-2018.html&#34; title=&#34;报名&#34;&gt;点击报名&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QCA IPQ60xx 开源仓库地址：&lt;a href=&#34;https://github.com/coolsnowwolf/openwrt-gl-ax1800&#34;&gt;https://github.com/coolsnowwolf/openwrt-gl-ax1800&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;稳定版仓库地址：&lt;a href=&#34;https://github.com/coolsnowwolf/openwrt&#34;&gt;https://github.com/coolsnowwolf/openwrt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;软路由介绍&lt;/h2&gt; &#xA;&lt;p&gt;友情推荐不恰饭：如果你在寻找一个低功耗小体积性能不错的 x86 / x64 路由器，我个人建议可以考虑小马v1 的铝合金版本 (N3710 4千兆)：&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.20.144c763fRkK0VZ&amp;amp;id=561126544764&#34;&gt;页面介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/xm5.jpg&#34; alt=&#34;xm1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/xm6.jpg&#34; alt=&#34;xm2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;捐贈&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得此项目对你有帮助，可以捐助我们，以鼓励项目能持续发展，更加完善&lt;/p&gt; &#xA;&lt;p&gt;支付宝 &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/alipay_donate.jpg&#34; alt=&#34;alipay&#34;&gt; 微信 &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/wechat_donate.jpg&#34; alt=&#34;wechat&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Dimbreath/GenshinData</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/Dimbreath/GenshinData</id>
    <link href="https://github.com/Dimbreath/GenshinData" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository containing the game data for the game Genshin Impact.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GenshinData&lt;/h1&gt; &#xA;&lt;p&gt;Repository containing the data for the live version of Genshin Impact. This repository is a work between &lt;a href=&#34;https://github.com/FZFalzar&#34;&gt;FZFalzar&lt;/a&gt; and I. If Mihoyo wants to request for a file to be taken down, please contact us.&lt;/p&gt; &#xA;&lt;p&gt;mhy i sign nda for nt for repo pls dm we need names&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trekhleb/javascript-algorithms</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/trekhleb/javascript-algorithms</id>
    <link href="https://github.com/trekhleb/javascript-algorithms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🇺🇦 UKRAINE &lt;a href=&#34;https://twitter.com/MFA_Ukraine&#34;&gt;IS BEING ATTACKED&lt;/a&gt; BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Help Ukraine via &lt;a href=&#34;https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi&#34;&gt;National Bank of Ukraine&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Help Ukraine via &lt;a href=&#34;https://savelife.in.ua/en/donate/&#34;&gt;SaveLife&lt;/a&gt; fund&lt;/li&gt; &#xA;  &lt;li&gt;More info on &lt;a href=&#34;https://war.ukraine.ua/&#34;&gt;war.ukraine.ua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/trekhleb/javascript-algorithms&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; &#xA;&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&#34;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&#34;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&#34;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&#34;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&#34;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&#34;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&#34;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&#34;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&#34;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&#34;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&#34;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&#34;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&#34;&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&#34;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.vi-VN.md&#34;&gt;&lt;em&gt;Tiếng Việt&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&#34;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data Structures&lt;/h2&gt; &#xA;&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&#34;&gt;Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&#34;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&#34;&gt;Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&#34;&gt;Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&#34;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&#34;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&#34;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&#34;&gt;Trie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&#34;&gt;Tree&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&#34;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&#34;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&#34;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&#34;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&#34;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&#34;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&#34;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&#34;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; &#xA;&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&#34;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&#34;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&#34;&gt;Factorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&#34;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&#34;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&#34;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&#34;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&#34;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&#34;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&#34;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&#34;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&#34;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&#34;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&#34;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&#34;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&#34;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&#34;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&#34;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&#34;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&#34;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&#34;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&#34;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&#34;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&#34;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&#34;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&#34;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&#34;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&#34;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&#34;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;Knapsack Problem&lt;/a&gt; - &#34;0/1&#34; and &#34;Unbound&#34; ones&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt; - &#34;Brute Force&#34; and &#34;Dynamic Programming&#34; (Kadane&#39;s) versions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&#34;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&#34;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/palindrome&#34;&gt;Palindrome&lt;/a&gt; - check if the string is the same in reverse&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&#34;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&#34;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&#34;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&#34;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&#34;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&#34;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&#34;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&#34;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&#34;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&#34;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&#34;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&#34;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&#34;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&#34;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&#34;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&#34;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&#34;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&#34;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&#34;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&#34;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&#34;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&#34;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&#34;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&#34;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&#34;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&#34;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&#34;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&#34;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&#34;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&#34;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&#34;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&#34;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&#34;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&#34;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&#34;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&#34;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&#34;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&#34;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&#34;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&#34;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&#34;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&#34;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://github.com/trekhleb/nano-neuron&#34;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&#34;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&#34;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&#34;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random&#34;&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items&#39; weights&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evolutionary algorithms&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://github.com/trekhleb/self-parking-car-evolution&#34;&gt;Genetic algorithm&lt;/a&gt; - example of how the genetic algorithm may be applied for training the self-parking cars&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&#34;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&#34;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&#34;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&#34;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&#34;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; &#xA;&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&#34;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&#34;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&#34;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&#34;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&#34;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&#34;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&#34;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&#34;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&#34;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&#34;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&#34;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&#34;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&#34;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&#34;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&#34;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&#34;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&#34;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&#34;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&#34;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&#34;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&#34;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&#34;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&#34;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&#34;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&#34;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&#34;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&#34;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&#34;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&#34;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&#34;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&#34;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&#34;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&#34;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&#34;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&#34;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use this repository&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules&#xA;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also make sure that you&#39;re using a correct Node version (&lt;code&gt;&amp;gt;=14.16.0&lt;/code&gt;). If you&#39;re using &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; for Node version management you may run &lt;code&gt;nvm use&lt;/code&gt; from the root folder of the project and the correct version will be picked up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful Information&lt;/h2&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&#34;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Big O Notation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&#34; alt=&#34;Big O graphs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;http://bigocheatsheet.com/&#34;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Big O Notation&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 10 elements&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 100 elements&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Constant&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Logarithmic&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linear&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;1000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;n log(n)&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;600&lt;/td&gt; &#xA;   &lt;td&gt;9000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quadratic&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;10000&lt;/td&gt; &#xA;   &lt;td&gt;1000000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exponential&lt;/td&gt; &#xA;   &lt;td&gt;1024&lt;/td&gt; &#xA;   &lt;td&gt;1.26e+29&lt;/td&gt; &#xA;   &lt;td&gt;1.07e+301&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Factorial&lt;/td&gt; &#xA;   &lt;td&gt;3628800&lt;/td&gt; &#xA;   &lt;td&gt;9.3e+157&lt;/td&gt; &#xA;   &lt;td&gt;4.02e+2567&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Data Structure&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Access&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Search&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Insertion&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Deletion&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;False positives are possible while searching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Best&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Average&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Worst&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Memory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stable&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;depends on gap sequence&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;r - biggest number in array&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k - length of longest key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Project Backers&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You may support this project via ❤️️ &lt;a href=&#34;https://github.com/sponsors/trekhleb&#34;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&#34;https://www.patreon.com/trekhleb&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&#34;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ A few more &lt;a href=&#34;https://trekhleb.dev/projects/&#34;&gt;projects&lt;/a&gt; and &lt;a href=&#34;https://trekhleb.dev/blog/&#34;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&#34;https://trekhleb.dev&#34;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>helix-editor/helix</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/helix-editor/helix</id>
    <link href="https://github.com/helix-editor/helix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A post-modern modal text editor.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/helix-editor/helix/actions&#34;&gt;&lt;img src=&#34;https://github.com/helix-editor/helix/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/helix-editor/helix/master/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A kakoune / neovim inspired editor, written in Rust.&lt;/p&gt; &#xA;&lt;p&gt;The editing model is very heavily based on kakoune; during development I found myself agreeing with most of kakoune&#39;s design decisions.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://helix-editor.com&#34;&gt;website&lt;/a&gt; or &lt;a href=&#34;https://docs.helix-editor.com/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All shortcuts/keymaps can be found &lt;a href=&#34;https://docs.helix-editor.com/keymap.html&#34;&gt;in the documentation on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/helix-editor/helix/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vim-like modal editing&lt;/li&gt; &#xA; &lt;li&gt;Multiple selections&lt;/li&gt; &#xA; &lt;li&gt;Built-in language server support&lt;/li&gt; &#xA; &lt;li&gt;Smart, incremental syntax highlighting and code editing via tree-sitter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s a terminal-based editor first, but I&#39;d like to explore a custom renderer (similar to emacs) in wgpu or skulpin.&lt;/p&gt; &#xA;&lt;p&gt;Note: Only certain languages have indentation definitions at the moment. Check &lt;code&gt;runtime/queries/&amp;lt;lang&amp;gt;/&lt;/code&gt; for &lt;code&gt;indents.scm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Packages are available for various distributions (see &lt;a href=&#34;https://docs.helix-editor.com/install.html&#34;&gt;Installation docs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you would like to build from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/helix-editor/helix&#xA;cd helix&#xA;cargo install --path helix-term&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the &lt;code&gt;hx&lt;/code&gt; binary to &lt;code&gt;$HOME/.cargo/bin&lt;/code&gt; and build tree-sitter grammars. If you want to customize your &lt;code&gt;languages.toml&lt;/code&gt; config, tree-sitter grammars may be manually fetched and built with &lt;code&gt;hx --grammar fetch&lt;/code&gt; and &lt;code&gt;hx --grammar build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Helix also needs its runtime files so make sure to copy/symlink the &lt;code&gt;runtime/&lt;/code&gt; directory into the config directory (for example &lt;code&gt;~/.config/helix/runtime&lt;/code&gt; on Linux/macOS, or &lt;code&gt;%AppData%/helix/runtime&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;xcopy runtime %AppData%/helix/runtime&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux/macos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ln -s $PWD/runtime ~/.config/helix/runtime&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This location can be overridden via the &lt;code&gt;HELIX_RUNTIME&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Packages already solve this for you by wrapping the &lt;code&gt;hx&lt;/code&gt; binary with a wrapper that sets the variable to the install dir.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: running via cargo also doesn&#39;t require setting explicit &lt;code&gt;HELIX_RUNTIME&lt;/code&gt; path, it will automatically detect the &lt;code&gt;runtime&lt;/code&gt; directory in the project root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In order to use LSP features like auto-complete, you will need to &lt;a href=&#34;https://github.com/helix-editor/helix/wiki/How-to-install-the-default-language-servers&#34;&gt;install the appropriate Language Server&lt;/a&gt; for a language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/helix/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/helix.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;p&gt;Helix can be installed on MacOS through homebrew via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap helix-editor/helix&#xA;brew install helix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributing guidelines can be found &lt;a href=&#34;https://raw.githubusercontent.com/helix-editor/helix/master/docs/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting help&lt;/h1&gt; &#xA;&lt;p&gt;Your question might already be answered on the &lt;a href=&#34;https://github.com/helix-editor/helix/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Discuss the project on the community &lt;a href=&#34;https://matrix.to/#/#helix-community:matrix.org&#34;&gt;Matrix Space&lt;/a&gt; (make sure to join &lt;code&gt;#helix-editor:matrix.org&lt;/code&gt; if you&#39;re on a client that doesn&#39;t support Matrix Spaces yet).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cloudflare/cloudflare-docs</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/cloudflare/cloudflare-docs</id>
    <link href="https://github.com/cloudflare/cloudflare-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloudflare’s developer docs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cloudflare Docs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://developers.cloudflare.com/&#34;&gt;View the docs →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudflare/cloudflare-docs/raw/production/CONTRIBUTING.md&#34;&gt;Contribute to the docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; installed on your system and available in your &lt;code&gt;$PATH&lt;/code&gt; as a global binary. Most operating systems are supported – follow the relevant &lt;a href=&#34;https://gohugo.io/getting-started/installing&#34;&gt;Install Hugo&lt;/a&gt; instructions for your operating system guides to get started.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; This project is built with version &lt;code&gt;0.92.2+extended&lt;/code&gt; but &lt;code&gt;0.92.x&lt;/code&gt; is the minimum required version. You may (probably) use a newer version of Hugo, but will be subject to any Hugo changes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You must also have a recent version of Node.js (14+) installed. You may use &lt;a href=&#34;https://github.com/volta-cli/volta&#34;&gt;Volta&lt;/a&gt;, a Node version manager, to install the latest version of Node and &lt;code&gt;npm&lt;/code&gt;, which is a package manager that is included with &lt;code&gt;node&lt;/code&gt;&#39;s installation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl https://get.volta.sh | bash&#xA;$ volta install node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you will need to install the Node.js dependencies for this project using npm or another package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;When making changes to the site, including any content changes, you may run a local development server by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This spawns a server that will be accessible via &lt;code&gt;http://localhost:1313&lt;/code&gt; in your browser. Additionally, any changes made within the project – including &lt;code&gt;content/**&lt;/code&gt; changes – will automatically reload your browser tab(s), allowing you to instantly preview your changes!&lt;/p&gt; &#xA;&lt;p&gt;Additionally, this project includes a CI step for ensuring consistent code style. This applies to all files within the project, including markdown (&lt;code&gt;*.md&lt;/code&gt;) files, but will not affect the content itself or the content&#39;s output display. To see the style error(s), you may run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm run lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, some of these code-style errors may be fixed automatically. To do so, you may run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm run format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For Cloudflare employees&lt;/h2&gt; &#xA;&lt;p&gt;To get write access to this repo, please reach out to the &lt;strong&gt;Developer Docs&lt;/strong&gt; room in chat.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Our docs are deployed using &lt;a href=&#34;https://pages.cloudflare.com&#34;&gt;Cloudflare Pages&lt;/a&gt;. Every commit pushed to production will automatically deploy to &lt;a href=&#34;https://developers.cloudflare.com&#34;&gt;developers.cloudflare.com&lt;/a&gt;, and any pull requests opened will have a corresponding staging URL available in the pull request comments.&lt;/p&gt; &#xA;&lt;h3&gt;License and Legal Notices&lt;/h3&gt; &#xA;&lt;p&gt;Except as otherwise noted, Cloudflare and any contributors grant you a license to the Cloudflare Developer Documentation and other content in this repository under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&#34;https://github.com/cloudflare/cloudflare-docs/raw/production/LICENSE&#34;&gt;LICENSE file&lt;/a&gt;, and grant you a license to any code in the repository under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&#34;https://github.com/cloudflare/cloudflare-docs/raw/production/LICENSE-CODE&#34;&gt;LICENSE-CODE file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cloudflare products and services referenced in the documentation may be either trademarks or registered trademarks of Cloudflare in the United States and/or other countries. The licenses for this project do not grant you rights to use any Cloudflare names, logos, or trademarks. Cloudflare&#39;s general trademark guidelines can be found at &lt;a href=&#34;https://www.cloudflare.com/trademark/&#34;&gt;https://www.cloudflare.com/trademark/&lt;/a&gt;. Cloudflare and any contributors reserve all other rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel, or otherwise.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hasinhayder/hydra</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/hasinhayder/hydra</id>
    <link href="https://github.com/hasinhayder/hydra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hydra is a zero-config API boilerplate with Laravel 9x + Laravel Sanctum that comes with an excellent user and role management API out of the box&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/roxlox/image/upload/v1653133921/hydra/hydra-trnsparent_jcsl4l.png&#34; alt=&#34;Hydra - Zero Config API Boilerplate with Laravel Sanctum&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hydra - Zero Config API Boilerplate with Laravel Sanctum&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/hasinhayder/hydra/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/hasinhayder/hydra/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/hasinhayder/hydra?label=License&amp;amp;style=flat-square&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hydra is a zero-config API boilerplate with Laravel Sanctum and comes with excellent user and role management API out of the box. Start your next big API project with Hydra, focus on building business logic, and save countless hours of writing boring user and role management API again and again.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#hydra---zero-config-api-boilerplate-with-laravel-sanctum&#34;&gt;Hydra - Zero Config API Boilerplate with Laravel Sanctum&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#screencast&#34;&gt;Screencast&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#database-migration-and-seeding&#34;&gt;Database Migration and Seeding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#list-of-default-routes&#34;&gt;List of Default Routes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#default-roles&#34;&gt;Default Roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#routes-documentation&#34;&gt;Routes Documentation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#user-registration&#34;&gt;User Registration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#user-authenticationlogin-admin&#34;&gt;User Authentication/Login (Admin)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#user-authenticationlogin-other-roles&#34;&gt;User Authentication/Login (Other Roles)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#list-users-admin-ability-required&#34;&gt;List Users (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#update-a-user-useradmin-ability-required&#34;&gt;Update a User (User/Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#delete-a-user-admin-ability-required&#34;&gt;Delete a User (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#list-roles-admin-ability-required&#34;&gt;List Roles (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#add-a-new-role-admin-ability-required&#34;&gt;Add a New Role (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#update-a-role-admin-ability-required&#34;&gt;Update a Role (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#delete-a-role-admin-ability-required&#34;&gt;Delete a Role (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#list-available-roles-of-a-user-admin-ability-required&#34;&gt;List Available Roles of a User (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#assign-a-role-to-a-user-admin-ability-required&#34;&gt;Assign a Role to a User (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#delete-a-role-from-a-user-admin-ability-required&#34;&gt;Delete a Role from a User (Admin Ability Required)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#notes&#34;&gt;Notes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#default-role-for-new-users&#34;&gt;Default Role for New Users&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#single-session-or-multiple-session&#34;&gt;Single Session or Multiple Session&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#add-accept-applicationjson-header-in-your-api-calls&#34;&gt;Add &lt;code&gt;Accept: application/json&lt;/code&gt; Header In Your API Calls&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#tutorial&#34;&gt;Tutorial&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#create-a-new-api-controller&#34;&gt;Create a New API Controller&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#add-a-function&#34;&gt;Add a Function&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#create-protected-routes&#34;&gt;Create Protected Routes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#test-protected-routes&#34;&gt;Test Protected Routes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hasinhayder/hydra/master/#protect-a-route-with-laravel-sanctums-ability-and-abilities-middleware&#34;&gt;Protect a Route with Laravel Sanctum&#39;s Ability and Abilities Middleware&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s super easy to get Hydra up and running.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone the project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/hasinhayder/hydra.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;install the dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd hydra&#xA;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Generate application key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Start the webserver&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s mostly it! You have a fully running laravel installation with Sanctum, all configured.&lt;/p&gt; &#xA;&lt;h3&gt;Screencast&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/497775&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/497775.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Database Migration and Seeding&lt;/h2&gt; &#xA;&lt;p&gt;Open your &lt;code&gt;.env&lt;/code&gt; file and change the DATABASE options. You can start with SQLite by following these steps&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new SQLite database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;touch database/hydra.sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or simply create a new file as &lt;strong&gt;hydra.sqlite&lt;/strong&gt; inside your &lt;strong&gt;database&lt;/strong&gt; folder.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;you can run both migrations and seeders together by simply running the following command&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan migrate:fresh --seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;you can run them separately using the following commands&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run Migrations&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan migrate:fresh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now your database has essential tables for user and roles management.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run Database Seeders&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run &lt;code&gt;db:seed&lt;/code&gt;, and you have your first admin user, some essential roles in the roles table, and the relationship correctly setup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that the default admin user is &lt;strong&gt;&lt;a href=&#34;mailto:admin@hydra.project&#34;&gt;admin@hydra.project&lt;/a&gt;&lt;/strong&gt; and the default password is &lt;strong&gt;hydra&lt;/strong&gt;. You should create a new admin user before deploying to production and delete this default admin user. You can do that using the available Hydra user management API or any DB management tool.&lt;/p&gt; &#xA;&lt;h2&gt;List of Default Routes&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of default routes. Run the following artisan command to see this list in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan route:list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/roxlox/image/upload/v1653131647/hydra/default-routes-hydra_fgn9oh.webp&#34; alt=&#34;Hydra - List of Default Routes&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Default Roles&lt;/h2&gt; &#xA;&lt;p&gt;Hydra comes with these &lt;code&gt;super-admin&lt;/code&gt;,&lt;code&gt;admin&lt;/code&gt;,&lt;code&gt;editor&lt;/code&gt;,&lt;code&gt;customer&lt;/code&gt; &amp;amp; &lt;code&gt;user&lt;/code&gt; roles out of the box. For details, open the roles table after database seeding, or open the laravel tinker and experiment with the &lt;code&gt;Role&lt;/code&gt; model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan tinker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;gt;&amp;gt;&amp;gt; Role::select([&#39;id&#39;,&#39;slug&#39;,&#39;name&#39;])-&amp;gt;get()&#xA;//or&#xA;&amp;gt;&amp;gt;&amp;gt; Role::all([&#39;id&#39;,&#39;name&#39;,&#39;slug&#39;])&#xA;//or&#xA;&amp;gt;&amp;gt;&amp;gt; Role::all()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Routes Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s have a look at what Hydra has to offer. Before experimenting with the following API endpoints, run your Hydra project using &lt;code&gt;php artisan serve&lt;/code&gt; command. For the next part of this documentation, we assumed that Hydra is listening at &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;User Registration&lt;/h3&gt; &#xA;&lt;p&gt;You can make an &lt;code&gt;HTTP POST&lt;/code&gt; call to create/register a new user to the following endpoint. Newly created users will have the &lt;code&gt;user&lt;/code&gt; role by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can send a Form Multipart payload or a JSON payload like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;:&#34;Hydra User&#34;,&#xA;    &#34;email&#34;:&#34;user@hydra.project&#34;,&#xA;    &#34;passsword&#34;:&#34;Surprisingly A Good Password&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Voila! Your user has been created and is now ready to log in!&lt;/p&gt; &#xA;&lt;p&gt;If this user already exists, then you will receive a 409 Response like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;user already exists&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;User Authentication/Login (Admin)&lt;/h3&gt; &#xA;&lt;p&gt;Remember Hydra comes with the default admin user? You can log in as an admin by making an HTTP POST call to the following route.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can send a Form Multipart or a JSON payload like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;email&#34;:&#34;admin@hydra.project&#34;,&#xA;    &#34;passsword&#34;:&#34;hydra&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get a JSON response with user token. You need this admin token for making any call to other routes protected by admin ability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 0,&#xA;    &#34;token&#34;: &#34;1|se9wkPKTxevv9jpVgXN8wS5tYKx53wuRLqvRuqCR&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;invalid credentials&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;User Authentication/Login (Other Roles)&lt;/h3&gt; &#xA;&lt;p&gt;You can log in as a user by making an HTTP POST call to the following route&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can send a Form Multipart or a JSON payload like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;email&#34;:&#34;user@hydra.project&#34;,&#xA;    &#34;passsword&#34;:&#34;Surprisingly A Good Password&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get a JSON response with user token. You need this user token for making any calls to other routes protected by user ability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 0,&#xA;    &#34;token&#34;: &#34;2|u0ZUNlNtXgdUmtQSACRU1KWBKAmcaX8Bkhd2xVIf&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;invalid credentials&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List Users (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To list the users, make an &lt;code&gt;HTTP GET&lt;/code&gt; call to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this call.&lt;/p&gt; &#xA;&lt;p&gt;You will get a JSON response with all users available in your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;    {&#xA;        &#34;id&#34;: 1,&#xA;        &#34;name&#34;: &#34;Hydra Admin&#34;,&#xA;        &#34;email&#34;: &#34;admin@hydra.project&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 2,&#xA;        &#34;name&#34;: &#34;Test User&#34;,&#xA;        &#34;email&#34;: &#34;test@hydra.project&#34;&#xA;    },&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update a User (User/Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;Make an &lt;code&gt;HTTP PUT&lt;/code&gt; request to the following route to update an existing user. Replace {userid} with actual user id. You must include a Bearer token obtained from User/Admin authentication. A bearer admin token can update any user. A bearer user token can only update the authenticated user by this token.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users/{userid}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to update the user with id 2, use this endpoint &lt;code&gt;http://localhost:8000/api/users/3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can include &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt;, or both in a URL Encoded Form Data or JSON payload, just like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;:&#34;Captain Cook&#34;,&#xA;    &#34;email&#34;:&#34;captaincook@hydra.project&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will receive the updated user if the bearer token is valid.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: 3,&#xA;    &#34;name&#34;: &#34;Captain Cook&#34;,&#xA;    &#34;email&#34;: &#34;captaincook@hydra.project&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt with an invalid token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;invalid credentials&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a bearer user token attempts to update any other user but itself, a 409 error response will be delivered&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;Not authorized&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt with an invalid &lt;code&gt;user id&lt;/code&gt;, you will receive a 404 not found error response. For example, when you are trying to delete a non-existing user with id 16, you will receive the following response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;No query results for model [App\\Models\\User] 16&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete a User (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To delete an existing user, make a &lt;code&gt;HTTP DELETE&lt;/code&gt; request to the following route. Replace {userid} with actual user id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users/{userid}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example to delete the user with id 2, use this endpoint &lt;code&gt;http://localhost:8000/api/users/2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this call.&lt;/p&gt; &#xA;&lt;p&gt;If the request is successful and the bearer token is valid, you will receive a JSON response like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;error&#34;: 0,&#xA;   &#34;message&#34;: &#34;user deleted&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will receive a 401 error response for any unsuccessful attempt with an invalid token.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;invalid credentials&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt with an invalid &lt;code&gt;user id&lt;/code&gt;, you will receive a 404 not found error response. For example, you will receive the following response when you try to delete a non-existing user with id 16.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;error&#34;: 1,&#xA;   &#34;message&#34;: &#34;No query results for model [App\\Models\\User] 16&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List Roles (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To list the roles, make an &lt;code&gt;HTTP GET&lt;/code&gt; call to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/roles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this call.&lt;/p&gt; &#xA;&lt;p&gt;You will get a JSON response with all the roles available in your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;    {&#xA;        &#34;id&#34;: 1,&#xA;        &#34;name&#34;: &#34;Administrator&#34;,&#xA;        &#34;slug&#34;: &#34;admin&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 2,&#xA;        &#34;name&#34;: &#34;User&#34;,&#xA;        &#34;slug&#34;: &#34;user&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 3,&#xA;        &#34;name&#34;: &#34;Customer&#34;,&#xA;        &#34;slug&#34;: &#34;customer&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 4,&#xA;        &#34;name&#34;: &#34;Editor&#34;,&#xA;        &#34;slug&#34;: &#34;editor&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 5,&#xA;        &#34;name&#34;: &#34;All&#34;,&#xA;        &#34;slug&#34;: &#34;*&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 6,&#xA;        &#34;name&#34;: &#34;Super Admin&#34;,&#xA;        &#34;slug&#34;: &#34;super-admin&#34;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add a New Role (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To list the roles, make an &lt;code&gt;HTTP POST&lt;/code&gt; call to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/roles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You need to supply title of the role as &lt;code&gt;name&lt;/code&gt;, role &lt;code&gt;slug&lt;/code&gt; in your payload as Multipart Form or JSON data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;:&#34;Manager&#34;,&#xA;    &#34;slug&#34;:&#34;manager&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get a JSON response with this newly created role for successful execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;: &#34;Manager&#34;,&#xA;    &#34;slug&#34;: &#34;manager&#34;,&#xA;    &#34;id&#34;: 7&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this role &lt;code&gt;slug&lt;/code&gt; already exists, you will get a 409 error message like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;role already exists&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update a Role (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To update a role, make an &lt;code&gt;HTTP PUT&lt;/code&gt; or &lt;code&gt;HTTP PATCH&lt;/code&gt; request to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/roles/{roleid}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example to update the Customer role, use this endpoint &lt;code&gt;http://localhost:8000/api/roles/3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You need to supply title of the role as &lt;code&gt;name&lt;/code&gt;, and/or role &lt;code&gt;slug&lt;/code&gt; in your payload as Multipart Form or JSON data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;:&#34;Product Customer&#34;,&#xA;    &#34;slug&#34;:&#34;product-customer&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get a JSON response with this updated role for successful execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: 3,&#xA;    &#34;name&#34;: &#34;Product Customer&#34;,&#xA;    &#34;slug&#34;: &#34;product-customer&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that you cannot change a &lt;code&gt;super-admin&lt;/code&gt; or &lt;code&gt;admin&lt;/code&gt; role slug because many API routes in Hydra exclusively require this role to function correctly.&lt;/p&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete a Role (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To delete a role, make an &lt;code&gt;HTTP DELETE&lt;/code&gt; request to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/roles/{roleid}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to delete the Customer role, use this endpoint &lt;code&gt;http://localhost:8000/api/roles/3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this endpoint.&lt;/p&gt; &#xA;&lt;p&gt;You will get a JSON response with this updated role for successful execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 0,&#xA;    &#34;message&#34;: &#34;role has been deleted&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that you cannot delete the &lt;code&gt;admin&lt;/code&gt; role because many API routes in Hydra exclusively require this role to function correctly.&lt;/p&gt; &#xA;&lt;p&gt;If you try to delete the admin role, you will receive the following 422 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: 1,&#xA;    &#34;message&#34;: &#34;you cannot delete this role&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List Available Roles of a User (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To list all available roles for a user, make an &lt;code&gt;HTTP GET&lt;/code&gt; request to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call. Replace {userid} with an actual user id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users/{userid}/roles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example to get all roles assigned to the user with id 2, use this endpoint &lt;code&gt;http://localhost:8000/api/users/2/roles&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this call.&lt;/p&gt; &#xA;&lt;p&gt;For successful execution, you will get a JSON response containing the user with all its assigned roles.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: 2,&#xA;    &#34;name&#34;: &#34;Test User&#34;,&#xA;    &#34;email&#34;: &#34;test@hydra.project&#34;,&#xA;    &#34;roles&#34;: [&#xA;        {&#xA;            &#34;id&#34;: 2,&#xA;            &#34;name&#34;: &#34;User&#34;,&#xA;            &#34;slug&#34;: &#34;user&#34;&#xA;        },&#xA;        {&#xA;            &#34;id&#34;: 3,&#xA;            &#34;name&#34;: &#34;Customer&#34;,&#xA;            &#34;slug&#34;: &#34;customer&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assign a Role to a User (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To assign a role to a user, make an &lt;code&gt;HTTP POST&lt;/code&gt; request to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call. Replace {userid} with an actual user id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users/{userid}/roles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example to assign a role to the user with id 2, use this endpoint &lt;code&gt;http://localhost:8000/api/users/2/roles&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You need to supply &lt;code&gt;role_id&lt;/code&gt; in your payload as Multipart Form or JSON data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;role_id&#34;:3 &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For successful execution, you will get a JSON response containing the user with all its assigned roles.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: 2,&#xA;    &#34;name&#34;: &#34;Test User&#34;,&#xA;    &#34;email&#34;: &#34;test@hydra.project&#34;,&#xA;    &#34;roles&#34;: [&#xA;        {&#xA;            &#34;id&#34;: 2,&#xA;            &#34;name&#34;: &#34;User&#34;,&#xA;            &#34;slug&#34;: &#34;user&#34;&#xA;        },&#xA;        {&#xA;            &#34;id&#34;: 3,&#xA;            &#34;name&#34;: &#34;Customer&#34;,&#xA;            &#34;slug&#34;: &#34;customer&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the user has a &lt;code&gt;Roles&lt;/code&gt; array, and this newly assigned role is present in this array.&lt;/p&gt; &#xA;&lt;p&gt;Please note that it will have no effect if you assign the same &lt;code&gt;role&lt;/code&gt; again to a user.&lt;/p&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete a Role from a User (Admin Ability Required)&lt;/h3&gt; &#xA;&lt;p&gt;To delete a role from a user, make an &lt;code&gt;HTTP DELETE&lt;/code&gt; request to the following route, with Admin Token obtained from Admin Login. Add this token as a standard &lt;code&gt;Bearer Token&lt;/code&gt; to your API call. Replace &lt;code&gt;{userid}&lt;/code&gt; with an actual user id, and &lt;code&gt;{role}&lt;/code&gt; with an actual role id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;http://localhost:8000/api/users/{userid}/roles/{role}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to delete a role with id 3 from the user with id 2, use this endpoint &lt;code&gt;http://localhost:8000/api/users/2/roles/3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;API Payload &amp;amp; Response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No payload is required for this call&lt;/p&gt; &#xA;&lt;p&gt;For successful execution, you will get a JSON response containing the user with all asigned roles to it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: 2,&#xA;    &#34;name&#34;: &#34;Test User&#34;,&#xA;    &#34;email&#34;: &#34;test@hydra.project&#34;,&#xA;    &#34;roles&#34;: [&#xA;        {&#xA;            &#34;id&#34;: 2,&#xA;            &#34;name&#34;: &#34;User&#34;,&#xA;            &#34;slug&#34;: &#34;user&#34;&#xA;        },&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the user has a &lt;code&gt;Roles&lt;/code&gt; array, and the role with id 3 is not present in this array.&lt;/p&gt; &#xA;&lt;p&gt;For any unsuccessful attempt or wrong token, you will receive a 401 error response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;message&#34;: &#34;Unauthenticated.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Default Role for New Users&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;user&lt;/code&gt; role is assigned to them when a new user is created. To change this behavior, open your &lt;code&gt;.env&lt;/code&gt; file and set the value of &lt;code&gt;DEFAULT_ROLE_ID&lt;/code&gt; to any existing role id. New users will have that role by default. For example, if you want your new users to have a &lt;code&gt;customer&lt;/code&gt; role, set &lt;code&gt;DEFAULT_ROLE_ID=3&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Single Session or Multiple Session&lt;/h3&gt; &#xA;&lt;p&gt;Hydra doesn&#39;t invalidate the previously issued access tokens when a user authenticates. So, all access tokens, including the newly created one, will remain valid. If you want to change this behavior and delete all previous tokens when a user authenticates, set &lt;code&gt;DELETE_PREVIOUS_ACCESS_TOKENS_ON_LOGIN&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file. The value of &lt;code&gt;DELETE_PREVIOUS_ACCESS_TOKENS_ON_LOGIN&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;h3&gt;Add &lt;code&gt;Accept: application/json&lt;/code&gt; Header In Your API Calls&lt;/h3&gt; &#xA;&lt;p&gt;This is very important. To properly receive JSON responses, add the following header to your API requests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Accept: application/json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, if you are using &lt;code&gt;curl&lt;/code&gt; you can make a call like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --request GET \&#xA;  --url http://localhost:8000/hydra/version \&#xA;  --header &#39;Accept: application/json&#39; \&#xA;  --header &#39;Content-Type: application/x-www-form-urlencoded&#39; \&#xA;  --data =&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;So you decided to give Hydra a try and create a new protected API endpoint; that&#39;s awesome; let&#39;s dive in.&lt;/p&gt; &#xA;&lt;h3&gt;Create a New API Controller&lt;/h3&gt; &#xA;&lt;p&gt;You can create a normal or a resourceful controller. To keep it simple, I am going with a standard controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan make:controller MessageController&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new file called &lt;code&gt;app/Http/Controlers/MessageController.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add a Function&lt;/h3&gt; &#xA;&lt;p&gt;We will add a simple function that will greet the authenticated user. Since this will be protected using Sanctum middleware, only a request with a valid bearer token will be able to access this endpoint. You don&#39;t need to worry about anything else.&lt;/p&gt; &#xA;&lt;p&gt;Open this file &lt;code&gt;app/Http/Controlers/MessageController.php&lt;/code&gt; and add the following code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Http\Controllers;&#xA;&#xA;use Illuminate\Http\Request;&#xA;&#xA;class MessageController extends Controller&#xA;{&#xA;    public function greet(Request $request){&#xA;        $user = $request-&amp;gt;user();&#xA;&#xA;        $response = [&#xA;            &#34;name&#34;=&amp;gt;$user-&amp;gt;name,&#xA;            &#34;role&#34;=&amp;gt;$user-&amp;gt;roles()-&amp;gt;first()-&amp;gt;name //or $user-&amp;gt;roles()-&amp;gt;first()-&amp;gt;slug&#xA;        ];&#xA;&#xA;        return $response;&#xA;&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create Protected Routes&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s create a protected route &lt;code&gt;http://localhost:8000/api/greet&lt;/code&gt; to use this API&lt;/p&gt; &#xA;&lt;p&gt;Open your &lt;code&gt;routes/api.php&lt;/code&gt; file and add the following line at the end.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;greet&#39;, [MessageController::class,&#39;greet&#39;])-&amp;gt;middleware([&#39;auth:sanctum&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nice! Now we have a route &lt;code&gt;/api/greet&lt;/code&gt; that is only accessible with a valid bearer token.&lt;/p&gt; &#xA;&lt;h3&gt;Test Protected Routes&lt;/h3&gt; &#xA;&lt;p&gt;If you have already created a user, you need his accessToken first. You can use the admin user or create a new user and then log in and note their bearer token. To create or authenticate a user, check the documentation in the beginning.&lt;/p&gt; &#xA;&lt;p&gt;To create a new user, you can place a curl request or use tools like Postman, Insomnia or HTTPie. Here is a quick example using curl.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --request POST \&#xA;  --url http://localhost:8000/api/users \&#xA;  --header &#39;Accept: application/json&#39; \&#xA;  --header &#39;Content-Type: multipart/form-data; boundary=---011000010111000001101001&#39; \&#xA;  --form &#39;name=Hydra User&#39; \&#xA;  --form email=user@hydra.project \&#xA;  --form &#39;password=Surprisingly A Good Password&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Great! Now we have our users. Let&#39;s login as this new user using curl (You can use tools like Postman, Insomnia, or HTTPie)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --request POST \&#xA;  --url http://localhost:8000/api/login \&#xA;  --header &#39;Accept: aplication/json&#39; \&#xA;  --header &#39;Content-Type: application/json&#39; \&#xA;  --data &#39;{&#xA;    &#34;email&#34;:&#34;user@hydra.project&#34;,&#xA;    &#34;password&#34;:&#34;Surprisingly A Good Password&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you have this user&#39;s accessToken in the response, as shown below. Note it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#34;error&#34;:0,&#34;id&#34;:2,&#34;token&#34;:&#34;5|gbiWdd7yJFYiTIgoK1jK3C7HZJtJUK1PnBIToBLN&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bearer token for this user is &lt;code&gt;5|gbiWdd7yJFYiTIgoK1jK3C7HZJtJUK1PnBIToBLN&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s test our protected route. Add this bearer token in your PostMan/Insomnia/HTTPie or Curl call and make a &lt;code&gt;HTTP GET&lt;/code&gt; request to our newly created protected route &lt;code&gt;http://localhost:8000/api/greet&lt;/code&gt;. Here&#39;s an example call with curl&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --request GET \&#xA;  --url http://localhost:8000/api/greet \&#xA;  --header &#39;Accept: application/json&#39; \&#xA;  --header &#39;Authorization: Bearer 5|gbiWdd7yJFYiTIgoK1jK3C7HZJtJUK1PnBIToBLN&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The response will be something like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;    &#34;name&#34;: &#34;user@hydra.project&#34;,&#xA;    &#34;role&#34;: &#34;User&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Great! you have learned how to create your protected API endpoint using Laravel Sanctum and Hydra!&lt;/p&gt; &#xA;&lt;h3&gt;Protect a Route with Laravel Sanctum&#39;s Ability and Abilities Middleware&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s make our newly created API endpoint even more robust. Say, we want our route to be accessible by only admin users. Remember you added the following line in the &lt;code&gt;routes/api.php&lt;/code&gt; file just a few minutes ago? Let&#39;s change it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;greet&#39;, [MessageController::class,&#39;greet&#39;])-&amp;gt;middleware([&#39;auth:sanctum&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change it like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;greet&#39;, [MessageController::class,&#39;greet&#39;])-&amp;gt;middleware([&#39;auth:sanctum&#39;, &#39;ability:admin&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only an &lt;code&gt;HTTP GET&lt;/code&gt; call with a valid admin user&#39;s access token can access this route. If you want this route to be accessible by the users with &lt;code&gt;admin&lt;/code&gt;, &lt;strong&gt;OR&lt;/strong&gt; the &lt;code&gt;user&lt;/code&gt; role, then modify it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;greet&#39;, [MessageController::class,&#39;greet&#39;])-&amp;gt;middleware([&#39;auth:sanctum&#39;, &#39;ability:admin,user&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want this route to be accessible by the users with both &lt;code&gt;user&lt;/code&gt;, &lt;strong&gt;AND&lt;/strong&gt; the &lt;code&gt;customer&lt;/code&gt; role, then modify it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::get(&#39;greet&#39;, [MessageController::class,&#39;greet&#39;])-&amp;gt;middleware([&#39;auth:sanctum&#39;, &#39;abilities:customer,user&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this time we have used the &lt;code&gt;abilities&lt;/code&gt; keyword instead of &lt;code&gt;ability&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great, now you know everything to start creating your next big API project with Laravel &amp;amp; Laravel Sanctum using our powerful boilerplate project called Hydra. Enjoy!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rocboss/paopao-ce</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/rocboss/paopao-ce</id>
    <link href="https://github.com/rocboss/paopao-ce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥A artistic &#34;twitter like&#34; community built on gin+zinc+vue+ts 清新文艺微社区&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;!-- PROJECT SHIELDS --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/rocboss/paopao-ce&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/rocboss/paopao-ce&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/rocboss/paopao-ce?style=flat&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/rocboss/paopao-ce?style=flat&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt; &lt;img src=&#34;https://cdn.rocs.me/static/paopao-logo.png&#34; alt=&#34;Logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;PaoPao&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; 🔥一个清新文艺的微社区 &lt;br&gt; &lt;a href=&#34;https://www.paopao.info/&#34;&gt;View Demo&lt;/a&gt; · &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://www.rocs.me/archives/paopao.html&#34;&gt;Features&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;1. 截图预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-light.jpeg&#34; alt=&#34;明色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-dark.jpeg&#34; alt=&#34;暗色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;更多演示请前往&lt;a href=&#34;https://www.paopao.info&#34;&gt;官网&lt;/a&gt;体验（谢绝灌水）&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/rocboss/paopao-ce/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;2. 快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;2.1 技术栈&lt;/h3&gt; &#xA;&lt;p&gt;PaoPao主要由以下优秀的开源项目/工具构建&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gin-gonic.com/&#34;&gt;Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zinclabs.io/&#34;&gt;Zinc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.naiveui.com/&#34;&gt;Naive UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.2 环境要求&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go (1.17+)&lt;/li&gt; &#xA; &lt;li&gt;Node.js (14+)&lt;/li&gt; &#xA; &lt;li&gt;MySQL (5.7+)&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;Zinc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* Zinc是一款轻量级全文搜索引擎，可以查阅 &lt;a href=&#34;https://zincsearch.com/&#34;&gt;https://zincsearch.com/&lt;/a&gt; 安装&lt;/p&gt; &#xA;&lt;p&gt;以上环境版本为PaoPao官方的开发版本，仅供参考，其他版本的环境未进行充分测试&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;3. 安装说明&lt;/h3&gt; &#xA;&lt;p&gt;克隆代码库&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/rocboss/paopao-ce.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.1 后端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;导入项目根目录下的 &lt;code&gt;paopao.sql&lt;/code&gt; 文件至MySQL数据库&lt;/li&gt; &#xA; &lt;li&gt;拷贝项目根目录下 &lt;code&gt;config.yaml.sample&lt;/code&gt; 文件至 &lt;code&gt;config.yaml&lt;/code&gt;，按照注释完成配置编辑&lt;/li&gt; &#xA; &lt;li&gt;编译后端 &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go mod download&#xA;go build -o paopao-api .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;启动后端 &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x paopao-api&#xA;./paopao-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;3.2 前端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入前端目录 &lt;code&gt;web&lt;/code&gt;，编辑 &lt;code&gt;.env&lt;/code&gt; 文件中后端服务地址，下载依赖包&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ./web&#xA;vim .env&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译前端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;build完成后，可以在dist目录获取编译产出，配置nginx指向至该目录即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;3.3 其他&lt;/h4&gt; &#xA;&lt;p&gt;建议后端服务使用 &lt;code&gt;supervisor&lt;/code&gt; 守护进程，并通过nginx反向代理后，提供API给前端服务调用。 短信通道使用的juhe数据，如果申请不下来，可以考虑替换其他服务商。 代码结构比较简单，喜欢的朋友欢迎给个Star、贡献PR。&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>Grasscutters/Grasscutter</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/Grasscutters/Grasscutter</id>
    <link href="https://github.com/Grasscutters/Grasscutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A server software reimplementation for a certain anime game.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/Grasscutters/Grasscutter/image?description=1&amp;amp;forks=1&amp;amp;issues=1&amp;amp;language=1&amp;amp;logo=https%3A%2F%2Fs2.loli.net%2F2022%2F04%2F25%2FxOiJn7lCdcT5Mw1.png&amp;amp;name=1&amp;amp;owner=1&amp;amp;pulls=1&amp;amp;stargazers=1&amp;amp;theme=Light&#34; alt=&#34;Grasscutter&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img alt=&#34;Documention&#34; src=&#34;https://img.shields.io/badge/Wiki-Grasscutter-blue?style=for-the-badge&amp;amp;link=https://github.com/Grasscutters/Grasscutter/wiki&amp;amp;link=https://github.com/Grasscutters/Grasscutter/wiki&#34;&gt; &#xA; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/Grasscutters/Grasscutter?logo=java&amp;amp;style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/Grasscutters/Grasscutter?style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/Grasscutters/Grasscutter?style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub Workflow Status&#34; src=&#34;https://img.shields.io/github/workflow/status/Grasscutters/Grasscutter/Build?logo=github&amp;amp;style=for-the-badge&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a href=&#34;https://discord.gg/T5vZU6UyeG&#34;&gt;&lt;img alt=&#34;Discord - Grasscutter&#34; src=&#34;https://img.shields.io/discord/965284035985305680?label=Discord&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;EN | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/stable/README_zh-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; We always welcome contributors to the project. Before adding your contribution, please carefully read our &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/raw/stable/CONTRIBUTING.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Current features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logging in&lt;/li&gt; &#xA; &lt;li&gt;Combat&lt;/li&gt; &#xA; &lt;li&gt;Friends list&lt;/li&gt; &#xA; &lt;li&gt;Teleportation&lt;/li&gt; &#xA; &lt;li&gt;Gacha system&lt;/li&gt; &#xA; &lt;li&gt;Co-op &lt;em&gt;partially&lt;/em&gt; works&lt;/li&gt; &#xA; &lt;li&gt;Spawning monsters via console&lt;/li&gt; &#xA; &lt;li&gt;Inventory features (recieving items/characters, upgrading items/characters, etc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick setup guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For support please join our &lt;a href=&#34;https://discord.gg/T5vZU6UyeG&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Java SE - 17 (&lt;a href=&#34;https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html&#34;&gt;link&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you just want to &lt;strong&gt;run it&lt;/strong&gt;, then &lt;strong&gt;jre&lt;/strong&gt; only is fine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoDB (recommended 4.0+)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Proxy daemon: mitmproxy (mitmdump, recommended), Fiddler Classic, etc.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you updated from an older version, delete &lt;code&gt;config.json&lt;/code&gt; to regenerate it.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get &lt;code&gt;grasscutter.jar&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download from &lt;a href=&#34;https://nightly.link/Grasscutters/Grasscutter/workflows/build/stable/Grasscutter.zip&#34;&gt;actions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/stable/#Building&#34;&gt;Build by yourself&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;resources&lt;/code&gt; folder in the directory where grasscutter.jar is located and move your &lt;code&gt;BinOutput&lt;/code&gt; and &lt;code&gt;ExcelBinOutput&lt;/code&gt; folders there &lt;em&gt;(Check the &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/wiki&#34;&gt;wiki&lt;/a&gt; for more details how to get those.)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run Grasscutter with &lt;code&gt;java -jar grasscutter.jar&lt;/code&gt;. &lt;strong&gt;Make sure mongodb service is running as well.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Connecting with the client&lt;/h3&gt; &#xA;&lt;p&gt;½. Create an account using &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/stable/#Commands&#34;&gt;server console command&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Redirect traffic: (choose one)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;mitmdump: &lt;code&gt;mitmdump -s proxy.py -k&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Trust CA certificate:&lt;/p&gt; &lt;p&gt;​ **Note:**The CA certificate is usually stored in &lt;code&gt;% USERPROFILE%\ .mitmproxy&lt;/code&gt;, or you can download it from &lt;code&gt;http://mitm.it&lt;/code&gt;&lt;/p&gt; &lt;p&gt;​ Double click for &lt;a href=&#34;https://docs.microsoft.com/en-us/skype-sdk/sdn/articles/installing-the-trusted-root-certificate#installing-a-trusted-root-certificate&#34;&gt;install&lt;/a&gt; or ...&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Via command line&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;certutil -addstore root %USERPROFILE%\.mitmproxy\mitmproxy-ca-cert.cer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Fiddler Classic: Run Fiddler Classic, turn on &lt;code&gt;Decrypt https traffic&lt;/code&gt; in setting and change the default port there (Tools -&amp;gt; Options -&amp;gt; Connections) to anything other than &lt;code&gt;8888&lt;/code&gt;, and load &lt;a href=&#34;https://github.lunatic.moe/fiddlerscript&#34;&gt;this script&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Melledy/Grasscutter/wiki/Running#traffic-route-map&#34;&gt;Hosts file&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set network proxy to &lt;code&gt;127.0.0.1:8080&lt;/code&gt; or the proxy port you specified.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;you can also use &lt;code&gt;start.cmd&lt;/code&gt; to start servers and proxy daemons automatically&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Grasscutter uses Gradle to handle dependencies &amp;amp; building.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java SE Development Kits - 17&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Windows&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Grasscutters/Grasscutter.git&#xA;cd Grasscutter&#xA;.\gradlew.bat # Setting up environments&#xA;.\gradlew jar # Compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Grasscutters/Grasscutter.git&#xA;cd Grasscutter&#xA;chmod +x gradlew&#xA;./gradlew jar # Compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the output jar in the root of the project folder.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;You might want to use this command (&lt;code&gt;java -jar grasscutter.jar -handbook&lt;/code&gt;) in a cmd that is in the grasscutter folder. It will create a handbook file (GM Handbook.txt) where you can find the item IDs for stuff you want.&lt;/p&gt; &#xA;&lt;p&gt;You may want to use this command (&lt;code&gt;java -jar grasscutter.jar -gachamap&lt;/code&gt;) to generate a mapping file for the gacha record subsystem. The file will be generated to &lt;code&gt;GRASSCUTTER_RESOURCE/gcstatic&lt;/code&gt; folder. Otherwise you may only see number IDs in the gacha record page.&lt;/p&gt; &#xA;&lt;p&gt;There is a dummy user named &#34;Server&#34; in every player&#39;s friends list that you can message to use commands. Commands also work in other chat rooms, such as private/team chats. to run commands ingame, you need to add prefix &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;!&lt;/code&gt; such as &lt;code&gt;/pos&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Commands&lt;/th&gt; &#xA;   &lt;th&gt;Usage&lt;/th&gt; &#xA;   &lt;th&gt;Permission node&lt;/th&gt; &#xA;   &lt;th&gt;Availability&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;Alias&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;account&lt;/td&gt; &#xA;   &lt;td&gt;account &amp;lt;create|delete&amp;gt; &amp;lt;username&amp;gt; [UID]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server only&lt;/td&gt; &#xA;   &lt;td&gt;Creates an account with the specified username and the in-game UID for that account. The UID will be auto generated if not set.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;broadcast&lt;/td&gt; &#xA;   &lt;td&gt;broadcast &amp;lt;message&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;server.broadcast&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Sends a message to all the players.&lt;/td&gt; &#xA;   &lt;td&gt;b&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coop&lt;/td&gt; &#xA;   &lt;td&gt;coop &amp;lt;playerId&amp;gt; &amp;lt;target playerId&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;server.coop&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Forces someone to join the world of others.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;changescene&lt;/td&gt; &#xA;   &lt;td&gt;changescene &amp;lt;scene id&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.changescene&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Switch scenes by scene ID.&lt;/td&gt; &#xA;   &lt;td&gt;scene&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clear&lt;/td&gt; &#xA;   &lt;td&gt;clear &amp;lt;all|wp|art|mat&amp;gt; [UID]&lt;/td&gt; &#xA;   &lt;td&gt;player.clearinv&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Deletes all unequipped and unlocked level 0 artifacts(art)/weapons(wp)/material(all) or all, including 5-star rarity ones from your inventory.&lt;/td&gt; &#xA;   &lt;td&gt;clear&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;drop&lt;/td&gt; &#xA;   &lt;td&gt;drop &amp;lt;itemID|itemName&amp;gt; [amount]&lt;/td&gt; &#xA;   &lt;td&gt;server.drop&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Drops an item around you.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;d&lt;/code&gt; &lt;code&gt;dropitem&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enterdungeon&lt;/td&gt; &#xA;   &lt;td&gt;enterdungeon &amp;lt;dungeon id&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.enterdungeon&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Enter a dungeon by dungeon ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;give&lt;/td&gt; &#xA;   &lt;td&gt;give [player] &amp;lt;itemId|itemName&amp;gt; [amount] [level] [finement]&lt;/td&gt; &#xA;   &lt;td&gt;player.give&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Gives item(s) to you or the specified player. (finement option only weapon.)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;g&lt;/code&gt; &lt;code&gt;item&lt;/code&gt; &lt;code&gt;giveitem&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;givechar&lt;/td&gt; &#xA;   &lt;td&gt;givechar &amp;lt;uid&amp;gt; &amp;lt;avatarId&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.givechar&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Gives the player a specified character.&lt;/td&gt; &#xA;   &lt;td&gt;givec&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;giveart&lt;/td&gt; &#xA;   &lt;td&gt;giveart [player] &amp;lt;artifactId&amp;gt; &amp;lt;mainPropId&amp;gt; [&amp;lt;appendPropId&amp;gt;[,&amp;lt;times&amp;gt;]]... [level]&lt;/td&gt; &#xA;   &lt;td&gt;player.giveart&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Gives the player a specified artifact.&lt;/td&gt; &#xA;   &lt;td&gt;gart&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;giveall&lt;/td&gt; &#xA;   &lt;td&gt;giveall [uid] [amount]&lt;/td&gt; &#xA;   &lt;td&gt;player.giveall&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Gives all items.&lt;/td&gt; &#xA;   &lt;td&gt;givea&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;godmode&lt;/td&gt; &#xA;   &lt;td&gt;godmode [uid]&lt;/td&gt; &#xA;   &lt;td&gt;player.godmode&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Prevents you from taking damage.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;heal&lt;/td&gt; &#xA;   &lt;td&gt;heal&lt;/td&gt; &#xA;   &lt;td&gt;player.heal&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Heals all characters in your current team.&lt;/td&gt; &#xA;   &lt;td&gt;h&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;help&lt;/td&gt; &#xA;   &lt;td&gt;help [command]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Sends the help message or shows information about a specified command.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kick&lt;/td&gt; &#xA;   &lt;td&gt;kick &amp;lt;player&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;server.kick&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Kicks the specified player from the server. (WIP)&lt;/td&gt; &#xA;   &lt;td&gt;k&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;killall&lt;/td&gt; &#xA;   &lt;td&gt;killall [playerUid] [sceneId]&lt;/td&gt; &#xA;   &lt;td&gt;server.killall&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Kills all entities in the current scene or specified scene of the corresponding player.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;list&lt;/td&gt; &#xA;   &lt;td&gt;list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Lists online players.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;permission&lt;/td&gt; &#xA;   &lt;td&gt;permission &amp;lt;add|remove&amp;gt; &amp;lt;UID&amp;gt; &amp;lt;permission&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Grants or removes a permission for a user.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;position&lt;/td&gt; &#xA;   &lt;td&gt;position&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Sends your current coordinates.&lt;/td&gt; &#xA;   &lt;td&gt;pos&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;server.reload&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Reloads the server config&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;resetconst&lt;/td&gt; &#xA;   &lt;td&gt;resetconst [all]&lt;/td&gt; &#xA;   &lt;td&gt;player.resetconstellation&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Resets the constellation level on your currently selected character, will need to relog after using the command to see any changes.&lt;/td&gt; &#xA;   &lt;td&gt;resetconstellation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;restart&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Restarts the current session&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;say&lt;/td&gt; &#xA;   &lt;td&gt;say &amp;lt;player&amp;gt; &amp;lt;message&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;server.sendmessage&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Sends a message to a player as the server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sendservmsg&lt;/code&gt; &lt;code&gt;sendservermessage&lt;/code&gt; &lt;code&gt;sendmessage&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setfetterlevel&lt;/td&gt; &#xA;   &lt;td&gt;setfetterlevel &amp;lt;level&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.setfetterlevel&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Sets the friendship level for your currently selected character&lt;/td&gt; &#xA;   &lt;td&gt;setfetterlvl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setstats&lt;/td&gt; &#xA;   &lt;td&gt;setstats &amp;lt;stat&amp;gt; &amp;lt;value&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.setstats&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Sets a stat for your currently selected character&lt;/td&gt; &#xA;   &lt;td&gt;stats&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setworldlevel&lt;/td&gt; &#xA;   &lt;td&gt;setworldlevel &amp;lt;level&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.setworldlevel&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Sets your world level (Relog to see proper effects)&lt;/td&gt; &#xA;   &lt;td&gt;setworldlvl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;spawn&lt;/td&gt; &#xA;   &lt;td&gt;spawn &amp;lt;entityId&amp;gt; [amount] [level(monster only)]&lt;/td&gt; &#xA;   &lt;td&gt;server.spawn&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Spawns some entities around you&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stop&lt;/td&gt; &#xA;   &lt;td&gt;stop&lt;/td&gt; &#xA;   &lt;td&gt;server.stop&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Stops the server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;talent&lt;/td&gt; &#xA;   &lt;td&gt;talent &amp;lt;talentID&amp;gt; &amp;lt;value&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.settalent&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Sets talent level for your currently selected character&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;teleport&lt;/td&gt; &#xA;   &lt;td&gt;teleport [@playerUid] &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;z&amp;gt; [sceneId]&lt;/td&gt; &#xA;   &lt;td&gt;player.teleport&lt;/td&gt; &#xA;   &lt;td&gt;Both side&lt;/td&gt; &#xA;   &lt;td&gt;Change the player&#39;s position.&lt;/td&gt; &#xA;   &lt;td&gt;tp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tpall&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.tpall&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Teleports all players in your world to your position&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;weather&lt;/td&gt; &#xA;   &lt;td&gt;weather &amp;lt;weatherID&amp;gt; &amp;lt;climateID&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;player.weather&lt;/td&gt; &#xA;   &lt;td&gt;Client only&lt;/td&gt; &#xA;   &lt;td&gt;Changes the weather&lt;/td&gt; &#xA;   &lt;td&gt;w&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Bonus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Teleporting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When you want to teleport somewhere, use the in-game marking function on the map. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Mark a point on the map using the fish hook marking (the last one.)&lt;/li&gt; &#xA;     &lt;li&gt;(Optional) rename the map marker to a number to override the default Y coordinate (height, default 300.)&lt;/li&gt; &#xA;     &lt;li&gt;Confirm and close the map.&lt;/li&gt; &#xA;     &lt;li&gt;You will see your character falling from a very high destination, exact location that you marked.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Troubleshooting&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If compiling wasn&#39;t successful, please check your JDK installation (JDK 17 and validated JDK&#39;s bin PATH variable)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;My client doesn&#39;t connect, doesn&#39;t login, 4206, etc... - Your proxy daemon setup is most likely &lt;em&gt;the issue&lt;/em&gt;, if you are using Fiddler, make sure it running on another port other than 8888&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Startup sequence: Mongodb &amp;gt; Grasscutter &amp;gt; Proxy daemon (mitmdump, fiddler, etc.) &amp;gt; Game&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>payloadcms/payload</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/payloadcms/payload</id>
    <link href="https://github.com/payloadcms/payload" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and Open-source Headless CMS and Application Framework built with TypeScript, Node.js, React and MongoDB&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Payload&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A free and open-source TypeScript headless CMS &amp;amp; application framework built with Express, MongoDB and React.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/payloadcms/payload/actions&#34;&gt; &lt;img src=&#34;https://github.com/payloadcms/payload/workflows/build/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/payload&#34;&gt; &lt;img alt=&#34;npm&#34; src=&#34;https://img.shields.io/npm/v/payload&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Payload%20-%20A%20self-hosted%2C%20headless%20JavaScript%20CMS%20%26%20application%20framework&amp;amp;url=https%3A%2F%2Fgithub.com%2Fpayloadcms%2Fpayload&#34;&gt; &lt;img alt=&#34;Tweet Payload&#34; src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/r6sCXqVk3v&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/967097582721572934?label=Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;a href=&#34;https://payloadcms.com&#34;&gt; &lt;img src=&#34;https://payloadcms.com/images/og-image.jpg&#34; alt=&#34;Payload headless CMS Admin panel built with React&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Completely free and open-source&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/graphql/overview&#34;&gt;GraphQL&lt;/a&gt;, &lt;a href=&#34;https://payloadcms.com/docs/rest-api/overview&#34;&gt;REST&lt;/a&gt;, and &lt;a href=&#34;https://payloadcms.com/docs/local-api/overview&#34;&gt;Local&lt;/a&gt; APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/admin/overview&#34;&gt;Easily customizable ReactJS Admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/production/deployment&#34;&gt;Fully self-hosted&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/authentication/overview&#34;&gt;Extensible Authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/upload/overview&#34;&gt;Local file storage &amp;amp; upload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/versions/overview&#34;&gt;Version History and Drafts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/configuration/localization&#34;&gt;Field-based Localization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/blocks&#34;&gt;Block-based Layout Builder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/rich-text&#34;&gt;Extensible SlateJS rich text editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/array&#34;&gt;Array field type&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/overview#conditional-logic&#34;&gt;Field conditional logic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extremely granular &lt;a href=&#34;https://payloadcms.com/docs/access-control/overview&#34;&gt;Access Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/hooks/overview&#34;&gt;Document and field-level hooks&lt;/a&gt; for every action Payload provides&lt;/li&gt; &#xA; &lt;li&gt;Built with Typescript &amp;amp; very Typescript-friendly&lt;/li&gt; &#xA; &lt;li&gt;Intensely fast API&lt;/li&gt; &#xA; &lt;li&gt;Highly secure thanks to HTTP-only cookies, CSRF protection, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code-first&lt;/h3&gt; &#xA;&lt;p&gt;Payload is a CMS that has been designed for developers from the ground up to deliver them what they need to build great digital products. If you know JavaScript, you know Payload. It&#39;s a &lt;em&gt;code-first&lt;/em&gt; CMS, which allows us to do a lot of things right:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Payload gives you everything you need, but then steps back and lets you build what you want in JavaScript or TypeScript - with no unnecessary complexity brought by GUIs. You&#39;ll understand how your CMS works, because you will have written it exactly how you want it.&lt;/li&gt; &#xA; &lt;li&gt;Bring your own Express server and do whatever you need on top of Payload. Payload doesn&#39;t impose anything on you or your app.&lt;/li&gt; &#xA; &lt;li&gt;Completely control the Admin panel by using your own React components. Swap out fields or even entire views with ease.&lt;/li&gt; &#xA; &lt;li&gt;Use your data however and wherever you need thanks to auto-generated, yet fully extensible REST, GraphQL and Local Node APIs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;Before beginning to work with Payload, make sure you have all of the &lt;a href=&#34;https://payloadcms.com/docs/getting-started/installation&#34;&gt;required software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;From there, the easiest way to get started with Payload is to use the &lt;code&gt;create-payload-app&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx create-payload-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, it only takes about five minutes to &lt;a href=&#34;https://payloadcms.com/docs/getting-started/installation#from-scratch&#34;&gt;create an app from scratch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://payloadcms.com/docs/getting-started/what-is-payload&#34;&gt;Payload website&lt;/a&gt; to find in-depth documentation for everything that Payload offers.&lt;/p&gt; &#xA;&lt;h3&gt;Other Resources&lt;/h3&gt; &#xA;&lt;h5&gt;Discussions&lt;/h5&gt; &#xA;&lt;p&gt;There are lots of good conversations and resources in our &lt;a href=&#34;https://github.com/payloadcms/payload/discussions&#34;&gt;GitHub Discussions board&lt;/a&gt;. If you&#39;re struggling with something, chances are, someone&#39;s already solved what you&#39;re up against. Searching Discussions will often provide very helpful tips and tricks.&lt;/p&gt; &#xA;&lt;h5&gt;Discord&lt;/h5&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://discord.com/invite/r6sCXqVk3v&#34;&gt;Payload&#39;s Discord channel&lt;/a&gt; to interact with Payload developers in realtime.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openwrt/openwrt</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/openwrt/openwrt</id>
    <link href="https://github.com/openwrt/openwrt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins. We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openwrt/openwrt/master/include/logo.png&#34; alt=&#34;OpenWrt logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; &#xA;&lt;p&gt;Sunshine!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or MacOSX system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&#34;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&#34;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev&#xA;make4.1+ perl python3.6+ rsync subversion unzip which&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Related Repositories&lt;/h3&gt; &#xA;&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/luci&#34;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/packages&#34;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/routing&#34;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/video&#34;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support Information&lt;/h2&gt; &#xA;&lt;p&gt;For a list of supported devices see the &lt;a href=&#34;https://openwrt.org/supported_devices&#34;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-quick-start/start&#34;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-user/start&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-developer/start&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/techref/start&#34;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openwrt.org&#34;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt&#34;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugs.openwrt.org&#34;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&#34;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt-devel&#34;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qmk/qmk_firmware</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/qmk/qmk_firmware</id>
    <link href="https://github.com/qmk/qmk_firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source keyboard firmware for Atmel AVR and Arm USB families&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quantum Mechanical Keyboard Firmware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qmk/qmk_firmware/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/qmk/qmk_firmware.svg?sanitize=true&#34; alt=&#34;Current Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Uq7gcHh&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/440868230475677696.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.qmk.fm&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-ready-orange.svg?sanitize=true&#34; alt=&#34;Docs Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qmk/qmk_firmware/pulse/monthly&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/qmk/qmk_firmware.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qmk/qmk_firmware/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a keyboard firmware based on the &lt;a href=&#34;https://github.com/tmk/tmk_keyboard&#34;&gt;tmk_keyboard firmware&lt;/a&gt; with some useful features for Atmel AVR and ARM controllers, and more specifically, the &lt;a href=&#34;https://olkb.com&#34;&gt;OLKB product line&lt;/a&gt;, the &lt;a href=&#34;https://ergodox-ez.com&#34;&gt;ErgoDox EZ&lt;/a&gt; keyboard, and the &lt;a href=&#34;https://clueboard.co&#34;&gt;Clueboard product line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.qmk.fm&#34;&gt;See the official documentation on docs.qmk.fm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The docs are powered by &lt;a href=&#34;https://docsify.js.org/&#34;&gt;Docsify&lt;/a&gt; and hosted on &lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/docs/&#34;&gt;GitHub&lt;/a&gt;. They are also viewable offline; see &lt;a href=&#34;https://docs.qmk.fm/#/contributing?id=previewing-the-documentation&#34;&gt;Previewing the Documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;You can request changes by making a fork and opening a &lt;a href=&#34;https://github.com/qmk/qmk_firmware/pulls&#34;&gt;pull request&lt;/a&gt;, or by clicking the &#34;Edit this page&#34; link at the bottom of any page.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Keyboards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/planck/&#34;&gt;Planck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/preonic/&#34;&gt;Preonic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/ergodox_ez/&#34;&gt;ErgoDox EZ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/clueboard/&#34;&gt;Clueboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/clueboard/17/&#34;&gt;Cluepad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/atreus/&#34;&gt;Atreus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The project also includes community support for &lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/&#34;&gt;lots of other keyboards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, &lt;a href=&#34;https://github.com/tmk&#34;&gt;Hasu&lt;/a&gt;. The OLKB product firmwares are maintained by &lt;a href=&#34;https://github.com/jackhumbert&#34;&gt;Jack Humbert&lt;/a&gt;, the Ergodox EZ by &lt;a href=&#34;https://github.com/zsa&#34;&gt;ZSA Technology Labs&lt;/a&gt;, the Clueboard by &lt;a href=&#34;https://github.com/skullydazed&#34;&gt;Zach White&lt;/a&gt;, and the Atreus by &lt;a href=&#34;https://github.com/technomancy&#34;&gt;Phil Hagelberg&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official Website&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qmk.fm&#34;&gt;qmk.fm&lt;/a&gt; is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>livebud/bud</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/livebud/bud</id>
    <link href="https://github.com/livebud/bud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Full-Stack Web Framework for Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bud&lt;/h1&gt; &#xA;&lt;p&gt;The Full-Stack Web Framework for Go. Bud writes the boring code for you, helping you launch your website faster.&lt;/p&gt; &#xA;&lt;h2&gt;Video Demo&lt;/h2&gt; &#xA;&lt;p&gt;Watch a video demonstrating how to build a minimal HN clone in 15 minutes with Bud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/170299/168361927-9165c2f9-55d4-4fa0-a53e-966028a79b39.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69&#34;&gt;the documentation&lt;/a&gt; to learn how to get started with Bud.&lt;/p&gt; &#xA;&lt;h1&gt;Installing Bud&lt;/h1&gt; &#xA;&lt;p&gt;Bud ships as a single binary that runs on Linux and Mac. You can follow along for Windows support in &lt;a href=&#34;https://github.com/livebud/bud/issues/7&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to get started is by copying and pasting the command below in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;$ curl -sf https://raw.githubusercontent.com/livebud/bud/main/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will download the right binary for your operating system and move the binary to the right location in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Confirm that you&#39;ve installed Bud by typing &lt;code&gt;bud&lt;/code&gt; in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bud -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage:&#xA;    bud [flags] [command]&#xA;&#xA;Flags:&#xA;  -C, --chdir  Change the working directory&#xA;&#xA;Commands:&#xA;  build    build the production server&#xA;  create   create a new project&#xA;  run      run the development server&#xA;  tool     extra tools&#xA;  version  Show package versions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;The following software is required to use Bud.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Node v14+&lt;/p&gt; &lt;p&gt;This is a temporary requirement that we plan to remove in &lt;a href=&#34;https://github.com/livebud/bud/discussions/21&#34;&gt;v0.3&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go v1.16+&lt;/p&gt; &lt;p&gt;Bud relies heavily on &lt;code&gt;io/fs&lt;/code&gt; and will take advantage of generics in the future, so while Go v1.16 will work, we suggest running Go v1.18+ if you can.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Your First Project&lt;/h1&gt; &#xA;&lt;p&gt;With bud installed, you can now scaffold a new project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud create hello&#xA;$ cd hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The create command will scaffold everything you need to get started with bud.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls&#xA;go.mod  node_modules/  package-lock.json  package.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... which is not very much by the way! Unlike most other fullstack frameworks, Bud starts out very minimal. As you add dependencies, Bud will generate all the boring code to glue your app together. Let&#39;s see this in action.&lt;/p&gt; &#xA;&lt;p&gt;Start the development server with &lt;code&gt;bud run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud run&#xA;| Listening on http://127.0.0.1:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Click on the link to open the browser. You&#39;ll be greeted with bud&#39;s welcome page.&lt;/p&gt; &#xA;&lt;p&gt;Congrats! You&#39;re running your first web server with Bud. The welcome server is your jumping off point to learn more about the framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://denim-cub-301.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdb7f750b-a699-4117-ac07-303124e5d2f4%2FCleanShot_2022-05-12_at_22.00.192x.png?table=block&amp;amp;id=9488d91f-b72d-4c6d-9ce0-358c31f7f964&amp;amp;spaceId=faf0f409-6e25-40a4-871e-3b311037350f&amp;amp;width=2000&amp;amp;userId=&amp;amp;cache=v2&#34; alt=&#34;CleanShot 2022-05-12 at 22.00.19@2x.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;Check out the Hacker News &lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;demo&lt;/a&gt;, read the &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#156ea69b8d044bacb65fc2897f3e52b8&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://cal.com/mattmueller/30min&#34;&gt;schedule a quick call&lt;/a&gt; or go on your own adventure. The only limit is your imagination.&lt;/p&gt; &#xA;&lt;p&gt;Recent discussions: &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://news.ycombinator.com/item?id=31371340&#34;&gt;Hacker News&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/golivebud&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How did Bud come into existence?&lt;/h1&gt; &#xA;&lt;p&gt;I started working on Bud 2 years ago after seeing how productive people could be in &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt;. I wanted the same for Go, so I decided to try creating Laravel for the Go ecosystem. However, my first version after 6 months needed to scaffold many files just to get started. If you are coming from &lt;a href=&#34;https://github.com/rails/rails&#34;&gt;Rails&lt;/a&gt; or Laravel, you may shrug and consider this as pretty normal.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, I have been spoiled by the renaissance in frontend frameworks like &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; that start barebones but every file you add incrementally enhances your web application. This keeps the initial complexity under control.&lt;/p&gt; &#xA;&lt;p&gt;With this additional inspiration, I worked on the next iteration for the ensuing 18 months.&lt;/p&gt; &#xA;&lt;p&gt;The goals are now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate files only as you need them. Keep these generated files away from your application code and give developers the choice to keep them out of source control. You shouldn&#39;t need to care about the generated code. You may be surprised to learn that Go also generates code to turn your Go code into an executable, but it works so well you don&#39;t need to think about it. Bud should feel like this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Feel like using a modern JS framework. This means it should work with &lt;a href=&#34;https://github.com/livebud/bud/discussions/8&#34;&gt;multiple&lt;/a&gt; modern frontend frameworks like &lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte&lt;/a&gt; and &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;, support &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#4c7dff15ef3e458587b81fb9b1819afb&#34;&gt;live reload&lt;/a&gt;, and have &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/i8ke92h/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;server-side rendering&lt;/a&gt; for better performance and SEO.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The framework should be extensible from Day 1. Bud is too ambitious for one person. We&#39;re going to need an ambitious community behind this framework. Extensibility should be primarily driven by adding code, rather than by adding configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should provide high-level, type-safe APIs for developers while generating performant, low-level Go code under the covers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should compile to a single binary that contains your entire web app and can be copied to a server that doesn&#39;t even have Go installed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/livebud/bud/main/contributing/Readme.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn how to develop Bud locally.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XiaoMiku01/fansMedalHelper</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/XiaoMiku01/fansMedalHelper</id>
    <link href="https://github.com/XiaoMiku01/fansMedalHelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;新版B站粉丝牌助手 全自动升级粉丝牌&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://s1.ax1x.com/2022/05/24/XPx1tx.png&#34; width=&#34;200&#34; height=&#34;200&#34; alt=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 新 B 站粉丝牌助手 &lt;/h1&gt; &#xA; &lt;p&gt;当前版本：0.3.2&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日直播区签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日点赞 3 次直播间 （200*3 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日分享 5 次直播间 （100*5 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日弹幕打卡 （100 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日观看 30 分钟 （100 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多账号支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 微信推送通知&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;ps: 新版 B 站粉丝牌的亲密度每一个牌子都将单独计算 &amp;nbsp;&lt;/small&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;使用说明&lt;/h3&gt; &#xA;&lt;p&gt;详细文档在这里 👉 &lt;a href=&#34;https://xiaomiku01.github.io/fansMedalHelperVersion/&#34;&gt;文档&lt;/a&gt;&lt;br&gt; &lt;strong&gt;请细心阅读&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;问题反馈&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;反馈交流群：979245756&lt;/li&gt; &#xA; &lt;li&gt;提 issue&lt;/li&gt; &#xA; &lt;li&gt;B站私信 &lt;a href=&#34;https://space.bilibili.com/1772442517&#34;&gt;晓小轩iAVA&lt;/a&gt;&lt;br&gt; &lt;strong&gt;提之前请明确问题主题和运行日志&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;友情链接&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;此脚本的Go语言实现版本 &lt;a href=&#34;https://github.com/ThreeCatsLoveFish/MedalHelper&#34;&gt;ThreeCatsLoveFish/MedalHelper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AW的B站挂机助手 &lt;a href=&#34;https://github.com/andywang425/BLTH&#34;&gt;andywang425/BLTH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;赞助&lt;/h3&gt; &#xA;&lt;img src=&#34;http://i0.hdslb.com/bfs/album/c267037c9513b8e44bc6ec95dbf772ff0439dce6.jpg&#34; width=&#34;500&#34;&gt;</summary>
  </entry>
  <entry>
    <title>ageitgey/face_recognition</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/ageitgey/face_recognition</id>
    <link href="https://github.com/ageitgey/face_recognition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s simplest facial recognition api for Python and the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Face Recognition&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also read a translated version of this file &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Simplified_Chinese.md&#34;&gt;in Chinese 简体中文版&lt;/a&gt; or &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Korean.md&#34;&gt;in Korean 한국어&lt;/a&gt; or &lt;a href=&#34;https://github.com/m-i-k-i/face_recognition/raw/master/README_Japanese.md&#34;&gt;in Japanese 日本語&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recognize and manipulate faces from Python or from the command line with the world&#39;s simplest face recognition library.&lt;/p&gt; &#xA;&lt;p&gt;Built using &lt;a href=&#34;http://dlib.net/&#34;&gt;dlib&lt;/a&gt;&#39;s state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on the &lt;a href=&#34;http://vis-www.cs.umass.edu/lfw/&#34;&gt;Labeled Faces in the Wild&lt;/a&gt; benchmark.&lt;/p&gt; &#xA;&lt;p&gt;This also provides a simple &lt;code&gt;face_recognition&lt;/code&gt; command line tool that lets you do face recognition on a folder of images from the command line!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/face_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/face_recognition.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ageitgey/face_recognition/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ageitgey/face_recognition/workflows/CI/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://face-recognition.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/face-recognition/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Find faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Find all the faces that appear in a picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find and manipulate facial features in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Get the locations and outlines of each person&#39;s eyes, nose, mouth and chin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff like applying &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;digital make-up&lt;/a&gt; (think &#39;Meitu&#39;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Identify faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Recognize who appears in each photo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;known_image = face_recognition.load_image_file(&#34;biden.jpg&#34;)&#xA;unknown_image = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;&#xA;biden_encoding = face_recognition.face_encodings(known_image)[0]&#xA;unknown_encoding = face_recognition.face_encodings(unknown_image)[0]&#xA;&#xA;results = face_recognition.compare_faces([biden_encoding], unknown_encoding)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can even use this library with other Python libraries to do real-time face recognition:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;this example&lt;/a&gt; for the code.&lt;/p&gt; &#xA;&lt;h2&gt;Online Demos&lt;/h2&gt; &#xA;&lt;p&gt;User-contributed shared Jupyter notebook demo (not officially supported): &lt;a href=&#34;https://beta.deepnote.org/launch?template=face_recognition&#34;&gt;&lt;img src=&#34;https://beta.deepnote.org/buttons/try-in-a-jupyter-notebook.svg?sanitize=true&#34; alt=&#34;Deepnote&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.3+ or Python 2.7&lt;/li&gt; &#xA; &lt;li&gt;macOS or Linux (Windows not officially supported, but might work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Options:&lt;/h3&gt; &#xA;&lt;h4&gt;Installing on Mac or Linux&lt;/h4&gt; &#xA;&lt;p&gt;First, make sure you have dlib already installed with Python bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf&#34;&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, make sure you have cmake installed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cmake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, install this module from pypi using &lt;code&gt;pip3&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can try this library with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/#deployment&#34;&gt;this section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are having trouble with installation, you can also try out a &lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;pre-configured VM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installing on an Nvidia Jetson Nano board&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/build-a-hardware-based-face-recognition-system-for-150-with-the-nvidia-jetson-nano-and-python-a25cb8c891fd&#34;&gt;Jetson Nano installation instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don&#39;t follow the instructions in the article to comment out a line in dlib and recompile it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on Raspberry Pi 2+&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65&#34;&gt;Raspberry Pi 2+ installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on FreeBSD&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg install graphics/py-face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing on Windows&lt;/h4&gt; &#xA;&lt;p&gt;While Windows isn&#39;t officially supported, helpful users have posted instructions on how to install this library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/175#issue-257710508&#34;&gt;@masoudr&#39;s Windows 10 installation guide (dlib + face_recognition)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing a pre-configured Virtual Machine image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;Download the pre-configured VM image&lt;/a&gt; (for VMware Player or VirtualBox).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Command-Line Interface&lt;/h3&gt; &#xA;&lt;p&gt;When you install &lt;code&gt;face_recognition&lt;/code&gt;, you get two simple command-line programs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;face_recognition&lt;/code&gt; - Recognize faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face_detection&lt;/code&gt; - Find faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_recognition&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_recognition&lt;/code&gt; command lets you recognize faces in a photograph or folder full for photographs.&lt;/p&gt; &#xA;&lt;p&gt;First, you need to provide a folder with one picture of each person you already know. There should be one image file for each person with the files named according to who is in the picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png&#34; alt=&#34;known&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need a second folder with the files you want to identify:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png&#34; alt=&#34;unknown&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then in you simply run the command &lt;code&gt;face_recognition&lt;/code&gt;, passing in the folder of known people and the folder (or single image) with unknown people and it tells you who is in each image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s one line in the output for each face. The data is comma-separated with the filename and the name of the person found.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;unknown_person&lt;/code&gt; is a face in the image that didn&#39;t match anyone in your folder of known people.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_detection&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_detection&lt;/code&gt; command lets you find the location (pixel coordinatates) of any faces in an image.&lt;/p&gt; &#xA;&lt;p&gt;Just run the command &lt;code&gt;face_detection&lt;/code&gt;, passing in a folder of images to check (or a single image):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_detection  ./folder_with_pictures/&#xA;&#xA;examples/image1.jpg,65,215,169,112&#xA;examples/image2.jpg,62,394,211,244&#xA;examples/image2.jpg,95,941,244,792&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It prints one line for each face that was detected. The coordinates reported are the top, right, bottom and left coordinates of the face (in pixels).&lt;/p&gt; &#xA;&lt;h5&gt;Adjusting Tolerance / Sensitivity&lt;/h5&gt; &#xA;&lt;p&gt;If you are getting multiple matches for the same person, it might be that the people in your photos look very similar and a lower tolerance value is needed to make face comparisons more strict.&lt;/p&gt; &#xA;&lt;p&gt;You can do that with the &lt;code&gt;--tolerance&lt;/code&gt; parameter. The default tolerance value is 0.6 and lower numbers make face comparisons more strict:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see the face distance calculated for each match in order to adjust the tolerance setting, you can use &lt;code&gt;--show-distance true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;More Examples&lt;/h5&gt; &#xA;&lt;p&gt;If you simply want to know the names of the people in each photograph but don&#39;t care about file names, you could do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d &#39;,&#39; -f2&#xA;&#xA;Barack Obama&#xA;unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Speeding up Face Recognition&lt;/h5&gt; &#xA;&lt;p&gt;Face recognition can be done in parallel if you have a computer with multiple CPU cores. For example, if your system has 4 CPU cores, you can process about 4 times as many images in the same amount of time by using all your CPU cores in parallel.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Python 3.4 or newer, pass in a &lt;code&gt;--cpus &amp;lt;number_of_cpu_cores_to_use&amp;gt;&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass in &lt;code&gt;--cpus -1&lt;/code&gt; to use all CPU cores in your system.&lt;/p&gt; &#xA;&lt;h4&gt;Python Module&lt;/h4&gt; &#xA;&lt;p&gt;You can import the &lt;code&gt;face_recognition&lt;/code&gt; module and then easily manipulate faces with just a couple of lines of code. It&#39;s super easy!&lt;/p&gt; &#xA;&lt;p&gt;API Docs: &lt;a href=&#34;https://face-recognition.readthedocs.io/en/latest/face_recognition.html&#34;&gt;https://face-recognition.readthedocs.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically find all the faces in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;You can also opt-in to a somewhat more accurate deep-learning-based face detection model.&lt;/p&gt; &#xA;&lt;p&gt;Note: GPU acceleration (via NVidia&#39;s CUDA library) is required for good performance with this model. You&#39;ll also want to enable CUDA support when compliling &lt;code&gt;dlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image, model=&#34;cnn&#34;)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;If you have a lot of images and a GPU, you can also &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;find faces in batches&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically locate the facial features of a person in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&#xA;# face_landmarks_list is now an array with the locations of each facial feature in each face.&#xA;# face_landmarks_list[0][&#39;left_eye&#39;] would be the location and outline of the first person&#39;s left eye.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h5&gt;Recognize faces in images and identify who they are&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;picture_of_me = face_recognition.load_image_file(&#34;me.jpg&#34;)&#xA;my_face_encoding = face_recognition.face_encodings(picture_of_me)[0]&#xA;&#xA;# my_face_encoding now contains a universal &#39;encoding&#39; of my facial features that can be compared to any other picture of a face!&#xA;&#xA;unknown_picture = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;unknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]&#xA;&#xA;# Now we can see the two face encodings are of the same person with `compare_faces`!&#xA;&#xA;results = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)&#xA;&#xA;if results[0] == True:&#xA;    print(&#34;It&#39;s a picture of me!&#34;)&#xA;else:&#xA;    print(&#34;It&#39;s not a picture of me!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h2&gt;Python Code Examples&lt;/h2&gt; &#xA;&lt;p&gt;All the examples are available &lt;a href=&#34;https://github.com/ageitgey/face_recognition/tree/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Face Detection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;Find faces in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;Find faces in a photograph (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;Find faces in batches of images w/ GPU (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/blur_faces_on_webcam.py&#34;&gt;Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;Identify specific facial features in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;Apply (horribly ugly) digital make-up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Recognition&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;Find and recognize unknown faces in a photograph based on photographs of known people&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/identify_and_draw_boxes_on_faces.py&#34;&gt;Identify and draw boxes around each person in a photo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_distance.py&#34;&gt;Compare faces by numeric face distance instead of only True/False matches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam.py&#34;&gt;Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_video_file.py&#34;&gt;Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_on_raspberry_pi.py&#34;&gt;Recognize faces on a Raspberry Pi w/ camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/web_service_example.py&#34;&gt;Run a web service to recognize faces via HTTP (Requires Flask to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_knn.py&#34;&gt;Recognize faces with a K-nearest neighbors classifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_svm.py&#34;&gt;Train multiple images per person then recognize faces using a SVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a Standalone Executable&lt;/h2&gt; &#xA;&lt;p&gt;If you want to create a standalone executable that can run without the need to install &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;face_recognition&lt;/code&gt;, you can use &lt;a href=&#34;https://github.com/pyinstaller/pyinstaller&#34;&gt;PyInstaller&lt;/a&gt;. However, it requires some custom configuration to work with this library. See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/357&#34;&gt;this issue&lt;/a&gt; for how to do it.&lt;/p&gt; &#xA;&lt;h2&gt;Articles and Guides that cover &lt;code&gt;face_recognition&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My article on how Face Recognition works: &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;Modern Face Recognition with Deep Learning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers the algorithms and how they generally work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/&#34;&gt;Face recognition with OpenCV, Python, and deep learning&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use face recognition in practice&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/&#34;&gt;Raspberry Pi Face Recognition&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use this on a Raspberry Pi&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/&#34;&gt;Face clustering with Python&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Face Recognition Works&lt;/h2&gt; &#xA;&lt;p&gt;If you want to learn how face location and recognition work instead of depending on a black box library, &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;read my article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The face recognition model is trained on adults and does not work very well on children. It tends to mix up children quite easy using the default comparison threshold of 0.6.&lt;/li&gt; &#xA; &lt;li&gt;Accuracy may vary between ethnic groups. Please see &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals&#34;&gt;this wiki page&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;deployment&#34;&gt;Deployment to Cloud Hosts (Heroku, AWS, etc)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Since &lt;code&gt;face_recognition&lt;/code&gt; depends on &lt;code&gt;dlib&lt;/code&gt; which is written in C++, it can be tricky to deploy an app using it to a cloud hosting provider like Heroku or AWS.&lt;/p&gt; &#xA;&lt;p&gt;To make things easier, there&#39;s an example Dockerfile in this repo that shows how to run an app built with &lt;code&gt;face_recognition&lt;/code&gt; in a &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; container. With that, you should be able to deploy to any service that supports Docker images.&lt;/p&gt; &#xA;&lt;p&gt;You can try the Docker image locally by running: &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker/README.md&#34;&gt;several prebuilt Docker images.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux users with a GPU (drivers &amp;gt;= 384.81) and &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;Nvidia-Docker&lt;/a&gt; installed can run the example on the GPU: Open the &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file and uncomment the &lt;code&gt;dockerfile: Dockerfile.gpu&lt;/code&gt; and &lt;code&gt;runtime: nvidia&lt;/code&gt; lines.&lt;/p&gt; &#xA;&lt;h2&gt;Having problems?&lt;/h2&gt; &#xA;&lt;p&gt;If you run into problems, please read the &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Common-Errors&#34;&gt;Common Errors&lt;/a&gt; section of the wiki before filing a github issue.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many, many thanks to &lt;a href=&#34;https://github.com/davisking&#34;&gt;Davis King&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/nulhom&#34;&gt;@nulhom&lt;/a&gt;) for creating dlib and for providing the trained facial feature detection and face encoding models used in this library. For more information on the ResNet that powers the face encodings, check out his &lt;a href=&#34;http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html&#34;&gt;blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image, pillow, etc, etc that makes this kind of stuff so easy and fun in Python.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/audreyr/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; and the &lt;a href=&#34;https://github.com/audreyr/cookiecutter-pypackage&#34;&gt;audreyr/cookiecutter-pypackage&lt;/a&gt; project template for making Python project packaging way more tolerable.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Asabeneh/30-Days-Of-React</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/Asabeneh/30-Days-Of-React</id>
    <link href="https://github.com/Asabeneh/30-Days-Of-React" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. It requires HTML, CSS, and JavaScript knowledge. You should be comfortable with JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS. This challenge may take more than 100…&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;img align=&#34;right&#34; width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/30_days_of_react.jpg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 30 Days Of React&lt;/h1&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://www.linkedin.com/in/asabeneh/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://twitter.com/Asabeneh&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/asabeneh?style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&#34;https://www.linkedin.com/in/asabeneh/&#34; target=&#34;_blank&#34;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; October, 2020&lt;/small&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&#34;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;# Day&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&#34;&gt;How to Use Repo&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&#34;&gt;JavaScript Refresher&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&#34;&gt;Getting Started React&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&#34;&gt;Setting Up&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&#34;&gt;Components&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&#34;&gt;Props&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;06&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&#34;&gt;List, Map and Keys&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&#34;&gt;Class Components&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;08&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&#34;&gt;States&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&#34;&gt;Conditional Rendering&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&#34;&gt;React Project Folder Structure&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&#34;&gt;Events&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&#34;&gt;Forms&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&#34;&gt;Controlled and Uncontrolled Component&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&#34;&gt;Component Life Cycles&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&#34;&gt;Third Party Packages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&#34;&gt;Higher Order Components&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&#34;&gt;React Router&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&#34;&gt;Fetch versus Axios&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&#34;&gt;Projects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&#34;&gt;Projects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&#34;&gt;Hooks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&#34;&gt;Forms Using Hook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&#34;&gt;Fetching Data Using Hooks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&#34;&gt;Project using Hooks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&#34;&gt;Custom Hooks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&#34;&gt;Context&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&#34;&gt;Ref&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&#34;&gt;project&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&#34;&gt;Explore&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&#34;&gt;Conclusions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.paypal.me/asabeneh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/paypal_lg.png&#34; alt=&#34;Paypal Logo&#34; style=&#34;width:10%&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&#34;&gt;How to Use Repo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&#34;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&#34;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&#34;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&#34;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&#34;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&#34;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&#34;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&#34;&gt;Browser&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&#34;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&#34;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&#34;&gt;Writing Code on Browser Console&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&#34;&gt;Console.log&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&#34;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&#34;&gt;Comments&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&#34;&gt;Syntax&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&#34;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&#34;&gt;Code Editor&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&#34;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&#34;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&#34;https://t.me/thirtydaysofreact&#34;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; &#xA;&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&#34;https://github.com/Asabeneh/30-Days-Of-JavaScript&#34;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&#34;https://t.me/thirtydaysofreact/992&#34;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Motivation&lt;/li&gt; &#xA; &lt;li&gt;A computer&lt;/li&gt; &#xA; &lt;li&gt;Internet&lt;/li&gt; &#xA; &lt;li&gt;A browser&lt;/li&gt; &#xA; &lt;li&gt;A code editor&lt;/li&gt; &#xA; &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use Repo&lt;/h2&gt; &#xA;&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; &#xA;&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; &#xA;&lt;h3&gt;Clone your Fork&lt;/h3&gt; &#xA;&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# note that an `ssh` link is used here, but an `https` link will work the same&#xA;git clone git@github.com:username/30-Days-Of-React.git&#xA;cd 30-Days-Of-React&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a New Branch&lt;/h3&gt; &#xA;&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; &#xA;&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories&#xA;touch solutions/day-01/level1.js # touch creates a file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; &#xA;&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add solutions/day-01/level1.js&#xA;git commit -m &#34;chore: exercise level1 complete&#34;&#xA;git push origin exercise-solutions # branch `exercise-solutions` was created earlier&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; &#xA;&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1. switch to master branch&#xA;git checkout master&#xA;# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`&#xA;git remote -v&#xA;# 3. if not, add a link to original, you can choose any name for the link or use `upstream`&#xA;git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git&#xA;# 4. check again to confirm link added&#xA;git remote -v&#xA;# 5. now you can fetch updates from original repo, assuming you named this `upstream`&#xA;git fetch upstream&#xA;# 6. merge the updates to your local master branch&#xA;git merge upstream/master master&#xA;# 7. push the merged updates to your Forked copy on GitHub&#xA;git push origin master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git merge upstream/master exercise-solutions&#xA;git push origin exercise-solutions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Install Node.js&lt;/h3&gt; &#xA;&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&#34; alt=&#34;Node download&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After downloading double click and install&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&#34; alt=&#34;Install node&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;asabeneh $ node -v&#xA;v12.14.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; &#xA;&lt;h3&gt;Browser&lt;/h3&gt; &#xA;&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&#34; alt=&#34;Google Chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; &#xA;&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&#34; alt=&#34;Opening chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+J&#xA;&#xA;Windows/Linux:&#xA;Ctl+Shift+J&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&#34; alt=&#34;Opening console&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&#34; alt=&#34;write code on console&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; &#xA;&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+I&#xA;&#xA;Windows:&#xA;Ctl+Shift+I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log&lt;/h5&gt; &#xA;&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&#34; alt=&#34;console log multiple arguments&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)&#xA;console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)&#xA;console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; &#xA;&lt;h5&gt;Comments&lt;/h5&gt; &#xA;&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; &#xA;&lt;h5&gt;Syntax&lt;/h5&gt; &#xA;&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&#34; alt=&#34;Error&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#39;Hello, World!&#39;)&#xA;console.log(`Hello, World!`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arithmetics&lt;/h4&gt; &#xA;&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&#34; alt=&#34;Arithmetic&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(2 + 3) // Addition&#xA;console.log(3 - 2) // Subtraction&#xA;console.log(2 * 3) // Multiplication&#xA;console.log(3 / 2) // Division&#xA;console.log(3 % 2) // Modulus - finding remainder&#xA;console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Editor&lt;/h3&gt; &#xA;&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&#34; alt=&#34;Vscode&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; &#xA;&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&#34; alt=&#34;Vscode ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&#34; alt=&#34;Vscode add project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&#34; alt=&#34;Vscode open project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&#34; alt=&#34;script file&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&#34; alt=&#34;Installing Live Server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&#34; alt=&#34;running script&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&#34; alt=&#34;coding running&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&#34;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; &#xA;&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&#34;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rzashakeri/beautify-github-profile</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/rzashakeri/beautify-github-profile</id>
    <link href="https://github.com/rzashakeri/beautify-github-profile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository helps you to have a more beautiful and attractive github profile, and you can access a complete set of tools and guides for beautifying your github profile. 🪄 ⭐&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautifygithubprofile/master/cover-repo.jpg&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=346331&amp;amp;theme=light&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=346331&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-review&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile#discussion-body&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/review.svg?post_id=346331&amp;amp;theme=light&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub closed issues&#34; src=&#34;https://img.shields.io/github/issues-closed/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub closed pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr-closed/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Hello friends 🖐️&lt;/h1&gt; &#xA;&lt;p&gt;how are you If you want to make the look of your github profile more beautiful, you have come to the right place&lt;/p&gt; &#xA;&lt;h1&gt;📌 The first step : Set up the GitHub Repository&lt;/h1&gt; &#xA;&lt;p&gt;Create a repository with your GitHub username 👇&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/name.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Template : 👇&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/username/username&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example : 👇&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/rzashakeri/rzashakeri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;After Create Repository, &lt;strong&gt;Create a README.md&lt;/strong&gt; in Repository and Done ✅&lt;/h3&gt; &#xA;&lt;p&gt;Now that we have built the repository, we come to the interesting part: &lt;strong&gt;designing our README.md.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Persian guide for first step 👉 &lt;a href=&#34;https://www.instagram.com/p/CQlxnAnHId0/&#34;&gt;Link 🔗&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;💡 Where do we get ideas ?&lt;/h1&gt; &#xA;&lt;p&gt;You must have been asked which profiles to get ideas from? You can see the profile of different people through the site below the gateway profile and get ideas from them 👇&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://zzetao.github.io/awesome-github-profile/&#34;&gt;🔗 Awesome Github Profile &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;🚩 What do we do after seeing these profiles ?&lt;/h1&gt; &#xA;&lt;p&gt;Well, so far you have been able to find cool ideas from the profiles of different people. Now it&#39;s time to use different tools to beautify your github profile, which you can access from the list below.&lt;/p&gt; &#xA;&lt;h2&gt;🧩 Badges 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://github.com/Naereen/badges&#34;&gt;List of Badges, in Markdown&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A list of badges and cards, with their Markdown code, that can be included in a README.md file for a GitHub&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/ama&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg?sanitize=true&#34; alt=&#34;Ask Me Anything !&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://pypi.python.org/pypi/ansicolortags/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dd/ansicolortags.svg?sanitize=true&#34; alt=&#34;PyPI download day&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/StrapDown.js/network/&#34;&gt;&lt;img src=&#34;https://badgen.net/github/forks/Naereen/Strapdown.js/&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/StrapDown.js/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Naereen/StrapDown.js.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/Ileriayo/markdown-badges&#34;&gt;Markdown badges in many different categories &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Badges for your personal developer branding, profile, and projects. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Bitcoin-000?style=for-the-badge&amp;amp;logo=bitcoin&amp;amp;logoColor=white&#34; alt=&#34;Bitcoin&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/mysql-%2300f.svg?style=for-the-badge&amp;amp;logo=mysql&amp;amp;logoColor=white&#34; alt=&#34;MySQL&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=%2361DAFB&#34; alt=&#34;React&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=ffdd54&#34; alt=&#34;Python&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3 . &lt;a href=&#34;https://github.com/jwenjian/visitor-badge&#34;&gt;Count Visitors Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A badge generator service to count visitors of your markdown file.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jwenjian.visitor-badge&#34; alt=&#34;visitor badge&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jwenjian.visitor-badge&amp;amp;left_color=red&amp;amp;right_color=green&amp;amp;left_text=HelloVisitors&#34; alt=&#34;visitor badge&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4 . &lt;a href=&#34;https://shields.io/&#34;&gt;shields&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Concise, consistent, and legible badges in SVG and raster format and Make tokens with custom values&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/reza-shakeri-%20&#34;&gt; &amp;nbsp; &lt;img alt=&#34;AppVeyor tests badge&#34; src=&#34;https://img.shields.io/badge/tests-477%20passed%2C%202%20failed-red&#34;&gt; &amp;nbsp; &lt;img alt=&#34;Open VSX Rating (Stars) badge&#34; src=&#34;https://img.shields.io/badge/rating-%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%85-brightgreen&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;5 . &lt;a href=&#34;https://github.com/caneco/laravel-github-profile-view-counter&#34;&gt;laravel github profile view counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This package will allows you to track Github profile views and display them in your profile readme, for free.&lt;/p&gt; &#xA;&lt;h4&gt;6 . &lt;a href=&#34;https://github.com/claytonjhamilton/stackoverflow-badge&#34;&gt;Stackoverflow Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your stats with this unique StackOverflow Badge&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img alt=&#34;StackOverflow user information&#34; src=&#34;https://camo.githubusercontent.com/0e3f8d75dc79e395d7ae8e617ab5b4b8d1e1cbda263347eb9556c4c1edf39004/68747470733a2f2f737461636b6f766572666c6f772d62616467652e6865726f6b756170702e636f6d2f6170692f537461636b4f766572666c6f7742616467652f3134313232333735&#34; data-canonical-src=&#34;https://stackoverflow-badge.herokuapp.com/api/StackOverflowBadge/14122375&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;7 . &lt;a href=&#34;https://github.com/DenverCoder1/github-readme-youtube-stats&#34;&gt;Github README YouTube Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Youtube stats badges for your Github profile README. Displays the total number of subscribers or the view count for your channel.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img alt=&#34;youtube views&#34; title=&#34;Subscribe to my YouTube channel&#34; src=&#34;https://camo.githubusercontent.com/536bf6638e990166a87efd80d9a24b789f801f652ea530369addaa90e4662cf1/68747470733a2f2f6672657368696465612e636f6d2f6a6f6e61682f796f75747562652d6170692f766965772d636f756e742d62616467652e7068703f6c6162656c3d5669657773267374796c653d666f722d7468652d626164676526636f6c6f723d726564266c6162656c436f6c6f723d63653436333023&#34; data-canonical-src=&#34;https://freshidea.com/jonah/youtube-api/view-count-badge.php?label=Views&amp;amp;style=for-the-badge&amp;amp;color=red&amp;amp;labelColor=ce4630#&#34; style=&#34;max-width: 100%;&#34;&gt; &amp;nbsp; &lt;img alt=&#34;youtube subscribers&#34; title=&#34;Subscribe to my YouTube channel&#34; src=&#34;https://camo.githubusercontent.com/1e1b45604dd286eeaf3f408f4a724a03a776d6bfc9ea1f5b3c72b82919fbbdb9/68747470733a2f2f6672657368696465612e636f6d2f6a6f6e61682f796f75747562652d6170692f73756273637269626572732d62616467652e7068703f7374796c653d666f722d7468652d626164676523&#34; data-canonical-src=&#34;https://freshidea.com/jonah/youtube-api/subscribers-badge.php?style=for-the-badge#&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;8 . &lt;a href=&#34;https://github.com/Envoy-VC/Badges-for-GitHub&#34;&gt; Badges for GitHub&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A Curated list of Badges used in GitHub &lt;br&gt; &lt;br&gt; 📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&amp;amp;logo=gmail&amp;amp;logoColor=white&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&amp;amp;logo=linux&amp;amp;logoColor=black&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;9 . &lt;a href=&#34;https://github.com/alexandresanlim/Badges4-README.md-Profile&#34;&gt;Badges 4 README.md Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Improve your README.md profile with these amazing badges.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/badge/dev.to-0A0A0A?style=for-the-badge&amp;amp;logo=devdotto&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Xcode-007ACC?style=for-the-badge&amp;amp;logo=Xcode&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/R-276DC3?style=for-the-badge&amp;amp;logo=r&amp;amp;logoColor=white&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;10 . &lt;a href=&#34;https://github.com/iampavangandhi/Gitwar&#34;&gt;Gitwar&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Gitwar - Compete with Github Check your Github Score. Based on - Your Public Repos , Stars on Public Repos , Forks on Public Repos , Github Followers ,Joined Github Organisations ...&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/df082b78463312b3557f5aab829931c006f52d786fc64711fe2e251e26564df7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d666f722d7468652d6261646765&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=for-the-badge&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/5a7bb22b0aa8d11e1d01515ce6e942d09a6b51c6ca94fa8602461a8a082faf0d/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d4749545741522b50524f46494c452b53434f5245266d6573736167653d3132333435363738393026636f6c6f723d303037656336&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=PROFILE+SCORE&amp;amp;message=1234567890&amp;amp;color=007ec6&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;11 . &lt;a href=&#34;https://github.com/antonkomarev/github-profile-views-counter&#34;&gt;Github Profile Views Counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;It counts how many times your GitHub profile has been viewed. Free cloud micro-service.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://camo.githubusercontent.com/df082b78463312b3557f5aab829931c006f52d786fc64711fe2e251e26564df7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d666f722d7468652d6261646765&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=for-the-badge&#34; style=&#34;max-width: 100%;&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://camo.githubusercontent.com/f7119a5d8e7bcbca5a6cce287a7dad354ea144ecff9fa322777346e3e330a08e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d706c6173746963&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=plastic&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;12 . &lt;a href=&#34;https://github.com/arturssmirnovs/github-profile-views-counter&#34;&gt;Github Profile Views Counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Github new features README profile views counter made with Yii2 framework.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://camo.githubusercontent.com/70efda0ea25590e8ec1d45dad689865a24485a757d9359a4547218d25c0fa352/68747470733a2f2f677076632e6172747572696f2e6465762f6769746875622d70726f66696c652d76696577732d636f756e746572&#34; alt=&#34;Profile views&#34; data-canonical-src=&#34;https://gpvc.arturio.dev/github-profile-views-counter&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;13 . &lt;a href=&#34;https://github.com/MikeCodesDotNET/ColoredBadges&#34;&gt;ColoredBadges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Some badges I created for my GitHub profile readme.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/csharp.svg?sanitize=true&#34; alt=&#34;csharp&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/python.svg?sanitize=true&#34; alt=&#34;python&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/php.svg?sanitize=true&#34; alt=&#34;php&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;14 . &lt;a href=&#34;https://www.appveyor.com/docs/status-badges/&#34;&gt;AppVeyor&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A Project status badge is a dynamically generated image displaying the status of the last build. You can put a status badge on the home page of your GitHub project or intranet portal:&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&#34; alt=&#34;Grunt status&#34;&gt; &lt;img src=&#34;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&amp;amp;passingText=master%20-%20OK&#34; alt=&#34;Project Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;15 . &lt;a href=&#34;https://github.com/BraveUX/for-the-badge&#34;&gt;For The Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Badges for badges&#39; sake.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://forthebadge.com/images/badges/built-with-love.svg?sanitize=true&#34; alt=&#34;Grunt status&#34;&gt; &lt;img src=&#34;https://forthebadge.com/images/badges/built-for-android.svg?sanitize=true&#34; alt=&#34;Grunt status&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;16 . &lt;a href=&#34;https://gruntjs.com/built-with-grunt-badge&#34;&gt;Grunt Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Do you use Grunt in a project and want to proudly display that in your project README or on your project website? Now you can with the &#34;Built with Grunt&#34; badge!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.gruntjs.com/builtwith.svg?sanitize=true&#34; alt=&#34;Built with Grunt&#34;&gt; &lt;img src=&#34;https://s3.amazonaws.com/assets.coveralls.io/badges/coveralls_100.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;17 . &lt;a href=&#34;https://docs.semaphoreci.com/essentials/status-badges/&#34;&gt;semaphoreci Status Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;create a badge that displays your project&#39;s current build status. The build status is determined by the status of the first pipeline in your newest workflow. You can use this badge in your project&#39;s README file or any web page.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img alt=&#34;semaphore docs&#34; src=&#34;https://semaphore.semaphoreci.com/badges/docs/branches/master.svg?sanitize=true&#34;&gt; &#xA;&lt;h4&gt;18 . &lt;a href=&#34;https://github.com/J0B10/aoc-badges-action&#34;&gt;Aoc Badges Action&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Github Action to update the badges of your Readme to show your current Advent of Code stats&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/604c50b3ae16d7373a6a162f22e8e0354e1bb2081dfd61ce68b1007af2faa70f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6461792532302546302539462539332538352d32322d626c7565&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/badge/day%20%F0%9F%93%85-22-blue&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/c3d63f570446277a9c3381343581ce07ebbde605d58e866da3fd4d52c9adaae2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73746172732532302545322541442539302d33342d79656c6c6f77&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/badge/stars%20%E2%AD%90-34-yellow&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;19 . &lt;a href=&#34;https://github.com/eugustavo/github-badges&#34;&gt;Github Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Application made to create badges for your readme 📑&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img alt=&#34;GithubBadges&#34; src=&#34;https://camo.githubusercontent.com/9b49974fc2ff46828045e867a959e0502e14bf954c9ffb6b36b995f9ac114ad9/68747470733a2f2f692e696d6775722e636f6d2f695648666c4c552e676966&#34; data-canonical-src=&#34;https://i.imgur.com/iVHflLU.gif&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;20 . &lt;a href=&#34;https://github.com/ashmonty/discord-md-badge&#34;&gt;Discord Md Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add to your GitHub readme a badge that shows your Discord username and presence!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d01429f8fe0330ac6e0123f60fb037db4433d7b931ae8b9e5072b3813d01ba44/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f736869656c642f3835323937373936373737363339393430303f626f743d74727565&#34; alt=&#34;for-the-badge (default)&#34; data-canonical-src=&#34;https://dcbadge.vercel.app/api/shield/852977967776399400?bot=true&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;21 . &lt;a href=&#34;https://github.com/developStorm/simple-badges&#34;&gt;simple badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Awesome Simple Icons on your favorite Shields.io Badges. Try out on your profile today!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3776AB?logo=python&amp;amp;logoColor=fff&amp;amp;style=for-the-badge&#34; alt=&#34;Python Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Iconify-1769AA?logo=iconify&amp;amp;logoColor=fff&amp;amp;style=flat-square&#34; alt=&#34;Iconify Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/FIFA-326295?logo=fifa&amp;amp;logoColor=fff&amp;amp;style=plastic&#34; alt=&#34;FIFA Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;22 . &lt;a href=&#34;https://github.com/Aveek-Saha/GitHub-Profile-Badges&#34;&gt;GitHub Profile Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Clean badges for your GitHub Profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/GitHub%20Actions-2088FF.svg?style=for-the-badge&amp;amp;logo=GitHub-Actions&amp;amp;logoColor=white&#34;&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/GitHub-181717.svg?style=for-the-badge&amp;amp;logo=GitHub&amp;amp;logoColor=white&#34;&gt; &#xA;&lt;h4&gt;23 . &lt;a href=&#34;https://github.com/DenverCoder1/custom-icon-badges&#34;&gt;Custom Icon Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Allows users to more easily use Octicons and their own icons and logos in shields.io badges&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/stars/DenverCoder1/custom-icon-badges?logo=star&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/320a36935cdbebab0c0fb2f90bb04262e6264c927b4bab99def395d02c89b5c7/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f73746172732f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d73746172&#34; alt=&#34;stars&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/stars/DenverCoder1/custom-icon-badges?logo=star&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/issues-raw/DenverCoder1/custom-icon-badges?logo=issue&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8b0db5ed952994ff48cafd1294e0085c9b7170a805f47475937548d78bb613da/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6973737565732d7261772f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d6973737565&#34; alt=&#34;open issues&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/issues-raw/DenverCoder1/custom-icon-badges?logo=issue&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/license/denvercoder1/custom-icon-badges?logo=repo&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8039215166b89ec6ad27b3421ac2cc2d7ab26e0029dc7e09952a79668d1bf596/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6c6963656e73652f64656e766572636f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d7265706f&#34; alt=&#34;license&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/license/denvercoder1/custom-icon-badges?logo=repo&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/workflow/status/DenverCoder1/custom-icon-badges/Node.js%20CI?logo=check-circle-fill&amp;amp;logoColor=white&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/07496f5b8d244b13bbe160e33868ee28c7fd730a20d4d0624d6dbec34936ad71/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f776f726b666c6f772f7374617475732f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765732f4e6f64652e6a7325323043493f6c6f676f3d636865636b2d636972636c652d66696c6c266c6f676f436f6c6f723d7768697465&#34; alt=&#34;build&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/workflow/status/DenverCoder1/custom-icon-badges/Node.js%20CI?logo=check-circle-fill&amp;amp;logoColor=white&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/last-commit/DenverCoder1/custom-icon-badges?logo=history&amp;amp;logoColor=white&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/349db4a1624a2abbadcfec87d248e21382ca4e3b910797b91f19a51fe210fc3f/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6c6173742d636f6d6d69742f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d686973746f7279266c6f676f436f6c6f723d7768697465&#34; alt=&#34;last commit&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/last-commit/DenverCoder1/custom-icon-badges?logo=history&amp;amp;logoColor=white&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/badge/dynamic/json?logo=graph&amp;amp;logoColor=fff&amp;amp;color=blue&amp;amp;label=total%20contributions&amp;amp;query=%24.totalContributions&amp;amp;url=https%3A%2F%2Fgithub-readme-streak-stats.herokuapp.com%2F%3Fuser%3DDenverCoder1%26type%3Djson&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4f9857c76e594acc5d15e5d7f4da909d259ba56625a4a7e0b45c05d7852e85d7/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f62616467652f64796e616d69632f6a736f6e3f6c6f676f3d6772617068266c6f676f436f6c6f723d66666626636f6c6f723d626c7565266c6162656c3d746f74616c253230636f6e747269627574696f6e732671756572793d2532342e746f74616c436f6e747269627574696f6e732675726c3d68747470732533412532462532466769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2532462533467573657225334444656e766572436f64657231253236747970652533446a736f6e&#34; alt=&#34;total contributions&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/badge/dynamic/json?logo=graph&amp;amp;logoColor=fff&amp;amp;color=blue&amp;amp;label=total%20contributions&amp;amp;query=%24.totalContributions&amp;amp;url=https%3A%2F%2Fgithub-readme-streak-stats.herokuapp.com%2F%3Fuser%3DDenverCoder1%26type%3Djson&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🛠️ Widgets 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://github.com/abhisheknaiidu/todoist-readme&#34;&gt;Todoist Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Updates README with Todoist Stats of a user &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/todoist-stat.png/&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt;github readme stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated stats for your github readmes &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/8fd2570f103d1aae8a4d8970535274ae19c2ee62587d8868d618be37001263d0/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f616e7572616768617a72612f696d6167652f75706c6f61642f76313539353137343533362f6772732d7468656d65735f6c34796e6a612e706e67&#34; alt=&#34;GitHub Readme Stats Themes&#34; data-canonical-src=&#34;https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d7490794a2d042e6eb6a434616022fe17f075368c31740e69bf1b3cb0acb273f/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67732f3f757365726e616d653d616e7572616768617a7261266c61796f75743d636f6d70616374&#34; alt=&#34;Top Langs&#34; data-canonical-src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;3 . &lt;a href=&#34;https://github.com/DenverCoder1/github-readme-streak-stats&#34;&gt;GitHub Readme Streak Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Stay motivated and show off your contribution streak! 🌟 Display your total contributions, current streak, and longest streak on your GitHub profile README &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d972b2456ee60cde9cd07dcae8d1195edf8a52c751f50f31cbfbc327fd809273/68747470733a2f2f692e696d6775722e636f6d2f496154755964532e706e67&#34; alt=&#34;default&#34; data-canonical-src=&#34;https://i.imgur.com/IaTuYdS.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;4 . &lt;a href=&#34;https://github.com/athul/waka-readme&#34;&gt;waka readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Wakatime Weekly Metrics on your Profile Readme. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/8397274/87243943-e6b45c00-c457-11ea-94c9-2aa0bf241be8.png&#34; alt=&#34;Project Preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;5 . &lt;a href=&#34;https://github.com/omidnikrah/profile-activity-generator&#34;&gt;Profile Activity Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate custom profile activity for your profile README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/omidnikrah/profile-activity-generator/master/demo.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;6 . &lt;a href=&#34;https://github.com/jamesgeorge007/github-activity-readme&#34;&gt;Github Activity Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Updates README with the recent GitHub activity of a user &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img alt=&#34;profile-repo&#34; src=&#34;https://user-images.githubusercontent.com/25279263/87703301-3aa4a500-c7b8-11ea-8eb6-245121997a7b.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;7 . &lt;a href=&#34;https://rahuldkjain.github.io/gh-profile-readme-generator&#34;&gt;Github Profile Readme Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate GitHub profile README easily with the latest add-ons like visitors count, GitHub stats, etc using minimal UI. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/github-profile-readme-generator.gif&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;8 . &lt;a href=&#34;https://github.com/umutphp/github-action-dynamic-profile-page/&#34;&gt;Github Action Dynamic Profile Page&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Action to push updates to your special profile repository. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/umutphp/github-action-dynamic-profile-page/master/assets/github_profile_sample.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;9 . &lt;a href=&#34;https://github.com/anmol098/waka-readme-stats&#34;&gt;waka readme stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub action helps to add cool dev metrics to your github profile Readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/25841814/79395484-5081ae80-7fac-11ea-9e27-ac91472e31dd.png&#34; alt=&#34;Project Preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;10 . &lt;a href=&#34;https://github.com/actions-js/profile-readme&#34;&gt;Profile Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display profile activity and other cool widgets in your profile README.md &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;💪 Opened PR #43 in webview/webview_deno&lt;br&gt; ❗️ Closed issue #32 in denosaurs/denon&lt;br&gt; 🗣 Commented on #6 in nestdotland/hatcher&lt;br&gt; ❗️ Closed issue #22 in nestdotland/eggs&lt;br&gt; 🗣 Commented on #15 in nestdotland/eggs&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;11 . &lt;a href=&#34;https://github.com/kittinan/spotify-github-profile&#34;&gt;Spotify Github Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show your Spotify playing on your Github profile &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kittinan/spotify-github-profile/master/img/novatorem.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kittinan/spotify-github-profile/master/img/default.svg?sanitize=true&#34; alt=&#34;spotify-github-profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;12 . &lt;a href=&#34;https://github.com/gautamkrishnar/blog-post-workflow&#34;&gt;Blog Post Workflow&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show your latest blog posts from any sources or StackOverflow activity or Youtube Videos on your GitHub profile/project readme automatically using the RSS feed &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png&#34; alt=&#34;preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;13 . &lt;a href=&#34;https://github.com/omidnikrah/github-readme-medium&#34;&gt;Github Readme Medium&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated your latest Medium article on your GitHub readmes! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/3374294011592525208ac3765e216aced5a5962769bfe8507e719bf5c589f7f5/68747470733a2f2f6769746875622d726561646d652d6d656469756d2e76657263656c2e6170702f3f757365726e616d653d6f6d69646e696b726168&#34; alt=&#34;Omid Nikrah Medium&#34; data-canonical-src=&#34;https://github-readme-medium.vercel.app/?username=omidnikrah&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;14 . &lt;a href=&#34;https://github.com/omidnikrah/github-readme-stackoverflow&#34;&gt;Github Readme Stackoverflow&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated your StackOverflow status on your GitHub READMEs! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a98eeb0429d81008fe5c1320d11983627b8f7365a3896e65764b73727275576d/68747470733a2f2f6769746875622d726561646d652d737461636b6f766572666c6f772e76657263656c2e6170702f3f7573657249443d36353538303432&#34; alt=&#34;Omid Nikrah StackOverflow&#34; data-canonical-src=&#34;https://github-readme-stackoverflow.vercel.app/?userID=6558042&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/551c5992d60f859b25ebe54384966ede70d00fef9a36a07855a1690bb93fb36b/68747470733a2f2f6769746875622d726561646d652d737461636b6f766572666c6f772e76657263656c2e6170702f3f7573657249443d36353538303432266c61796f75743d636f6d70616374&#34; alt=&#34;Omid Nikrah StackOverflow&#34; data-canonical-src=&#34;https://github-readme-stackoverflow.vercel.app/?userID=6558042&amp;amp;layout=compact&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;15 . &lt;a href=&#34;https://arturssmirnovs.github.io/github-profile-readme-generator/&#34;&gt;Github Profile Readme Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub profile readme generator allows you to create nice and simple GitHub profile readme files that will be included in your profile previews. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/37ecf5fc6ed20ef415e3e81bb9104771e7557ca3d828a06dee981d4c18fe9212/68747470733a2f2f617274757273736d69726e6f76732e6769746875622e696f2f6769746875622d70726f66696c652d726561646d652d67656e657261746f722f696d616765732f6769662e6769663f763d313233&#34; alt=&#34;Github readme generator&#34; data-canonical-src=&#34;https://arturssmirnovs.github.io/github-profile-readme-generator/images/gif.gif?v=123&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;16 . &lt;a href=&#34;https://github.com/teoxoy/profile-readme-stats&#34;&gt;Profile Readme Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Showcase your github stats on your profile README.md &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/readme.png&#34;&gt; &#xA;&lt;h4&gt;17 . &lt;a href=&#34;https://github.com/ABSphreak/readme-jokes&#34;&gt;Readme Jokes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;😄 Jokes for your GitHub READMEs &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d22e78d4de47eff2328eddf6944835f9296a8134ec8b557ae6bb4afc89c4f741/68747470733a2f2f726561646d652d6a6f6b65732e76657263656c2e6170702f6170693f68696465426f72646572&#34; alt=&#34;Jokes Card&#34; data-canonical-src=&#34;https://readme-jokes.vercel.app/api?hideBorder&#34; style=&#34;max-width: 100%;&#34; align=&#34;left&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;18 . &lt;a href=&#34;https://github.com/ryo-ma/github-profile-trophy&#34;&gt;Github Profile Trophy&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add dynamically generated GitHub Stat Trophies on your readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/a575f5f00a8bcd492b9fcce7c2c1305139306392e4b2d96479fa6a02b4758646/68747470733a2f2f6769746875622d70726f66696c652d74726f7068792e76657263656c2e6170702f3f757365726e616d653d72796f2d6d6126636f6c756d6e3d362672616e6b3d5353532c53532c532c4141412c41412c412c422c43&#34; data-canonical-src=&#34;https://github-profile-trophy.vercel.app/?username=ryo-ma&amp;amp;column=6&amp;amp;rank=SSS,SS,S,AAA,AA,A,B,C&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;19 . &lt;a href=&#34;https://github.com/gazf/github-readme-twitter&#34;&gt;Github Readme Twitter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Twitter to your github readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/2fb269ef6a610e8170b5f17ed47455674ddc7662d3c8e9565b8dbe6123b0ce29/68747470733a2f2f6769746875622d726561646d652d747769747465722e67617a662e76657263656c2e6170702f6170693f69643d74776974746572&#34; alt=&#34;github-readme-twitter&#34; data-canonical-src=&#34;https://github-readme-twitter.gazf.vercel.app/api?id=twitter&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;20 . &lt;a href=&#34;https://github.com/techytushar/random-memer&#34;&gt;Random Memer&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns random meme images scraped from Memedroid &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;21 . &lt;a href=&#34;https://github.com/rishavanand/github-profilinator&#34;&gt;Github Profilinator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This tool contains mini GUI components that you can hook together to automatically generate markdown code for a perfect readme. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rishavanand/github-profilinator/master/src/images/demo.gif&#34; style=&#34;width: 80%; max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;22 . &lt;a href=&#34;https://github.com/ankurparihar/readme-pagespeed-insights&#34;&gt;Readme Pagespeed Insights&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Google lighthouse stats of your website that you can put in readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ankurparihar/readme-pagespeed-insights/master/assets/banner.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;800px&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;23 . &lt;a href=&#34;https://github.com/khalby786/REHeader&#34;&gt;REHeader&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate beautiful header images for your GitHub profile READMEs.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/59e8ef4da1462be13abb2865a3503da9d8611c38f99e9d70b41a26218526cb97/68747470733a2f2f63646e2e676c697463682e636f6d2f30613466363732652d376435632d343235342d386635612d38343763323932346264663625324653637265656e25323053686f74253230323032302d30372d31372532306174253230352e31392e3138253230504d2e706e673f763d31353934393931393934353038&#34; alt=&#34;Another image which is a use case of this generator - again you shouldn&#39;t be seeing this&#34; data-canonical-src=&#34;https://cdn.glitch.com/0a4f672e-7d5c-4254-8f5a-847c2924bdf6%2FScreen%20Shot%202020-07-17%20at%205.19.18%20PM.png?v=1594991994508&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;24 . &lt;a href=&#34;https://github.com/theFr1nge/goodreads-readme&#34;&gt;Goodreads Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This project provides a badge for sharing your current book in your github profile.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/b0ef9e82ab336e6938b5f2bc878958d5130a22ea5196244e4fb8f0e713099bf8/68747470733a2f2f676f6f6472656164732d726561646d652e76657263656c2e6170702f6170692f626f6f6b&#34; alt=&#34;GoodReads&#34; data-canonical-src=&#34;https://goodreads-readme.vercel.app/api/book&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;25 . &lt;a href=&#34;https://github.com/DenverCoder1/readme-typing-svg&#34;&gt;Readme Typing svg&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated, customizable SVG that gives the appearance of typing and deleting text. Typing SVGs can be used as a bio on your Github profile readme or repository.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/21f4ff7dadd9c5bb09f90942dc78f02bd49c67939c17a403253d2e3690dcb758/68747470733a2f2f726561646d652d747970696e672d7376672e6865726f6b756170702e636f6d2f3f6c696e65733d547970652b6d657373616765732b65766572797768657265213b4164642b612b62696f2b746f2b796f75722b70726f66696c65213b4164642b612b6465736372697074696f6e2b746f2b796f75722b7265706f213b4d616b652b796f75722b726561646d652b7374616e642b6f75742126666f6e743d46697261253230436f64652663656e7465723d747275652677696474683d333830266865696768743d3530&#34; data-canonical-src=&#34;https://readme-typing-svg.herokuapp.com/?lines=Type+messages+everywhere!;Add+a+bio+to+your+profile!;Add+a+description+to+your+repo!;Make+your+readme+stand+out!&amp;amp;font=Fira%20Code&amp;amp;center=true&amp;amp;width=380&amp;amp;height=50&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;26 . &lt;a href=&#34;https://github.com/durgeshsamariya/awesome-github-profile-readme-templates&#34;&gt;Awesome Github Profile Readme Templates&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This repository contains best profile readme&#39;s for your reference.&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;27 . &lt;a href=&#34;https://github.com/tipsy/profile-summary-for-github&#34;&gt;Profile Summary For Github&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Tool for visualizing GitHub profiles&lt;br&gt; &lt;br&gt; 📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/1521451/34072014-4451dbf6-e280-11e7-90a7-32ad1f313541.PNG&#34; alt=&#34;screenshot&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;28 . &lt;a href=&#34;https://github.com/vn7n24fzkq/github-profile-summary-cards&#34;&gt;Github Profile Summary Cards&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A tool to generate your github summary card for profile README &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/0-profile-details.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/0-profile-details.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/1-repos-per-language.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/1-repos-per-language.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/2-most-commit-language.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/2-most-commit-language.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/3-stats.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/3-stats.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/4-productive-time.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/4-productive-time.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;29 . &lt;a href=&#34;https://github.com/marketplace/actions/generate-snake-game-from-github-contribution-grid&#34;&gt;Generate Snake Game From Github Contribution Grid&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generates a snake game from a github user contributions graph&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Platane/snk/raw/output/github-contribution-grid-snake.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;30 . &lt;a href=&#34;https://github.com/rahulbanerjee26/githubProfileReadmeGenerator&#34;&gt;githubProfileReadmeGenerator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate a cool README/About me page for your Github Profile&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rahulbanerjee26/githubProfileReadmeGenerator/raw/main/screencast_ghub_profile_gen_v1.gif&#34; alt=&#34;Screencast of Github AboutMe/Profile ReadMe Generator&#34; title=&#34;Go to web app&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;31 . &lt;a href=&#34;https://github.com/rahul-jha98/github-stats-transparent&#34;&gt;Github Stats Transparent&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Automatically generate summary GitHub statistics images for your profile using Actions, no server required&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rahul-jha98/github-stats-transparent/output/generated/overview.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rahul-jha98/github-stats-transparent/output/generated/languages.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;32 . &lt;a href=&#34;https://github.com/ironmaniiith/Github-profile-name-writer&#34;&gt;Github Profile Name Writer&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Write your name using the github commits and make your profile awesome&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/ironmaniiith/Github-profile-name-writer/raw/master/extras/ironmanGithub.jpg&#34; alt=&#34;Image of Ironman on github Profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;33 . &lt;a href=&#34;https://github.com/IonicaBizau/github-profile-languages&#34;&gt;Github Profile Languages&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Create a nice pie chart with the user&#39;s programming languages from their GitHub profile.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/6353b997c388ea9e649e46ccb0bdf18475c40cfdb4a7c8857b05c2af7c6c96e0/687474703a2f2f692e696d6775722e636f6d2f514736476835492e706e67&#34; alt=&#34;github-profile-languages&#34; data-canonical-src=&#34;http://i.imgur.com/QG6Gh5I.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;34 . &lt;a href=&#34;https://github.com/VishwaGauravIn/github-profile-readme-maker&#34;&gt;Github Profile Readme Maker&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Best Profile Generator, Create your perfect GitHub Profile ReadMe in the best possible way. Lots of features and tools included, all for free !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/VishwaGauravIn/Images/raw/main/screencapture-gprm.png?raw=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;35 . &lt;a href=&#34;https://github.com/yoshi389111/github-profile-3d-contrib&#34;&gt;Github Profile 3d Contrib&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub Action creates a GitHub contribution calendar on a 3D profile image.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/yoshi389111/github-profile-3d-contrib/main/docs/demo/profile-green-animate.svg?sanitize=true&#34; alt=&#34;svg&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;36 . &lt;a href=&#34;https://github.com/leviarista/github-profile-header-generator&#34;&gt;Github Profile Header Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A header image generator for your Github profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leviarista/github-profile-header-generator/main/social/examples/example-1.png&#34; alt=&#34;Example 1&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;37 . &lt;a href=&#34;https://github.com/lowlighter/metrics&#34;&gt;metrics&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;An infographics generator with 30+ plugins and 200+ options to display stats about your GitHub account and render them as SVG, Markdown, PDF or JSON!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;For user accounts&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;For organization accounts&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.organization.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.organization.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3 dir=&#34;auto&#34;&gt;&lt;a id=&#34;user-content--customizable-with-40-plugins-and-258-options&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34; href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/#-customizable-with-40-plugins-and-258-options&#34;&gt;&#xA;      &lt;svg class=&#34;octicon octicon-link&#34; viewbox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&#xA;       &lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&#34;&gt;&lt;/path&gt;&#xA;      &lt;/svg&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/README.md#-plugins&#34;&gt;&#xA;      &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;jigsaw&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9e9.png&#34;&gt;&#xA;       🧩&#xA;      &lt;/g-emoji&gt; Customizable with 40 plugins and 258 options!&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/isocalendar/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;date&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png&#34;&gt;&#xA;      📅&#xA;     &lt;/g-emoji&gt; Isometric commit calendar&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/languages/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;u6708&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f237.png&#34;&gt;&#xA;      🈷️&#xA;     &lt;/g-emoji&gt; Most used languages&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Full year calendar&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.fullyear.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.fullyear.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Half year calendar&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis (clone and analyze repositories)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recently used (analyze recent activity events)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.recent.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.recent.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Default algorithm&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Default algorithm (with details)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.details.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.details.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/topics/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;pushpin&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png&#34;&gt;&#xA;      📌&#xA;     &lt;/g-emoji&gt; Starred topics&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stars/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;star2&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png&#34;&gt;&#xA;      🌟&#xA;     &lt;/g-emoji&gt; Recently starred repositories&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;With icons&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.icons.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.icons.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;With labels&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stars.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stars.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/licenses/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;scroll&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png&#34;&gt;&#xA;      📜&#xA;     &lt;/g-emoji&gt; Repository licenses&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/habits/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;bulb&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png&#34;&gt;&#xA;      💡&#xA;     &lt;/g-emoji&gt; Coding habits&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Permissions, limitations and conditions&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Licenses overview&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.ratio.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.ratio.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recent activity charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.charts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.charts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Midly interesting facts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.facts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.facts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/contributors/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;medal_sports&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3c5.png&#34;&gt;&#xA;      🏅&#xA;     &lt;/g-emoji&gt; Repository contributors&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/followup/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tickets&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f39f.png&#34;&gt;&#xA;      🎟️&#xA;     &lt;/g-emoji&gt; Follow-up of issues and pull requests&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;By contribution types&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.categories.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.categories.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;By number of contributions&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.contributions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.contributions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Created on a user&#39;s repositories&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Created by a user&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.user.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.user.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/reactions/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;performing_arts&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3ad.png&#34;&gt;&#xA;      🎭&#xA;     &lt;/g-emoji&gt; Comment reactions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/people/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;people_holding_hands&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f91d-1f9d1.png&#34;&gt;&#xA;      🧑‍🤝‍🧑&#xA;     &lt;/g-emoji&gt; People plugin&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.reactions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.reactions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Related to a user&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.followers.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.followers.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Related to a repository&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stargazers/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;sparkles&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2728.png&#34;&gt;&#xA;      ✨&#xA;     &lt;/g-emoji&gt; Stargazers over last weeks&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/projects/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;card_index_dividers&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5c2.png&#34;&gt;&#xA;      🗂️&#xA;     &lt;/g-emoji&gt; Active projects&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Classic charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Chartist charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.chartist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.chartist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.projects.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.projects.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/code/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;sagittarius&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2650.png&#34;&gt;&#xA;      ♐&#xA;     &lt;/g-emoji&gt; Code snippet of the day&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/activity/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;newspaper&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png&#34;&gt;&#xA;      📰&#xA;     &lt;/g-emoji&gt; Recent activity&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.code.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.code.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.activity.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.activity.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/achievements/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;trophy&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png&#34;&gt;&#xA;      🏆&#xA;     &lt;/g-emoji&gt; Achievements&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/notable/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tophat&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3a9.png&#34;&gt;&#xA;      🎩&#xA;     &lt;/g-emoji&gt; Notable contributions&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Compact display&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.compact.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.compact.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Detailed display&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Contributions in organizations only&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/discussions/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;speech_balloon&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png&#34;&gt;&#xA;      💬&#xA;     &lt;/g-emoji&gt; Discussions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/support/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;thought_balloon&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png&#34;&gt;&#xA;      💭&#xA;     &lt;/g-emoji&gt; GitHub Community Support&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.discussions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.discussions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.support.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.support.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/lines/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;man_technologist&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bb.png&#34;&gt;&#xA;      👨‍💻&#xA;     &lt;/g-emoji&gt; Lines of code changed&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/traffic/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;abacus&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9ee.png&#34;&gt;&#xA;      🧮&#xA;     &lt;/g-emoji&gt; Repositories traffic&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.lines.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.lines.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.traffic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.traffic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/repositories/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;notebook&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d3.png&#34;&gt;&#xA;      📓&#xA;     &lt;/g-emoji&gt; Repositories&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/gists/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;ticket&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3ab.png&#34;&gt;&#xA;      🎫&#xA;     &lt;/g-emoji&gt; Gists&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.repositories.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.repositories.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.gists.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.gists.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/introduction/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;raising_hand&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f64b.png&#34;&gt;&#xA;      🙋&#xA;     &lt;/g-emoji&gt; Introduction&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/sponsors/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;two_hearts&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f495.png&#34;&gt;&#xA;      💕&#xA;     &lt;/g-emoji&gt; GitHub Sponsors&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For a user or an organization&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;For a repository&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;GitHub sponsors card&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;GitHub sponsors full introduction&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/starlists/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;dizzy&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ab.png&#34;&gt;&#xA;      💫&#xA;     &lt;/g-emoji&gt; Starlists&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/calendar/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;calendar&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4c6.png&#34;&gt;&#xA;      📆&#xA;     &lt;/g-emoji&gt; Calendar&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Repositories from star lists&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Languages from star lists&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.languages.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.languages.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Current year&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Full history&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/skyline/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;city_sunrise&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f307.png&#34;&gt;&#xA;      🌇&#xA;     &lt;/g-emoji&gt; GitHub Skyline 3D calendar&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/pagespeed/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;stopwatch&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/23f1.png&#34;&gt;&#xA;      ⏱️&#xA;     &lt;/g-emoji&gt; Website performances&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.skyline.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.skyline.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;PageSpeed scores&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;PageSpeed scores with detailed report&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.detailed.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.detailed.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;PageSpeed scores with a website screenshot&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.screenshot.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.screenshot.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stackoverflow/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;left_speech_bubble&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5e8.png&#34;&gt;&#xA;      🗨️&#xA;     &lt;/g-emoji&gt; StackOverflow plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/anilist/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;cherry_blossom&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f338.png&#34;&gt;&#xA;      🌸&#xA;     &lt;/g-emoji&gt; Anilist watch list and reading list&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stackoverflow.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stackoverflow.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For anime watchers&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;For manga readers&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.manga.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.manga.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For waifus simp&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.characters.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.characters.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/tweets/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;baby_chick&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f424.png&#34;&gt;&#xA;      🐤&#xA;     &lt;/g-emoji&gt; Latest tweets&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/posts/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;black_nib&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2712.png&#34;&gt;&#xA;      ✒️&#xA;     &lt;/g-emoji&gt; Recent posts&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Latest tweets with attachments&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.attachments.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.attachments.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Latest tweets&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Latest posts width description and cover image&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Latest posts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/music/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;musical_score&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3bc.png&#34;&gt;&#xA;      🎼&#xA;     &lt;/g-emoji&gt; Music plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/rss/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tokyo_tower&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5fc.png&#34;&gt;&#xA;      🗼&#xA;     &lt;/g-emoji&gt; Rss feed&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Random tracks from a playlist&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.playlist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.playlist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recently listened&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.recent.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.recent.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.rss.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.rss.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/wakatime/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;alarm_clock&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/23f0.png&#34;&gt;&#xA;      ⏰&#xA;     &lt;/g-emoji&gt; WakaTime plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.wakatime.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.wakatime.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/community/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;game_die&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3b2.png&#34;&gt;&#xA;      🎲&#xA;     &lt;/g-emoji&gt; See also community plugins&lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3 dir=&#34;auto&#34;&gt;&lt;a id=&#34;user-content-️-and-even-more-with-4-templates&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34; href=&#34;#️-and-even-more-with-4-templates&#34;&gt;&#xA;      &lt;svg class=&#34;octicon octicon-link&#34; viewbox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&#xA;       &lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&#34;&gt;&lt;/path&gt;&#xA;      &lt;/svg&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/README.md#%EF%B8%8F-templates&#34;&gt;&#xA;      &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;framed_picture&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5bc.png&#34;&gt;&#xA;       🖼️&#xA;      &lt;/g-emoji&gt; And even more with 4+ templates!&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/classic/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;green_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d7.png&#34;&gt;&#xA;      📗&#xA;     &lt;/g-emoji&gt; Classic template&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/repository/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;blue_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png&#34;&gt;&#xA;      📘&#xA;     &lt;/g-emoji&gt; Repository template&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/terminal/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;orange_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d9.png&#34;&gt;&#xA;      📙&#xA;     &lt;/g-emoji&gt; Terminal template&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/markdown/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;ledger&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d2.png&#34;&gt;&#xA;      📒&#xA;     &lt;/g-emoji&gt; Markdown template&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.terminal.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.terminal.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.markdown.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.markdown.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/community/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;closed_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d5.png&#34;&gt;&#xA;      📕&#xA;     &lt;/g-emoji&gt; See also community templates&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;38 . &lt;a href=&#34;https://github.com/dailydotdev/action-devcard&#34;&gt;Action Devcard&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Action to download the devcard from &lt;a href=&#34;https://daily.dev&#34;&gt;https://daily.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.daily.dev/rzashakeri&#34;&gt;&lt;img src=&#34;https://api.daily.dev/devcards/6ae35a9240b4445ab6b12d50bea77589.png?r=fpe&#34; width=&#34;200&#34; alt=&#34;Reza Shakeri&#39;s Dev Card&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;39 . &lt;a href=&#34;https://github.com/joshdsouza8/pimp-my-readme&#34;&gt;Pimp My Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Pimp my README is an open source profile builder that you can use to add some cool components to your README profile - Made with &amp;lt;3 by webapp.io :)&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pimp-my-readme.webapp.io&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/88bddfba73d62d64c703ef1c75bbe2a2dc2deb4c214e851f5e7a882332a755fd/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f776176792d62616e6e65723f7375627469746c653d416e2532306f70656e253230736f7572636525323070726f6a656374253230253341253239267469746c653d50696d702532306d79253230524541444d45&#34; alt=&#34;Pimp my README, An open source project :)&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/wavy-banner?subtitle=An%20open%20source%20project%20%3A%29&amp;amp;title=Pimp%20my%20README&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/433c5a2daa0061aa3be92b6233f904ea1b2176e219a2130ddfccd4d3a4a43a27/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f736c6964696e672d746578743f656d6f6a69733d31663931662d31663366655f31663630655f31663630385f316639393526746578743d50696d702532353230796f75722532353230524541444d45&#34; alt=&#34;Pimp my README&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/sliding-text?emojis=1f91f-1f3fe_1f60e_1f608_1f995&amp;amp;text=Pimp%2520your%2520README&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/0fae9cc46100cdf2fc60208b147d5febb0d83bfc5264f0a7179c95ad655967ad/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f76697369746f722d636f756e7465723f706167653d70696d702d6d792d726561646d65&#34; alt=&#34;Visitor Counter for pimp-my-readme&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/visitor-counter?page=pimp-my-readme&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/5ad62aa314f320a330c539e266964d5371a3b0f5efdbdfbb270000688a977f35/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f746563686e6f6c6f67793f746563686e6f6c6f67793d4a6176615363726970745f48544d4c5f4353535f4e6f64654a535f457870726573735f&#34; alt=&#34;JavaScript_HTML_CSS_NodeJS_Express_&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/technology?technology=JavaScript_HTML_CSS_NodeJS_Express_&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;40 . &lt;a href=&#34;https://github.com/sallar/github-contributions-chart&#34;&gt;GitHub Contribution Chart Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate an image of all your Github contributions&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sallar/github-contributions-chart/master/screenshot.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;676&#34;&gt; &#xA;&lt;h4&gt;41 . &lt;a href=&#34;https://github.com/neat-run/wrapped&#34;&gt;Wrapped&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Wrapped, inspired by Spotify Wrapped&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/wrapped.png&#34; style=&#34;max-width: 100%;&#34; max-width=&#34;100%&#34;&gt; &#xA;&lt;h4&gt;42 . &lt;a href=&#34;https://github.com/Annihil/github-spray&#34;&gt;GitHub Spray&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Draw on your GitHub contribution graph ░▒▓█&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34; align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/40946537f361459961c2f65d966d301b105ed19134588bdc275f14af14bbe948/68747470733a2f2f692e696d6775722e636f6d2f6e505a79474e6f2e676966&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/40946537f361459961c2f65d966d301b105ed19134588bdc275f14af14bbe948/68747470733a2f2f692e696d6775722e636f6d2f6e505a79474e6f2e676966&#34; alt=&#34;GitHub Spray logo&#34; data-canonical-src=&#34;https://i.imgur.com/nPZyGNo.gif&#34; style=&#34;max-width: 100%;&#34; width=&#34;200&#34; height=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;43 . &lt;a href=&#34;https://github.com/avgupta456/github-trends&#34;&gt;Github Trends&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Level up your GitHub profile readme with customizable cards including LOC statistics!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/16708871/143486536-83e85294-2839-4cf1-9e14-685c05da918b.png&#34; alt=&#34;image&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;44 . &lt;a href=&#34;https://github.com/shravan20/github-readme-quotes&#34;&gt;Github Readme Quotes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamic quote generator for your GitHub readmes | Give a poetic touch to readmes&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/4f89632167b7a39fb7f92d4f634da0ce577b0a5c5ceee4578c71d12fc4417c77/68747470733a2f2f6769746875622d726561646d652d71756f7465732e6865726f6b756170702e636f6d2f71756f74653f7468656d653d6461726b&#34; alt=&#34;Quote&#34; data-canonical-src=&#34;https://github-readme-quotes.herokuapp.com/quote?theme=dark&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;45 . &lt;a href=&#34;https://github.com/JeffreyCA/spotify-recently-played-readme&#34;&gt;Spotify Recently Played Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your recently played Spotify tracks on your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/1676021262b12981eddcf68a66a9565b75ce82d4d1d1d8f3dd173d28c3cbf5f3/68747470733a2f2f73706f746966792d726563656e746c792d706c617965642d726561646d652e76657263656c2e6170702f6170693f757365723d6a65666672657963613136&#34; alt=&#34;Spotify recently played&#34; data-canonical-src=&#34;https://spotify-recently-played-readme.vercel.app/api?user=jeffreyca16&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;46 . &lt;a href=&#34;https://github.com/rajk3770/Github-Profile-Readme-Creator&#34;&gt;Github Profile Readme Creator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate user-friendly, intuitive and dynamic markdown for your profile README, in less than a minute!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rajk3770/Github-Profile-Readme-Creator/raw/master/screenshots/Demo.gif&#34; alt=&#34;Demo&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;47 . &lt;a href=&#34;https://github.com/th3c0d3br34ker/github-readme-info&#34;&gt;Github Readme Info&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub action helps to add cool Stats to your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;pre class=&#34;notranslate&#34; style=&#34;position: relative;&#34; lang=&#34;text&#34;&gt;&lt;code class=&#34;notranslate&#34;&gt;I&#39;m a night 🦉&#xA;&#xA;🌞 Morning    57 commits     ████░░░░░░░░░░░░░░░░░░░░░   16.76%&#xA;🌆 Daytime    85 commits     ██████░░░░░░░░░░░░░░░░░░░   25.0%&#xA;🌃 Evening    128 commits    █████████░░░░░░░░░░░░░░░░   37.65%&#xA;🌙 Night      70 commits     █████░░░░░░░░░░░░░░░░░░░░   20.59%&#xA;&#xA;&lt;/code&gt;&#xA; &lt;div class=&#34;open_grepper_editor&#34; title=&#34;Edit &amp;amp; Save To Grepper&#34;&gt;&lt;/div&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;48 . &lt;a href=&#34;https://github.com/bxcodec/github-readme-medium-recent-article&#34;&gt;Github Readme Medium Recent Article&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Your Recently Published Medium Articles to Your GitHub Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d788a9c92a195880c6bbb59a2be51537808cafd3ffd943505eec3cd9b4b5734f/68747470733a2f2f6769746875622d726561646d652d6d656469756d2d726563656e742d61727469636c652e76657263656c2e6170702f6d656469756d2f40696d616e74756d6f72616e672f30&#34; alt=&#34;Recent Article 0&#34; data-canonical-src=&#34;https://github-readme-medium-recent-article.vercel.app/medium/@imantumorang/0&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;49 . &lt;a href=&#34;https://github.com/Jurredr/github-widgetbox&#34;&gt;Github Widgetbox&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Beautiful, dynamic widgets for GitHub Readme pages. (Statistics, Skills, etc.)&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/33fa2f9d71dd331c729c8a3bac1bc1b0c3ded069d4602b29559925c843b48ce0/68747470733a2f2f6769746875622d776964676574626f782e76657263656c2e6170702f6170692f70726f66696c653f757365726e616d653d4a75727265647226646174613d666f6c6c6f776572732c7265706f7369746f726965732c73746172732c636f6d6d697473&#34; alt=&#34;GitHub WidgetBox&#34; data-canonical-src=&#34;https://github-widgetbox.vercel.app/api/profile?username=Jurredr&amp;amp;data=followers,repositories,stars,commits&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;50 . &lt;a href=&#34;https://github.com/JeffreyCA/lastfm-recently-played-readme&#34;&gt;lastfm Recently Played Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your recent Last.fm scrobbles on your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/6b9790cabcaa9e6515761c7817ba08db06e3f1b60a34751acfcd45ed9c475e3a/68747470733a2f2f6c617374666d2d726563656e746c792d706c617965642e76657263656c2e6170702f6170693f757365723d4a65666672657943413031&#34; alt=&#34;My scrobbles&#34; data-canonical-src=&#34;https://lastfm-recently-played.vercel.app/api?user=JeffreyCA01&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;51 . &lt;a href=&#34;https://github.com/yogeshwaran01/github-stats-terminal-style&#34;&gt;Github Stats Terminal Style&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) Stats as like Terminal Interface with typing effects dynamically for your profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/yogeshwaran01/github-stats-terminal-style/master/github_stats.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; align=&#34;middle&#34;&gt; &#xA;&lt;h4&gt;52 . &lt;a href=&#34;https://github.com/KnlnKS/leetcode-stats&#34;&gt;leetcode Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated LeetCode stats for your GitHub READMEs!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img alt=&#34;LeetCode Stat Card&#34; src=&#34;https://camo.githubusercontent.com/1eebccd44222e88e734e4b4972493af998af8fa27f2008244f3e9b90f85497d4/68747470733a2f2f6170753572683867786b2e657865637574652d6170692e75732d656173742d312e616d617a6f6e6177732e636f6d2f64656661756c742f6c656574636f64652d73746174733f757365726e616d653d4b6e6c6e4b53267468656d653d6461726b&#34; data-canonical-src=&#34;https://apu5rh8gxk.execute-api.us-east-1.amazonaws.com/default/leetcode-stats?username=KnlnKS&amp;amp;theme=dark&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;h4&gt;53 . &lt;a href=&#34;https://github.com/siddharth2016/quote-readme&#34;&gt;Quote Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A GitHub Action that allows you to place a random quote/fun-fact on your README file, from a collection of famous computer science quotes/facts !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/siddharth2016/quote-readme/main/images/result.png&#34; alt=&#34;Random Quote On Readme Result&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;54 . &lt;a href=&#34;https://github.com/ajmeese7/readme-ascii&#34;&gt;Readme Ascii&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A GitHub Action that allows you to place a random quote/fun-fact on your README file, from a collection of famous computer science quotes/facts !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/17814535/88974985-14ced400-d27f-11ea-83a8-065d86dd8d26.png&#34; alt=&#34;readme-ascii&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;55 . &lt;a href=&#34;https://github.com/mayankchaudhary26/Cool-Readme-ideas&#34;&gt;Cool Readme profile items&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Some cool ideas for your readme profile, enjoy :) and You can access cool gifs through this repository&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34; align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/ece04e9e6d8e7370a88024f41d544915e01ce71b5457326c08349cc282ccf2d4/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6c6e377a32655772696951416c6c6656636e2f323030772e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ece04e9e6d8e7370a88024f41d544915e01ce71b5457326c08349cc282ccf2d4/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6c6e377a32655772696951416c6c6656636e2f323030772e77656270&#34; data-canonical-src=&#34;https://media3.giphy.com/media/ln7z2eWriiQAllfVcn/200w.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/a3ccfae79c559d3ff0c7ece89882c93bf278d01f0d2a1d908e19497630dca49d/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4c4d7439363338644f38646674416a74636f2f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a3ccfae79c559d3ff0c7ece89882c93bf278d01f0d2a1d908e19497630dca49d/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4c4d7439363338644f38646674416a74636f2f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/LMt9638dO8dftAjtco/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/cda2bff49eb0cd388393e08dd91cc3cf461f095e387d3fdcb8648ab0418010aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f654e41736a4f353574506267616f72376d612f323030772e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cda2bff49eb0cd388393e08dd91cc3cf461f095e387d3fdcb8648ab0418010aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f654e41736a4f353574506267616f72376d612f323030772e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/eNAsjO55tPbgaor7ma/200w.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/3cc5769614aa5306d6452456e393b58ecfe23c4a904ca52dece5341e0794cbe9/68747470733a2f2f692e67697068792e636f6d2f6d656469612f56674774686b68557647674f6974375939692f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3cc5769614aa5306d6452456e393b58ecfe23c4a904ca52dece5341e0794cbe9/68747470733a2f2f692e67697068792e636f6d2f6d656469612f56674774686b68557647674f6974375939692f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/VgGthkhUvGgOit7Y9i/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/bb12151c6b0cad592b4b7449df388a6db7aa7ceae45ef7cc03c9d4cab56dc90e/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6b64466338667562675333316238447356752f67697068792e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/bb12151c6b0cad592b4b7449df388a6db7aa7ceae45ef7cc03c9d4cab56dc90e/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6b64466338667562675333316238447356752f67697068792e77656270&#34; data-canonical-src=&#34;https://media3.giphy.com/media/kdFc8fubgS31b8DsVu/giphy.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/0cad3f969b0946abd0e5f16e9ed1ff78a2495a40c2bb5c6414aefd4be76505aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4b7a4a6b7a6a676766474e355079366e6b542f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0cad3f969b0946abd0e5f16e9ed1ff78a2495a40c2bb5c6414aefd4be76505aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4b7a4a6b7a6a676766474e355079366e6b542f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/KzJkzjggfGN5Py6nkT/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/4d67389739aa53e876a878719fa61eeebea468ae0be6af71903fa8c4c9b72018/68747470733a2f2f692e67697068792e636f6d2f6d656469612f49647941514a564e326b56504e55726f6a4d2f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4d67389739aa53e876a878719fa61eeebea468ae0be6af71903fa8c4c9b72018/68747470733a2f2f692e67697068792e636f6d2f6d656469612f49647941514a564e326b56504e55726f6a4d2f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/IdyAQJVN2kVPNUrojM/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;56 . &lt;a href=&#34;https://github.com/kyechan99/capsule-render&#34;&gt;Capsule Render&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamic Coloful Image Render&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/0da1f68bf3ed97f972472f31e1dbf68514bc3f72761bf300f8474f53ffab7932/68747470733a2f2f63617073756c652d72656e6465722e76657263656c2e6170702f6170693f747970653d776176696e6726636f6c6f723d6175746f266865696768743d3330302673656374696f6e3d68656164657226746578743d63617073756c6525323072656e64657226666f6e7453697a653d393026616e696d6174696f6e3d66616465496e26666f6e74416c69676e593d333826646573633d4465636f7261746525323047697448756225323050726f66696c652532306f72253230616e792532305265706f2532306c696b652532306d65212664657363416c69676e593d35312664657363416c69676e3d3632&#34; alt=&#34;header&#34; data-canonical-src=&#34;https://capsule-render.vercel.app/api?type=waving&amp;amp;color=auto&amp;amp;height=300&amp;amp;section=header&amp;amp;text=capsule%20render&amp;amp;fontSize=90&amp;amp;animation=fadeIn&amp;amp;fontAlignY=38&amp;amp;desc=Decorate%20GitHub%20Profile%20or%20any%20Repo%20like%20me!&amp;amp;descAlignY=51&amp;amp;descAlign=62&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;57 . &lt;a href=&#34;https://github.com/maddhruv/github-readme-npm-downloads&#34;&gt;Github Readme npm Downloads&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show npm packages downloads ⏬ in GitHub README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/post-merge-install&#34; rel=&#34;nofollow&#34;&gt;post-merge-install&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;185021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/types-directory&#34; rel=&#34;nofollow&#34;&gt;types-directory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;59207&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/install-types&#34; rel=&#34;nofollow&#34;&gt;install-types&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;23071&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/engines-ok&#34; rel=&#34;nofollow&#34;&gt;engines-ok&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;19752&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/npmtotal&#34; rel=&#34;nofollow&#34;&gt;npmtotal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;18267&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;58 . &lt;a href=&#34;https://github.com/LordDashMe/github-contribution-stats&#34;&gt;Github Contribution Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated Github Contribution Stats. 📈 📆&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/b553f4908c78ff3c44d05538fea89b83080611887afee4896d0bd5b1f65b2108/68747470733a2f2f6769746875622d636f6e747269627574696f6e2d73746174732e76657263656c2e6170702f6170692f3f757365726e616d653d6d686576657279&#34; alt=&#34;Contribution Stats&#34; data-canonical-src=&#34;https://github-contribution-stats.vercel.app/api/?username=mhevery&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;59 . &lt;a href=&#34;https://github.com/bytebase/star-history&#34;&gt;Github Star History&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated GitHub repository star chart. 📈 ⭐️&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#rzashakeri/beautify-github-profile&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=rzashakeri/beautify-github-profile&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;60 . &lt;a href=&#34;https://github.com/hmu332233/moon.svg&#34;&gt;Moon.svg&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add real-time moon on your github profile!&lt;br&gt; Moon.svg shows the current moon phase in real time!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;a href=&#34;https://moon-svg.minung.dev&#34;&gt; &lt;img src=&#34;https://moon-svg.minung.dev/moon.svg?theme=basic&#34; alt=&#34;moon.svg&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://moon-svg.minung.dev&#34;&gt; &lt;img src=&#34;https://moon-svg.minung.dev/moon.svg?theme=ray&#34; alt=&#34;moon.svg&#34;&gt; &lt;/a&gt; &#xA;&lt;h4&gt;61 . &lt;a href=&#34;https://github.com/johannchopin/stackoverflow-readme-profile&#34;&gt;Stackoverflow Readme Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Easily share your Stackoverflow&#39;s profile on your README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg?sanitize=true&#34; alt=&#34;profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;62 . &lt;a href=&#34;https://github.com/PiyushSuthar/github-readme-quotes&#34;&gt;Github Readme Programming Quotes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Programming Quotes To Your GitHub Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/piyushsuthar/github-readme-quotes&#34;&gt;&lt;img src=&#34;https://quotes-github-readme.vercel.app/api?type=horizontal&amp;amp;theme=dark&#34; alt=&#34;Readme Quotes&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✅ Icons 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://simpleicons.org/&#34;&gt;Simple Icons&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;2246 Free SVG icons for popular brands &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;svg role=&#34;img&#34; width=&#34;50&#34; viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;  &lt;path d=&#34;M10.51,10.013V7.299c0-0.306,0.248-0.554,0.554-0.554h1.911c0.306,0,0.554,0.248,0.554,0.554v4.968 c0,0.076-0.038,0.134-0.076,0.191l-0.478,0.478c-0.115,0.115-0.115,0.287,0,0.382l0.478,0.478c0.057,0.057,0.076,0.115,0.076,0.191 v2.713c0,0.306-0.248,0.554-0.554,0.554h-1.911c-0.306,0-0.554-0.248-0.554-0.554v-4.968c0-0.076,0.038-0.134,0.076-0.191 l0.478-0.478c0.115-0.115,0.115-0.287,0-0.382l-0.478-0.478C10.529,10.146,10.51,10.089,10.51,10.013z M19.127,12 c0-3.936-3.191-7.127-7.127-7.127S4.873,8.064,4.873,12S8.064,19.127,12,19.127S19.127,15.936,19.127,12z M21.382,12 c0,5.178-4.204,9.363-9.363,9.363c-5.178,0-9.363-4.204-9.363-9.363c0-5.178,4.204-9.363,9.363-9.363 C17.178,2.637,21.382,6.822,21.382,12z M0.764,12c0,6.21,5.025,11.236,11.236,11.236S23.236,18.21,23.236,12S18.21,0.764,12,0.764 S0.764,5.79,0.764,12z M0,12C0,5.369,5.369,0,12,0c6.631,0,12,5.369,12,12s-5.369,12-12,12S0,18.631,0,12z&#34; /&gt;&#xA; &lt;/svg&gt; &amp;nbsp; &#xA; &lt;svg role=&#34;img&#34; width=&#34;50&#34; viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;  &lt;path d=&#34;M11.964 0L.672 3.974l1.784 14.794L11.976 24l9.568-5.303 1.784-14.794zm-.027 1.258l10.265 3.5-1.663 13.232-8.602 4.76-8.469-4.697L1.939 4.822zm0 .78L4.957 17.57l2.604-.048 1.4-3.501h6.257l1.532 3.55 2.492.046zm.02 4.98l2.355 4.93H9.878Z&#34; /&gt;&#xA; &lt;/svg&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/tandpfun/skill-icons&#34;&gt;Skill Icons&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Showcase your skills on your Github readme or resumé with ease ✨ &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://skillicons.dev/icons?i=all&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;If you like, you can also help me develop this repository so that from now on we have more beautiful github profiles 💙&lt;/h3&gt; &#xA;&lt;h1&gt;Give A Star ⭐&lt;/h1&gt; &#xA;&lt;p&gt;You can also give this repository a star to show more people and they can use this repository&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>massgravel/Microsoft-Activation-Scripts</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/massgravel/Microsoft-Activation-Scripts</id>
    <link href="https://github.com/massgravel/Microsoft-Activation-Scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of scripts for activating Microsoft products using HWID / KMS38 / Online KMS activation methods with a focus on open-source code, less antivirus detection and user-friendliness.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href=&#34;https://windowsaddict.ml/&#34;&gt;https://windowsaddict.ml/&lt;/a&gt; is replaced with &lt;a href=&#34;https://massgrave.dev/&#34;&gt;https://massgrave.dev/&lt;/a&gt; because of DNS issue with free domains.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/massgravel/Microsoft-Activation-Scripts/releases&#34;&gt;Download Link&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Latest Version: 1.5&#xA;Release date: 11-Jan-2022&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Homepage:&lt;/strong&gt;&amp;nbsp; &lt;a href=&#34;https://massgrave.dev/&#34;&gt;https://massgrave.dev/&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://discord.gg/gjJEfq7ux8&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/746721520931569757/widget.png?style=banner3&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Microsoft Activation Scripts (MAS):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of scripts for activating Microsoft products using HWID / KMS38 / Online KMS activation methods with a focus on open-source code, less antivirus detection and user-friendliness.&lt;/p&gt; &#xA;&lt;table border=&#34;1&#34; cellpadding=&#34;1&#34; cellspacing=&#34;0&#34; style=&#34;width:486px&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:478px&#34;&gt;&lt;strong&gt;How to use it?&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width:478px&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Download the file named &#39;MAS_1.5_Password_1234.7z&#39; from &lt;a href=&#34;https://github.com/massgravel/Microsoft-Activation-Scripts/releases&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Extract this file with a 3rd party archive manager, such as &lt;a href=&#34;https://www.7-zip.org/download.html&#34; target=&#34;_blank&#34;&gt;7zip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Password is&lt;strong&gt; &lt;/strong&gt;1234&lt;/li&gt; &#xA;     &lt;li&gt;Go to the folder named &#39;All-In-One-Version&#39;&lt;/li&gt; &#xA;     &lt;li&gt;Run the file named &#39;MAS_1.5_AIO_CRC32_21D20776.cmd&#39;&lt;/li&gt; &#xA;     &lt;li&gt;You will see the activation options, follow onscreen instructions.&lt;/li&gt; &#xA;     &lt;li&gt;That&#39;s all.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table border=&#34;1&#34; cellpadding=&#34;1&#34; cellspacing=&#34;0&#34; style=&#34;width:558px&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:550px&#34;&gt;&lt;strong&gt;MAS Features:&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width:550px&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;HWID Activation&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [Downlevel &amp;amp; Lockbox Method]&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;KMS38 Activation&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [With protection &amp;amp; Uninstallation option]&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Online KMS Activation&amp;nbsp; [Batch file-based, no KMS related .dll/.exe required]&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;$OEM$ Folders For Preactivation&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Activation Troubleshoot&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Insert Windows 10-11 HWID Key&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Change Windows 10-11 Edition&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Check Windows-Office (Including Subscription) Activation Status&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Available in All In One &amp;amp; Separate Files Version&lt;/li&gt; &#xA;     &lt;li style=&#34;text-align:justify&#34;&gt;Fully Open Source&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table border=&#34;1&#34; cellpadding=&#34;1&#34; cellspacing=&#34;0&#34; style=&#34;width:622px&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;3&#34; style=&#34;text-align:center; width:614px&#34;&gt;&lt;strong&gt;Activations Summary&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:112px&#34;&gt;&lt;strong&gt;Activation Type&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:160px&#34;&gt;&lt;strong&gt;Supported Product&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:332px&#34;&gt;&lt;strong&gt;Activation Period&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:112px&#34;&gt;HWID&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:160px&#34;&gt;Windows 10-11&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:332px&#34;&gt;Permanent&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:112px&#34;&gt;KMS38&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:160px&#34;&gt;Windows 10-11-Server&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:332px&#34;&gt;Until the year 2038&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;text-align:center; width:112px&#34;&gt;Online KMS&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:160px&#34;&gt;Windows / Office&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center; width:332px&#34;&gt;180 Days. Lifetime Activation With Renewal Task&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;3&#34; style=&#34;width:614px&#34;&gt;&amp;nbsp;For more details, use the respective activations read me.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table border=&#34;1&#34; cellpadding=&#34;1&#34; cellspacing=&#34;0&#34; style=&#34;width:658px&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width:650px&#34;&gt;Read Me&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width:650px&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-hwid.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;HWID Activation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-kms38.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;KMS38 Activation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-online-kms.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Online KMS Activation&lt;/a&gt;&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-hwid-kms38-files.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;HWID KMS38 Files Info&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-online-kms-files.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Online KMS Files Info&lt;/a&gt;&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-activation-faq.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Activation FAQ&#39;s&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-oem-folder.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Extract $OEM$ Folder For Preactivation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-genuine-installation-media.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Genuine Installation Media Links&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/office-license-is-not-genuine.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Office License Is Not Genuine Banner&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-unreadable-codes-in-mas-aio.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;What are those big blocks of Unreadable Codes In MAS AIO Version&lt;/a&gt;&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-troubleshoot-hwid.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Troubleshoot HWID&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-troubleshoot-kms38.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Troubleshoot KMS38&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-troubleshoot-onlinekms.html&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Troubleshoot Online KMS&lt;/a&gt;&lt;br&gt; &amp;nbsp;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-mas-changelog.html&#34; target=&#34;_blank&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/readme-mas-credits.html&#34; target=&#34;_blank&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://massgrave.dev/mas-todo-list.html&#34;&gt;Issues / To Do List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Made with Love ❤️&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/copilot-docs</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/github/copilot-docs</id>
    <link href="https://github.com/github/copilot-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Copilot &lt;img src=&#34;https://img.shields.io/badge/version-technical_preview-green&#34; alt=&#34;Version&#34;&gt;&lt;/h1&gt; &#xA;&lt;img width=&#34;128&#34; alt=&#34;GitHub Copilot Logo&#34; src=&#34;https://user-images.githubusercontent.com/28068/123712981-02676c80-d839-11eb-919a-96ee0c895e15.png&#34;&gt; &#xA;&lt;p&gt;Welcome to the GitHub Copilot user community! In this repository, you can find documentation, walkthroughs, examples, and the latest resources you need to use GitHub Copilot.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To install GitHub Copilot, check out the Getting Started guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudiocode/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudio/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/jetbrains/gettingstarted.md#getting-started-with-github-copilot-in-jetbrains&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/copilot.vim#getting-started&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a tour of GitHub Copilot, visit the homepage at &lt;a href=&#34;https://copilot.github.com&#34;&gt;copilot.github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to get help&lt;/h2&gt; &#xA;&lt;p&gt;Have a question, or want to provide feedback? Visit the &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt; to ask questions, share bugs or feedback, or chat with other users in the Preview. The GitHub Copilot team will respond as often as possible, but we also welcome you to share your experiences and help others in the community.&lt;/p&gt; &#xA;&lt;h2&gt;Safety&lt;/h2&gt; &#xA;&lt;p&gt;We take safety seriously and are constantly working to improve GitHub Copilot. If you discover dangerous, biased, or offensive output from GitHub Copilot, please report it privately to &lt;a href=&#34;mailto:copilot-safety@github.com&#34;&gt;copilot-safety@github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copilot.github.com&#34;&gt;GitHub Copilot homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;All users of GitHub Copilot are expected to comply with our &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;. By participating in this repository, you are also agreeing to the same &lt;a href=&#34;https://help.github.com/articles/github-terms-of-service/&#34;&gt;Terms of Service&lt;/a&gt; that you agree to when using GitHub.com.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Content in this repository is released under &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/LICENSE.txt&#34;&gt;CC-BY-4.0&lt;/a&gt;. When using the GitHub logos, be sure to follow the &lt;a href=&#34;https://github.com/logos&#34;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trustwallet/assets</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/trustwallet/assets</id>
    <link href="https://github.com/trustwallet/assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trust Wallet Assets Info&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/trustwallet/assets/workflows/Check/badge.svg?sanitize=true&#34; alt=&#34;Check&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Trust Wallet token repository is a comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trustwallet.com&#34;&gt;Trust Wallet&lt;/a&gt; uses token logos from this source, alongside a number of other projects.&lt;/p&gt; &#xA;&lt;p&gt;The repository contains token info from several blockchains, info on dApps, staking validators, etc. For every token a logo and optional additional information is available (such data is not available on-chain).&lt;/p&gt; &#xA;&lt;p&gt;Such a large collection can be maintained only through a community effort, so &lt;em&gt;feel free to add your token&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;center&gt;&#xA; &lt;img src=&#34;https://trustwallet.com/assets/images/media/assets/horizontal_blue.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/center&gt; &#xA;&lt;h2&gt;How to add token&lt;/h2&gt; &#xA;&lt;p&gt;Please note that &lt;strong&gt;brand new tokens are not accepted&lt;/strong&gt;, the projects have to be sound, with information available, and &lt;strong&gt;non-minimal circulation&lt;/strong&gt; (for limit details see &lt;a href=&#34;https://developer.trustwallet.com/assets/requirements&#34;&gt;https://developer.trustwallet.com/assets/requirements&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Assets App&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://assets.trustwallet.com&#34;&gt;Assets web app&lt;/a&gt; can be used for most new token additions (Github account is needed).&lt;/p&gt; &#xA;&lt;h3&gt;Quick starter&lt;/h3&gt; &#xA;&lt;p&gt;Details of the repository structure and contribution guidelines are listed on the &lt;a href=&#34;https://developer.trustwallet.com/assets/new-asset&#34;&gt;Developers site&lt;/a&gt;. Here is a quick starter summary for the most common use case.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For details, see the &lt;a href=&#34;https://developer.trustwallet.com&#34;&gt;Developers site&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.trustwallet.com/assets/repository_details&#34;&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.trustwallet.com/assets/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;There are several scripts available for maintainers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;make check&lt;/code&gt; -- Execute validation checks; also used in continuous integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make fix&lt;/code&gt; -- Perform automatic fixes where possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make update-auto&lt;/code&gt; -- Run automatic updates from external sources, executed regularly (GitHub action)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-token asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Create &lt;code&gt;info.json&lt;/code&gt; file as asset template.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-tokenlist asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Adds a token to tokenlist.json.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-tokenlist-extended asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Adds a token to tokenlist-extended.json.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;On Checks&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains a set of scripts for verification of all the information. Implemented as Golang scripts, available through &lt;code&gt;make check&lt;/code&gt;, and executed in CI build; checks the whole repo. There are similar check logic implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in assets-management app; for checking changed token files in PRs, or when creating a PR. Checks diffs, can be run from browser environment.&lt;/li&gt; &#xA; &lt;li&gt;in merge-fee-bot, which runs as a GitHub app shows result in PR comment. Executes in a non-browser environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Trading pair maintenance&lt;/h2&gt; &#xA;&lt;p&gt;Info on supported trading pairs are stored in &lt;code&gt;tokenlist.json&lt;/code&gt; files. Trading pairs can be updated -- from Uniswap/Ethereum and PancakeSwap/Smartchain -- using update script (and checking in changes). Minimal limit values for trading pair inclusion are set in the &lt;a href=&#34;https://github.com/trustwallet/assets/raw/master/.github/assets.config.yaml&#34;&gt;config file&lt;/a&gt;. There are also options for force-include and force-exclude in the config.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Trust Wallet team allows anyone to submit new assets to this repository. However, this does not mean that we are in direct partnership with all of the projects.&lt;/p&gt; &#xA;&lt;p&gt;Trust Wallet team will reject projects that are deemed as scam or fraudulent after careful review. Trust Wallet team reserves the right to change the terms of asset submissions at any time due to changing market conditions, risk of fraud, or any other factors we deem relevant.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, spam-like behavior, including but not limited to mass distribution of tokens to random addresses will result in the asset being flagged as spam and possible removal from the repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/imagen-pytorch</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/lucidrains/imagen-pytorch</id>
    <link href="https://github.com/lucidrains/imagen-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Imagen, Google&#39;s Text-to-Image Neural Network, in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/imagen-pytorch/main/imagen.png&#34; width=&#34;450px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Imagen - Pytorch (wip)&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://gweb-research-imagen.appspot.com/&#34;&gt;Imagen&lt;/a&gt;, Google&#39;s Text-to-Image Neural Network that beats DALL-E2, in Pytorch. It is the new SOTA for text-to-image synthesis.&lt;/p&gt; &#xA;&lt;p&gt;Architecturally, it is actually much simpler than DALL-E2. It consists of a cascading DDPM conditioned on text embeddings from a large pretrained T5 model (attention network). It also contains dynamic clipping for improved classifier free guidance, noise level conditioning, and a memory efficient unet design.&lt;/p&gt; &#xA;&lt;p&gt;It appears neither CLIP nor prior network is needed after all. And so research continues.&lt;/p&gt; &#xA;&lt;p&gt;Please join &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img alt=&#34;Join us on Discord&#34; src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; if you are interested in helping out with the replication with the &lt;a href=&#34;https://laion.ai/&#34;&gt;LAION&lt;/a&gt; community&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install imagen-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;    layer_cross_attns = (False, True, True, True)&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 768).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = imagen(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    loss.backward()&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = imagen.sample(texts = [&#xA;    &#39;a whale breaching from afar&#39;,&#xA;    &#39;young girl blowing out candles on her birthday cake&#39;,&#xA;    &#39;fireworks with blue and green sparkles&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (3, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the &lt;code&gt;ImagenTrainer&lt;/code&gt; wrapper class, the exponential moving averages for all of the U-nets in the cascading DDPM will be automatically taken care of when calling &lt;code&gt;update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen, ImagenTrainer&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    text_encoder_name = &#39;t5-large&#39;,&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# wrap imagen with the trainer class&#xA;&#xA;trainer = ImagenTrainer(imagen)&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 1024).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = trainer(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    trainer.update(unet_number = i)&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = trainer.sample(texts = [&#xA;    &#39;a puppy looking anxiously at a giant donut on the table&#39;,&#xA;    &#39;the milky way galaxy in the style of monet&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (2, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Shoutouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;StabilityAI&lt;/a&gt; for the generous sponsorship, as well as my other sponsors out there&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://huggingface.co/&#34;&gt;🤗 Huggingface&lt;/a&gt; for their amazing transformers library. The text encoder portion is pretty much taken care of because of them&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jorgemcgomes&#34;&gt;Jorge Gomes&lt;/a&gt; for helping out with the T5 loading code and advice on the correct T5 version&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine Crowson&lt;/a&gt;, for her &lt;a href=&#34;https://github.com/crowsonkb/v-diffusion-jax/raw/master/diffusion/utils.py&#34;&gt;beautiful code&lt;/a&gt;, which helped me understand the continuous time version of gaussian diffusion&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You? It isn&#39;t done yet, chip in if you are a researcher or skilled ML engineer&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use huggingface transformers for T5-small text embeddings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding DALLE2 and video-diffusion repository as well&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; allow for one to set T5-large (and perhaps small factory method to take in any huggingface transformer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add the lowres noise level with the pseudocode in appendix, and figure out what is this sweep they do at inference time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; port over some training code from DALLE2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; need to be able to use a different noise schedule per unet (cosine was used for base, but linear for SR)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; just make one master-configurable unet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete resnet block (biggan inspired? but with groupnorm) - complete self attention&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete conditioning embedding block (and make it completely configurable, whether it be attention, film etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; consider using perceiver-resampler from &lt;a href=&#34;https://github.com/lucidrains/flamingo-pytorch&#34;&gt;https://github.com/lucidrains/flamingo-pytorch&lt;/a&gt; in place of attention pooling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add attention pooling option, in addition to cross attention and film&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add optional cosine decay schedule with warmup, for each unet, to trainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; figure out if learned variance was used at all, and remove it if it was inconsequential&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; switch to continuous timesteps instead of discretized, as it seems that is what they used for all stages - first figure out the linear noise schedule case from the variational ddpm paper &lt;a href=&#34;https://openreview.net/forum?id=2LdBqxc1Yv&#34;&gt;https://openreview.net/forum?id=2LdBqxc1Yv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; exercise efficient attention expertise + explore skip layer excitation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; try out grid attention&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Saharia2022PhotorealisticTD,&#xA;    title   = {Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding},&#xA;    author  = {Chitwan Saharia and William Chan and Saurabh Saxena and Lala Li and Jay Whang and Emily L. Denton and Seyed Kamyar Seyed Ghasemipour and Burcu Karagol Ayan and Seyedeh Sara Mahdavi and Raphael Gontijo Lopes and Tim Salimans and Jonathan Ho and David Fleet and Mohammad Norouzi},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Tu2022MaxViTMV,&#xA;    title   = {MaxViT: Multi-Axis Vision Transformer},&#xA;    author  = {Zhengzhong Tu and Hossein Talebi and Han Zhang and Feng Yang and Peyman Milanfar and Alan Conrad Bovik and Yinxiao Li},&#xA;    year    = {2022},&#xA;    url     = {https://arxiv.org/abs/2204.01697}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Alayrac2022Flamingo,&#xA;    title   = {Flamingo: a Visual Language Model for Few-Shot Learning},&#xA;    author  = {Jean-Baptiste Alayrac et al},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>smartcontractkit/full-blockchain-solidity-course-js</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/smartcontractkit/full-blockchain-solidity-course-js</id>
    <link href="https://github.com/smartcontractkit/full-blockchain-solidity-course-js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn Blockchain, Solidity, and Full Stack Web3 Development with Javascript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web3, Full Stack Solidity, Smart Contract &amp;amp; Blockchain - Beginner to Expert ULTIMATE Course | Javascript Edition&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/img/blockchain1.png&#34; width=&#34;500&#34; alt=&#34;Solidity, Blockchain, and Smart Contract Course – Beginner to Expert Javascript Tutorial&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Welcome to the repository for the Ultimate Web3, Full Stack Solidity, and Smart Contract - Beginner to Expert Full Course | Javascript Edition FreeCodeCamp Course!&lt;/p&gt; &#xA;&lt;h1&gt;Link to video: &lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&#34;&gt;https://www.youtube.com/watch?v=gyMwXuJrbJQ&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;All code references have both a javascript and a typescript edition.&lt;/p&gt; &#xA;&lt;p&gt;Recommended Testnet: Rinkeby&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://faucets.chain.link&#34;&gt;Testnet Faucets&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Main Faucet: &lt;a href=&#34;https://faucets.chain.link&#34;&gt;https://faucets.chain.link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Backup Faucet: &lt;a href=&#34;https://rinkebyfaucet.com/&#34;&gt;https://rinkebyfaucet.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ All code associated with this course is for demo purposes only. They have not been audited and should not be considered production ready. Please use at your own risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Resources For This Course&lt;/h1&gt; &#xA;&lt;h3&gt;Questions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/full-blockchain-solidity-course-py/discussions&#34;&gt;Github Discussions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ask questions and chat about the course here!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/&#34;&gt;Stack Exchange Ethereum&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Great place for asking technical questions about Ethereum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/&#34;&gt;StackOverflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Great place for asking technical questions overall&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Resources&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testnet-faucets&#34;&gt;Testnet Faucets&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#resources-for-this-course&#34;&gt;Resources For This Course&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#questions&#34;&gt;Questions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-0-the-edge-of-the-rabbit-hole&#34;&gt;Lesson 0: The Edge of the Rabbit Hole&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#welcome-to-the-course&#34;&gt;Welcome to the course! &lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#best-practices&#34;&gt;Best Practices &lt;/a&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-1-blockchain-basics&#34;&gt; Lesson 1: Blockchain Basics &lt;/a&gt; &lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-a-blockchain-what-does-a-blockchain-do&#34;&gt;What is a Blockchain? What does a blockchain do?&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#the-purpose-of-smart-contracts&#34;&gt;The Purpose Of Smart Contracts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#other-blockchain-benefits&#34;&gt;Other Blockchain Benefits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-have-smart-contracts-done-so-far&#34;&gt;What have Smart Contracts done so far?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#making-your-first-transaction&#34;&gt;Making Your First Transaction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#gas-i-introduction-to-gas&#34;&gt;Gas I: Introduction to Gas&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#how-do-blockchains-work&#34;&gt;How Do Blockchains Work?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#signing-transactions&#34;&gt;Signing Transactions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#gas-ii&#34;&gt;Gas II&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#high-level-blockchain-fundamentals&#34;&gt;High-Level Blockchain Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-2-welcome-to-remix-simple-storage&#34;&gt;Lesson 2: Welcome to Remix! Simple Storage&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#setting-up-your-first-contract&#34;&gt;Setting Up Your First Contract&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-types&#34;&gt;Basic Solidity: Types&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-functions&#34;&gt;Basic Solidity: Functions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-arrays--structs&#34;&gt;Basic Solidity: Arrays &amp;amp; Structs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-compiler-errors-and-warnings&#34;&gt;Basic Solidity: Compiler Errors and Warnings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#memory-storage-calldata-intro&#34;&gt;Memory, Storage, Calldata (Intro)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#mappings&#34;&gt;Mappings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-your-first-contract&#34;&gt;Deploying your First Contract&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#the-evm--a-recap-of-lesson-2&#34;&gt;The EVM &amp;amp; A Recap of Lesson 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-3-remix-storage-factory&#34;&gt;Lesson 3: Remix Storage Factory&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-1&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-importing-contracts-into-other-contracts&#34;&gt;Basic Solidity: Importing Contracts into other Contracts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-interacting-with-other-contracts&#34;&gt;Basic Solidity: Interacting with other Contracts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-inheritance--overrides&#34;&gt;Basic Solidity: Inheritance &amp;amp; Overrides&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-3-recap&#34;&gt;Lesson 3 Recap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-4-remix-fund-me&#34;&gt;Lesson 4: Remix Fund Me&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-2&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#sending-eth-through-a-function--reverts&#34;&gt;Sending ETH Through a Function &amp;amp; Reverts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#chainlink--oracles&#34;&gt;Chainlink &amp;amp; Oracles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#review-of-sending-eth-and-working-with-chainlink&#34;&gt;Review of Sending ETH and working with Chainlink&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#interfaces--price-feeds&#34;&gt;Interfaces &amp;amp; Price Feeds&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#importing-from-github--npm&#34;&gt;Importing from GitHub &amp;amp; NPM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#floating-point-math-in-solidtiy&#34;&gt;Floating Point Math in Solidtiy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-arrays--structs-ii&#34;&gt;Basic Solidity: Arrays &amp;amp; Structs II&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#review-of-interfacs-importing-from-github--math-in-solidity&#34;&gt;Review of Interfacs, Importing from GitHub, &amp;amp; Math in Solidity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#libraries&#34;&gt;Libraries&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#safemath-overflow-checking-and-the-unchecked-keywork&#34;&gt;SafeMath, Overflow Checking, and the &#34;unchecked&#34; keywork&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-for-loop&#34;&gt;Basic Solidity: For Loop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-resetting-an-array&#34;&gt;Basic Solidity: Resetting an Array&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#sending-eth-from-a-contract&#34;&gt;Sending ETH from a Contract&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-constructor&#34;&gt;Basic Solidity: Constructor&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-solidity-modifiers&#34;&gt;Basic Solidity: Modifiers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testnet-demo&#34;&gt;Testnet Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#advanced-solidity&#34;&gt;Advanced Solidity&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#immutable--constant&#34;&gt;Immutable &amp;amp; Constant&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#custom-errors&#34;&gt;Custom Errors&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#receive--fallback-functions&#34;&gt;Receive &amp;amp; Fallback Functions&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-4-recap&#34;&gt;Lesson 4 Recap&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt;&lt;/li&gt;&#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-5-ethersjs-simple-storage&#34;&gt;Lesson 5: Ethers.js Simple Storage&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#effective-debugging-strategies--getting-help&#34;&gt;Effective Debugging Strategies &amp;amp; Getting Help&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#how-to-debug-anything-video&#34;&gt;How to Debug Anything Video&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#installation--setup&#34;&gt;Installation &amp;amp; Setup&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#mac--linux-setup&#34;&gt;Mac &amp;amp; Linux Setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#windows-setup&#34;&gt;Windows Setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#gitpod&#34;&gt;Gitpod&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#local-development-introduction&#34;&gt;Local Development Introduction&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#optional-javascript-crash-courses&#34;&gt;Optional Javascript Crash Courses&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#tiny-javascript-refresher&#34;&gt;Tiny Javascript Refresher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#asynchronous-programming-in-javascript&#34;&gt;Asynchronous Programming in Javascript&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#compiling-our-solidity&#34;&gt;Compiling our Solidity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#ganache--networks&#34;&gt;Ganache &amp;amp; Networks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-ethersjs&#34;&gt;Introduction to Ethers.js&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#a-note-on-the-await-keyword&#34;&gt;A Note on the await Keyword&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#adding-transaction-overrides&#34;&gt;Adding Transaction Overrides&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#transaction-receipts&#34;&gt;Transaction Receipts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#sending-a-raw-transaction-in-ethersjs&#34;&gt;Sending a &#34;raw&#34; Transaction in Ethersjs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#interacting-with-contracts-in-ethersjs&#34;&gt;Interacting with Contracts in Ethersjs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#better-private-key-management&#34;&gt;Better Private Key Management&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#optional-prettier-formatting&#34;&gt;Optional Prettier Formatting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-to-a-testnet-or-a-mainnet&#34;&gt;Deploying to a Testnet or a Mainnet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#verifying-on-block-explorers-from-the-ui&#34;&gt;Verifying on Block Explorers from the UI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#alchemy-dashboard--the-mempool&#34;&gt;Alchemy Dashboard &amp;amp; The Mempool&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-5-recap&#34;&gt;Lesson 5 Recap&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#typescript-ethers-simple-storage&#34;&gt;Typescript Ethers Simple Storage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-6-hardhat-simple-storage&#34;&gt;Lesson 6: Hardhat Simple Storage&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-3&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup&#34;&gt;Hardhat Setup&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#troubleshooting-hardaht-setup&#34;&gt;Troubleshooting Hardaht Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup-continued&#34;&gt;Hardhat Setup Continued&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-simplestorage-from-hardhat&#34;&gt;Deploying SimpleStorage from Hardhat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#networks-in-hardhat&#34;&gt;Networks in Hardhat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#programatic-verification&#34;&gt;Programatic Verification&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#interacting-with-contracts-in-hardhat&#34;&gt;Interacting with Contracts in Hardhat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#artifacts-troubleshooting&#34;&gt;Artifacts Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#custom-hardhat-tasks&#34;&gt;Custom Hardhat Tasks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-localhost-node&#34;&gt;Hardhat Localhost Node&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#the-hardhat-console&#34;&gt;The Hardhat Console&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-tests&#34;&gt;Hardhat Tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-gas-reporter&#34;&gt;Hardhat Gas Reporter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#solidity-coverage&#34;&gt;Solidity Coverage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-waffle&#34;&gt;Hardhat Waffle&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-6-recap&#34;&gt;Lesson 6 Recap&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#typescript-hardhat-simple-storage&#34;&gt;Typescript Hardhat Simple Storage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-7-hardhat-fund-me&#34;&gt;Lesson 7: Hardhat Fund Me&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-4&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup---fund-me&#34;&gt;Hardhat Setup - Fund Me&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#linting&#34;&gt;Linting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup---fund-me---continued&#34;&gt;Hardhat Setup - Fund Me - Continued&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#importing-from-npm&#34;&gt;Importing from NPM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-deploy&#34;&gt;Hardhat Deploy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#mocking&#34;&gt;Mocking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#utils-folder&#34;&gt;Utils Folder&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testnet-demo---hardhat-fund-me&#34;&gt;Testnet Demo - Hardhat Fund Me&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#solidity-style-guide&#34;&gt;Solidity Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testing-fund-me&#34;&gt;Testing Fund Me&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#breakpoints--debugging&#34;&gt;Breakpoints &amp;amp; Debugging&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#gas-iii&#34;&gt;Gas III:&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#consolelog--debugging&#34;&gt;console.log &amp;amp; Debugging&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testing-fund-me-ii&#34;&gt;Testing Fund Me II&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#storage-in-solidity&#34;&gt;Storage in Solidity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#gas-optimizations-using-storage-knowledge&#34;&gt;Gas Optimizations using Storage Knowledge&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#solidity-chainlink-style-guide&#34;&gt;Solidity Chainlink Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#storage-review&#34;&gt;Storage Review&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#staging-tests&#34;&gt;Staging Tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#running-scripts-on-a-local-node&#34;&gt;Running Scripts on a Local Node&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#adding-scripts-to-your-packagejson&#34;&gt;Adding Scripts to your package.json&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#pushing-to-github&#34;&gt;Pushing to GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#-tweet-me-add-your-repo-in&#34;&gt;🐸🐦 Tweet Me (add your repo in)!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-8-html--javascript-fund-me-full-stack--front-end&#34;&gt;Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-5&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#how-websites-work-with-web3-wallets&#34;&gt;How Websites work with Web3 Wallets&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#html-setup&#34;&gt;HTML Setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#connecting-html-to-metamask&#34;&gt;Connecting HTML to Metamask&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#javascript-in-its-own-file&#34;&gt;Javascript in it&#39;s own file&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#es6-vs-nodejs&#34;&gt;ES6 vs Nodejs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#sending-a-transaction-from-a-website&#34;&gt;Sending a transaction from a Website&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#resetting-an-account-in-metamask&#34;&gt;Resetting an Account in Metamask&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#listening-for-events-and-completed-transactions&#34;&gt;Listening for Events and Completed Transactions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#input-forms&#34;&gt;Input Forms&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#reading-from-the-blockchain&#34;&gt;Reading from the Blockchain&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#withdraw-function&#34;&gt;Withdraw Function&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-8-recap&#34;&gt;Lesson 8 Recap&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#optional-links&#34;&gt;Optional Links&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-9-hardhat-smart-contract-lottery&#34;&gt;Lesson 9: Hardhat Smart Contract Lottery&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-6&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup---smart-contract-lottery&#34;&gt;Hardhat Setup - Smart Contract Lottery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#rafflesol-setup&#34;&gt;Raffle.sol Setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-events&#34;&gt;Introduction to Events&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#events-in-rafflesol&#34;&gt;Events in Raffle.sol&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-chainlink-vrf&#34;&gt;Introduction to Chainlink VRF&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#sub-lesson-chainlink-vrf&#34;&gt;Sub-Lesson: Chainlink VRF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-vrf---introduction&#34;&gt;Implementing Chainlink VRF - Introduction&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-shorthand&#34;&gt;Hardhat Shorthand&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-vrf---the-request&#34;&gt;Implementing Chainlink VRF - The Request&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-vrf---the-fulfill&#34;&gt;Implementing Chainlink VRF - The FulFill&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#modulo&#34;&gt;Modulo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-chainlink-keepers&#34;&gt;Introduction to Chainlink Keepers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-keepers---checkupkeep&#34;&gt;Implementing Chainlink Keepers - checkUpkeep&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#enums&#34;&gt;Enums&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-keepers---checkupkeep-continued&#34;&gt;Implementing Chainlink Keepers - checkUpkeep continued&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#implementing-chainlink-keepers---performupkeep&#34;&gt;Implementing Chainlink Keepers - performUpkeep&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#code-cleanup&#34;&gt;Code Cleanup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-rafflesol&#34;&gt;Deploying Raffle.sol&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#mock-chainlink-vrf-coordinator&#34;&gt;Mock Chainlink VRF Coordinator&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#continued&#34;&gt;Continued&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#rafflesol-unit-tests&#34;&gt;Raffle.sol Unit Tests&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testing-events--chai-matchers&#34;&gt;Testing Events &amp;amp; Chai Matchers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#continued-i&#34;&gt;Continued I&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-methods--time-travel&#34;&gt;Hardhat Methods &amp;amp; Time Travel&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#continued-ii&#34;&gt;Continued II&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#callstatic&#34;&gt;Callstatic&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#continued-iii&#34;&gt;Continued III&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#massive-promise-test&#34;&gt;Massive Promise Test&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#continued-iv&#34;&gt;Continued IV&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#rafflesol-staging-tests&#34;&gt;Raffle.sol Staging Tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#testing-on-a-testnet&#34;&gt;Testing on a Testnet&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#recommended-link-amounts-for-rinkeby-staging-test&#34;&gt;Recommended LINK amounts for Rinkeby Staging Test:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#typescript---smart-contract-lottery&#34;&gt;Typescript - Smart Contract Lottery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-10-nextjs-smart-contract-lottery-full-stack--front-end&#34;&gt;Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-7&#34;&gt;Introduction&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#optional-sub-lesson-full-stack-development--other-libraries&#34;&gt;Optional Sub-Lesson: Full Stack Development &amp;amp; Other Libraries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nextjs-setup&#34;&gt;NextJS Setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#manual-header-i&#34;&gt;Manual Header I&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#react-hooks&#34;&gt;React Hooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#manual-header-ii&#34;&gt;Manual Header II&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#useeffect-hook&#34;&gt;useEffect Hook&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#local-storage&#34;&gt;Local Storage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#isweb3enabledloading&#34;&gt;isWeb3EnabledLoading&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#web3uikit&#34;&gt;web3uikit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-calling-functions-in-nextjs&#34;&gt;Introduction to Calling Functions in Nextjs&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#automatic-constant-value-ui-updater&#34;&gt;Automatic Constant Value UI Updater&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#runcontractfunction&#34;&gt;runContractFunction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#usestate&#34;&gt;useState&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#calling-functions-in-nextjs&#34;&gt;Calling Functions in NextJS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#usenotification&#34;&gt;useNotification&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#reading--displaying-contract-data&#34;&gt;Reading &amp;amp; Displaying Contract Data&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#a-note-about-onsuccess&#34;&gt;A Note about &lt;code&gt;onSuccess&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#a-challenge-to-you&#34;&gt;A Challenge to You&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#tailwind--styling&#34;&gt;Tailwind &amp;amp; Styling&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-hosting-your-site&#34;&gt;Introduction to Hosting your Site&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#ipfs&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hosting-on-ipfs&#34;&gt;Hosting on IPFS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hosting-on-ipfs--filecoin-using-fleek&#34;&gt;Hosting on IPFS &amp;amp; Filecoin using Fleek&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#filecoin-overview&#34;&gt;Filecoin Overview&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-10-recap&#34;&gt;Lesson 10 Recap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-11-hardhat-starter-kit&#34;&gt;Lesson 11: Hardhat Starter Kit&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA; &lt;/ol&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-12-hardhat-erc20s&#34;&gt;Lesson 12: Hardhat ERC20s&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-an-erc-what-is-an-eip&#34;&gt;What is an ERC? What is an EIP?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-an-erc20&#34;&gt;What is an ERC20?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#manually-creating-an-erc20-token&#34;&gt;Manually Creating an ERC20 Token&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#creating-an-erc20-token-with-openzeppelin&#34;&gt;Creating an ERC20 Token with Openzeppelin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-12-recap&#34;&gt;Lesson 12 Recap&lt;/a&gt;&lt;/li&gt;  &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-13-hardhat-defi--aave&#34;&gt;Lesson 13: Hardhat DeFi &amp;amp; Aave&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-defi&#34;&gt;What is DeFi?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-aave&#34;&gt;What is Aave?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#programatic-borrowing--lending&#34;&gt;Programatic Borrowing &amp;amp; Lending&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#weth---wrapped-eth&#34;&gt;WETH - Wrapped ETH&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#forking-mainnet&#34;&gt;Forking Mainnet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#depositing-into-aave&#34;&gt;Depositing into Aave&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#borrowing-from-aave&#34;&gt;Borrowing from Aave&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#repaying-with-aave&#34;&gt;Repaying with Aave&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#visualizing-the-transactions&#34;&gt;Visualizing the Transactions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-13-recap&#34;&gt;Lesson 13 Recap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#happy-bow-tie-friday-with-austin-griffith&#34;&gt;Happy Bow-Tie Friday with Austin Griffith&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#more-defi-learnings&#34;&gt;More DeFi Learnings:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt;  &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-14-hardhat-nfts-everything-you-need-to-know-about-nfts&#34;&gt;Lesson 14: Hardhat NFTs (EVERYTHING you need to know about NFTs)&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-an-nft&#34;&gt;What is an NFT?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#code-overview&#34;&gt;Code Overview&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup-1&#34;&gt;Hardhat Setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#basic-nft&#34;&gt;Basic NFT&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#write-tests&#34;&gt;Write Tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#random-ipfs-nft&#34;&gt;Random IPFS NFT&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#mapping-chainlink-vrf-requests&#34;&gt;Mapping Chainlink VRF Requests&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#creating-rare-nfts&#34;&gt;Creating Rare NFTs&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#setting-the-nft-image&#34;&gt;Setting the NFT Image&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#setting-an-nft-mint-price&#34;&gt;Setting an NFT Mint Price&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploy-script&#34;&gt;Deploy Script&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#uploading-token-images-with-pinata&#34;&gt;Uploading Token Images with Pinata&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#uploading-token-uris-metadata-with-pinata&#34;&gt;Uploading Token URIs (metadata) with Pinata&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying&#34;&gt;Deploying&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#tests&#34;&gt;Tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#dynamic-svg-on-chain-nft&#34;&gt;Dynamic SVG On-Chain NFT&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-an-svg&#34;&gt;What is an SVG?&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#initial-code&#34;&gt;Initial Code&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#base64-encoding&#34;&gt;Base64 Encoding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#advanced-evm-opcodes-encoding-and-calling&#34;&gt;Advanced: EVM Opcodes, Encoding, and Calling&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#abiencode--abiencodepacked&#34;&gt;abi.encode &amp;amp; abi.encodePacked&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-encoding-function-calls-directly&#34;&gt;Introduction to Encoding Function Calls Directly&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-encoding-function-calls-recap&#34;&gt;Introduction to Encoding Function Calls Recap&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#encoding-function-calls-directly&#34;&gt;Encoding Function Calls Directly&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#creating-an-nft-tokenuri-on-chain&#34;&gt;Creating an NFT TokenURI on-Chain&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#making-the-nft-dynamic&#34;&gt;Making the NFT Dynamic&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploy-script-1&#34;&gt;Deploy Script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-the-nfts-to-a-testnet&#34;&gt;Deploying the NFTs to a Testnet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-14-recap&#34;&gt;Lesson 14 Recap&lt;/a&gt;&lt;/li&gt;  &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-15-nextjs-nft-marketplace-if-you-finish-this-lesson-you-are-a-full-stack-monster&#34;&gt;Lesson 15: NextJS NFT Marketplace (If you finish this lesson, you are a full-stack MONSTER!)&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-8&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#part-i-nft-marketplace-contracts&#34;&gt;Part I: NFT Marketplace Contracts&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hardhat-setup-2&#34;&gt;Hardhat Setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nftmarketplacesol&#34;&gt;NftMarketplace.sol&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#reentrancy&#34;&gt;Reentrancy&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nftmarketplacesol---continued&#34;&gt;NftMarketplace.sol - Continued&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nftmarketplacesol---deploy-script&#34;&gt;NftMarketplace.sol - Deploy Script&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nftmarketplacesol---tests&#34;&gt;NftMarketplace.sol - Tests&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nftmarketplacesol---scripts&#34;&gt;NftMarketplace.sol - Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#part-ii-moralis-front-end&#34;&gt;Part II: Moralis Front End&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-moralis&#34;&gt;What is Moralis?&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#nextjs-setup-1&#34;&gt;NextJS Setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#adding-tailwind&#34;&gt;Adding Tailwind&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-to-indexing-in-web3&#34;&gt;Introduction to Indexing in Web3&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#connecting-moralis-to-our-local-hardhat-node&#34;&gt;Connecting Moralis to our Local Hardhat Node&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#moralis-event-sync&#34;&gt;Moralis Event Sync&lt;/a&gt;&#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#reset-local-chain&#34;&gt;Reset Local Chain&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#moralis-cloud-functions&#34;&gt;Moralis Cloud Functions&lt;/a&gt;&#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#practice-resetting-the-local-chain&#34;&gt;Practice Resetting the Local Chain&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#moralis-cloud-functions-ii&#34;&gt;Moralis Cloud Functions II&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#querying-the-moralis-database&#34;&gt;Querying the Moralis Database&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#rendering-the-nft-images&#34;&gt;Rendering the NFT Images&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#update-listing-modal&#34;&gt;Update Listing Modal&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#buy-nft-listing&#34;&gt;Buy NFT Listing&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#listing-nfts-for-sale&#34;&gt;Listing NFTs for Sale&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#part-iii-thegraph-front-end&#34;&gt;Part III: TheGraph Front End&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-9&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-the-graph&#34;&gt;What is The Graph?&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#building-a-subgraph&#34;&gt;Building a Subgraph&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#deploying-our-subgraph&#34;&gt;Deploying our Subgraph&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#reading-from-the-graph&#34;&gt;Reading from The Graph&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hosting-our-dapp&#34;&gt;Hosting our Dapp&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt;  &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-16-hardhat-upgrades&#34;&gt;Lesson 16: Hardhat Upgrades&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#upgradeable-smart-contracts-overview&#34;&gt;Upgradeable Smart Contracts Overview&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#types-of-upgrades&#34;&gt;Types of Upgrades&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#delegatecall&#34;&gt;Delegatecall&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#small-proxy-example&#34;&gt;Small Proxy Example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#transparent-upgradeable-smart-contract&#34;&gt;Transparent Upgradeable Smart Contract&lt;/a&gt;&lt;/li&gt;  &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-17-hardhat-daos&#34;&gt;Lesson 17: Hardhat DAOs&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-10&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#what-is-a-dao&#34;&gt;What is a DAO?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#how-to-build-a-dao&#34;&gt;How to build a DAO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#lesson-18-security--auditing&#34;&gt;Lesson 18: Security &amp;amp; Auditing&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#introduction-11&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#slither&#34;&gt;Slither&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#fuzzing-and-eth-security-toolbox&#34;&gt;Fuzzing and Eth Security Toolbox&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#closing-thoughts&#34;&gt;Closing Thoughts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;More Resources&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#congratulations&#34;&gt;Congratulations&lt;/a&gt;&#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#where-do-i-go-now&#34;&gt;Where do I go now?&lt;/a&gt;&#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#learning-more&#34;&gt;Learning More&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/full-blockchain-solidity-course-js/main/#hackathons&#34;&gt;Hackathons&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt;  &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Lesson 0: The Edge of the Rabbit Hole&lt;/h1&gt; &#xA;&lt;h2&gt;Welcome to the course!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=0s&#34;&gt;⌨️ (00:00:00) Lesson 0: Welcome To Blockchain&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Best Practices&lt;/h2&gt; &#xA;&lt;h1&gt;Lesson 1: Blockchain Basics&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=545s&#34;&gt;⌨️ (00:09:05) Lesson 1: Blockchain Basics&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is a Blockchain? What does a blockchain do?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitcoin.org/bitcoin.pdf&#34;&gt;Bitcoin Whitepaper&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Satoshi_Nakamoto&#34;&gt;Satoshi Nakamoto&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/whitepaper/&#34;&gt;Ethereum Whitepaper&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Vitalik_Buterin&#34;&gt;Vitalik Buterin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/education/smart-contracts&#34;&gt;What is a Smart Contract?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Nick_Szabo&#34;&gt;Nick Szabo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.chain.link/hybrid-smart-contracts-explained/&#34;&gt;Hybrid Smart Contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72?source=friends_link&amp;amp;sk=d921a38466df8a9176ed8dd767d8c77d&#34;&gt;Blockchain Oracles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://connect.comptia.org/content/articles/blockchain-terminology&#34;&gt;Terminology&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Web3&#34;&gt;Web3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.investopedia.com/terms/b/blockchain.asp&#34;&gt;What is a blockchain&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Purpose Of Smart Contracts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎥 &lt;a href=&#34;https://www.youtube.com/watch?v=_JeRq7Gwj5Y&amp;amp;feature=youtu.be&#34;&gt;Original Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🦬 &lt;a href=&#34;https://www.youtube.com/watch?v=06hXCX_jj2E&#34;&gt;My ETH Denver Talk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🍔 &lt;a href=&#34;https://www.chicagotribune.com/sns-mcdonalds-story.html&#34;&gt;McDonalds Scandal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⛓ &lt;a href=&#34;https://www.youtube.com/watch?v=ufVyX7JDCgg&#34;&gt;More on the evolution of agreements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✍️ &lt;a href=&#34;https://www.youtube.com/watch?v=ZE2HxTmxfrI&#34;&gt;What is a Smart Contract?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🧱 &lt;a href=&#34;https://www.youtube.com/watch?v=SSo_EIwHSd4&#34;&gt;How does a blockchain work?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔮 &lt;a href=&#34;https://www.youtube.com/watch?v=tIUHQ7sDoaU&#34;&gt;Chainlink &amp;amp; Oracles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Blockchain Benefits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Decentralized&lt;/li&gt; &#xA; &lt;li&gt;Transparency &amp;amp; Flexibility&lt;/li&gt; &#xA; &lt;li&gt;Speed &amp;amp; Efficiency&lt;/li&gt; &#xA; &lt;li&gt;Security &amp;amp; Immutability&lt;/li&gt; &#xA; &lt;li&gt;Counterparty Risk Removal&lt;/li&gt; &#xA; &lt;li&gt;Trust Minimized Agreements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What have Smart Contracts done so far?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/education/defi&#34;&gt;DeFi&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://defillama.com/&#34;&gt;Defi Llama&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/the-capital/why-defi-1519cc4d4bd3&#34;&gt;Why DeFi is Important&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterprogramming.pub/what-is-a-dao-what-is-the-architecture-of-a-dao-how-to-build-a-dao-high-level-d096a97162cc&#34;&gt;DAOs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9yuHz6g_P50&#34;&gt;NFTs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Making Your First Transaction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metamask.io/&#34;&gt;Metamask Download Link&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.coinbase.com/learn/crypto-basics/what-is-a-private-key&#34;&gt;What is a Private Key?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://metamask.zendesk.com/hc/en-us/articles/360060826432-What-is-a-Secret-Recovery-Phrase-and-how-to-keep-your-crypto-wallet-secure&#34;&gt;What is a Secret Phrase?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://etherscan.io/&#34;&gt;Etherscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rinkeby.etherscan.io/&#34;&gt;Rinkeby Etherscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kovan.etherscan.io/&#34;&gt;Kovan Etherscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rinkeby Faucet (Check the &lt;a href=&#34;https://docs.chain.link/docs/link-token-contracts/#rinkeby&#34;&gt;link token contracts page&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: The Chainlink documentation always has the most up to date faucets on their &lt;a href=&#34;https://docs.chain.link/docs/link-token-contracts/#rinkeby&#34;&gt;link token contracts page&lt;/a&gt;. If the faucet above is broken, check the chainlink documentation for the most up to date faucet.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;OR, use the &lt;a href=&#34;https://faucets.chain.link/&#34;&gt;Kovan ETH Faucet&lt;/a&gt;, just be sure to swap your metamask to kovan!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gas I: Introduction to Gas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/gas/&#34;&gt;Gas and Gas Fees&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eth-converter.com/&#34;&gt;Wei, Gwei, and Ether Converter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethgasstation.info/&#34;&gt;ETH Gas Station&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Do Blockchains Work?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techjury.net/blog/what-is-cryptographic-hash/&#34;&gt;What is a hash?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andersbrownworth.com/blockchain/&#34;&gt;Blockchain Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/intro-to-ethereum/&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Signing Transactions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andersbrownworth.com/blockchain/public-private-keys/keys&#34;&gt;Public / Private Keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/&#34;&gt;Layer 2 and Rollups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.chain.link/what-is-the-blockchain-oracle-problem/&#34;&gt;Decentralized Blockchain Oracles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gas II&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.investopedia.com/terms/b/block-reward.asp&#34;&gt;Block Rewards&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Advanced Gas &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=MGemhK9t44Q&#34;&gt;EIP 1559&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;GWEI, WEI, and ETH &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://eth-converter.com/&#34;&gt;ETH Converter&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gas II Summary&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://geth.ethereum.org/docs/getting-started&#34;&gt;Run Your Own Ethereum Node&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;High-Level Blockchain Fundamentals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.polkadot.network/docs/learn-consensus&#34;&gt;Consensus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/&#34;&gt;Proof of Stake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/&#34;&gt;Proof of Work&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blockonomi.com/nakamoto-consensus/&#34;&gt;Nakamoto Consensus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/eth2/&#34;&gt;Ethereum 2 (the merge)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊 Completed Blockchain Basics! 🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊&lt;/p&gt; &#xA;&lt;h1&gt;Lesson 2: &lt;a href=&#34;https://github.com/PatrickAlphaC/simple-storage-fcc&#34;&gt;Welcome to Remix! Simple Storage&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=7276s&#34;&gt;⌨️ (02:01:16) Lesson 2: Welcome to Remix! Simple Storage&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/simple-storage-fcc&#34;&gt;https://github.com/PatrickAlphaC/simple-storage-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://remix.ethereum.org/&#34;&gt;Remix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.6/index.html&#34;&gt;Solidity Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setting Up Your First Contract&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Versioning&lt;/li&gt; &#xA; &lt;li&gt;Take notes in your code!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snyk.io/learn/what-is-a-software-license/&#34;&gt;What is a software license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SPDX License&lt;/li&gt; &#xA; &lt;li&gt;Compiling&lt;/li&gt; &#xA; &lt;li&gt;Contract Declaration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Types&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/&#34;&gt;Types &amp;amp; Declaring Variables&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;uint256&lt;/code&gt;, &lt;code&gt;int256&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;bytes32&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/types.html&#34;&gt;Solidity Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Dnd28lQHquU&#34;&gt;Bits and Bytes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Default Initializations&lt;/li&gt; &#xA; &lt;li&gt;Comments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Functions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Functions&lt;/li&gt; &#xA; &lt;li&gt;Deploying a Contract &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Smart Contracts have addresses just like our wallets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Calling a public state-changing Function&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.7.3/contracts.html#visibility-and-getters&#34;&gt;Visibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gas III | An example&lt;/li&gt; &#xA; &lt;li&gt;Scope&lt;/li&gt; &#xA; &lt;li&gt;View &amp;amp; Pure Functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Arrays &amp;amp; Structs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Structs&lt;/li&gt; &#xA; &lt;li&gt;Intro to Storage&lt;/li&gt; &#xA; &lt;li&gt;Arrays&lt;/li&gt; &#xA; &lt;li&gt;Dynamic &amp;amp; Fixed Sized&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;push&lt;/code&gt; array function&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Compiler Errors and Warnings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yellow: Warnings are Ok&lt;/li&gt; &#xA; &lt;li&gt;Red: Errors are not Ok&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Memory, Storage, Calldata (Intro)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;6 Places you can store and access data &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;calldata&lt;/li&gt; &#xA;   &lt;li&gt;memory&lt;/li&gt; &#xA;   &lt;li&gt;storage&lt;/li&gt; &#xA;   &lt;li&gt;code&lt;/li&gt; &#xA;   &lt;li&gt;logs&lt;/li&gt; &#xA;   &lt;li&gt;stack&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mappings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/mapping&#34;&gt;Mappings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploying your First Contract&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A testnet or mainnet&lt;/li&gt; &#xA; &lt;li&gt;Connecting Metamask&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/link-token-contracts/#rinkeby&#34;&gt;Find a faucet here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See the faucets at the top of this readme!&lt;/li&gt; &#xA; &lt;li&gt;Interacting with Deployed Contracts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The EVM &amp;amp; A Recap of Lesson 2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The EVM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 3: Remix Storage Factory&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=11134s&#34;&gt;⌨️ (03:05:34) Lesson 3: Remix Storage Factory&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/storage-factory-fcc&#34;&gt;https://github.com/PatrickAlphaC/storage-factory-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterprogramming.pub/learn-solidity-the-factory-pattern-75d11c3e7d29&#34;&gt;Factory Pattern&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Importing Contracts into other Contracts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/techtalks/defi-composability&#34;&gt;Composibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/control-structures.html?highlight=new#creating-contracts-via-new&#34;&gt;Solidity new keyword&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/import&#34;&gt;Importing Code in solidity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Interacting with other Contracts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To interact, you always need: ABI + Address&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/abi-spec.html?highlight=abi&#34;&gt;ABI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Inheritance &amp;amp; Overrides&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/inheritance&#34;&gt;Inheritance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/contracts.html?highlight=override#function-overriding&#34;&gt;Override &amp;amp; Virtual Keyword&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 3 Recap&lt;/h2&gt; &#xA;&lt;h1&gt;Lesson 4: Remix Fund Me&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=12715s&#34;&gt;⌨️ (03:31:55) Lesson 4: Remix Fund Me&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/fund-me-fcc&#34;&gt;https://github.com/PatrickAlphaC/fund-me-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;Sending ETH Through a Function &amp;amp; Reverts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/transactions/&#34;&gt;Fields in a Transaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/15766/what-does-v-r-s-in-eth-gettransactionbyhash-mean&#34;&gt;More on v,r,s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/payable&#34;&gt;payable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/cheatsheet.html?highlight=cheatsheet#global-variables&#34;&gt;msg.valu &amp;amp; Other global keywords&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codedamn.com/news/solidity/what-is-require-in-solidity&#34;&gt;require&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/blockchannel/the-use-of-revert-assert-and-require-in-solidity-and-the-new-revert-opcode-in-the-evm-1a3a7990e06e&#34;&gt;revert&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chainlink &amp;amp; Oracles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/education/blockchain-oracles&#34;&gt;What is a blockchain oracle?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.chain.link/what-is-the-blockchain-oracle-problem/&#34;&gt;What is the oracle problem?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/&#34;&gt;Chainlink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/get-the-latest-price/&#34;&gt;Chainlink Price Feeds (Data Feeds)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://data.chain.link/&#34;&gt;data.chain.link&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/chainlink-vrf/&#34;&gt;Chainlink VRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/chainlink-keepers/introduction/&#34;&gt;Chainlink Keepers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/request-and-receive-data/&#34;&gt;Chainlink API Calls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://consensys.net/blog/metamask/how-to-add-your-custom-tokens-in-metamask/&#34;&gt;Importing Tokens into your Metamask&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/architecture-request-model/&#34;&gt;Request and Receive Chainlink Model&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Review of Sending ETH and working with Chainlink&lt;/h2&gt; &#xA;&lt;h2&gt;Interfaces &amp;amp; Price Feeds&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/get-the-latest-price/&#34;&gt;Chainlink Price Feeds (Data Feeds)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/chainlink&#34;&gt;Chainlink GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/interface&#34;&gt;Interface&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Importing from GitHub &amp;amp; NPM&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@chainlink/contracts&#34;&gt;Chainlink NPM Package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Floating Point Math in Solidtiy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/abi-spec.html?highlight=tuple#handling-tuple-types&#34;&gt;tuple&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/58277234/does-solidity-supports-floating-point-number&#34;&gt;Floating Point Numbers in Solidity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/6891/type-casting-in-solidity&#34;&gt;Type Casting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gas Estimation Failed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Someone should make an article explaining this error&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Arrays &amp;amp; Structs II&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/cheatsheet.html?highlight=msg.sender&#34;&gt;msg.sender&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Review of Interfacs, Importing from GitHub, &amp;amp; Math in Solidity&lt;/h2&gt; &#xA;&lt;h2&gt;Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/contracts.html?highlight=library#libraries&#34;&gt;Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/library&#34;&gt;Solidity-by-example Library&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SafeMath, Overflow Checking, and the &#34;unchecked&#34; keywork&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenZeppelin/openzeppelin-contracts/raw/master/contracts/utils/math/SafeMath.sol&#34;&gt;Openzeppelin Safemath&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.0/control-structures.html#checked-or-unchecked-arithmetic&#34;&gt;unchecked vs. checked&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: For Loop&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/loop&#34;&gt;For Loop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/* */&lt;/code&gt; is another way to make comments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Resetting an Array&lt;/h2&gt; &#xA;&lt;h2&gt;Sending ETH from a Contract&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/sending-ether/&#34;&gt;Transfer, Send, Call&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/1781/what-is-the-this-keyword-in-solidity&#34;&gt;this keyword&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Constructor&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/constructor&#34;&gt;Constructor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Solidity: Modifiers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/solidity-operators/&#34;&gt;Double equals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/function-modifier&#34;&gt;Modifier&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testnet Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.1inch.io/en/articles/4666771-metamask-how-to-connect-disconnect-and-switch-accounts-with-metamask-on-1inch-network&#34;&gt;Disconnecting Metamask&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced Solidity&lt;/h2&gt; &#xA;&lt;h3&gt;Immutable &amp;amp; Constant&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/immutable&#34;&gt;Immutable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/constants&#34;&gt;Constant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://etherscan.io/gastracker&#34;&gt;Current ETH Gas Prices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t stress about gas optimizations! (yet)&lt;/li&gt; &#xA; &lt;li&gt;Naming Conventions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/full-blockchain-solidity-course-js/issues/13&#34;&gt;Someone make this!&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Errors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.soliditylang.org/2021/04/21/custom-errors/&#34;&gt;Custom Errors Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Receive &amp;amp; Fallback Functions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/contracts.html?highlight=fallback#special-functions&#34;&gt;Solidity Docs Special Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/fallback&#34;&gt;Fallback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/contracts.html?highlight=fallback#receive-ether-function&#34;&gt;Receive&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 4 Recap&lt;/h2&gt; &#xA;&lt;p&gt;🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊 Completed Solidity Basics! 🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊&lt;/p&gt; &#xA;&lt;h1&gt;Lesson 5: Ethers.js Simple Storage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=19842s&#34;&gt;⌨️ (05:30:42) Lesson 5: Ethers.js Simple Storage&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/ethers-simple-storage-fcc&#34;&gt;https://github.com/PatrickAlphaC/ethers-simple-storage-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🧪 &lt;a href=&#34;https://alchemy.com/?a=673c802981&#34;&gt;Alchemy: https://alchemy.com/?a=673c802981&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Effective Debugging Strategies &amp;amp; Getting Help&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Tinker and isolate problem &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;For this course, take at LEAST 15 minutes to figure out a bug.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Google / Web Search the Exact problem &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Go to this GitHub Repo / Discussions&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ask a question on a Forum like Stack Exchange Ethereum or Stack Overflow &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Format your questions!!&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://www.markdowntutorial.com/&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How to Debug Anything Video&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XT8STflvwNo&#34;&gt;Patrick&#39;s Original Video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WPqXP_kLzpo&#34;&gt;Crash Course&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;NodeJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/keybindings&#34;&gt;VSCode Keybindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/integrated-terminal&#34;&gt;What is a terminal?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mac &amp;amp; Linux Setup&lt;/h3&gt; &#xA;&lt;h3&gt;Windows Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When working in WSL, use Linux commands instead of Windows commands&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/troubleshooting&#34;&gt;TroubleShooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Please use Gitpod as an absolute last resort&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Gitpod&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gitpod.io/&#34;&gt;Gitpod&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;If using this, NEVER share a private key with real money on Gitpod&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Ideally you figure out the MacOS, Linux, or Windows install though&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Development Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CMD + K&lt;/code&gt; or &lt;code&gt;CTRL + K&lt;/code&gt; clears the terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir ethers-simple-storage-fcc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;code .&lt;/code&gt; to open VSCode in a new VSCode window&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Optional Javascript Crash Courses&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RLtyhwFtXQA&#34;&gt;NodeJS Course&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jS4aFq5-91M&#34;&gt;Javascript Course&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Import your &lt;code&gt;SimpleStorage.sol&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=NomicFoundation.hardhat-solidity&#34;&gt;Solidity + Hardhat VSCode Extension&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Format your solidity code with:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &#34;[solidity]&#34;: {&#xA;        &#34;editor.defaultFormatter&#34;: &#34;NomicFoundation.hardhat-solidity&#34;&#xA;    },&#xA;    &#34;[javascript]&#34;:{&#xA;      &#34;editor.defaultFormatter&#34;: &#34;esbenp.prettier-vscode&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your &lt;code&gt;.vscode/settings.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&#34;&gt;Prettier Extension&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tiny Javascript Refresher&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/learn-javascript-free-js-courses-for-beginners/&#34;&gt;Javascript Tips&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Asynchronous Programming in Javascript&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bmc.com/blogs/asynchronous-programming/&#34;&gt;Asynchronous Programming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/JS//js_async.asp&#34;&gt;async keyword&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise in Javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&#34;&gt;await keyword&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling our Solidity&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/getting-started/install&#34;&gt;Yarn Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/solc-js&#34;&gt;solc-js&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;yarn add solc@0.8.7-fixed&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/lang/en/docs/cli/run/&#34;&gt;yarn scripts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ganache &amp;amp; Networks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trufflesuite.com/ganache/&#34;&gt;Ganache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Networks in Metamask&lt;/li&gt; &#xA; &lt;li&gt;RPC URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/go-ethereum&#34;&gt;Geth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&amp;amp;uiSchema%5BappBar%5D%5Bui:splitView%5D=false&amp;amp;uiSchema%5BappBar%5D%5Bui:input%5D=false&amp;amp;uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false&#34;&gt;JSON RPC Spec Playground&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to Ethers.js&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/getting-started/&#34;&gt;Ethers.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prettier-solidity/prettier-plugin-solidity&#34;&gt;prettier-plugin-solidity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;A Note on the await Keyword&lt;/h3&gt; &#xA;&lt;h2&gt;Adding Transaction Overrides&lt;/h2&gt; &#xA;&lt;h2&gt;Transaction Receipts&lt;/h2&gt; &#xA;&lt;h2&gt;Sending a &#34;raw&#34; Transaction in Ethersjs&lt;/h2&gt; &#xA;&lt;h2&gt;Interacting with Contracts in Ethersjs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethervm.io/decompile&#34;&gt;EVM Decompiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/utils/bignumber/&#34;&gt;BigNumber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/dotenv&#34;&gt;dotenv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/saving-changes/gitignore&#34;&gt;.gitignore&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Better Private Key Management&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/signer/#Wallet-encrypt&#34;&gt;wallet.encrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/full-blockchain-solidity-course-js/discussions/5&#34;&gt;THE .ENV PLEDGE&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optional Prettier Formatting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prettier.io/docs/en/index.html&#34;&gt;Prettier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/othneildrew/Best-README-Template&#34;&gt;Best README Template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploying to a Testnet or a Mainnet&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alchemy.com/?a=673c802981&#34;&gt;Alchemy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metamask.zendesk.com/hc/en-us/articles/360015289632-How-to-Export-an-Account-Private-Key&#34;&gt;Getting your private key from Metamask&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CTRL + C&lt;/code&gt; stops any terminal command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Verifying on Block Explorers from the UI&lt;/h2&gt; &#xA;&lt;h2&gt;Alchemy Dashboard &amp;amp; The Mempool&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/thatguyintech&#34;&gt;Special Guest Albert Hu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/tutorials/sending-transactions-using-web3-and-alchemy/#see-your-transaction-in-the-mempool&#34;&gt;Mempool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 5 Recap&lt;/h2&gt; &#xA;&lt;h3&gt;Typescript Ethers Simple Storage&lt;/h3&gt; &#xA;&lt;h1&gt;Lesson 6: Hardhat Simple Storage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=30017s&#34;&gt;⌨️ (08:20:17) Lesson 6: Hardhat Simple Storage&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-simple-storage-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-simple-storage-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;Hardhat Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/&#34;&gt;Hardhat Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies&#34;&gt;DevDependencies vs Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/36667258/what-is-the-meaning-of-the-at-prefix-on-npm-packages&#34;&gt;@ Sign node modules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Troubleshooting Hardaht Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/camiinthisthang&#34;&gt;Special Guest Cami Ramos Garzon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Setup Continued&lt;/h2&gt; &#xA;&lt;h2&gt;Deploying SimpleStorage from Hardhat&lt;/h2&gt; &#xA;&lt;h2&gt;Networks in Hardhat&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/&#34;&gt;The Hardhat Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/config/#configuration&#34;&gt;Hardhat configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainlist.org/&#34;&gt;Chain ID List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Programatic Verification&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.etherscan.io/tutorials/verifying-contracts-programmatically&#34;&gt;Etherscan Verify Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.etherscan.io/&#34;&gt;Etherscan Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/plugins/nomiclabs-hardhat-etherscan.html&#34;&gt;Hardhat-Etherscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://info.etherscan.com/api-keys/&#34;&gt;Etherscan API Keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons&#34;&gt;Javascript == vs ===&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Interacting with Contracts in Hardhat&lt;/h2&gt; &#xA;&lt;h2&gt;Artifacts Troubleshooting&lt;/h2&gt; &#xA;&lt;h2&gt;Custom Hardhat Tasks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/guides/create-task.html&#34;&gt;Hardhat Tasks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&#34;&gt;Javascript Arrow Functions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Localhost Node&lt;/h2&gt; &#xA;&lt;h2&gt;The Hardhat Console&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/guides/hardhat-console.html&#34;&gt;Hardhat Console&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/tutorial/testing-contracts.html#_5-testing-contracts&#34;&gt;Hardhat Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mochajs.org/&#34;&gt;Mocha Style Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/chai&#34;&gt;Chai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum-waffle.readthedocs.io/en/latest/&#34;&gt;Waffle Tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Gas Reporter&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/hardhat-gas-reporter&#34;&gt;Hardhat Gas Reporter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coinmarketcap.com/api/&#34;&gt;Coinmarketcap API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Solidity Coverage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sc-forks/solidity-coverage&#34;&gt;Solidity Coverage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Waffle&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://npm.io/package/@nomiclabs/hardhat-waffle&#34;&gt;Hardhat-Waffle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 6 Recap&lt;/h2&gt; &#xA;&lt;h3&gt;Typescript Hardhat Simple Storage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dethcrypto/TypeChain&#34;&gt;Typechain&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add --dev @typechain/ethers-v5 @typechain/hardhat @types/chai @types/node @types/mocha ts-node typechain typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Lesson 7: Hardhat Fund Me&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=36048s&#34;&gt;⌨️ (10:00:48) Lesson 7: Hardhat Fund Me&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-fund-me-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-fund-me-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;Hardhat Setup - Fund Me&lt;/h2&gt; &#xA;&lt;h2&gt;Linting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;Eslint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/protofire/solhint&#34;&gt;Solhint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.perforce.com/blog/qac/what-lint-code-and-why-linting-important&#34;&gt;Linting Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Setup - Fund Me - Continued&lt;/h2&gt; &#xA;&lt;h2&gt;Importing from NPM&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@chainlink/contracts&#34;&gt;@chainlink/contracts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Deploy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wighawag/hardhat-deploy&#34;&gt;Hardhat Deploy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mocking&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2665812/what-is-mocking&#34;&gt;Mocking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aave/aave-v3-core&#34;&gt;Aave Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/chainlink&#34;&gt;Chainlink Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multiple Versions of Solidity&lt;/li&gt; &#xA; &lt;li&gt;Tags in hardhat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Utils Folder&lt;/h2&gt; &#xA;&lt;h2&gt;Testnet Demo - Hardhat Fund Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hardhat Deploy Block Confirmations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Solidity Style Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/style-guide.html&#34;&gt;Style Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/natspec-format.html#natspec&#34;&gt;NatSpec&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing Fund Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Unit_testing&#34;&gt;Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wighawag/hardhat-deploy#creating-fixtures&#34;&gt;Hardhat Deploy Fixtures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wighawag/hardhat-deploy-ethers&#34;&gt;ethers.getContract&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum-waffle.readthedocs.io/en/latest/matchers.html&#34;&gt;expect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/utils/display-logic/#utils-parseUnits&#34;&gt;ethers.utils.parseUnits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum-waffle.readthedocs.io/en/latest/matchers.html&#34;&gt;Waffle Chai Matchers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Breakpoints &amp;amp; Debugging&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/Docs/editor/debugging&#34;&gt;VSCode Breakpoints&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gas III:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/providers/types/#providers-TransactionResponse&#34;&gt;Transaction Response&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt&#34;&gt;Transaction Receipt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;console.log &amp;amp; Debugging&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/reference/#console-log&#34;&gt;Hardhat console.log&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing Fund Me II&lt;/h2&gt; &#xA;&lt;h2&gt;Storage in Solidity&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/internals/layout_in_storage.html&#34;&gt;Storage Layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/33839154/in-ethereum-solidity-what-is-the-purpose-of-the-memory-keyword&#34;&gt;Purpose of the memory keyword&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/providers/provider/#Provider-getStorageAt&#34;&gt;getStorageAt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gas Optimizations using Storage Knowledge&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/developers/docs/evm/opcodes/&#34;&gt;Opcodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crytic/evm-opcodes&#34;&gt;Opcodes by Gas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evm.codes/&#34;&gt;Opcodes by Gas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Append &lt;code&gt;s_&lt;/code&gt; to storage variables&lt;/li&gt; &#xA; &lt;li&gt;Append &lt;code&gt;i_&lt;/code&gt; to immutable variables&lt;/li&gt; &#xA; &lt;li&gt;Caps lock and underscore constant variables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Solidity Chainlink Style Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/full-blockchain-solidity-course-js/issues/13&#34;&gt;Chainlink Solidity Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Storage Review&lt;/h2&gt; &#xA;&lt;h2&gt;Staging Tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator&#34;&gt;Ternary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Scripts on a Local Node&lt;/h2&gt; &#xA;&lt;h2&gt;Adding Scripts to your package.json&lt;/h2&gt; &#xA;&lt;h2&gt;Pushing to GitHub&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/quickstart&#34;&gt;Github Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F&#34;&gt;What is Git?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/importing-your-projects-to-github/importing-source-code-to-github/adding-locally-hosted-code-to-github#adding-a-local-repository-to-github-using-git&#34;&gt;The quickstart that we follow in the video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RGOj5yH7evk&#34;&gt;Learn about git and GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🐸🐦 &lt;a href=&#34;https://twitter.com/intent/tweet?text=I%20just%20made%20my%20first%20Smart%20Contract%20repo%20using%20@solidity_lang,%20@HardhatHQ,%20@chainlink,%20@AlchemyPlatform,%20and%20more!%0a%0aThanks%20@PatrickAlphaC!!&#34;&gt;Tweet Me (add your repo in)!&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=45177s&#34;&gt;⌨️ (12:32:57) Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/html-fund-me-fcc&#34;&gt;https://github.com/PatrickAlphaC/html-fund-me-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;How Websites work with Web3 Wallets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pdsYCkUWrgQ&#34;&gt;OHow to Connect your Smart Contracts to Metamask&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;💻 Code from Video: &lt;a href=&#34;https://github.com/PatrickAlphaC/full-stack-web3-metamask-connectors&#34;&gt;https://github.com/PatrickAlphaC/full-stack-web3-metamask-connectors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;✍️ Article from Video: &lt;a href=&#34;https://betterprogramming.pub/everything-you-need-to-know-about-fullstack-web3-94c0f1b18019?sk=a2764bcbdae98bf05e1052931de77982&#34;&gt;https://betterprogramming.pub/everything-you-need-to-know-about-fullstack-web3-94c0f1b18019?sk=a2764bcbdae98bf05e1052931de77982&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HTML Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Live Server: ExtensionID: ritwickdey.LiveServer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Connecting HTML to Metamask&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.metamask.io/guide/&#34;&gt;Metamask Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Javascript in it&#39;s own file&lt;/h2&gt; &#xA;&lt;h2&gt;ES6 vs Nodejs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/31354559/using-node-js-require-vs-es6-import-export#31367852&#34;&gt;ES6 vs Nodesjs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/getting-started/#getting-started--importing--web-browser&#34;&gt;Ethers docs for web browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/51418964/script-type-text-javascript-vs-script-type-module&#34;&gt;module vs text/javascript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sending a transaction from a Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/providers/other/#Web3Provider&#34;&gt;Web3Provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metamask.zendesk.com/hc/en-us/articles/360043227612-How-to-add-a-custom-network-RPC&#34;&gt;Adding a network to metamask&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resetting an Account in Metamask&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;MetaMask - RPC Error:&#xA;[ethjs-query] while formatting ouputs from RPC &#39;{&#34;value&#34;:{&#34;code&#34;:-32603,&#34;data&#34;:{&#34;code&#34;:-32000,&#34;message&#34;:&#34;Nonce too high. Expected nonce to be 2 but got 4. Note that transactions can&#39;t be queued when automining.&#34;}}}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Listening for Events and Completed Transactions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/providers/provider/#Provider-once&#34;&gt;provider.once&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/javascript-anonymous-functions/&#34;&gt;Anonymous function&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Javascript Promise&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Input Forms&lt;/h2&gt; &#xA;&lt;h2&gt;Reading from the Blockchain&lt;/h2&gt; &#xA;&lt;h2&gt;Withdraw Function&lt;/h2&gt; &#xA;&lt;h2&gt;Lesson 8 Recap&lt;/h2&gt; &#xA;&lt;h3&gt;Optional Links:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://browserify.org/&#34;&gt;Browserify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/watchify&#34;&gt;Watchify&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 9: Hardhat Smart Contract Lottery&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=49262s&#34;&gt;⌨️ (13:41:02) Lesson 9: Hardhat Smart Contract Lottery&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-smartcontract-lottery-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-smartcontract-lottery-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;Hardhat Setup - Smart Contract Lottery&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev @nomiclabs/hardhat-ethers@npm:hardhat-deploy-ethers ethers @nomiclabs/hardhat-etherscan @nomiclabs/hardhat-waffle chai ethereum-waffle hardhat hardhat-contract-sizer hardhat-deploy hardhat-gas-reporter prettier prettier-plugin-solidity solhint solidity-coverage dotenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Raffle.sol Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.soliditylang.org/2021/04/21/custom-errors/&#34;&gt;Custom Errors in Solidity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to Events&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KDYJC85eS5M&#34;&gt;Events and Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KDYJC85eS5M&#34;&gt;Events &amp;amp; Logging Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-events-logs&#34;&gt;Events &amp;amp; Logging in Hardhat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Events in Raffle.sol&lt;/h2&gt; &#xA;&lt;h2&gt;Introduction to Chainlink VRF&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/stephenfluin&#34;&gt;Special Guest Stephen Fluin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sub-Lesson: Chainlink VRF&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/get-a-random-number/&#34;&gt;Chainlink VRFv2 Docs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rdJ5d8j1RCg&#34;&gt;Chainlink VRFv2 Walkthrough&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/chainlink/raw/develop/contracts/src/v0.8/VRFConsumerBase.sol&#34;&gt;Chainlink Contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Implementing Chainlink VRF - Introduction&lt;/h2&gt; &#xA;&lt;h3&gt;Hardhat Shorthand&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/guides/shorthand.html&#34;&gt;Hardhat Shorthand&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementing Chainlink VRF - The Request&lt;/h2&gt; &#xA;&lt;h2&gt;Implementing Chainlink VRF - The FulFill&lt;/h2&gt; &#xA;&lt;h3&gt;Modulo&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/types.html?highlight=modulo#modulo&#34;&gt;Modulo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to Chainlink Keepers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/chainlink-keepers/introduction/&#34;&gt;Chainlink Keepers Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-Wkw5JVQGUo&#34;&gt;Chainlink Keepers Walkthrough&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementing Chainlink Keepers - checkUpkeep&lt;/h2&gt; &#xA;&lt;h3&gt;Enums&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/structure-of-a-contract.html?highlight=enum#enum-types&#34;&gt;Enum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementing Chainlink Keepers - checkUpkeep continued&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;block.timestamp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementing Chainlink Keepers - performUpkeep&lt;/h2&gt; &#xA;&lt;h2&gt;Code Cleanup&lt;/h2&gt; &#xA;&lt;h2&gt;Deploying Raffle.sol&lt;/h2&gt; &#xA;&lt;h3&gt;Mock Chainlink VRF Coordinator&lt;/h3&gt; &#xA;&lt;h3&gt;Continued&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chain.link/docs/link-token-contracts/&#34;&gt;LINK Token&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Raffle.sol Unit Tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We use &lt;code&gt;async function&lt;/code&gt; in the describe blocks at the start, but we correctly take them out later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing Events &amp;amp; Chai Matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum-waffle.readthedocs.io/en/latest/matchers.html#emitting-events&#34;&gt;Emit Chai Matcher&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Continued I&lt;/h3&gt; &#xA;&lt;h2&gt;Hardhat Methods &amp;amp; Time Travel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/reference/&#34;&gt;Make Hardhat do whatever you want it to&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/reference/#special-testing-debugging-methods&#34;&gt;Special debugging hardhat methods&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Continued II&lt;/h3&gt; &#xA;&lt;h2&gt;Callstatic&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/contract/contract/#contract-callStatic&#34;&gt;Callstatic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Continued III&lt;/h3&gt; &#xA;&lt;h3&gt;Massive Promise Test&lt;/h3&gt; &#xA;&lt;h3&gt;Continued IV&lt;/h3&gt; &#xA;&lt;h2&gt;Raffle.sol Staging Tests&lt;/h2&gt; &#xA;&lt;h2&gt;Testing on a Testnet&lt;/h2&gt; &#xA;&lt;h3&gt;Recommended LINK amounts for Rinkeby Staging Test:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chainlink VRF: 2 LINK&lt;/li&gt; &#xA; &lt;li&gt;Chainlink Keepers: 8 LINK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Conclusion&lt;/h2&gt; &#xA;&lt;h2&gt;Typescript - Smart Contract Lottery&lt;/h2&gt; &#xA;&lt;p&gt;🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊 Completed Hardhat Basics! 🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊&lt;/p&gt; &#xA;&lt;h1&gt;Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=59647s&#34;&gt;⌨️ (16:34:07) Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/nextjs-smartcontract-lottery-fcc&#34;&gt;https://github.com/PatrickAlphaC/nextjs-smartcontract-lottery-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚡️⚡️ Live Demo IPFS: ipfs://QmXwACyjcS8tL7UkYwimpqMqW9sKzSHUjE4uSZBSyQVuEH&lt;/p&gt; &#xA;&lt;p&gt;⚡️⚡️ Live Demo Fleek: &lt;a href=&#34;https://fancy-dream-3458.on.fleek.co/&#34;&gt;https://fancy-dream-3458.on.fleek.co/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;We move into using &lt;a href=&#34;https://nextjs.org/&#34;&gt;NextJS&lt;/a&gt; for our front end. NextJS is a &lt;a href=&#34;https://reactjs.org/&#34;&gt;React framework&lt;/a&gt; for building websites.&lt;/p&gt; &#xA;&lt;h3&gt;Optional Sub-Lesson: Full Stack Development &amp;amp; Other Libraries&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pdsYCkUWrgQ&#34;&gt;6 Ways to connect your dapp to a wallet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mTz0GXj8NN0&#34;&gt;NextJS Crash Course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Other React libraries: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/NoahZinsmeister/web3-react&#34;&gt;Web3React&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tmm/wagmi&#34;&gt;wagmi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-moralis&#34;&gt;react-moralis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TrueFiEng/useDApp&#34;&gt;useDapp&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Web3Modal/web3modal&#34;&gt;Web3Modal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mdtanrikulu/use-metamask&#34;&gt;useMetamask&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other Full Stack Web3 Templates &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/scaffold-eth/scaffold-eth&#34;&gt;scaffold-eth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum-boilerplate/ethereum-boilerplate&#34;&gt;ethereum-boilerplate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/paulrberg/create-eth-app&#34;&gt;create-eth-app&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#section-most-popular-technologies-web-frameworks&#34;&gt;React being quite popular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/why-use-react-for-web-development/&#34;&gt;Why use react?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;NextJS Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn/basics/create-nextjs-app&#34;&gt;NextJS Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PatrickAlphaC/nextjs-ethers-introduction&#34;&gt;NextJS Minimal Ethers Example For Lottery&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn create next-app .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Header I&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/react/react_components.asp&#34;&gt;What is a component?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/introducing-jsx.html&#34;&gt;jsx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://moralis.io/&#34;&gt;Moralis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoralisWeb3/react-moralis&#34;&gt;React Moralis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;React Hooks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-overview.html&#34;&gt;What is a react hook?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Manual Header II&lt;/h2&gt; &#xA;&lt;h2&gt;useEffect Hook&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-effect.html&#34;&gt;useEffect Hook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.logrocket.com/guide-to-react-useeffect-hook/&#34;&gt;More on useEffect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/react-context-for-beginners/&#34;&gt;React Context&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/60618844/react-hooks-useeffect-is-called-twice-even-if-an-empty-array-is-used-as-an-ar&#34;&gt;useEffect Firing Twice&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Storage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codinglead.co/javascript/what-is-localstorage&#34;&gt;Local Storage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;isWeb3EnabledLoading&lt;/h2&gt; &#xA;&lt;h2&gt;web3uikit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/web3ui/web3uikit&#34;&gt;web3uikit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web3ui.github.io/web3uikit/?path=/story/1-web3-blockie--custom-seed&#34;&gt;web3uikit interactive docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web3ui.github.io/web3uikit/?path=/story/1-web3-connectbutton--default&#34;&gt;web3uikit connect button&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to Calling Functions in Nextjs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoralisWeb3/react-moralis#useweb3contract&#34;&gt;useWeb3Contract&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Automatic Constant Value UI Updater&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/api/utils/abi/fragments/#fragments--formats&#34;&gt;ethers.utils.FormatTypes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;runContractFunction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoralisWeb3/react-moralis#wrap-your-app-in-a-moralisprovider&#34;&gt;Moralis Provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoralisWeb3/react-moralis#usemoralis&#34;&gt;useMoralis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/JSREF/jsref_parseint.asp&#34;&gt;parseInt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;useState&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-state.html&#34;&gt;useState Hook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Calling Functions in NextJS&lt;/h2&gt; &#xA;&lt;h2&gt;useNotification&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;onError&lt;/code&gt; to all your &lt;code&gt;runContractFunction&lt;/code&gt; calls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reading &amp;amp; Displaying Contract Data&lt;/h2&gt; &#xA;&lt;h2&gt;A Note about &lt;code&gt;onSuccess&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;onSuccess&lt;/code&gt; just checks to see if MetaMask sends the transaction, not&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A Challenge to You&lt;/h2&gt; &#xA;&lt;h2&gt;Tailwind &amp;amp; Styling&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/css/&#34;&gt;Learn CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwindcss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=csstools.postcss&#34;&gt;PostCSS Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss&#34;&gt;Tailwind Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/docs/guides/nextjs&#34;&gt;Install Tailwind into NextJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to Hosting your Site&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://moralis.io/&#34;&gt;Moralis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netilfy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipfs.io/&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IPFS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5Uj6uR3fp-U&#34;&gt;What is IPFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipfs.io/&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hosting on IPFS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/ipfs-companion/nibjojkomfdiaoajekhjakgkdhaomnch&#34;&gt;IPFS Companion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brave.com/&#34;&gt;Brave Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn build &amp;amp;&amp;amp; yarn next export&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hosting on IPFS &amp;amp; Filecoin using Fleek&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleek.co/&#34;&gt;Fleek&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Filecoin Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/DeveloperAlly&#34;&gt;Special Guest Ally Haire&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;ipfs://bafybeiasd6oxqiefoxgtskrokomexnb4zcq3fhwlcbyplx2paw65zmq2du&#34;&gt;IPFS URL of Ally&#39;s Video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 10 Recap&lt;/h2&gt; &#xA;&lt;h1&gt;Lesson 11: Hardhat Starter Kit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=67896s&#34;&gt;⌨️ (18:51:36) Lesson 11: Hardhat Starter Kit&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/smartcontractkit/hardhat-starter-kit&#34;&gt;https://github.com/smartcontractkit/hardhat-starter-kit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Lesson 12: Hardhat ERC20s&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=68364s&#34;&gt;⌨️ (18:59:24) Lesson 12: Hardhat ERC20s&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-erc20-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-erc20-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is an ERC? What is an EIP?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/&#34;&gt;What is an EIP?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/EIPs&#34;&gt;EIPs codebase&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is an ERC20?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/8rpir_ZSK1g?t=39&#34;&gt;Video (using brownie/python)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-20&#34;&gt;EIP-20&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/EIPs/issues/677&#34;&gt;ERC-677&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-777&#34;&gt;EIP-777&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Manually Creating an ERC20 Token&lt;/h2&gt; &#xA;&lt;h2&gt;Creating an ERC20 Token with Openzeppelin&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openzeppelin.com/&#34;&gt;Openzeppelin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenZeppelin/openzeppelin-contracts&#34;&gt;Openzeppelin Contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rari-Capital/solmate&#34;&gt;Solmate (Openzeppelin alternative)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 12 Recap&lt;/h2&gt; &#xA;&lt;h1&gt;Lesson 13: Hardhat DeFi &amp;amp; Aave&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=69373s&#34;&gt;⌨️ (19:16:13) Lesson 13: Hardhat DeFi &amp;amp; Aave&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-defi-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-defi-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is DeFi?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/education/defi&#34;&gt;What is DeFi?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://defillama.com/&#34;&gt;DefiLlama&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Aave?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aave.com/&#34;&gt;Aave&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=TmNGAvI-RUA&#34;&gt;My Previous Aave Video on Shorting Assets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Programatic Borrowing &amp;amp; Lending&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://makerdao.com/en/&#34;&gt;DAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://app.uniswap.org/&#34;&gt;Uniswap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WETH - Wrapped ETH&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rinkeby.etherscan.io/token/0xc778417e063141139fce010982780140aa0cd5ab#writeContract&#34;&gt;WETH Token Rinkeby Etherscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://etherscan.io/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#34;&gt;WETH Token Mainnet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Forking Mainnet&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/guides/mainnet-forking.html&#34;&gt;Mainnet Forking&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Depositing into Aave&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aave.com/developers/v/2.0/&#34;&gt;Aave V2 Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@aave/protocol-v2&#34;&gt;Aave NPM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Borrowing from Aave&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aave.com/faq/borrowing&#34;&gt;Aave Borrowing FAQs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aave.com/faq/borrowing#what-is-the-health-factor&#34;&gt;Health Factor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aave.com/risk/asset-risk/risk-parameters&#34;&gt;Aave Risk Parameters&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repaying with Aave&lt;/h2&gt; &#xA;&lt;h2&gt;Visualizing the Transactions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aave.com/developers/v/1.0/developing-on-aave/the-protocol/atokens&#34;&gt;aTokens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lesson 13 Recap&lt;/h2&gt; &#xA;&lt;h2&gt;Happy Bow-Tie Friday with Austin Griffith&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/austingriffith&#34;&gt;Special Guest Austin Griffith&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speedrunethereum.com/&#34;&gt;Speed Run Ethereum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More DeFi Learnings:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speedrunethereum.com/&#34;&gt;Speed Run Ethereum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smartcontractkit/defi-minimal/tree/main/contracts&#34;&gt;Defi-Minimal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCatItl6C7wJp9txFMbXbSTg&#34;&gt;Defi Dad&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 14: Hardhat NFTs (EVERYTHING you need to know about NFTs)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=73731s&#34;&gt;⌨️ (20:28:51) Lesson 14: Hardhat NFTs &lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-nft-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-nft-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is an NFT?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9yuHz6g_P50&#34;&gt;Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9oERTH9Bkw0&#34;&gt;Optional: All on Chain SVG NFT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-721&#34;&gt;EIP-721&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testnets.opensea.io/&#34;&gt;Opensea Testnet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardhat Setup&lt;/h2&gt; &#xA;&lt;h2&gt;Basic NFT&lt;/h2&gt; &#xA;&lt;h3&gt;Write Tests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/&#34;&gt;Openzeppelin NFT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Random IPFS NFT&lt;/h2&gt; &#xA;&lt;h3&gt;Mapping Chainlink VRF Requests&lt;/h3&gt; &#xA;&lt;h3&gt;Creating Rare NFTs&lt;/h3&gt; &#xA;&lt;h3&gt;Setting the NFT Image&lt;/h3&gt; &#xA;&lt;h3&gt;Setting an NFT Mint Price&lt;/h3&gt; &#xA;&lt;h3&gt;Deploy Script&lt;/h3&gt; &#xA;&lt;h3&gt;Uploading Token Images with Pinata&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pinata.cloud&#34;&gt;Pinata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nft.storage&#34;&gt;nft.storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@pinata/sdk&#34;&gt;Pinata NPM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pinata.cloud/&#34;&gt;Pinata Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Uploading Token URIs (metadata) with Pinata&lt;/h3&gt; &#xA;&lt;h3&gt;Deploying&lt;/h3&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;h2&gt;Dynamic SVG On-Chain NFT&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9oERTH9Bkw0&#34;&gt;Patrick&#39;s Original Video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What is an SVG?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/graphics/svg_intro.asp&#34;&gt;SVG Tutorial&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://opensea.io/assets/matic/0x291ff90b9c410f56e047599bfee6b585c0c484d7/2&#34;&gt;On-Chain SVG Example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Initial Code&lt;/h3&gt; &#xA;&lt;h3&gt;Base64 Encoding&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Base64&#34;&gt;Base64 Encoding&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://base64.guru/converter/encode/image/svg&#34;&gt;Example Encoder&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/base64-sol/v/1.0.1&#34;&gt;base64-sol&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced: EVM Opcodes, Encoding, and Calling&lt;/h2&gt; &#xA;&lt;h3&gt;abi.encode &amp;amp; abi.encodePacked&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/cheatsheet.html?highlight=cheatsheet#global-variables&#34;&gt;abi.encode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.14/cheatsheet.html?highlight=cheatsheet#global-variables&#34;&gt;abi.encodePacked&lt;/a&gt; Thanks to &lt;a href=&#34;https://twitter.com/alexroan&#34;&gt;Alex Roan&lt;/a&gt; for his help on this session!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rinkeby.etherscan.io/tx/0x924f592458b0e37ee17024f9c826b97697455cd97f6946b802bc42296e77ae43&#34;&gt;Example Contract Creation Transaction&lt;/a&gt; What REALLY is the ABI?&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.evm.codes/&#34;&gt;EVM Opcodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crytic/evm-opcodes&#34;&gt;More EVM Opcodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.13/cheatsheet.html?highlight=encodewithsignature&#34;&gt;Solidity Cheatsheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/91826/why-are-there-two-methods-encoding-arguments-abi-encode-and-abi-encodepacked&#34;&gt;abi.encode vs abi.encodePacked&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Introduction to Encoding Function Calls Directly&lt;/h3&gt; &#xA;&lt;h3&gt;Introduction to Encoding Function Calls Recap&lt;/h3&gt; &#xA;&lt;h3&gt;Encoding Function Calls Directly&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/deconstructing-a-solidity-contract-part-iii-the-function-selector-6a9b6886ea49/&#34;&gt;Function Selector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/PatrickAlphaC/status/1517156225670078465&#34;&gt;Function Signature&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creating an NFT TokenURI on-Chain&lt;/h3&gt; &#xA;&lt;h3&gt;Making the NFT Dynamic&lt;/h3&gt; &#xA;&lt;h3&gt;Deploy Script&lt;/h3&gt; &#xA;&lt;h2&gt;Deploying the NFTs to a Testnet&lt;/h2&gt; &#xA;&lt;h2&gt;Lesson 14 Recap&lt;/h2&gt; &#xA;&lt;p&gt;Extra credit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/deconstructing-a-solidity-contract-part-ii-creation-vs-runtime-6b9d60ecb44c/&#34;&gt;Deconstructing Solidity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RxL_1AfV7N4&#34;&gt;Knowing and controlling your Smart Contract Address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RxL_1AfV7N4&#34;&gt;From Solidity to byte code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 15: NextJS NFT Marketplace (If you finish this lesson, you are a full-stack MONSTER!)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=85023s&#34;&gt;⌨️ (23:37:03) Lesson 15: NextJS NFT Marketplace (Full Stack / Front End)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backend (Contracts): &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-nft-marketplace-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-nft-marketplace-fcc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Frontend (Moralis Indexer): &lt;a href=&#34;https://github.com/PatrickAlphaC/nextjs-nft-marketplace-moralis-fcc&#34;&gt;https://github.com/PatrickAlphaC/nextjs-nft-marketplace-moralis-fcc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Frontend (TheGraph Indexer): &lt;a href=&#34;https://github.com/PatrickAlphaC/nextjs-nft-marketplace-thegraph-fcc&#34;&gt;https://github.com/PatrickAlphaC/nextjs-nft-marketplace-thegraph-fcc&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Graph: &lt;a href=&#34;https://github.com/PatrickAlphaC/graph-nft-marketplace-fcc&#34;&gt;https://github.com/PatrickAlphaC/graph-nft-marketplace-fcc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://twitter.com/mdurkin92&#34;&gt;Matt Durkin&lt;/a&gt; for help with this section.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensea.io/&#34;&gt;Opensea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fantom-foundation/Artion-Contracts&#34;&gt;Artion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Part I: NFT Marketplace Contracts&lt;/h2&gt; &#xA;&lt;h3&gt;Hardhat Setup&lt;/h3&gt; &#xA;&lt;h3&gt;NftMarketplace.sol&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fravoll.github.io/solidity-patterns/pull_over_push.html&#34;&gt;Pull Over Push&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reentrancy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/hacks/re-entrancy&#34;&gt;Reentrancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rekt.news/leaderboard/&#34;&gt;Rekt.news&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/api/security#ReentrancyGuard&#34;&gt;Openzeppelin NonReentrant&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NftMarketplace.sol - Continued&lt;/h3&gt; &#xA;&lt;h3&gt;NftMarketplace.sol - Deploy Script&lt;/h3&gt; &#xA;&lt;h3&gt;NftMarketplace.sol - Tests&lt;/h3&gt; &#xA;&lt;h3&gt;NftMarketplace.sol - Scripts&lt;/h3&gt; &#xA;&lt;h2&gt;Part II: Moralis Front End&lt;/h2&gt; &#xA;&lt;h3&gt;What is Moralis?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/IvanOnTech&#34;&gt;Special Guest Ivan Liljeqvist&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NextJS Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/api-reference/next/link&#34;&gt;Link NextJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding Tailwind&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/docs/guides/nextjs&#34;&gt;Tailwind with NextJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Introduction to Indexing in Web3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thegraph.com/en/&#34;&gt;TheGraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://moralis.io/&#34;&gt;Moralis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Connecting Moralis to our Local Hardhat Node&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/basic-features/environment-variables&#34;&gt;NextJS Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;Reverse Proxy FRP&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/web3/setting-up-ganache&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/faq#frpc&#34;&gt;Trouble Shooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.moralis.io/&#34;&gt;Moralis Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/tools/moralis-admin-cli&#34;&gt;Moralis Admin CLI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Moralis Event Sync&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/connect-the-sdk/connect-using-node#add-new-event-sync-from-code&#34;&gt;Moralis Add Event Sync From Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Reset Local Chain&lt;/h4&gt; &#xA;&lt;h3&gt;Moralis Cloud Functions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/cloud-code/cloud-functions&#34;&gt;Moralis Cloud Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/tools/moralis-admin-cli#get-logs&#34;&gt;Moralis Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardhat.org/hardhat-network/reference/&#34;&gt;Hardhat Network Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Moralis Database only confirms a transaction with a block confirmation - so we need to move blocks on our hardhat local node.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/cloud-code/triggers&#34;&gt;Moralis Triggers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Practice Resetting the Local Chain&lt;/h4&gt; &#xA;&lt;h3&gt;Moralis Cloud Functions II&lt;/h3&gt; &#xA;&lt;h3&gt;Querying the Moralis Database&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.moralis.io/moralis-dapp/database/queries&#34;&gt;Moralis Queries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rendering the NFT Images&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoralisWeb3/react-moralis#usenftbalances&#34;&gt;useNFTBalance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/node-fetch&#34;&gt;fetch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/api-reference/next/image#loader-configuration&#34;&gt;next/image&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Update Listing Modal&lt;/h3&gt; &#xA;&lt;h3&gt;Buy NFT Listing&lt;/h3&gt; &#xA;&lt;h3&gt;Listing NFTs for Sale&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web3uikit.com/&#34;&gt;web3uikit Form&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Part III: TheGraph Front End&lt;/h2&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;h3&gt;What is The Graph?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/dabit3&#34;&gt;Special Guest Nader Dabit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building a Subgraph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thegraph.com/explorer/&#34;&gt;Example Subgraphs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thegraph.com/studio/&#34;&gt;The Graph Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql&#34;&gt;GraphQL VSCode Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploying our Subgraph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/graphql/graphql_query.htm&#34;&gt;GraphQL Queries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reading from The Graph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@apollo/client&#34;&gt;@apollo/client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gql&#34;&gt;gql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thegraph.com/docs/en/&#34;&gt;The Graph Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hosting our Dapp&lt;/h3&gt; &#xA;&lt;p&gt;🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊 Completed Front End Basics! 🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊&lt;/p&gt; &#xA;&lt;h1&gt;Lesson 16: Hardhat Upgrades&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=103991s&#34;&gt;⌨️ (28:53:11) Lesson 16: Hardhat Upgrades&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-upgrades-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-upgrades-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Upgradeable Smart Contracts Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bdXJmWajZRY&#34;&gt;Optional Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Links from Video]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Types of Upgrades&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Parameter&lt;/li&gt; &#xA; &lt;li&gt;Social Migrate&lt;/li&gt; &#xA; &lt;li&gt;Proxy &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Proxy Gotchas &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#diamonds&#34;&gt;Function Collisions&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#diamonds&#34;&gt;Storage Collisions&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-metamorphic-upgrades-fcc&#34;&gt;Metamorphic Upgrades&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/the-transparent-proxy-pattern/&#34;&gt;Transparent&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://forum.openzeppelin.com/t/uups-proxies-tutorial-solidity-javascript/7786&#34;&gt;UUPS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-2535&#34;&gt;Diamond&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Delegatecall&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solidity-by-example.org/delegatecall&#34;&gt;delegatecall (solidity-by-example)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/yul.html&#34;&gt;Yul&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Small Proxy Example&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-1967&#34;&gt;EIP 1967&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Transparent Upgradeable Smart Contract&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wighawag/hardhat-deploy#deploying-and-upgrading-proxies&#34;&gt;Hardhat-deploy Proxies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/upgrades-plugins/1.x/&#34;&gt;Openzeppelin Upgrades Plugin&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://forum.openzeppelin.com/t/openzeppelin-upgrades-step-by-step-tutorial-for-hardhat/3580&#34;&gt;Openzeppelin upgrades tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wighawag/template-ethereum-contracts/tree/examples/openzeppelin-proxies/deploy&#34;&gt;hardhat deploy upgrades examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 17: Hardhat DAOs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=107124s&#34;&gt;⌨️ (29:45:24) Lesson 17: Hardhat DAOs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;⬆️ Up-to-date code: &lt;a href=&#34;https://github.com/PatrickAlphaC/dao-template&#34;&gt;https://github.com/PatrickAlphaC/dao-template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code from video: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-dao-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-dao-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;What is a DAO?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=X_QKZzd68ro&#34;&gt;What is a DAO?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build a DAO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AhJtmUqhAqg&#34;&gt;How to build a DAO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;That&#39;s Patrick&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brownie-mix/dao-mix&#34;&gt;PY Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rD8AxZ_wBA4&#34;&gt;Python Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/api/governance&#34;&gt;Openzeppelin Governance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://compound.finance/governance&#34;&gt;Compound Governance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/wizard&#34;&gt;Contract Wizard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openzeppelin.com/t/what-is-votecastbysig/17069/2&#34;&gt;CastVoteBySig&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lesson 18: Security &amp;amp; Auditing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gyMwXuJrbJQ&amp;amp;t=113312s&#34;&gt;⌨️ (31:28:32) Lesson 18: Security &amp;amp; Auditing &lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Code: &lt;a href=&#34;https://github.com/PatrickAlphaC/hardhat-security-fcc&#34;&gt;https://github.com/PatrickAlphaC/hardhat-security-fcc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.openzeppelin.com/security-audits/readiness-guide&#34;&gt;Readiness Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Slither&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Install python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crytic/slither#how-to-install&#34;&gt;Slither&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crytic/solc-select&#34;&gt;solc-select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Fuzzing&#34;&gt;Fuzz testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fuzzing and Eth Security Toolbox&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crytic/echidna&#34;&gt;Echidna&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/eth-security-toolbox&#34;&gt;Eth-Security-ToolBox&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Closing Thoughts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://consensys.github.io/smart-contract-best-practices/&#34;&gt;Best Practices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://consensys.github.io/smart-contract-best-practices/known_attacks/&#34;&gt;Attacks&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/how-dollar100m-got-stolen-from-defi-in-2021-price-oracle-manipulation-and-flash-loan-attacks-explained-3n6q33r1&#34;&gt;Oracle Attacks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://quantstamp.com/blog/what-is-a-re-entrancy-attack&#34;&gt;Re-entrancy Attacks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.damnvulnerabledefi.xyz/&#34;&gt;Damn Vulnerable Defi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethernaut.openzeppelin.com/&#34;&gt;Ethernaut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Some Auditors: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openzeppelin.com/&#34;&gt;OpenZeppelin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://sigmaprime.io/&#34;&gt;SigmaPrime&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.trailofbits.com/&#34;&gt;Trail of Bits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Congratulations&lt;/h1&gt; &#xA;&lt;p&gt;🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊 Completed The Course! 🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊🎊&lt;/p&gt; &#xA;&lt;h2&gt;Where do I go now?&lt;/h2&gt; &#xA;&lt;h3&gt;Learning More&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cryptozombies.io/&#34;&gt;CryptoZombies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA&#34;&gt;Patrick Collins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCY0xL8V6NzzFcwzHCgB8orQ&#34;&gt;Dapp University&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chainshot.com/courses&#34;&gt;ChainShot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/camiinthisthang&#34;&gt;Cami Ramos Garzon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/thatguyintech&#34;&gt;Albert Hu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/IvanOnTech&#34;&gt;Ivan Liljeqvist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/DeveloperAlly&#34;&gt;Ally Haire&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/stephenfluin&#34;&gt;Stephen Fluin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCZM8XQjNOyG2ElPpEUtNasA&#34;&gt;Eat the Blocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC_HI2i2peo1A-STdG22GFsA&#34;&gt;Austin Griffith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/boyindasouth&#34;&gt;Nader Dabit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/&#34;&gt;Ethereum.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/PatrickAlphaC&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/9zk7snTfWe&#34;&gt;Hardhat Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/2YHSAey&#34;&gt;Chainlink Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.org/en/&#34;&gt;Ethereum Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/ethdev/&#34;&gt;Reddit ethdev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hackathons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain.link/hackathon&#34;&gt;CL Hackathon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethglobal.co/&#34;&gt;ETH Global&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ETHIndiaco&#34;&gt;ETH India&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Be sure to check out project grant programs!&lt;/p&gt; &#xA;&lt;p&gt;And make today an amazing day!&lt;/p&gt; &#xA;&lt;h1&gt;Thank you&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to everyone who is taking, participaint in, and working with this course. It&#39;s been a passion project and data dump of everything I&#39;ve learnt in the web3 space to get you up to speed quickly. Also a big thank you to Chainlink Labs for encouraging this course to come to light - and many Chainlink Labs teammembers who helped with various assets!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zijie0/HumanSystemOptimization</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/zijie0/HumanSystemOptimization</id>
    <link href="https://github.com/zijie0/HumanSystemOptimization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;健康学习到150岁 - 人体系统调优不完全指南&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;背景&lt;/h1&gt; &#xA;&lt;p&gt;去年 5 月曾经写了一篇文章介绍了下 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/371254789&#34;&gt;Lex Fridman 大佬的日常生活安排&lt;/a&gt;，后续我也根据他的方法对自己的日常生活做了一系列规范和改进。这一年整体实行下来，效果还是非常显著的，本文的最后会对我的一些实践以及借助的工具做一些分享。&lt;/p&gt; &#xA;&lt;p&gt;最近几个月，偶然在油管上看到了个 &lt;a href=&#34;https://youtu.be/2ekdc6jCu2E&#34;&gt;Rich Roll 采访 Andrew Huberman 的 podcast&lt;/a&gt;，介绍了如何提升我们日常工作，学习表现的相关神经科学原理与可以利用的“工具”，瞬间打开了一扇新世界的大门。后续又一连追了好几集 Huberman 自己的 podcast，从各个方面了解了一下跟我们日常生活，健康，学习，工作，锻炼等方面相关的知识。与其它很多讲“养生”的文章和视频最大的区别在于，Huberman 本身是斯坦福的神经科学教授，其中讲述的内容都是&lt;strong&gt;来自于高质量，peer reviewed 的科学研究成果&lt;/strong&gt;，从机体工作原理出发，非常细致地介绍了相关的实验和结论，并给出了很多实操建议（很多都是零成本，不是搞推销的……）。&lt;/p&gt; &#xA;&lt;p&gt;通过一系列的学习，逐渐有种学习了各种人类的“组成和操作原理”的感觉。通过一系列的工具和实践，我们也可以&lt;strong&gt;像调优软件程序那样来“调优”我们自身的人体系统&lt;/strong&gt;。这篇文章就来介绍一些相关的知识内容。注意，原版的 podcast 中有非常多专业性的阐述，在这篇文章中基本都去掉了，尽量以故事性的描述来讲解，相对会比较好理解。当然准确性也会因此有所下降，如果希望获取更专业的内容，强烈建议观看 &lt;a href=&#34;https://hubermanlab.com/&#34;&gt;原版的 podcast 内容&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;睡眠&lt;/h1&gt; &#xA;&lt;p&gt;如果你想要获得健康，更好的工作学习状态，提升生理健康如免疫，新陈代谢，以及心理健康如更好的心情，专注能力等，最最重要的前提是拥有一个良好的睡眠。&lt;/p&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;睡眠最重要的控制机理是我们内在的生物钟。随着生物钟的影响，我们体内的各类化学物质会发生变化，体温也随之改变，会影响我们的各种内在状态和外在行为。Huberman 教授很形象地描述了这个“生物钟”的具体作用方式：在早上，身体释放的皮质醇（cortisol）和肾上腺素（aderenaline）会让我们醒来，同时还会设定松果体释放褪黑素的倒计时钟，会在十多个小时之后让我们感到困意再次入睡。&lt;/p&gt; &#xA;&lt;p&gt;影响这个生物钟的最大因素是光照。我们的眼睛除了能够看到东西，另外一个重大的作用就是&lt;strong&gt;通过黑视素神经节细胞来接收光照信息，用以设定我们的内在生物钟&lt;/strong&gt;。这也是为什么有时候我们通宵工作之后，虽然已经持续很久时间没有睡眠了，但随着太阳升起，整体的生物钟被设定到了类似起床时的状态，各类化学物质的释放会让我们突然感觉又有精神了。后续很多最佳实践里也都跟这个原理相关，我们需要控制自己接收光照的时间点，类型和时长。&lt;/p&gt; &#xA;&lt;p&gt;此外，&lt;strong&gt;体温也是一个用于控制我们生物钟的手段&lt;/strong&gt;。一般来说我们的体温会从深睡眠中比较低的状态逐渐升高，到醒来后持续上升。到了一天的后半段会开始逐渐下降，直到再次进入睡眠。&lt;/p&gt; &#xA;&lt;h2&gt;实践&lt;/h2&gt; &#xA;&lt;p&gt;基于上面的原理，Huberman 教授提供了一系列提升睡眠的最佳实践：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;皮质醇的释放与接触阳光有关，因此如果想尽快醒来且保持日间良好的精神状态，&lt;strong&gt;起床后应该到外面去接触阳光，持续 2-10 分钟&lt;/strong&gt;。这对于血压控制，心理状态，设定睡眠的“倒计时钟”等都有很大好处。户外日光的效果最好，如果是人造光源，蓝光的效果会比较好，且最好是上部（天空的位置）的光源。根据光照强度推算，隔着窗户接收日光的强度会降低 50%以上，而达到同样效果所需要的光照时间则需要 50 到 100 倍。有意思的是，这一点对于视障人士也有效，因为前面提到的黑视素神经节细胞并不是用于视觉成像的细胞。&lt;/li&gt; &#xA; &lt;li&gt;对应的，&lt;strong&gt;在晚上要尽量减少光源的接触&lt;/strong&gt;，因为这会扰乱我们的生物钟，让身体系统误以为是在白天。尤其是晚上 11 点到次日凌晨 4 点之间接收光源，会抑制后续几天的多巴胺的释放，影响心情，心理健康，专注度，学习能力，新陈代谢等等。关于多巴胺的作用和机理，后面会再单独介绍。&lt;/li&gt; &#xA; &lt;li&gt;如果不可避免需要在晚上接触光源，处于较低位置，暗淡的红光，蜡烛之类的会相对好一些。如果要看电脑，建议使用 blue blockers 眼镜，这跟一些电脑软件会自动调节屏幕色温的效果可能类似。&lt;/li&gt; &#xA; &lt;li&gt;傍晚观察落日，对于后续入睡也有帮助，甚至能减轻晚上摄入光照的负面影响，有点神奇。&lt;/li&gt; &#xA; &lt;li&gt;人一天中的精神状态一般会在中间有个短暂的低谷，所以午睡对于有些人可能是有帮助的。也可以用一些其它的非睡眠深度休息的方式来替代，如 &lt;a href=&#34;https://youtu.be/M0u9GST_j3s&#34;&gt;Yoga Nidra&lt;/a&gt;，冥想，自我催眠（可以利用一些 App）等。&lt;/li&gt; &#xA; &lt;li&gt;体温对生物钟周期的影响： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;早上洗冷水澡，会让人快速升温，从而把睡眠周期往前移（早起）。&lt;/li&gt; &#xA;   &lt;li&gt;晚上锻炼身体，会让人保持高体温，从而延后周期（晚睡）。&lt;/li&gt; &#xA;   &lt;li&gt;可以选购一些自动控制体温的智能床垫来提升睡眠质量。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;一般建议的锻炼时间：醒来后 30 分钟，3 小时和 11 小时这三个时间点。不过总体来看好像影响度比较小。&lt;/li&gt; &#xA; &lt;li&gt;饮食和药物因素： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;咖啡因会占据腺苷（adenosine）的受体，阻断入睡的信号。有不少文章都提到中午之后尽量不要喝咖啡，但 Huberman 表示没有科学实验表明咖啡因对所有人的效果是一样的，得根据自己的测试情况来。比如他自己在下午 5 点喝咖啡也能正常入睡。&lt;/li&gt; &#xA;   &lt;li&gt;镁，对入睡有帮助。&lt;/li&gt; &#xA;   &lt;li&gt;芹黄素也能帮助入睡，但要注意对雌性激素的影响。&lt;/li&gt; &#xA;   &lt;li&gt;建议不要摄入太多牛磺酸。&lt;/li&gt; &#xA;   &lt;li&gt;不建议通过摄入褪黑素来帮助入睡，褪黑素药物本身的规格把控不严格，且褪黑素容易引起抑郁情绪。&lt;/li&gt; &#xA;   &lt;li&gt;中午可以吃低卡路里以及含酪氨酸的食物，如坚果，大豆，部分蔬菜等，提升多巴胺，肾上腺素，保持清醒。&lt;/li&gt; &#xA;   &lt;li&gt;晚上则可以吃点淀粉，白肉等富含色氨酸的食物，进而转化为血清素，会让人更加平静，容易入睡。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;对于绝大多数人，6-8 小时的睡眠时长是比较健康的。&lt;/li&gt; &#xA; &lt;li&gt;对于各类药物的检索可以参考：&lt;a href=&#34;https://examine.com/&#34;&gt;examine.com&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;饮食&lt;/h1&gt; &#xA;&lt;p&gt;在前面 Lex 的分享中，提到了他采取了生酮饮食以及 fasting（禁食）的习惯，这引起了我对于饮食习惯的注意。Huberman 教授正好也有几个 podcast 介绍了 fasting，肠道健康等话题，很有意思。&lt;/p&gt; &#xA;&lt;h2&gt;Fasting 的背景&lt;/h2&gt; &#xA;&lt;p&gt;我们可以把身体跟进食相关的化学状态分成 2 类：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;吃饱了的状态，也就是血糖含量较高的状态。此时我们身体会更活跃地进行体内细胞的复制与成长。&lt;/li&gt; &#xA; &lt;li&gt;禁食的状态，也就是血糖含量较低的状态。此时我们的身体会更活跃地进行体内细胞的修复与清理（autophagic）。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;由于睡眠时我们天然是不吃东西的，所以一般来说睡眠中的一部分时间会使我们处于禁食状态，饮食时间的选择实际上就是在控制上述两个状态的持续时间和平衡关系。比较有意思的是世界上很多民族文化和宗教中，都有一些跟禁食相关的习俗，甚至会持续很多天。&lt;/p&gt; &#xA;&lt;p&gt;在 2012 年，科学家开始对小白鼠做实验，把他们分成两大组，一组可以在一天中的任何时间吃东西，而另一组只能在固定的 8 小时里吃东西。在大组里再区分小组，给小白鼠吃健康的和不健康的食物。结果发现，只能在 8 小时里吃东西的小白鼠们，即使吃的是不健康的高脂肪食物，他们的健康水平仍然得到了保持甚至提高，相比所有不做限制的组都有明显的提升。&lt;/p&gt; &#xA;&lt;p&gt;这个研究震动了学术界，后续又有非常多的针对人类，不同性别，不同年龄，不同职业（包括运动员）的各种实验与论文发表，科学家们发现这种&lt;strong&gt;间歇性禁食状态对于身体有非常多的好处&lt;/strong&gt;，包括：促进肝脏健康，胆汁酸代谢，炎症自愈，保持体重，提升 brown fat 储备（对健康有益），防止非酒精性脂肪肝，血糖控制，肠道健康等等。如果养成间歇性禁食的习惯 60 天以上，还会让我们的身体倾向于代谢脂肪来供能，控制体重。&lt;/p&gt; &#xA;&lt;p&gt;因此，Huberman 教授指出，&lt;strong&gt;何时进食，与吃什么东西，其实是同等重要的&lt;/strong&gt;。这个研究也让很多学术界的研究人员自己也都养成了 fasting 的习惯，包括 Huberman 自己。&lt;/p&gt; &#xA;&lt;h2&gt;Fasting 的实践&lt;/h2&gt; &#xA;&lt;p&gt;由于长时间的禁食难度较大，所以绝大多数的研究都专注于间歇性禁食，也就是 time restricted feeding。简单来说就是跟前面的小白鼠实验一样，在一天的固定时间段来吃东西（跟睡眠周期对齐），而其它时间段都不摄入任何食物的做法。这里简单整理为基础和高阶两个版本：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基础：如果想享受 fasting 的基础收益，最简单的执行原则是&lt;strong&gt;起床后至少 1 小时内不要吃东西，同时睡前的 2-3 小时不要吃任何东西&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;高阶：目前研究结果中&lt;strong&gt;最理想的进食窗口是 8 小时&lt;/strong&gt;，结合社会习俗等，一般比较合理的时间在 10-18 点或 12-20 点的范围。看起来&lt;strong&gt;不吃早饭并不是什么坏事&lt;/strong&gt; :)&lt;/li&gt; &#xA; &lt;li&gt;作者特地温馨提醒，如果想通过健身来增肌，建议可以把这个时间窗口往前移，因为早上摄入蛋白质会对肌肉增长有益。而健身的时间可以自由选择。&lt;/li&gt; &#xA; &lt;li&gt;尽量&lt;strong&gt;保证这个窗口时间的稳定性&lt;/strong&gt;，也非常重要。否则就跟频繁倒时差产生的效果差不多，会打不少收益折扣。&lt;/li&gt; &#xA; &lt;li&gt;如果想尝试高阶 fasting，建议逐渐切换进食习惯，例如每两天缩短 1 小时的进食窗口，逐渐达到理想的 8 小时。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;值得注意的是，这里说的不吃任何东西，并不是说连水也不能喝。从前面的背景可以看到，是否处于禁食状态，主要依据是血糖水平，因此：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;喝水，茶，咖啡（不加牛奶）等，并不会中断禁食。但一勺糖的摄入就会中断。&lt;/li&gt; &#xA; &lt;li&gt;晚饭后想尽快进入禁食状态，可以做一些轻量运动，比如散步等，加快血糖清理。&lt;/li&gt; &#xA; &lt;li&gt;二甲双胍，黄连素（berberine）等可以直接促进血糖清理。肉桂皮，柠檬汁，也能轻微降低血糖。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最后，如果禁食期间觉得有些头晕，颤抖，并不需要立刻进食或摄入糖分。可以喝一点盐水（可以加柠檬汁），一般就能很好的缓解症状。这让我想起 Lex 会提到了会服用药片来补充各种电解质元素，比如钠，镁，钾等。&lt;/p&gt; &#xA;&lt;h2&gt;饮食与消化道健康&lt;/h2&gt; &#xA;&lt;p&gt;由于我个人的肠胃功能比较差，所以也特别关注了一下消化道健康的话题。Huberman 邀请了一位非常知名的微生物学家 Sonnenburg 来介绍肠胃微生物群落与我们的健康之间的关系，也是学到了很多新的知识：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;肠道的微生物群不仅影响消化系统的健康运作，&lt;strong&gt;对人体的免疫系统也起到了非常关键的因素&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;婴儿出生，成长的方式会形成非常不同的肠道菌群生态。暴露在微生物环境中（但要注意会引起疾病的情况），对于维持菌群环境是有益的，比如家里养宠物，让孩子自由玩耍等，不需要过度清洁与消毒。&lt;/li&gt; &#xA; &lt;li&gt;什么是健康的肠道菌群生态，目前没有一个标准的结论。不过总体来看，&lt;strong&gt;菌群的多样性程度高，一般就表示更加健康&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;抗生素会严重破坏肠道菌群生态，需要谨慎使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在访谈中，两位重点讨论了一个实验，就是什么样的饮食方式会让我们更好的维持肠道菌群的多样性和健康。实验主要对比了两种附加饮食：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;高纤维食物：全谷类，豆类，蔬菜，坚果。这也是传统上被认为非常健康的食物，其中很多纤维的分解都需要肠道菌群的帮助，换句话说，纤维就是它们的“食物”。&lt;/li&gt; &#xA; &lt;li&gt;发酵类食物：酸奶，牛奶酒（kefir），康普茶，酸菜，泡菜，纳豆等。注意需要是自然发酵，一般是冷藏且非罐装的食品。而且像酸奶这类要格外注意不要加糖等添加剂。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;实验的结果也颇令人意外：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;摄入发酵类食品的组，显著提升了肠道菌群的多样性。被试者&lt;strong&gt;几十个免疫标志物的显著降低，对各类炎症都有更好的抑制作用&lt;/strong&gt;。没想到吧，肠道菌群还能调节炎症。&lt;/li&gt; &#xA; &lt;li&gt;肠道菌群本来的多样化程度比较高的人，摄入高纤维食物是有帮助的。如果不是，则摄入高纤维食物的帮助不大。在工业化进程中，人类的进食习惯已经有很多代都转变为了摄入大量肉类，加工食品等，肠道菌群的生态无法仅通过提高纤维食物的量来改变其族群结构。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;此外在访谈中，两位还讨论了具体食谱推荐的问题，引用了 &lt;a href=&#34;https://youtu.be/sJLK3sVexIk&#34;&gt;Christopher Gardner 关于生酮饮食与地中海饮食比较的研究&lt;/a&gt;。这里总结一下实践建议：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果要改善肠道菌群生态，最好的方式是一天两次摄入天然发酵类食品&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;高纤维食物对于肠道菌群生态的维护是有益的，建议日常饮食以植物类食物为主，尽量避免深度加工食品的摄入，控制糖的摄入。Sonnenburg 教授还讲了个故事，说微生物学家参加的会议，一般餐厅的沙拉吧总是会供不应求 :) 前面提到的 Rich Roll 大佬也是个素食者。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;益生菌的效果没有广泛研究支持&lt;/strong&gt;，且这类产品的监管很有限。&lt;strong&gt;益生元的效果也是好坏参半&lt;/strong&gt;，缺乏多样性，溶解速度太快等问题都使总体效果存疑。&lt;/li&gt; &#xA; &lt;li&gt;地中海饮食相比生酮饮食来说对健康的影响效果接近，但更容易坚持遵循。另外生酮饮食如果长期实践可能有一定的风险。所以&lt;strong&gt;总体更推荐地中海饮食结构&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外值得参考的是我们也有官方的 &lt;a href=&#34;https://sspai.com/post/72984&#34;&gt;中国居民膳食指南&lt;/a&gt;，或许更适合东方人的饮食习惯。&lt;/p&gt; &#xA;&lt;h1&gt;心态与动力&lt;/h1&gt; &#xA;&lt;p&gt;这一部分主要介绍的是人体的多巴胺系统原理，以及如何利用它来形成健康，自律的生活方式。这一集是 Huberman 开播以来播放量最高的一集，对于强健我们的心智有着非常好的指导作用。&lt;/p&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;多巴胺是一种非常重要的化学物质，主要作用于两个神经回路：一个影响身体的运动，例如帕金森病与多巴胺的分泌不足有关；另一个则影响我们的动机，欲望与快乐，这几乎与我们从事的各种活动有关，无论是工作，学习还是社交，休闲娱乐。这里我们会主要讨论多巴胺的后者影响能力。&lt;/p&gt; &#xA;&lt;p&gt;神经系统中多巴胺含量水平的高低会影响我们的情绪，当多巴胺水平低时，我们会感到情绪低落，没有动力，而多巴胺水平高时，我们会感到兴奋和快乐。在通常情况下，我们的身体处于多巴胺 baseline 的状态，当我们达成一些令人兴奋的目标（比如玩游戏胜利，考试拿高分）后，多巴胺的水平会达到一个高峰，此时我们就会获得巨大的愉悦感。在高峰之后，多巴胺水平会回落到比 baseline 更低的一个水平，且这个状态会持续一段时间。&lt;/p&gt; &#xA;&lt;p&gt;这里有两个非常重要的原理：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多巴胺绝对值含量的高低只是一方面，&lt;strong&gt;更重要的是其“相对变化量”的多少&lt;/strong&gt;。比如在刷抖音时看到了一个很有趣的视频，多巴胺水平升高，你会感到快乐，刷到下一个视频时，你感到的快乐程度好像不会那么强烈了，因为多巴胺已经在一个比较高的水平，难以形成更大的变化量。而同样的视频，如果你是几天之后看到，或许你会觉得有意思的多。所以&lt;strong&gt;当你持续做一件喜欢的事情时，你感受到快乐的阈值也会不断提高&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多巴胺的总体“储备”是有限的&lt;/strong&gt;！也就是说无论你是通过学习，工作，娱乐，社交，运动等不同方式来获得快乐，所消耗的“快乐货币”都是同一种：多巴胺。举几个例子来看下这个原理带来的影响： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;很多自律的人都会说自己是 work hard，play hard 的生活方式，比如工作日通过高强度的工作来获得成就和满足感，休息日进行各种休闲娱乐，运动，社交等方式来获得快乐，其实背后都是在释放多巴胺来获取快乐。长期持续，我们身体的多巴胺 baseline 会逐渐下降，出现一种耗尽（burn out）的心理感觉，对很多事物无法保持之前的兴趣与精力。&lt;/li&gt; &#xA;   &lt;li&gt;很多人会对玩电子游戏着迷，因为它们能带来巨大的多巴胺释放刺激让人感到快乐。但要意识到，多巴胺的储备是有限的，如果对此上瘾，你的多巴胺耗尽问题就会变得非常严重：一方面能够引起你兴趣的事物会变少，可能只有玩游戏才能带来快乐；另一方面，后续甚至会导致玩游戏本身也无法触发多巴胺释放，引起严重的抑郁问题。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，&lt;strong&gt;多巴胺也具有叠加效应&lt;/strong&gt;。比如你喜欢健身，那么运动就会刺激多巴胺的释放。而我们实际去健身时，可能会不自觉地安排了很多其它的“快乐因素”，比如选一个精神状态比较好的日子，运动前喝一些能量饮料，跟认识的朋友一起去，边健身边 social，听一些自己喜欢的音乐或 podcast，等等。这些因素也都会促进多巴胺的释放，让你感到“前所未有的快乐”。但要注意前面的原理，多巴胺的高峰越高，后面随之而来持续的低谷也会越长，而且长此以往，可能会降低你单纯从运动中获取快乐的能力。这样的例子还有很多，比如边跟朋友吃饭，边玩手机，拍照发朋友圈，可以计算一下叠加了几种快乐因素 :)&lt;/p&gt; &#xA;&lt;h2&gt;影响多巴胺的外界因素&lt;/h2&gt; &#xA;&lt;p&gt;我们来看下具体影响多巴胺释放的各类因素有哪些，首先是促进多巴胺分泌的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;巧克力，提升到 1.5 倍的多巴胺 baseline&lt;/li&gt; &#xA; &lt;li&gt;性行为，提升到 2 倍&lt;/li&gt; &#xA; &lt;li&gt;尼古丁，提升到 2.5 倍&lt;/li&gt; &#xA; &lt;li&gt;可卡因，提升到 2.5 倍&lt;/li&gt; &#xA; &lt;li&gt;安非他命，提升到 10 倍&lt;/li&gt; &#xA; &lt;li&gt;咖啡因本身只会少量提升多巴胺，但它会抑制一些多巴胺受体，提升同等多巴胺造成感受的效果&lt;/li&gt; &#xA; &lt;li&gt;马黛茶，包含咖啡因，能控制血糖，还能保护多巴胺神经元&lt;/li&gt; &#xA; &lt;li&gt;刺蒺藜豆也能提升多巴胺（基本等同于 L-DOPA），还能提升男性精子数量和质量&lt;/li&gt; &#xA; &lt;li&gt;运动，带有主观成分，喜欢跑步的人，可以提升到 2 倍 baseline&lt;/li&gt; &#xA; &lt;li&gt;健康的社交关系也会促进多巴胺释放&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;食物方面感觉 Huberman 教授&lt;strong&gt;非常推荐马黛茶&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;也有很多提升多巴胺释放或影响其效果的药物：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;L-Tyrosine（酪氨酸），提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;Phenethylamine（PEA），巧克力中也包含，能够提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;Huperzine A，提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;各种“聪明药”，如 Adderall, Modafinil, Alpha-GPC, Ginkgo 等，留学党应该很多都有耳闻&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;通常来说，&lt;strong&gt;不推荐持续使用这些药物&lt;/strong&gt;，因为多巴胺释放之后的高峰会带来 baseline 水平的降低，导致无法享受活动的快乐，无法专注，限制学习能力和神经元可塑性等。Huberman 表示&lt;strong&gt;一周使用一次的频率应该是安全的&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;最后还有一个比较特别的研究，就是&lt;strong&gt;冷水浴能够提升多巴胺释放到 baseline 的 2.5 倍左右&lt;/strong&gt;，且持续时间更长，能达到 3 小时左右。建议使用 10-14 摄氏度的水温，注意安全。此外冷水浴也不需要太频繁，每周 11 分钟左右足够。如果已经习惯了冷水浴，那么也就没有释放多巴胺的效果了。&lt;/p&gt; &#xA;&lt;p&gt;还有一些因素会降低多巴胺，如：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;褪黑素，会引起多巴胺的减少&lt;/strong&gt;。前面也提到过并不建议使用褪黑素来帮助入睡，或者适应时差等。&lt;/li&gt; &#xA; &lt;li&gt;睡眠时段接触光源，也会引起接下来几天的多巴胺水平下降。&lt;strong&gt;半夜睡不着刷手机是很有害的哦&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;维持健康的多巴胺水平&lt;/h2&gt; &#xA;&lt;p&gt;了解了原理和各种影响因素后，我们来看下如何有效设计我们的生活工作方式来维持健康，可持续的多巴胺水平。&lt;/p&gt; &#xA;&lt;p&gt;简单回顾一下，前面我们已经知道了多巴胺储备有限，且对一件事物上瘾会不断提高感受快乐的阈值，那么如何让我们能对一件事情保持长时间的兴趣和投入度，又不至于耗尽多巴胺呢？一个经典的例子是赌场的运作方式，我们并不是每一次下注都能赢，偶尔赢一次会释放多巴胺，而且根据赢得钱的多少有所上下浮动，这会吸引玩家持续参与。这就是一种非常有效的&lt;strong&gt;间歇性且随机的奖励机制&lt;/strong&gt;。感觉很多游戏，社交网络产品也借鉴了这个思路来进行设计。&lt;/p&gt; &#xA;&lt;p&gt;对于我们经常需要从事的活动，我们也可以模拟这个机制。还记得前面提到的&lt;strong&gt;多巴胺叠加效应&lt;/strong&gt;吗？我们可以&lt;strong&gt;通过随机化叠加因素的多少，来实现多巴胺释放的差异性&lt;/strong&gt;。还是以健身为例，我们可以随机决定今天是否要听音乐，是否去健身时带手机，是否要在健身前喝能量饮料等因素。如果其它什么都不做，只是单纯健身，那么多巴胺的释放量就会相对较低。如此就能模拟多巴胺释放有高有低的随机奖励机制。&lt;/p&gt; &#xA;&lt;h2&gt;成长型思维&lt;/h2&gt; &#xA;&lt;p&gt;最后来看下如何构建良好的思维方式来利用多巴胺系统提升自我。&lt;/p&gt; &#xA;&lt;p&gt;有一个非常知名的实验，挑选了一群天生喜爱画画的小朋友，在他们完成画作后给与一些奖励。后面在移除这些奖励后，小朋友们对于画画的兴趣和动力大大降低了。这个实验说明，当我们因为一个活动收到奖励（比如金钱，美食等）时，我们&lt;strong&gt;反而会降低活动本身的愉悦程度&lt;/strong&gt;。而且多巴胺本身影响我们对时间的认知，同时也影响我们的情绪状态，如果我们&lt;strong&gt;始终以完成活动后的奖励为目标，则整个过程中就很少释放多巴胺，让原本困难的过程变得更加难以坚持&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;仔细想一下，这是一个非常有意思的观察。多巴胺有点像我们的“本能系统”，决定了我们是否有动力做一件事。但反过来&lt;strong&gt;我们的主观思想却可以影响这个系统起作用的方式&lt;/strong&gt;，这也是人类为何能摆脱动物本能，达成很多需要“反人性”的投入才能取得的成就的原因吧。上述的实验是我们的主观思想造成的一个反面作用的例子，我们自然也可以实现正面作用，那就是成长型思维。&lt;/p&gt; &#xA;&lt;p&gt;具体来说，就是&lt;strong&gt;通过自我暗示，把努力过程本身当作一种“奖励”&lt;/strong&gt;。我在努力学习，这个过程本身就是有趣的，会让我不断变得更强，这样的想法会在过程中激发身体系统释放多巴胺，而多巴胺提升了我们的情绪和动力水平，也会让努力的过程中碰到的困难变得相对容易克服。专注于这个过程的本身，而不是在过程前进行各种外界刺激（如前面提到的药物），或者在过程后给自己巨大的奖励。&lt;/p&gt; &#xA;&lt;p&gt;这种思维方式看起来很主观，但这就是我们的神经系统工作的方式，虽然人类的“硬件系统”都差不多，但知识，思维这些运行之上的“软件”却可以千差万别。&lt;strong&gt;我们可以通过自律，自我暗示来改变自身对各类活动的喜好&lt;/strong&gt;。例如通过暗示 fasting 对我们健康的益处，来获取满足感，而不是借助于 fasting 结束后的大快朵颐。通过自律抵御高油盐食物的吸引力，并且自我暗示植物类食物对身体的好处，坚持一段时间，会觉得花椰菜也挺美味的。这也是为什么我们在这篇文章中介绍了很多原理性的内容，而不仅仅是行为建议。因为这些原理知识能够让我们做更好的自我暗示 :)&lt;/p&gt; &#xA;&lt;p&gt;这一节的 podcast 对我本人的冲击非常大，强烈建议大家观看这期 &lt;a href=&#34;https://hubermanlab.com/controlling-your-dopamine-for-motivation-focus-and-satisfaction/&#34;&gt;Mindset &amp;amp; Drive&lt;/a&gt;，相信也会有不同的收获。&lt;/p&gt; &#xA;&lt;h1&gt;学习与专注&lt;/h1&gt; &#xA;&lt;p&gt;在了解了多巴胺的运作机制基础上，我们可以继续探究一些跟大脑健康，专注度，如何进行高效学习相关的话题。&lt;/p&gt; &#xA;&lt;h2&gt;学习的原理&lt;/h2&gt; &#xA;&lt;p&gt;从脑神经科学来看，学习的本质是神经元的重新连接（rewire），进一步来看，需要大脑处在一种学习的化学状态下，也就是 Huberman 经常提到的神经可塑性（neuroplasticity）状态。&lt;/p&gt; &#xA;&lt;p&gt;简单来说，当我们尝试做一些事情，但没有达到预期目标时，身体会给大脑发信号，“我犯错了”。处在这种犯错，沮丧的认知状态下，神经系统会释放肾上腺素（提升 alertness），乙醯胆碱（提升 focus），多巴胺（促进神经元的 change，rewire）等化学物质，激活神经元的可塑性。也就是说，&lt;strong&gt;犯错是我们进入学习状态的重要前提&lt;/strong&gt;。搞机器学习的同学应该很熟悉了吧，这跟我们训练模型不是一模一样么 :) 另外很多人可能觉得心流（flow）状态是学习的最佳状态，而 Huberman 则不这么认为。&lt;strong&gt;心流是一种精神高度集中且接近于自动化的状态，是在做我们已经知道怎么做的事情，而不是在学习新的知识技能&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;对于这个学习状态，经典的实验是给人们戴上一些能转变角度的眼镜，然后执行一些类似物体抓取的任务。由于看到的东西通过眼镜改变了其本来的位置，一开始在尝试时总会出现抓取动作的偏离。但后续在进入神经可塑性状态后，我们能逐渐适应相关的视觉偏移，协调自己的听觉，动作等都与之协同，顺利完成任务。更有意思的是，&lt;strong&gt;这个“神经可塑性”的化学状态是可以持续的&lt;/strong&gt;，我们甚至可以先通过一些其它操作触发大脑的这个机制，再去进行真正的学习，以加快学习的速度。这里还有一个隐藏逻辑，当你在遇到挫折困难时，大脑进入了可塑性状态，而此时你却放弃了，那么&lt;strong&gt;神经元也会重新连接到这种容易放弃的行为模式，形成恶性循环&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;人在年幼时期大脑天然的神经可塑性会比较好，而在 25 岁以后则会大大下降。我们后面会提到如何来进行克服。&lt;/p&gt; &#xA;&lt;p&gt;另外，&lt;strong&gt;休息和睡眠时也会发生大量的神经元重连接的活动&lt;/strong&gt;，这也是之前我们就提到过的，高质量的睡眠是实现很多生理，心理健康强壮的先决条件。&lt;/p&gt; &#xA;&lt;h2&gt;利用神经可塑性&lt;/h2&gt; &#xA;&lt;p&gt;如果正在阅读文章的你还未满 25 岁，那么恭喜你，你的神经可塑性仍然非常的好，可以&lt;strong&gt;尽可能广泛的学习各种知识和技能&lt;/strong&gt;。比如你可以很快学会各种乐器，新的语言，新的运动，新的专业技能等等。通过更广阔领域的体验接触，尽量找到你最有兴趣的方向，可以后续再不断深入经营。&lt;/p&gt; &#xA;&lt;p&gt;如果已经像我一样超过了 25 岁，那么还有很多办法来提升神经可塑性：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过实验发现，&lt;strong&gt;成年人对于小幅度的增量学习是完全可以适应与掌握的&lt;/strong&gt;。例如每次视觉上的偏差只有 7 度，而不是一下子就来个 180 的大颠倒，那么成年人也能很快从错误中学习纠正。应用到实际学习中，我们每次学习的内容可以控制一下不要太多（本文有点违反了，建议收藏慢慢学习），多次积累来完成神经系统的调整学习。&lt;/li&gt; &#xA; &lt;li&gt;对于达成目标的渴求度越高，重要性越大，奖励的刺激越大（比如为了生存），则神经可塑性就会越容易出现。这个比较符合直觉，但是现实中可操作性可能不高。&lt;/li&gt; &#xA; &lt;li&gt;第三点最有意思，&lt;strong&gt;通过扰乱前庭神经系统（vestibular system），能够达到神经元可塑性的状态&lt;/strong&gt;。简单来说，就是让你的身体有一些“新颖的重力体验”，如倒立，瑜伽，体操，滑板，任何让身体会失去平衡的一些状态等，会快速激发“我犯错了”的信号，进入学习状态，甚至可以在之后去做别的任务的学习。这一下子就让我想到了&lt;strong&gt;淘宝成立初期的“倒立文化”，没想到还真的有科学依据&lt;/strong&gt;。需要注意的是，这个体验必须要新颖，也就是说如果你已经倒立很熟练了，那么去做倒立就是个日常行为，并不会给身体一种在犯错边缘，需要纠正的刺激。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;学习的理想状态&lt;/h2&gt; &#xA;&lt;p&gt;除了神经可塑性的化学状态外，我们也需要注意其它的因素。例如我们&lt;strong&gt;不能太放松以至于有些昏昏欲睡，也不能太紧张激动，无法控制自己拥有清晰的思考&lt;/strong&gt;等。这些也都跟我们体内的多巴胺，肾上腺素，乙醯胆碱，血清素，褪黑素等化学物质的水平有关，需要做好调节。在之前 Rich Roll 的访谈节目中，Huberman 提了一个非常有效的“呼吸工具”，叫&lt;strong&gt;生理叹息&lt;/strong&gt;（Physiological Sigh）。操作方法上简单来说就是吸两口气，然后出一口长气。通常情况下，只要一两次生理叹息就足以使我们的压力和警觉水平迅速下降，让人感到更加平静，提升学习表现。&lt;/p&gt; &#xA;&lt;p&gt;前面提到的成长型思维也很重要，在遇到错误导致的沮丧感觉时，可以不断增强自我暗示，失败是帮助我们学习成长的唯一路径，对我们是有益的，以此增加多巴胺的释放，提升学习动力和过程中的愉悦感。&lt;/p&gt; &#xA;&lt;p&gt;联系到睡眠对学习的促进作用，也有一些研究提供了一些相关的 tips：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在学习时听一些有规律的节拍，在入睡时也播放同样的微弱节拍，能够提升学习和记忆的效果。&lt;/li&gt; &#xA; &lt;li&gt;一般在 90 分钟的学习后（人体生物钟的周期），可以选择进行 20 分钟的休息（non sleep deep rest），也会加强学习的效果。&lt;/li&gt; &#xA; &lt;li&gt;Gap effect，在学习中随机停止 10 秒钟，这些停止会在睡眠中加速“播放”，提升学习效果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;提升专注&lt;/h2&gt; &#xA;&lt;p&gt;“专注”背后的机理是大脑中两种“网络模式”的协调，一种叫 Default network，在我们不做任何事情时被激活，另一种叫 Task networks，在我们专注于做某些事情时被激活。普通人的大脑能够很好地协调这两个模式，两者像跷跷板一样，当一种模式被激活时另一种模式会被抑制。而具有专注障碍（比如多动症）的人来说，这两者无法很好地进行协调，因此会出现无法专注的现象。&lt;/p&gt; &#xA;&lt;p&gt;通过提升多巴胺水平，可以有效促进这两种网络模式的协调，因此有非常多的多动症治疗药物都跟提升多巴胺有关，例如 &lt;strong&gt;Adderall，Modafinil&lt;/strong&gt; 等。一些调查表明，这些药物（经常被称为聪明药，nootropics）在美国被滥用的程度甚至超过了大麻，不少“学霸”都以此来提升注意力，减少对睡眠的需求。但 Huberman 教授表示，一方面多巴胺的刺激提升后都会带来多巴胺水平的低谷，另一方面这些药物也可能导致上瘾，对新陈代谢作用造成扰动，有很多负面影响，&lt;strong&gt;对长期的学习与记忆效果可能并没有提升作用&lt;/strong&gt;。在之前介绍多巴胺的章节也有提到，应该谨慎使用这类药物，并严格控制使用频率不能过高。&lt;/p&gt; &#xA;&lt;p&gt;一些安全有效的提升专注力的方法包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;适量补充 &lt;strong&gt;Omega-3 EPA 鱼油&lt;/strong&gt;，这是神经细胞的组成原料之一，能够有效减轻抑郁，对治疗多动症（ADHD）也有帮助。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;通过身体其它部分释放运动，可以帮助提升注意力&lt;/strong&gt;。教授举的例子是作为神经科医生在开刀时，如果采用半蹲半站的姿态（运动释放），拿手术刀的手更稳定不容易颤抖。这让我想起以前读书时很多同学习惯转笔，现在工作了也有不少人喜欢玩指尖陀螺，或者站立办公，可能都是类似效果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;限制视野范围，能够提升专注度&lt;/strong&gt;。比如我们经常因为眼睛瞟到了任务栏上的消息提示闪动而分心，可以通过一些设置来进入“专注模式”。&lt;/li&gt; &#xA; &lt;li&gt;视线的高低也会影响神经状态，&lt;strong&gt;视线往下看会让神经系统偏向镇静，放松，甚至困倦，而视线向上则会让系统提升警惕&lt;/strong&gt;。工作时一般至少把显示器放置在鼻子位置之上。&lt;/li&gt; &#xA; &lt;li&gt;大脑不擅长处理大量频繁的 context switch，典型的比如刷抖音，不同的信息以非常快的速度频繁切换，这对我们的注意力是有伤害作用的。2014 年的一项研究表示，&lt;strong&gt;我们每天在手机上花费的时间应该少于 60 分钟（青少年）/120 分钟（成年）&lt;/strong&gt;，以免引起注意力障碍问题。&lt;/li&gt; &#xA; &lt;li&gt;还有研究表明，&lt;strong&gt;17 分钟的冥想，能够对大脑中的神经元做重新连接，永久地改善注意力&lt;/strong&gt;。只要做一次就可以，完全可以尝试一下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;大脑健康&lt;/h2&gt; &#xA;&lt;p&gt;最后来看下提升大脑健康和效能的一些方法。&lt;/p&gt; &#xA;&lt;p&gt;首先是前面提到过的，保证高质量的睡眠。&lt;/p&gt; &#xA;&lt;p&gt;运动方面，&lt;strong&gt;对大脑直接帮助最大的是有氧运动&lt;/strong&gt;，提升心肺功能，支持大脑供能。建议每周 150-180 分钟的有氧训练。&lt;/p&gt; &#xA;&lt;p&gt;对于大脑健康有帮助的食物，其中前三点是比较重要的，后面的部分涉及的研究没有那么多：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Omega3, 尤其是 EPA 等脂肪酸&lt;/strong&gt;，是大脑组成的重要部分，且一般人都容易摄入不足。多吃鱼，牡蛎，鱼子酱，奇亚籽，核桃，大豆。一天至少摄入 1.5 克，理想情况需要 3 克以上。不喜欢吃鱼的话可以辅助摄入鱼油。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;磷脂酰丝氨酸&lt;/strong&gt;，也对认知能力有帮助。通过鱼，肉类，卷心菜来摄入。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;乙酰胆碱&lt;/strong&gt;，重要的神经调质，提升注意力。摄入胆碱的重要来源是鸡蛋，尤其是蛋黄。土豆，坚果，水果中也含有，虽然没有蛋黄中的含量那么丰富。可以通过 Alpha-GPC 等补充剂来获取。&lt;/li&gt; &#xA; &lt;li&gt;肌酸，尤其对于不吃肉的人，一天需要摄入 5 克左右。&lt;/li&gt; &#xA; &lt;li&gt;花青素，在蓝莓，黑莓，葡萄等食物中有提供。可以降低 DNA 损伤，缓解认知下降等问题。大约每天需要 60-120 克蓝莓的补充。&lt;/li&gt; &#xA; &lt;li&gt;谷氨酰胺，可以通过牛肉，鸡肉，鱼肉，鸡蛋，大豆，卷心菜，菠菜，芹菜等食物来摄取。提升大脑在缺氧（高海拔地区）下的表现，还能够抑制对糖的需求。&lt;/li&gt; &#xA; &lt;li&gt;水，钠，钾，镁等电解质是神经元信号传递所需的基础元素，需要保证。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这一节中还讨论了我们身体对各种食物喜好进行判断的三个渠道，前两个分别是味觉判断和营养成分的下意识判断。第三个比较有意思，也跟多巴胺有关，即我们可以&lt;strong&gt;通过提升大脑代谢的活跃度来增加对某种食物的喜好&lt;/strong&gt;。比如你如果不喜欢吃鱼，一种方法是你可以把鱼跟你平时爱吃的食物一起吃，另一种是给自己足够的心理暗示，说服自己吃鱼是有益身体健康的。通过这两种办法，你都可以让大脑释放多巴胺，从而逐渐提升对鱼类食物的喜好程度。&lt;/p&gt; &#xA;&lt;p&gt;最后，如果你对膳食补充剂感兴趣，还可以看看 &lt;a href=&#34;https://www.thorne.com/u/huberman&#34;&gt;Huberman 教授平时会吃的补充剂有哪些&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;长寿&lt;/h1&gt; &#xA;&lt;p&gt;最后我们来看下如何延年益寿，这是 Huberman 跟这个领域的专家，来自哈佛的 David Sinclair 的一集访谈节目。&lt;/p&gt; &#xA;&lt;h2&gt;衰老的本质&lt;/h2&gt; &#xA;&lt;p&gt;Sinclair 认为，衰老是一种疾病，它本身导致了非常多通常意义上的疾病的出现，比如阿尔兹海默症，癌症等。我们可以通过科学的手段来“治疗”衰老，甚至逆转它。&lt;/p&gt; &#xA;&lt;p&gt;从本质上来说，衰老是&lt;strong&gt;基因信息的损失&lt;/strong&gt;，这分为两部分：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DNA 本身的信息，比如细胞中的 DNA 结构会在辐射等情况下受到破坏。&lt;/li&gt; &#xA; &lt;li&gt;控制哪些基因进行表达的信息受到了破坏，也就是所谓的表观基因组（epigenome）。这部分在衰老的因素中占了 80%。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;人体内有一个天然的“衰老时钟”，而且并不是以匀速走的。在年轻时我们的生长发育过程中，这个时钟走得更快。所以如果青春期发育比较迅速的人，一般来说整体的时钟走的比较快，寿命也会相对短，是不是有点吓人……而且，一般比较矮小的人，像侏儒很少会得心脏病，癌症，也会明显更长寿。不过不要紧张，前面提到了，基因本身的信息只占了衰老因素的 20%，&lt;strong&gt;控制基因表达这部分占了大多数&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;这里有点意外的是 Sinclair 教授介绍的最重要的几个实验，都跟前面我们提到的 fasting 有关。比如一般老鼠的寿命大概是 2 年，他们实验室有一只叫 Yoda 的老鼠，活了足足 5 年。其主要的做法就是选取了侏儒基因，以及执行 fasting。&lt;/p&gt; &#xA;&lt;p&gt;教授详细介绍了 &lt;strong&gt;fasting 为何能提升动物/人类 30% 以上的寿命&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在低血糖水平时，身体会抑制哺乳动物雷帕霉素靶蛋白（mTOR），激活去乙酰化酶（sirtuin），形成一个非常良好的化学状态，清理旧蛋白质，提高胰岛素敏感度，提供更多能量，修复细胞等等。后面这个乙酰化酶是我们抵御衰老的一个重要武器。&lt;/li&gt; &#xA; &lt;li&gt;当胰岛素水平低时，“长寿基因”会被激活，如 SIRT1 等。&lt;/li&gt; &#xA; &lt;li&gt;fasting 会给细胞足够的“休息时间”。&lt;/li&gt; &#xA; &lt;li&gt;血糖水平低，会让身体对胰岛素更敏感，更快吸收血糖，也对健康有益。&lt;/li&gt; &#xA; &lt;li&gt;当你从来不感受饥饿时，你的衰老时钟也走的更快。&lt;/li&gt; &#xA; &lt;li&gt;除了 24 小时周期 fasting 触发的 autophagic，还有更深层次的清理机制，会在禁食第二，三天启动。在老年老鼠上的实验表明，这种长时间的禁食可以让他们延长寿命 35%。不过这个实操难度对普通人来说有点大。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sinclair 也对比了一些上个世纪失败的研究，比如通过抗氧化剂来抵御衰老。现代长寿研究的核心思想是，如何&lt;strong&gt;通过一些机制手段来触发身体自身的衰老抵抗机制&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;此外 Sinclair 也介绍了一些激动人心的前沿技术，例如&lt;strong&gt;通过基因治疗方法，可以重启我们的 DNA 表达系统&lt;/strong&gt;。通过一次注射，可以让盲人恢复视力，这已经在老鼠身上得到了验证。或许几年后，我们可以像死侍那样实现身体各部分的逆转老化。&lt;/p&gt; &#xA;&lt;h2&gt;实践&lt;/h2&gt; &#xA;&lt;p&gt;这里列出一些 Sinclair 自己的实践方式，如果想要采纳还是要结合自身的情况来看。有意思的是这集节目下有个热门留言是这个教授竟然已经 52 岁了，完全看不出来……所以你懂的。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不吃早饭，午饭也吃的比较少，酸奶或者橄榄油，晚饭吃蔬菜为主，加鱼和虾，基本不吃牛排。不吃糖，甜品，面包。基本达到了 2 小时进食窗口的高阶 fasting 状态。他偶尔也会尝试一整天都不吃东西，但比较难坚持。&lt;/li&gt; &#xA; &lt;li&gt;每天摄入 1 克的白藜芦醇（resveratrol），1 克的 NMN（进而会转化为 NAD，which is sirtuin 的“燃料”），还有二甲双胍（metformin）。其中锻炼的日子可能会跳过一些补充品。他并不吃复合维生素。&lt;/li&gt; &#xA; &lt;li&gt;以蔬菜为主食的好处：富含各种营养，维生素；包含异种激素（Xenohormesis），植物基于“压力”之下产生的物质，对长寿有益。后者也可以通过槲皮素（quercetin）来做膳食补充。&lt;/li&gt; &#xA; &lt;li&gt;一般会隔一天进行有氧运动和力量训练。有氧运动能提升 NAD 水平。&lt;/li&gt; &#xA; &lt;li&gt;根据家族病史来决定一些药物摄入，如他 29 岁就开始服用降胆固醇药物。&lt;/li&gt; &#xA; &lt;li&gt;对于人造甜味剂，教授认为总体来说是安全的。他偶尔也会喝健怡可乐。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;对于这一系列实践，Sinclair 教授都进行了 10 多年的自身实验，并使用各种手段来监控身体数据。通过监控数据可以推测出一个人的“生理年龄”如何（不是光看脸），他自己在上述实践下，生理年龄在持续下降，现在已经达到了 30 岁左右的水平（实际年龄 52 岁）。另外，他认为每个人的身体情况不一样，医院约定俗成的生理指标范围也不一定适合每个人。&lt;strong&gt;未来这种健康数据的实时监控与个性化诊断会成为主流&lt;/strong&gt;。他举了一些例子：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;监控血糖水平 HbA1c，观察 fasting 的影响等。&lt;/li&gt; &#xA; &lt;li&gt;监控炎症指标 CRP，与心脏病等各种疾病的诱发相关。&lt;/li&gt; &#xA; &lt;li&gt;监控 LDL，通过药物等进行控制。膳食胆固醇对血液胆固醇几乎没有影响，不需要戒红肉，黄油等。&lt;/li&gt; &#xA; &lt;li&gt;补充铁元素可能加速衰老。医学指标需要个性化，低铁元素含量并不一定导致贫血。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;还有一些影响寿命的负面因素：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;肥胖症会加速衰老。&lt;/li&gt; &#xA; &lt;li&gt;吸烟，会破坏基因表达，加速衰老。&lt;/li&gt; &#xA; &lt;li&gt;X 光检查同理，没有必要时，避免接触。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;展望一下 longevity 研究的未来，还是挺激动人心的。现代科学每一年能让我们的平均寿命延长 1/4 年，如果每一年能让我们的平均寿命延长超过 1 年，则达到了&lt;strong&gt;寿命“逃逸速度”&lt;/strong&gt;（类比以 1000 英里每小时的速度往西飞行，太阳永远不会落下），实现了“永生”。著名的未来学家 Ray Kurzweil 预测，大约 12 年后（2034 年）就能实现，让我们拭目以待。&lt;/p&gt; &#xA;&lt;p&gt;除了这集 podcast，也必须附上吴承霖大佬的万星项目 &lt;a href=&#34;https://github.com/geekan/HowToLiveLonger&#34;&gt;程序员延寿指南&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;个人实践&lt;/h1&gt; &#xA;&lt;p&gt;前面介绍的内容有点多，这篇文章篇幅也有些超了。最后来简单介绍下我个人目前采纳的一些行动和辅助工具。&lt;/p&gt; &#xA;&lt;p&gt;睡眠方面暂时没有什么特别的措施，现在带娃基本上晚上睡眠质量也比较一般。只是会稍稍注意一下晚上 11 点后尽量不接触手机光源。早起接收光照这点，基本上就是早上遛狗或者开车通勤时间来接触，基本压力不大。如果比较讲究的同学，还可以下一个 &lt;a href=&#34;https://mycircadianclock.org/&#34;&gt;My Circadian Clock App&lt;/a&gt; 来追踪一下生物钟，也是 Satchin Panda 等大佬参与开发的项目，值得信赖。&lt;/p&gt; &#xA;&lt;p&gt;饮食方面，开始尝试 8 小时进食窗口的 fasting，目前感觉良好。中饭一般吃蔬菜为主的轻食，晚上就比较放飞自我，想吃啥吃啥。早上会看情况喝点盐水，茶或者 AG1 的补充剂。膳食补充剂目前基本只有复合维生素和 EPA 鱼油在使用，后面可以参考下 &lt;a href=&#34;https://fastlifehacks.com/andrew-huberman-supplements-list/&#34;&gt;Huberman 的“配方”&lt;/a&gt; 增加一些。Huberman 自己也在节目中表示&lt;strong&gt;对白藜芦醇和 NMN 还在观望状态&lt;/strong&gt;，我查了些资料发现有争议的地方还不少，所以我个人建议先采纳广受认可和使用的一些补充剂，如 EPA 鱼油，二甲双胍等。个人目前考虑的补充剂列表：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/basic-nutrients-2-day&#34;&gt;基础维生素&lt;/a&gt;，常规补充剂。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/super-epa-sp608nc&#34;&gt;Omega-3 EPA&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/betaine-hcl-pepsin-225-s&#34;&gt;Betaine HCL &amp;amp; Pepsin&lt;/a&gt;，保护肠胃。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/l-tyrosine&#34;&gt;L-Tyrosine&lt;/a&gt;，提升多巴胺，可能会买个尝尝鲜。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zh.m.wikipedia.org/zh/%E4%BA%8C%E7%94%B2%E5%8F%8C%E8%83%8D&#34;&gt;二甲双胍&lt;/a&gt;，抗衰老“神药”。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/resveracel&#34;&gt;ResveraCel&lt;/a&gt;，白藜芦醇，NR 等抗衰老组合。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;很多人都关心 fasting 可能引发胆结石，这里提供一些补充信息：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从这篇 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1419405/&#34;&gt;Bloch, H. M. 等人的论文&lt;/a&gt; 来看，fasting 过程中胆汁的饱和度有一个先上升后下降的过程，&lt;a href=&#34;https://youtu.be/2lGuXBwudKw&#34;&gt;Dr. Berg 也以此做了解释&lt;/a&gt;，认为 fasting 加生酮饮食（摄入脂肪）对胆囊健康反而是有益的。&lt;/li&gt; &#xA; &lt;li&gt;从这篇 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1405175/&#34;&gt;Sichieri, R. 等人的论文&lt;/a&gt; 的结果来看，long overnight fasting 和节食会提升得胆结石的概率。不过减肥（减少脂肪）本身就会提升得胆结石的概率。&lt;/li&gt; &#xA; &lt;li&gt;持续 24 小时以上的禁食相关的研究比较少（比较难执行），但从机理上来说长时间的禁食应该会增加得胆结石的概率。&lt;/li&gt; &#xA; &lt;li&gt;饮食结构，自身状况对胆结石的形成也会有很大影响，例如高胆固醇，高胰岛素水平，高碳水饮食等。高纤维食物，健康的脂肪摄入，有助于降低得胆结石的概率。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;总体看下来，我个人感觉这块的实验上没有一个定论（就跟 &lt;a href=&#34;https://www.coffeeandhealth.org/factsheet/gallstones-factsheet&#34;&gt;咖啡是否会引发胆结石&lt;/a&gt; 一样），但应该不是一个概率很大的问题，起码 Huberman 教授跟这个领域的另一位权威 Satchin Panda 教授都没有提到这块的问题。理想情况是执行 fasting 时持续对你的身体状况做医学指标的跟踪。其它就看个人选择了 :)&lt;/p&gt; &#xA;&lt;p&gt;工作，学习，专注方面，主要看自律了。这方面我总体控制还可以，在了解了多巴胺的工作原理之后就更加有自信了，主要靠各种软件的专注模式来近似执行番茄时钟法，此外也采用了升降桌，大概有 30% 的时间站立办公。工作间歇会尝试一下 Yoga Nidra。此外晚上学习时段会用 iPad 的 Books 来记录一下阅读时间，基本上每天保持 30 分钟以上，持续坚持。后面考虑试试工作时喝马黛茶，以及夏天开始尝试冷水澡。&lt;/p&gt; &#xA;&lt;p&gt;运动方面是这一年来改观最大的一项，依靠小米手环 PAI 指数功能的督促，基本上做到了每周平均 3 次的跑步或者羽毛球活动，持续把 PAI 值保持在 200 左右。总体来说对于精神状态的改观还是很大的，肚子上的脂肪也减少了很多。唯一比较困扰的是一般下班后运动都要 9，10 点开始了，结束后会离入睡的时间比较近，有时候会对睡眠质量有所影响。&lt;/p&gt; &#xA;&lt;p&gt;最后，Huberman 教授的 podcast 中还有很多其它内容，比如习惯养成，健身增肌，应对恐惧与创伤，情绪管理等，感兴趣的朋友可以进一步挖掘。本文以实验事实与原理假设的陈述为主，以上所有的行动方案都需要在咨询医师，专业人员的条件下，结合自身情况执行，注意自身安全，本人与 Huberman 都不负相关后果责任。&lt;/p&gt; &#xA;&lt;p&gt;备注：这篇文章也同时发布到了 &lt;a href=&#34;https://github.com/zijie0/HumanSystemOptimization&#34;&gt;Github&lt;/a&gt;，欢迎大家 Star 并提出宝贵建议，谢谢！如果你对我的其它作品感兴趣，也欢迎搜索关注公众号：RandomGenerator。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bregman-arie/devops-exercises</title>
    <updated>2022-05-30T01:30:12Z</updated>
    <id>tag:github.com,2022-05-30:/bregman-arie/devops-exercises</id>
    <link href="https://github.com/bregman-arie/devops-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &amp;nbsp;This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📊&lt;/span&gt; &amp;nbsp;There are currently &lt;strong&gt;2292&lt;/strong&gt; exercises and questions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📚&lt;/span&gt; &amp;nbsp;To learn more about DevOps and SRE, check the resources in &lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &amp;nbsp;You can use these for preparing for an interview but most of the questions and exercises don&#39;t represent an actual interview. Please read &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/faq.md&#34;&gt;FAQ page&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👥&lt;/span&gt; &amp;nbsp;Join our &lt;a href=&#34;https://www.facebook.com/groups/538897960007080&#34;&gt;DevOps community&lt;/a&gt; where we have discussions and share resources on DevOps&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📝&lt;/span&gt; &amp;nbsp;You can add more exercises by submitting pull requests :) Read about contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:START --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DevOps&#34;&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cicd/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cicd.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;cicd&#34;&gt;&lt;br&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/git/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Git&#34;&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/ansible/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;ansible&#34;&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Network&#34;&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Linux&#34;&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/software_development/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;programming&#34;&gt;&lt;br&gt;&lt;b&gt;Software Development&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/python-exercises&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Python&#34;&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;go&#34;&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/shell/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Bash&#34;&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/kubernetes/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;kubernetes&#34;&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Prometheus&#34;&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cloud/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Cloud&#34;&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/aws/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png&#34; width=&#34;100px;&#34; height=&#34;75px;&#34; alt=&#34;aws&#34;&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/azure/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;azure&#34;&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png&#34; width=&#34;70px;&#34; height=&#34;70px;&#34; alt=&#34;Google Cloud Platform&#34;&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;openstack&#34;&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/security/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;security&#34;&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Operating System&#34;&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Monitoring&#34;&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Elastic&#34;&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Virtualization&#34;&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/dns/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DNS&#34;&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Misc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Misc&#34;&gt;&lt;br&gt;&lt;b&gt;Misc&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Testing&#34;&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Databases&#34;&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;RegEx&#34;&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Design&#34;&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Hardware&#34;&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Big Data&#34;&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Certificates&#34;&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/containers/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Containers&#34;&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;sql&#34;&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/openshift/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;OpenShift&#34;&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Storage&#34;&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/soft_skills/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;HR&#34;&gt;&lt;br&gt;&lt;b&gt;Soft Skills&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/terraform/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Terraform&#34;&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Mongo&#34;&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;puppet&#34;&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Distributed&#34;&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;you&#34;&gt;&lt;br&gt;&lt;b&gt;Questions you can ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/perl/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/perl.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;perl&#34;&gt;&lt;br&gt;&lt;b&gt;Perl&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:END --&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you need in order to communicate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A common language (for the two ends to understand)&lt;/li&gt; &lt;li&gt;A way to address who do you want to communicate with&lt;/li&gt; &lt;li&gt;A Connection (so the content of of the communication can reach the recipients) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP/IP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A set of protocols that define how two or more devices can communicate with each other. To learn more about TCP/IP, read &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is APIPA?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA is a set of it addresses that devices are allocated when the main DHCP server is not reachable &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ip range does APIPA use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA uses the ip range: 169.254.0.1 - 169.254.255.254. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Ethernet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Ethernet simply refers to the most common type of Local Area Network (LAN) used today. A LAN—in contrast to a WAN (Wide Area Network), which spans a larger geographical area—is a connected network of computers in a small area, like your office, college campus, or even home. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A MAC address is a unique identification number or code used to identify individual devices on the network.&lt;/p&gt; &lt;p&gt;Packets that are sent on the ethernet are always coming from a MAC address and sent to a MAC address. If a network adapter is receiving a packet, it is comparing the packet’s destination MAC address to the adapter’s own MAC address.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When a device sends a packet to the broadcast MAC address (FF:FF:FF:FF:FF:FF​), it is delivered to all stations on the local network. Ethernet broadcasts are used to resolve IP addresses to MAC addresses (by ARP) at the datalink layer . &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an IP address?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A Subnet mask is a 32-bit number that masks an IP address, and divides the IP address into network address and host address. Subnet Mask is made by setting network bits to all &#34;1&#34;s and setting host bits to all &#34;0&#34;s. Within a given network, two host addresses are reserved for special purpose, and cannot be assigned to hosts. The &#34;0&#34; address is assigned a network address and &#34;255&#34; is assigned to a broadcast address, and they cannot be assigned to hosts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| Address Class | No of Network Bits | No of Host Bits | Subnet mask     | CIDR notation |&#xA;| ------------- | ------------------ | --------------- | --------------- | ------------- |&#xA;| A             | 8                  | 24              | 255.0.0.0       | /8            |&#xA;| A             | 9                  | 23              | 255.128.0.0     | /9            |&#xA;| A             | 12                 | 20              | 255.240.0.0     | /12           |&#xA;| A             | 14                 | 18              | 255.252.0.0     | /14           |&#xA;| B             | 16                 | 16              | 255.255.0.0     | /16           |&#xA;| B             | 17                 | 15              | 255.255.128.0   | /17           |&#xA;| B             | 20                 | 12              | 255.255.240.0   | /20           |&#xA;| B             | 22                 | 10              | 255.255.252.0   | /22           |&#xA;| C             | 24                 | 8               | 255.255.255.0   | /24           |&#xA;| C             | 25                 | 7               | 255.255.255.128 | /25           |&#xA;| C             | 28                 | 4               | 255.255.255.240 | /28           |&#xA;| C             | 30                 | 2               | 255.255.255.252 | /30           |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a private IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Private IP addresses are assigned to the hosts in the same network to communicate among one another. As the name &#34;private&#34; suggests, the devices having the priate IP addresses assigned can&#39;t be reached by the devices from any external network. For example, if I am living in a hostel and I want my hostelmates to join the game server I have hosted, I will ask them to join via my server&#39;s private IP address, since the network is local to the hostel. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a public IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; A public IP address is the public facing IP address. In the event that you was hosting a game server that you want your friends to join, you will give your friends your public IP address to allow their computers to identify and locate your network and server in order for the connection to take place. One time that you would not need to use a public facing IP address is in the event that you was playing with friends who was connected to the same network as you, in that case, you would use a private ip address. In order for someone to be able to connect to your server that is located internally, you will have to setup a port forward to tell your router to allow traffic from the public domain into your network and vice versa. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Application: user end (HTTP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Presentation: establishes context between application-layer entities (Encryption is here)&lt;/li&gt; &#xA;   &lt;li&gt;Session: establishes, manages and terminates the connections&lt;/li&gt; &#xA;   &lt;li&gt;Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)&lt;/li&gt; &#xA;   &lt;li&gt;Network: transfers datagrams from one network to another (IP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Data link: provides a link between two directly connected nodes (MAC is here)&lt;/li&gt; &#xA;   &lt;li&gt;Physical: the electrical and physical spec the data connection (Bits are here)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read more about the OSI model in &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;penguintutor.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For each of the following determine to which OSI layer it belongs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Error correction&lt;/li&gt; &#xA;   &lt;li&gt;Packets routing&lt;/li&gt; &#xA;   &lt;li&gt;Cables and electrical signals&lt;/li&gt; &#xA;   &lt;li&gt;MAC address&lt;/li&gt; &#xA;   &lt;li&gt;IP address&lt;/li&gt; &#xA;   &lt;li&gt;Terminate connections&lt;/li&gt; &#xA;   &lt;li&gt;3 way handshake&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;li&gt;Error correction - Data link&lt;/li&gt; &lt;li&gt;Packets routing - Network&lt;/li&gt; &lt;li&gt;Cables and electrical signals - Physical&lt;/li&gt; &lt;li&gt;MAC address - Data link&lt;/li&gt; &lt;li&gt;IP address - Network&lt;/li&gt; &lt;li&gt;Terminate connections - Session&lt;/li&gt; &lt;/b&gt;&#xA; &lt;li&gt;&lt;b&gt;3 way handshake - Transport &lt;/b&gt;&lt;/li&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt; &lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting. Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection. Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt; &lt;p&gt;CSMA/CD algorithm:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt; &lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt; &lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt; &lt;li&gt;Both hosts stop sending the frame and they send to everyone a &#39;jam signal&#39; notifying everyone that a collision occurred&lt;/li&gt; &lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt; &lt;li&gt;Once each host waited for a random time, they try to send the frame again and so the &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following network devices and the difference between them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;router&lt;/li&gt; &#xA;   &lt;li&gt;switch&lt;/li&gt; &#xA;   &lt;li&gt;hub&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does a router works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A router is a physical or virtual appliance that passes information between two or more packet-switched computer networks. A router inspects a given data packet&#39;s destination Internet Protocol address (IP address), calculates the best way for it to reach its destination and then forwards it accordingly.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network Address Translation (NAT) is a process in which one or more local IP address is translated into one or more Global IP address and vice versa in order to provide Internet access to the local hosts.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy? How does it works? What do we need it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A proxy server acts as a gateway between you and the internet. It’s an intermediary server separating end users from the websites they browse.&lt;/p&gt; &lt;p&gt;If you’re using a proxy server, internet traffic flows through the proxy server on its way to the address you requested. The request then comes back through that same proxy server (there are exceptions to this rule), and then the proxy server forwards the data received from the website to you.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roxy servers provide varying levels of functionality, security, and privacy depending on your use case, needs, or company policy. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP? How does it works? What is the 3 way handshake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP 3-way handshake or three-way handshake is a process which is used in a TCP/IP network to make a connection between server and client.&lt;/p&gt; &lt;p&gt;A three-way handshake is primarily used to create a TCP socket connection. It works when:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A client node sends a SYN data packet over an IP network to a server on the same or an external network. The objective of this packet is to ask/infer if the server is open for new connections.&lt;/li&gt; &lt;li&gt;The target server must have open ports that can accept and initiate new connections. When the server receives the SYN packet from the client node, it responds and returns a confirmation receipt – the ACK packet or SYN/ACK packet.&lt;/li&gt; &lt;li&gt;The client node receives the SYN/ACK from the server and responds with an ACK packet. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is round-trip delay or round-trip time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Round-trip_delay&#34;&gt;wikipedia&lt;/a&gt;: &#34;the length of time it takes for a signal to be sent plus the length of time it takes for an acknowledgement of that signal to be received&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus question: what is the RTT of LAN? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn&#39;t handle package order. This makes UDP more lightweight than TCP and a perfect candidate for services like streaming.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;Penguintutor.com&lt;/a&gt; provides a good explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;default gateway&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A default gateway serves as an access point or IP router that a networked computer uses to send information to a computer in another network or the internet. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ARP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;ARP stands for Address Resolution Protocol. When you try to ping an IP address on your local network, say 192.168.1.1, your system has to turn the IP address 192.168.1.1 into a MAC address. This involves using ARP to resolve the address, hence its name.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systems keep an ARP look-up table where they store information about what IP addresses are associated with what MAC addresses. When trying to send a packet to an IP address, the system will first consult this table to see if it already knows the MAC address. If there is a value cached, ARP is not used. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TTL? What does it helps to prevent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DHCP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It stands for Dynamic Host Configuration Protocol, and allocates IP addresses, subnet masks and gateways to hosts. This is how it works:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A host upon entering a network, broadcasts a message in search of a DHCP server (DHCP DISCOVER)&lt;/li&gt; &#xA;   &lt;li&gt;An offer message is sent back by the DHCP server as a packet containing lease time, subnet mask, IP addresses, etc (DHCP OFFER)&lt;/li&gt; &#xA;   &lt;li&gt;Depending on which offer accepted, the client sends back a reply broadcast letting all DHCP servers know (DHCP REQUEST)&lt;/li&gt; &#xA;   &lt;li&gt;Server sends an acknowledgment (DHCP ACK)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://linuxjourney.com/lesson/dhcp-overview&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have two DHCP servers in the same network? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSL tunneling? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VLAN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens if you send a packet that is bigger than the MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False?. Ping is using UDP because it doesn&#39;t care about reliable connection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT? How does it work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;NAT stands for network address translation. It’s a way to map multiple local private addresses to a public one before transferring the information. Organizations that want multiple devices to employ a single IP address use NAT, as do most home routers. For example, your computer&#39;s private IP could be 192.168.1.100, but your router maps the traffic to it&#39;s public IP (e.g. 1.1.1.1). Any device on the internet would see the traffic coming from your public IP (1.1.1.1) instead of your private IP (192.168.1.100). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which port number is used in each of the following protocols?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;SMTP&lt;/li&gt; &#xA;   &lt;li&gt;HTTP&lt;/li&gt; &#xA;   &lt;li&gt;DNS&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;SFTP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH - 22&lt;/li&gt; &lt;li&gt;SMTP - 25&lt;/li&gt; &lt;li&gt;HTTP - 80&lt;/li&gt; &lt;li&gt;DNS - 53&lt;/li&gt; &lt;li&gt;HTTPS - 443&lt;/li&gt; &lt;li&gt;FTP - 21&lt;/li&gt; &lt;li&gt;SFTP - 22 &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Network - Data and Control planes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;control plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The control plane is the part of the network that decides how to route and forward packets to a different location. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;data plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The data plane is the part of the network that actually forwards the data/packets. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;management plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Refers to monitoring and management functions. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;To which plane (data, control, ...) is creating routing tables belongs to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Control Plane. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRE? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VXLAN? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SNAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain OSPF&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is latency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency is the time taken for an information to reach its destination from the source. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is bandwidth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bandwidth is the capacity of a communication channel to measure how much data the latter can handle over a specific time period. More bandwidth would imply more traffic handling and thus more data transfer. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is throughput?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput refers to the measurement of the real amount of data transferred over a certain period of time across any transmission channel. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When performing a search query, what is more important, latency or throughput? And how to assure that what managing global infrastructure?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency. To have a good latency, a search query should be forwarded to the closest datacenter. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When uploading a video, what is more important, latency or throughput? And how to assure that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput. To have a good throughput, the upload stream should be routed to an underutilized link. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What other considerations (except latency and throughput) are there when forwarding requests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keep caches updated (which means the request could be forwarded not to the closest datacenter) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the exponential backoff algorithm? Where is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;00110011110100011101 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the application layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Hypertext Transfer Protocol (HTTP) - used for the webpages on the internet&lt;/li&gt; &lt;li&gt;Simple Mail Transfer Protocol (SMTP) - email transmission&lt;/li&gt; &lt;li&gt;Telecommunications Network - (TELNET) - terminal emulation to allow client access to telnet server&lt;/li&gt; &lt;li&gt;File Transfer Protocol (FTP) - facilitates transfer of files between any two machines&lt;/li&gt; &lt;li&gt;Domain Name System (DNS) - domain name translation&lt;/li&gt; &lt;li&gt;Dynamic Host Configuration Protocol (DHCP) - allocates IP addresses, subnet masks and gateways to hosts&lt;/li&gt; &lt;li&gt;Simple Network Management Protocol (SNMP) - gathers data of devices on the network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the network Layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Internet Protocol (IP) - assists in routing packets from one machine to another&lt;/li&gt; &lt;li&gt;Internet Control Message Protocol (ICMP) - lets one know what is going such as error messages and debugging information &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HSTS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; HTTP Strict Transport Security is a web server directive that informs user agents and web browsers how to handle its connection through a response header sent at the very beginning and back to the browser. This forces connections over HTTPS encryption, disregarding any script&#39;s call to load any resource in that domain over HTTP. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more [here](&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&#34;&gt;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Network - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Internet? Is it the same as the World Wide Web?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The internet refers to network of networks, transferring huge amounts of data around the globe.&lt;br&gt; The World Wide Web is an application running on millions of server, on top of the internet, accessed through what is know as the web browser &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ISP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ISP (Internet Service Provider) is the local internet company provider. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h4&gt;Linux Master Application&lt;/h4&gt; &#xA;&lt;p&gt;A completely free application for testing your knowledge on Linux&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codingshell.linuxmaster&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux_master.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Only you know :)&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Administration&lt;/li&gt; &lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;li&gt;Networking&lt;/li&gt; &lt;li&gt;Development&lt;/li&gt; &lt;li&gt;Deployments &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;touch&lt;/li&gt; &#xA;   &lt;li&gt;ls&lt;/li&gt; &#xA;   &lt;li&gt;rm&lt;/li&gt; &#xA;   &lt;li&gt;cat&lt;/li&gt; &#xA;   &lt;li&gt;cp&lt;/li&gt; &#xA;   &lt;li&gt;mkdir&lt;/li&gt; &#xA;   &lt;li&gt;pwd&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch - update file&#39;s timestamp. More commonly used for creating files&lt;/li&gt; &lt;li&gt;ls - listing files and directories&lt;/li&gt; &lt;li&gt;rm - remove files and directories&lt;/li&gt; &lt;li&gt;cat - create, view and concatenate files&lt;/li&gt; &lt;li&gt;cp - copy files and directories&lt;/li&gt; &lt;li&gt;mkdir - create directories&lt;/li&gt; &lt;li&gt;pwd - print current working directory (= at what path the user currently located)&lt;/li&gt; &lt;li&gt;cd - change directory &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following commands does? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cd /&lt;/li&gt; &#xA;   &lt;li&gt;cd ~&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;   &lt;li&gt;cd ..&lt;/li&gt; &#xA;   &lt;li&gt;cd .&lt;/li&gt; &#xA;   &lt;li&gt;cd -&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cd / -&amp;gt; change to the root directory&lt;/li&gt; &lt;li&gt;cd ~ -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd .. -&amp;gt; change to the directory above your current i.e parent directory&lt;/li&gt; &lt;li&gt;cd . -&amp;gt; change to the directory you currently in&lt;/li&gt; &lt;li&gt;cd - -&amp;gt; change to the last visited path &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some of the commands in the previous question can be run with the -r/-R flag. What does it do? Give an example to when you would use it&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The -r (or -R in some commands) flag allows the user to run a certain command recursively. For example, listing all the files under the following tree is possible when done recursively (&lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;/dir1/ dir2/ file1 file2 dir3/ file3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To list all the files, one can run &lt;code&gt;ls -R /dir1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each field in the output of `ls -l` command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It shows a detailed list of files in a long format. From the left: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;file permissions, number of links, owner name, owner group, file size, timestamp of last modification and directory/file name &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are hidden files/directories? How to list them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These are files directly not displayed after performing a standard ls direct listing. An example of these files are .bashrc which are used to execute some scripts. Some also store configuration about services on your host like .KUBECONFIG. The command used to list them is, &lt;code&gt;ls -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do &amp;gt; and &amp;lt; do in terms of input and output for programs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; They take in input (&amp;lt;) and output for a given file (&amp;gt;) using stdin and stdout. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;myProgram &amp;lt; input.txt &amp;gt; executionOutput.txt&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed&lt;/li&gt; &#xA;   &lt;li&gt;grep&lt;/li&gt; &#xA;   &lt;li&gt;cut&lt;/li&gt; &#xA;   &lt;li&gt;awk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;sed: a stream editor. Can be used for various purposes like replacing a word in a file: &lt;code&gt;sed -i s/salad/burger/g&lt;/code&gt;&lt;/li&gt; &lt;li&gt;grep: a search tool. Used to search, count or match a text in a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;searching for any line that contains a word in a file: &lt;code&gt;grep &#39;word&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;or displaying the total number of times a string appears in a file: &lt;code&gt;grep -c &#39;This is a string&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;cut: a tool for cutting out selected portions of each line of a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;syntax: &lt;code&gt;cut OPTION [FILE]&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;cutting first two bytes from a word in a file: &lt;code&gt;cut -b 1-2 file.md&lt;/code&gt;, output: &lt;code&gt;wo&lt;/code&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;      &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to rename the name of a file or a directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;mv&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Specify which command would you use (and how) for each of the following scenarios &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove a directory with files&lt;/li&gt; &#xA;   &lt;li&gt;Display the content of a file&lt;/li&gt; &#xA;   &lt;li&gt;Provides access to the file /tmp/x for everyone&lt;/li&gt; &#xA;   &lt;li&gt;Change working directory to user home directory&lt;/li&gt; &#xA;   &lt;li&gt;Replace every occurrence of the word &#34;good&#34; with &#34;great&#34; in the file /tmp/y&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;rm -rf dir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cat or less&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;chmod 777 /tmp/x&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;sed -i s/good/great/g /tmp/y&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you check what is the path of a certain command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;whereis&lt;/li&gt; &lt;li&gt;which &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between these two commands? Will it result in the same output? &lt;pre&gt;&lt;code&gt;echo hello world&#xA;echo &#34;hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The echo command receives two separate arguments in the first execution and in the second execution it gets one argument which is the string &#34;hello world&#34;. The output will be the same. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain piping. How do you perform piping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using a pipe in Linux, allows you to send the output of one command to the input of another command. For example: &lt;code&gt;cat /etc/services | wc -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed &#34;s/1/2/g&#39; /tmp/myFile&lt;/li&gt; &#xA;   &lt;li&gt;find . -iname *.yaml -exec sed -i &#34;s/1/2/g&#34; {} ;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sed &#39;s/1/2/g&#39; /tmp/myFile  # sed &#34;s/1/2/g&#34; is also fine&#xA;find . -iname &#34;*.yaml&#34; -exec sed -i &#34;s/1/2/g&#34; {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which commands you executed in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;history command or .bash_history file &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get &#34;command not found&#34;. What could be wrong and how to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;&lt;b&gt; Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go. This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours. You would solve this by fixing your $PATH variable: &lt;/b&gt;&lt;/p&gt;&#xA; &lt;p&gt;&lt;b&gt;As to fix it there are several options:&lt;/b&gt;&lt;/p&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH=&#34;$PATH&#34;:/user/bin:/..etc&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You have your weird env variables backed up.&lt;/li&gt; &#xA;   &lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours, permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time. &lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;. With cron, tasks are scheduled using the following format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt; &lt;p&gt;&#xA;   &lt;minute&gt; &#xA;    &lt;hour&gt; &#xA;     &lt;day of month&gt; &#xA;      &lt;month&gt; &#xA;       &lt;day of week&gt; &#xA;        &lt;command to execute&gt;&#xA;       &lt;/day&gt;&#xA;      &lt;/month&gt;&#xA;     &lt;/day&gt;&#xA;    &lt;/hour&gt;&#xA;   &lt;/minute&gt;&lt;/p&gt; &lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alternatively if you are using a distro with systemd it&#39;s recommended to use systemd timers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - I/O Redirection&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Linux I/O redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls &amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 2&amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr to stdout redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following command? &lt;code&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 die_hard&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An output similar to: &lt;code&gt;yippikaiyay: command not found...&lt;/code&gt;&lt;br&gt; The file &lt;code&gt;die_hard&lt;/code&gt; will not be created &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux FHS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Linux FHS (Filesystem Hierarchy Standard) what is the &lt;code&gt;/&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The root of the filesystem. The beginning of the tree. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following paths? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/bin, /sbin, /usr/bin and /usr/sbin&lt;/li&gt; &#xA;   &lt;li&gt;/etc&lt;/li&gt; &#xA;   &lt;li&gt;/home&lt;/li&gt; &#xA;   &lt;li&gt;/var&lt;/li&gt; &#xA;   &lt;li&gt;/tmp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;binaries&lt;/li&gt; &lt;li&gt;configuration files&lt;/li&gt; &lt;li&gt;home directories of the different users&lt;/li&gt; &lt;li&gt;files that tend to change and be modified like logs&lt;/li&gt; &lt;li&gt;temporary files &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is special about the /tmp directory when compared to other directories?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/tmp&lt;/code&gt; folder is cleaned automatically, usually upon reboot. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What makes /proc different from other filesystems?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? only root can create files in /proc&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. No one can create file in /proc directly (certain operations can lead to files being created in /proc by the kernel). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can be found in /proc/cmdline?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The command passed to the boot loader to run the kernel &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which path can you find the system devices (e.g. block storage)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Permissions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following permissions mean?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;777&lt;/li&gt; &#xA;   &lt;li&gt;644&lt;/li&gt; &#xA;   &lt;li&gt;750&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;pre&gt;&#xA;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.&#xA;644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).&#xA;750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;chmod +x some_file&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It adds execute permissions to all sets i.e user, group and others &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is setgid and setuid&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;setuid is a linux file permission that permits a user to run a file or program with the permissions of the owner of that file. This is possible by elevation of current user privileges.&lt;/li&gt; &lt;li&gt;setgid is a process when executed will run as the group that owns the file. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the purpose of sticky bit?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Its a bit that only allows the owner or the root user to delete or modify the file. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;chmod&lt;/li&gt; &#xA;   &lt;li&gt;chown&lt;/li&gt; &#xA;   &lt;li&gt;chgrp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;chmod - changes access permissions to files system objects&lt;/li&gt; &lt;li&gt;chown - changes the owner of file system files and directories&lt;/li&gt; &lt;li&gt;chgrp - changes the group associated with a file system object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In order to install packages on the system one must be the root user or use the sudo command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what are ACLs. For what use cases would you recommend to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to create a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;No more disk space&lt;/li&gt; &lt;li&gt;No more inodes&lt;/li&gt; &lt;li&gt;No permissions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A user accidentally executed the following &lt;code&gt;chmod -x $(which chmod)&lt;/code&gt;. How to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using &lt;code&gt;sudo setfacl -m u::rx /usr/bin/chmod&lt;/code&gt; will set the execute permissions on &lt;code&gt;chmod&lt;/code&gt; for all the users. Post this, the &lt;code&gt;chmod&lt;/code&gt; binary can be used as usual. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - systemd&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is systemd?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;b&gt; Systemd is a daemon (System &#39;d&#39;, d stands for daemon). &lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time talk to the daemon.&lt;/p&gt; &lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;br&gt; Hardware -&amp;gt; Kernel -&amp;gt; &lt;u&gt;Daemons&lt;/u&gt;, System Libraries, Server Display. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start or stop a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To start a service: &lt;code&gt;systemctl start &amp;lt;service name&amp;gt;&lt;/code&gt; To stop a service: &lt;code&gt;systemctl stop &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check the status of a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;systemctl status &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Troubleshooting &amp;amp; Debugging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where system logs are located?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/var/log &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to follow file&#39;s content as it being appended without opening the file every time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;tail -f &amp;lt;file_name&amp;gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports. &lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat. &lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets. &lt;code&gt;tcpdump&lt;/code&gt; for capturing packets &lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes &lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are &#34;wasted&#34; on &lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from someone claiming &#34;my system is SLOW&#34;. What do you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it&#39;s related to disk or network.&lt;/li&gt; &lt;li&gt;Check if it&#39;s network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain iostat output&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to debug binaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Kernel&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;uname -a&lt;/code&gt; command &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain user space vs. kernel space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The operating system executes the kernel in protected memory to prevent anyone from changing (and risking it crashing). This is what is known as &#34;Kernel space&#34;. &#34;User space&#34; is where users executes their commands or applications. It&#39;s important to create this separation since we can&#39;t rely on user applications to not tamper with the kernel, causing it to crash.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Applications can access system resources and indirectly the kernel space by making what is called &#34;system calls&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what phases of kernel lifecycle, can you change its configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Build time (when it&#39;s compiled)&lt;/li&gt; &lt;li&gt;Boot time (when it starts)&lt;/li&gt; &lt;li&gt;Runtime (once it&#39;s already running) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find kernel&#39;s configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Usually it will reside in &lt;code&gt;/boot/config-&amp;lt;kernel version&amp;gt;.&amp;lt;os release&amp;gt;.&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find the file that contains the command passed to the boot loader to run the kernel?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/proc/cmdline&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list kernel&#39;s runtime parameters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;sysctl -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will running &lt;code&gt;sysctl -a&lt;/code&gt; as a regular user vs. root, produce different result?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you might notice that in most systems, when running &lt;code&gt;systctl -a&lt;/code&gt; with root, you&#39;ll get more runtime parameters compared to executing the same command with a regular user. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You would like to enable IPv4 forwarding in the kernel, how would you do it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;sudo sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make it persistent (applied after reboot for example): insert &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; into &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to is to run &lt;code&gt;echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How &lt;code&gt;sysctl&lt;/code&gt; applies the changes to kernel&#39;s runtime parameters the moment you run sysctl command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;If you &lt;code&gt;strace&lt;/code&gt; the sysctl command you can see it does it by changing the file under /proc/sys/...&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In the past it was done with sysctl system call, but it was deprecated at some point. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How changes to kernel runtime parameters persist? (applied even after reboot to the system for example)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There is a service called &lt;code&gt;systemd-sysctl&lt;/code&gt; that takes the content of /etc/sysctl.conf and applies it. This is how changes persist, even after reboot, when they are written in /etc/sysctl.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are the changes you make to kernel parameters in a container, affects also the kernel parameters of the host on which the container runs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No. Containers have their own /proc filesystem so any change to kernel parameters inside a container, are not affecting the host or other containers running on that host. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - SSH&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH? How to check if a Linux server is running SSH?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SSH_(Secure_Shell)&#34;&gt;Wikipedia Definition&lt;/a&gt;: &#34;SSH or Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network.&#34;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work&#34;&gt;Hostinger.com Definition&lt;/a&gt;: &#34;SSH, or Secure Shell, is a remote administration protocol that allows users to control and modify their remote servers over the Internet.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An SSH server will have SSH daemon running. Depends on the distribution, you should be able to check whether the service is running (e.g. systemctl status sshd). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why SSH is considered better than telnet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet also allows you to connect to a remote host but as opposed to SSH where the communication is encrypted, in telnet, the data is sent in clear text, so it doesn&#39;t considered to be secured because anyone on the network can see what exactly is sent, including passwords. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The file stores the key fingerprints for the clients connecting to the SSH server. This fingerprint creates a trust between the client and the server for future SSH connections. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to ssh to a server and you get &#34;Host key verification failed&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It means that the key of the remote host was changed and doesn&#39;t match the one that stored on the machine (in ~/.ssh/known_hosts). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;ssh-keygen&lt;/code&gt; is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; is a tool to generate an authentication key pair for SSH, that consists of a private and a public key. It supports a number of algorithms to generate authentication keys :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa-sk&lt;/li&gt; &#xA;   &lt;li&gt;ed25519&lt;/li&gt; &#xA;   &lt;li&gt;ed25519-sk&lt;/li&gt; &#xA;   &lt;li&gt;rsa (default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;One can also specify number of bits in key. Command below generates an SSH key pair with RSA 4096-bits :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.&#xA;Enter file in which to save the key (/home/user/.ssh/id_rsa): &#xA;Enter passphrase (empty for no passphrase): &#xA;Enter same passphrase again: &#xA;Your identification has been saved in /home/user/.ssh/id_rsa&#xA;Your public key has been saved in /home/user/.ssh/id_rsa.pub&#xA;The key fingerprint is:&#xA;SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro&#xA;The key&#39;s randomart image is:&#xA;+---[RSA 4096]----+&#xA;|        . ..+***o|&#xA;|         o o++*o+|&#xA;|        . =+.++++|&#xA;|         B.oX+. .|&#xA;|        S *=o+   |&#xA;|       . o oE.   |&#xA;|      . + + +    |&#xA;|       . = + .   |&#xA;|        .   .    |&#xA;+----[SHA256]-----+&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;One can check how many bits an SSH key has with :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -l -f /home/user/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output should look like this :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4096 SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro (RSA)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shows the key is RSA 4096-bits.&lt;/p&gt; &lt;p&gt;&lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; parameters usage explanation :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-l          Show the fingerprint of the key file.&#xA;-f filename Filename of the key file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Learn more : &lt;a href=&#34;https://superuser.com/a/139311&#34;&gt;How can I tell how many bits my ssh key is? - Superuser&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Globbing, Wildcards&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Globbing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [^XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [0-5]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following matches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;?&lt;/li&gt; &#xA;   &lt;li&gt;*&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The ? matches any single character&lt;/li&gt; &lt;li&gt;The * matches zero or more characters &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do we grep for in each of the following commands?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep -E &#34;error|failure&#34; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]$&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An IP address&lt;/li&gt; &lt;li&gt;The word &#34;error&#34; or &#34;failure&#34;&lt;/li&gt; &lt;li&gt;Lines which end with a number &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which line numbers will be printed when running `grep &#39;\baaa\b&#39;` on the following content: &lt;p&gt;aaa bbb ccc.aaa aaaaaa&lt;/p&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;&lt;p&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lines 1 and 3. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference single and double quotes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is escaping? What escape character is used for escaping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An exit code (or return code) represents the code returned by a child process to its parent process.&lt;/p&gt; &lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error. Each number has different meaning, based on how the application was developed.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href=&#34;https://shapeshed.com/unix-exit-codes&#34;&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Boot Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRUB2?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Secure Boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Disk &amp;amp; Filesystem&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an inode?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data related to the file like its size, owner, permissions, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following is not included in inode: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link count&lt;/li&gt; &#xA;   &lt;li&gt;File size&lt;/li&gt; &#xA;   &lt;li&gt;File name&lt;/li&gt; &#xA;   &lt;li&gt;File timestamp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;File name (it&#39;s part of the directory file) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Run &lt;code&gt;mount&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run the &lt;code&gt;mount&lt;/code&gt; command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;cat /proc/mounts&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode. Soft link is a shortcut to another file, using a different inode. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Directories always have by minimum 2 links&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you check what type of filesystem is used in /home?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many answers for this question. One way is running &lt;code&gt;df -T&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;new empty file&lt;/li&gt; &#xA;   &lt;li&gt;a file with text (without using text editor)&lt;/li&gt; &#xA;   &lt;li&gt;a file with given size&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You are trying to create a new file but you get &#34;File system is full&#34;. You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;du -sh&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is LVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to LVM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PV&lt;/li&gt; &#xA;   &lt;li&gt;VG&lt;/li&gt; &#xA;   &lt;li&gt;LV&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is lazy umount?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is tmpfs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following logs? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/var/log/messages&lt;/li&gt; &#xA;   &lt;li&gt;/var/log/boot.log&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? both /tmp and /var/tmp cleared upon system boot&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. /tmp is cleared upon system boot while /var/tmp is cleared every a couple of days or not cleared at all (depends on distro). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Performance Analysis&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the current load average?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One can use &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You know how to see the load average, great. but what each part of it means? for example 1.43, 2.34, 2.78&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html&#34;&gt;This article&lt;/a&gt; summarizes the load average topic in a great way &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check process usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pidstat &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check disk I/O?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;iostat -xz 1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check TCP stats?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;sar -n TCP,ETCP 1 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Processes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;how to list all the processes running in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;ps -ef&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at the end of the command. As to why, since some commands/processes can take a lot of time to finish execution or run forever, you may want to run them in the background instead of waiting for them to finish before gaining control again in current session. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; mem() { ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk &#39;{printf $1/1024 &#34;MB&#34;; $1=&#34;&#34;; print }&#39; } &lt;/code&gt; [Source](https://stackoverflow.com/questions/3853655/in-linux-how-to-tell-how-much-memory-processes-are-using) &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signal is used by default when you run &#39;kill *process id*&#39;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;The default signal is SIGTERM (15). This signal kills&#xA;process gracefully which means it allows it to save current&#xA;state configuration.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SIGTERM - default signal for terminating a process SIGHUP - common usage is for reloading configuration SIGKILL - a signal which cannot caught or ignored&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill -0 &#xA;   &lt;pid&gt;&lt;/pid&gt;&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a trap?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Every couple of days, a certain process stops running. How can you look into why it&#39;s happening?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Daemon in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A background process. Most of these processes are waiting for requests or set of conditions to be met before actually running anything. Some examples: sshd, crond, rpcbind. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;Running (R)&#xA;Uninterruptible Sleep (D) - The process is waiting for I/O&#xA;Interruptible Sleep (S)&#xA;Stopped (T)&#xA;Dead (x)&#xA;Zombie (z)&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a zombie process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn&#39;t checking for the child exit code, the child process can still exists although it finished to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can&#39;t kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it&#39;s already dead.&lt;/p&gt; &lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn&#39;t programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt; &#xA;   &lt;li&gt;Process which are Java processes&lt;/li&gt; &#xA;   &lt;li&gt;Zombie Processes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the init process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is the first process executed by the kernel during the booting of a system. It is a daemon process which runs till the system is shutdown. That is why, it is the parent of all the processes &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain how network process/connection is established and how it&#39;s terminated?&amp;gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the files which end with &#39;.yml&#39; and replace the number 1 in 2 in each file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i &#34;s/1/2/g&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run ls and you get &#34;/lib/ld-linux-armhf.so.3 no such file or directory&#34;. What is the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Kerberos File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system. &lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0 - the default data stream for input&lt;/li&gt; &#xA;   &lt;li&gt;1 - the default data stream for output&lt;/li&gt; &#xA;   &lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href=&#34;https://www.computerhope.com/jargon/f/file-descriptor.htm&#34;&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Security&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SELiunx?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kerberos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is nftables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list all the interfaces?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;ip link show&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the loopback (lo) interface?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The loopback interface is a special, virtual network interface that your computer uses to communicate with itself. It is used mainly for diagnostics and troubleshooting, and to connect to servers running on the local machine. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands are used for? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ip addr&lt;/li&gt; &#xA;   &lt;li&gt;ip route&lt;/li&gt; &#xA;   &lt;li&gt;ip link&lt;/li&gt; &#xA;   &lt;li&gt;ping&lt;/li&gt; &#xA;   &lt;li&gt;netstat&lt;/li&gt; &#xA;   &lt;li&gt;traceroute&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One of the following would work:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;&#xA;lsof -i -n -P | grep &amp;lt;port_number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The MAC address of an interface is assigned/set by the OS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Technically, yes. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is telnet and why is it a bad idea to use it in production? (or at all)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet is a type of client-server protocol that can be used to open a command line on a remote computer, typically a server. By default, all the data sent and received via telnet is transmitted in clear/plain text, therefore it should not be used as it does not encrypt any data between the client and the server. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;br&gt; Using nc is one way&lt;br&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a network utility that analyses and may inject tasks into the data-stream travelling over the targeted network. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list active connections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network interface bonding and do you know how it&#39;s performed in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network bonding modes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There a couple of modes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;balance-rr: round robing bonding&lt;/li&gt; &lt;li&gt;active-backup: a fault tolerance mode where only one is active&lt;/li&gt; &lt;li&gt;balance-tlb: Adaptive transmit load balancing&lt;/li&gt; &lt;li&gt;balance-alb: Adaptive load balancing &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a bridge? How it&#39;s added in Linux OS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - DNS&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the hostname of the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;cat /etc/hostname&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also run &lt;code&gt;hostnamectl&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; but that might print only a temporary hostname. The one in the file is the permanent one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can specify one or more of the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;host&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;dig codingshell.com&lt;/code&gt; and get the following result: &lt;pre&gt;&lt;code&gt;ANSWER SECTION:&#xA;codingshell.com.&#x9;3515&#x9;IN&#x9;A&#x9;185.199.109.153&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What is the meaning of the number 3515?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is the TTL. When you lookup for an address using a domain/host name, your OS is performing DNS resolution by contacting DNS name servers to get the IP address of the host/domain you are looking for.&lt;br&gt; When you get a reply, this reply in cached in your OS for a certain period of time. This is period of time is also known as TTL and this is the meaning of 3515 number - it will be cached for 3515 seconds before removed from the cache and during that period of time, you&#39;ll get the value from the cache instead of asking DNS name servers for the address again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux - Packaging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with packaging? (as in building packages) Can you explain how does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How packages installation/removal is performed on the distribution you are using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The answer depends on the distribution being used.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Fedora/CentOS/RHEL/Rocky it can be done with &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt; commands. In Ubuntu it can be done with the &lt;code&gt;apt&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;RPM: explain the spec format (what it should and can include)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn&#39;t belongs to any package?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where repositories are stored? (based on the distribution you are using)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an archive? How do you create one in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the content of an archive?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need package managers? Why not simply creating archives and publish them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Package managers allow you to manage packages lifecycle as in installing, removing and updating the packages.&lt;br&gt; In addition, you can specify in a spec how a certain package will be installed - where to copy the files, which commands to run prior to the installation, post the installation, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux DNF&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNF?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://github.com/rpm-software-management/dnf&#34;&gt;repo&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&#34;Dandified YUM (DNF) is the next upcoming major version of YUM. It does package management using RPM, libsolv and hawkey libraries.&#34;&lt;/p&gt; &lt;p&gt;Official &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to look for a package that provides the command /usr/bin/git? (the package isn&#39;t necessarily installed)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dnf provides /usr/bin/git &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Applications and Services&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Depends on the init system.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt; System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab Upstart: add Upstart init script at /etc/init/service.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with &#34;connection refused&#34;. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH server is not installed&lt;/li&gt; &lt;li&gt;SSH server is not running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CUPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of web servers are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Nginx, Apache httpd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Users and Groups&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;superuser&#34; (or root user)? How is it different from regular users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;Command to create users is &lt;code&gt;useradd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Syntax: &lt;code&gt;useradd [options] Username&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;There are 2 configuration files, which stores users information&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; - Users information like, username, shell etc is stored in this file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; - Users password is stored in encrypted format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores information about groups?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/groups&lt;/code&gt; file stores the group name, group ID, usernames which are in secondary group.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you change/set the password of a user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; is the command to set/change password of a user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores users passwords? Is it visible for everyone?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; file holds the passwords of the users in encryted format. NO, it is only visble to the &lt;code&gt;root&lt;/code&gt; user&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;YES, we can create new user by manually adding an entry in the &lt;code&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;For example, if we need to create a user called &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Step 1: Add an entry to &lt;code&gt;/etc/passwd&lt;/code&gt; file, so user gets created.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:2001::/home/john:/bin/bash&#34; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 2: Add an entry to &lt;code&gt;/etc/group&lt;/code&gt; file, because every user belong to the primary group that has same name as the username.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:&#34; &amp;gt;&amp;gt; /etc/group&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 3: Verify if the user got created&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;id john&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What information is stored in /etc/passwd? explain each field&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; is a configuration file, which contains users information. Each entry in this file has, 7 fields,&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username:password:UID:GID:Comment:home directory:shell&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username&lt;/code&gt; - The name of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;password&lt;/code&gt; - This field is actually a placeholder of the password field. Due to security concerns, this field does not contain the password, just a placeholder (x) to the encrypted password stored in &lt;code&gt;/etc/shadow&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;UID&lt;/code&gt; - User ID of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;GID&lt;/code&gt; - Group ID&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Comment&lt;/code&gt; - This field is to provide description about the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;home directory&lt;/code&gt; - Abousulte path of the user&#39;s home directory. This directory gets created once the user is added.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;shell&lt;/code&gt; - This field contains the absolute path of the shell that will be used by the respective user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;adduser user_name --shell=/bin/false --no-create-home&lt;/code&gt; You can also add a user and then edit /etc/passwd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to switch to another user? How to switch to the root user?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;su command. Use su - to switch to root &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the UID the root user? What about a regular user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;UID of root user is 0&lt;/p&gt; &#xA; &lt;p&gt;Default values of UID_MIN and UID_MAX in &lt;code&gt;/etc/login.defs&lt;/code&gt; &lt;code&gt;UID_MIN&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt; &lt;code&gt;UID_MAX&lt;/code&gt; is &lt;code&gt;60000&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Actually, we can change this value. But UID &amp;lt; 1000 are reserved for system accounts. Therefore, as per the default configuration, for regular user UID starts from &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is /etc/skel?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/skel&lt;/code&gt; is a directory, that contains files or directories, so when a new user is created, these files/directories created under &lt;code&gt;/etc/skel&lt;/code&gt; will be copied to user&#39;s home directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to see a list of who logged-in to the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;last&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;useradd&lt;/li&gt; &#xA;   &lt;li&gt;usermod&lt;/li&gt; &#xA;   &lt;li&gt;whoami&lt;/li&gt; &#xA;   &lt;li&gt;id&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;useradd&lt;/code&gt; - Command for creating new users &lt;code&gt;usermod&lt;/code&gt; - Modify the users setting &lt;code&gt;whoami&lt;/code&gt; - Outputs, the username that we are currently logged in &lt;code&gt;id&lt;/code&gt; - Prints the&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;grep $(whoami) /etc/passwd&lt;/code&gt; but the output is empty. What might be a possible reason for that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The user you are using isn&#39;t defined locally but originates from services like LDAP.&lt;br&gt; You can verify with: &lt;code&gt;getent passwd&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Hardware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find information on the processor (like number of CPUs)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;/proc/cpuinfo&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also use &lt;code&gt;nproc&lt;/code&gt; for number of processors &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print information on the BIOS, motherboard, processor and RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dmidecoode &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print all the information on connected block devices in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lsblk &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In user space, applications don&#39;t have full access to hardware resources&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Only in kernel space they have full access to hardware resources. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a private key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is using openssl this way:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-private-key.pem 4096&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a public key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key [private key file name] -sha256 -out ca.pem&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If using the private key from the previous question then the command would be:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key ca-private-key.pem -sha256 -out ca.pem&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Namespaces&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of namespaces are there in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Process ID namespaces: these namespaces include independent set of process IDs&lt;/li&gt; &lt;li&gt;Mount namespaces: Isolation and control of mountpoints&lt;/li&gt; &lt;li&gt;Network namespaces: Isolates system networking resources such as routing table, interfaces, ARP table, etc.&lt;/li&gt; &lt;li&gt;UTS namespaces: Isolate host and domains&lt;/li&gt; &lt;li&gt;IPC namespaces: Isolates interprocess communications&lt;/li&gt; &lt;li&gt;User namespaces: Isolate user and group IDs&lt;/li&gt; &lt;li&gt;Time namespaces: Isolates time machine &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In every PID (Process ID) namespace the first process assigned with the process id number 1&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Inside the namespace it&#39;s PID 1 while to the parent namespace the PID is a different one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In a child PID namespace all processes are aware of parent PID namespace and processes and the parent PID namespace has no visibility of child PID namespace processes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. The opposite is true. Parent PID namespace is aware and has visibility of processes in child PID namespace and child PID namespace has no visibility as to what is going on in the parent PID namespace. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? By default, when creating two separate network namespaces, a ping from one namespace to another will work fine&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Network namespace has its own interfaces and routing table. There is no way (without creating a bridge for example) for one network namespace to reach another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? With UTS namespaces, processes may appear as if they run on different hosts and domains while running on the same host&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? It&#39;s not possible to have a root user with ID 0 in child user namespaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. In every child user namespace, it&#39;s possible to have a separate root user with uid of 0. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What time namespaces are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In time namespaces processes can use different system time. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Virtualization&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What virtualization solutions are available for Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;KVM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://www.xen.org/&#34;&gt;XEN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://linux-vserver.org/Welcome_to_Linux-VServer.org&#34;&gt;Linux-VServer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://user-mode-linux.sourceforge.net/&#34;&gt;User-mode Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is KVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Is an open source virtualization technology used to operate on x86 hardware.&lt;/p&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;docs&lt;/a&gt; Recommended read:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-KVM&#34;&gt;Red Hat Article - What is KVM?&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Libvirt?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s an open source collection of software used to manage virtual machines. It can be used with: KVM, Xen, LXC and others. It&#39;s also called Libvirt Virtualization API.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From the official &lt;a href=&#34;https://libvirt.org/&#34;&gt;docs&lt;/a&gt; Hypervisor supported &lt;a href=&#34;https://libvirt.org/drivers.html&#34;&gt;docs&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - AWK&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Wikipedia: &#34;AWK is domain-specific language designed for text processing and typically used as a data extraction and reporting tool&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the 4th column in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;{print $4}&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print every line that is longer than 79 characters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;length($0) &amp;gt; 79&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find and locate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a user process performs a privileged operation, such as reading from the disk?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using system calls &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - System Calls&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a system call? What system calls are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a program executes a system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A program executes a trap instruction. The instruction jump into the kernel while raising the privileged level to kernel space.&lt;/li&gt; &lt;li&gt;Once in kernel space, it can perform any privileged operation&lt;/li&gt; &lt;li&gt;Once it&#39;s finished, it calls a &#34;return-from-trap&#34; instruction which returns to user space while reducing back the privilege level to user space. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the fork() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of fork()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;On success, the PID of the child process in parent and 0 in child process&lt;/li&gt; &lt;li&gt;On error, -1 in the parent &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one reason for fork() to fail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not enough memory to create a new process &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need the wait() system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution. If wait is not used by a parent process then a child process might become a zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the kernel notifies the parent process about child process termination?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The kernel notifies the parent by sending the SIGCHLD to the parent. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the waitpid() is different from wait()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The waitpid() is a non-blocking version of the wait() function.&lt;br&gt; It also supports using library routine (e.g. system()) to wait a child process without messing up with other children processes for which the process has not waited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The wait() system call won&#39;t return until the child process has run and exited&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True in most cases though there are cases where wait() returns before the child exits. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the exec() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It transforms the current running program into another program.&lt;br&gt; Given the name of an executable and some arguments, it loads the code and static data from the specified executable and overwrites its current code segment and current static code data. After initializing its memory space (like stack and heap) the OS runs the program passing any arguments as the argv of that process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? A successful call to exec() never returns&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True&lt;br&gt; Since a succesful exec replace the current process, it can&#39;t return anything to the process that made the call. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system calls are used for creating a new process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork(), exec() and the wait() system call is also included in this workflow. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What execve() does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of malloc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the pipe() system call. What does it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://toroid.org/unix-pipe-implementation&#34;&gt;Unix pipe implementation&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Pipes provide a unidirectional interprocess communication channel. A pipe has a read end and a write end. Data written to the write end of a pipe can be read from the read end of the pipe. A pipe is created using pipe(2), which returns two file descriptors, one referring to the read end of the pipe, the other referring to the write end.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {&#34;ls&#34;, &#34;-l&#34;, &#34;NULL&#34;}&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What exactly the command &lt;code&gt;alias x=y&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why running a new program is done using the fork() and exec() system calls? why a different API wasn&#39;t developed where there is one call to run a new program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This way provides a lot of flexibility. It allows the shell for example, to run code after the call to fork() but before the call to exec(). Such code can be used to alter the environment of the program it about to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe shortly what happens when you execute a command in the shell&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The shell figures out, using the PATH variable, where the executable of the command resides in the filesystem. It then calls fork() to create a new child process for running the command. Once the fork was executed successfully, it calls a variant of exec() to execute the command and finally, waits the command to finish using wait(). When the child completes, the shell returns from wait() and prints out the prompt again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are a couple of ways to do that:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt; &lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt; &lt;li&gt;fallocate -l 2097152 new_file.txt &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following block do?: &lt;pre&gt;&lt;code&gt;open(&#34;/my/file&#34;) = 5&#xA;read(5, &#34;file content&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe three different ways to remove a file (or its content)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is context switch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Context_switch&#34;&gt;wikipedia&lt;/a&gt;: a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You found there is a server with high CPU load but you didn&#39;t find a process with high CPU. How is that possible?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Advanced - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called &#39;lo&#39;. What is it and why do we need it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another common way to task this questions is &#34;what part of the tcp header does traceroute modify?&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are cgroups?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href=&#34;https://ops.tips/blog/how-linux-creates-sockets&#34;&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it&#39;s still running?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between paging and swapping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is OOM killer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Distribution&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Linux distributions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Kernel&lt;/li&gt; &lt;li&gt;Utilities&lt;/li&gt; &lt;li&gt;Services&lt;/li&gt; &lt;li&gt;Software/Packages Management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Linux - Sed&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using sed, extract the date from the following line: &lt;code&gt;201.7.19.90 - - [05/Jun/1985:13:42:99 +0000] &#34;GET /site HTTP/1.1&#34; 200 32421&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;echo $line | sed &#39;s/.*\[//g;s/].*//g;s/:.*//g&#39;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a random string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way is to run the following: &lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A collection of packages - kernel, GNU, third party apps, ...&lt;/li&gt; &lt;li&gt;Sometimes distributions store some information on the distribution in &lt;code&gt;/etc/*-release&lt;/code&gt; file &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example for Red Hat distribution it will be &lt;code&gt;/etc/redhat-release&lt;/code&gt; and for Amazon it will be &lt;code&gt;/etc/os-release&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lsb_release&lt;/code&gt; is a common command you can use in multiple different distributions &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name 5 commands which are two letters long&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ways are there for creating a new empty file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch new_file&lt;/li&gt; &lt;li&gt;echo &#34;&#34; &amp;gt; new_file &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How `cd -` works? How does it knows the previous location?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;$OLDPWD &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List three ways to print all the files in the current directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;ls&lt;/li&gt; &lt;li&gt;find .&lt;/li&gt; &lt;li&gt;echo * &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to count the number of lines in a file? What about words?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You define x=2 in /etc/bashrc and x=6 ~/.bashrc you then login to the system. What would be the value of x?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between man and info?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A good answer can be found &lt;a href=&#34;https://askubuntu.com/questions/9325/what-is-the-difference-between-man-and-info-documentation&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;environment variables&#34;. How do you list all environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a TTY device?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create your own environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;X=2&lt;/code&gt; for example. But this will persist to new shells. To have it in new shells as well, use &lt;code&gt;export X=2&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If I plug a new device into a Linux machine, where on the system, a new device entry/file will be created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/dev &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why there are different sections in man? What is the difference between the sections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is User-mode Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Under which license Linux is distributed? &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;GPL v2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operating System&lt;/h2&gt; &#xA;&lt;h3&gt;Operating System Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 101&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_101.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_101_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 102&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_102.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_102_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operating System - Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an operating system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the book &#34;Operating Systems: Three Easy Pieces&#34;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It would support the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Create - allow to create new processes&lt;/li&gt; &lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt; &lt;li&gt;State - allow to check the state of the process, whether it&#39;s running, stopped, waiting, etc.&lt;/li&gt; &lt;li&gt;Stop - allow to stop a running process &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a process is created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The OS is reading program&#39;s code and any additional relevant data&lt;/li&gt; &lt;li&gt;Program&#39;s code is loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s heap which is required for dynamically allocated data like the data structures linked lists and hash tables&lt;/li&gt; &lt;li&gt;I/O initialization tasks are performed, like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt; &lt;li&gt;OS is running the program, starting from main() &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It was true in the past but today&#39;s operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are different states of a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Running - it&#39;s executing instructions&lt;/li&gt; &lt;li&gt;Ready - it&#39;s ready to run but for different reasons it&#39;s on hold&lt;/li&gt; &lt;li&gt;Blocked - it&#39;s waiting for some operation to complete. For example I/O disk request &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some reasons for a process to become blocked?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;I/O operations (e.g. Reading from a disk)&lt;/li&gt; &lt;li&gt;Waiting for a packet from a network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Inter Process Communication (IPC)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;time sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it&#39;s possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it&#39;s simply one CPU shared by applying multiprogramming and multi-tasking. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;space sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way where it&#39;s not being transferred between them.&lt;br&gt; It&#39;s used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is yours until you decide to delete it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What component determines which process runs at a given moment in time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU scheduler &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;virtual memory&#34; and what purpose it serves?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is demand paging?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is copy-on-write or shadowing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Some pieces of the code in the kernel are loaded into protected areas of the memory so applications can&#39;t overwritten them&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is POSIX?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Virtualization uses software to create an abstraction layer over computer hardware that allows the hardware elements of a single computer—processors, memory, storage and more - to be divided into multiple virtual computers, commonly called virtual machines (VMs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Red Hat: &#34;A hypervisor is software that creates and runs virtual machines (VMs). A hypervisor, sometimes called a virtual machine monitor (VMM), isolates the hypervisor operating system and resources from the virtual machines and enables the creation and management of those VMs.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-a-hypervisor&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of hypervisors are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hosted hypervisors and bare-metal hypervisors. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages and disadvantges of bare-metal hypervisor over a hosted hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Due to having its own drivers and a direct access to hardware components, a baremetal hypervisor will often have better performances along with stability and scalability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On the other hand, there will probably be some limitation regarding loading (any) drivers so a hosted hypervisor will usually benefit from having a better hardware compatibility. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of virtualization are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Operating system virtualization Network functions virtualization Desktop virtualization &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is containerization is a type of Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, it&#39;s a operating-system-level virtualization, where the kernel is shared and allows to use multiple isolated user-spaces instances. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the introduction of virtual machines changed the industry and the way applications were deployed?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The introduction of virtual machines allowed companies to deploy multiple business applications on the same hardware while each application is separated from each other in secured way, where each is running on its own separate operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - OOP&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its&#xA;properties.&#xA;&#xA;So if Class B inherits from Class A, every characteristics from class A will be also available in class B.&#xA;Class A would be the &#39;Base class&#39; and B class would be the &#39;derived class&#39;.&#xA;&#xA;This comes handy when you have several classes that share the same functionalities.&#xA;&#xA;The basic syntax is:&#xA;&#xA;class Base: pass&#xA;&#xA;class Derived(Base): pass&#xA;&#xA;A more forged example:&#xA;&#xA;class Animal:&#xA;    def __init__(self):&#xA;        print(&#34;and I&#39;m alive!&#34;)&#xA;&#xA;    def eat(self, food):&#xA;        print(&#34;ñom ñom ñom&#34;, food)&#xA;&#xA;class Human(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is &#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def write_poem(self):&#xA;        print(&#39;Foo bar bar foo foo bar!&#39;)&#xA;&#xA;class Dog(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is&#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def bark(self):&#xA;        print(&#39;woof woof&#39;)&#xA;&#xA;&#xA;michael = Human(&#39;Michael&#39;)&#xA;michael.eat(&#39;Spam&#39;)&#xA;michael.write_poem()&#xA;&#xA;bruno = Dog(&#39;Bruno&#39;)&#xA;bruno.eat(&#39;bone&#39;)&#xA;bruno.bark()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; My name is  Michael&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom Spam&#xA;&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!&#xA;&amp;gt;&amp;gt;&amp;gt; My name is Bruno&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom bone&#xA;&amp;gt;&amp;gt;&amp;gt; woof woof&#xA;&#xA;Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.&#xA;&#xA;There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class MyClass(object):&#xA;    x = 1&#xA;&#xA;    def __init__(self, y):&#xA;        self.y = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Exceptions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;#  Note that you generally don&#39;t need to know the compiling process but knowing where everything comes from&#xA;#  and giving complete answers shows that you truly know what you are talking about.&#xA;&#xA;Generally, every compiling process have a two steps.&#xA;    - Analysis&#xA;    - Code Generation.&#xA;&#xA;    Analysis can be broken into:&#xA;        1. Lexical analysis   (Tokenizes source code)&#xA;        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)&#xA;&#xA;               for i in &#39;foo&#39;&#xA;                          ^&#xA;             SyntaxError: invalid syntax&#xA;&#xA;        We missed &#39;:&#39;&#xA;&#xA;&#xA;        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,&#xA;          hash a mutable object or use an undeclared function?)&#xA;&#xA;                 1/0&#xA;                ZeroDivisionError: division by zero&#xA;&#xA;    These three analysis steps are the responsible for error handlings.&#xA;&#xA;    The second step would be responsible for errors, mostly syntax errors, the most common error.&#xA;    The third step would be responsible for Exceptions.&#xA;&#xA;    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:&#xA;&#xA;        ImportError&#xA;        ValueError&#xA;        KeyError&#xA;        FileNotFoundError&#xA;        IndentationError&#xA;        IndexError&#xA;        ...&#xA;&#xA;    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.&#xA;&#xA;    Basic example:&#xA;&#xA;    class DividedBy2Error(Exception):&#xA;        def __init__(self, message):&#xA;            self.message = message&#xA;&#xA;&#xA;    def division(dividend,divisor):&#xA;        if divisor == 2:&#xA;            raise DividedBy2Error(&#39;I dont want you to divide by 2!&#39;)&#xA;        return dividend / divisor&#xA;&#xA;    division(100, 2)&#xA;&#xA;    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt; Errors detected during execution are called Exceptions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Handling Exception:&lt;/strong&gt; When an error occurs, or exception as we call it, Python will normally stop and generate an error message.&lt;br&gt; Exceptions can be handled using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statement in python.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Following example asks the user for input until a valid integer has been entered. &lt;br&gt; If user enter a non-integer value it will raise exception and using except it will catch that exception and ask the user to enter valid integer again.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;while True:&#xA;    try:&#xA;        a = int(input(&#34;please enter an integer value: &#34;))&#xA;        break&#xA;    except ValueError:&#xA;        print(&#34;Ops! Please enter a valid integer value.&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more details about errors and exceptions follow this &lt;a href=&#34;https://docs.python.org/3/tutorial/errors.html&#34;&gt;https://docs.python.org/3/tutorial/errors.html&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following function? &lt;pre&gt;&lt;code&gt;def true_or_false():&#xA;    try:&#xA;        return True&#xA;    finally:&#xA;        return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; False &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Built-in functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following built-in functions (their purpose + use case example): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;repr&lt;/li&gt; &#xA;   &lt;li&gt;any&lt;/li&gt; &#xA;   &lt;li&gt;all&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between repr function and str?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the __call__ method?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is used to emulate callable objects. It allows a class instance to be called as a function.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example code:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;class Foo:&#xA;    def __init__(self: object) -&amp;gt;  None:&#xA;        pass&#xA;    def __call__(self: object) -&amp;gt; None:&#xA;        print(&#34;Called!&#34;)&#xA;&#xA;f = Foo()&#xA;f()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Result:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;Called!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do classes has the __call__ method as well? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Translation lookup in i18n&lt;/li&gt; &lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt; &lt;li&gt;As a general purpose &#34;throwaway&#34; variable name. For example: x, y, _ = get_data() (x and y are used but since we don&#39;t care about third variable, we &#34;threw it away&#34;). &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is GIL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Python Global Interpreter Lock (GIL) is a type of process lock which is used by python whenever it deals with processes. Generally, Python only uses only one thread to execute the set of written statements. This means that in python only one thread will be executed at a time &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A &lt;code&gt;lambda&lt;/code&gt; expression is an &#39;anonymous&#39; function, the difference from a normal defined function using the keyword `def`` is the syntax and usage.&lt;/p&gt; &lt;p&gt;The syntax is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;lambda[parameters]: [expresion]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A lambda function add 10 with any argument passed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;x = lambda a: a + 10&#xA;print(x(10))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;An addition function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;addition = lambda x, y: x + y&#xA;print(addition(10, 20))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squaring function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;square = lambda x : x ** 2&#xA;print(square(5))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Generally it is considered a bad practice under PEP 8 to assign a lambda expresion, they are meant to be used as parameters and inside of other defined functions.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;getter&lt;/li&gt; &#xA;   &lt;li&gt;setter&lt;/li&gt; &#xA;   &lt;li&gt;deleter&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is @property&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x, y = y, x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following object&#39;s magic variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def return_sum():&#xA;&#x9;amount_of_numbers = int(input(&#34;How many numbers? &#34;))&#xA;&#x9;total_sum = 0&#xA;&#x9;while amount_of_numbers != 0:&#xA;&#x9;&#x9;num = int(input(&#34;Input a number. &#34;))&#xA;&#x9;&#x9;total_sum += num&#xA;&#x9;&#x9;amount_of_numbers -= 1&#xA;&#x9;return total_sum&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [2, 5, 6]&#xA;print(&#34;{0:.3f}&#34;.format(sum(li)/len(li)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Lists&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tuple in Python? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A tuple is a built-in data type in Python. It&#39;s used for storing multiple items in a single variable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List, like a tuple, is also used for storing multiple items. What is then, the difference between a tuple and a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;List, as opposed to a tuple, is a mutable data type. It means we can modify it and at items to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the number 2 to the list &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;x.append(2)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get the last element of a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;some_list[-1]&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the items of [1, 2, 3] to the list [4, 5, 6]?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; x = [4, 5, 6] x.extend([1, 2, 3]) &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Don&#39;t use &lt;code&gt;append&lt;/code&gt; unless you would like the list as one item. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove the first 3 items from a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;my_list[0:3] = []&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to insert an item to the beginning of a list? What about two items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One item:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers = [1, 2, 3, 4, 5]&#xA;numbers.insert(0, 0)&#xA;print(numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple items or list:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers_1 = [2, 3, 4, 5]&#xA;numbers_2 = [0, 1]&#xA;numbers_1 = numbers_2 + numbers_1&#xA;print(numbers_1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or without creating a new list:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt; &lt;p&gt;sorted(list) will return a new list (original list doesn&#39;t change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() is faster than sorted(list) in case of Lists &lt;/p&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert every string to an integer: &lt;code&gt;[[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nested_li = [[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&#xA;[[int(x) for x in li] for li in nested_li]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted(li1 + li2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;i, j = 0&#xA;merged_li = []&#xA;&#xA;while i &amp;lt; len(li1) and j &amp;lt; len(li2):&#xA;    if li1[i] &amp;lt; li2[j]:&#xA;        merged_li.append(li1[i])&#xA;        i += 1&#xA;    else:&#xA;        merged_li.append(li2[j])&#xA;        j += 1&#xA;&#xA;merged_li = merged_li + merged_li[i:] + merged_li[j:]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;There are many ways of solving this problem:&lt;br&gt; &lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Taking advantage of sets and len:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:&#xA;    return len(set(l)) == len(l)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:&#xA;    seen = []&#xA;&#xA;    for i in l:&#xA;        if i in seen:&#xA;            return False&#xA;        seen.append(i)&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:&#xA;    for i in l:&#xA;        if l.count(i) &amp;gt; 1:&#xA;            return False&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:&#xA;    return all(map(lambda x: l.count(x) &amp;lt; 2, l))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following function &lt;pre&gt;&lt;code&gt;def my_func(li = []):&#xA;    li.append(&#34;hmm&#34;)&#xA;    print(li)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[&#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;, &#39;hmm&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for item in some_list:&#xA;    print(item)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list with indexes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for i, item in enumerate(some_list):&#xA;    print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start list iteration from 2nd index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using range like this&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in range(1, len(some_list)):&#xA;    some_list[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is using slicing&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in some_list[1:]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Method 1&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in reversed(li):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Method 2&lt;/p&gt; &lt;pre&gt;&lt;code&gt;n = len(li) - 1&#xA;while n &amp;gt; 0:&#xA;    ...&#xA;    n -= 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]&#xA;&#xA;sorted(li, key=lambda l: l[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Combine [1, 2, 3] and [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;] so the result is [(1, &#39;x&#39;), (2, &#39;y&#39;), (3, &#39;z&#39;)]&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]&#xA;letters = [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]&#xA;&#xA;list(zip(nums, letters))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions&#34;&gt;Docs&lt;/a&gt;: &#34;List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.&#34;.&lt;/p&gt; &lt;p&gt;It&#39;s better because they&#39;re compact, faster and have better readability.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For loop:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = []&#xA;for number_list in number_lists:&#xA;    for number in number_list:&#xA;        if number % 2 == 0:&#xA;            odd_numbers.append(number)&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List comprehesion:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = [number for number_list in number_lists for number in number_list if number % 2 == 0]&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list: &lt;code&gt;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&lt;/code&gt; Extract all type of foods. Final output should be: {&#39;mushrooms&#39;, &#39;goombas&#39;, &#39;turtles&#39;}&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;brothers_menu =  \&#xA;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&#xA;&#xA;# &#34;Classic&#34; Way&#xA;def get_food(brothers_menu) -&amp;gt; set:&#xA;    temp = []&#xA;&#xA;    for brother in brothers_menu:&#xA;        for food in brother[&#39;food&#39;]:&#xA;            temp.append(food)&#xA;&#xA;    return set(temp)&#xA;&#xA;# One liner way (Using list comprehension)&#xA;set([food for bro in x for food in bro[&#39;food&#39;]])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Dictionaries&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;my_dict = dict(x=1, y=2) OR my_dict = {&#39;x&#39;: 1, &#39;y&#39;: 2} OR my_dict = dict([(&#39;x&#39;, 1), (&#39;y&#39;, 2)]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove a key from a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;del my_dict[&#39;some_key&#39;] you can also use &lt;code&gt;my_dict.pop(&#39;some_key&#39;)&lt;/code&gt; which returns the value of the key. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert the string &#34;a.b.c&#34; to the dictionary &lt;code&gt;{&#39;a&#39;: {&#39;b&#39;: {&#39;c&#39;: 1}}}&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;output = {}&#xA;string = &#34;a.b.c&#34;&#xA;path = string.split(&#39;.&#39;)&#xA;target = reduce(lambda d, k: d.setdefault(k, {}), path[:-1], output)&#xA;target[path[-1]] = 1&#xA;print(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Common Algorithms Implementation&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement &#34;binary search&#34; in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/coding/python/binary_search.py&#34;&gt;Solution&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write to a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;with open(&#39;file.txt&#39;, &#39;w&#39;) as file:&#xA;    file.write(&#34;My insightful comment&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print a random line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print every 3rd line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of lines in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of of words in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a dictionary (variable) to a file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import json&#xA;&#xA;with open(&#39;file.json&#39;, &#39;w&#39;) as f:&#xA;    f.write(json.dumps(dict_var))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python OS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print current working directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.getcwd())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; print the file name (file1)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.path.basename(&#39;/dir1/dir2/file1&#39;))&#xA;&#xA;# Another way&#xA;print(os.path.split(&#39;/dir1/dir2/file1&#39;)[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Print the path without the file name (/dir1/dir2)&lt;/li&gt; &#xA;   &lt;li&gt;Print the name of the directory where the file resides (dir2)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;## Part 1.&#xA;# os.path.dirname gives path removing the end component&#xA;dirpath = os.path.dirname(&#39;/dir1/dir2/file1&#39;)&#xA;print(dirpath)&#xA;&#xA;## Part 2.&#xA;print(os.path.basename(dirpath))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you execute shell commands using Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join path components? for example &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;luig&lt;/code&gt; will result in &lt;code&gt;/home/luigi&lt;/code&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you remove non-empty directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Regex&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the re module &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Strings&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the first repeated character in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;While you iterate through the characters, store them in a dictionary and check for every character whether it&#39;s already in the dictionary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def firstRepeatedCharacter(str):&#xA;    chars = {}&#xA;    for ch in str:&#xA;        if ch in chars:&#xA;            return ch&#xA;        else:&#xA;            chars[ch] = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the unique characters from a string? for example given the input &#34;itssssssameeeemarioooooo&#34; the output will be &#34;mrtisaoe&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x = &#34;itssssssameeeemarioooooo&#34;&#xA;y = &#39;&#39;.join(set(x))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def permute_string(string):&#xA;&#xA;    if len(string) == 1:&#xA;        return [string]&#xA;&#xA;    permutations = []&#xA;    for i in range(len(string)):&#xA;        swaps = permute_string(string[:i] + string[(i+1):])&#xA;        for swap in swaps:&#xA;            permutations.append(string[i] + swap)&#xA;&#xA;    return permutations&#xA;&#xA;print(permute_string(&#34;abc&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from itertools import permutations&#xA;&#xA;[&#39;&#39;.join(p) for p in permutations(&#34;abc&#34;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Detailed answer can be found here: &lt;a href=&#34;http://codingshell.com/python-all-string-permutations&#34;&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the &#34;count&#34; method like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;ImAString.count(&#34; &#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the string (which represents a matrix) &#34;1 2 3\n4 5 6\n7 8 9&#34; create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following? &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; &#39;, &#39;.join([&#34;One&#34;, &#34;Two&#34;, &#34;Three&#34;])&#xA;&amp;gt;&amp;gt; &#34; &#34;.join(&#34;welladsadgadoneadsadga&#34;.split(&#34;adsadga&#34;)[:2])&#xA;&amp;gt;&amp;gt; &#34;&#34;.join([&#34;c&#34;, &#34;t&#34;, &#34;o&#34;, &#34;a&#34;, &#34;o&#34;, &#34;q&#34;, &#34;l&#34;])[0::2]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;One, Two, Three&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;well done&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;cool&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If &lt;code&gt;x = &#34;pizza&#34;&lt;/code&gt;, what would be the result of &lt;code&gt;x[::-1]&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It will reverse the string, so x would be equal to &lt;code&gt;azzip&lt;/code&gt;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Reverse each word in a string (while keeping the order)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the output of the following code: &lt;code&gt;&#34;&#34;.join([&#34;a&#34;, &#34;h&#34;, &#34;m&#34;, &#34;a&#34;, &#34;h&#34;, &#34;a&#34;, &#34;n&#34;, &#34;q&#34;, &#34;r&#34;, &#34;l&#34;, &#34;o&#34;, &#34;i&#34;, &#34;f&#34;, &#34;o&#34;, &#34;o&#34;])[2::3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;mario &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Iterators&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an iterator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the output of the following block? &lt;pre&gt;&lt;code&gt;for i in range(3, 3):&#xA;   print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No output :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of methods and how to use them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Static method&lt;/li&gt; &#xA;   &lt;li&gt;Class method&lt;/li&gt; &#xA;   &lt;li&gt;instance method&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to reverse a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[[&#39;Mario&#39;, 90], [&#39;Geralt&#39;, 82], [&#39;Gordon&#39;, 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;zip()&lt;/li&gt; &#xA;   &lt;li&gt;map()&lt;/li&gt; &#xA;   &lt;li&gt;filter()&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Python - Slicing&lt;/h4&gt; &#xA;&lt;p&gt;For the following slicing exercises, assume you have the following list: &lt;code&gt;my_list = [8, 2, 1, 10, 5, 4, 3, 9]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[0:4]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:6]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:5]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::-1]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[2:]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[:3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Debugging&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pdb :D &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt; &#xA; &lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    return&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    pass&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt; &#xA; &lt;p&gt;We could use the dis module to see what&#39;s going on:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;)&#xA;              2 LOAD_CONST               1 (&#39;a&#39;)&#xA;              4 MAKE_FUNCTION            0&#xA;              6 STORE_NAME               0 (a)&#xA;&#xA;  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;)&#xA;             10 LOAD_CONST               3 (&#39;b&#39;)&#xA;             12 MAKE_FUNCTION            0&#xA;             14 STORE_NAME               1 (b)&#xA;             16 LOAD_CONST               4 (None)&#xA;             18 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;:&#xA;  3           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;:&#xA;  6           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return will always return None regardless of the operations, therefore&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def sum(a, b):&#xA;    global c&#xA;    c = a + b&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to improve the following block of code? &lt;pre&gt;&lt;code&gt;li = []&#xA;for i in range(1, 10):&#xA;    li.append(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[i for i in range(1, 10)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the following function &lt;pre&gt;&lt;code&gt;def is_int(num):&#xA;    if isinstance(num, int):&#xA;        print(&#39;Yes&#39;)&#xA;    else:&#xA;        print(&#39;No&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python - Linked List&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement a linked list in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The reason we need to implement in the first place, it&#39;s because a linked list isn&#39;t part of Python standard library.&lt;br&gt; To implement a linked list, we have to implement two structures: The linked list itself and a node which is used by the linked list.&lt;/p&gt; &lt;p&gt;Let&#39;s start with a node. A node has some value (the data it holds) and a pointer to the next node&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Node(object):&#xA;    def __init__(self, data):&#xA;        self.data = data&#xA;        self.next = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the linked list. An empty linked list has nothing but an empty head.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class LinkedList(object):&#xA;    def __init__(self):&#xA;        self.head = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can start using the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ll = Linkedlist()&#xA;ll.head = Node(1)&#xA;ll.head.next = Node(2)&#xA;ll.head.next.next = Node(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What we have is:&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;| 1 | -&amp;gt; | 2 | -&amp;gt; | 3 |&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;Usually, more methods are implemented, like a push_head() method where you insert a node at the beginning of the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def push_head(self, value):&#xA;    new_node = Node(value)&#xA;    new_node.next = self.head&#xA;    self.head = new_node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a method to the Linked List class to traverse (print every node&#39;s data) the linked list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;def print_list(self): node = self.head while(node): print(node.data) node = node.next &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a method to that will return a boolean based on whether there is a loop in a linked list or not&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Let&#39;s use the Floyd&#39;s Cycle-Finding algorithm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def loop_exists(self):&#xA;    one_step_p = self.head&#xA;    two_steps_p = self.head&#xA;    while(one_step_p and two_steps_p and two_steps_p.next):&#xA;        one_step_p = self.head.next&#xA;        two_step_p = self.head.next.next&#xA;        if (one_step_p == two_steps_p):&#xA;            return True &#xA;    return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Testing&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt; &lt;p&gt;5 style guidelines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.&#xA;2. Surround top-level function and class definitions with two blank lines.&#xA;3. Use commas when making a tuple of one element&#xA;4. Use spaces (and not tabs) for indentation&#xA;5. Use 4 spaces per indentation level&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain mocks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why one shouldn&#39;t use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Flask&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe what is Django/Flask and how you have used it? Why Flask and not Django? (or vice versa)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a route?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; As every web framework, Flask provides a route functionality that lets you serve a content of a given URL. &lt;p&gt;There are multiple ways to map a URL with a function in Python.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decorator: you can use python decorators. In this case we&#39;re using &lt;code&gt;app&lt;/code&gt;. This &lt;code&gt;app&lt;/code&gt; decorator is the instance of the &lt;code&gt;Flask&lt;/code&gt; class. And route it&#39;s a method of this class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)&#xA;def home():&#xA;  return &#39;main website&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;add_url_rule&lt;/code&gt; method: This is a method of the Flask class. We can also use it for map the URL with a function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;def home():&#xA;  return &#39;main website&#39;&#xA;&#xA;app.add_url_rule(&#39;/&#39;, view_func=home)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a blueprint in Flask?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a template?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;zip&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following: &lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))&#xA;list(zip(range(5), range(50), range(-2)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]&#xA;[]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Descriptors&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Descriptors&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about descriptors &lt;a href=&#34;https://docs.python.org/3/howto/descriptor.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;a.num2&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class B:&#xA;    def __get__(self, obj, objtype=None):&#xA;        reuturn 10&#xA;&#xA;class A:&#xA;    num1 = 2&#xA;    num2 = Five()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 10 &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;some_car = Car(&#34;Red&#34;, 4)&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class Print:&#xA;&#xA;    def __get__(self, obj, objtype=None):&#xA;        value = obj._color&#xA;        print(&#34;Color was set to {}&#34;.format(valie))&#xA;        return value&#xA;&#xA;    def __set__(self, obj, value):&#xA;        print(&#34;The color of the car is {}&#34;.format(value))&#xA;        obj._color = value&#xA;&#xA;class Car:&#xA;&#xA;    color = Print()&#xA;&#xA;    def __ini__(self, color, age):&#xA;        self.color = color&#xA;        self.age = age&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; An instance of Car class will be created and the following will be printed: &#34;The color of the car is Red&#34; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you spawn multiple processes with Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def add(num1, num2):&#xA;    return num1 + num2&#xA;&#xA;&#xA;def sub(num1, num2):&#xA;    return num1 - num2&#xA;&#xA;&#xA;def mul(num1, num2):&#xA;    return num1*num2&#xA;&#xA;&#xA;def div(num1, num2):&#xA;    return num1 / num2&#xA;&#xA;operators = {&#xA;    &#39;+&#39;: add,&#xA;    &#39;-&#39;: sub,&#xA;    &#39;*&#39;: mul,&#xA;    &#39;/&#39;: div&#xA;}&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    operator = str(input(&#34;Operator: &#34;))&#xA;    num1 = int(input(&#34;1st number: &#34;))&#xA;    num2 = int(input(&#34;2nd number: &#34;))&#xA;    print(operators[operator](num1, num2))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good reference &lt;a href=&#34;https://docs.python.org/3/library/datatypes.html&#34;&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments for another function eg; &lt;pre&gt;&lt;code&gt;def wee(word):&#xA;    return word&#xA;&#xA;def oh(f):&#xA;    return f + &#34;Ohh&#34;&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; oh(wee(&#34;Wee&#34;))&#xA;&amp;lt;&amp;lt;&amp;lt; Wee Ohh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper, (a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt; &lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt; &lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt; &lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;every time, that&#39;s what decorators do, they introduce syntax to write all of this on the go, using the keyword &#39;@&#39;. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt; &lt;pre&gt;&lt;code&gt;Simple decorator:&#xA;&#xA;def deco(f):&#xA;    print(f&#34;Hi I am the {f.__name__}() function!&#34;)&#xA;    return f&#xA;&#xA;@deco&#xA;def hello_world():&#xA;    return &#34;Hi, I&#39;m in!&#34;&#xA;&#xA;a = hello_world()&#xA;print(a)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!&#xA;    Hi, I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;. But at this point we can only control the before execution, let&#39;s take on the after:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        print(&#34;Rick Sanchez!&#34;)&#xA;        func = f(*args, **kwargs)&#xA;        print(&#34;I&#39;m in!&#34;)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f(word):&#xA;    print(word)&#xA;&#xA;a = f(&#34;************&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!&#xA;    ************&#xA;    I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;deco receives a function -&amp;gt; f wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt; &lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs) deco returns wrapper.&lt;/p&gt; &lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt; &lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import time&#xA;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        before = time.time()&#xA;        func = f(*args, **kwargs)&#xA;        after = time.time()&#xA;        print(after-before)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f():&#xA;    time.sleep(2)&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def n_times(n):&#xA;    def wrapper(f):&#xA;        def inner(*args, **kwargs):&#xA;            for _ in range(n):&#xA;                func = f(*args, **kwargs)&#xA;            return func&#xA;        return inner&#xA;    return wrapper&#xA;&#xA;@n_times(4)&#xA;def f():&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;************&#xA;   ************&#xA;   ************&#xA;   ************&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;class Car:&#xA;    def __init__(self, model, color):&#xA;        self.model = model&#xA;        self.color = color&#xA;&#xA;    def __eq__(self, other):&#xA;        if not isinstance(other, Car):&#xA;            return NotImplemented&#xA;        return self.model == other.model and self.color == other.color&#xA;&#xA;&amp;gt;&amp;gt; a = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; b = Car(&#39;model_2&#39;, &#39;green&#39;)&#xA;&amp;gt;&amp;gt; c = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; a == b&#xA;False&#xA;&amp;gt;&amp;gt; a == c&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Context Manager&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement Linux&#39;s &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How yield works exactly?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Google: &#34;Monitoring is one of the primary means by which service owners keep track of a system’s health and availability&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action. If the issue doesn&#39;t require any human intervention, then the problem can be fixed by some processes running in the relevant environment. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alerts&lt;br&gt; Tickets&lt;br&gt; Logging&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Prometheus? What are some of Prometheus&#39;s main features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios it might be better to NOT use Prometheus?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Prometheus documentation: &#34;if you need 100% accuracy, such as for per-request billing&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Alert?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following Prometheus components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prometheus server&lt;/li&gt; &#xA;   &lt;li&gt;Push Gateway&lt;/li&gt; &#xA;   &lt;li&gt;Alert Manager&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Prometheus server is responsible for scraping and storing the data&lt;br&gt; Push gateway is used for short-lived jobs&lt;br&gt; Alert manager is responsible for alerts ;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Go&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strong and static typing - the type of the variables can&#39;t be changed over time and they have to be defined at compile time&lt;/li&gt; &#xA;   &lt;li&gt;Simplicity&lt;/li&gt; &#xA;   &lt;li&gt;Fast compile times&lt;/li&gt; &#xA;   &lt;li&gt;Built-in concurrency&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collected&lt;/li&gt; &#xA;   &lt;li&gt;Platform independent&lt;/li&gt; &#xA;   &lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go also has good community. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt; &#xA; &lt;p&gt;False. We can&#39;t redeclare variables but yes, we must used declared variables. &lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;fmt - formatted I/O &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following block of code? How to fix it? &lt;pre&gt;&lt;code&gt;func main() {&#xA;    var x float32 = 13.5&#xA;    var y int&#xA;    y = x&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get &#34;e&#34;. Why is that? How to fix it? &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;    var x int = 101&#xA;    var y string&#xA;    y = string(x)&#xA;    fmt.Println(y)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string. If you want to get &#34;101&#34; you should use the package &#34;strconv&#34; and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the following code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;func main() {&#xA;    var x = 2&#xA;    var y = 3&#xA;    const someConst = x + y&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Constants in Go can only be declared using constant expressions. But &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and their sum is variable. &lt;br&gt; &lt;code&gt;const initializer x + y is not a constant&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;x = iota&#xA;&#x9;y = iota&#xA;)&#xA;const z = iota&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, y)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, z)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go&#39;s iota identifier is used in const declarations to simplify definitions of incrementing numbers. Because it can be used in expressions, it provides a generality beyond that of simple enumerations. &lt;br&gt; &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the first iota group, &lt;code&gt;z&lt;/code&gt; in the second. &lt;br&gt; &lt;a href=&#34;https://github.com/golang/go/wiki/Iota&#34;&gt;Iota page in Go Wiki&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It avoids having to declare all the variables for the returns values. It is called the &lt;a href=&#34;https://golang.org/doc/effective_go.html#blank&#34;&gt;blank identifier&lt;/a&gt;. &lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/27764421/what-is-underscore-comma-in-a-go-declaration#answer-27764432&#34;&gt;answer in SO&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;_ = iota + 3&#xA;&#x9;x&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Since the first iota is declared with the value &lt;code&gt;3&lt;/code&gt; (&lt;code&gt; + 3&lt;/code&gt;), the next one has the value &lt;code&gt;4&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;time&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;var wg sync.WaitGroup&#xA;&#xA;&#x9;wg.Add(1)&#xA;&#x9;go func() {&#xA;&#x9;&#x9;time.Sleep(time.Second * 2)&#xA;&#x9;&#x9;fmt.Println(&#34;1&#34;)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}()&#xA;&#xA;&#x9;go func() {&#xA;&#x9;&#x9;fmt.Println(&#34;2&#34;)&#xA;&#x9;}()&#xA;&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Println(&#34;3&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 2 1 3&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://tutorialedge.net/golang/go-waitgroup-tutorial/&#34;&gt;Aritcle about sync/waitgroup&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/sync/&#34;&gt;Golang package sync&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func mod1(a []int) {&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;1:&#34;, a)&#xA;}&#xA;&#xA;func mod2(a []int) {&#xA;&#x9;a = append(a, 125) // !&#xA;&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;2:&#34;, a)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;s1 := []int{1, 2, 3, 4}&#xA;&#x9;mod1(s1)&#xA;&#x9;fmt.Println(&#34;1:&#34;, s1)&#xA;&#xA;&#x9;s2 := []int{1, 2, 3, 4}&#xA;&#x9;mod2(s2)&#xA;&#x9;fmt.Println(&#34;2:&#34;, s2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: &lt;code&gt;&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 2 [5 5 5 5 5]&lt;br&gt; 2 [1 2 3 4]&lt;br&gt; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;In &lt;code&gt;mod1&lt;/code&gt; a is link, and when we&#39;re using &lt;code&gt;a[i]&lt;/code&gt;, we&#39;re changing &lt;code&gt;s1&lt;/code&gt; value to. But in &lt;code&gt;mod2&lt;/code&gt;, &lt;code&gt;append&lt;/code&gt; creats new slice, and we&#39;re changing only &lt;code&gt;a&lt;/code&gt; value, not &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golangbot.com/arrays-and-slices/&#34;&gt;Aritcle about arrays&lt;/a&gt;, &lt;a href=&#34;https://blog.golang.org/slices&#34;&gt;Blog post about &lt;code&gt;append&lt;/code&gt;&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;container/heap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;// An IntHeap is a min-heap of ints.&#xA;type IntHeap []int&#xA;&#xA;func (h IntHeap) Len() int           { return len(h) }&#xA;func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] }&#xA;func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }&#xA;&#xA;func (h *IntHeap) Push(x interface{}) {&#xA;&#x9;// Push and Pop use pointer receivers because they modify the slice&#39;s length,&#xA;&#x9;// not just its contents.&#xA;&#x9;*h = append(*h, x.(int))&#xA;}&#xA;&#xA;func (h *IntHeap) Pop() interface{} {&#xA;&#x9;old := *h&#xA;&#x9;n := len(old)&#xA;&#x9;x := old[n-1]&#xA;&#x9;*h = old[0 : n-1]&#xA;&#x9;return x&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;h := &amp;amp;IntHeap{4, 8, 3, 6}&#xA;&#x9;heap.Init(h)&#xA;&#x9;heap.Push(h, 7)&#xA;&#xA;  fmt.Println((*h)[0])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/container/heap/&#34;&gt;Golang container/heap package&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mongo&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;MongoDB advantages are as followings:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemaless&lt;/li&gt; &#xA;   &lt;li&gt;Easy to scale-out&lt;/li&gt; &#xA;   &lt;li&gt;No complex joins&lt;/li&gt; &#xA;   &lt;li&gt;Structure of a single object is clear&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Heterogeneous data which changes often&lt;/li&gt; &lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt; &lt;li&gt;Best if the database needs to scale rapidly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an aggregator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Queries&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({&#34;name&#34;: /abc/})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find() and find_one()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you export data from Mongo DB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;mongoexport&lt;/li&gt; &lt;li&gt;programming languages &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;SQL&lt;/h2&gt; &#xA;&lt;h3&gt;SQL Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Functions vs. Comparisons&lt;/td&gt; &#xA;   &lt;td&gt;Query Improvements&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/improve_query.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/solutions/improve_query.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;SQL Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SQL (Structured Query Language) is a standard language for relational databases (like MySQL, MariaDB, ...).&lt;br&gt; It&#39;s used for reading, updating, removing and creating data in a relational database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many businesses and areas within the finance field due to it&#39;s ACID compliance.&lt;/p&gt; &lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications in mind, so it works great if you need to quickly spread the same information around to multiple servers&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure that Relational Databases require, you can store different data types together. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Practical SQL - Basics&lt;/h5&gt; &#xA;&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Customer_Name&lt;/th&gt; &#xA;   &lt;th&gt;Items_in_cart&lt;/th&gt; &#xA;   &lt;th&gt;Cash_spent_to_Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;John Smith&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Jane Smith&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;40.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Bobby Frank&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Order_ID&lt;/th&gt; &#xA;   &lt;th&gt;Item&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Date_sold&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky&lt;/td&gt; &#xA;   &lt;td&gt;2.20&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Bubble Bath&lt;/td&gt; &#xA;   &lt;td&gt;8.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Q987&lt;/td&gt; &#xA;   &lt;td&gt;80-Pack TP&lt;/td&gt; &#xA;   &lt;td&gt;90.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Chicken&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Beef&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;X202&lt;/td&gt; &#xA;   &lt;td&gt;Coffee&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-04-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select * &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many items are in John&#39;s cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt; From Customers &lt;br&gt; Where Customer_Name = &#34;John Smith&#34;; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt; From Customers &lt;br&gt; where Items_in_cart &amp;gt; 0; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in both the Customers table and Orders table &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt; From Customers c &lt;br&gt; Left Join Orders o &lt;br&gt; On c.Customer_ID = o.Customer_ID;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;with cat_food as ( &lt;br&gt; Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt; From Orders &lt;br&gt; Where Item like &#34;%Cat Food%&#34; &lt;br&gt; Group by Customer_ID &lt;br&gt; ) &lt;br&gt; Select Customer_name, TOTAL_PRICE &lt;br&gt; From Customers c &lt;br&gt; Inner JOIN cat_food f &lt;br&gt; ON c.Customer_ID = f.Customer_ID &lt;br&gt; where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt; &lt;p&gt;Although this was a simple statement, the &#34;with&#34; clause really shines when a complex query needs to be run on a table before joining to another. With statements are nice, because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren&#39;t readily available, so we used a with statement to create the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following queries would you use? &lt;pre&gt;&lt;code&gt;SELECT count(*)                             SELECT count(*)&#xA;FROM shawarma_purchases                     FROM shawarma_purchases&#xA;WHERE                               vs.     WHERE&#xA;  YEAR(purchased_at) == &#39;2017&#39;              purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;                                            purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;SELECT count(*)&#xA;FROM shawarma_purchases&#xA;WHERE&#xA;  purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;  purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When you use a function (&lt;code&gt;YEAR(purchased_at)&lt;/code&gt;) it has to scan the whole database as opposed to using indexes and basically the column as it is, in its natural state. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain GCP&#39;s architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cloud Functions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network tags are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are flow logs? Where are they enabled?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list buckets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Two ways to do that: $ gsutil ls $ gcloud alpha storage ls &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Compute metadata key allows you to run code at startup?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;startap-script &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands does? `gcloud deployment-manager deployments create`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a set of tools to help developers write, run and debug GCP kubernetes based applications. It provides built-in support for rapid iteration, debugging and running applications in development and production K8s environments. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GKE&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is the managed kubernetes service on GCP for deploying, managing and scaling containerised applications using Google infrastructure. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h3&gt;Anthos&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a managed application platform for organisations like enterprises that require quick modernisation and certain levels of consistency for their legacy applications in a hybrid or multicloud world. From this explanation the core ideas can be drawn from these statements; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Managed -&amp;gt; the customer does not need to worry about the underlying software intergrations, they just enable the API.&lt;/li&gt; &#xA;   &lt;li&gt;application platform -&amp;gt; It consists of open source tools like K8s, Knative, Istio and Tekton&lt;/li&gt; &#xA;   &lt;li&gt;Enterprises -&amp;gt; these are usually organisations with complex needs&lt;/li&gt; &#xA;   &lt;li&gt;Consistency -&amp;gt; to have the same policies declaratively initiated to be run anywhere securely e.g on-prem, GCP or other-clouds (AWS or Azure)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fun fact: Anthos is flower in greek, they grow in the ground (earth) but need rain from the clouds to flourish. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List the technical components that make up Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Infrastructure management - Google Kubernetes Engine (GKE)&lt;/li&gt; &lt;li&gt;Cluster management - GKE, Ingress for Anthos&lt;/li&gt; &lt;li&gt;Service management - Anthos Service Mesh&lt;/li&gt; &lt;li&gt;Policy enforcement - Anthos Config Management, Anthos Enterprise Data Protection, Policy Controller&lt;/li&gt; &lt;li&gt;Application deployment - CI/CD tools like Cloud Build, GitLab&lt;/li&gt; &lt;li&gt;Application development - Cloud Code &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the primary computing environment for Anthos to easily manage workload deployment?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Kubernetes Engine (GKE) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos handle the control plane and node components for GKE?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On GCP the kubernetes api-server is the only control plane component exposed to customers whilst compute engine manages instances in the project. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which load balancing options are available?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Networking load balancing for L4 and HTTP(S) Load Balancing for L7 which are both managed services that do not require additional configuration.&lt;/li&gt; &lt;li&gt;Ingress for Anthos which allows the ability to deploy a load balancer that serves an application across multiple clusters on GKE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you deploy Anthos on AWS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Yes, Anthos on AWS is now GA. For more read &lt;a href=&#34;https://cloud.google.com/anthos/gke/docs/aws&#34;&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain the enterprise security capabilities provided by Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Control plane security - GCP manages and maintains the K8s control plane out of the box. The user can secure the api-server by using master authorized networks and private clusters. These allow the user to disable access on the public IP address by assigning a private IP address to the master.&lt;/li&gt; &lt;li&gt;Node security - By default workloads are provisioned on Compute engine instances that use Google&#39;s Container Optimised OS. This operating system implements a locked-down firewall, limited user accounts with root disabled and a read-only filesystem. There is a further option to enable GKE Sandbox for stronger isolation in multi-tenant deployment scenarios.&lt;/li&gt; &lt;li&gt;Network security - Within a created cluster VPC, Anthos GKE leverages a powerful software-defined network that enables simple Pod-to-Pod communications. Network policies allow locking down ingress and egress connections in a given namespace. Filtering can also be implemented to incoming load-balanced traffic for services that require external access, by supplying whitelisted CIDR IP ranges.&lt;/li&gt; &lt;li&gt;Workload security - Running workloads run with limited privileges, default Docker AppArmor security policies are applied to all Kubernetes Pods. Workload identity for Anthos GKE aligns with the open source kubernetes service accounts with GCP service account permissions.&lt;/li&gt; &lt;li&gt;Audit logging - Adminstrators are given a way to retain, query, process and alert on events of the deployed environments. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can workloads deployed on Anthos GKE on-prem clusters securely connect to Google Cloud services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Cloud Virtual Private Network (Cloud VPN) - this is for secure networking&lt;/li&gt; &lt;li&gt;Google Cloud Key Management Service (Cloud KMS) - for key management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Island Mode configuration with regards to networking in Anthos GKE deployed on-prem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;This is when pods can directly talk to each other within a cluster, but cannot be reached from outside the cluster thus forming an &#34;island&#34; within the network that is not connected to the external network. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Anthos Config Management&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is a core component of the Anthos stack which provides platform, service and security operators with a single, unified approach to multi-cluster management that spans both on-premises and cloud environments. It closely follows K8s best practices, favoring declarative approaches over imperative operations, and actively monitors cluster state and applies the desired state as defined in Git. It includes three key components as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An importer that reads from a central Git repository&lt;/li&gt; &lt;li&gt;A component that synchronises stored configuration data into K8s objects&lt;/li&gt; &lt;li&gt;A component that monitors drift between desired and actual cluster configurations with a capability of reconciliation when need rises. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Config Management help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It follows common modern software development practices which makes cluster configuration, management and policy changes auditable, revertable, and versionable easily enforcing IT governance and unifying resource management in an organisation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is a suite of tools that assist in monitoring and managing deployed services on Anthos of all shapes and sizes whether running in cloud, hybrid or multi-cloud environments. It leverages the APIs and core components from Istio, a highly configurable and open-source service mesh platform. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the two main components of Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data plane - it consists of a set of distributed proxies that mediate all inbound and outbound network traffic between individual services which are configured using a centralised control plane and an open API&lt;/li&gt; &lt;li&gt;Control plane - is a fully managed offering outside of Anthos GKE clusters to simplify management overhead and ensure highest possible availability. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of the managed control plane of Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic Director - it is GCP&#39;s fully managed service mesh traffic control plane, responsible for translating Istio API objects into configuration information for the distributed proxies, as well as directing service mesh ingress and egress traffic&lt;/li&gt; &lt;li&gt;Managed CA - is a centralised certificate authority responsible for providing SSL certificates to each of the distributed proxies, authentication information and distributing secrets&lt;/li&gt; &lt;li&gt;Operations tooling - formerly stackdriver, provides a managed ingestion point for observability and telemetry, specifically monitoring, tracing and logging data generated by each of the proxies. This powers the observability dashboard for operators to visually inspect their services and service dependencies assisting in the implementation of SRE best practices for monitoring SLIs and establishing SLOs. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Service Mesh help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Tool and technology integration that makes up Anthos service mesh delivers signficant operational benefits to Anthos environments, with minimal additional overhead such as follows: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Uniform observability - the data plane reports service to service communication back to the control plane generating a service dependency graph. Traffic inspection by the proxy inserts headers to facilitate distributed tracing, capturing and reporting service logs together with service-level metrics (i.e latency, errors, availability).&lt;/li&gt; &lt;li&gt;Operational agility - fine-grained controls for managing the flow of inter-mesh (north-south) and intra-mesh (east-west) traffic are provided.&lt;/li&gt; &lt;li&gt;Policy-driven security - policies can be enforced consistently across diverse protocols and runtimes as service communications are secured by default. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List possible use cases of traffic controls that can be implemented within Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic splitting across differing service versions for canary or A/B testing&lt;/li&gt; &lt;li&gt;Circuit breaking to prevent cascading failures&lt;/li&gt; &lt;li&gt;Fault injection to help build resilient and fault-tolerant deployments&lt;/li&gt; &lt;li&gt;HTTP header-based traffic steering between individual services or versions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Run for Anthos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It is part of the Anthos stack that brings a serverless container experience to Anthos, offering a high-level platform experience on top of K8s clusters. It is built with Knative, an open-source operator for K8s that brings serverless application serving and eventing capabilities. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Cloud Run for Anthos simplify operations?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Platform teams in organisations that wish to offer developers additional tools to test, deploy and run applications can use Knative to enhance this experience on Anthos as Cloud Run. Below are some of the benefits;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Easy migration from K8s deployments - Without Cloud Run, platform engineers have to configure deployment, service, and HorizontalPodAutoscalers(HPA) objects to a loadbalancer and autoscaling. If application is already serving traffic it becomes hard to change configurations or roll back efficiently. Using Cloud Run all this is managed thus the Knative service manifest describes the application to be autoscaled and loadbalanced&lt;/li&gt; &lt;li&gt;Autoscaling - a sudden traffic spike may cause application containers in K8s to crash due to overload thus an efficient automated autoscaling is executed to serve the high volume of traffic&lt;/li&gt; &lt;li&gt;Networking - it has built-in load balancing capabilities and policies for traffic splitting between multiple versions of an application.&lt;/li&gt; &lt;li&gt;Releases and rollouts - supports the notion of the Knatibe API&#39;s revisions which describe new versions or different configurations of your application and canary deployments by splitting traffic.&lt;/li&gt; &lt;li&gt;Monitoring - observing and recording metrics such as latency, error rate and requests per second. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain three high-level out of the box autoscaling primitives offered by Cloud Run for Anthos that do not exist in K8s natively&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Rapid, request-based autoscaling - default autoscalers monitor request metrics which allows Cloud Run for Anthos to handle spiky traffic patterns smoothly&lt;/li&gt; &lt;li&gt;Concurrency controls - limits such as max in-flight requests per container are enforced to ensure the container does not become overloaded and crash. More containers are added to handle the spiky traffic, buffering the requests.&lt;/li&gt; &lt;li&gt;Scale to zero - if an application is inactive for a while Cloud Run scales it down to zero to reduce its footprint. Alternatively one can turn off scale-to-zero to prevent cold starts. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List some Cloud Run for Anthos use cases&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As it does not support stateful applications or sticky sessions, it is suitable for running stateless applications such as:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Machine learning model predictions e.g Tensorflow serving containers&lt;/li&gt; &lt;li&gt;API gateways, API middleware, web front ends and Microservices&lt;/li&gt; &lt;li&gt;Event handlers, ETL &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;OpenStack&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you tell me what each of the following services/projects is responsible for?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nova&lt;/li&gt; &#xA;   &lt;li&gt;Neutron&lt;/li&gt; &#xA;   &lt;li&gt;Cinder&lt;/li&gt; &#xA;   &lt;li&gt;Glance&lt;/li&gt; &#xA;   &lt;li&gt;Keystone&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova - Manage virtual instances&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Keystone - Authentication service across the cloud &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy or snapshot instances&lt;/li&gt; &#xA;   &lt;li&gt;GUI for viewing and modifying resources&lt;/li&gt; &#xA;   &lt;li&gt;Block Storage&lt;/li&gt; &#xA;   &lt;li&gt;Manage virtual instances&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance - Images Service. Also used for copying or snapshot instances&lt;/li&gt; &lt;li&gt;Horizon - GUI for viewing and modifying resources&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Nova - Manage virtual instances &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tenant/project?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Determine true or false: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenStack is free to use&lt;/li&gt; &#xA;   &lt;li&gt;The service responsible for networking is Glance&lt;/li&gt; &#xA;   &lt;li&gt;The purpose of tenant/project is to share resources between different projects and users of OpenStack&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how you bring up an instance with a floating IP&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from a customer saying: &#34;I can ping my instance but can&#39;t connect (ssh) it&#34;. What might be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Deployment &amp;amp; TripleO&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you deployed OpenStack in the past? If yes, can you describe how you did it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with TripleO? How is it different from Devstack or Packstack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read about TripleO right &lt;a href=&#34;https://docs.openstack.org/tripleo-docs/latest&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Nova in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Used to provision and manage virtual instances&lt;/li&gt; &lt;li&gt;It supports Multi-Tenancy in different levels - logging, end-user control, auditing, etc.&lt;/li&gt; &lt;li&gt;Highly scalable&lt;/li&gt; &lt;li&gt;Authentication can be done using internal system or LDAP&lt;/li&gt; &lt;li&gt;Supports multiple types of block storage&lt;/li&gt; &lt;li&gt;Tries to be hardware and hypervisor agnostice &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about Nova architecture and components?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - the server which serves metadata and compute APIs&lt;/li&gt; &lt;li&gt;the different Nova components communicate by using a queue (Rabbitmq usually) and a database&lt;/li&gt; &lt;li&gt;a request for creating an instance is inspected by nova-scheduler which determines where the instance will be created and running&lt;/li&gt; &lt;li&gt;nova-compute is the component responsible for communicating with the hypervisor for creating the instance and manage its lifecycle &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Neutron in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;One of the core component of OpenStack and a standalone project&lt;/li&gt; &lt;li&gt;Neutron focused on delivering networking as a service&lt;/li&gt; &lt;li&gt;With Neutron, users can set up networks in the cloud and configure and manage a variety of network services&lt;/li&gt; &lt;li&gt;Neutron interacts with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Keystone - authorize API calls&lt;/li&gt; &#xA;     &lt;li&gt;Nova - nova communicates with neutron to plug NICs into a network&lt;/li&gt; &#xA;     &lt;li&gt;Horizon - supports networking entities in the dashboard and also provides topology view which includes networking details &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;neutron-dhcp-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-l3-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-metering-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-*-agtent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-server&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;neutron-l3-agent - L3/NAT forwarding (provides external network access for VMs for example)&lt;/li&gt; &lt;li&gt;neutron-dhcp-agent - DHCP services&lt;/li&gt; &lt;li&gt;neutron-metering-agent - L3 traffic metering&lt;/li&gt; &lt;li&gt;neutron-*-agtent - manages local vSwitch configuration on each compute (based on chosen plugin)&lt;/li&gt; &lt;li&gt;neutron-server - exposes networking API and passes requests to other plugins if required &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain these network types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Network&lt;/li&gt; &#xA;   &lt;li&gt;Guest Network&lt;/li&gt; &#xA;   &lt;li&gt;API Network&lt;/li&gt; &#xA;   &lt;li&gt;External Network&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Management Network - used for internal communication between OpenStack components. Any IP address in this network is accessible only within the datacetner&lt;/li&gt; &lt;li&gt;Guest Network - used for communication between instances/VMs&lt;/li&gt; &lt;li&gt;API Network - used for services API communication. Any IP address in this network is publicly accessible&lt;/li&gt; &lt;li&gt;External Network - used for public communication. Any IP address in this network is accessible by anyone on the internet &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which order should you remove the following entities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many reasons for that. One for example: you can&#39;t remove router if there are active ports assigned to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a provider network?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L2 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L3 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack - Glance&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Glance in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance is the OpenStack image service&lt;/li&gt; &lt;li&gt;It handles requests related to instances disks and images&lt;/li&gt; &lt;li&gt;Glance also used for creating snapshots for quick instances backups&lt;/li&gt; &lt;li&gt;Users can use Glance to create new images or upload existing ones &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Glance architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;glance-api - responsible for handling image API calls such as retrieval and storage. It consists of two APIs: 1. registry-api - responsible for internal requests 2. user API - can be accessed publicly&lt;/li&gt; &lt;li&gt;glance-registry - responsible for handling image metadata requests (e.g. size, type, etc). This component is private which means it&#39;s not available publicly&lt;/li&gt; &lt;li&gt;metadata definition service - API for custom metadata&lt;/li&gt; &lt;li&gt;database - for storing images metadata&lt;/li&gt; &lt;li&gt;image repository - for storing images. This can be a filesystem, swift object storage, HTTP, etc. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Swift&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Swift in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift is Object Store service and is an highly available, distributed and consistent store designed for storing a lot of data&lt;/li&gt; &lt;li&gt;Swift is distributing data across multiple servers while writing it to multiple disks&lt;/li&gt; &lt;li&gt;One can choose to add additional servers to scale the cluster. All while swift maintaining integrity of the information and data replications. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can users store by default an object of 100GB in size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not by default. Object Storage API limits the maximum to 5GB per object but it can be adjusted. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to Swift: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Container&lt;/li&gt; &#xA;   &lt;li&gt;Account&lt;/li&gt; &#xA;   &lt;li&gt;Object&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Container - Defines a namespace for objects.&lt;/li&gt; &lt;li&gt;Account - Defines a namespace for containers&lt;/li&gt; &lt;li&gt;Object - Data content (e.g. image, document, ...) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? there can be two objects with the same name in the same container but not in two different containers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Two objects can have the same name if they are in different containers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack - Cinder&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cinder in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Cinder is OpenStack Block Storage service&lt;/li&gt; &lt;li&gt;It basically provides used with storage resources they can consume with other services such as Nova&lt;/li&gt; &lt;li&gt;One of the most used implementations of storage supported by Cinder is LVM&lt;/li&gt; &lt;li&gt;From user perspective this is transparent which means the user doesn&#39;t know where, behind the scenes, the storage is located or what type of storage is used &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Cinder&#39;s components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cinder-api - receives API requests&lt;/li&gt; &lt;li&gt;cinder-volume - manages attached block devices&lt;/li&gt; &lt;li&gt;cinder-scheduler - responsible for storing volumes &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe the following concepts in regards to Keystone? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Role&lt;/li&gt; &#xA;   &lt;li&gt;Tenant/Project&lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Endpoint&lt;/li&gt; &#xA;   &lt;li&gt;Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Role - A list of rights and privileges determining what a user or a project can perform&lt;/li&gt; &lt;li&gt;Tenant/Project - Logical representation of a group of resources isolated from other groups of resources. It can be an account, organization, ...&lt;/li&gt; &lt;li&gt;Service - An endpoint which the user can use for accessing different resources&lt;/li&gt; &lt;li&gt;Endpoint - a network address which can be used to access a certain OpenStack service&lt;/li&gt; &lt;li&gt;Token - Used for access resources while describing which resources can be accessed by using a scope &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the properties of a service? In other words, how a service is identified?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Name&lt;/li&gt; &lt;li&gt;ID number&lt;/li&gt; &lt;li&gt;Type&lt;/li&gt; &lt;li&gt;Description &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: - PublicURL - InternalURL - AdminURL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;PublicURL - Publicly accessible through public internet&lt;/li&gt; &lt;li&gt;InternalURL - Used for communication between services&lt;/li&gt; &lt;li&gt;AdminURL - Used for administrative management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a service catalog?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A list of services and their endpoints &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Services&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe each of the following services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swift&lt;/li&gt; &#xA;   &lt;li&gt;Sahara&lt;/li&gt; &#xA;   &lt;li&gt;Ironic&lt;/li&gt; &#xA;   &lt;li&gt;Trove&lt;/li&gt; &#xA;   &lt;li&gt;Aodh&lt;/li&gt; &#xA;   &lt;li&gt;Ceilometer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift - highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &lt;li&gt;Sahara - Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Ironic - Bare Metal Provisioning&lt;/li&gt; &lt;li&gt;Trove - Database as a service that runs on OpenStack&lt;/li&gt; &lt;li&gt;Aodh - Alarms Service&lt;/li&gt; &lt;li&gt;Ceilometer - Track and monitor usage &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database as a service which runs on OpenStack&lt;/li&gt; &#xA;   &lt;li&gt;Bare Metal Provisioning&lt;/li&gt; &#xA;   &lt;li&gt;Track and monitor usage&lt;/li&gt; &#xA;   &lt;li&gt;Alarms Service&lt;/li&gt; &#xA;   &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &#xA;   &lt;li&gt;highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as a service which runs on OpenStack - Trove&lt;/li&gt; &lt;li&gt;Bare Metal Provisioning - Ironic&lt;/li&gt; &lt;li&gt;Track and monitor usage - Ceilometer&lt;/li&gt; &lt;li&gt;Alarms Service - Aodh&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters - Sahara&lt;/li&gt; &lt;li&gt;highly available, distributed, eventually consistent object/blob store - Swift &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Keystone service in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can&#39;t have OpenStack deployed without Keystone&lt;/li&gt; &lt;li&gt;It Provides identity, policy and token services &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The authentication provided is for both users and services&lt;/li&gt; &#xA;     &lt;li&gt;The authorization supported is token-based and user-based.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;There is a policy defined based on RBAC stored in a JSON file and each line in that file defines the level of access to apply &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Keystone architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;There is a service API and admin API through which Keystone gets requests&lt;/li&gt; &lt;li&gt;Keystone has four backends: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Token Backend - Temporary Tokens for users and services&lt;/li&gt; &#xA;     &lt;li&gt;Policy Backend - Rules management and authorization&lt;/li&gt; &#xA;     &lt;li&gt;Identity Backend - users and groups (either standalone DB, LDAP, ...)&lt;/li&gt; &#xA;     &lt;li&gt;Catalog Backend - Endpoints&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It has pluggable environment where you can integrate with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LDAP&lt;/li&gt; &#xA;     &lt;li&gt;KVS (Key Value Store)&lt;/li&gt; &#xA;     &lt;li&gt;SQL&lt;/li&gt; &#xA;     &lt;li&gt;PAM&lt;/li&gt; &#xA;     &lt;li&gt;Memcached &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the Keystone authentication process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keystone gets a call/request and checks whether it&#39;s from an authorized user, using username, password and authURL&lt;/li&gt; &lt;li&gt;Once confirmed, Keystone provides a token.&lt;/li&gt; &lt;li&gt;A token contains a list of user&#39;s projects so there is no to authenticate every time and a token can submitted instead &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Compute (Nova)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following does?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nova-api&lt;/li&gt; &#xA;   &lt;li&gt;nova-compuate&lt;/li&gt; &#xA;   &lt;li&gt;nova-conductor&lt;/li&gt; &#xA;   &lt;li&gt;nova-cert&lt;/li&gt; &#xA;   &lt;li&gt;nova-consoleauth&lt;/li&gt; &#xA;   &lt;li&gt;nova-scheduler&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - responsible for managing requests/calls&lt;/li&gt; &lt;li&gt;nova-compute - responsible for managing instance lifecycle&lt;/li&gt; &lt;li&gt;nova-conductor - Mediates between nova-compute and the database so nova-compute doesn&#39;t access it directly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of Nova proxies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova-novncproxy - Access through VNC connections&lt;/li&gt; &lt;li&gt;Nova-spicehtml5proxy - Access through SPICE&lt;/li&gt; &lt;li&gt;Nova-xvpvncproxy - Access through a VNC connection &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Horizon&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Horizon in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Django-based project focusing on providing an OpenStack dashboard and the ability to create additional customized dashboards&lt;/li&gt; &lt;li&gt;You can use it to access the different OpenStack services resources - instances, images, networks, ... &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;By accessing the dashboard, users can use it to list, create, remove and modify the different resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It&#39;s also highly customizable and you can modify or add to it based on your needs &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell about Horizon architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;API is backward compatible&lt;/li&gt; &lt;li&gt;There are three type of dashboards: user, system and settings&lt;/li&gt; &lt;li&gt;It provides core support for all OpenStack core projects such as Neutron, Nova, etc. (out of the box, no need to install extra packages or plugins)&lt;/li&gt; &lt;li&gt;Anyone can extend the dashboards and add new components&lt;/li&gt; &lt;li&gt;Horizon provides templates and core classes from which one can build its own dashboard &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Puppet? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Module&lt;/li&gt; &#xA;   &lt;li&gt;Manifest&lt;/li&gt; &#xA;   &lt;li&gt;Node&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Facter&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MCollective?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Elastic&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The Elastic Stack consists of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Elasticsearch&lt;/li&gt; &#xA;   &lt;li&gt;Kibana&lt;/li&gt; &#xA;   &lt;li&gt;Logstash&lt;/li&gt; &#xA;   &lt;li&gt;Beats&lt;/li&gt; &#xA;   &lt;li&gt;Elastic Hadoop&lt;/li&gt; &#xA;   &lt;li&gt;APM Server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Elasticserach, Logstash and Kibana are also known as the ELK stack. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Logstash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://logit.io/blog/post/the-top-50-elk-stack-and-elasticsearch-interview-questions&#34;&gt;blog&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Logstash is a powerful, flexible pipeline that collects, enriches and transports data. It works as an extract, transform &amp;amp; load (ETL) tool for collecting log messages.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what beats are&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Beats are lightweight data shippers. These data shippers installed on the client where the data resides. Examples of beats: Filebeat, Metricbeat, Auditbeat. There are much more.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe what happens from the moment an app logged some information until it&#39;s displayed to the user in a dashboard when the Elastic stack is used&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The process may vary based on the chosen architecture and the processing you may want to apply to the logs. One possible workflow is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;The data logged by the application is picked by filebeat and sent to logstash&lt;/li&gt; &lt;li&gt;Logstash process the log based on the defined filters. Once done, the output is sent to Elasticsearch&lt;/li&gt; &lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt; &lt;li&gt;The user creates visualizations in Kibana which based on the indexed data&lt;/li&gt; &lt;li&gt;The user creates a dashboard which composed out of the visualization created in the previous step &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h5&gt;Elasticsearch&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a data node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is where data is stored and also where different processing takes place (e.g. when you search for a data). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a master node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Par of a master node responsibilites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track the status of all the nodes in the cluster&lt;/li&gt; &#xA;   &lt;li&gt;Verify replicas are working and the data is available from every data node.&lt;/li&gt; &#xA;   &lt;li&gt;No hot nodes (no data node that works much harder than other nodes)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;While there can be multiple master nodes in reality only of them is the elected master node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an ingest node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A node which responsible for parsing the data. In case you don&#39;t use logstash then this node can recieve data from beats and parse it, similarly to how it can be parsed in Logstash. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Coordinating node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A Coordinating node responsible for routing requests out and in to the cluser (data nodes). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How data is stored in elasticsearch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data is stored in an index&lt;/li&gt; &lt;li&gt;The index is spread across the cluster using shards &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt; You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt; &lt;p&gt;The official docs also offer a great explanation (in general, it&#39;s really good documentation, as every project should have):&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Shards&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt; This allows Elasticsearch to scale to an entire cluster of servers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Document?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL. As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check the health of your elasticsearch cluster and it&#39;s red. What does it mean? What can cause the status to be yellow instead of green?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Red means some data is unavailable. Yellow can be caused by running single node cluster instead of multi-node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;_index&lt;/li&gt; &lt;li&gt;_id&lt;/li&gt; &lt;li&gt;_type &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Mapping&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can optimize fields for partial matching&lt;/li&gt; &lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt; &lt;li&gt;You can perform language-specific analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Replicas&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In a network/cloud environment where failures can be expected any time, it is very useful and highly recommended to have a failover mechanism in case a shard/node somehow goes offline or disappears for whatever reason. To this end, Elasticsearch allows you to make one or more copies of your index’s shards into what are called replica shards, or replicas for short. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check &#34;Current Phase&#34; under &#34;Index lifecycle management&#34; and you see it&#39;s set to &#34;hot&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;The index is actively being written to&#34;. More about the phases &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/7.6/ilm-policy-definition.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;curl -X PUT &#34;localhost:9200/customer/_doc/1?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;{ &#34;name&#34;: &#34;John Doe&#34; }&#39;&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It creates customer index if it doesn&#39;t exists and adds a new document with the field name which is set to &#34;John Dow&#34;. Also, if it&#39;s the first document it will get the ID 1. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will happen if you run the previous command twice? What about running it 100 times?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;If name value was different then it would update &#34;name&#34; to the new value&lt;/li&gt; &lt;li&gt;In any case, it bumps version field by one &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Bulk API? What would you use it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bulk API is used when you need to index multiple documents. For high number of documents it would be significantly faster to use rather than individual requests since there are less network roundtrips. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Query DSL&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;p&gt;&#34;In the query context, a query clause answers the question “How well does this document match this query clause?” Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;In a filter context, a query clause answers the question “Does this document match this query clause?” The answer is a simple Yes or No — no scores are calculated. Filter context is mostly used for filtering structured data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt; A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Logstash&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt; &lt;li&gt;Filter Plugins - processing data&lt;/li&gt; &lt;li&gt;Output Plugins - push data to different outputs/services/platforms &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is grok?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A logstash plugin which modifies information in one format and immerse it in another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How grok works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What grok patterns are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is `_grokparsefailure?`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you test or debug grok patterns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash Codecs? What codecs are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Kibana&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Discover&#34; in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The raw data as it is stored in the index. You can search and filter it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You see in Kibana, after clicking on Discover, &#34;561 hits&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Total number of documents matching the search results. If not query used then simply the total number of documents. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Visualize&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Visualize&#34; is where you can create visual representations for your data (pie charts, graphs, ...) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Filebeat&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If one is using ELK, is it a must to also use filebeat? In what scenarios it&#39;s useful to use filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a harvester?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read &lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/how-filebeat-works.html#harvester&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? a single harvester harvest multiple files, according to the limits set in filebeat.yml&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. One harvester harvests one file. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are filebeat modules?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Elastic Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you secure an Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can generate certificates with the provided elastic utils and change configuration to enable security using certificates model. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distributed&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to Martin Kleppmann:&lt;/p&gt; &lt;p&gt;&#34;Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another definition: &#34;Systems that are physically separated, but logically connected&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can cause a system to fail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Network&lt;/li&gt; &lt;li&gt;CPU&lt;/li&gt; &lt;li&gt;Memory&lt;/li&gt; &lt;li&gt;Disk &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is &#34;CAP theorem&#34;? (aka as Brewer&#39;s theorem)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to the CAP theorem, it&#39;s not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Availability: Every request receives a response (it doesn&#39;t has to be the most recent data)&lt;/li&gt; &lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt; &lt;li&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_standby.png&#34; width=&#34;500x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 1. The transition can take time. In other words, noticeable downtime. 2. Standby server is a waste of resources - if first application server is running then the standby does nothing &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_lb.png&#34; width=&#34;700x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Issues: If load balancer dies , we lose the ability to communicate with the application. &lt;p&gt;Ways to improve:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Add another load balancer&lt;/li&gt; &lt;li&gt;Use DNS A record for both load balancers&lt;/li&gt; &lt;li&gt;Use message queue &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Shared-Nothing&#34; architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Sidecar Pattern (Or sidecar proxy)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Highly Available &#34;Hello World&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/ha_hello_world.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/solutions/ha_hello_world.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you type in a URL in an address bar in a browser?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The browser searches for the record of the domain name IP address in the DNS in the following order:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browser cache&lt;/li&gt; &#xA;   &lt;li&gt;Operating system cache&lt;/li&gt; &#xA;   &lt;li&gt;The DNS server configured on the user&#39;s system (can be ISP DNS, public DNS, ...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;If it couldn&#39;t find a DNS record locally, a full DNS resolution is started.&lt;/li&gt; &#xA;   &lt;li&gt;It connects to the server using the TCP protocol&lt;/li&gt; &#xA;   &lt;li&gt;The browser sends an HTTP request to the server&lt;/li&gt; &#xA;   &lt;li&gt;The server sends an HTTP response back to the browser&lt;/li&gt; &#xA;   &lt;li&gt;The browser renders the response (e.g. HTML)&lt;/li&gt; &#xA;   &lt;li&gt;The browser then sends subsequent requests as needed to the server to get the embedded links, javascript, images in the HTML and then steps 3 to 5 are repeated.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: add more details! &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is an API&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;I like this definition from &lt;a href=&#34;https://blog.christianposta.com/microservices/api-gateways-are-going-through-an-identity-crisis&#34;&gt;blog.christianposta.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An explicitly and purposefully defined interface designed to be invoked over a network that enables software developers to get programmatic access to data and functionality within an organization in a controlled and comfortable way.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an API specification?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? API Definition is the same as API Specification&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API definition is similar to an API specification in that it provides an understanding of how an API is organized and how the API functions. But the API definition is aimed at machine consumption instead of human consumption of APIs.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Payload in API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Automation? How it&#39;s related or different from Orchestration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Automation is the act of automating tasks to reduce human intervention or interaction in regards to IT technology and systems.&lt;br&gt; While automation focuses on a task level, Orchestration is the process of automating processes and/or workflows which consists of multiple tasks that usually across multiple systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me about interesting bugs you&#39;ve found and also fixed&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Debuggger and how it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What services an application might have?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Authorization&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Authentication&lt;/li&gt; &lt;li&gt;Ordering&lt;/li&gt; &lt;li&gt;Front-end&lt;/li&gt; &lt;li&gt;Back-end ... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Metadata?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data about data. Basically, it describes the type of information that an underlying data will hold. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can use one of the following formats: JSON, YAML, XML. Which one would you use? Why?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I can&#39;t answer this for you :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s KPI?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s DSL (Domain Specific Language)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Domain Specific Language (DSLs) are used to create a customised language that represents the domain such that domain experts can easily interpret it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s the difference between KPI and OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;YAML&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data serialization language used by many technologies today like Kubernetes, Ansible, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Any valid JSON file is also a valid YAML file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Because YAML is superset of JSON. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;{&#xA;    applications: [&#xA;        {&#xA;            name: &#34;my_app&#34;,&#xA;            language: &#34;python&#34;,&#xA;            version: 20.17&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; JSON &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;applications:&#xA;  - app: &#34;my_app&#34;&#xA;    language: &#34;python&#34;&#xA;    version: 20.17&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; YAML &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a multi-line string with YAML? What use cases is it good for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: |&#xA;  look mama&#xA;  I can write a multi-line string&#xA;  I love YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s good for use cases like writing a shell script where each line of the script is a different command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;someMultiLineString: |&lt;/code&gt; to &lt;code&gt;someMultiLineString: &amp;gt;&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;using &lt;code&gt;&amp;gt;&lt;/code&gt; will make the multi-line string to fold into a single line&lt;/p&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: &amp;gt;&#xA;  This is actually&#xA;  a single line&#xA;  do not let appearances fool you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are placeholders in YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;They allow you reference values instead of directly writing them and it is used like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;username: {{ my.user_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you define multiple YAML components in one file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using this: &lt;code&gt;---&lt;/code&gt; For Examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;document_number: 1&#xA;---&#xA;document_number: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firmware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a firmware&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Firmware&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In computing, firmware is a specific class of computer software that provides the low-level control for a device&#39;s specific hardware. Firmware, such as the BIOS of a personal computer, may contain basic functions of a device, and may provide hardware abstraction services to higher-level software such as operating systems.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customers and Service Providers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLO (service-level objective)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLA (service-level agreement)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Jira&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain/Demonstrate the following types in Jira: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Epic&lt;/li&gt; &#xA;   &lt;li&gt;Story&lt;/li&gt; &#xA;   &lt;li&gt;Task&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a project in Jira?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Kafka&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kafka?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Kafka, how to automatically balance brokers leadership of partitions in a cluster? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable auto leader election and reduce the imbalance percentage ratio&lt;/li&gt; &#xA;   &lt;li&gt;Manually rebalance by using kafkat&lt;/li&gt; &#xA;   &lt;li&gt;Configure group.initial.rebalance.delay.ms to 3000&lt;/li&gt; &#xA;   &lt;li&gt;All of the above&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cassandra&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When running a cassandra cluster, how often do you need to run nodetool repair in order to keep the cluster consistent? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Within the columnFamily GC-grace Once a week&lt;/li&gt; &#xA;   &lt;li&gt;Less than the compacted partition minimum bytes&lt;/li&gt; &#xA;   &lt;li&gt;Depended on the compaction strategy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;Server SYN+ACK&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;HTTP request&lt;/li&gt; &lt;li&gt;HTTP response &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It doesn&#39;t maintain state for incoming request. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It consists of:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Request line - request type&lt;/li&gt; &lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt; &lt;li&gt;Body (not always included) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;GET&lt;/li&gt; &lt;li&gt;POST&lt;/li&gt; &lt;li&gt;HEAD&lt;/li&gt; &lt;li&gt;PUT&lt;/li&gt; &lt;li&gt;DELETE&lt;/li&gt; &lt;li&gt;CONNECT&lt;/li&gt; &lt;li&gt;OPTIONS&lt;/li&gt; &lt;li&gt;TRACE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;1xx - informational&lt;/li&gt; &lt;li&gt;2xx - Success&lt;/li&gt; &lt;li&gt;3xx - Redirect&lt;/li&gt; &lt;li&gt;4xx - Error, client fault&lt;/li&gt; &lt;li&gt;5xx - Error, server fault &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get &#34;504 Gateway Timeout&#34; error from an HTTP server. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The server didn&#39;t receive a response from another server it communicates with in a timely manner. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is &#34;X-Forwarded-For&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X-Forwarded-For&#34;&gt;Wikipedia&lt;/a&gt;: &#34;The X-Forwarded-For (XFF) HTTP header field is a common method for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Load Balancers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer accepts (or denies) incoming network traffic from a client, and based on some criteria (application related, network, etc.) it distributes those communications out to servers (at least one). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why to used a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Scalability - using a load balancer, you can possibly add more servers in the backend to handle more requests/traffic from the clients, as opposed to using one server.&lt;/li&gt; &lt;li&gt;Redundancy - if one server in the backend dies, the load balancer will keep forwarding the traffic/requests to the second server so users won&#39;t even notice one of the servers in the backend is down. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What load balancer techniques/algorithms are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Round Robin&lt;/li&gt; &lt;li&gt;Weighted Round Robin&lt;/li&gt; &lt;li&gt;Least Connection&lt;/li&gt; &lt;li&gt;Weighted Least Connection&lt;/li&gt; &lt;li&gt;Resource Based&lt;/li&gt; &lt;li&gt;Fixed Weighting&lt;/li&gt; &lt;li&gt;Weighted Response Time&lt;/li&gt; &lt;li&gt;Source IP Hash&lt;/li&gt; &lt;li&gt;URL Hash &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of round robin algorithm in load balancing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A simple round robin algorithm knows nothing about the load and the spec of each server it forwards the requests to. It is possible, that multiple heavy workloads requests will get to the same server while other servers will got only lightweight requests which will result in one server doing most of the work, maybe even crashing at some point because it unable to handle all the heavy workloads requests by its own.&lt;/li&gt; &lt;li&gt;Each request from the client creates a whole new session. This might be a problem for certain scenarios where you would like to perform multiple operations where the server has to know about the result of operation so basically, being sort of aware of the history it has with the client. In round robin, first request might hit server X, while second request might hit server Y and ask to continue processing the data that was processed on server X already. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which scenarios would you use ALB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;At what layers a load balancer can operate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;L4 and L7 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you perform load balancing without using a dedicated load balancer instance?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you can use DNS for performing load balancing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNS load balancing? What its advantages? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Load Balancers - Sticky Sessions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are sticky sessions? What are their pros and cons?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Recommended read:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://access.redhat.com/solutions/900933&#34;&gt;Red Hat Article&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Can cause uneven load on instance (since requests routed to the same instances) Pros:&lt;/li&gt; &lt;li&gt;Ensures in-proc sessions are not lost when a new request is created &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one use case for using sticky sessions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would like to make sure the user doesn&#39;t lose the current session data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What sticky sessions use for enabling the &#34;stickiness&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Cookies. There are application based cookies and duration based cookies. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain application-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the application and/or the load balancer&lt;/li&gt; &lt;li&gt;Usually allows to include custom data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain duration-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the load balancer&lt;/li&gt; &lt;li&gt;Session is not sticky anymore once the duration elapsed &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Load Balancers - Load Balancing Algorithms&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following load balancing techniques &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Resource Based&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Weighting&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Response Time&lt;/li&gt; &#xA;   &lt;li&gt;Source IP Hash&lt;/li&gt; &#xA;   &lt;li&gt;URL Hash&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain use case for connection draining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open, use connection draining. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. &lt;p&gt;The maximum timeout value can be set between 1 and 3,600 seconds on both GCP and AWS.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Licenses&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with &#34;Creative Commons&#34;? What do you know about it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the differences between copyleft and permissive licenses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Copyleft, any derivative work must use the same licensing while in permissive licensing there are no such condition. GPL-3 is an example of copyleft license while BSD is an example of permissive license. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Random&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a search engine works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How auto completion works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU cache. &lt;a href=&#34;https://www.enterprisestorageforum.com/hardware/cache-memory/&#34;&gt;Source&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a memory leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SSH HTTP DHCP DNS ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cache API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://idiallo.com/blog/c10k-2016&#34;&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage formats are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;File&lt;/li&gt; &lt;li&gt;Block&lt;/li&gt; &lt;li&gt;Object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage devices are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain IOPS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain storage throughput&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a filesystem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Dark Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Questions you CAN ask&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions-you-ask&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview. These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that&#39;s really up to you.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you like about working here?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt. Phrase the question in the light that all companies have the deal with this, but you want to see the current pain points they are dealing with &lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at setting expectations with projects. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why I should NOT join you? (or &#39;what you don&#39;t like about working here?&#39;)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What was your favorite project you&#39;ve worked on?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if you would enjoy working on projects like these. This is also a good way to see if the managers are allowing employees to learn and grow with projects outside of the normal work you&#39;d do. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company. Additionally, it can be a great way to show how you&#39;d be an asset to the team.&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you&#39;ve solved that in the past, you can show how you&#39;d be able to mitigate that problem. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Let&#39;s say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain white-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain black-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are unit tests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of tests would you run to test a web application?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain test harness?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is A/B testing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of tests: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load Testing&lt;/li&gt; &#xA;   &lt;li&gt;Stress Testing&lt;/li&gt; &#xA;   &lt;li&gt;Capacity Testing&lt;/li&gt; &#xA;   &lt;li&gt;Volume Testing&lt;/li&gt; &#xA;   &lt;li&gt;Endurance Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Board Tables&lt;/td&gt; &#xA;   &lt;td&gt;Relational DB Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/table_for_message_board_system.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/solutions/table_for_message_board_system.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a relational database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data Storage: system to store data in tables&lt;/li&gt; &lt;li&gt;SQL: programming language to manage relational databases&lt;/li&gt; &lt;li&gt;Data Definition Language: a standard syntax to create, alter and delete tables &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database must meet each of the four criteria&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the update is considered failed as a whole, and will not go through - the DB will revert back to it&#39;s original state before the update occurred. It should also be mentioned that Atomicity ensures that each transaction is completed as it&#39;s own stand alone &#34;unit&#34; - if any part fails, the whole statement fails.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you make a change to the DB, it shouldn&#39;t corrupt it. Consistency is upheld by checks and constraints that are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would not be executed&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen &#34;mid-update&#34; - as multiple transactions are running at the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt; &#xA; &lt;p&gt;For example, let&#39;s say that 20 other people were making changes to the database at the same time. At the time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should only see the 15 changes that had completed - you wouldn&#39;t see the database mid-update as the change goes through.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens (power failure, system crash, etc.). This means that all completed transactions must be recorded in non-volatile memory.&lt;/p&gt; &#xA; &lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB&#39;s can be ACID compliant depending on how they operate, but as a general rule of thumb, NoSQL DB&#39;s are not considered ACID compliant&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sharding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Sharding is a horizontal partitioning.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Are you able to explain what is it good for? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You find out your database became a bottleneck and users experience issues accessing data. How can you deal with such situation?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not much information provided as to why it became a bottleneck and what is current architecture, so one general approach could be&lt;br&gt; to reduce the load on your database by moving frequently-accessed data to in-memory structure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection pool?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it&#39;s used is to avoid an overhead of establishing a connection for every query done to a database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn&#39;t closed after being created and is no longer needed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Table Lock?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt; &lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt; &lt;li&gt;Check for table locks and kill irrelevant locking sessions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation&#39;s decision-making process&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a time-series database&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an index in a database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A database index is a data structure that improves the speed of operations in a table. Indexes can be created using one or more columns, providing the basis for both rapid random lookups and efficient ordering of access to records. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are there in relational databases?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Normalization&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data that is used multiple times in a database should be stored once and referenced with a foreign key.&lt;br&gt; This has the clear benefit of ease of maintenance where you need to change a value only in a single place to change it everywhere. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Primary Key and Foreign Key&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Primary Key: each row in every table should a unique identifier that represents the row.&lt;br&gt; Foreign Key: a reference to another table&#39;s primary key. This allows you to join table together to retrieve all the information you need without duplicating data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of data tables have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Primary data table: main data you care about&lt;/li&gt; &lt;li&gt;Details table: includes a foreign key and has one to many relationship&lt;/li&gt; &lt;li&gt;Lookup values table: can be one table per lookup or a table containing all the lookups and has one to many relationship&lt;/li&gt; &lt;li&gt;Multi reference table &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ORM? What benefits it provides in regards to relational databases usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34;&gt;Wikipedia&lt;/a&gt;: &#34;is a programming technique for converting data between incompatible type systems using object-oriented programming languages&#34;&lt;/p&gt; &lt;p&gt;In regards to the relational databases:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as code&lt;/li&gt; &lt;li&gt;Database abstraction&lt;/li&gt; &lt;li&gt;Encapsulates SQL complexity&lt;/li&gt; &lt;li&gt;Enables code review process&lt;/li&gt; &lt;li&gt;Enables usage as a native OOP structure &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DDL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In the context of SQL, data definition or data description language (DDL) is a syntax for creating and modifying database objects such as tables, indices, and users.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;p&gt;Given a text file, perform the following exercises&lt;/p&gt; &#xA;&lt;h4&gt;Extract&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract the first word of each line&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus: extract the last word of each line &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the IP addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract dates in the format of yyyy-mm-dd or yyyy-dd-mm&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract email addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Replace&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace tabs with four spaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace &#39;red&#39; with &#39;green&#39;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;System Design&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a &#34;Single point of failure&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;3-Tier Architecture&#34; (including pros and cons)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt; &lt;li&gt;Not designed for today&#39;s infrastructure (like public clouds)&lt;/li&gt; &lt;li&gt;Scaling a team to work monolithic architecture is more challenging &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of microoservices architecture over a monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Each of the services individually fail without escalating into an application-wide outage.&lt;/li&gt; &lt;li&gt;Each service can be developed and maintained by a separate team and this team can choose its own tools and coding language &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s a service mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh&#34;&gt;This article&lt;/a&gt; provides a great explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Loose Coupling&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a message queue? When is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Scalability&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Scalability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability easily grow in size and capacity based on demand and usage. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticity&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability to grow but also to reduce based on what is required &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Disaster Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Fault Tolerance and High Availability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Fault Tolerance - The ability to self-heal and return to normal capacity. Also the ability to withstand a failure and remain functional.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;High Availability - Being able to access a resource (in some use cases, using different platforms) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between high availability and Disaster Recovery?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.wintellect.com/high-availability-vs-disaster-recovery&#34;&gt;wintellect.com&lt;/a&gt;: &#34;High availability, simply put, is eliminating single points of failure and disaster recovery is the process of getting a system back to an operational state when a system is rendered inoperative. In essence, disaster recovery picks up when high availability fails, so HA first.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the disadvantages of Vertical Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With vertical scaling alone, the component still remains a single point of failure. In addition, it has hardware limit where if you don&#39;t have more resources, you might not be able to scale vertically. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which type of cloud services usually support vertical scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Databases, cache. It&#39;s common mostly for non-distributed systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the disadvantage of Horizontal Scaling? What is often required in order to perform Horizontal Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer. You can add more resources, but if you would like them to be part of the process, you have to serve them the requests/responses. Also, data inconsistency is a concern with horizontal scaling. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain in which use cases will you use vertical scaling and in which use cases you will use horizontal scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Resiliency and what ways are there to make a system more resilient&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Consistent Hashing&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/cdn-no-downtime.png&#34; width=&#34;300x;&#34; height=&#34;400px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_issue.png&#34; width=&#34;400x;&#34; height=&#34;300px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt; Instead of working in &#34;push mode&#34;, the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_fix.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/input-process-output.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Cache&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;cache&#34;? In which cases would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;distributed cache&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;cache replacement policy&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Take a look &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which cache replacement policies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can find a list &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following cache policies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIFO&lt;/li&gt; &#xA;   &lt;li&gt;LIFO&lt;/li&gt; &#xA;   &lt;li&gt;LRU&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about it &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why not writing everything to cache instead of a database/datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Migrations&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can mention:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward cut over dress rehearsals DNS redirection &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Branch by Abstraction&#34; technique&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Design a system&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a video streaming website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a photo upload website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you build a URL shortener?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;More System Design Questions&lt;/h4&gt; &#xA;&lt;p&gt;Additional exercises can be found in &lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;system-design-notebook repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/system_design_notebook.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a CPU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A central processing unit (CPU) performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics processing units (GPUs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;RAM (Random Access Memory) is the hardware in a computing device where the operating system (OS), application programs and data in current use are kept so they can be quickly reached by the device&#39;s processor. RAM is the main memory in a computer. It is much faster to read from and write to than other kinds of storage, such as a hard disk drive (HDD), solid-state drive (SSD) or optical drive. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An embedded system is a computer system - a combination of a computer processor, computer memory, and input/output peripheral devices—that has a dedicated function within a larger mechanical or electronic system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you give an example of an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Raspberry Pi &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is exactly Big Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As defined by Doug Laney:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Volume: Extremely large volumes of data&lt;/li&gt; &lt;li&gt;Velocity: Real time, batch, streams of data&lt;/li&gt; &lt;li&gt;Variety: Various forms of data, structured, semi-structured and unstructured&lt;/li&gt; &lt;li&gt;Veracity or Variability: Inconsistent, sometimes inaccurate, varying data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DataOps? How is it related to DevOps?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;DataOps seeks to reduce the end-to-end cycle time of data analytics, from the origin of ideas to the literal creation of charts, graphs and models that create value. DataOps combines Agile development, DevOps and statistical process controls and applies them to data analytics. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An answer from &lt;a href=&#34;https://www.talend.com/resources/what-is-data-architecture&#34;&gt;talend.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Data architecture is the process of standardizing how organizations collect, store, transform, distribute, and use data. The goal is to deliver relevant data to people who need it, when they need it, and help them make sense of it.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the different formats of data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Structured - data that has defined format and length (e.g. numbers, words)&lt;/li&gt; &lt;li&gt;Semi-structured - Doesn&#39;t conform to a specific format but is self-describing (e.g. XML, SWIFT)&lt;/li&gt; &lt;li&gt;Unstructured - does not follow a specific format (e.g. images, test messages) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_warehouse&#34;&gt;Wikipedia&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/data-warehouse&#34;&gt;Amazon&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Lake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_lake&#34;&gt;Data Lake - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain the difference between a data lake and a data warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Data Versioning&#34;? What models of &#34;Data Versioning&#34; are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ETL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Apache Hadoop&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hadoop&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Apache Hadoop - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop YARN&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Responsible for managing the compute resources in clusters and scheduling users&#39; applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop MapReduce&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A programming model for large-scale data processing &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop Distributed File Systems (HDFS)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Distributed file system providing high aggregate bandwidth across the cluster.&lt;/li&gt; &lt;li&gt;For a user it looks like a regular file system structure but behind the scenes it&#39;s distributed across multiple machines in a cluster&lt;/li&gt; &lt;li&gt;Typical file size is TB and it can scale and supports millions of files&lt;/li&gt; &lt;li&gt;It&#39;s fault tolerant which means it provides automatic recovery from faults&lt;/li&gt; &lt;li&gt;It&#39;s best suited for running long batch operations rather than live analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about HDFS architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;HDFS Architecture&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Master-slave architecture&lt;/li&gt; &lt;li&gt;Namenode - master, Datanodes - slaves&lt;/li&gt; &lt;li&gt;Files split into blocks&lt;/li&gt; &lt;li&gt;Blocks stored on datanodes&lt;/li&gt; &lt;li&gt;Namenode controls all metadata &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Ceph&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Ceph&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Ceph favor consistency and correctness over performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; True &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which services or types of storage Ceph supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Object (RGW)&lt;/li&gt; &lt;li&gt;Block (RBD)&lt;/li&gt; &lt;li&gt;File (CephFS) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RADOS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Reliable Autonomic Distributed Object Storage&lt;/li&gt; &lt;li&gt;Provides low-level data object storage service&lt;/li&gt; &lt;li&gt;Strong Consistency&lt;/li&gt; &lt;li&gt;Simplifies design and implementation of higher layers (block, file, object) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe RADOS software components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Monitor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Central authority for authentication, data placement, policy&lt;/li&gt; &#xA;     &lt;li&gt;Coordination point for all other cluster components&lt;/li&gt; &#xA;     &lt;li&gt;Protect critical cluster state with Paxos&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Manager &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregates real-time metrics (throughput, disk usage, etc.)&lt;/li&gt; &#xA;     &lt;li&gt;Host for pluggable management functions&lt;/li&gt; &#xA;     &lt;li&gt;1 active, 1+ standby per cluster&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OSD (Object Storage Daemon) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Stores data on an HDD or SSD&lt;/li&gt; &#xA;     &lt;li&gt;Services client IO requests &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are &#34;Placement Groups&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in the detail the following: Objects -&amp;gt; Pool -&amp;gt; Placement Groups -&amp;gt; OSDs&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OMAP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a metadata server? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Packer&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Packer? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In general, Packer automates machine images creation. It allows you to focus on configuration prior to deployment while making the images. This allows you start the instances much faster in most cases. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer follows a &#34;configuration-&amp;gt;deployment&#34; model or &#34;deployment-&amp;gt;configuration&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A configuration-&amp;gt;deployment which has some advantages like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Deployment Speed - you configure once prior to deployment instead of configuring every time you deploy. This allows you to start instances/services much quicker.&lt;/li&gt; &lt;li&gt;More immutable infrastructure - with configuration-&amp;gt;deployment it&#39;s not likely to have very different deployments since most of the configuration is done prior to the deployment. Issues like dependencies errors are handled/discovered prior to deployment in this model. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Certificates&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a way to prepare for a certain exam this is the section for you. Here you&#39;ll find a list of certificates, each references to a separate file with focused questions that will help you to prepare to the exam. Good luck :)&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-cloud-practitioner.md&#34;&gt;Cloud Practitioner&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-solutions-architect-associate.md&#34;&gt;Solutions Architect Associate&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/azure-fundamentals-az-900.md&#34;&gt;AZ-900&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/cka.md&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other DevOps Projects&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/howtheydevops&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/how_they_devops.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_resources.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/infraverse&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/infraverse.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all of our amazing &lt;a href=&#34;https://github.com/bregman-arie/devops-exercises/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt; &#xA;&lt;p&gt;Logos credits can be found &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/credits.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>