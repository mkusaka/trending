<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-04T01:28:50Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jeremylong/DependencyCheck</title>
    <updated>2024-07-04T01:28:50Z</updated>
    <id>tag:github.com,2024-07-04:/jeremylong/DependencyCheck</id>
    <link href="https://github.com/jeremylong/DependencyCheck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP dependency-check is a software composition analysis utility that detects publicly disclosed vulnerabilities in application dependencies.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/org.owasp/dependency-check-maven&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.owasp/dependency-check-maven.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/jeremylong/DependencyCheck/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build and Deploy Snapshot&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/dependencycheck&#34;&gt;&lt;img src=&#34;https://img.shields.io/coverity/scan/1654.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/app/jeremylong/DependencyCheck?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=jeremylong/DependencyCheck&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/6b6021d481dc41a888c5da0d9ecf9494&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/843&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/843/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;Apache 2.0 License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.toolswatch.org/2018/05/black-hat-arsenal-usa-2018-the-w0w-lineup/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/toolswatch/badges/master/arsenal/usa/2018.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2015/06/black-hat-arsenal-usa-2015-speakers-lineup/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2015.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2014/06/black-hat-usa-2014-arsenal-tools-speaker-list/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2014.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2013/06/announcement-blackhat-arsenal-usa-2013-selected-tools/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2013.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dependency-Check&lt;/h1&gt; &#xA;&lt;p&gt;Dependency-Check is a Software Composition Analysis (SCA) tool that attempts to detect publicly disclosed vulnerabilities contained within a project&#39;s dependencies. It does this by determining if there is a Common Platform Enumeration (CPE) identifier for a given dependency. If found, it will generate a report linking to the associated CVE entries.&lt;/p&gt; &#xA;&lt;p&gt;Documentation and links to production binary releases can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/&#34;&gt;github pages&lt;/a&gt;. Additionally, more information about the architecture and ways to extend dependency-check can be found on the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;This product uses the NVD API but is not endorsed or certified by the NVD.&lt;/p&gt; &#xA;&lt;h2&gt;9.0.0 Upgrade Notice&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upgrading to 9.0.0 or later is mandatory&lt;/strong&gt;; previous versions of dependency-check utilize the NVD data feeds which will be deprecated on Dec 15th, 2023. Versions earlier then 9.0.0 are no longer supported and could fail to work after Dec 15th, 2023.&lt;/p&gt; &#xA;&lt;h3&gt;NVD API Key Highly Recommended&lt;/h3&gt; &#xA;&lt;p&gt;With 9.0.0 dependency-check has moved from using the NVD data-feed to the NVD API. Users of dependency-check are &lt;strong&gt;highly&lt;/strong&gt; encouraged to obtain an NVD API Key; see &lt;a href=&#34;https://nvd.nist.gov/developers/request-an-api-key&#34;&gt;https://nvd.nist.gov/developers/request-an-api-key&lt;/a&gt; Without an NVD API Key dependency-check&#39;s updates will be &lt;strong&gt;extremely slow&lt;/strong&gt;. Please see the documentation for the cli, maven, gradle, or ant integrations on how to set the NVD API key.&lt;/p&gt; &#xA;&lt;h4&gt;The NVD API Key, CI, and Rate Limiting&lt;/h4&gt; &#xA;&lt;p&gt;The NVD API has enforced rate limits. If you are using a single API KEY and multiple builds occur you could hit the rate limit and receive 403 errors. In a CI environment one must use a caching strategy.&lt;/p&gt; &#xA;&lt;h3&gt;Breaking Changes&lt;/h3&gt; &#xA;&lt;p&gt;9.0.0 contains breaking changes which requires updates to the database. If using an externally hosted database the schema will need to be updated. When using the embedded H2 database, the schema should be upgraded automatically. However, if issues arise you may need to purge the database:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gradle: &lt;code&gt;./gradlew dependencyCheckPurge&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;maven: &lt;code&gt;mvn org.owasp:dependency-check-maven:9.0.0:purge&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cli: &lt;code&gt;dependency-check.sh --purge&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Gradle build Environment&lt;/h4&gt; &#xA;&lt;p&gt;With 9.0.0 users may encounter issues with &lt;code&gt;NoSuchMethodError&lt;/code&gt; exceptions due to dependency resolution. If you encounter this issue you will need to pin some of the transitive dependencies of dependency-check to specific versions. For example:&lt;/p&gt; &#xA;&lt;p&gt;/buildSrc/build.gradle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;    constraints {&#xA;        // org.owasp.dependencycheck needs at least this version of jackson. Other plugins pull in older versions..&#xA;        add(&#34;implementation&#34;, &#34;com.fasterxml.jackson:jackson-bom:2.16.1&#34;)&#xA;&#xA;        // org.owasp.dependencycheck needs these versions. Other plugins pull in older versions..&#xA;        add(&#34;implementation&#34;, &#34;org.apache.commons:commons-lang3:3.14.0&#34;)&#xA;        add(&#34;implementation&#34;, &#34;org.apache.commons:commons-text:1.11.0&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Java Version&lt;/h3&gt; &#xA;&lt;p&gt;Minimum Java Version: Java 8 update 251&lt;/p&gt; &#xA;&lt;p&gt;While dependency-check 9.0.0 and higher will still run on Java 8 - the update version must be higher then 251.&lt;/p&gt; &#xA;&lt;h3&gt;Internet Access&lt;/h3&gt; &#xA;&lt;p&gt;OWASP dependency-check requires access to several externally hosted resources. For more information see &lt;a href=&#34;https://jeremylong.github.io/DependencyCheck/data/index.html&#34;&gt;Internet Access Required&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build Tools&lt;/h3&gt; &#xA;&lt;p&gt;In order to analyze some technology stacks dependency-check may require other development tools to be installed. Some of the analysis listed below may be experimental and require the experimental analyzers to be enabled.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To analyze .NET Assemblies the dotnet 8 run time or SDK must be installed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Assemblies targeting other run times can be analyzed - but 8 is required to run the analysis.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If analyzing GoLang projects &lt;code&gt;go&lt;/code&gt; must be installed.&lt;/li&gt; &#xA; &lt;li&gt;The analysis of &lt;code&gt;Elixir&lt;/code&gt; projects requires &lt;code&gt;mix_audit&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The analysis of &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt;, and &lt;code&gt;yarn&lt;/code&gt; projects requires &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt;, or &lt;code&gt;yarn&lt;/code&gt; to be installed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The analysis performed utilize the respective &lt;code&gt;audit&lt;/code&gt; feature of each.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The analysis of Ruby is a wrapper around &lt;code&gt;bundle-audit&lt;/code&gt;, which must be installed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Current Releases&lt;/h2&gt; &#xA;&lt;h3&gt;Jenkins Plugin&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Jenkins plugin please see the &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/OWASP+Dependency-Check+Plugin&#34;&gt;OWASP Dependency-Check Plugin page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line&lt;/h3&gt; &#xA;&lt;p&gt;More detailed instructions can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-cli/&#34;&gt;dependency-check github pages&lt;/a&gt;. The latest CLI can be downloaded from github in the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/releases&#34;&gt;releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Downloading the latest release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)&#xA;$ curl -Ls &#34;https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip&#34; --output dependency-check.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On *nix&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./bin/dependency-check.sh -h&#xA;$ ./bin/dependency-check.sh --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; .\bin\dependency-check.bat -h&#xA;&amp;gt; .\bin\dependency-check.bat --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Mac with &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; Note - homebrew users upgrading from 5.x to 6.0.0 will need to run &lt;code&gt;dependency-check.sh --purge&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew update &amp;amp;&amp;amp; brew install dependency-check&#xA;$ dependency-check -h&#xA;$ dependency-check --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Maven Plugin&lt;/h3&gt; &#xA;&lt;p&gt;More detailed instructions can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-maven&#34;&gt;dependency-check-maven github pages&lt;/a&gt;. By default, the plugin is tied to the &lt;code&gt;verify&lt;/code&gt; phase (i.e. &lt;code&gt;mvn verify&lt;/code&gt;). Alternatively, one can directly invoke the plugin via &lt;code&gt;mvn org.owasp:dependency-check-maven:check&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The dependency-check plugin can be configured using the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;project&amp;gt;&#xA;    &amp;lt;build&amp;gt;&#xA;        &amp;lt;plugins&amp;gt;&#xA;            ...&#xA;            &amp;lt;plugin&amp;gt;&#xA;              &amp;lt;groupId&amp;gt;org.owasp&amp;lt;/groupId&amp;gt;&#xA;              &amp;lt;artifactId&amp;gt;dependency-check-maven&amp;lt;/artifactId&amp;gt;&#xA;              &amp;lt;executions&amp;gt;&#xA;                  &amp;lt;execution&amp;gt;&#xA;                      &amp;lt;goals&amp;gt;&#xA;                          &amp;lt;goal&amp;gt;check&amp;lt;/goal&amp;gt;&#xA;                      &amp;lt;/goals&amp;gt;&#xA;                  &amp;lt;/execution&amp;gt;&#xA;              &amp;lt;/executions&amp;gt;&#xA;            &amp;lt;/plugin&amp;gt;&#xA;            ...&#xA;        &amp;lt;/plugins&amp;gt;&#xA;        ...&#xA;    &amp;lt;/build&amp;gt;&#xA;    ...&#xA;&amp;lt;/project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gradle Plugin&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Gradle Plugin, please see the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-gradle&#34;&gt;dependency-check-gradle github page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ant Task&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Ant Task, please see the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-ant&#34;&gt;dependency-check-ant github page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;For installation to pass, you must have the following components installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java: &lt;code&gt;java -version&lt;/code&gt; 1.8&lt;/li&gt; &#xA; &lt;li&gt;Maven: &lt;code&gt;mvn -version&lt;/code&gt; 3.5.0 and higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tests cases require:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dotnet core version 8.0&lt;/li&gt; &#xA; &lt;li&gt;Go: &lt;code&gt;go version&lt;/code&gt; 1.12 and higher&lt;/li&gt; &#xA; &lt;li&gt;Ruby &lt;a href=&#34;https://github.com/rubysec/bundler-audit#install&#34;&gt;bundler-audit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install/&#34;&gt;Yarn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Usage&lt;/h2&gt; &#xA;&lt;p&gt;The following instructions outline how to compile and use the current snapshot. While every intention is to maintain a stable snapshot it is recommended that the release versions listed above be used.&lt;/p&gt; &#xA;&lt;p&gt;The repository has some large files due to test resources. The team has tried to clean up the history as much as possible. However, it is recommended that you perform a shallow clone to save yourself time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/jeremylong/DependencyCheck.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On *nix&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn -s settings.xml install&#xA;$ ./cli/target/release/bin/dependency-check.sh -h&#xA;$ ./cli/target/release/bin/dependency-check.sh --out . --scan ./src/test/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; mvn -s settings.xml install&#xA;&amp;gt; .\cli\target\release\bin\dependency-check.bat -h&#xA;&amp;gt; .\cli\target\release\bin\dependency-check.bat --out . --scan ./src/test/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then load the resulting &#39;dependency-check-report.html&#39; into your favorite browser.&lt;/p&gt; &#xA;&lt;h4&gt;Building without running tests&lt;/h4&gt; &#xA;&lt;p&gt;To speed up your turnaround cycle times, you can also compile without running the tests each time:&lt;br&gt; &lt;code&gt;mvn -s settings.xml install -DskipTests=true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please remember to at least run the tests once before opening the PR. :)&lt;/p&gt; &#xA;&lt;h3&gt;IntelliJ Idea&lt;/h3&gt; &#xA;&lt;p&gt;To be able to debug your tests in IntelliJ Idea, you can introduce a maven configuration that executes your test and enables debugging with breakpoints etc.&lt;br&gt; Basically, you do what´s described in &lt;a href=&#34;https://www.jetbrains.com/help/idea/work-with-tests-in-maven.html#run_single_test&#34;&gt;https://www.jetbrains.com/help/idea/work-with-tests-in-maven.html#run_single_test&lt;/a&gt; and set the &lt;code&gt;forkCount&lt;/code&gt; to 0, otherwise debugging won´t work.&lt;/p&gt; &#xA;&lt;p&gt;Step by step:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Run -&amp;gt; Edit Configurations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+ (Add new configuration) -&amp;gt; Maven&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Give the Configuration a name, e.g. &lt;code&gt;Run tests&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose working directory, e.g. &lt;code&gt;core&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In &lt;code&gt;command line&lt;/code&gt;, enter &lt;code&gt;-DforkCount=0 -f pom.xml -s ../settings.xml test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Run -&amp;gt; Debug&lt;/code&gt;, then choose the newly created run configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;IntelliJ will now execute the test run for the &lt;code&gt;core&lt;/code&gt; subproject with enabled debugging. Breakpoints set anywhere in code should work.&lt;/p&gt; &#xA;&lt;h4&gt;Only test one function or one class&lt;/h4&gt; &#xA;&lt;p&gt;If you would like to speed up your turnaround cycle times, you can also just test one function or one test class.&lt;br&gt; This works by adding &lt;code&gt;-Dtest=MyTestClass&lt;/code&gt; or &lt;code&gt;-Dtest=MyTestClass#myTestFunction&lt;/code&gt; to the run configuration. The complete command line in the run configuration then would be:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-Dtest=MyTestClass#myTestFunction -DforkCount=0 -f pom.xml -s ../settings.xml test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;In the following example it is assumed that the source to be checked is in the current working directory and the reports will be written to &lt;code&gt;$(pwd)/odc-reports&lt;/code&gt;. Persistent data and cache directories are used, allowing you to destroy the container after running.&lt;/p&gt; &#xA;&lt;p&gt;For Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh&#xA;&#xA;DC_VERSION=&#34;latest&#34;&#xA;DC_DIRECTORY=$HOME/OWASP-Dependency-Check&#xA;DC_PROJECT=&#34;dependency-check scan: $(pwd)&#34;&#xA;DATA_DIRECTORY=&#34;$DC_DIRECTORY/data&#34;&#xA;CACHE_DIRECTORY=&#34;$DC_DIRECTORY/data/cache&#34;&#xA;&#xA;if [ ! -d &#34;$DATA_DIRECTORY&#34; ]; then&#xA;    echo &#34;Initially creating persistent directory: $DATA_DIRECTORY&#34;&#xA;    mkdir -p &#34;$DATA_DIRECTORY&#34;&#xA;fi&#xA;if [ ! -d &#34;$CACHE_DIRECTORY&#34; ]; then&#xA;    echo &#34;Initially creating persistent directory: $CACHE_DIRECTORY&#34;&#xA;    mkdir -p &#34;$CACHE_DIRECTORY&#34;&#xA;fi&#xA;&#xA;# Make sure we are using the latest version&#xA;docker pull owasp/dependency-check:$DC_VERSION&#xA;&#xA;docker run --rm \&#xA;    -e user=$USER \&#xA;    -u $(id -u ${USER}):$(id -g ${USER}) \&#xA;    --volume $(pwd):/src:z \&#xA;    --volume &#34;$DATA_DIRECTORY&#34;:/usr/share/dependency-check/data:z \&#xA;    --volume $(pwd)/odc-reports:/report:z \&#xA;    owasp/dependency-check:$DC_VERSION \&#xA;    --scan /src \&#xA;    --format &#34;ALL&#34; \&#xA;    --project &#34;$DC_PROJECT&#34; \&#xA;    --out /report&#xA;    # Use suppression like this: (where /src == $pwd)&#xA;    # --suppression &#34;/src/security/dependency-check-suppression.xml&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;@echo off&#xA;&#xA;set DC_VERSION=&#34;latest&#34;&#xA;set DC_DIRECTORY=%USERPROFILE%\OWASP-Dependency-Check&#xA;SET DC_PROJECT=&#34;dependency-check scan: %CD%&#34;&#xA;set DATA_DIRECTORY=&#34;%DC_DIRECTORY%\data&#34;&#xA;set CACHE_DIRECTORY=&#34;%DC_DIRECTORY%\data\cache&#34;&#xA;&#xA;IF NOT EXIST %DATA_DIRECTORY% (&#xA;    echo Initially creating persistent directory: %DATA_DIRECTORY%&#xA;    mkdir %DATA_DIRECTORY%&#xA;)&#xA;IF NOT EXIST %CACHE_DIRECTORY% (&#xA;    echo Initially creating persistent directory: %CACHE_DIRECTORY%&#xA;    mkdir %CACHE_DIRECTORY%&#xA;)&#xA;&#xA;rem Make sure we are using the latest version&#xA;docker pull owasp/dependency-check:%DC_VERSION%&#xA;&#xA;docker run --rm ^&#xA;    --volume %CD%:/src ^&#xA;    --volume %DATA_DIRECTORY%:/usr/share/dependency-check/data ^&#xA;    --volume %CD%/odc-reports:/report ^&#xA;    owasp/dependency-check:%DC_VERSION% ^&#xA;    --scan /src ^&#xA;    --format &#34;ALL&#34; ^&#xA;    --project &#34;%DC_PROJECT%&#34; ^&#xA;    --out /report&#xA;    rem Use suppression like this: (where /src == %CD%)&#xA;    rem --suppression &#34;/src/security/dependency-check-suppression.xml&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building From Source&lt;/h2&gt; &#xA;&lt;p&gt;To build dependency-check (using Java 8) run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running dependency-check on dependency-check&lt;/h2&gt; &#xA;&lt;p&gt;Dependency-check references several vulnerable dependencies that are never used except as test resources. All of these optional test dependencies are included in the &lt;code&gt;test-dependencies&lt;/code&gt; profile. To run dependency-check against itself simple exclude the &lt;code&gt;test-dependencies&lt;/code&gt; profile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn org.owasp:dependency-check-maven:aggregate -P-test-dependencies -DskipProvidedScope=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/&#34;&gt;github pages&lt;/a&gt; is generated from this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml site  site:staging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once done, point your browser to &lt;code&gt;./target/staging/index.html&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building The Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;To build dependency-check docker image run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml install&#xA;./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Permission to modify and redistribute is granted under the terms of the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/jeremylong/DependencyCheck/main/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file for the full license.&lt;/p&gt; &#xA;&lt;p&gt;Dependency-Check makes use of several other open source libraries. Please see the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/raw/main/NOTICE.txt&#34;&gt;NOTICE.txt&lt;/a&gt; file for more information.&lt;/p&gt; &#xA;&lt;p&gt;This product uses the NVD API but is not endorsed or certified by the NVD.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2012-2024 Jeremy Long. All Rights Reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>projectdiscovery/nuclei-templates</title>
    <updated>2024-07-04T01:28:50Z</updated>
    <id>tag:github.com,2024-07-04:/projectdiscovery/nuclei-templates</id>
    <link href="https://github.com/projectdiscovery/nuclei-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Nuclei Templates &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdnuclei&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://nuclei.projectdiscovery.io/templating-guide/&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-contributions&#34;&gt;Contributions&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-discussion&#34;&gt;Discussion&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-community&#34;&gt;Community&lt;/a&gt; • &lt;a href=&#34;https://nuclei.projectdiscovery.io/faq/templates/&#34;&gt;FAQs&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Templates are the core of the &lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;nuclei scanner&lt;/a&gt; which powers the actual scanning engine. This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community. We hope that you also contribute by sending templates via &lt;strong&gt;pull requests&lt;/strong&gt; or &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+&#34;&gt;Github issues&lt;/a&gt; to grow the list.&lt;/p&gt; &#xA;&lt;h2&gt;Nuclei Templates overview&lt;/h2&gt; &#xA;&lt;p&gt;An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/TEMPLATES-STATS.md&#34;&gt;available here&lt;/a&gt;, and also available in &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/TEMPLATES-STATS.json&#34;&gt;JSON&lt;/a&gt; format for integration.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Nuclei Templates Top 10 statistics&lt;/h2&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;TAG&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;AUTHOR&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;DIRECTORY&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;SEVERITY&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;       &lt;th&gt;TYPE&lt;/th&gt; &#xA;       &lt;th&gt;COUNT&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cve&lt;/td&gt; &#xA;       &lt;td&gt;2540&lt;/td&gt; &#xA;       &lt;td&gt;dhiyaneshdk&lt;/td&gt; &#xA;       &lt;td&gt;1334&lt;/td&gt; &#xA;       &lt;td&gt;http&lt;/td&gt; &#xA;       &lt;td&gt;7593&lt;/td&gt; &#xA;       &lt;td&gt;info&lt;/td&gt; &#xA;       &lt;td&gt;3780&lt;/td&gt; &#xA;       &lt;td&gt;file&lt;/td&gt; &#xA;       &lt;td&gt;402&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;panel&lt;/td&gt; &#xA;       &lt;td&gt;1163&lt;/td&gt; &#xA;       &lt;td&gt;daffainfo&lt;/td&gt; &#xA;       &lt;td&gt;864&lt;/td&gt; &#xA;       &lt;td&gt;file&lt;/td&gt; &#xA;       &lt;td&gt;402&lt;/td&gt; &#xA;       &lt;td&gt;high&lt;/td&gt; &#xA;       &lt;td&gt;1786&lt;/td&gt; &#xA;       &lt;td&gt;dns&lt;/td&gt; &#xA;       &lt;td&gt;25&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;wordpress&lt;/td&gt; &#xA;       &lt;td&gt;996&lt;/td&gt; &#xA;       &lt;td&gt;dwisiswant0&lt;/td&gt; &#xA;       &lt;td&gt;803&lt;/td&gt; &#xA;       &lt;td&gt;workflows&lt;/td&gt; &#xA;       &lt;td&gt;191&lt;/td&gt; &#xA;       &lt;td&gt;medium&lt;/td&gt; &#xA;       &lt;td&gt;1560&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;exposure&lt;/td&gt; &#xA;       &lt;td&gt;955&lt;/td&gt; &#xA;       &lt;td&gt;pussycat0x&lt;/td&gt; &#xA;       &lt;td&gt;430&lt;/td&gt; &#xA;       &lt;td&gt;network&lt;/td&gt; &#xA;       &lt;td&gt;135&lt;/td&gt; &#xA;       &lt;td&gt;critical&lt;/td&gt; &#xA;       &lt;td&gt;1058&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;xss&lt;/td&gt; &#xA;       &lt;td&gt;913&lt;/td&gt; &#xA;       &lt;td&gt;ritikchaddha&lt;/td&gt; &#xA;       &lt;td&gt;366&lt;/td&gt; &#xA;       &lt;td&gt;cloud&lt;/td&gt; &#xA;       &lt;td&gt;134&lt;/td&gt; &#xA;       &lt;td&gt;low&lt;/td&gt; &#xA;       &lt;td&gt;268&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;wp-plugin&lt;/td&gt; &#xA;       &lt;td&gt;865&lt;/td&gt; &#xA;       &lt;td&gt;pikpikcu&lt;/td&gt; &#xA;       &lt;td&gt;353&lt;/td&gt; &#xA;       &lt;td&gt;code&lt;/td&gt; &#xA;       &lt;td&gt;81&lt;/td&gt; &#xA;       &lt;td&gt;unknown&lt;/td&gt; &#xA;       &lt;td&gt;39&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;osint&lt;/td&gt; &#xA;       &lt;td&gt;804&lt;/td&gt; &#xA;       &lt;td&gt;princechaddha&lt;/td&gt; &#xA;       &lt;td&gt;303&lt;/td&gt; &#xA;       &lt;td&gt;javascript&lt;/td&gt; &#xA;       &lt;td&gt;60&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;tech&lt;/td&gt; &#xA;       &lt;td&gt;694&lt;/td&gt; &#xA;       &lt;td&gt;pdteam&lt;/td&gt; &#xA;       &lt;td&gt;297&lt;/td&gt; &#xA;       &lt;td&gt;ssl&lt;/td&gt; &#xA;       &lt;td&gt;29&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;lfi&lt;/td&gt; &#xA;       &lt;td&gt;670&lt;/td&gt; &#xA;       &lt;td&gt;ricardomaia&lt;/td&gt; &#xA;       &lt;td&gt;238&lt;/td&gt; &#xA;       &lt;td&gt;dns&lt;/td&gt; &#xA;       &lt;td&gt;22&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;misconfig&lt;/td&gt; &#xA;       &lt;td&gt;660&lt;/td&gt; &#xA;       &lt;td&gt;geeknik&lt;/td&gt; &#xA;       &lt;td&gt;231&lt;/td&gt; &#xA;       &lt;td&gt;dast&lt;/td&gt; &#xA;       &lt;td&gt;22&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;p&gt;&lt;strong&gt;656 directories, 8984 files&lt;/strong&gt;.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please navigate to &lt;a href=&#34;https://nuclei.projectdiscovery.io&#34;&gt;https://nuclei.projectdiscovery.io&lt;/a&gt; for detailed documentation to &lt;strong&gt;build&lt;/strong&gt; new or your own &lt;strong&gt;custom&lt;/strong&gt; templates. We have also added a set of templates to help you understand how things work.&lt;/p&gt; &#xA;&lt;h2&gt;💪 Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Nuclei-templates is powered by major contributions from the community. &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+&#34;&gt;Template contributions &lt;/a&gt;, &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=%5BFeature%5D+&#34;&gt;Feature Requests&lt;/a&gt; and &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D+&#34;&gt;Bug Reports&lt;/a&gt; are more than welcome.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💬 Discussion&lt;/h2&gt; &#xA;&lt;p&gt;Have questions / doubts / ideas to discuss? Feel free to open a discussion on &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/discussions&#34;&gt;Github discussions&lt;/a&gt; board.&lt;/p&gt; &#xA;&lt;h2&gt;👨‍💻 Community&lt;/h2&gt; &#xA;&lt;p&gt;You are welcome to join the active &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Discord Community&lt;/a&gt; to discuss directly with project maintainers and share things with others around security and automation. Additionally, you may follow us on &lt;a href=&#34;https://twitter.com/pdnuclei&#34;&gt;Twitter&lt;/a&gt; to be updated on all the things about Nuclei.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;amp;max=300&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Thanks again for your contribution and keeping this community vibrant. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BLAKE3-team/BLAKE3</title>
    <updated>2024-07-04T01:28:50Z</updated>
    <id>tag:github.com,2024-07-04:/BLAKE3-team/BLAKE3</id>
    <link href="https://github.com/BLAKE3-team/BLAKE3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;the official Rust and C implementations of the BLAKE3 cryptographic hash function&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/#&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/media/BLAKE3.svg?sanitize=true&#34; alt=&#34;BLAKE3&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;BLAKE3 is a cryptographic hash function that is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Much faster&lt;/strong&gt; than MD5, SHA-1, SHA-2, SHA-3, and BLAKE2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;, unlike MD5 and SHA-1. And secure against length extension, unlike SHA-2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly parallelizable&lt;/strong&gt; across any number of threads and SIMD lanes, because it&#39;s a Merkle tree on the inside.&lt;/li&gt; &#xA; &lt;li&gt;Capable of &lt;strong&gt;verified streaming&lt;/strong&gt; and &lt;strong&gt;incremental updates&lt;/strong&gt;, again because it&#39;s a Merkle tree.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;PRF&lt;/strong&gt;, &lt;strong&gt;MAC&lt;/strong&gt;, &lt;strong&gt;KDF&lt;/strong&gt;, and &lt;strong&gt;XOF&lt;/strong&gt;, as well as a regular hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;One algorithm with no variants&lt;/strong&gt;, which is fast on x86-64 and also on smaller architectures.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3-specs/raw/master/benchmarks/bar_chart.py&#34;&gt;chart below&lt;/a&gt; is an example benchmark of 16 KiB inputs on a Cascade Lake-SP 8275CL server CPU from 2019. For more detailed benchmarks, see the &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3-specs/raw/master/blake3.pdf&#34;&gt;BLAKE3 paper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/media/speed.svg?sanitize=true&#34; alt=&#34;performance graph&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;BLAKE3 is based on an optimized instance of the established hash function &lt;a href=&#34;https://blake2.net&#34;&gt;BLAKE2&lt;/a&gt; and on the &lt;a href=&#34;https://github.com/oconnor663/bao/raw/master/docs/spec_0.9.1.md&#34;&gt;original Bao tree mode&lt;/a&gt;. The specifications and design rationale are available in the &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3-specs/raw/master/blake3.pdf&#34;&gt;BLAKE3 paper&lt;/a&gt;. The default output size is 256 bits. The current version of &lt;a href=&#34;https://github.com/oconnor663/bao&#34;&gt;Bao&lt;/a&gt; implements verified streaming with BLAKE3.&lt;/p&gt; &#xA;&lt;p&gt;This repository is the official implementation of BLAKE3. It includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://crates.io/crates/blake3&#34;&gt;&lt;code&gt;blake3&lt;/code&gt;&lt;/a&gt; Rust crate, which includes optimized implementations for SSE2, SSE4.1, AVX2, AVX-512, and NEON, with automatic runtime CPU feature detection on x86. The &lt;code&gt;rayon&lt;/code&gt; feature provides multithreading.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://crates.io/crates/b3sum&#34;&gt;&lt;code&gt;b3sum&lt;/code&gt;&lt;/a&gt; Rust crate, which provides a command line interface. It uses multithreading by default, making it an order of magnitude faster than e.g. &lt;code&gt;sha256sum&lt;/code&gt; on typical desktop hardware.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/c&#34;&gt;C implementation&lt;/a&gt;, which like the Rust implementation includes SIMD code and runtime CPU feature detection on x86. Unlike the Rust implementation, it&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/c#multithreading&#34;&gt;not currently multithreaded&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/c/README.md&#34;&gt;&lt;code&gt;c/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/reference_impl/reference_impl.rs&#34;&gt;Rust reference implementation&lt;/a&gt;, which is discussed in Section 5.1 of the &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3-specs/raw/master/blake3.pdf&#34;&gt;BLAKE3 paper&lt;/a&gt;. This implementation is much smaller and simpler than the optimized ones above. If you want to see how BLAKE3 works, or you&#39;re writing a port that doesn&#39;t need multithreading or SIMD optimizations, start here. Ports of the reference implementation to other languages are hosted in separate repositories (&lt;a href=&#34;https://github.com/oconnor663/blake3_reference_impl_c&#34;&gt;C&lt;/a&gt;, &lt;a href=&#34;https://github.com/oconnor663/pure_python_blake3&#34;&gt;Python&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3/raw/master/test_vectors/test_vectors.json&#34;&gt;set of test vectors&lt;/a&gt; that covers extended outputs, all three modes, and a variety of input lengths.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3/actions&#34;&gt;&lt;img src=&#34;https://github.com/BLAKE3-team/BLAKE3/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;BLAKE3 was designed by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oconnor663&#34;&gt;@oconnor663 &lt;/a&gt; (Jack O&#39;Connor)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sneves&#34;&gt;@sneves&lt;/a&gt; (Samuel Neves)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veorq&#34;&gt;@veorq&lt;/a&gt; (Jean-Philippe Aumasson)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zookozcash&#34;&gt;@zookozcash&lt;/a&gt; (Zooko)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The development of BLAKE3 was sponsored by &lt;a href=&#34;https://electriccoin.co&#34;&gt;Electric Coin Company&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: BLAKE3 is not a password hashing algorithm, because it&#39;s designed to be fast, whereas password hashing should not be fast. If you hash passwords to store the hashes or if you derive keys from passwords, we recommend &lt;a href=&#34;https://github.com/P-H-C/phc-winner-argon2&#34;&gt;Argon2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;b3sum&lt;/code&gt; utility&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;b3sum&lt;/code&gt; command line utility prints the BLAKE3 hashes of files or of standard input. Prebuilt binaries are available for Linux, Windows, and macOS (requiring the &lt;a href=&#34;https://support.apple.com/guide/mac-help/open-a-mac-app-from-an-unidentified-developer-mh40616/mac&#34;&gt;unidentified developer workaround&lt;/a&gt;) on the &lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3/releases&#34;&gt;releases page&lt;/a&gt;. If you&#39;ve &lt;a href=&#34;https://doc.rust-lang.org/cargo/getting-started/installation.html&#34;&gt;installed Rust and Cargo&lt;/a&gt;, you can also build &lt;code&gt;b3sum&lt;/code&gt; yourself with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install b3sum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;rustup&lt;/code&gt; didn&#39;t configure your &lt;code&gt;PATH&lt;/code&gt; for you, you might need to go looking for the installed binary in e.g. &lt;code&gt;~/.cargo/bin&lt;/code&gt;. You can test out how fast BLAKE3 is on your machine by creating a big file and hashing it, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create a 1 GB file.&#xA;head -c 1000000000 /dev/zero &amp;gt; /tmp/bigfile&#xA;# Hash it with SHA-256.&#xA;time openssl sha256 /tmp/bigfile&#xA;# Hash it with BLAKE3.&#xA;time b3sum /tmp/bigfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;blake3&lt;/code&gt; crate &lt;a href=&#34;https://docs.rs/blake3&#34;&gt;&lt;img src=&#34;https://docs.rs/blake3/badge.svg?sanitize=true&#34; alt=&#34;docs.rs&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To use BLAKE3 from Rust code, add a dependency on the &lt;code&gt;blake3&lt;/code&gt; crate to your &lt;code&gt;Cargo.toml&lt;/code&gt;. Here&#39;s an example of hashing some input bytes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;// Hash an input all at once.&#xA;let hash1 = blake3::hash(b&#34;foobarbaz&#34;);&#xA;&#xA;// Hash an input incrementally.&#xA;let mut hasher = blake3::Hasher::new();&#xA;hasher.update(b&#34;foo&#34;);&#xA;hasher.update(b&#34;bar&#34;);&#xA;hasher.update(b&#34;baz&#34;);&#xA;let hash2 = hasher.finalize();&#xA;assert_eq!(hash1, hash2);&#xA;&#xA;// Extended output. OutputReader also implements Read and Seek.&#xA;let mut output = [0; 1000];&#xA;let mut output_reader = hasher.finalize_xof();&#xA;output_reader.fill(&amp;amp;mut output);&#xA;assert_eq!(hash1, output[..32]);&#xA;&#xA;// Print a hash as hex.&#xA;println!(&#34;{}&#34;, hash1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Besides &lt;code&gt;hash&lt;/code&gt;, BLAKE3 provides two other modes, &lt;code&gt;keyed_hash&lt;/code&gt; and &lt;code&gt;derive_key&lt;/code&gt;. The &lt;code&gt;keyed_hash&lt;/code&gt; mode takes a 256-bit key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;// MAC an input all at once.&#xA;let example_key = [42u8; 32];&#xA;let mac1 = blake3::keyed_hash(&amp;amp;example_key, b&#34;example input&#34;);&#xA;&#xA;// MAC incrementally.&#xA;let mut hasher = blake3::Hasher::new_keyed(&amp;amp;example_key);&#xA;hasher.update(b&#34;example input&#34;);&#xA;let mac2 = hasher.finalize();&#xA;assert_eq!(mac1, mac2);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;derive_key&lt;/code&gt; mode takes a context string and some key material (not a password). The context string should be hardcoded, globally unique, and application-specific. A good default format for the context string is &lt;code&gt;&#34;[application] [commit timestamp] [purpose]&#34;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;// Derive a couple of subkeys for different purposes.&#xA;const EMAIL_CONTEXT: &amp;amp;str = &#34;BLAKE3 example 2020-01-07 17:10:44 email key&#34;;&#xA;const API_CONTEXT: &amp;amp;str = &#34;BLAKE3 example 2020-01-07 17:11:21 API key&#34;;&#xA;let input_key_material = b&#34;usually at least 32 random bytes, not a password&#34;;&#xA;let email_key = blake3::derive_key(EMAIL_CONTEXT, input_key_material);&#xA;let api_key = blake3::derive_key(API_CONTEXT, input_key_material);&#xA;assert_ne!(email_key, api_key);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The C implementation&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/c/README.md&#34;&gt;&lt;code&gt;c/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other implementations&lt;/h3&gt; &#xA;&lt;p&gt;We post links to third-party bindings and implementations on the &lt;a href=&#34;https://twitter.com/BLAKE3team&#34;&gt;@BLAKE3team Twitter account&lt;/a&gt; whenever we hear about them. Some highlights include &lt;a href=&#34;https://github.com/zeebo/blake3&#34;&gt;an optimized Go implementation&lt;/a&gt;, &lt;a href=&#34;https://github.com/connor4312/blake3&#34;&gt;Wasm bindings for Node.js and browsers&lt;/a&gt;, &lt;a href=&#34;https://github.com/oconnor663/blake3-py&#34;&gt;binary wheels for Python&lt;/a&gt;, &lt;a href=&#34;https://github.com/xoofx/Blake3.NET&#34;&gt;.NET bindings&lt;/a&gt;, and &lt;a href=&#34;https://github.com/sken77/BLAKE3jni&#34;&gt;JNI bindings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;This work is released into the public domain with &lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/LICENSE_CC0&#34;&gt;CC0 1.0&lt;/a&gt;. Alternatively, it is licensed under any of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/LICENSE_A2&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BLAKE3-team/BLAKE3/master/LICENSE_A2LLVM&#34;&gt;Apache 2.0 with LLVM exceptions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adoption &amp;amp; deployment&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a (non-exhaustive) list of protocols and software that use BLAKE3:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alephium/alephium/raw/master/crypto/src/main/scala/org/alephium/crypto/Blake3.scala&#34;&gt;Alephium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bazelbuild/bazel/releases/tag/6.4.0&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/raw/main/CHANGELOG.md#10beta8-aka-beta-18---2020-07-16&#34;&gt;Chia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ipfs/go-verifcid/issues/13&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.farcaster.xyz/&#34;&gt;Farcaster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reviews.llvm.org/D121510&#34;&gt;LLVM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nymtech/nym/raw/59056a22c5e6b01a38da2124662bd1fa3c8abef2/common/nymsphinx/params/src/lib.rs#L5&#34;&gt;Nym&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openzfs/zfs/&#34;&gt;OpenZFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.redox-os.org/news/pkgar-introduction/&#34;&gt;Redox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://saito.tech/&#34;&gt;Saito&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skalenetwork/skale-consensus/pull/284&#34;&gt;Skale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/solana-program/1.9.5/solana_program/blake3/index.html&#34;&gt;Solana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.bandainamcoent.eu/tekken/tekken-8&#34;&gt;Tekken 8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wasmerio/wasmer/raw/4f935a8c162bf604df223003e434e4f7ca253688/lib/cache/src/hash.rs#L21&#34;&gt;Wasmer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Miscellany&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veorq&#34;&gt;@veorq&lt;/a&gt; and &lt;a href=&#34;https://github.com/oconnor663&#34;&gt;@oconnor663&lt;/a&gt; did &lt;a href=&#34;https://www.cryptography.fm/3&#34;&gt;a podcast interview&lt;/a&gt; about designing BLAKE3.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>