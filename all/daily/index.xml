<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-13T01:23:56Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Infisical/infisical</title>
    <updated>2023-08-13T01:23:56Z</updated>
    <id>tag:github.com,2023-08-13:/Infisical/infisical</id>
    <link href="https://github.com/Infisical/infisical" rel="alternate"></link>
    <summary type="html">&lt;p&gt;â™¾ Infisical is an open-source, end-to-end encrypted platform for secret management: sync secrets across your team/infrastructure and prevent secret leaks.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-black.svg#gh-light-mode-only&#34; alt=&#34;infisical&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-white.svg#gh-dark-mode-only&#34; alt=&#34;infisical&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;Open-source, end-to-end encrypted secret management platform&lt;/b&gt;: distribute secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://infisical.com/slack&#34;&gt;Slack&lt;/a&gt; | &lt;a href=&#34;https://infisical.com/&#34;&gt;Infisical Cloud&lt;/a&gt; | &lt;a href=&#34;https://infisical.com/docs/self-hosting/overview&#34;&gt;Self-Hosting&lt;/a&gt; | &lt;a href=&#34;https://infisical.com/docs/documentation/getting-started/introduction&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://www.infisical.com&#34;&gt;Website&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://infisical.com/docs/self-hosting/deployment-options/aws-ec2&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/.github/images/deploy-to-aws.png&#34; width=&#34;137&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://infisical.com/docs/self-hosting/deployment-options/digital-ocean-marketplace&#34; alt=&#34;Deploy to DigitalOcean&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Deploy to DO&#34; src=&#34;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Infisical/infisical/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;Infisical is released under the MIT license.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infisical/infisical/raw/main/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-Welcome-brightgreen&#34; alt=&#34;PRs welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Infisical/infisical/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/infisical/infisical&#34; alt=&#34;git commit activity&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cloudsmith.io/~infisical/repos/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Downloads-821.8k-orange&#34; alt=&#34;Cloudsmith downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://infisical.com/slack&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20Slack-blueviolet&#34; alt=&#34;Slack community channel&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/infisical&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/infisical?label=Follow&#34; alt=&#34;Infisical Twitter&#34;&gt; &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/infisical_github_repo.png&#34; width=&#34;100%&#34; alt=&#34;Dashboard&#34;&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com&#34;&gt;Infisical&lt;/a&gt;&lt;/strong&gt; is an open source, end-to-end encrypted secret management platform that teams use to centralize their secrets like API keys, database credentials, and configurations.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re on a mission to make secret management more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/documentation/platform/project&#34;&gt;User-friendly dashboard&lt;/a&gt;&lt;/strong&gt; to manage secrets across projects and environments (e.g. development, production, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/sdks/overview&#34;&gt;Client SDKs&lt;/a&gt;&lt;/strong&gt; to fetch secrets for your apps and infrastructure on demand&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/cli/overview&#34;&gt;Infisical CLI&lt;/a&gt;&lt;/strong&gt; to fetch and inject secrets into any framework in local development&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/integrations/overview&#34;&gt;Native integrations&lt;/a&gt;&lt;/strong&gt; with platforms like GitHub, Vercel, Netlify, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/docs/documentation/getting-started/kubernetes&#34;&gt;&lt;strong&gt;Automatic Kubernetes deployment secret reloads&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/self-hosting/overview&#34;&gt;Complete control over your data&lt;/a&gt;&lt;/strong&gt; - host it yourself on any infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/documentation/platform/secret-versioning&#34;&gt;Secret versioning&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;&#34;&gt;Point-in-Time Recovery&lt;/a&gt;&lt;/strong&gt; to version every secret and project state&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/documentation/platform/audit-logs&#34;&gt;Audit logs&lt;/a&gt;&lt;/strong&gt; to record every action taken in a project&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role-based Access Controls&lt;/strong&gt; per environment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/docs/self-hosting/overview&#34;&gt;&lt;strong&gt;Simple on-premise deployments&lt;/strong&gt; to AWS, Digital Ocean, and more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/docs/cli/scanning-overview&#34;&gt;&lt;strong&gt;Secret Scanning and Leak Prevention&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And much more.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://infisical.com/docs/getting-started/introduction&#34;&gt;Quickstart Guides&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Use Infisical Cloud&lt;/th&gt; &#xA;   &lt;th&gt;Deploy Infisical on premise&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The fastest and most reliable way to &lt;br&gt; get started with Infisical is signing up &lt;br&gt; for free to &lt;a href=&#34;https://app.infisical.com/login&#34;&gt;Infisical Cloud&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://infisical.com/docs/self-hosting/deployment-options/aws-ec2&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/.github/images/deploy-to-aws.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://infisical.com/docs/self-hosting/deployment-options/digital-ocean-marketplace&#34; alt=&#34;Deploy to DigitalOcean&#34;&gt; &lt;img width=&#34;217&#34; alt=&#34;Deploy to DO&#34; src=&#34;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;br&gt; View all &lt;a href=&#34;https://infisical.com/docs/self-hosting/overview&#34;&gt;deployment options&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Run Infisical locally&lt;/h3&gt; &#xA;&lt;p&gt;To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:&lt;/p&gt; &#xA;&lt;p&gt;Linux/macOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd &#34;$(basename $_ .git)&#34; &amp;amp;&amp;amp; cp .env.example .env &amp;amp;&amp;amp; docker-compose -f docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows Command Prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd infisical &amp;amp;&amp;amp; copy .env.example .env &amp;amp;&amp;amp; docker-compose -f docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create an account at &lt;code&gt;http://localhost:80&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Scan and prevent secret leaks&lt;/h3&gt; &#xA;&lt;p&gt;On top managing secrets with Infisical, you can also &lt;a href=&#34;&#34;&gt;scan for over 140+ secret types&lt;/a&gt; in your files, directories and git repositories.&lt;/p&gt; &#xA;&lt;p&gt;To scan your full git history, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;infisical scan --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install pre commit hook to scan each commit before you push to your repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;infisical scan install --pre-commit-hook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lean about Infisical&#39;s code scanning feature &lt;a href=&#34;https://infisical.com/docs/cli/scanning-overview&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open-source vs. paid&lt;/h2&gt; &#xA;&lt;p&gt;This repo available under the &lt;a href=&#34;https://github.com/Infisical/infisical/raw/main/LICENSE&#34;&gt;MIT expat license&lt;/a&gt;, with the exception of the &lt;code&gt;ee&lt;/code&gt; directory which will contain premium enterprise features requiring a Infisical license.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at &lt;a href=&#34;https://infisical.com/&#34;&gt;our website&lt;/a&gt; or &lt;a href=&#34;https://cal.com/vmatsiiako/infisical-demo&#34;&gt;book a meeting with us&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cal.com/vmatsiiako/infisical-demo&#34;&gt;&lt;img alt=&#34;Schedule a meeting&#34; src=&#34;https://cal.com/book-with-cal-dark.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!&lt;/p&gt; &#xA;&lt;p&gt;Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address &lt;a href=&#34;mailto:security@infisical.com&#34;&gt;security@infisical.com&lt;/a&gt;. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Whether it&#39;s big or small, we love contributions. Check out our guide to see how to &lt;a href=&#34;https://infisical.com/docs/contributing/overview&#34;&gt;get started&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Not sure where to get started? You can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cal.com/tony-infisical/30-min-meeting-contributing&#34;&gt;Book a free, non-pressure pairing session / code walkthrough with one of our teammates&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://infisical.com/slack&#34;&gt;Slack&lt;/a&gt;, and ask us any questions there.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://us06web.zoom.us/j/82623506356&#34;&gt;community calls&lt;/a&gt; every Wednesday at 11am EST to ask any questions, provide feedback, hangout and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/docs/documentation/getting-started/introduction&#34;&gt;Docs&lt;/a&gt; for comprehensive documentation and guides&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/slack&#34;&gt;Slack&lt;/a&gt; for discussion with the community and Infisical team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Infisical/infisical&#34;&gt;GitHub&lt;/a&gt; for code, issues, and pull requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/infisical&#34;&gt;Twitter&lt;/a&gt; for fast news&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@infisical_os&#34;&gt;YouTube&lt;/a&gt; for videos on secret management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infisical.com/blog&#34;&gt;Blog&lt;/a&gt; for secret management insights, articles, tutorials, and updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.notion.so/infisical/be2d2585a6694e40889b03aef96ea36b?v=5b19a8127d1a4060b54769567a8785fa&#34;&gt;Roadmap&lt;/a&gt; for planned features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dangtony98&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25857006?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maidul98&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9300960?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/akhilmhdh&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31166322?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/reginaldbondoc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7693108?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mv-turtle&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/78047717?s=96&amp;amp;v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gangjun06&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50910815?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/asheliahut&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/945619?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SH5H&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25437192?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gmgale&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62303146?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/asharonbaltazar&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58940073?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JoaoVictor6&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/68869379?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mocherfaoui&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37941426?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cerrussell&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/80227828?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jon4hz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26183582?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/edgarrmondragon&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16805946?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arjunyel&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11153289?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LemmyMwaura&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20738858?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Zamion101&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8071263?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Grraahaam&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/72856427?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Neeraj138&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58552561?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/esau-morais&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/55207584?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/animeshdas2000&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/40542456?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/umrak11&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20104948?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KunalSin9h&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/82411321?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ImBIOS&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41441643?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sanyamjain04&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/107163858?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Gabriellopes232&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/74881862?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/naorpeled&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6171622?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Aashish-Upadhyay-101&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/81024263?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jonerrr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/73760377?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kmlgkcy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/102428035?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/samsbg&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70488844?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imakecodes&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/35536648?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bngmnn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/88746983?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kimcore&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36142378?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/caioluis&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30005368?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alisson-acioli&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12742051?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adrianmarinwork&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/118568289?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arthurzenika&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/445200?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/franky47&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1174092?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hanywang2&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44352119?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tobias-mintlify&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/110702161?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wjhurley&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15939055?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alexdanilowicz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/29822597?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/0xflotus&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26602940?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wanjohiryan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/71614375?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nirga&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4224692?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RashidUjang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11313829?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kanhaiya38&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/54778773?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HasanMansoor4&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/68682354?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jerriclynsjohn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3236669?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eltociear&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22633385?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MatthewJohn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1266262?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sheensantoscapadngan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/65645666?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yoobato&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1592319?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xinity&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1799009?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simonemargio&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22590804?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Aqib-Rime&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/116422706?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ha-sante&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/90225652?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/5h4k4r&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/56171149?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/quinton11&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70300837?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/afrieirham&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32460534?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Stijn-Kuijper&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25306980?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/atimapreandrew&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60506711?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/satyamgupta1495&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51158766?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RezaRahemtola&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/49811529?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JunedKhan101&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/47941768?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/unkletayo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/48031746?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/agoodman1999&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/113685729?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Spelchure&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20704539?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/piyushchhabra&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12864227?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PylotLight&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7006124?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jorgeteixe&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/45232371?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chisom5&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22566806?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zwkee&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/109659187?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/raykeating&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/29098307?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/khoa165&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/46258781?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pgaijin66&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8869096?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Budhathoki356&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/53488484?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mswider&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37093293?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/parthvnp&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41171860?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/seonggwonyoon&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37574822?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ChukwunonsoFrank&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62689166?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mshumer/gpt-llm-trainer</title>
    <updated>2023-08-13T01:23:56Z</updated>
    <id>tag:github.com,2023-08-13:/mshumer/gpt-llm-trainer</id>
    <link href="https://github.com/mshumer/gpt-llm-trainer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gpt-llm-trainer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/mattshumer_&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mattshumer_?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/drive/1mV9sAY4QBKLmS58dpFGHgwCXQKRASR31?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open Main Version In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Training models is hard. You have to collect a dataset, clean it, get it in the right format, select a model, write the training code and train it. And that&#39;s the best-case scenario.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this project is to explore an experimental new pipeline to train a high-performing task-specific model. We try to abstract away all the complexity, so it&#39;s as easy as possible to go from idea -&amp;gt; performant fully-trained model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simply input a description of your task, and the system will generate a dataset from scratch, parse it into the right format, and fine-tune a LLaMA 2 model for you.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dataset Generation&lt;/strong&gt;: Using GPT-4, &lt;code&gt;gpt-llm-trainer&lt;/code&gt; will generate a variety of prompts and responses based on the provided use-case.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;System Message Generation&lt;/strong&gt;: &lt;code&gt;gpt-llm-trainer&lt;/code&gt; will generate an effective system prompt for your model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fine-Tuning&lt;/strong&gt;: After your dataset has been generated, the system will automatically split it into training and validation sets, fine-tune a model for you, and get it ready for inference.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1mV9sAY4QBKLmS58dpFGHgwCXQKRASR31?usp=sharing&#34;&gt;Open the notebook in Google Colab&lt;/a&gt; or in a local Jupyter notebook.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;re using Colab, switch to the best GPU available (go to Runtime -&amp;gt; change runtime type).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your OpenAI API key to the line &lt;code&gt;openai.api_key = &#34;YOUR KEY HERE&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define your &lt;code&gt;prompt&lt;/code&gt;. The &lt;code&gt;prompt&lt;/code&gt; is a description of what you want the trained AI to do. The more descriptive and clear you can be, the better. Additionally, set the temperature we will use to generate your dataset (high=creative, low=precise), and the number of examples you want to generate (100 is a good starting point).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;prompt = &#34;A model that takes in a puzzle-like reasoning-heavy question in English, and responds with a well-reasoned, step-by-step thought out response in Spanish.&#34;&#xA;temperature = .4&#xA;number_of_examples = 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run all the cells (stop at &lt;code&gt;Merge the model and store in Google Drive&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;It&#39;ll take some time (from 10 minutes to a couple of hours, depending on how many examples you generate), but soon, you&#39;ll have your fine-tuned model!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;After your model is trained, you can use the &lt;code&gt;Run Inference&lt;/code&gt; cell to test the model, and the cells below that allow you to save and load the model to and from Google Drive for later use.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributions are welcome! Some ideas:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;improve the example generation pipeline for efficiency/cost reduction (using n=)&lt;/li&gt; &#xA; &lt;li&gt;add additional example generation prompts to create more diverse examples&lt;/li&gt; &#xA; &lt;li&gt;add example pruning, removing very similar examples to improve performance&lt;/li&gt; &#xA; &lt;li&gt;use GPT-4 to automatically choose the training hyperparameters (and potentially, even the model to fine-tune!) based on a few examples + high-level dataset details (i.e. number of examples)&lt;/li&gt; &#xA; &lt;li&gt;train multiple model variants and choose the one with the lowest eval loss&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is &lt;a href=&#34;https://github.com/mshumer/gpt-llm-trainer/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; licensed.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Matt Shumer - &lt;a href=&#34;https://twitter.com/mattshumer_&#34;&gt;@mattshumer_&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Link: &lt;a href=&#34;https://raw.githubusercontent.com/mshumer/gpt-llm-trainer/main/url&#34;&gt;https://github.com/mshumer/gpt-llm-trainer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lastly, if you want to try something even cooler than this, sign up for &lt;a href=&#34;https://www.hyperwriteai.com/personal-assistant&#34;&gt;Personal Assistant&lt;/a&gt; (most of my time is spent on this). It&#39;s basically an AI that can operate your web browser to complete tasks for you.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThrowTheSwitch/Unity</title>
    <updated>2023-08-13T01:23:56Z</updated>
    <id>tag:github.com,2023-08-13:/ThrowTheSwitch/Unity</id>
    <link href="https://github.com/ThrowTheSwitch/Unity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Unit Testing for C&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity Test &lt;img src=&#34;https://github.com/ThrowTheSwitch/Unity/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Copyright (c) 2007 - 2021 Unity Project by Mike Karlesky, Mark VanderVoord, and Greg Williams&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the Unity Test Project, one of the main projects of ThrowTheSwitch.org. Unity Test is a unit testing framework built for C, with a focus on working with embedded toolchains.&lt;/p&gt; &#xA;&lt;p&gt;This project is made to test code targetting microcontrollers big and small. The core project is a single C file and a pair of headers, allowing it to be added to your existing build setup without too much headache. You may use any compiler you wish, and may use most existing build systems including Make, CMake, etc. If you&#39;d like to leave the hard work to us, you might be interested in Ceedling, a build tool also by ThrowTheSwitch.org.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re new to Unity, we encourage you to tour the &lt;a href=&#34;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityGettingStartedGuide.md&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/&#34;&gt;docs&lt;/a&gt; folder contains a &lt;a href=&#34;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityGettingStartedGuide.md&#34;&gt;getting started guide&lt;/a&gt; and much more tips about using Unity.&lt;/p&gt; &#xA;&lt;h2&gt;Unity Assertion Summary&lt;/h2&gt; &#xA;&lt;p&gt;For the full list, see &lt;a href=&#34;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityAssertionsReference.md&#34;&gt;UnityAssertionsReference.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Basic Validity Tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_TRUE(condition)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Evaluates whatever code is in condition and fails if it evaluates to false&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FALSE(condition)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Evaluates whatever code is in condition and fails if it evaluates to true&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT(condition)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way of calling &lt;code&gt;TEST_ASSERT_TRUE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_UNLESS(condition)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way of calling &lt;code&gt;TEST_ASSERT_FALSE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_FAIL()&#xA;TEST_FAIL_MESSAGE(message)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This test is automatically marked as a failure. The message is output stating why.&lt;/p&gt; &#xA;&lt;h3&gt;Numerical Assertions: Integers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_INT(expected, actual)&#xA;TEST_ASSERT_EQUAL_INT8(expected, actual)&#xA;TEST_ASSERT_EQUAL_INT16(expected, actual)&#xA;TEST_ASSERT_EQUAL_INT32(expected, actual)&#xA;TEST_ASSERT_EQUAL_INT64(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two integers for equality and display errors as signed integers. A cast will be performed to your natural integer size so often this can just be used. When you need to specify the exact size, like when comparing arrays, you can use a specific version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_UINT(expected, actual)&#xA;TEST_ASSERT_EQUAL_UINT8(expected, actual)&#xA;TEST_ASSERT_EQUAL_UINT16(expected, actual)&#xA;TEST_ASSERT_EQUAL_UINT32(expected, actual)&#xA;TEST_ASSERT_EQUAL_UINT64(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two integers for equality and display errors as unsigned integers. Like INT, there are variants for different sizes also.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_HEX(expected, actual)&#xA;TEST_ASSERT_EQUAL_HEX8(expected, actual)&#xA;TEST_ASSERT_EQUAL_HEX16(expected, actual)&#xA;TEST_ASSERT_EQUAL_HEX32(expected, actual)&#xA;TEST_ASSERT_EQUAL_HEX64(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compares two integers for equality and display errors as hexadecimal. Like the other integer comparisons, you can specify the size... here the size will also effect how many nibbles are shown (for example, &lt;code&gt;HEX16&lt;/code&gt; will show 4 nibbles).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way of calling TEST_ASSERT_EQUAL_INT&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_INT_WITHIN(delta, expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is within plus or minus delta of the expected value. This also comes in size specific variants.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_GREATER_THAN(threshold, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is greater than the threshold. This also comes in size specific variants.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_LESS_THAN(threshold, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is less than the threshold. This also comes in size specific variants.&lt;/p&gt; &#xA;&lt;h3&gt;Arrays&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;_ARRAY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can append &lt;code&gt;_ARRAY&lt;/code&gt; to any of these macros to make an array comparison of that type. Here you will need to care a bit more about the actual size of the value being checked. You will also specify an additional argument which is the number of elements to compare. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_HEX8_ARRAY(expected, actual, elements)&#xA;&#xA;_EACH_EQUAL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another array comparison option is to check that EVERY element of an array is equal to a single expected value. You do this by specifying the EACH_EQUAL macro. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EACH_EQUAL_INT32(expected, actual, elements)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Numerical Assertions: Bitwise&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS(mask, expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use an integer mask to specify which bits should be compared between two other integers. High bits in the mask are compared, low bits ignored.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS_HIGH(mask, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use an integer mask to specify which bits should be inspected to determine if they are all set high. High bits in the mask are compared, low bits ignored.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS_LOW(mask, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use an integer mask to specify which bits should be inspected to determine if they are all set low. High bits in the mask are compared, low bits ignored.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BIT_HIGH(bit, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Test a single bit and verify that it is high. The bit is specified 0-31 for a 32-bit integer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BIT_LOW(bit, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Test a single bit and verify that it is low. The bit is specified 0-31 for a 32-bit integer.&lt;/p&gt; &#xA;&lt;h3&gt;Numerical Assertions: Floats&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FLOAT_WITHIN(delta, expected, actual)&#xA;TEST_ASSERT_DOUBLE_WITHIN(delta, expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is within plus or minus delta of the expected value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FLOAT_NOT_WITHIN(delta, expected, actual)&#xA;TEST_ASSERT_DOUBLE_NOT_WITHIN(delta, expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is NOT within plus or minus delta of the expected value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_FLOAT(expected, actual)&#xA;TEST_ASSERT_EQUAL_DOUBLE(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that two floating point values are &#34;equal&#34; within a small % delta of the expected value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NOT_EQUAL_FLOAT(expected, actual)&#xA;TEST_ASSERT_NOT_EQUAL_DOUBLE(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that two floating point values are NOT &#34;equal&#34; within a small % delta of the expected value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_LESS_THAN_FLOAT(threshold, actual)&#xA;TEST_ASSERT_LESS_THAN_DOUBLE(threshold, actual)&#xA;TEST_ASSERT_GREATER_THAN_FLOAT(threshold, actual)&#xA;TEST_ASSERT_GREATER_THAN_DOUBLE(threshold, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asserts that the actual value is less than or greater than the threshold.&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;code&gt;LESS_OR_EQUAL&lt;/code&gt; and &lt;code&gt;GREATER_OR_EQUAL&lt;/code&gt; variations. These obey the same rules for equality as do &lt;code&gt;TEST_ASSERT_EQUAL_FLOAT&lt;/code&gt; and &lt;code&gt;TEST_ASSERT_EQUAL_DOUBLE&lt;/code&gt;: If the two values are within a small % delta of the expected value, the assertion will pass.&lt;/p&gt; &#xA;&lt;h3&gt;String Assertions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING(expected, actual)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two null-terminate strings. Fail if any character is different or if the lengths are different.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_LEN(expected, actual, len)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two strings. Fail if any character is different, stop comparing after len characters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_MESSAGE(expected, actual, message)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two null-terminate strings. Fail if any character is different or if the lengths are different. Output a custom message on failure.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_LEN_MESSAGE(expected, actual, len, message)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two strings. Fail if any character is different, stop comparing after len characters. Output a custom message on failure.&lt;/p&gt; &#xA;&lt;h3&gt;Pointer Assertions&lt;/h3&gt; &#xA;&lt;p&gt;Most pointer operations can be performed by simply using the integer comparisons above. However, a couple of special cases are added for clarity.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NULL(pointer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fails if the pointer is not equal to NULL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NOT_NULL(pointer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fails if the pointer is equal to NULL&lt;/p&gt; &#xA;&lt;h3&gt;Memory Assertions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_MEMORY(expected, actual, len)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compare two blocks of memory. This is a good generic assertion for types that can&#39;t be coerced into acting like standard types... but since it&#39;s a memory compare, you have to be careful that your data types are packed.&lt;/p&gt; &#xA;&lt;h3&gt;_MESSAGE&lt;/h3&gt; &#xA;&lt;p&gt;You can append &lt;code&gt;\_MESSAGE&lt;/code&gt; to any of the macros to make them take an additional argument. This argument is a string that will be printed at the end of the failure strings. This is useful for specifying more information about the problem.&lt;/p&gt;</summary>
  </entry>
</feed>