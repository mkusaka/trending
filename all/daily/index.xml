<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-12T01:22:31Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cuixueshe/earthworm</title>
    <updated>2024-03-12T01:22:31Z</updated>
    <id>tag:github.com,2024-03-12:/cuixueshe/earthworm</id>
    <link href="https://github.com/cuixueshe/earthworm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learning English through the method of constructing sentences with conjunctions&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Earthworm&#34; width=&#34;120&#34; height=&#34;120&#34; src=&#34;https://raw.githubusercontent.com/cuixueshe/earthworm/main/apps/client/public/logo.png&#34;&gt; &#xA; &lt;h1&gt;Earthworm&lt;/h1&gt; &#xA; &lt;span&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/cuixueshe/earthworm/main/README.zh-CN.md&#34;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/span&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;‚ö° Introduction&lt;/h2&gt; &#xA;&lt;p&gt;By constructing sentences with conjunctions, it helps you learn English better~ üòä&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ How to start ?&lt;/h2&gt; &#xA;&lt;h3&gt;‚ö†Ô∏è Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;pnpm version &amp;gt;= 8&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js version &amp;gt;= v20&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MySQL version &amp;gt;= 8.0.0&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis version &amp;gt;= 5.0.0&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;. please make sure it is installed and running successfully on your local machine.&lt;/li&gt; &#xA; &lt;li&gt;The mentioned operations below are based on the root directory of the current project, please be attentive to ensure there are no errors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker --version # Docker version 24.0.7, build afdd53b&#xA;&#xA;node --version # v20+&#xA;&#xA;pnpm -v # 8+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;1. Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Copy the contents of &lt;code&gt;.env.example&lt;/code&gt; to the &lt;code&gt;./apps/api/.env&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;If the file doesn&#39;t exist, you need to create it manually. Linux users can perform the operation with the following command.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It primarily stores environmental variable information for the main storage system, such as database connection addresses, usernames, passwords, ports, keys, and so on. The backend service will read configuration from this file. Of course, you can also customize it with your own configuration information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example ./apps/api/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start/stop/delete Docker Compose service&lt;/h3&gt; &#xA;&lt;p&gt;The backend relies on MySQL and Redis services. Start and stop these services using the commands configured in &lt;code&gt;package.json&lt;/code&gt; below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start&#xA;pnpm docker:start&#xA;# stop&#xA;pnpm docker:stop&#xA;# delete&#xA;pnpm docker:delete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer manual, you can use the commands below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;docker compose stop&#xA;docker compose down&#xA;&#xA;# commands compatible with older versions of Docker&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Initialize Database&lt;/h3&gt; &#xA;&lt;p&gt;When executing the current command, try to wait for a short interval after the previous command, as we are using the &lt;code&gt;-d&lt;/code&gt; parameter, which runs the services in the background. They might still be in a &#39;running&#39; state. If you encounter an error, try running the command again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Create and upload course data (only execute this during the initial database initialization)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:upload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6. Start the backend service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev:serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7. Start the frontend service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev:client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How to correctly update course data ?&lt;/h3&gt; &#xA;&lt;p&gt;when you identify incorrect course data and make modifications, you should use the following command to update the course data in the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;pnpm install Error?&lt;/h3&gt; &#xA;&lt;p&gt;Some dependencies require compilation during installation, necessitating the presence of relevant build environments. If these environments are not available, the compilation process may fail. Additionally, different modules may require different build environments, so specific issues need to be analyzed individually. Below are specific problems encountered along with their solutions.&lt;/p&gt; &#xA;&lt;p&gt;First try the following command to update &lt;code&gt;pnpm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm i -g&#xA;# or&#xA;pnpm i -g pnpm&#xA;# or&#xA;npx pnpm i -g pnpm@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error installing the argon2 module on Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio 2015 or later, specifically the &#34;Desktop development with C++&#34; component. (In practice, any component containing C++ development tools and libraries will suffice.)&lt;/li&gt; &#xA; &lt;li&gt;If you encounter Chinese characters display issues during compilation, execute &lt;code&gt;chcp 437&lt;/code&gt; in the command prompt, then rerun the install command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Permission Denied in Docker?&lt;/h3&gt; &#xA;&lt;p&gt;When using WSL2 as a development environment in Windows, the following error occurs when starting Docker with &lt;code&gt;docker compose up -d&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &#34;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json&#34;: dial unix /var/run/docker.sock: connect: permission denied&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Solution&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add the current user to the docker group&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add docker user group&#xA;sudo groupadd docker&#xA;# Add the logged-in user to the docker user group&#xA;sudo gpasswd -a $USER docker&#xA;# Update user group&#xA;newgrp docker&#xA;# Test if docker command is working properly&#xA;docker images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Frontend Development Guideline&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Do not Destructure Pinia store. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The readability will be better when using &lt;code&gt;store&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Destructuring can lead to reactivity loss and using &lt;code&gt;storeToRefs&lt;/code&gt; is also quite cumbersome&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Avoid including UI logic in composables. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Such as &lt;code&gt;useMessage&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;We categorize the router as UI logic, and for ease of testing, avoid including routerrelated logic in there&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone who has already contributed to Earthworm! üéâ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com//cuixueshe/earthworm/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors.nn.ci/api?repo=cuixueshe/earthworm&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>myshell-ai/MeloTTS</title>
    <updated>2024-03-12T01:22:31Z</updated>
    <id>tag:github.com,2024-03-12:/myshell-ai/MeloTTS</id>
    <link href="https://github.com/myshell-ai/MeloTTS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-quality multi-lingual text-to-speech library by MyShell.ai. Support English, Spanish, French, Chinese, Japanese and Korean.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/MeloTTS/main/logo.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;MeloTTS is a &lt;strong&gt;high-quality multi-lingual&lt;/strong&gt; text-to-speech library by &lt;a href=&#34;https://myshell.ai&#34;&gt;MyShell.ai&lt;/a&gt;. Supported languages include:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English (American)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/en/EN-US/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English (British)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/en/EN-BR/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English (Indian)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/en/EN_INDIA/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English (Australian)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/en/EN-AU/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English (Default)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/en/EN-Default/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spanish&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/es/ES/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;French&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/fr/FR/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese (mix EN)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/zh/ZH/speed_1.0/sent_008.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Japanese&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/jp/JP/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Korean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://myshell-public-repo-hosting.s3.amazonaws.com/myshellttsbase/examples/kr/KR/speed_1.0/sent_000.wav&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Some other features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Chinese speaker supports &lt;code&gt;mixed Chinese and English&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fast enough for &lt;code&gt;CPU real-time inference&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/MeloTTS/main/docs/quick_use.md&#34;&gt;Use without Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/MeloTTS/main/docs/install.md&#34;&gt;Install and Use Locally&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/myshell-ai/MeloTTS/main/docs/training.md&#34;&gt;Training on Custom Dataset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Python API and model cards can be found in &lt;a href=&#34;https://github.com/myshell-ai/MeloTTS/raw/main/docs/install.md#python-api&#34;&gt;this repo&lt;/a&gt; or on &lt;a href=&#34;https://huggingface.co/myshell-ai&#34;&gt;HuggingFace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Join the Community&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/myshell&#34;&gt;Discord community&lt;/a&gt; and select the &lt;code&gt;Developer&lt;/code&gt; role upon joining to gain exclusive access to our developer-only channel! Don&#39;t miss out on valuable discussions and collaboration opportunities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you find this work useful, please consider contributing to this repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/fakerybakery&#34;&gt;@fakerybakery&lt;/a&gt; for adding the Web UI and CLI part.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wl-zhao.github.io&#34;&gt;Wenliang Zhao&lt;/a&gt; at Tsinghua University&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yuxumin.github.io&#34;&gt;Xumin Yu&lt;/a&gt; at Tsinghua University&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qinzy.tech&#34;&gt;Zengyi Qin&lt;/a&gt; at MIT and MyShell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Citation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{zhao2024melo,&#xA;  author={Zhao, Wenliang and Yu, Xumin and Qin, Zengyi},&#xA;  title = {MeloTTS: High-quality Multi-lingual Multi-accent Text-to-Speech},&#xA;  url = {https://github.com/myshell-ai/MeloTTS},&#xA;  year = {2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is under MIT License, which means it is free for both commercial and non-commercial use.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This implementation is based on &lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;TTS&lt;/a&gt;, &lt;a href=&#34;https://github.com/jaywalnut310/vits&#34;&gt;VITS&lt;/a&gt;, &lt;a href=&#34;https://github.com/daniilrobnikov/vits2&#34;&gt;VITS2&lt;/a&gt; and &lt;a href=&#34;https://github.com/fishaudio/Bert-VITS2&#34;&gt;Bert-VITS2&lt;/a&gt;. We appreciate their awesome work.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluencelabs/dev-rewards</title>
    <updated>2024-03-12T01:22:31Z</updated>
    <id>tag:github.com,2024-03-12:/fluencelabs/dev-rewards</id>
    <link href="https://github.com/fluencelabs/dev-rewards" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fluence Developer Rewards&lt;/h1&gt; &#xA;&lt;h1&gt;Generate proof (docker)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build docker image&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;docker build -t dev-reward-script .&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your ssh keys are in ~/.ssh, run the script:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;docker run -it --rm --network none -v ~/.ssh:/root/.ssh:ro dev-reward-script&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;If your ssh keys are in other directories, replace {dir_path_for_your_ssh_keys} with your directory path:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;docker run -it --rm --network none -v /{dir_path_for_your_ssh_keys}:/root/.ssh:ro dev-reward-script&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Generate proof (local sh script)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;./install.sh&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;./proof-sh/proof.sh&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Generate proof (local python script)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install python&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;https://www.python.org/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;./install.sh&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;python3 -m venv claim-venv&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;source claim-venv/bin/activate&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pip3 install -r python/requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;python3 python/proof.py&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>