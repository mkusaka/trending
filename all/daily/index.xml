<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-13T01:27:55Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shardeum/shardeum</title>
    <updated>2024-08-13T01:27:55Z</updated>
    <id>tag:github.com,2024-08-13:/shardeum/shardeum</id>
    <link href="https://github.com/shardeum/shardeum" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shardeum/.github/raw/dev/shardeum-white-bg.png&#34; alt=&#34;Shardeum Logo&#34; width=&#34;70%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;An EVM-based autoscaling blockchain platform&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/shardeum/shardeum/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/shardeum&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/933959587462254612?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Shardeum&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/Shardeum?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#running-the-network-locally&#34;&gt;Running the Network Locally&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#running-the-json-rpc-server&#34;&gt;Running the JSON-RPC Server&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#testing-with-metamask&#34;&gt;Testing with MetaMask&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#stopping-and-cleaning-up&#34;&gt;Stopping and Cleaning Up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#health-checks&#34;&gt;Health Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Shardeum is an innovative EVM-compliant blockchain platform that leverages dynamic state sharding to achieve unprecedented scalability. By implementing a sharding model, Shardeum ensures faster processing times and lower transaction costs without compromising security or decentralization.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Horizontal scalability through sharding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: Low latency and high throughput&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Advanced cryptographic techniques and robust consensus protocols&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decentralization&lt;/strong&gt;: Truly decentralized network with no single point of failure&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interoperability&lt;/strong&gt;: EVM compatibility for existing DApps and smart contracts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First, &lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/local-environment-setup.md&#34;&gt;setup your local dev environment for Shardeum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node.js (v18.16.1)&lt;/li&gt; &#xA; &lt;li&gt;npm (v9.5.1)&lt;/li&gt; &#xA; &lt;li&gt;Rust (v1.74.1)&lt;/li&gt; &#xA; &lt;li&gt;Docker (optional, for containerized deployment)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/shardeum/shardeum.git&#xA;cd shardeum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Network Configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git apply debug-10-nodes.patch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more about the different config options &lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/local&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Compile project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run prepare&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install the Shardus CLI:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g shardus&#xA;npm update @shardus/archiver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the Network Locally&lt;/h2&gt; &#xA;&lt;p&gt;To start a local Shardeum network with 10 nodes, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;shardus start 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the JSON-RPC Server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the JSON-RPC server repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/shardeum/json-rpc-server.git&#xA;cd json-rpc-server&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start the server:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default RPC URL is &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing with MetaMask&lt;/h2&gt; &#xA;&lt;p&gt;To test your local Shardeum network using MetaMask:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://metamask.io/download/&#34;&gt;MetaMask extension&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add the Shardeum network to MetaMask:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Network Name: Shardeum&lt;/li&gt; &#xA; &lt;li&gt;RPC URL: &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chain ID: 8082&lt;/li&gt; &#xA; &lt;li&gt;Currency Symbol: SHM&lt;/li&gt; &#xA; &lt;li&gt;Block Explorer URL: &lt;a href=&#34;http://localhost:6001/&#34;&gt;http://localhost:6001/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stopping and Cleaning Up&lt;/h2&gt; &#xA;&lt;p&gt;To stop the network and clean up resources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;shardus stop &amp;amp;&amp;amp; shardus clean &amp;amp;&amp;amp; rm -rf instances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Health Checks&lt;/h2&gt; &#xA;&lt;p&gt;Diagnostic endpoints to check the health of the node&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GET &lt;code&gt;/is-alive&lt;/code&gt; this endpoint returns 200 if the server is running.&lt;/li&gt; &#xA; &lt;li&gt;GET &lt;code&gt;/is-healthy&lt;/code&gt; currently the same as &lt;code&gt;/is-alive&lt;/code&gt; but will be expanded.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Please see our &lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; for more information. All contributors are expected to adhere to our &lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shardeum/shardeum/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/shardeum&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Shardeum&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/shardeum/shardeum/dev/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>timlrx/tailwind-nextjs-starter-blog</title>
    <updated>2024-08-13T01:27:55Z</updated>
    <id>tag:github.com,2024-08-13:/timlrx/tailwind-nextjs-starter-blog</id>
    <link href="https://github.com/timlrx/tailwind-nextjs-starter-blog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a Next.js, Tailwind CSS blogging starter template. Comes out of the box configured with the latest technologies to make technical writing a breeze. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/timlrx/tailwind-nextjs-starter-blog/main/public/static/images/twitter-card.png&#34; alt=&#34;tailwind-nextjs-banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tailwind Nextjs Starter Blog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/timlrx/tailwind-nextjs-starter-blog?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/timlrx/tailwind-nextjs-starter-blog?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/timlrxx&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Ftimlrxx&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/timlrx&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;link=https://github.com/sponsors/timlrx&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/git/external?repository-url=https://github.com/timlrx/tailwind-nextjs-starter-blog&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;, &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; blogging starter template. Version 2 is based on Next App directory with &lt;a href=&#34;https://nextjs.org/docs/getting-started/react-essentials#server-components&#34;&gt;React Server Component&lt;/a&gt; and uses &lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt; to manage markdown content.&lt;/p&gt; &#xA;&lt;p&gt;Probably the most feature-rich Next.js markdown blogging template out there. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.&lt;/p&gt; &#xA;&lt;p&gt;Check out the documentation below to get started.&lt;/p&gt; &#xA;&lt;p&gt;Facing issues? Check the &lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/wiki&#34;&gt;FAQ page&lt;/a&gt; and do a search on past issues. Feel free to open a new issue if none has been posted previously.&lt;/p&gt; &#xA;&lt;p&gt;Feature request? Check the past discussions to see if it has been brought up previously. Otherwise, feel free to start a new discussion thread. All ideas are welcomed!&lt;/p&gt; &#xA;&lt;h2&gt;Variations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These are community contributed forks using different frameworks or with significant changes to the codebase - not officially supported.&lt;/p&gt; &#xA;&lt;p&gt;Astro alternative - &lt;a href=&#34;https://github.com/wanoo21/tailwind-astro-starting-blog&#34;&gt;Tailwind Astro Template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Remix-run alternative - &lt;a href=&#34;https://github.com/SangeetAgarwal/tailwind-remix-run-mdxjs-typescript-starter-blog&#34;&gt;Tailwind Remix-run Starter Blog Template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Internationalization support - &lt;a href=&#34;https://tailwind-nextjs-starter-blog-i18n.vercel.app/&#34;&gt;Template with i18n&lt;/a&gt; and &lt;a href=&#34;https://github.com/PxlSyl/tailwind-nextjs-starter-blog-i18n/tree/main&#34;&gt;source code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples V2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/&#34;&gt;Demo Blog&lt;/a&gt; - this repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.timlrx.com&#34;&gt;My personal blog&lt;/a&gt; - modified to auto-generate blog posts with dates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://karhdo.dev&#34;&gt;Karhdo&#39;s Blog&lt;/a&gt; - Karhdo&#39;s Blog - Karhdo&#39;s Coding Adventure (&lt;a href=&#34;https://github.com/Karhdo/karhdo.dev&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ben.codes&#34;&gt;ben.codes blog&lt;/a&gt; - Benoit&#39;s personal blog about software development (&lt;a href=&#34;https://github.com/bendotcodes/bendotcodes&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tsix.top&#34;&gt;tsix blog&lt;/a&gt; - A front-end engineer is used to record some knowledge points in work and study &lt;em&gt;中文&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atksoto.com/&#34;&gt;SOTO&#39;s Blog&lt;/a&gt; - A more personalized personal website upgraded from V1 (&lt;a href=&#34;https://github.com/acsoto/soto-blog-nextjs&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prabhukirankonda.vercel.app&#34;&gt;Prabhu&#39;s Blog&lt;/a&gt; - Prabhu&#39;s Personal website with blog (&lt;a href=&#34;https://github.com/prabhukiran8790/prabhukirankonda&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.rabbyhasan.com.bd/&#34;&gt;Rabby Hasan&#39;s Blog&lt;/a&gt; - Rabby Hasan&#39;s personal blog about full stack development with cloud (&lt;a href=&#34;https://github.com/rabbyalone/myblog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://enscribe.dev&#34;&gt;enscribe.dev&lt;/a&gt; - enscribe&#39;s personal blog; cybersecurity shenanigans, frontend webdev, etc. (&lt;a href=&#34;https://github.com/jktrn/enscribe.dev&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dalelarroder.com&#34;&gt;dalelarroder.com&lt;/a&gt; - Dale Larroder&#39;s personal website upgraded from V1 (&lt;a href=&#34;https://github.com/dlarroder/dalelarroder&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thetalhatahir.com&#34;&gt;thetalhatahir.com&lt;/a&gt; - Talha Tahir&#39;s personal blog. Added article thumbnails, linkedIn card, Beautiful hero content, technology emoticons.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://homing.so&#34;&gt;homing.so&lt;/a&gt; - Homing&#39;s personal blog about the stuff he&#39;s learning (&lt;a href=&#34;https://github.com/hominsu/blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://contrails.space&#34;&gt;zS1m&#39;s Blog&lt;/a&gt; - zS1m&#39;s personal blog for recording and sharing daily learning technical content (&lt;a href=&#34;https://github.com/zS1m/nextjs-contrails&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dariuszwozniak.net/&#34;&gt;dariuszwozniak.net&lt;/a&gt; - Software development blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terminals.run&#34;&gt;Terminals.run&lt;/a&gt; - Blog site for some thoughts and records for life and technology.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://francisaguilar.co&#34;&gt;francisaguilar.co blog&lt;/a&gt; - Francis Aguilar&#39;s personal blog that talks about tech, fitness, and personal development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min71.dev&#34;&gt;Min71 Dev Blog&lt;/a&gt; - Personal blog about Blockchain, Development and etc. (&lt;a href=&#34;https://github.com/mingi3442/blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://earayu.github.io/&#34;&gt;Bryce Yu&#39;s Blog&lt;/a&gt; - Bryce Yu&#39;s personal Blog about distributed system, database, and web development. (&lt;a href=&#34;https://github.com/earayu/earayu.github.io&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://remote-startup-senpai.com&#34;&gt;Remote Startup Senpai Anime Series Website&lt;/a&gt; - Landing page for the anime series Remote Startup Senpai.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jachsu.com/&#34;&gt;Secret Base&lt;/a&gt; - Jac Hsu&#39;s personal Blog.talks about tech, thought, and life in general.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zsebinformatikus.hu/&#34;&gt;Zsebinformatikus&lt;/a&gt; - The information superhighway guide blog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.ischemist.com/&#34;&gt;Anton Morgunov&#39;s Blog&lt;/a&gt; - talking about science without oversimplifications or why theoretical and computational chemistry is cool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hansking.cn/&#34;&gt;Hans Blog&lt;/a&gt; - Hans&#39; personal blog, front-end technology, gallery and travel diary 中文. (&lt;a href=&#34;https://github.com/hansking98/hans-nextjs-blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cubeyond.net/&#34;&gt;CuB3y0nd&#39;s Portfolio&lt;/a&gt; - CuB3y0nd‘s cyber security study notes「中文」&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://london-tech-talk.com/&#34;&gt;London Tech Talk&lt;/a&gt; - A podcast exploring technology trends and expatriate living experiences. - 日本語&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.ndamulelo.co.za/&#34;&gt;CRUD Flow Blog&lt;/a&gt; - A technical blog about AI, Cloud Engineering, Data Science and Personal development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trilliumsmith.com/&#34;&gt;Trillium&#39;s Blog&lt;/a&gt; - Modified to render resume pdf on &lt;code&gt;/resume&lt;/code&gt; page&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frank-tech-blog.vercel.app/&#34;&gt;Frank&#39;s Tech Blog&lt;/a&gt; - Frank&#39;s personal blog about software development and technology. (&lt;a href=&#34;https://github.com/frank-mendez/frank-blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wujieli.com/&#34;&gt;Wujie&#39;s Blog: 旅行者计划&lt;/a&gt; - Wujie&#39;s personal digital garden (&lt;a href=&#34;https://github.com/wujieli0207/wujie-blog-next&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linxiaodong.com&#34;&gt;Xiaodong&#39;s Blog&lt;/a&gt; - Xiaodong&#39;s personal blog about front-end technology, and life. 「中文」(&lt;a href=&#34;https://github.com/buxuku/buxuku.github.io&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.azurtelier.com/&#34;&gt;Azurtelier.com&lt;/a&gt; - Amos&#39;s personal website for tech, music, AI illustrations, etc. [English/中文] (&lt;a href=&#34;https://github.com/AmosChenZixuan/Azurtelier.com&#34;&gt;Source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.JoshHaines.com/&#34;&gt;JoshHaines.com&lt;/a&gt; - Personal website for Josh Haines. (&lt;a href=&#34;https://github.com/jdhaines/joshhaines&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://animeirl.top&#34;&gt;Jigu&#39;s Blog&lt;/a&gt; - Jigu&#39;s personal blog about tech, crypto, golang, and life. 「中文」&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.andrewsam.xyz/&#34;&gt;andrewsam.xyz&lt;/a&gt; - Andrew&#39;s Personal website using ShadCN, Prisma, MongoDB, Auth.js, Resume Page, Custom Experience timeline and technologies components. (&lt;a href=&#34;https://github.com/andrew-sameh/andrewsam.xyz&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.damaraputra.my.id/&#34;&gt;Rulli Damara Putra&#39;s Portfolio&lt;/a&gt; - Rully&#39;s personal blog and portfolio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.taoluyuan.com&#34;&gt;blog.taoluyuan.com 套路猿&lt;/a&gt; - A personal tech blog that supports multi-theme switching. 「中英」&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lyricsdecode.com&#34;&gt;LyricsDecode.com&lt;/a&gt; - A song lyrics website offering original lyrics, Romanisation, and English translations with customisable viewing options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bmacharia.com/&#34;&gt;bmacharia.com&lt;/a&gt; - Benson Macharia&#39;s technical blog about Cybersecurity and IT Risk Management.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the template? Feel free to create a PR and add your blog to this list.&lt;/p&gt; &#xA;&lt;h2&gt;Examples V1&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/assets/28362229/2124c81f-b99d-4431-839c-347e01a2616c&#34;&gt;v1-blogs-showcase.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the community of users and contributors to the template! We are no longer accepting new blog listings over here. If you have updated from version 1 to version 2, feel free to remove your blog from this list and add it to the one above.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tambouille.vercel.app/&#34;&gt;Aloisdg&#39;s cookbook&lt;/a&gt; - with pictures and recipes!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog-seven.vercel.app/&#34;&gt;GautierArcin&#39;s demo with next translate&lt;/a&gt; - includes translation of mdx posts, &lt;a href=&#34;https://github.com/GautierArcin/tailwind-nextjs-starter-blog/tree/demo/next-translate&#34;&gt;source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://davidlevai.com/&#34;&gt;David Levai&#39;s digital garden&lt;/a&gt; - customized design and added email subscriptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leohuynh.dev&#34;&gt;Leo&#39;s Blog&lt;/a&gt; - Tuan Anh Huynh&#39;s personal site. Add Snippets Page, Author Profile Card, Image Lightbox, ...&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thvu.dev&#34;&gt;thvu.dev&lt;/a&gt; - Added &lt;code&gt;mdx-embed&lt;/code&gt;, view count, reading minutes and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.irvin.dev/&#34;&gt;irvin.dev&lt;/a&gt; - Irvin Lin&#39;s personal site. Added YouTube embedding.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kirillso.com/&#34;&gt;KirillSo.com&lt;/a&gt; - Personal blog &amp;amp; website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slightlysharpe.com&#34;&gt;slightlysharpe.com&lt;/a&gt; - &lt;a href=&#34;https://tincre.com&#34;&gt;Tincre&#39;s&lt;/a&gt; main company blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.b00st.com&#34;&gt;blog.b00st.com&lt;/a&gt; - &lt;a href=&#34;https://b00st.com&#34;&gt;b00st.com&#39;s&lt;/a&gt; main music promotion blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://astrosaurus.me/&#34;&gt;astrosaurus.me&lt;/a&gt; - Ephraim Atta-Duncan&#39;s Personal Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dhanrajsp.me/&#34;&gt;dhanrajsp.me&lt;/a&gt; - Dhanraj&#39;s personal site and blog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.r00ks.io/&#34;&gt;blog.r00ks.io&lt;/a&gt; - Austin Rooks&#39;s personal blog (&lt;a href=&#34;https://github.com/Austionian/blog.r00ks&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://honghong.me&#34;&gt;honghong.me&lt;/a&gt; - Tszhong&#39;s personal website (&lt;a href=&#34;https://github.com/tszhong0411/home&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marceloformentao.dev&#34;&gt;marceloformentao.dev&lt;/a&gt; - Marcelo Formentão personal website (&lt;a href=&#34;https://github.com/marceloavf/marceloformentao.dev&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.abiraja.com/&#34;&gt;abiraja.com&lt;/a&gt; - with a &lt;a href=&#34;https://www.abiraja.com/blog/querying-solana-blockchain&#34;&gt;runnable JS code snippet component!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bpiggin.com&#34;&gt;bpiggin.com&lt;/a&gt; - Ben Piggin&#39;s personal blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maqib.cn&#34;&gt;maqib.cn&lt;/a&gt; - A blog of Chinese front-end developers 狂奔小马的博客 (&lt;a href=&#34;https://github.com/maqi1520/nextjs-tailwind-blog&#34;&gt;源码&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ambilena.com/&#34;&gt;ambilena.com&lt;/a&gt; - Electronic Music Blog &amp;amp; imprint for upcoming musicians.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0xchai.io&#34;&gt;0xchai.io&lt;/a&gt; - Chai&#39;s personal blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techipedia.vercel.app&#34;&gt;techipedia&lt;/a&gt; - Simple blogging progressive web app with custom installation button and top progress bar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reubence.com&#34;&gt;reubence.com&lt;/a&gt; - Reuben Rapose&#39;s Digital Garden&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://axolo.co/blog&#34;&gt;axolo.co/blog&lt;/a&gt; - Engineering management news &amp;amp; axolo.co updates (with image preview for article in the home page)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://musing.vercel.app/&#34;&gt;musing.vercel.app&lt;/a&gt; - Parth Desai&#39;s personal blog (&lt;a href=&#34;https://github.com/pycoder2000/blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.onyourmental.com/&#34;&gt;onyourmental.com&lt;/a&gt; - &lt;a href=&#34;https://github.com/Cwarcup&#34;&gt;Curtis Warcup&#39;s&lt;/a&gt; website for the On Your Mental Podcast (&lt;a href=&#34;https://github.com/Cwarcup/on-your-mental&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cwarcup.com/&#34;&gt;cwarcup.com&lt;/a&gt; - Curtis Warcup&#39;s personal website and blog (&lt;a href=&#34;https://github.com/Cwarcup/personal-blog&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ondiek-elijah.me/&#34;&gt;ondiek-elijah.me&lt;/a&gt; - Ondiek Elijah&#39;s website and blog (&lt;a href=&#34;https://github.com/Dev-Elie/ondiek-elijah&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jmalvarez.dev/&#34;&gt;jmalvarez.dev&lt;/a&gt; - José Miguel Álvarez&#39;s personal blog (&lt;a href=&#34;https://github.com/josemiguel-alvarez/nextjs-blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://justingosses.com/&#34;&gt;justingosses.com&lt;/a&gt; - Justin Gosses&#39;s personal website and blog (&lt;a href=&#34;https://github.com/JustinGOSSES/justingosses-website&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitoflearning-9a57.fly.dev/&#34;&gt;https://bitoflearning-9a57.fly.dev/&lt;/a&gt; - Sangeet Agarwal&#39;s personal blog, replatformed to &lt;a href=&#34;https://remix.run/remix&#34;&gt;remix&lt;/a&gt; using the &lt;a href=&#34;https://github.com/remix-run/indie-stack&#34;&gt;indie stack&lt;/a&gt; (&lt;a href=&#34;https://github.com/SangeetAgarwal/bitoflearning&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raphaelchelly.com/&#34;&gt;raphaelchelly.com&lt;/a&gt; - Raphaël Chelly&#39;s personal website and blog (&lt;a href=&#34;https://github.com/raphaelchelly/raph_www&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kaveh.page&#34;&gt;kaveh.page&lt;/a&gt; - Kaveh Tehrani&#39;s personal blog. Added tags directory, profile card, time-to-read on posts directory, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drakerossman.com/&#34;&gt;drakerossman.com&lt;/a&gt; - Drake Rossman&#39;s blog about NixOS, Rust, Software Architecture and Engineering Management, as well as general musings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meamenu.com&#34;&gt;meamenu.com&lt;/a&gt; - Landing page and product blog starting from this template. It also uses &lt;a href=&#34;https://www.framer.com/motion&#34;&gt;framer-motion&lt;/a&gt; for animations, custom layout templates, &lt;a href=&#34;https://waline.js.org/en/&#34;&gt;waline&lt;/a&gt; for blog comments and &lt;a href=&#34;https://primereact.org/&#34;&gt;primereact&lt;/a&gt; forms [Ita]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;I wanted to port my existing blog to Nextjs and Tailwind CSS but there was no easy out of the box template to use so I decided to create one. Design is adapted from &lt;a href=&#34;https://github.com/tailwindlabs/blog.tailwindcss.com&#34;&gt;Tailwindlabs blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I wanted it to be nearly as feature-rich as popular blogging templates like &lt;a href=&#34;https://github.com/daattali/beautiful-jekyll&#34;&gt;beautiful-jekyll&lt;/a&gt; and &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules&#34;&gt;Hugo Academic&lt;/a&gt; but with the best of React&#39;s ecosystem and current web development&#39;s best practices.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js with Typescript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt; to manage content logic&lt;/li&gt; &#xA; &lt;li&gt;Easy styling customization with &lt;a href=&#34;https://tailwindcss.com/blog/tailwindcss-v3&#34;&gt;Tailwind 3.0&lt;/a&gt; and primary color attribute&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mdxjs.com/&#34;&gt;MDX - write JSX in markdown documents!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Near perfect lighthouse score - &lt;a href=&#34;https://www.webpagetest.org/result/230805_BiDcBQ_4H7&#34;&gt;Lighthouse report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lightweight, 85kB first load JS&lt;/li&gt; &#xA; &lt;li&gt;Mobile-friendly view&lt;/li&gt; &#xA; &lt;li&gt;Light and dark theme&lt;/li&gt; &#xA; &lt;li&gt;Font optimization with &lt;a href=&#34;https://nextjs.org/docs/app/api-reference/components/font&#34;&gt;next/font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://github.com/timlrx/pliny&#34;&gt;pliny&lt;/a&gt; that provides: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple analytics options including &lt;a href=&#34;https://umami.is/&#34;&gt;Umami&lt;/a&gt;, &lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible&lt;/a&gt;, &lt;a href=&#34;https://simpleanalytics.com/&#34;&gt;Simple Analytics&lt;/a&gt;, Posthog and Google Analytics&lt;/li&gt; &#xA;   &lt;li&gt;Comments via &lt;a href=&#34;https://github.com/laymonage/giscus&#34;&gt;Giscus&lt;/a&gt;, &lt;a href=&#34;https://github.com/utterance/utterances&#34;&gt;Utterances&lt;/a&gt; or Disqus&lt;/li&gt; &#xA;   &lt;li&gt;Newsletter API and component with support for Mailchimp, Buttondown, Convertkit, Klaviyo, Revue, and Emailoctopus&lt;/li&gt; &#xA;   &lt;li&gt;Command palette search with &lt;a href=&#34;https://github.com/timc1/kbar&#34;&gt;Kbar&lt;/a&gt; or Algolia&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Server-side syntax highlighting with line numbers and line highlighting via &lt;a href=&#34;https://github.com/timlrx/rehype-prism-plus&#34;&gt;rehype-prism-plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Math display supported via &lt;a href=&#34;https://katex.org/&#34;&gt;KaTeX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Citation and bibliography support via &lt;a href=&#34;https://github.com/timlrx/rehype-citation&#34;&gt;rehype-citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts&#34;&gt;Github alerts&lt;/a&gt; via &lt;a href=&#34;https://github.com/jaywcjlove/remark-github-blockquote-alert&#34;&gt;remark-github-blockquote-alert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic image optimization via &lt;a href=&#34;https://nextjs.org/docs/basic-features/image-optimization&#34;&gt;next/image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for tags - each unique tag will be its own page&lt;/li&gt; &#xA; &lt;li&gt;Support for multiple authors&lt;/li&gt; &#xA; &lt;li&gt;3 different blog layouts&lt;/li&gt; &#xA; &lt;li&gt;2 different blog listing layouts&lt;/li&gt; &#xA; &lt;li&gt;Support for nested routing of blog posts&lt;/li&gt; &#xA; &lt;li&gt;Projects page&lt;/li&gt; &#xA; &lt;li&gt;Preconfigured security headers&lt;/li&gt; &#xA; &lt;li&gt;SEO friendly with RSS feed, sitemaps and more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample posts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/github-markdown-guide&#34;&gt;A markdown guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/guide-to-using-images-in-nextjs&#34;&gt;Learn more about images in Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/deriving-ols-estimator&#34;&gt;A tour of math typesetting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/pictures-of-canada&#34;&gt;Simple MDX image grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/the-time-machine&#34;&gt;Example of long prose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/nested-route/introducing-multi-part-posts-with-nested-routing&#34;&gt;Example of Nested Route Post&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start Guide&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx degit &#39;timlrx/tailwind-nextjs-starter-blog&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Personalize &lt;code&gt;siteMetadata.js&lt;/code&gt; (site related information)&lt;/li&gt; &#xA; &lt;li&gt;Modify the content security policy in &lt;code&gt;next.config.js&lt;/code&gt; if you want to use other analytics provider or a commenting solution other than giscus.&lt;/li&gt; &#xA; &lt;li&gt;Personalize &lt;code&gt;authors/default.md&lt;/code&gt; (main author)&lt;/li&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;projectsData.ts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;headerNavLinks.ts&lt;/code&gt; to customize navigation links&lt;/li&gt; &#xA; &lt;li&gt;Add blog posts&lt;/li&gt; &#xA; &lt;li&gt;Deploy on Vercel&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note, that if you are using Windows, you may need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$env:PWD = $(Get-Location).Path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;Edit the layout in &lt;code&gt;app&lt;/code&gt; or content in &lt;code&gt;data&lt;/code&gt;. With live reloading, the pages auto-updates as you edit them.&lt;/p&gt; &#xA;&lt;h2&gt;Extend / Customize&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;data/siteMetadata.js&lt;/code&gt; - contains most of the site related information which should be modified for a user&#39;s need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/authors/default.md&lt;/code&gt; - default author information (required). Additional authors can be added as files in &lt;code&gt;data/authors&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/projectsData.js&lt;/code&gt; - data used to generate styled card on the projects page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/headerNavLinks.js&lt;/code&gt; - navigation links.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/logo.svg&lt;/code&gt; - replace with your own logo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/blog&lt;/code&gt; - replace with your own blog posts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;public/static&lt;/code&gt; - store assets such as images and favicons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;css/tailwind.css&lt;/code&gt; - tailwind configuration and stylesheet which can be modified to change the overall look and feel of the site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;css/prism.css&lt;/code&gt; - controls the styles associated with the code blocks. Feel free to customize it and use your preferred prismjs theme e.g. &lt;a href=&#34;https://github.com/PrismJS/prism-themes&#34;&gt;prism themes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;contentlayer.config.ts&lt;/code&gt; - configuration for Contentlayer, including definition of content sources and MDX plugins used. See &lt;a href=&#34;https://www.contentlayer.dev/docs/getting-started&#34;&gt;Contentlayer documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;components/MDXComponents.js&lt;/code&gt; - pass your own JSX code or React component by specifying it over here. You can then use them directly in the &lt;code&gt;.mdx&lt;/code&gt; or &lt;code&gt;.md&lt;/code&gt; file. By default, a custom link, &lt;code&gt;next/image&lt;/code&gt; component, table of contents component and Newsletter form are passed down. Note that the components should be default exported to avoid &lt;a href=&#34;https://github.com/vercel/next.js/issues/51593&#34;&gt;existing issues with Next.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;layouts&lt;/code&gt; - main templates used in pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are currently 3 post layouts available: &lt;code&gt;PostLayout&lt;/code&gt;, &lt;code&gt;PostSimple&lt;/code&gt; and &lt;code&gt;PostBanner&lt;/code&gt;. &lt;code&gt;PostLayout&lt;/code&gt; is the default 2 column layout with meta and author information. &lt;code&gt;PostSimple&lt;/code&gt; is a simplified version of &lt;code&gt;PostLayout&lt;/code&gt;, while &lt;code&gt;PostBanner&lt;/code&gt; features a banner image.&lt;/li&gt; &#xA; &lt;li&gt;There are 2 blog listing layouts: &lt;code&gt;ListLayout&lt;/code&gt;, the layout used in version 1 of the template with a search bar and &lt;code&gt;ListLayoutWithTags&lt;/code&gt;, currently used in version 2, which omits the search bar but includes a sidebar with information on the tags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;app&lt;/code&gt; - pages to route to. Read the &lt;a href=&#34;https://nextjs.org/docs/app&#34;&gt;Next.js documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;next.config.js&lt;/code&gt; - configuration related to Next.js. You need to adapt the Content Security Policy if you want to load scripts, images etc. from other domains.&lt;/p&gt; &#xA;&lt;h2&gt;Post&lt;/h2&gt; &#xA;&lt;p&gt;Content is modelled using &lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt;, which allows you to define your own content schema and use it to generate typed content objects. See &lt;a href=&#34;https://www.contentlayer.dev/docs/getting-started&#34;&gt;Contentlayer documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Frontmatter&lt;/h3&gt; &#xA;&lt;p&gt;Frontmatter follows &lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;Hugo&#39;s standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;code&gt;contentlayer.config.ts&lt;/code&gt; for an up to date list of supported fields. The following fields are supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;title (required)&#xA;date (required)&#xA;tags (optional)&#xA;lastmod (optional)&#xA;draft (optional)&#xA;summary (optional)&#xA;images (optional)&#xA;authors (optional list which should correspond to the file names in `data/authors`. Uses `default` if none is specified)&#xA;layout (optional list which should correspond to the file names in `data/layouts`)&#xA;canonicalUrl (optional, canonical url for the post for SEO)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an example of a post&#39;s frontmatter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;title: &#39;Introducing Tailwind Nexjs Starter Blog&#39;&#xA;date: &#39;2021-01-12&#39;&#xA;lastmod: &#39;2021-01-18&#39;&#xA;tags: [&#39;next-js&#39;, &#39;tailwind&#39;, &#39;guide&#39;]&#xA;draft: false&#xA;summary: &#39;Looking for a performant, out of the box template, with all the best in web technology to support your blogging needs? Checkout the Tailwind Nextjs Starter Blog template.&#39;&#xA;images: [&#39;/static/images/canada/mountains.jpg&#39;, &#39;/static/images/canada/toronto.jpg&#39;]&#xA;authors: [&#39;default&#39;, &#39;sparrowhawk&#39;]&#xA;layout: PostLayout&#xA;canonicalUrl: https://tailwind-nextjs-starter-blog.vercel.app/blog/introducing-tailwind-nextjs-starter-blog&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Pages&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/timlrx/tailwind-nextjs-starter-blog/main/.github/workflows/pages.yml&#34;&gt;&lt;code&gt;pages.yml&lt;/code&gt;&lt;/a&gt; workflow is already provided. Simply select &#34;GitHub Actions&#34; in: &lt;code&gt;Settings &amp;gt; Pages &amp;gt; Build and deployment &amp;gt; Source&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vercel&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to deploy the template is to deploy on &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;. Check out the &lt;a href=&#34;https://nextjs.org/docs/app/building-your-application/deploying&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Netlify&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;’s Next.js runtime configures enables key Next.js functionality on your website without the need for additional configurations. Netlify generates serverless functions that will handle Next.js functionalities such as server-side rendered (SSR) pages, incremental static regeneration (ISR), &lt;code&gt;next/images&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.netlify.com/integrations/frameworks/next-js/overview/#next-js-runtime&#34;&gt;Next.js on Netlify&lt;/a&gt; for suggested configuration values and more details.&lt;/p&gt; &#xA;&lt;h3&gt;Static hosting services (GitHub Pages / S3 / Firebase etc.)&lt;/h3&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ EXPORT=1 UNOPTIMIZED=1 yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, deploy the generated &lt;code&gt;out&lt;/code&gt; folder or run &lt;code&gt;npx serve out&lt;/code&gt; it locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] If deploying with a URL base path, like &lt;a href=&#34;https://example.org/myblog&#34;&gt;https://example.org/myblog&lt;/a&gt; you need an extra &lt;code&gt;BASE_PATH&lt;/code&gt; shell-var to the build command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ EXPORT=1 UNOPTIMIZED=1 BASE_PATH=/myblog yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;=&amp;gt; In your code, &lt;code&gt;${process.env.BASE_PATH || &#39;&#39;}/robots.txt&lt;/code&gt; will print &lt;code&gt;&#34;/myblog/robots.txt&#34;&lt;/code&gt; in the &lt;code&gt;out&lt;/code&gt; build (or only &lt;code&gt;/robots.txt&lt;/code&gt; if &lt;code&gt;yarn dev&lt;/code&gt;, ie: on localhost:3000)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Alternatively to &lt;code&gt;UNOPTIMIZED=1&lt;/code&gt;, to continue using &lt;code&gt;next/image&lt;/code&gt;, you can use an alternative image optimization provider such as Imgix, Cloudinary or Akamai. See &lt;a href=&#34;https://nextjs.org/docs/app/building-your-application/deploying/static-exports#image-optimization&#34;&gt;image optimization documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Consider removing the following features that cannot be used in a static build:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Comment out &lt;code&gt;headers()&lt;/code&gt; from &lt;code&gt;next.config.js&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Remove &lt;code&gt;api&lt;/code&gt; folder and components which call the server-side function such as the Newsletter component. Not technically required and the site will build successfully, but the APIs cannot be used as they are server-side functions.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timlrx/tailwind-nextjs-starter-blog/main/faq/custom-mdx-component.md&#34;&gt;How can I add a custom MDX component?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timlrx/tailwind-nextjs-starter-blog/main/faq/customize-kbar-search.md&#34;&gt;How can I customize the &lt;code&gt;kbar&lt;/code&gt; search?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Using the template? Support this effort by giving a star on GitHub, sharing your own blog and giving a shoutout on Twitter or becoming a project &lt;a href=&#34;https://github.com/sponsors/timlrx&#34;&gt;sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt; © &lt;a href=&#34;https://www.timlrx.com&#34;&gt;Timothy Lin&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>raspberrypi/pico-sdk</title>
    <updated>2024-08-13T01:27:55Z</updated>
    <id>tag:github.com,2024-08-13:/raspberrypi/pico-sdk</id>
    <link href="https://github.com/raspberrypi/pico-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Raspberry Pi Pico SDK&lt;/h1&gt; &#xA;&lt;p&gt;The Raspberry Pi Pico SDK (henceforth the SDK) provides the headers, libraries and build system necessary to write programs for the RP-series microcontroller-based devices such as the Raspberry Pi Pico or Raspberry Pi Pico 2 in C, C++ or assembly language.&lt;/p&gt; &#xA;&lt;p&gt;The SDK is designed to provide an API and programming environment that is familiar both to non-embedded C developers and embedded C developers alike. A single program runs on the device at a time and starts with a conventional &lt;code&gt;main()&lt;/code&gt; method. Standard C/C++ libraries are supported along with C-level libraries/APIs for accessing all of the RP-series microcontroller&#39;s hardware including PIO (Programmable IO).&lt;/p&gt; &#xA;&lt;p&gt;Additionally, the SDK provides higher level libraries for dealing with timers, synchronization, Wi-Fi and Bluetooth networking, USB and multicore programming. These libraries should be comprehensive enough that your application code rarely, if at all, needs to access hardware registers directly. However, if you do need or prefer to access the raw hardware registers, you will also find complete and fully-commented register definition headers in the SDK. There&#39;s no need to look up addresses in the datasheet.&lt;/p&gt; &#xA;&lt;p&gt;The SDK can be used to build anything from simple applications, fully-fledged runtime environments such as MicroPython, to low level software such as the RP-series microcontroller&#39;s on-chip bootrom itself.&lt;/p&gt; &#xA;&lt;p&gt;The design goal for entire SDK is to be simple but powerful.&lt;/p&gt; &#xA;&lt;p&gt;Additional libraries/APIs that are not yet ready for inclusion in the SDK can be found in &lt;a href=&#34;https://github.com/raspberrypi/pico-extras&#34;&gt;pico-extras&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rptl.io/pico-get-started&#34;&gt;Getting Started with the Raspberry Pi Pico-Series&lt;/a&gt; for information on how to setup your hardware, IDE/environment and how to build and debug software for the Raspberry Pi Pico and other RP-series microcontroller based devices.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rptl.io/picow-connect&#34;&gt;Connecting to the Internet with Raspberry Pi Pico W&lt;/a&gt; to learn more about writing applications for your Raspberry Pi Pico W that connect to the internet.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rptl.io/pico-c-sdk&#34;&gt;Raspberry Pi Pico-Series C/C++ SDK&lt;/a&gt; to learn more about programming using the SDK, to explore more advanced features, and for complete PDF-based API documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rptl.io/pico-doxygen&#34;&gt;Online Raspberry Pi Pico SDK API docs&lt;/a&gt; for HTML-based API documentation.&lt;/p&gt; &#xA;&lt;h1&gt;Example code&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/raspberrypi/pico-examples&#34;&gt;pico-examples&lt;/a&gt; for example code you can build.&lt;/p&gt; &#xA;&lt;h1&gt;Getting the latest SDK code&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/raspberrypi/pico-sdk/tree/master/&#34;&gt;master&lt;/a&gt; branch of &lt;code&gt;pico-sdk&lt;/code&gt; on GitHub contains the &lt;em&gt;latest stable release&lt;/em&gt; of the SDK. If you need or want to test upcoming features, you can try the &lt;a href=&#34;https://github.com/raspberrypi/pico-sdk/tree/develop/&#34;&gt;develop&lt;/a&gt; branch instead.&lt;/p&gt; &#xA;&lt;h1&gt;Quick-start your own project&lt;/h1&gt; &#xA;&lt;h2&gt;Using Visual Studio Code&lt;/h2&gt; &#xA;&lt;p&gt;You can install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=raspberry-pi.raspberry-pi-pico&#34;&gt;Raspberry Pi Pico Visual Studio Code extension&lt;/a&gt; in VS Code.&lt;/p&gt; &#xA;&lt;h2&gt;Unix command line&lt;/h2&gt; &#xA;&lt;p&gt;These instructions are extremely terse, and Linux-based only. For detailed steps, instructions for other platforms, and just in general, we recommend you see &lt;a href=&#34;https://rptl.io/pico-c-sdk&#34;&gt;Raspberry Pi Pico-Series C/C++ SDK&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install CMake (at least version 3.13), and a GCC cross compiler&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up your project to point to use the Raspberry Pi Pico SDK&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Either by cloning the SDK locally (most common) :&lt;/p&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;git clone&lt;/code&gt; this Raspberry Pi Pico SDK repository&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Copy &lt;a href=&#34;https://github.com/raspberrypi/pico-sdk/raw/master/external/pico_sdk_import.cmake&#34;&gt;pico_sdk_import.cmake&lt;/a&gt; from the SDK into your project directory&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Set &lt;code&gt;PICO_SDK_PATH&lt;/code&gt; to the SDK location in your environment, or pass it (&lt;code&gt;-DPICO_SDK_PATH=&lt;/code&gt;) to cmake later.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Setup a &lt;code&gt;CMakeLists.txt&lt;/code&gt; like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 3.13...3.27)&#xA;&#xA;# initialize the SDK based on PICO_SDK_PATH&#xA;# note: this must happen before project()&#xA;include(pico_sdk_import.cmake)&#xA;&#xA;project(my_project)&#xA;&#xA;# initialize the Raspberry Pi Pico SDK&#xA;pico_sdk_init()&#xA;&#xA;# rest of your project&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Or with the Raspberry Pi Pico SDK as a submodule :&lt;/p&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;Clone the SDK as a submodule called &lt;code&gt;pico-sdk&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Setup a &lt;code&gt;CMakeLists.txt&lt;/code&gt; like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 3.13...3.27)&#xA;&#xA;# initialize pico-sdk from submodule&#xA;# note: this must happen before project()&#xA;include(pico-sdk/pico_sdk_init.cmake)&#xA;&#xA;project(my_project)&#xA;&#xA;# initialize the Raspberry Pi Pico SDK&#xA;pico_sdk_init()&#xA;&#xA;# rest of your project&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Or with automatic download from GitHub :&lt;/p&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;Copy &lt;a href=&#34;https://github.com/raspberrypi/pico-sdk/raw/master/external/pico_sdk_import.cmake&#34;&gt;pico_sdk_import.cmake&lt;/a&gt; from the SDK into your project directory&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Setup a &lt;code&gt;CMakeLists.txt&lt;/code&gt; like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 3.13)&#xA;&#xA;# initialize pico-sdk from GIT&#xA;# (note this can come from environment, CMake cache etc)&#xA;set(PICO_SDK_FETCH_FROM_GIT on)&#xA;&#xA;# pico_sdk_import.cmake is a single file copied from this SDK&#xA;# note: this must happen before project()&#xA;include(pico_sdk_import.cmake)&#xA;&#xA;project(my_project)&#xA;&#xA;# initialize the Raspberry Pi Pico SDK&#xA;pico_sdk_init()&#xA;&#xA;# rest of your project&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Or by cloning the SDK locally, but without copying &lt;code&gt;pico_sdk_import.cmake&lt;/code&gt;:&lt;/p&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;git clone&lt;/code&gt; this Raspberry Pi Pico SDK repository&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Setup a &lt;code&gt;CMakeLists.txt&lt;/code&gt; like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 3.13)&#xA;&#xA;# initialize the SDK directly&#xA;include(/path/to/pico-sdk/pico_sdk_init.cmake)&#xA;&#xA;project(my_project)&#xA;&#xA;# initialize the Raspberry Pi Pico SDK&#xA;pico_sdk_init()&#xA;&#xA;# rest of your project&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write your code (see &lt;a href=&#34;https://github.com/raspberrypi/pico-examples&#34;&gt;pico-examples&lt;/a&gt; or the &lt;a href=&#34;https://rptl.io/pico-c-sdk&#34;&gt;Raspberry Pi Pico-Series C/C++ SDK&lt;/a&gt; documentation for more information)&lt;/p&gt; &lt;p&gt;About the simplest you can do is a single source file (e.g. hello_world.c)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &#34;pico/stdlib.h&#34;&#xA;&#xA;int main() {&#xA;    stdio_init_all();&#xA;    printf(&#34;Hello, world!\n&#34;);&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And add the following to your &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;add_executable(hello_world&#xA;    hello_world.c&#xA;)&#xA;&#xA;# Add pico_stdlib library which aggregates commonly used features&#xA;target_link_libraries(hello_world pico_stdlib)&#xA;&#xA;# create map/bin/hex/uf2 file in addition to ELF.&#xA;pico_add_extra_outputs(hello_world)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note this example uses the default UART for &lt;em&gt;stdout&lt;/em&gt;; if you want to use the default USB see the &lt;a href=&#34;https://github.com/raspberrypi/pico-examples/tree/master/hello_world/usb&#34;&gt;hello-usb&lt;/a&gt; example.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setup a CMake build directory. For example, if not using an IDE:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake ..&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When building for a board other than the Raspberry Pi Pico, you should pass &lt;code&gt;-DPICO_BOARD=board_name&lt;/code&gt; to the &lt;code&gt;cmake&lt;/code&gt; command above, e.g. &lt;code&gt;cmake -DPICO_BOARD=pico2 ..&lt;/code&gt; or &lt;code&gt;cmake -DPICO_BOARD=pico_w ..&lt;/code&gt; to configure the SDK and build options accordingly for that particular board.&lt;/p&gt; &lt;p&gt;Specifying &lt;code&gt;PICO_BOARD=&amp;lt;booardname&amp;gt;&lt;/code&gt; sets up various compiler defines (e.g. default pin numbers for UART and other hardware) and in certain cases also enables the use of additional libraries (e.g. wireless support when building for &lt;code&gt;PICO_BOARD=pico_w&lt;/code&gt;) which cannot be built without a board which provides the requisite hardware functionality.&lt;/p&gt; &lt;p&gt;For a list of boards defined in the SDK itself, look in &lt;a href=&#34;https://raw.githubusercontent.com/raspberrypi/pico-sdk/master/src/boards/include/boards&#34;&gt;this directory&lt;/a&gt; which has a header for each named board.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make your target from the build directory you created.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make hello_world&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You now have &lt;code&gt;hello_world.elf&lt;/code&gt; to load via a debugger, or &lt;code&gt;hello_world.uf2&lt;/code&gt; that can be installed and run on your Raspberry Pi Pico-series device via drag and drop.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;RISC-V support on RP2350&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rptl.io/pico-c-sdk&#34;&gt;Raspberry Pi Pico-series C/C++ SDK&lt;/a&gt; for information on setting up a build environment for RISC-V on RP2350.&lt;/p&gt;</summary>
  </entry>
</feed>