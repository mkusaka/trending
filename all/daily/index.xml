<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-07T01:28:46Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sqlfluff/sqlfluff</title>
    <updated>2024-12-07T01:28:46Z</updated>
    <id>tag:github.com,2024-12-07:/sqlfluff/sqlfluff</id>
    <link href="https://github.com/sqlfluff/sqlfluff" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modular SQL linter and auto-formatter with support for multiple dialects and templated code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/images/sqlfluff-wide.png&#34; alt=&#34;SQLFluff&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The SQL Linter for Humans&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/sqlfluff.svg?style=flat-square&amp;amp;logo=PyPi&#34; alt=&#34;PyPi Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/status/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/sqlfluff?style=flat-square&#34; alt=&#34;PyPi Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/actions/workflows/ci-tests.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/sqlfluff/sqlfluff/.github/workflows/ci-tests.yml?logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sqlfluff.readthedocs.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/readthedocs/sqlfluff?style=flat-square&amp;amp;logo=Read%20the%20Docs&#34; alt=&#34;ReadTheDocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/sqlfluff/sqlfluff&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/sqlfluff/sqlfluff?logo=docker&amp;amp;style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gurubase.io/g/sqlfluff&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gurubase-Ask%20SQLFluff%20Guru-006BFF?style=flat-square&#34; alt=&#34;Gurubase&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; is a dialect-flexible and configurable SQL linter. Designed with ELT applications in mind, &lt;strong&gt;SQLFluff&lt;/strong&gt; also works with Jinja templating and dbt. &lt;strong&gt;SQLFluff&lt;/strong&gt; will auto-fix most linting errors, allowing you to focus your time on what matters.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#dialects-supported&#34;&gt;Dialects Supported&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#templates-supported&#34;&gt;Templates Supported&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#vs-code-extension&#34;&gt;VS Code Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#sqlfluff-on-slack&#34;&gt;SQLFluff on Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#sqlfluff-on-twitter&#34;&gt;SQLFluff on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Dialects Supported&lt;/h2&gt; &#xA;&lt;p&gt;Although SQL is reasonably consistent in its implementations, there are several different dialects available with variations of syntax and grammar. &lt;strong&gt;SQLFluff&lt;/strong&gt; currently supports the following SQL dialects (though perhaps not in full):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ANSI SQL - this is the base version and on occasion may not strictly follow the ANSI/ISO SQL definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/athena/&#34;&gt;Athena&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/bigquery/&#34;&gt;BigQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clickhouse.com/&#34;&gt;ClickHouse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://databricks.com/&#34;&gt;Databricks&lt;/a&gt; (note: this extends the &lt;code&gt;sparksql&lt;/code&gt; dialect with &lt;a href=&#34;https://docs.databricks.com/data-governance/unity-catalog/index.html&#34;&gt;Unity Catalog&lt;/a&gt; syntax).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/analytics/db2&#34;&gt;Db2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://duckdb.org/&#34;&gt;DuckDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.exasol.com/&#34;&gt;Exasol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://greenplum.org/&#34;&gt;Greenplum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hive.apache.org/&#34;&gt;Hive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://impala.apache.org/&#34;&gt;Impala&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://materialize.com/&#34;&gt;Materialize&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/index.html&#34;&gt;Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; (aka Postgres)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/redshift/index.html&#34;&gt;Redshift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.snowflake.com/&#34;&gt;Snowflake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm&#34;&gt;SOQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spark.apache.org/docs/latest/&#34;&gt;SparkSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.starrocks.io&#34;&gt;StarRocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.teradata.com/&#34;&gt;Teradata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/sql/t-sql/language-reference&#34;&gt;Transact-SQL&lt;/a&gt; (aka T-SQL)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trino.io/&#34;&gt;Trino&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vertica.com/&#34;&gt;Vertica&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We aim to make it easy to expand on the support of these dialects and also add other, currently unsupported, dialects. Please &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;raise issues&lt;/a&gt; (or upvote any existing issues) to let us know of demand for missing support.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests from those that know the missing syntax or dialects are especially welcomed and are the question way for you to get support added. We are happy to work with any potential contributors on this to help them add this support. Please raise an issue first for any large feature change to ensure it is a good fit for this project before spending time on this work.&lt;/p&gt; &#xA;&lt;h2&gt;Templates Supported&lt;/h2&gt; &#xA;&lt;p&gt;SQL itself does not lend itself well to &lt;a href=&#34;https://docs.getdbt.com/docs/viewpoint#section-modularity&#34;&gt;modularity&lt;/a&gt;, so to introduce some flexibility and reusability it is often &lt;a href=&#34;https://en.wikipedia.org/wiki/Template_processor&#34;&gt;templated&lt;/a&gt; as discussed more in &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/perma/modularity.html&#34;&gt;our modularity documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; supports the following templates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/&#34;&gt;Jinja&lt;/a&gt; (aka Jinja2)&lt;/li&gt; &#xA; &lt;li&gt;SQL placeholders (e.g. SQLAlchemy parameters)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/string.html#format-string-syntax&#34;&gt;Python format strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.getdbt.com/&#34;&gt;dbt&lt;/a&gt; (requires plugin)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Again, please raise issues if you wish to support more templating languages/syntaxes.&lt;/p&gt; &#xA;&lt;h2&gt;VS Code Extension&lt;/h2&gt; &#xA;&lt;p&gt;We also have a VS Code extension:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlfluff/vscode-sqlfluff&#34;&gt;Github Repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dorzey.vscode-sqlfluff&#34;&gt;Extension in VS Code marketplace&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To get started, install the package and run &lt;code&gt;sqlfluff lint&lt;/code&gt; or &lt;code&gt;sqlfluff fix&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip install sqlfluff&#xA;$ echo &#34;  SELECT a  +  b FROM tbl;  &#34; &amp;gt; test.sql&#xA;$ sqlfluff lint test.sql --dialect ansi&#xA;== [test.sql] FAIL&#xA;L:   1 | P:   1 | LT01 | Expected only single space before &#39;SELECT&#39; keyword.&#xA;                       | Found &#39;  &#39;. [layout.spacing]&#xA;L:   1 | P:   1 | LT02 | First line should not be indented.&#xA;                       | [layout.indent]&#xA;L:   1 | P:   1 | LT13 | Files must not begin with newlines or whitespace.&#xA;                       | [layout.start_of_file]&#xA;L:   1 | P:  11 | LT01 | Expected only single space before binary operator &#39;+&#39;.&#xA;                       | Found &#39;  &#39;. [layout.spacing]&#xA;L:   1 | P:  14 | LT01 | Expected only single space before naked identifier.&#xA;                       | Found &#39;  &#39;. [layout.spacing]&#xA;L:   1 | P:  27 | LT01 | Unnecessary trailing whitespace at end of file.&#xA;                       | [layout.spacing]&#xA;L:   1 | P:  27 | LT12 | Files must end with a single trailing newline.&#xA;                       | [layout.end_of_file]&#xA;All Finished 📜 🎉!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;a href=&#34;https://hub.docker.com/r/sqlfluff/sqlfluff&#34;&gt;&lt;strong&gt;Official SQLFluff Docker Image&lt;/strong&gt;&lt;/a&gt; or have a play using &lt;a href=&#34;https://online.sqlfluff.com/&#34;&gt;&lt;strong&gt;SQLFluff online&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For full &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/perma/cli.html&#34;&gt;CLI usage&lt;/a&gt; and &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/perma/rules.html&#34;&gt;rules reference&lt;/a&gt;, see &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/&#34;&gt;the SQLFluff docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For full documentation visit &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/&#34;&gt;docs.sqlfluff.com&lt;/a&gt;. This documentation is generated from this repository so please raise &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;issues&lt;/a&gt; or pull requests for any additions, corrections, or clarifications.&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; adheres to &lt;a href=&#34;https://semver.org/spec/v2.0.0.html&#34;&gt;Semantic Versioning&lt;/a&gt;, so breaking changes should be restricted to major versions releases. Some elements (such as the python API) are in a less stable state and may see more significant changes more often. For details on breaking changes and how to migrate between versions, see our &lt;a href=&#34;https://docs.sqlfluff.com/en/latest/perma/releasenotes.html&#34;&gt;release notes&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; for more details. If you would like to join in, please consider &lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;New releases are made monthly. For more information, visit &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;SQLFluff on Slack&lt;/h1&gt; &#xA;&lt;p&gt;We have a fast-growing community &lt;a href=&#34;https://join.slack.com/t/sqlfluff/shared_invite/zt-2qtu36kdt-OS4iONPbQ3aCz2DIbYJdWg&#34;&gt;on Slack&lt;/a&gt;, come and join us!&lt;/p&gt; &#xA;&lt;h1&gt;SQLFluff on Twitter&lt;/h1&gt; &#xA;&lt;p&gt;Follow us &lt;a href=&#34;https://twitter.com/SQLFluff&#34;&gt;on Twitter @SQLFluff&lt;/a&gt; for announcements and other related posts.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We are grateful to all our &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/graphs/contributors&#34;&gt;contributors&lt;/a&gt;. There is a lot to do in this project, and we are just getting started.&lt;/p&gt; &#xA;&lt;p&gt;If you want to understand more about the architecture of &lt;strong&gt;SQLFluff&lt;/strong&gt;, you can find &lt;a href=&#34;https://docs.sqlfluff.com/en/latest/perma/architecture.html&#34;&gt;more here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to contribute, check out the &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;open issues on GitHub&lt;/a&gt;. You can also see the guide to &lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/images/datacoves.png&#34; alt=&#34;Datacoves&#34; width=&#34;150&#34;&gt;&lt;br&gt; The turnkey analytics stack, find out more at &lt;a href=&#34;https://datacoves.com/&#34;&gt;Datacoves.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imputnet/cobalt</title>
    <updated>2024-12-07T01:28:46Z</updated>
    <id>tag:github.com,2024-12-07:/imputnet/cobalt</id>
    <link href="https://github.com/imputnet/cobalt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;best way to save what you love&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/web/static/favicon.png&#34; title=&#34;cobalt&#34; alt=&#34;cobalt logo&#34; width=&#34;100&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; best way to save what you love &lt;br&gt; &lt;a href=&#34;https://cobalt.tools&#34;&gt; cobalt.tools &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://discord.gg/pQPt8HBUPu&#34;&gt; 💬 community discord server &lt;/a&gt; &lt;a href=&#34;https://x.com/justusecobalt&#34;&gt; 🐦 twitter &lt;/a&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;cobalt is a media downloader that doesn&#39;t piss you off. it&#39;s friendly, efficient, and doesn&#39;t have ads, trackers, paywalls or other nonsense.&lt;/p&gt; &#xA;&lt;p&gt;paste the link, get the file, move on. that simple, just how it should be.&lt;/p&gt; &#xA;&lt;h3&gt;cobalt monorepo&lt;/h3&gt; &#xA;&lt;p&gt;this monorepo includes source code for api, frontend, and related packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/api/&#34;&gt;api tree &amp;amp; readme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/web/&#34;&gt;web tree &amp;amp; readme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/packages/&#34;&gt;packages tree&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;it also includes documentation in the &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/docs/&#34;&gt;docs tree&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/docs/api.md&#34;&gt;cobalt api documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/docs/run-an-instance.md&#34;&gt;how to run a cobalt instance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/docs/protect-an-instance.md&#34;&gt;how to protect a cobalt instance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/docs/configure-for-youtube.md&#34;&gt;how to configure a cobalt instance for youtube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;thank you&lt;/h3&gt; &#xA;&lt;p&gt;cobalt is sponsored by &lt;a href=&#34;https://royalehosting.net/?partner=cobalt&#34;&gt;royalehosting.net&lt;/a&gt; and the main processing servers are hosted on their network. we really appreciate their kindness and support!&lt;/p&gt; &#xA;&lt;h3&gt;ethics&lt;/h3&gt; &#xA;&lt;p&gt;cobalt is a tool that makes downloading public content easier. it takes &lt;strong&gt;zero liability&lt;/strong&gt;. the end user is responsible for what they download, how they use and distribute that content. cobalt never caches any content, it &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/api/src/stream/&#34;&gt;works like a fancy proxy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;cobalt is in no way a piracy tool and cannot be used as such. it can only download free &amp;amp; publicly accessible content. same content can be downloaded via dev tools of any modern web browser.&lt;/p&gt; &#xA;&lt;h3&gt;contributing&lt;/h3&gt; &#xA;&lt;p&gt;thank you for considering making a contribution to cobalt! please check the &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/CONTRIBUTING.md&#34;&gt;contributing guidelines here&lt;/a&gt; before making a pull request.&lt;/p&gt; &#xA;&lt;h3&gt;licenses&lt;/h3&gt; &#xA;&lt;p&gt;for relevant licensing information, see the &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/api/README.md&#34;&gt;api&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/web/README.md&#34;&gt;web&lt;/a&gt; READMEs. unless specified otherwise, the remainder of this repository is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/imputnet/cobalt/main/LICENSE&#34;&gt;AGPL-3.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>QuivrHQ/MegaParse</title>
    <updated>2024-12-07T01:28:46Z</updated>
    <id>tag:github.com,2024-12-07:/QuivrHQ/MegaParse</id>
    <link href="https://github.com/QuivrHQ/MegaParse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;File Parser optimised for LLM Ingestion with no loss 🧠 Parse PDFs, Docx, PPTx in a format that is ideal for LLMs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MegaParse - Your Parser for every type of documents&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QuivrHQ/MegaParse/main/logo.png&#34; alt=&#34;Quivr-logo&#34; width=&#34;30%&#34; style=&#34;border-radius: 50%; padding-bottom: 20px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;MegaParse is a powerful and versatile parser that can handle various types of documents with ease. Whether you&#39;re dealing with text, PDFs, Powerpoint presentations, Word documents MegaParse has got you covered. Focus on having no information loss during parsing.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features 🎯&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Versatile Parser&lt;/strong&gt;: MegaParse is a powerful and versatile parser that can handle various types of documents with ease.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Information Loss&lt;/strong&gt;: Focus on having no information loss during parsing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast and Efficient&lt;/strong&gt;: Designed with speed and efficiency at its core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wide File Compatibility&lt;/strong&gt;: Supports Text, PDF, Powerpoint presentations, Excel, CSV, Word documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Freedom is beautiful, and so is MegaParse. Open source and free to use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files: ✅ PDF ✅ Powerpoint ✅ Word&lt;/li&gt; &#xA; &lt;li&gt;Content: ✅ Tables ✅ TOC ✅ Headers ✅ Footers ✅ Images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/QuivrHQ/MegaParse/assets/19614572/1b4cdb73-8dc2-44ef-b8b4-a7509bc8d4f3&#34;&gt;https://github.com/QuivrHQ/MegaParse/assets/19614572/1b4cdb73-8dc2-44ef-b8b4-a7509bc8d4f3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install megaparse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your OpenAI or Anthropic API key to the .env file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install poppler on your computer (images and PDFs)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install tesseract on your computer (images and PDFs)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have a mac, you also need to install libmagic &lt;code&gt;brew install libmagic&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from megaparse import MegaParse&#xA;from langchain_openai import ChatOpenAI&#xA;from megaparse.parser.unstructured_parser import UnstructuredParser&#xA;&#xA;parser = UnstructuredParser()&#xA;megaparse = MegaParse(parser)&#xA;response = megaparse.load(&#34;./test.pdf&#34;)&#xA;print(response)&#xA;megaparse.save(&#34;./test.md&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use MegaParse Vision&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Change the parser to MegaParseVision&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from megaparse import MegaParse&#xA;from langchain_openai import ChatOpenAI&#xA;from megaparse.parser.megaparse_vision import MegaParseVision&#xA;&#xA;model = ChatOpenAI(model=&#34;gpt-4o&#34;, api_key=os.getenv(&#34;OPENAI_API_KEY&#34;))  # type: ignore&#xA;parser = MegaParseVision(model=model)&#xA;megaparse = MegaParse(parser)&#xA;response = megaparse.load(&#34;./test.pdf&#34;)&#xA;print(response)&#xA;megaparse.save(&#34;./test.md&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The model supported by MegaParse Vision are the multimodal ones such as claude 3.5, claude 4, gpt-4o and gpt-4.&lt;/p&gt; &#xA;&lt;h3&gt;(Optional) Use LlamaParse for Improved Results&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an account on &lt;a href=&#34;https://cloud.llamaindex.ai/&#34;&gt;Llama Cloud&lt;/a&gt; and get your API key.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change the parser to LlamaParser&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from megaparse import MegaParse&#xA;from langchain_openai import ChatOpenAI&#xA;from megaparse.parser.llama_parser import LlamaParser&#xA;&#xA;parser = LlamaParser(api_key = os.getenv(&#34;LLAMA_CLOUD_API_KEY&#34;))&#xA;megaparse = MegaParse(parser)&#xA;response = megaparse.load(&#34;./test.pdf&#34;)&#xA;print(response)&#xA;megaparse.save(&#34;./test.md&#34;) #saves the last processed doc in md format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use as an API&lt;/h2&gt; &#xA;&lt;p&gt;There is a MakeFile for you, simply use : &lt;code&gt;make dev&lt;/code&gt; at the root of the project and you are good to go.&lt;/p&gt; &#xA;&lt;p&gt;See localhost:8000/docs for more info on the different endpoints !&lt;/p&gt; &#xA;&lt;h2&gt;BenchMark&lt;/h2&gt; &#xA;&lt;!--BENCHMARK--&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parser&lt;/th&gt; &#xA;   &lt;th&gt;similarity_ratio&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;megaparse_vision&lt;/td&gt; &#xA;   &lt;td&gt;0.87&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unstructured_with_check_table&lt;/td&gt; &#xA;   &lt;td&gt;0.77&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unstructured&lt;/td&gt; &#xA;   &lt;td&gt;0.59&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llama_parser&lt;/td&gt; &#xA;   &lt;td&gt;0.33&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--END_BENCHMARK--&gt; &#xA;&lt;p&gt;&lt;em&gt;Higher the better&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: Want to evaluate and compare your Megaparse module with ours ? Please add your config in &lt;code&gt;evaluations/script.py&lt;/code&gt; and then run &lt;code&gt;python evaluations/script.py&lt;/code&gt;. If it is better, do a PR, I mean, let&#39;s go higher together .&lt;/p&gt; &#xA;&lt;h2&gt;In Construction 🚧&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Improve table checker&lt;/li&gt; &#xA; &lt;li&gt;Create Checkers to add &lt;strong&gt;modular postprocessing&lt;/strong&gt; ⚙️&lt;/li&gt; &#xA; &lt;li&gt;Add Structured output, &lt;strong&gt;let&#39;s get computer talking&lt;/strong&gt; 🤖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#QuivrHQ/MegaParse&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=QuivrHQ/MegaParse&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>