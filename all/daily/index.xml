<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-06T01:23:43Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openai/openai-python</title>
    <updated>2023-10-06T01:23:43Z</updated>
    <id>tag:github.com,2023-10-06:/openai/openai-python</id>
    <link href="https://github.com/openai/openai-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Python library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Python Library&lt;/h1&gt; &#xA;&lt;p&gt;The OpenAI Python library provides convenient access to the OpenAI API from applications written in the Python language. It includes a pre-defined set of classes for API resources that initialize themselves dynamically from API responses which makes it compatible with a wide range of versions of the OpenAI API.&lt;/p&gt; &#xA;&lt;p&gt;You can find usage examples for the OpenAI Python library in our &lt;a href=&#34;https://platform.openai.com/docs/api-reference?lang=python&#34;&gt;API reference&lt;/a&gt; and the &lt;a href=&#34;https://github.com/openai/openai-cookbook/&#34;&gt;OpenAI Cookbook&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Beta Release&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; We&#39;re preparing to release version 1.0 of the OpenAI Python library.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This new version will be a major release and will include breaking changes. We&#39;re releasing this beta version to give you a chance to try out the new features and provide feedback before the official release. You can install the beta version with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install --pre openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And follow along with the &lt;a href=&#34;https://github.com/openai/openai-python/discussions/631&#34;&gt;beta release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To start, ensure you have Python 3.7.1 or newer. If you just want to use the package, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install --upgrade openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you have installed the package, import it at the top of a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install this package from source to make modifications to it, run the following command from the root of the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Install dependencies for &lt;a href=&#34;https://raw.githubusercontent.com/openai/openai-python/main/openai/embeddings_utils.py&#34;&gt;&lt;code&gt;openai.embeddings_utils&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install openai[embeddings]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install support for &lt;a href=&#34;https://wandb.me/openai-docs&#34;&gt;Weights &amp;amp; Biases&lt;/a&gt; which can be used for fine-tuning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install openai[wandb]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Data libraries like &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;pandas&lt;/code&gt; are not installed by default due to their size. They’re needed for some functionality of this library, but generally not for talking to the API. If you encounter a &lt;code&gt;MissingDependencyError&lt;/code&gt;, install them with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install openai[datalib]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The library needs to be configured with your OpenAI account&#39;s private API key which is available on our &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;developer platform&lt;/a&gt;. Either set it as the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable before using the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=&#39;sk-...&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or set &lt;code&gt;openai.api_key&lt;/code&gt; to its value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;openai.api_key = &#34;sk-...&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples of how to use this library to accomplish various tasks can be found in the &lt;a href=&#34;https://github.com/openai/openai-cookbook/&#34;&gt;OpenAI Cookbook&lt;/a&gt;. It contains code examples for: classification using fine-tuning, clustering, code search, customizing embeddings, question answering from a corpus of documents. recommendations, visualization of embeddings, and more.&lt;/p&gt; &#xA;&lt;p&gt;Most endpoints support a &lt;code&gt;request_timeout&lt;/code&gt; param. This param takes a &lt;code&gt;Union[float, Tuple[float, float]]&lt;/code&gt; and will raise an &lt;code&gt;openai.error.Timeout&lt;/code&gt; error if the request exceeds that time in seconds (See: &lt;a href=&#34;https://requests.readthedocs.io/en/latest/user/quickstart/#timeouts&#34;&gt;https://requests.readthedocs.io/en/latest/user/quickstart/#timeouts&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Chat completions&lt;/h3&gt; &#xA;&lt;p&gt;Chat models such as &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; and &lt;code&gt;gpt-4&lt;/code&gt; can be called using the &lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat/create&#34;&gt;chat completions endpoint&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;completion = openai.ChatCompletion.create(model=&#34;gpt-3.5-turbo&#34;, messages=[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello world&#34;}])&#xA;print(completion.choices[0].message.content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/gpt/chat-completions-api&#34;&gt;chat completions guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Completions&lt;/h3&gt; &#xA;&lt;p&gt;Text models such as &lt;code&gt;babbage-002&lt;/code&gt; or &lt;code&gt;davinci-002&lt;/code&gt; (and our &lt;a href=&#34;https://platform.openai.com/docs/deprecations/deprecation-history&#34;&gt;legacy completions models&lt;/a&gt;) can be called using the completions endpoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;completion = openai.Completion.create(model=&#34;davinci-002&#34;, prompt=&#34;Hello world&#34;)&#xA;print(completion.choices[0].text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/gpt/completions-api&#34;&gt;completions guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Embeddings&lt;/h3&gt; &#xA;&lt;p&gt;Embeddings are designed to measure the similarity or relevance between text strings. To get an embedding for a text string, you can use following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;text_string = &#34;sample text&#34;&#xA;&#xA;model_id = &#34;text-embedding-ada-002&#34;&#xA;&#xA;embedding = openai.Embedding.create(input=text_string, model=model_id)[&#39;data&#39;][0][&#39;embedding&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/embeddings/embeddings&#34;&gt;embeddings guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Fine-tuning&lt;/h3&gt; &#xA;&lt;p&gt;Fine-tuning a model on training data can both improve the results (by giving the model more examples to learn from) and lower the cost/latency of API calls by reducing the need to include training examples in prompts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a fine-tuning job with an already uploaded file&#xA;openai.FineTuningJob.create(training_file=&#34;file-abc123&#34;, model=&#34;gpt-3.5-turbo&#34;)&#xA;&#xA;# List 10 fine-tuning jobs&#xA;openai.FineTuningJob.list(limit=10)&#xA;&#xA;# Retrieve the state of a fine-tune&#xA;openai.FineTuningJob.retrieve(&#34;ft-abc123&#34;)&#xA;&#xA;# Cancel a job&#xA;openai.FineTuningJob.cancel(&#34;ft-abc123&#34;)&#xA;&#xA;# List up to 10 events from a fine-tuning job&#xA;openai.FineTuningJob.list_events(id=&#34;ft-abc123&#34;, limit=10)&#xA;&#xA;# Delete a fine-tuned model (must be an owner of the org the model was created in)&#xA;openai.Model.delete(&#34;ft:gpt-3.5-turbo:acemeco:suffix:abc123&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/fine-tuning&#34;&gt;fine-tuning guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To log the training results from fine-tuning to Weights &amp;amp; Biases use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openai wandb sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, read the &lt;a href=&#34;https://docs.wandb.ai/guides/integrations/openai&#34;&gt;wandb documentation&lt;/a&gt; on Weights &amp;amp; Biases.&lt;/p&gt; &#xA;&lt;h3&gt;Moderation&lt;/h3&gt; &#xA;&lt;p&gt;OpenAI provides a free Moderation endpoint that can be used to check whether content complies with the OpenAI &lt;a href=&#34;https://platform.openai.com/docs/usage-policies&#34;&gt;content policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;moderation_resp = openai.Moderation.create(input=&#34;Here is some perfectly innocuous text that follows all OpenAI content policies.&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/moderation&#34;&gt;moderation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image generation (DALL·E)&lt;/h3&gt; &#xA;&lt;p&gt;DALL·E is a generative image model that can create new images based on a prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;image_resp = openai.Image.create(prompt=&#34;two dogs playing chess, oil painting&#34;, n=4, size=&#34;512x512&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/images&#34;&gt;image generation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Audio (Whisper)&lt;/h3&gt; &#xA;&lt;p&gt;The speech to text API provides two endpoints, transcriptions and translations, based on our state-of-the-art &lt;a href=&#34;https://github.com/openai/whisper&#34;&gt;open source large-v2 Whisper model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = open(&#34;path/to/file.mp3&#34;, &#34;rb&#34;)&#xA;transcript = openai.Audio.transcribe(&#34;whisper-1&#34;, f)&#xA;&#xA;transcript = openai.Audio.translate(&#34;whisper-1&#34;, f)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more in our &lt;a href=&#34;https://platform.openai.com/docs/guides/speech-to-text&#34;&gt;speech to text guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Async API&lt;/h3&gt; &#xA;&lt;p&gt;Async support is available in the API by prepending &lt;code&gt;a&lt;/code&gt; to a network-bound method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;async def create_chat_completion():&#xA;    chat_completion_resp = await openai.ChatCompletion.acreate(model=&#34;gpt-3.5-turbo&#34;, messages=[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello world&#34;}])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make async requests more efficient, you can pass in your own &lt;code&gt;aiohttp.ClientSession&lt;/code&gt;, but you must manually close the client session at the end of your program/event loop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from aiohttp import ClientSession&#xA;openai.aiosession.set(ClientSession())&#xA;&#xA;# At the end of your program, close the http session&#xA;await openai.aiosession.get().close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command-line interface&lt;/h3&gt; &#xA;&lt;p&gt;This library additionally provides an &lt;code&gt;openai&lt;/code&gt; command-line utility which makes it easy to interact with the API from your terminal. Run &lt;code&gt;openai api -h&lt;/code&gt; for usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# list models&#xA;openai api models.list&#xA;&#xA;# create a chat completion (gpt-3.5-turbo, gpt-4, etc.)&#xA;openai api chat_completions.create -m gpt-3.5-turbo -g user &#34;Hello world&#34;&#xA;&#xA;# create a completion (text-davinci-003, text-davinci-002, ada, babbage, curie, davinci, etc.)&#xA;openai api completions.create -m ada -p &#34;Hello world&#34;&#xA;&#xA;# generate images via DALL·E API&#xA;openai api image.create -p &#34;two dogs playing chess, cartoon&#34; -n 1&#xA;&#xA;# using openai through a proxy&#xA;openai --proxy=http://proxy.com api models.list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Microsoft Azure Endpoints&lt;/h3&gt; &#xA;&lt;p&gt;In order to use the library with Microsoft Azure endpoints, you need to set the &lt;code&gt;api_type&lt;/code&gt;, &lt;code&gt;api_base&lt;/code&gt; and &lt;code&gt;api_version&lt;/code&gt; in addition to the &lt;code&gt;api_key&lt;/code&gt;. The &lt;code&gt;api_type&lt;/code&gt; must be set to &#39;azure&#39; and the others correspond to the properties of your endpoint. In addition, the deployment name must be passed as the &lt;code&gt;deployment_id&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import openai&#xA;openai.api_type = &#34;azure&#34;&#xA;openai.api_key = &#34;...&#34;&#xA;openai.api_base = &#34;https://example-endpoint.openai.azure.com&#34;&#xA;openai.api_version = &#34;2023-05-15&#34;&#xA;&#xA;# create a chat completion&#xA;chat_completion = openai.ChatCompletion.create(deployment_id=&#34;deployment-name&#34;, model=&#34;gpt-3.5-turbo&#34;, messages=[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello world&#34;}])&#xA;&#xA;# print the completion&#xA;print(chat_completion.choices[0].message.content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that for the moment, the Microsoft Azure endpoints can only be used for completion, embedding, and fine-tuning operations. For a detailed example of how to use fine-tuning and other operations using Azure endpoints, please check out the following Jupyter notebooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openai/openai-cookbook/tree/main/examples/azure/completions.ipynb&#34;&gt;Using Azure completions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openai/openai-cookbook/tree/main/examples/azure/chat.ipynb&#34;&gt;Using Azure chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openai/openai-cookbook/raw/main/examples/azure/embeddings.ipynb&#34;&gt;Using Azure embeddings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Microsoft Azure Active Directory Authentication&lt;/h3&gt; &#xA;&lt;p&gt;In order to use Microsoft Active Directory to authenticate to your Azure endpoint, you need to set the &lt;code&gt;api_type&lt;/code&gt; to &#34;azure_ad&#34; and pass the acquired credential token to &lt;code&gt;api_key&lt;/code&gt;. The rest of the parameters need to be set as specified in the previous section.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from azure.identity import DefaultAzureCredential&#xA;import openai&#xA;&#xA;# Request credential&#xA;default_credential = DefaultAzureCredential()&#xA;token = default_credential.get_token(&#34;https://cognitiveservices.azure.com/.default&#34;)&#xA;&#xA;# Setup parameters&#xA;openai.api_type = &#34;azure_ad&#34;&#xA;openai.api_key = token.token&#xA;openai.api_base = &#34;https://example-endpoint.openai.azure.com/&#34;&#xA;openai.api_version = &#34;2023-05-15&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;This library is forked from the &lt;a href=&#34;https://github.com/stripe/stripe-python&#34;&gt;Stripe Python Library&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mouredev/python-web</title>
    <updated>2023-10-06T01:23:43Z</updated>
    <id>tag:github.com,2023-10-06:/mouredev/python-web</id>
    <link href="https://github.com/mouredev/python-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Curso para aprender desarrollo frontend Web con Python puro desde cero. Elaborado durante las emisiones en directo desde Twitch de MoureDev.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python Web&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://python.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.11+-yellow?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fastapi.tiangolo.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reflex-0.2.8+-5646ED?style=for-the-badge&amp;amp;logo=reflex&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;FastAPI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Curso para aprender desarrollo web frontend con Python puro y Reflex desde cero&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mouredev/python-web/main/Images/header.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Proyecto realizado durante emisiones en directo desde &lt;a href=&#34;https://twitch.tv/mouredev&#34;&gt;Twitch&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h5&gt;Si consideras útil el curso, apóyalo haciendo &#34;★ Star&#34; en el repositorio. ¡Gracias!&lt;/h5&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Próxima Clase: 11/10/2023&lt;/h2&gt; &#xA;&lt;h3&gt;⏰ 20:00 (hora España) en directo desde &lt;a href=&#34;https://twitch.tv/mouredev&#34;&gt;Twitch&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;🌐 Consulta el horario por país y crea un recordatorio desde &lt;a href=&#34;https://discord.gg/szCvz8xV?event=1159409862787211284&#34;&gt;Discord&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Clases anteriores&lt;/h2&gt; &#xA;&lt;h3&gt;Clase 1 (04/10/2023): Introducción, instalación y configuración ▶️ &lt;a href=&#34;https://www.twitch.tv/videos/1942562640?t=00h18m05s&#34;&gt;Ver clase en vídeo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Proyecto&lt;/h2&gt; &#xA;&lt;p&gt;Durante el curso aprenderemos desarrollo web con Python puro utilizando el framework &lt;a href=&#34;https://github.com/reflex-dev/reflex&#34;&gt;Reflex&lt;/a&gt;. Realizaremos un proyecto práctico que consistirá en desarrollar y publicar mi nueva web de links &lt;a href=&#34;https://moure.dev/&#34;&gt;moure.dev&lt;/a&gt; (añadiéndole muchas nuevas funcionalidades). Todo el código estará disponible para que cualquiera pueda usarlo.&lt;/p&gt; &#xA;&lt;h3&gt;💻 &lt;a href=&#34;https://raw.githubusercontent.com/mouredev/python-web/main/link_bio&#34;&gt;Accede al código del proyecto&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Información importante y preguntas frecuentes&lt;/h2&gt; &#xA;&lt;p&gt;Este curso se encuentra en desarrollo. Todo el contenido se crea en directo desde &lt;a href=&#34;https://www.twitch.tv/mouredev&#34;&gt;Twitch&lt;/a&gt;, y en este repositorio podrás encontrar las clases en vídeo, el código programado, enlaces de interés y la información de la próxima clase.&lt;/p&gt; &#xA;&lt;p&gt;Una vez se finalice, se creará un vídeo que agrupe todas las clases y se publicará en &lt;a href=&#34;https://www.youtube.com/@mouredev&#34;&gt;YouTube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Es un curso desde cero y no necesitas conocimientos previos sobre desarrollo web.&lt;/li&gt; &#xA; &lt;li&gt;Recuerda que he creado en el &lt;a href=&#34;https://discord.gg/mouredev&#34;&gt;Discord&lt;/a&gt; un canal &#34;🐍python&#34; para que puedas comentar lo que quieras.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Enlaces de interés&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Web oficial de Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reflex.dev/&#34;&gt;Web oficial de Reflex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reflex.dev/docs/&#34;&gt;Documentación oficial de Reflex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reflex-dev/reflex&#34;&gt;Repositorio en GitHub de Reflex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vscode.dev/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/css/&#34;&gt;Documentación CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.dev/learn/css/&#34;&gt;Curso de CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra UI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Curso de Python desde cero&lt;/h2&gt; &#xA;&lt;h3&gt;Aprende Python desde sus fundamentos&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mouredev/hello-python&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mouredev/Hello-Python/main/Images/header.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Si quieres aprender desde cero, tienes gratis todos los tutoriales que he creado. Más de 25 horas desde fundamentos, backend o integración con IA.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mouredev/hello-python&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/mouredev/hello-python?label=Curso%20Python%20desde%20cero&amp;amp;style=social&#34; alt=&#34;Curso Python&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Puedes apoyar mi trabajo haciendo &#34;☆ Star&#34; en el repo o nominarme a &#34;GitHub Star&#34;. ¡Gracias!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stars.github.com/nominate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Nominar_a_star-yellow?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;GitHub Star&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Si quieres unirte a nuestra comunidad de desarrollo, aprender programación de Apps, mejorar tus habilidades y ayudar a la continuidad del proyecto, puedes encontrarnos en:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitch.tv/mouredev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitch-Programaci%C3%B3n_en_directo-9146FF?style=for-the-badge&amp;amp;logo=twitch&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;Twitch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mouredev.com/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Servidor_de_la_comunidad-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://moure.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Links_de_inter%C3%A9s-moure.dev-39E09B?style=for-the-badge&amp;amp;logo=Linktree&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;Link&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mouredev/mouredev/master/mouredev_emote.png&#34; alt=&#34;https://mouredev.com&#34;&gt; Hola, mi nombre es Brais Moure.&lt;/h2&gt; &#xA;&lt;h3&gt;Freelance full-stack iOS &amp;amp; Android engineer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/mouredevapps?sub_confirmation=1&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/channel/subscribers/UCxPD7bsocoAMq8Dj18kmGyQ?style=social&#34; alt=&#34;YouTube Channel Subscribers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitch.com/mouredev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitch/status/mouredev?style=social&#34; alt=&#34;Twitch Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mouredev.com/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/729672926432985098?style=social&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/mouredev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mouredev?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/followers/mouredev?style=social&#34; alt=&#34;GitHub Followers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/mouredev?style=social&#34; alt=&#34;GitHub Followers&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Soy ingeniero de software desde hace más de 12 años. Desde hace 4 años combino mi trabajo desarrollando Apps con creación de contenido formativo sobre programación y tecnología en diferentes redes sociales como &lt;strong&gt;&lt;a href=&#34;https://moure.dev&#34;&gt;@mouredev&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;En mi perfil de GitHub tienes más información&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mouredev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-MoureDev-14a1f0?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;labelColor=101010&#34; alt=&#34;Web&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>filamentphp/filament</title>
    <updated>2023-10-06T01:23:43Z</updated>
    <id>tag:github.com,2023-10-06:/filamentphp/filament</id>
    <link href="https://github.com/filamentphp/filament" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of beautiful full-stack components for Laravel. The perfect starting point for your next app. Using Livewire, Alpine.js and Tailwind CSS.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/filamentphp/filament/assets/41773797/8d5a0b12-4643-4b5c-964a-56f0db91b90a&#34; alt=&#34;Banner&#34; style=&#34;width: 100%; max-width: 800px;&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/filamentphp/filament/actions&#34;&gt;&lt;img alt=&#34;Tests passing&#34; src=&#34;https://img.shields.io/badge/Tests-passing-green?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://laravel.com&#34;&gt;&lt;img alt=&#34;Laravel v10.x&#34; src=&#34;https://img.shields.io/badge/Laravel-v10.x-FF2D20?style=for-the-badge&amp;amp;logo=laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://livewire.laravel.com&#34;&gt;&lt;img alt=&#34;Livewire v3.x&#34; src=&#34;https://img.shields.io/badge/Livewire-v3.x-FB70A9?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://php.net&#34;&gt;&lt;img alt=&#34;PHP 8.1&#34; src=&#34;https://img.shields.io/badge/PHP-8.1-777BB4?style=for-the-badge&amp;amp;logo=php&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Filament is a collection of full-stack components for accelerated Laravel development. They are beautifully designed, intuitive to use, and fully extensible - the perfect starting point for your next Laravel app. Why waste time building the same features over and over again?&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;h3&gt;Panel Builder • &lt;a href=&#34;https://filamentphp.com/docs/panels&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://demo.filamentphp.com&#34;&gt;Demo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The Panel Builder is the foundation of Filament. Combining all the packages together, it lets you quickly build Laravel admin panels, customer-facing apps, Software-as-a-Service platforms, and more. Filament makes custom CRUD-driven interfaces feel like a breeze to build and deploy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/filament&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Form Builder • &lt;a href=&#34;https://filamentphp.com/docs/forms&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Rendering interactive forms in a Livewire component has never been easier than with our Form Builder. Easily build stunning forms with over 25 components out of the box. It&#39;s also fully extensible, so you can add your own custom fields and actions. As well as the Panel Builder, it is seamlessly integrated into action modals, and is used by the Table Builder to filter rows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/forms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Table Builder • &lt;a href=&#34;https://filamentphp.com/docs/tables&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Craft beautiful, optimized, and interactive datatables for any situation. Drop in to a Livewire component, and you&#39;re ready to go. It&#39;s also fully extensible, so you can add your own custom columns, filters and actions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/tables&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Notifications • &lt;a href=&#34;https://filamentphp.com/docs/notifications&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;An important part of any application is the ability to notify your users of important events. Our notifications package lets you deliver flash notifications to users from any Livewire request, or even from your JavaScript frontend. In addition, it can fetch notifications from the database and render them in a beautiful slide-over modal, or even receive live notifications from a websockets server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/notifications&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Actions • &lt;a href=&#34;https://filamentphp.com/docs/actions&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Actions are buttons that can open modals. They are a very versatile component of many interfaces, avoiding the need for the user to navigate away from the page to complete a task. From confirming a destructive action, to editing an Eloquent record, to importing data from an uploaded CSV file, action modals are a great way to keep the user in the flow of the application. Modals are built upon our Form Builder, so they are built upon the same principles of flexibility and extensibility. Modals can be added to any Livewire component with just a few lines of code, and no HTML or JavaScript.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/actions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Infolists • &lt;a href=&#34;https://filamentphp.com/docs/infolists&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Infolists are a great way to display read-only information to users about a particular record. They have a fully flexible layout, and can be extended with custom components. They are also seamlessly integrated with the Panel Builder, so you can easily add them to your panel resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/infolists&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Widgets • &lt;a href=&#34;https://filamentphp.com/docs/widgets&#34;&gt;Documentation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Filament&#39;s collection of widgets are built upon Livewire&#39;s core principles of real-time reactivity with the server. Combining many widgets lets you quickly build a dashboard for your application, complete with charts and stats, which are able to update live without refreshing the page. They are also seamlessly integrated with any page in the Panel Builder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require filament/widgets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to the Filament packages, then you may want to test it in a real Laravel project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this repository to your GitHub account.&lt;/li&gt; &#xA; &lt;li&gt;Create a Laravel app locally.&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork in your Laravel app&#39;s root directory.&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;/filament&lt;/code&gt; directory, create a branch for your fix, e.g. &lt;code&gt;fix/error-message&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install the packages in your app&#39;s &lt;code&gt;composer.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;{&#xA;    // ...&#xA;    &#34;require&#34;: {&#xA;        &#34;filament/filament&#34;: &#34;*&#34;,&#xA;    },&#xA;    &#34;minimum-stability&#34;: &#34;dev&#34;,&#xA;    &#34;repositories&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;path&#34;,&#xA;            &#34;url&#34;: &#34;filament/packages/*&#34;&#xA;        }&#xA;    ],&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, run &lt;code&gt;composer update&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Checking for missing translations&lt;/h3&gt; &#xA;&lt;p&gt;Set up a Laravel app, and install the &lt;a href=&#34;https://filamentphp.com/docs/admin/installation&#34;&gt;admin panel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now, if you want to check for missing Spanish translations, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan filament:check-translations es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will let you know which translations are missing for this locale. You can make a PR with the changes to this repository.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve published the translations into your app and you&#39;d like to check those instead, try:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan filament:check-translations es --source=app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;🐞 If you spot a bug, please &lt;a href=&#34;https://github.com/filamentphp/filament/issues/new?assignees=&amp;amp;labels=bug%2Cunconfirmed&amp;amp;template=bug_report.yml&#34;&gt;submit a detailed issue&lt;/a&gt;, and wait for assistance.&lt;/p&gt; &#xA;&lt;p&gt;🤔 If you have a question or feature request, please &lt;a href=&#34;https://github.com/filamentphp/filament/discussions/new&#34;&gt;start a new discussion&lt;/a&gt;. We also have a &lt;a href=&#34;https://filamentphp.com/discord&#34;&gt;Discord community&lt;/a&gt;. For quick help, ask questions in the appropriate channel.&lt;/p&gt; &#xA;&lt;p&gt;🔐 If you discover a vulnerability, please review our &lt;a href=&#34;https://github.com/filamentphp/filament/raw/3.x/SECURITY.md&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>