<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T01:48:45Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mayooear/gpt4-pdf-chatbot-langchain</title>
    <updated>2023-04-02T01:48:45Z</updated>
    <id>tag:github.com,2023-04-02:/mayooear/gpt4-pdf-chatbot-langchain</id>
    <link href="https://github.com/mayooear/gpt4-pdf-chatbot-langchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPT4 &amp; LangChain Chatbot for large PDF docs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT-4 &amp;amp; LangChain - Create a ChatGPT Chatbot for Your PDF Files&lt;/h1&gt; &#xA;&lt;p&gt;Use the new GPT-4 api to build a chatGPT chatbot for multiple Large PDF files.&lt;/p&gt; &#xA;&lt;p&gt;Tech stack used includes LangChain, Pinecone, Typescript, Openai, and Next.js. LangChain is a framework that makes it easier to build scalable AI/LLM apps and chatbots. Pinecone is a vectorstore for storing embeddings and your PDF in text to later retrieve similar docs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ih9PBGVVOO4&#34;&gt;Tutorial video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/mayowaoshin&#34;&gt;Get in touch via twitter if you have questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The visual guide of this repo and tutorial is in the &lt;code&gt;visual guide&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you run into errors, please review the troubleshooting section further down this page.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone [github https url]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install packages&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set up your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; into &lt;code&gt;.env&lt;/code&gt; Your &lt;code&gt;.env&lt;/code&gt; file should look like this:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=&#xA;&#xA;PINECONE_API_KEY=&#xA;PINECONE_ENVIRONMENT=&#xA;&#xA;PINECONE_INDEX_NAME=&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://help.openai.com/en/articles/4936850-where-do-i-find-my-secret-api-key&#34;&gt;openai&lt;/a&gt; to retrieve API keys and insert into your &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://pinecone.io/&#34;&gt;pinecone&lt;/a&gt; to create and retrieve your API keys, and also retrieve your environment and index name from the dashboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &lt;code&gt;config&lt;/code&gt; folder, replace the &lt;code&gt;PINECONE_NAME_SPACE&lt;/code&gt; with a &lt;code&gt;namespace&lt;/code&gt; where you&#39;d like to store your embeddings on Pinecone when you run &lt;code&gt;pnpm run ingest&lt;/code&gt;. This namespace will later be used for queries and retrieval.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;utils/makechain.ts&lt;/code&gt; chain change the &lt;code&gt;QA_PROMPT&lt;/code&gt; for your own usecase. Change &lt;code&gt;modelName&lt;/code&gt; in &lt;code&gt;new OpenAIChat&lt;/code&gt; to &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;, if you don&#39;t have access to &lt;code&gt;gpt-4&lt;/code&gt;. Please verify outside this repo that you have access to &lt;code&gt;gpt-4&lt;/code&gt;, otherwise the application will not work with it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Convert your PDF files to embeddings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This repo can load multiple PDF files&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Inside &lt;code&gt;docs&lt;/code&gt; folder, add your pdf files or folders that contain pdf files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script &lt;code&gt;npm run ingest&lt;/code&gt; to &#39;ingest&#39; and embed your docs. If you run into errors troubleshoot below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check Pinecone dashboard to verify your namespace and vectors have been added.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Run the app&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve verified that the embeddings and content have been successfully added to your Pinecone, you can run the app &lt;code&gt;pnpm run dev&lt;/code&gt; to launch the local dev environment, and then type a question in the chat interface.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;In general, keep an eye out in the &lt;code&gt;issues&lt;/code&gt; and &lt;code&gt;discussions&lt;/code&gt; section of this repo for solutions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;General errors&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you&#39;re running the latest Node version. Run &lt;code&gt;node -v&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try a different PDF or convert your PDF to text first. It&#39;s possible your PDF is corrupted, scanned, or requires OCR to convert to text.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Console.log&lt;/code&gt; the &lt;code&gt;env&lt;/code&gt; variables and make sure they are exposed.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you&#39;re using the same versions of LangChain and Pinecone as this repo.&lt;/li&gt; &#xA; &lt;li&gt;Check that you&#39;ve created an &lt;code&gt;.env&lt;/code&gt; file that contains your valid (and working) API keys, environment and index name.&lt;/li&gt; &#xA; &lt;li&gt;If you change &lt;code&gt;modelName&lt;/code&gt; in &lt;code&gt;OpenAIChat&lt;/code&gt; note that the correct name of the alternative model is &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have access to &lt;code&gt;gpt-4&lt;/code&gt; if you decide to use. Test your openAI keys outside the repo and make sure it works and that you have enough API credits.&lt;/li&gt; &#xA; &lt;li&gt;Check that you don&#39;t have multiple OPENAPI keys in your global environment. If you do, the local &lt;code&gt;env&lt;/code&gt; file from the project will be overwritten by systems &lt;code&gt;env&lt;/code&gt; variable.&lt;/li&gt; &#xA; &lt;li&gt;Try to hard code your API keys into the &lt;code&gt;process.env&lt;/code&gt; variables.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pinecone errors&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure your pinecone dashboard &lt;code&gt;environment&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; matches the one in the &lt;code&gt;pinecone.ts&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files.&lt;/li&gt; &#xA; &lt;li&gt;Check that you&#39;ve set the vector dimensions to &lt;code&gt;1536&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make sure your pinecone namespace is in lowercase.&lt;/li&gt; &#xA; &lt;li&gt;Pinecone indexes of users on the Starter(free) plan are deleted after 7 days of inactivity. To prevent this, send an API request to Pinecone to reset the counter before 7 days.&lt;/li&gt; &#xA; &lt;li&gt;Retry from scratch with a new Pinecone project, index, and cloned repo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;Frontend of this repo is inspired by &lt;a href=&#34;https://github.com/zahidkhawaja/langchain-chat-nextjs&#34;&gt;langchain-chat-nextjs&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mckaywrigley/chatbot-ui</title>
    <updated>2023-04-02T01:48:45Z</updated>
    <id>tag:github.com,2023-04-02:/mckaywrigley/chatbot-ui</id>
    <link href="https://github.com/mckaywrigley/chatbot-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source ChatGPT UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chatbot UI&lt;/h1&gt; &#xA;&lt;p&gt;Chatbot UI is an advanced chatbot kit for OpenAI&#39;s chat models built on top of &lt;a href=&#34;https://github.com/mckaywrigley/chatbot-ui-lite&#34;&gt;Chatbot UI Lite&lt;/a&gt; using Next.js, TypeScript, and Tailwind CSS.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://twitter.com/mckaywrigley/status/1640380021423603713?s=46&amp;amp;t=AowqkodyK6B4JccSOxSPew&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mckaywrigley/chatbot-ui/main/public/screenshot.png&#34; alt=&#34;Chatbot UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;Chatbot UI will be updated over time.&lt;/p&gt; &#xA;&lt;p&gt;Expect frequent improvements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Next up:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Delete messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More model settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Plugins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Recent updates:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Prompt templates (3/27/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Regenerate &amp;amp; edit responses (3/25/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Folders (3/24/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search chat content (3/23/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stop message generation (3/22/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Import/Export chats (3/22/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom system prompt (3/21/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Error handling (3/20/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GPT-4 support (access required) (3/20/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search conversations (3/19/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code syntax highlighting (3/18/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Toggle sidebar (3/18/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Conversation naming (3/18/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Github flavored markdown (3/18/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add OpenAI API key in app (3/18/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Markdown support (3/17/23)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modifications&lt;/h2&gt; &#xA;&lt;p&gt;Modify the chat interface in &lt;code&gt;components/Chat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Modify the sidebar interface in &lt;code&gt;components/Sidebar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Modify the system prompt in &lt;code&gt;utils/index.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Host your own live version of Chatbot UI with Vercel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fmckaywrigley%2Fchatbot-ui&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Replit&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fork Chatbot UI on Replit &lt;a href=&#34;https://replit.com/@MckayWrigley/chatbot-ui-pro?v=1&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t chatgpt-ui .&#xA;docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatgpt-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull from ghcr:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 ghcr.io/mckaywrigley/chatbot-ui:main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Clone Repo&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mckaywrigley/chatbot-ui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Install Dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Provide OpenAI API Key&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a .env.local file in the root of the repo with your OpenAI API Key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=YOUR_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can set &lt;code&gt;OPENAI_API_HOST&lt;/code&gt; where access to the official OpenAI host is restricted or unavailable, allowing users to configure an alternative host for their specific needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Additionally, if you have multiple OpenAI Organizations, you can set &lt;code&gt;OPENAI_ORGANIZATION&lt;/code&gt; to specify one.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Run App&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Use It&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to start chatting.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;When deploying the application, the following environment variables can be set:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default API key used for authentication with OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DEFAULT_MODEL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default model to use on new conversations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you do not provide an OpenAI API key with &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;, users will have to provide their own key. If you don&#39;t have an OpenAI API key, you can get one &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to reach out to me on &lt;a href=&#34;https://twitter.com/mckaywrigley&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getcursor/cursor</title>
    <updated>2023-04-02T01:48:45Z</updated>
    <id>tag:github.com,2023-04-02:/getcursor/cursor</id>
    <link href="https://github.com/getcursor/cursor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An editor made for programming with AI 🤖&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cursor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getcursor/cursor/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/PJEgRywgRy&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/PJEgRywgRy?style=flat&amp;amp;compact=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cursor.so&#34;&gt;Cursor&lt;/a&gt; is an editor made for programming with AI.&lt;/strong&gt; It&#39;s early days, but right now Cursor can help you with a few things...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Write&lt;/strong&gt;: Generate 10-100 lines of code with an AI that&#39;s smarter than Copilot&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Diff&lt;/strong&gt;: Ask the AI to edit a block of code, see only proposed changes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: ChatGPT-style interface that understands your current file&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;And more&lt;/strong&gt;: ask to fix lint errors, generate tests/comments on hover, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cursor.so/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/4297743/227696390-0c1886c7-0cda-4528-9259-0b2944892d4c.png&#34; width=&#34;1000&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Head over to &lt;a href=&#34;https://cursor.so/&#34;&gt;our website&lt;/a&gt; to download and try out the editor.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to file tickets for bugs or feature requests. Upvote 👍 the ones you&#39;d like us to prioritize.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Long term, our plan is to build Cursor into the world&#39;s most productive development environment. Using LLMs, we want to do things like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;Heal&#34; your repository when you&#39;re halfway through a refactor&lt;/li&gt; &#xA; &lt;li&gt;Allow you to code by editing a &#34;pseudocode&#34; version of your codebase&lt;/li&gt; &#xA; &lt;li&gt;Auto-fix errors as soon as they show up in your terminal&lt;/li&gt; &#xA; &lt;li&gt;Embed AI-written documentation into the UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;We welcome PRs :) To get started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:getcursor/cursor.git&#xA;cd cursor&#xA;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, download some non-versioned dependencies (ripgrep binaries and language server js):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./setup.sh # Mac/Linux&#xA;./setup.ps1 # Windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, to run the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>