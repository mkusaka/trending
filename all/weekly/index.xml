<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-10T06:02:59Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lvgl/lvgl</title>
    <updated>2025-08-10T06:02:59Z</updated>
    <id>tag:github.com,2025-08-10:/lvgl/lvgl</id>
    <link href="https://github.com/lvgl/lvgl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embedded graphics library to create beautiful UIs for any MCU, MPU and display type.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/lvgl&#34; target=&#34;_blank&#34;&gt;&lt;img align=&#34;left&#34; src=&#34;https://lvgl.io/github-assets/sponsor.png&#34; height=&#34;32px&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_zh.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_pt_BR.md&#34;&gt;Portugu√™s do Brasil&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_jp.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_he.md&#34;&gt;◊¢◊ë◊®◊ô◊™&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://lvgl.io/github-assets/logo-colored.png&#34; width=&#34;300px&#34; /&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Light and Versatile Graphics Library&lt;/h1&gt; &amp;nbsp; &#xA;&lt;br /&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://lvgl.io/github-assets/smartwatch-demo.gif&#34; /&gt; &amp;nbsp; &amp;nbsp; &#xA; &lt;img border=&#34;1px&#34; src=&#34;https://lvgl.io/github-assets/widgets-demo.gif&#34; /&gt; &#xA;&lt;/div&gt; &#xA;&lt;br /&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://lvgl.io&#34; title=&#34;Homepage of LVGL&#34;&gt;Website &lt;/a&gt; | &lt;a href=&#34;https://docs.lvgl.io/&#34; title=&#34;Detailed documentation with 100+ examples&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://forum.lvgl.io&#34; title=&#34;Get help and help others&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://lvgl.io/demos&#34; title=&#34;Demos running in your browser&#34;&gt;Demos&lt;/a&gt; | &lt;a href=&#34;https://lvgl.io/services&#34; title=&#34;Graphics design, UI implementation and consulting&#34;&gt;Services&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìí&lt;/span&gt; Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mature and Well-known&lt;/strong&gt;&lt;br /&gt; LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It&#39;s supported by industry leading vendors and projects like &amp;nbsp;Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Feature Rich&lt;/strong&gt;&lt;br /&gt; It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;br /&gt; Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Free and Portable&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A fully portable C (C++ compatible) library with no external dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Can be compiled to any MCU or MPU, with any (RT)OS.&lt;/li&gt; &#xA; &lt;li&gt;Supports monochrome, ePaper, OLED or TFT displays, or even monitors. &lt;a href=&#34;https://docs.lvgl.io/master/details/main-modules/display/index.html&#34;&gt;Displays&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Distributed under the MIT license, so you can easily use it in commercial projects too.&lt;/li&gt; &#xA; &lt;li&gt;Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/li&gt; &#xA; &lt;li&gt;OS, External memory and GPU are supported but not required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Widgets, Styles, Layouts and more&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;30+ built-in &lt;a href=&#34;https://docs.lvgl.io/master/details/widgets/index.html&#34;&gt;Widgets&lt;/a&gt;: &amp;nbsp;Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more.&lt;/li&gt; &#xA; &lt;li&gt;Flexible &lt;a href=&#34;https://docs.lvgl.io/master/details/common-widget-features/styles/index.html&#34;&gt;Style system&lt;/a&gt; with &amp;nbsp;~100 style properties to customize any part of the widgets in any state.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/common-widget-features/layouts/flex.html&#34;&gt;Flexbox&lt;/a&gt; and &lt;a href=&#34;https://docs.lvgl.io/master/details/common-widget-features/layouts/grid.html&#34;&gt;Grid&lt;/a&gt;-like layouts engines to automatically size and position the widgets in a responsive way.&lt;/li&gt; &#xA; &lt;li&gt;Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems.&lt;/li&gt; &#xA; &lt;li&gt;Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts.&lt;/li&gt; &#xA; &lt;li&gt;Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc &amp;nbsp;&lt;/li&gt; &#xA; &lt;li&gt;Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder &lt;a href=&#34;https://docs.lvgl.io/master/details/main-modules/indev.html&#34;&gt;Input devices&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/main-modules/display/overview.html#how-many-displays-can-lvgl-use&#34;&gt;Multiple display&lt;/a&gt; support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binding and Build Support&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lvgl.io/2019-02-20/micropython-bindings&#34;&gt;MicroPython Binding&lt;/a&gt; exposes LVGL API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lvgl.io/2022-08-24/pikascript-and-lvgl&#34;&gt;PikaScript Binding&lt;/a&gt; python on MCU lighter and easier.&lt;/li&gt; &#xA; &lt;li&gt;No custom build system is used. You can build LVGL as you build the other files of your project.&lt;/li&gt; &#xA; &lt;li&gt;Support for Make and &lt;a href=&#34;https://docs.lvgl.io/master/details/integration/building/cmake.html&#34;&gt;CMake&lt;/a&gt; is included out of the box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html&#34;&gt;Develop on PC&lt;/a&gt; and use the same UI code on embedded hardware.&lt;/li&gt; &#xA; &lt;li&gt;Convert the C UI code to HTML file with our &lt;a href=&#34;https://github.com/lvgl/lv_web_emscripten&#34;&gt;Emscripten port&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docs, Tools, and Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detailed &lt;a href=&#34;https://docs.lvgl.io/&#34;&gt;Documentation&lt;/a&gt; with &lt;a href=&#34;https://docs.lvgl.io/master/examples.html&#34;&gt;100+ simple examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services&lt;/a&gt; such as User interface design, Implementation and Consulting to make UI development simpler and faster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;If LVGL saved you a lot of time and money or you just had fun using it, consider &lt;a href=&#34;https://github.com/sponsors/lvgl&#34;&gt;Supporting its Development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do we spend the donations?&lt;/strong&gt;&lt;br /&gt; Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to donate?&lt;/strong&gt;&lt;br /&gt; We use &lt;a href=&#34;https://github.com/sponsors/lvgl&#34;&gt;GitHub Sponsors&lt;/a&gt; where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to get paid for your contribution?&lt;/strong&gt;&lt;br /&gt; If someone implements or fixes an issue labeled as &lt;a href=&#34;https://github.com/lvgl/lvgl/labels/Sponsored&#34;&gt;Sponsored&lt;/a&gt; he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a &lt;a href=&#34;https://github.com/lvgl/lvgl/labels/Sponsored&#34;&gt;Sponsored&lt;/a&gt; issue saying &#34;Hi, I&#39;d like to deal with it. This is how I&#39;m planning to fix/implement it...&#34;. A work is considered ready when it&#39;s approved and merged by a maintainer. After that you can submit and expense at &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;opencollective.com&lt;/a&gt; and you will receive the payment in a few days.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Organizations supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;&lt;img src=&#34;https://opencollective.com/lvgl/organizations.svg?width=600&#34; alt=&#34;Sponsors of LVGL&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Individuals supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&#34; alt=&#34;Backers of LVGL&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üì¶&lt;/span&gt; Packages&lt;/h2&gt; &#xA;&lt;p&gt;LVGL is available as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/integration/framework/arduino.html&#34;&gt;Arduino library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.platformio.org/libraries/lvgl/lvgl&#34;&gt;PlatformIO package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/integration/os/zephyr.html&#34;&gt;Zephyr library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://components.espressif.com/components/lvgl/lvgl&#34;&gt;ESP-IDF(ESP32) component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY&#34;&gt;NXP MCUXpresso component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/integration/os/nuttx.html&#34;&gt;NuttX library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/details/integration/os/rt-thread.html&#34;&gt;RT-Thread RTOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CMSIS-Pack&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doc.riot-os.org/group__pkg__lvgl.html#details&#34;&gt;RIOT OS package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;ü§ñ&lt;/span&gt; Examples&lt;/h2&gt; &#xA;&lt;p&gt;See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor.&lt;/p&gt; &#xA;&lt;p&gt;For more examples check out the &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Hello world label&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_1.png&#34; alt=&#34;Simple Hello world label example in LVGL&#34; /&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;/*Change the active screen&#39;s background color*/&#xA;lv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN);&#xA;&#xA;/*Create a white label, set its text and align it to the center*/&#xA;lv_obj_t * label = lv_label_create(lv_screen_active());&#xA;lv_label_set_text(label, &#34;Hello world&#34;);&#xA;lv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN);&#xA;lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_direct=4ab7c40c35b0dc349aa2f0c3b00938d7d8e8ac9f&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Change the active screen&#39;s background color&#xA;scr = lv.screen_active()&#xA;scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN)&#xA;&#xA;# Create a white label, set its text and align it to the center&#xA;label = lv.label(lv.screen_active())&#xA;label.set_text(&#34;Hello world&#34;)&#xA;label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN)&#xA;label.align(lv.ALIGN.CENTER, 0, 0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;Button with Click Event&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_2.gif&#34; alt=&#34;LVGL button with label example&#34; /&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * button = lv_button_create(lv_screen_active()); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Add a button to the current screen*/&#xA;lv_obj_center(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         /*Set its position*/&#xA;lv_obj_set_size(button, 100, 50); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Set its size*/&#xA;lv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/&#xA;&#xA;lv_obj_t * label = lv_label_create(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Add a label to the button*/&#xA;lv_label_set_text(label, &#34;Button&#34;); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Set the labels text*/&#xA;lv_obj_center(label); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Align the label to the center*/&#xA;...&#xA;&#xA;void button_event_cb(lv_event_t * e)&#xA;{&#xA;&amp;nbsp; printf(&#34;Clicked\n&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=926bde43ec7af0146c486de470c53f11f167491e&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def button_event_cb(e):&#xA;&amp;nbsp; print(&#34;Clicked&#34;)&#xA;&#xA;# Create a Button and a Label&#xA;button = lv.button(lv.screen_active())&#xA;button.center()&#xA;button.set_size(100, 50)&#xA;button.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None)&#xA;&#xA;label = lv.label(button)&#xA;label.set_text(&#34;Button&#34;)&#xA;label.center()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;Checkboxes with Layout&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_3.gif&#34; alt=&#34;Checkboxes with layout in LVGL&#34; /&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;&#xA;lv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN);&#xA;lv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER);&#xA;&#xA;lv_obj_t * cb;&#xA;cb = lv_checkbox_create(lv_screen_active());&#xA;lv_checkbox_set_text(cb, &#34;Apple&#34;);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_screen_active());&#xA;lv_checkbox_set_text(cb, &#34;Banana&#34;);&#xA;lv_obj_add_state(cb, LV_STATE_CHECKED);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_screen_active());&#xA;lv_checkbox_set_text(cb, &#34;Lemon&#34;);&#xA;lv_obj_add_state(cb, LV_STATE_DISABLED);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_screen_active());&#xA;lv_obj_add_state(cb, LV_STATE_CHECKED);&#xA;lv_obj_add_state(cb, LV_STATE_DISABLED);&#xA;lv_checkbox_set_text(cb, &#34;Melon\nand a new line&#34;);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=311d37e5f70daf1cb0d2cad24c7f72751b5f1792&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def event_handler(e):&#xA;    code = e.get_code()&#xA;    obj = e.get_target_obj()&#xA;    if code == lv.EVENT.VALUE_CHANGED:&#xA;        txt = obj.get_text()&#xA;        if obj.get_state() &amp;amp; lv.STATE.CHECKED:&#xA;            state = &#34;Checked&#34;&#xA;        else:&#xA;            state = &#34;Unchecked&#34;&#xA;        print(txt + &#34;:&#34; + state)&#xA;&#xA;&#xA;lv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN)&#xA;lv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)&#xA;&#xA;cb = lv.checkbox(lv.screen_active())&#xA;cb.set_text(&#34;Apple&#34;)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.screen_active())&#xA;cb.set_text(&#34;Banana&#34;)&#xA;cb.add_state(lv.STATE.CHECKED)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.screen_active())&#xA;cb.set_text(&#34;Lemon&#34;)&#xA;cb.add_state(lv.STATE.DISABLED)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.screen_active())&#xA;cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED)&#xA;cb.set_text(&#34;Melon&#34;)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;Styling a Slider&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_4.gif&#34; alt=&#34;Styling a slider with LVGL&#34; /&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * slider = lv_slider_create(lv_screen_active());&#xA;lv_slider_set_value(slider, 70, LV_ANIM_OFF);&#xA;lv_obj_set_size(slider, 300, 20);&#xA;lv_obj_center(slider);&#xA;&#xA;/*Add local styles to MAIN part (background rectangle)*/&#xA;lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN);&#xA;lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN);&#xA;lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN);&#xA;lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN);&#xA;lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN);&#xA;&#xA;/*Create a reusable style sheet for the INDICATOR part*/&#xA;static lv_style_t style_indicator;&#xA;lv_style_init(&amp;amp;style_indicator);&#xA;lv_style_set_bg_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));&#xA;lv_style_set_bg_grad_color(&amp;amp;style_indicator, lv_color_hex(0x1464F0));&#xA;lv_style_set_bg_grad_dir(&amp;amp;style_indicator, LV_GRAD_DIR_HOR);&#xA;lv_style_set_shadow_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));&#xA;lv_style_set_shadow_width(&amp;amp;style_indicator, 15);&#xA;lv_style_set_shadow_spread(&amp;amp;style_indicator, 5);&#xA;4&#xA;/*Add the style sheet to the slider&#39;s INDICATOR part*/&#xA;lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_INDICATOR);&#xA;&#xA;/*Add the same style to the KNOB part too and locally overwrite some properties*/&#xA;lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_KNOB);&#xA;&#xA;lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB);&#xA;lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB);&#xA;lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB);&#xA;lv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=c431c7b4dfd2cc0dd9c392b74365d5af6ea986f0&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a slider and add the style&#xA;slider = lv.slider(lv.screen_active())&#xA;slider.set_value(70, lv.ANIM.OFF)&#xA;slider.set_size(300, 20)&#xA;slider.center()&#xA;&#xA;# Add local styles to MAIN part (background rectangle)&#xA;slider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN)&#xA;slider.set_style_bg_opa(255, lv.PART.MAIN)&#xA;slider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN)&#xA;slider.set_style_border_width(5, lv.PART.MAIN)&#xA;slider.set_style_pad_all(5, lv.PART.MAIN)&#xA;&#xA;# Create a reusable style sheet for the INDICATOR part&#xA;style_indicator = lv.style_t()&#xA;style_indicator.init()&#xA;style_indicator.set_bg_color(lv.color_hex(0x37B9F5))&#xA;style_indicator.set_bg_grad_color(lv.color_hex(0x1464F0))&#xA;style_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR)&#xA;style_indicator.set_shadow_color(lv.color_hex(0x37B9F5))&#xA;style_indicator.set_shadow_width(15)&#xA;style_indicator.set_shadow_spread(5)&#xA;&#xA;# Add the style sheet to the slider&#39;s INDICATOR part&#xA;slider.add_style(style_indicator, lv.PART.INDICATOR)&#xA;slider.add_style(style_indicator, lv.PART.KNOB)&#xA;&#xA;# Add the same style to the KNOB part too and locally overwrite some properties&#xA;slider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB)&#xA;slider.set_style_outline_width(3, lv.PART.KNOB)&#xA;slider.set_style_outline_pad(-5, lv.PART.KNOB)&#xA;slider.set_style_shadow_spread(2, lv.PART.KNOB)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;English, Hebrew (mixed LTR-RTL) and Chinese texts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_5.png&#34; alt=&#34;English, Hebrew and Chinese texts with LVGL&#34; /&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * ltr_label = lv_label_create(lv_screen_active());&#xA;lv_label_set_text(ltr_label, &#34;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&#34;);&#xA;lv_obj_set_style_text_font(ltr_label, &amp;amp;lv_font_montserrat_16, 0);&#xA;lv_obj_set_width(ltr_label, 310);&#xA;lv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5);&#xA;&#xA;lv_obj_t * rtl_label = lv_label_create(lv_screen_active());&#xA;lv_label_set_text(rtl_label,&#34;◊û◊¢◊ë◊ì, ◊ê◊ï ◊ë◊©◊û◊ï ◊î◊û◊ú◊ê ◊ô◊ó◊ô◊ì◊™ ◊¢◊ô◊ë◊ï◊ì ◊û◊®◊õ◊ñ◊ô◊™ (◊ë◊ê◊†◊í◊ú◊ô◊™: CPU - Central Processing Unit).&#34;);&#xA;lv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0);&#xA;lv_obj_set_style_text_font(rtl_label, &amp;amp;lv_font_dejavu_16_persian_hebrew, 0);&#xA;lv_obj_set_width(rtl_label, 310);&#xA;lv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0);&#xA;&#xA;lv_obj_t * cz_label = lv_label_create(lv_screen_active());&#xA;lv_label_set_text(cz_label,&#xA;                  &#34;ÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàEmbedded SystemÔºâÔºå\nÊòØ‰∏ÄÁßçÂµåÂÖ•Êú∫Ê¢∞ÊàñÁîµÊ∞îÁ≥ªÁªüÂÜÖÈÉ®„ÄÅÂÖ∑Êúâ‰∏ì‰∏ÄÂäüËÉΩÂíåÂÆûÊó∂ËÆ°ÁÆóÊÄßËÉΩÁöÑËÆ°ÁÆóÊú∫Á≥ªÁªü„ÄÇ&#34;);&#xA;lv_obj_set_style_text_font(cz_label, &amp;amp;lv_font_source_han_sans_sc_16_cjk, 0);&#xA;lv_obj_set_width(cz_label, 310);&#xA;lv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=18bb38200a64e10ead1aa17a65c977fc18131842&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ltr_label = lv.label(lv.screen_active())&#xA;ltr_label.set_text(&#34;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&#34;)&#xA;ltr_label.set_style_text_font(lv.font_montserrat_16, 0);&#xA;&#xA;ltr_label.set_width(310)&#xA;ltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5)&#xA;&#xA;rtl_label = lv.label(lv.screen_active())&#xA;rtl_label.set_text(&#34;◊û◊¢◊ë◊ì, ◊ê◊ï ◊ë◊©◊û◊ï ◊î◊û◊ú◊ê ◊ô◊ó◊ô◊ì◊™ ◊¢◊ô◊ë◊ï◊ì ◊û◊®◊õ◊ñ◊ô◊™ (◊ë◊ê◊†◊í◊ú◊ô◊™: CPU - Central Processing Unit).&#34;)&#xA;rtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0)&#xA;rtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0)&#xA;rtl_label.set_width(310)&#xA;rtl_label.align(lv.ALIGN.LEFT_MID, 5, 0)&#xA;&#xA;font_hans_sans_16_cjk = lv.font_load(&#34;S:../../assets/font/lv_font_source_han_sans_sc_16_cjk.fnt&#34;)&#xA;&#xA;cz_label = lv.label(lv.screen_active())&#xA;cz_label.set_style_text_font(font_hans_sans_16_cjk, 0)&#xA;cz_label.set_text(&#34;ÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàEmbedded SystemÔºâÔºå\nÊòØ‰∏ÄÁßçÂµåÂÖ•Êú∫Ê¢∞ÊàñÁîµÊ∞îÁ≥ªÁªüÂÜÖÈÉ®„ÄÅÂÖ∑Êúâ‰∏ì‰∏ÄÂäüËÉΩÂíåÂÆûÊó∂ËÆ°ÁÆóÊÄßËÉΩÁöÑËÆ°ÁÆóÊú∫Á≥ªÁªü„ÄÇ&#34;)&#xA;cz_label.set_width(310)&#xA;cz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ñ∂&lt;/span&gt; Get started&lt;/h2&gt; &#xA;&lt;p&gt;This list will guide you to get started with LVGL step-by-step.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get Familiar with LVGL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://lvgl.io/demos&#34;&gt;Online demos&lt;/a&gt; to see LVGL in action (3 minutes).&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/intro/introduction/index.html&#34;&gt;Introduction&lt;/a&gt; page of the documentation (5 minutes).&lt;/li&gt; &#xA; &lt;li&gt;Get familiar with the basics on the &lt;a href=&#34;https://docs.lvgl.io/master/intro/getting_started/learn_the_basics.html&#34;&gt;Quick overview&lt;/a&gt; page (15 minutes).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start to Use LVGL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Set up a &lt;a href=&#34;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html#simulator&#34;&gt;Simulator&lt;/a&gt; (10 minutes).&lt;/li&gt; &#xA; &lt;li&gt;Try out some &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Port LVGL to a board. See the &lt;a href=&#34;https://docs.lvgl.io/master/details/integration/adding-lvgl-to-your-project/index.html&#34;&gt;Porting&lt;/a&gt; guide or check out the ready-to-use &lt;a href=&#34;https://github.com/lvgl?q=lv_port_&#34;&gt;Projects&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Become a Pro&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/details/main-modules/index.html&#34;&gt;Main-Modules&lt;/a&gt; page to get a better understanding of the library (2-3 hours)&lt;/li&gt; &#xA; &lt;li&gt;Check the documentation of the &lt;a href=&#34;https://docs.lvgl.io/master/details/widgets/index.html&#34;&gt;Widgets&lt;/a&gt; to see their features and usage&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get Help and Help Others&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;If you have questions go to the &lt;a href=&#34;http://forum.lvgl.io/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/contributing/index.html&#34;&gt;Contributing&lt;/a&gt; guide to see how you can help to improve LVGL (15 minutes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;ü§ù&lt;/span&gt; Services&lt;/h2&gt; &#xA;&lt;p&gt;LVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Graphics design&lt;/strong&gt; Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI implementation&lt;/strong&gt; We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don&#39;t worry, we will implement it for you.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consulting and Support&lt;/strong&gt; We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Board certification&lt;/strong&gt; For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://lvgl.io/demos&#34;&gt;Demos&lt;/a&gt; as reference. For more information take look at the &lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lvgl.io/#contact&#34;&gt;Contact us&lt;/a&gt; and tell how we can help.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üåü&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization.&lt;/p&gt; &#xA;&lt;p&gt;For a detailed description of contribution opportunities visit the &lt;a href=&#34;https://docs.lvgl.io/master/contributing/index.html&#34;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt; &#xA;&lt;p&gt;More than 300 people already left their fingerprint in LVGL. Be one them! See you here! &lt;span&gt;üôÇ&lt;/span&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/lvgl/lvgl/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&#34; /&gt; &lt;/a&gt; &#xA;&lt;p&gt;... and many other.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actualbudget/actual</title>
    <updated>2025-08-10T06:02:59Z</updated>
    <id>tag:github.com,2025-08-10:/actualbudget/actual</id>
    <link href="https://github.com/actualbudget/actual" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local-first personal finance app&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/actualbudget/actual/master/demo.png&#34; alt=&#34;Actualbudget&#34; /&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in contributing, or want to know how development works, see our &lt;a href=&#34;https://actualbudget.org/docs/contributing/&#34;&gt;contributing&lt;/a&gt; document we would love to have you.&lt;/p&gt; &#xA;&lt;p&gt;Want to say thanks? Click the ‚≠ê at the top of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Key Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Actual &lt;a href=&#34;https://discord.gg/pRYNYr4W5A&#34;&gt;discord&lt;/a&gt; community.&lt;/li&gt; &#xA; &lt;li&gt;Actual &lt;a href=&#34;https://actualbudget.org/docs&#34;&gt;Community Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://actualbudget.org/docs/faq&#34;&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are four ways to deploy Actual:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;One-click deployment &lt;a href=&#34;https://www.pikapods.com/pods?run=actual&#34;&gt;via PikaPods&lt;/a&gt; (~1.40 $/month) - recommended for non-technical users&lt;/li&gt; &#xA; &lt;li&gt;Managed hosting &lt;a href=&#34;https://actualbudget.org/docs/install/fly&#34;&gt;via Fly.io&lt;/a&gt; (~1.50 $/month)&lt;/li&gt; &#xA; &lt;li&gt;Self-hosted by using &lt;a href=&#34;https://actualbudget.org/docs/install/docker&#34;&gt;a Docker image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Local-only apps - &lt;a href=&#34;https://actualbudget.org/download/&#34;&gt;downloadable Windows, Mac and Linux apps&lt;/a&gt; you can run on your device&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Learn more in the &lt;a href=&#34;https://actualbudget.org/docs/install/&#34;&gt;installation instructions docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ready to Start Budgeting?&lt;/h2&gt; &#xA;&lt;p&gt;Read about &lt;a href=&#34;https://actualbudget.org/docs/getting-started/envelope-budgeting&#34;&gt;Envelope budgeting&lt;/a&gt; to know more about the idea behind Actual Budget.&lt;/p&gt; &#xA;&lt;h3&gt;Are you new to budgeting or want to start fresh?&lt;/h3&gt; &#xA;&lt;p&gt;Check out the community&#39;s &lt;a href=&#34;https://actualbudget.org/docs/getting-started/starting-fresh&#34;&gt;Starting Fresh&lt;/a&gt; guide so you can quickly get up and running!&lt;/p&gt; &#xA;&lt;h3&gt;Are you migrating from other budgeting apps?&lt;/h3&gt; &#xA;&lt;p&gt;Check out the community&#39;s &lt;a href=&#34;https://actualbudget.org/docs/migration/&#34;&gt;Migration&lt;/a&gt; guide to start jumping on the Actual Budget train!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We have a wide range of documentation on how to use Actual, this is all available in our &lt;a href=&#34;https://actualbudget.org/docs&#34;&gt;Community Documentation&lt;/a&gt;, this includes topics on Budgeting, Account Management, Tips &amp;amp; Tricks and some documentation for developers.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Actual is a community driven product. Learn more about &lt;a href=&#34;https://actualbudget.org/docs/contributing/&#34;&gt;contributing to Actual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code structure&lt;/h3&gt; &#xA;&lt;p&gt;The Actual app is split up into a few packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;loot-core - The core application that runs on any platform&lt;/li&gt; &#xA; &lt;li&gt;desktop-client - The desktop UI&lt;/li&gt; &#xA; &lt;li&gt;desktop-electron - The desktop app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information on the project structure is available in our &lt;a href=&#34;https://actualbudget.org/docs/contributing/project-details&#34;&gt;community documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;Current feature requests can be seen &lt;a href=&#34;https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc&#34;&gt;here&lt;/a&gt;. Vote for your favorite requests by reacting &lt;span&gt;üëç&lt;/span&gt; to the top comment of the request.&lt;/p&gt; &#xA;&lt;p&gt;To add new feature requests, open a new Issue of the &#34;Feature Request&#34; type.&lt;/p&gt; &#xA;&lt;h3&gt;Translation&lt;/h3&gt; &#xA;&lt;p&gt;Make Actual Budget accessible to more people by helping with the &lt;a href=&#34;https://actualbudget.org/docs/contributing/i18n/&#34;&gt;Internationalization&lt;/a&gt; of Actual. We are using a crowd sourcing tool to manage the translations, see our &lt;a href=&#34;https://hosted.weblate.org/projects/actualbudget/&#34;&gt;Weblate Project&lt;/a&gt;. Weblate proudly supports open-source software projects through their &lt;a href=&#34;https://weblate.org/en/hosting/#libre&#34;&gt;Libre plan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/actualbudget/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widget/actualbudget/actual/287x66-grey.png&#34; alt=&#34;Translation status&#34; /&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to our wonderful sponsors who make Actual Budget possible!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/v3/img/components/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34; /&gt; &lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jesseduffield/lazygit</title>
    <updated>2025-08-10T06:02:59Z</updated>
    <id>tag:github.com,2025-08-10:/jesseduffield/lazygit</id>
    <link href="https://github.com/jesseduffield/lazygit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;simple terminal UI for git commands&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sup&gt;Special thanks to:&lt;/sup&gt; &#xA; &lt;br /&gt; &#xA; &lt;br /&gt; &#xA; &lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazygit_20231023&#34;&gt; &#xA;  &lt;div&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/warp.png&#34; width=&#34;330&#34; alt=&#34;Warp&#34; /&gt; &#xA;  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; &#xA;  &lt;div&gt; &#xA;   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; &#xA;  &lt;/div&gt; &lt;/a&gt; &#xA; &lt;br /&gt; &#xA; &lt;hr /&gt; &#xA; &lt;a href=&#34;https://www.subble.com&#34;&gt; &#xA;  &lt;div&gt; &#xA;   &lt;img src=&#34;https://subble-marketing-portal-media-storage.s3.amazonaws.com/images/subble-black-name-logo.svg?sanitize=true&#34; width=&#34;230&#34; alt=&#34;Subble&#34; /&gt; &#xA;  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by helping you manage its software subscriptions. Check it out!&lt;/b&gt; &lt;/a&gt; &#xA; &lt;br /&gt; &#xA; &lt;hr /&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;536&#34; src=&#34;https://user-images.githubusercontent.com/8456633/174470852-339b5011-5800-4bb9-a628-ff230aa8cd4e.png&#34; /&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;A simple terminal UI for git commands &lt;br /&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jesseduffield/lazygit/total&#34; alt=&#34;GitHub Releases&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/jesseduffield/lazygit&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/jesseduffield/lazygit&#34; alt=&#34;Go Report Card&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/f46416b715d74622895657935fcada21&#34; alt=&#34;Codacy Badge&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_coverage&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Coverage/f46416b715d74622895657935fcada21&#34; alt=&#34;Codacy Badge&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com&#34;&gt;&lt;img src=&#34;https://golangci.com/badges/github.com/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GolangCI&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GitHub tag&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazygit.rb&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/v/lazygit&#34; alt=&#34;homebrew&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_and_push-compressed.gif&#34; alt=&#34;commit_and_push&#34; /&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Maintenance of this project is made possible by all the &lt;a href=&#34;https://github.com/jesseduffield/lazygit/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsors&lt;/a&gt;. If you&#39;d like to sponsor this project and have your avatar or company logo appear below &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;click here&lt;/a&gt;. üíô &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- sponsors --&gt;&lt;a href=&#34;https://github.com/intabulas&#34;&gt;&lt;img src=&#34;https://github.com/intabulas.png&#34; width=&#34;60px&#34; alt=&#34;Mark Lussier&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/peppy&#34;&gt;&lt;img src=&#34;https://github.com/peppy.png&#34; width=&#34;60px&#34; alt=&#34;Dean Herbert&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/piot&#34;&gt;&lt;img src=&#34;https://github.com/piot.png&#34; width=&#34;60px&#34; alt=&#34;Peter Bjorklund&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/rgwood&#34;&gt;&lt;img src=&#34;https://github.com/rgwood.png&#34; width=&#34;60px&#34; alt=&#34;Reilly Wood&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/oliverguenther&#34;&gt;&lt;img src=&#34;https://github.com/oliverguenther.png&#34; width=&#34;60px&#34; alt=&#34;Oliver G√ºnther&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/pawanjay176&#34;&gt;&lt;img src=&#34;https://github.com/pawanjay176.png&#34; width=&#34;60px&#34; alt=&#34;Pawan Dhananjay&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/bdach&#34;&gt;&lt;img src=&#34;https://github.com/bdach.png&#34; width=&#34;60px&#34; alt=&#34;Bart≈Çomiej Dach&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/carstengehling&#34;&gt;&lt;img src=&#34;https://github.com/carstengehling.png&#34; width=&#34;60px&#34; alt=&#34;Carsten Gehling&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ceuk&#34;&gt;&lt;img src=&#34;https://github.com/ceuk.png&#34; width=&#34;60px&#34; alt=&#34;CEUK&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Xetera&#34;&gt;&lt;img src=&#34;https://github.com/Xetera.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/HoldenLucas&#34;&gt;&lt;img src=&#34;https://github.com/HoldenLucas.png&#34; width=&#34;60px&#34; alt=&#34;Holden Lucas&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nartc&#34;&gt;&lt;img src=&#34;https://github.com/nartc.png&#34; width=&#34;60px&#34; alt=&#34;Chau Tran&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/matejcik&#34;&gt;&lt;img src=&#34;https://github.com/matejcik.png&#34; width=&#34;60px&#34; alt=&#34;matejcik&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/lucatume&#34;&gt;&lt;img src=&#34;https://github.com/lucatume.png&#34; width=&#34;60px&#34; alt=&#34;theAverageDev (Luca Tumedei)&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/IvanZuy&#34;&gt;&lt;img src=&#34;https://github.com/IvanZuy.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nicholascloud&#34;&gt;&lt;img src=&#34;https://github.com/nicholascloud.png&#34; width=&#34;60px&#34; alt=&#34;Nicholas Cloud&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ava1ar&#34;&gt;&lt;img src=&#34;https://github.com/ava1ar.png&#34; width=&#34;60px&#34; alt=&#34;Aliaksandr Stelmachonak&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/minidfx&#34;&gt;&lt;img src=&#34;https://github.com/minidfx.png&#34; width=&#34;60px&#34; alt=&#34;Burgy Benjamin&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/JoeKlemmer&#34;&gt;&lt;img src=&#34;https://github.com/JoeKlemmer.png&#34; width=&#34;60px&#34; alt=&#34;Joe Klemmer&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tobi&#34;&gt;&lt;img src=&#34;https://github.com/tobi.png&#34; width=&#34;60px&#34; alt=&#34;Tobias L√ºtke&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/benbfortis&#34;&gt;&lt;img src=&#34;https://github.com/benbfortis.png&#34; width=&#34;60px&#34; alt=&#34;Ben Beaumont&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/jakewarren&#34;&gt;&lt;img src=&#34;https://github.com/jakewarren.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tgpholly&#34;&gt;&lt;img src=&#34;https://github.com/tgpholly.png&#34; width=&#34;60px&#34; alt=&#34;Holly&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/socketbox&#34;&gt;&lt;img src=&#34;https://github.com/socketbox.png&#34; width=&#34;60px&#34; alt=&#34;Casey Boettcher&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/bitprophet&#34;&gt;&lt;img src=&#34;https://github.com/bitprophet.png&#34; width=&#34;60px&#34; alt=&#34;Jeff Forcier&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tayleighr&#34;&gt;&lt;img src=&#34;https://github.com/tayleighr.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Novakov&#34;&gt;&lt;img src=&#34;https://github.com/Novakov.png&#34; width=&#34;60px&#34; alt=&#34;Maciej T. Nowak&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nekhaevskiy&#34;&gt;&lt;img src=&#34;https://github.com/nekhaevskiy.png&#34; width=&#34;60px&#34; alt=&#34;Yury&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/reivilibre&#34;&gt;&lt;img src=&#34;https://github.com/reivilibre.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/andreaskurth&#34;&gt;&lt;img src=&#34;https://github.com/andreaskurth.png&#34; width=&#34;60px&#34; alt=&#34;Andreas Kurth&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/BSteffaniak&#34;&gt;&lt;img src=&#34;https://github.com/BSteffaniak.png&#34; width=&#34;60px&#34; alt=&#34;Braden Steffaniak&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/jordan-gillard&#34;&gt;&lt;img src=&#34;https://github.com/jordan-gillard.png&#34; width=&#34;60px&#34; alt=&#34;Jordan Gillard&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/smangels&#34;&gt;&lt;img src=&#34;https://github.com/smangels.png&#34; width=&#34;60px&#34; alt=&#34;Sebastian&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/amslezak&#34;&gt;&lt;img src=&#34;https://github.com/amslezak.png&#34; width=&#34;60px&#34; alt=&#34;Andy Slezak&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mkock&#34;&gt;&lt;img src=&#34;https://github.com/mkock.png&#34; width=&#34;60px&#34; alt=&#34;Martin Kock&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/jessealama&#34;&gt;&lt;img src=&#34;https://github.com/jessealama.png&#34; width=&#34;60px&#34; alt=&#34;Jesse Alama&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/danielkokott&#34;&gt;&lt;img src=&#34;https://github.com/danielkokott.png&#34; width=&#34;60px&#34; alt=&#34;Daniel Kokott&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/heijmans&#34;&gt;&lt;img src=&#34;https://github.com/heijmans.png&#34; width=&#34;60px&#34; alt=&#34;Jan Heijmans&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/knowald&#34;&gt;&lt;img src=&#34;https://github.com/knowald.png&#34; width=&#34;60px&#34; alt=&#34;Kevin Nowald&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/omarluq&#34;&gt;&lt;img src=&#34;https://github.com/omarluq.png&#34; width=&#34;60px&#34; alt=&#34;Omar Luq&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ethanjli&#34;&gt;&lt;img src=&#34;https://github.com/ethanjli.png&#34; width=&#34;60px&#34; alt=&#34;Ethan Li&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/phubaba&#34;&gt;&lt;img src=&#34;https://github.com/phubaba.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/canhazcodez&#34;&gt;&lt;img src=&#34;https://github.com/canhazcodez.png&#34; width=&#34;60px&#34; alt=&#34;Maxi&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/neunkasulle&#34;&gt;&lt;img src=&#34;https://github.com/neunkasulle.png&#34; width=&#34;60px&#34; alt=&#34;Jan Zenkner&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/RVxLab&#34;&gt;&lt;img src=&#34;https://github.com/RVxLab.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/FrederickGeek8&#34;&gt;&lt;img src=&#34;https://github.com/FrederickGeek8.png&#34; width=&#34;60px&#34; alt=&#34;Frederick Morlock&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ezdac&#34;&gt;&lt;img src=&#34;https://github.com/ezdac.png&#34; width=&#34;60px&#34; alt=&#34;Maximilian Langenfeld&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/dbuls&#34;&gt;&lt;img src=&#34;https://github.com/dbuls.png&#34; width=&#34;60px&#34; alt=&#34;Davis Buls&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/lppassos&#34;&gt;&lt;img src=&#34;https://github.com/lppassos.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/neilcode&#34;&gt;&lt;img src=&#34;https://github.com/neilcode.png&#34; width=&#34;60px&#34; alt=&#34;Neil Lambert&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/dhh&#34;&gt;&lt;img src=&#34;https://github.com/dhh.png&#34; width=&#34;60px&#34; alt=&#34;David Heinemeier Hansson&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ethanfischer&#34;&gt;&lt;img src=&#34;https://github.com/ethanfischer.png&#34; width=&#34;60px&#34; alt=&#34;Ethan Fischer&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/poshboytl&#34;&gt;&lt;img src=&#34;https://github.com/poshboytl.png&#34; width=&#34;60px&#34; alt=&#34;Terry Tai&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/roesnera&#34;&gt;&lt;img src=&#34;https://github.com/roesnera.png&#34; width=&#34;60px&#34; alt=&#34;Adam Roesner&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/seven1m&#34;&gt;&lt;img src=&#34;https://github.com/seven1m.png&#34; width=&#34;60px&#34; alt=&#34;Tim Morgan&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/sgoridotla1&#34;&gt;&lt;img src=&#34;https://github.com/sgoridotla1.png&#34; width=&#34;60px&#34; alt=&#34;Max Shypulniak&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ADIX7&#34;&gt;&lt;img src=&#34;https://github.com/ADIX7.png&#34; width=&#34;60px&#34; alt=&#34;Kov√°cs √Åd√°m&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/slowdub&#34;&gt;&lt;img src=&#34;https://github.com/slowdub.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/serranomorante&#34;&gt;&lt;img src=&#34;https://github.com/serranomorante.png&#34; width=&#34;60px&#34; alt=&#34;Patricio Serrano&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/kiriDevs&#34;&gt;&lt;img src=&#34;https://github.com/kiriDevs.png&#34; width=&#34;60px&#34; alt=&#34;Kiri&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Bparsons0904&#34;&gt;&lt;img src=&#34;https://github.com/Bparsons0904.png&#34; width=&#34;60px&#34; alt=&#34;Bob Parsons&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/bjornevik&#34;&gt;&lt;img src=&#34;https://github.com/bjornevik.png&#34; width=&#34;60px&#34; alt=&#34;John Even Bj√∏rnevik&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/moberst&#34;&gt;&lt;img src=&#34;https://github.com/moberst.png&#34; width=&#34;60px&#34; alt=&#34;Michael Oberst&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/stianh&#34;&gt;&lt;img src=&#34;https://github.com/stianh.png&#34; width=&#34;60px&#34; alt=&#34;Stian Hegglund&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/adam-e-trepanier&#34;&gt;&lt;img src=&#34;https://github.com/adam-e-trepanier.png&#34; width=&#34;60px&#34; alt=&#34;Adam Trepanier&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/arkalon76&#34;&gt;&lt;img src=&#34;https://github.com/arkalon76.png&#34; width=&#34;60px&#34; alt=&#34;Kenth Fagerlund&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Djuuu&#34;&gt;&lt;img src=&#34;https://github.com/Djuuu.png&#34; width=&#34;60px&#34; alt=&#34;Julien Tardot&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/antikytheraton&#34;&gt;&lt;img src=&#34;https://github.com/antikytheraton.png&#34; width=&#34;60px&#34; alt=&#34;Aaron Arredondo&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ellord&#34;&gt;&lt;img src=&#34;https://github.com/ellord.png&#34; width=&#34;60px&#34; alt=&#34;Ellord Tayag&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/EdgarPost&#34;&gt;&lt;img src=&#34;https://github.com/EdgarPost.png&#34; width=&#34;60px&#34; alt=&#34;Edgar Post-Buijs&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/sbc64&#34;&gt;&lt;img src=&#34;https://github.com/sbc64.png&#34; width=&#34;60px&#34; alt=&#34;sbc64&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/caillou&#34;&gt;&lt;img src=&#34;https://github.com/caillou.png&#34; width=&#34;60px&#34; alt=&#34;Pierre Spring&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mebezac&#34;&gt;&lt;img src=&#34;https://github.com/mebezac.png&#34; width=&#34;60px&#34; alt=&#34;Zac Clay&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Tom94&#34;&gt;&lt;img src=&#34;https://github.com/Tom94.png&#34; width=&#34;60px&#34; alt=&#34;Thomas M√ºller&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ccssmnn&#34;&gt;&lt;img src=&#34;https://github.com/ccssmnn.png&#34; width=&#34;60px&#34; alt=&#34;Carl Assmann&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ognevsd&#34;&gt;&lt;img src=&#34;https://github.com/ognevsd.png&#34; width=&#34;60px&#34; alt=&#34;Sergey Ognev&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/moodyhunter&#34;&gt;&lt;img src=&#34;https://github.com/moodyhunter.png&#34; width=&#34;60px&#34; alt=&#34;Moody Liu&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/code-hunger&#34;&gt;&lt;img src=&#34;https://github.com/code-hunger.png&#34; width=&#34;60px&#34; alt=&#34;Alex G&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/elithper&#34;&gt;&lt;img src=&#34;https://github.com/elithper.png&#34; width=&#34;60px&#34; alt=&#34;Michael Howard&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/LasseBloch&#34;&gt;&lt;img src=&#34;https://github.com/LasseBloch.png&#34; width=&#34;60px&#34; alt=&#34;Lasse Bloch Lauritsen&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/lmarburger&#34;&gt;&lt;img src=&#34;https://github.com/lmarburger.png&#34; width=&#34;60px&#34; alt=&#34;Larry Marburger&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/dbrockman&#34;&gt;&lt;img src=&#34;https://github.com/dbrockman.png&#34; width=&#34;60px&#34; alt=&#34;David Brockman&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/slavshik&#34;&gt;&lt;img src=&#34;https://github.com/slavshik.png&#34; width=&#34;60px&#34; alt=&#34;Alexander Slavschik&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/aidalgol&#34;&gt;&lt;img src=&#34;https://github.com/aidalgol.png&#34; width=&#34;60px&#34; alt=&#34;Aidan Gauland&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mbienkowsk&#34;&gt;&lt;img src=&#34;https://github.com/mbienkowsk.png&#34; width=&#34;60px&#34; alt=&#34;Maksym Bie≈Ñkowski&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/joshuawootonn&#34;&gt;&lt;img src=&#34;https://github.com/joshuawootonn.png&#34; width=&#34;60px&#34; alt=&#34;Joshua Wootonn&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/I4nJ&#34;&gt;&lt;img src=&#34;https://github.com/I4nJ.png&#34; width=&#34;60px&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/gurbindersingh&#34;&gt;&lt;img src=&#34;https://github.com/gurbindersingh.png&#34; width=&#34;60px&#34; alt=&#34;Gurbinder Singh&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/sandviklee&#34;&gt;&lt;img src=&#34;https://github.com/sandviklee.png&#34; width=&#34;60px&#34; alt=&#34;Simon Sandvik Lee&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/glagnar&#34;&gt;&lt;img src=&#34;https://github.com/glagnar.png&#34; width=&#34;60px&#34; alt=&#34;Thomas Gilbert&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/skrzepto&#34;&gt;&lt;img src=&#34;https://github.com/skrzepto.png&#34; width=&#34;60px&#34; alt=&#34;Szymon Mucha&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/TimShilov&#34;&gt;&lt;img src=&#34;https://github.com/TimShilov.png&#34; width=&#34;60px&#34; alt=&#34;Tim Shilov&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/unnawut&#34;&gt;&lt;img src=&#34;https://github.com/unnawut.png&#34; width=&#34;60px&#34; alt=&#34;Unnawut Leepaisalsuwanna&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/wortmanb&#34;&gt;&lt;img src=&#34;https://github.com/wortmanb.png&#34; width=&#34;60px&#34; alt=&#34;Bret Wortman&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/andre-lameirinhas&#34;&gt;&lt;img src=&#34;https://github.com/andre-lameirinhas.png&#34; width=&#34;60px&#34; alt=&#34;Andr√© Lameirinhas&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/SVappsLAB&#34;&gt;&lt;img src=&#34;https://github.com/SVappsLAB.png&#34; width=&#34;60px&#34; alt=&#34;Scott Velez&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ooojustin&#34;&gt;&lt;img src=&#34;https://github.com/ooojustin.png&#34; width=&#34;60px&#34; alt=&#34;justin&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/TakodaS&#34;&gt;&lt;img src=&#34;https://github.com/TakodaS.png&#34; width=&#34;60px&#34; alt=&#34;Austen Bolitho&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mantzu132&#34;&gt;&lt;img src=&#34;https://github.com/mantzu132.png&#34; width=&#34;60px&#34; alt=&#34;Mantas&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mayfieldiv&#34;&gt;&lt;img src=&#34;https://github.com/mayfieldiv.png&#34; width=&#34;60px&#34; alt=&#34;Mayfield&#34; /&gt;&lt;/a&gt;&#xA; &lt;!-- sponsors --&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Elevator Pitch&lt;/h2&gt; &#xA;&lt;p&gt;Rant time: You&#39;ve heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can&#39;t be split down any further but contains code you don&#39;t want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren&#39;t even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE KIDDING ME!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a mere mortal like me and you&#39;re tired of hearing how powerful git is when in your daily life it&#39;s a powerful pain in your ass, lazygit might be for you.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#elevator-pitch&#34;&gt;Elevator Pitch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#table-of-contents&#34;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#features&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#stage-individual-lines&#34;&gt;Stage individual lines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#interactive-rebase&#34;&gt;Interactive Rebase&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#cherry-pick&#34;&gt;Cherry-pick&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#bisect&#34;&gt;Bisect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#nuke-the-working-tree&#34;&gt;Nuke the working tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#amend-an-old-commit&#34;&gt;Amend an old commit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#filter&#34;&gt;Filter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#invoke-a-custom-command&#34;&gt;Invoke a custom command&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#worktrees&#34;&gt;Worktrees&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-magic-custom-patches&#34;&gt;Rebase magic (custom patches)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-from-marked-base-commit&#34;&gt;Rebase from marked base commit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undo&#34;&gt;Undo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#commit-graph&#34;&gt;Commit graph&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#compare-two-commits&#34;&gt;Compare two commits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#binary-releases&#34;&gt;Binary Releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#macports&#34;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#void-linux&#34;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#scoop-windows&#34;&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#fedora-and-rhel&#34;&gt;Fedora and RHEL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#solus-linux&#34;&gt;Solus Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debian-and-ubuntu&#34;&gt;Debian and Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#funtoo-linux&#34;&gt;Funtoo Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#gentoo-linux&#34;&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#termux&#34;&gt;Termux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#conda&#34;&gt;Conda&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#chocolatey-windows&#34;&gt;Chocolatey (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#winget-windows-10-1709-or-later&#34;&gt;Winget (Windows 10 1709 or later)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#keybindings&#34;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#changing-directory-on-exit&#34;&gt;Changing Directory On Exit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undoredo&#34;&gt;Undo/Redo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-pagers&#34;&gt;Custom Pagers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-commands&#34;&gt;Custom Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#git-flow-support&#34;&gt;Git flow support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debugging-locally&#34;&gt;Debugging Locally&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#donate&#34;&gt;Donate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#what-do-the-commit-colors-represent&#34;&gt;What do the commit colors represent?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#shameless-plug&#34;&gt;Shameless Plug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Lazygit is not my fulltime job but it is a hefty part time job so if you want to support the project please consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Stage individual lines&lt;/h3&gt; &#xA;&lt;p&gt;Press space on the selected line to stage it, or press &lt;code&gt;v&lt;/code&gt; to start selecting a range of lines. You can also press &lt;code&gt;a&lt;/code&gt; to select the entirety of the current hunk.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/stage_lines-compressed.gif&#34; alt=&#34;stage_lines&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Rebase&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;code&gt;i&lt;/code&gt; to start an interactive rebase. Then squash (&lt;code&gt;s&lt;/code&gt;), fixup (&lt;code&gt;f&lt;/code&gt;), drop (&lt;code&gt;d&lt;/code&gt;), edit (&lt;code&gt;e&lt;/code&gt;), move up (&lt;code&gt;ctrl+k&lt;/code&gt;) or move down (&lt;code&gt;ctrl+j&lt;/code&gt;) any of TODO commits, before continuing the rebase by bringing up the rebase options menu with &lt;code&gt;m&lt;/code&gt; and then selecting &lt;code&gt;continue&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also perform any these actions as a once-off (e.g. pressing &lt;code&gt;s&lt;/code&gt; on a commit to squash it) without explicitly starting a rebase.&lt;/p&gt; &#xA;&lt;p&gt;This demo also uses shift+down to select a range of commits to move and fixup.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/interactive_rebase-compressed.gif&#34; alt=&#34;interactive_rebase&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cherry-pick&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;code&gt;shift+c&lt;/code&gt; on a commit to copy it and press &lt;code&gt;shift+v&lt;/code&gt; to paste (cherry-pick) it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/cherry_pick-compressed.gif&#34; alt=&#34;cherry_pick&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bisect&lt;/h3&gt; &#xA;&lt;p&gt;Press &lt;code&gt;b&lt;/code&gt; in the commits view to mark a commit as good/bad in order to begin a git bisect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/bisect-compressed.gif&#34; alt=&#34;bisect&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nuke the working tree&lt;/h3&gt; &#xA;&lt;p&gt;For when you really want to just get rid of anything that shows up when you run &lt;code&gt;git status&lt;/code&gt; (and yes that includes dirty submodules) &lt;a href=&#34;https://www.youtube.com/watch?v=N4E2B_k2Bss&#34;&gt;kidpix style&lt;/a&gt;, press &lt;code&gt;shift+d&lt;/code&gt; to bring up the reset options menu and then select the &#39;nuke&#39; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/nuke_working_tree-compressed.gif&#34; alt=&#34;Nuke working tree&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Amend an old commit&lt;/h3&gt; &#xA;&lt;p&gt;Pressing &lt;code&gt;shift+a&lt;/code&gt; on any commit will amend that commit with the currently staged changes (running an interactive rebase in the background).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/amend_old_commit-compressed.gif&#34; alt=&#34;amend_old_commit&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Filter&lt;/h3&gt; &#xA;&lt;p&gt;You can filter a view with &lt;code&gt;/&lt;/code&gt;. Here we filter down our branches view and then hit &lt;code&gt;enter&lt;/code&gt; to view its commits.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/filter-compressed.gif&#34; alt=&#34;filter&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Invoke a custom command&lt;/h3&gt; &#xA;&lt;p&gt;Lazygit has a very flexible &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&#34;&gt;custom command system&lt;/a&gt;. In this example a custom command is defined which emulates the built-in branch checkout action.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_command-compressed.gif&#34; alt=&#34;custom_command&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Worktrees&lt;/h3&gt; &#xA;&lt;p&gt;You can create worktrees to have multiple branches going at once without the need for stashing or creating WIP commits when switching between them. Press &lt;code&gt;w&lt;/code&gt; in the branches view to create a worktree from the selected branch and switch to it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/worktree_create_from_branches-compressed.gif&#34; alt=&#34;worktree_create_from_branches&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rebase magic (custom patches)&lt;/h3&gt; &#xA;&lt;p&gt;You can build a custom patch from an old commit and then remove the patch from the commit, split out a new commit, apply the patch in reverse to the index, and more.&lt;/p&gt; &#xA;&lt;p&gt;In this example we have a redundant comment that we want to remove from an old commit. We hit &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on the commit to view its files, then &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on a file to focus the patch, then &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; to add the comment line to our custom patch, and then &lt;code&gt;ctrl+p&lt;/code&gt; to view the custom patch options; selecting to remove the patch from the current commit.&lt;/p&gt; &#xA;&lt;p&gt;Learn more in the &lt;a href=&#34;https://youtu.be/4XaToVut_hs&#34;&gt;Rebase magic Youtube tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_patch-compressed.gif&#34; alt=&#34;custom_patch&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rebase from marked base commit&lt;/h3&gt; &#xA;&lt;p&gt;Say you&#39;re on a feature branch that was itself branched off of the develop branch, and you&#39;ve decided you&#39;d rather be branching off the master branch. You need a way to rebase only the commits from your feature branch. In this demo we check to see which was the last commit on the develop branch, then press &lt;code&gt;shift+b&lt;/code&gt; to mark that commit as our base commit, then press &lt;code&gt;r&lt;/code&gt; on the master branch to rebase onto it, only bringing across the commits from our feature branch. Then we push our changes with &lt;code&gt;shift+p&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/rebase_onto-compressed.gif&#34; alt=&#34;rebase_onto&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Undo&lt;/h3&gt; &#xA;&lt;p&gt;You can undo the last action by pressing &lt;code&gt;z&lt;/code&gt; and redo with &lt;code&gt;ctrl+z&lt;/code&gt;. Here we drop a couple of commits and then undo the actions. Undo uses the reflog which is specific to commits and branches so we can&#39;t undo changes to the working tree or stash.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&#34;&gt;More info&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/undo-compressed.gif&#34; alt=&#34;undo&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Commit graph&lt;/h3&gt; &#xA;&lt;p&gt;When viewing the commit graph in an enlarged window (use &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; to cycle screen modes), the commit graph is shown. Colours correspond to the commit authors, and as you navigate down the graph, the parent commits of the selected commit are highlighted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_graph-compressed.gif&#34; alt=&#34;commit_graph&#34; /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Compare two commits&lt;/h3&gt; &#xA;&lt;p&gt;If you press &lt;code&gt;shift+w&lt;/code&gt; on a commit (or branch/ref) a menu will open that allows you to mark that commit so that any other commit you select will be diffed against it. Once you&#39;ve selected the second commit, you&#39;ll see the diff in the main view and if you press &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; you&#39;ll see the files of the diff. You can press &lt;code&gt;shift+w&lt;/code&gt; to view the diff menu again to see options like reversing the diff direction or exiting diff mode. You can also exit diff mode by pressing &lt;code&gt;&amp;lt;escape&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/diff_commits-compressed.gif&#34; alt=&#34;diff_commits&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/CPLdltN7wgE&#34;&gt;&lt;img src=&#34;https://i.imgur.com/sVEktDn.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/CPLdltN7wgE&#34;&gt;15 Lazygit Features in 15 Minutes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/VDXvbHZYeKY&#34;&gt;Basics Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/4XaToVut_hs&#34;&gt;Rebase Magic Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/lazygit/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/lazygit.svg?columns=3&#34; alt=&#34;Packaging status&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Most of the above packages are maintained by third parties so be sure to vet them yourself and confirm that the maintainer is a trustworthy looking person who attends local sports games and gives back to their communities with barbeque fundraisers etc&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Binary Releases&lt;/h3&gt; &#xA;&lt;p&gt;For Windows, Mac OS(10.12+) or Linux, you can download a binary release &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;It works with Linux, too.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacPorts&lt;/h3&gt; &#xA;&lt;p&gt;Latest version built from github releases. Tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Void Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Void Linux are available in the distro repo&lt;/p&gt; &#xA;&lt;p&gt;They follow upstream latest releases&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo xbps-install -S lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;. It&#39;s in the &lt;code&gt;extras&lt;/code&gt; bucket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Add the extras bucket&#xA;scoop bucket add extras&#xA;&#xA;# Install lazygit&#xA;scoop install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Arch Linux are available via pacman and AUR (Arch User Repository).&lt;/p&gt; &#xA;&lt;p&gt;There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stable: &lt;code&gt;sudo pacman -S lazygit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Development: &lt;a href=&#34;https://aur.archlinux.org/packages/lazygit-git/&#34;&gt;https://aur.archlinux.org/packages/lazygit-git/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instruction of how to install AUR content can be found here: &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_User_Repository&#34;&gt;https://wiki.archlinux.org/index.php/Arch_User_Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fedora / Amazon Linux 2023 / CentOS Stream&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Fedora, Amazon Linux 2023 and CentOS Stream are available via &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/dejan/lazygit/&#34;&gt;Copr&lt;/a&gt; (Cool Other Package Repo).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf copr enable dejan/lazygit&#xA;sudo dnf install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These packages are built using the RPM spec file located here: &lt;a href=&#34;https://codeberg.org/dejan/rpm-lazygit&#34;&gt;https://codeberg.org/dejan/rpm-lazygit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to build RPMs for Fedora 41 or older, and other Fedora derivatives using the SRPM (Source RPM) file that you can grab from the latest COPR build.&lt;/p&gt; &#xA;&lt;h3&gt;Solus Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo eopkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian and Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;For &lt;strong&gt;Debian 13 &#34;Trixie&#34;, Sid&lt;/strong&gt;, and later, or &lt;strong&gt;Ubuntu 25.10 &#34;Questing Quokka&#34;&lt;/strong&gt; and later:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For &lt;strong&gt;Debian 12 &#34;Bookworm&#34;, Ubuntu 25.04 &#34;Plucky Puffin&#34;&lt;/strong&gt; and earlier:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;LAZYGIT_VERSION=$(curl -s &#34;https://api.github.com/repos/jesseduffield/lazygit/releases/latest&#34; | \grep -Po &#39;&#34;tag_name&#34;: *&#34;v\K[^&#34;]*&#39;)&#xA;curl -Lo lazygit.tar.gz &#34;https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz&#34;&#xA;tar xf lazygit.tar.gz lazygit&#xA;sudo install lazygit -D -t /usr/local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify the correct installation of lazygit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;lazygit --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Funtoo Linux&lt;/h3&gt; &#xA;&lt;p&gt;Funtoo Linux has an autogenerated lazygit package in &lt;a href=&#34;https://github.com/funtoo/dev-kit/tree/1.4-release/dev-vcs/lazygit&#34;&gt;dev-kit&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo emerge dev-vcs/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gentoo Linux&lt;/h3&gt; &#xA;&lt;p&gt;Lazygit is not (yet) in main Gentoo portage, however an ebuild is available in &lt;a href=&#34;https://github.com/gentoo-mirror/guru/tree/master/dev-vcs/lazygit&#34;&gt;GURU overlay&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can either add the overlay to your system and install lazygit as usual:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo eselect repository enable guru&#xA;sudo emaint sync -r guru&#xA;sudo emerge dev-vcs/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;openSUSE&lt;/h3&gt; &#xA;&lt;p&gt;The lazygit package is currently built in &lt;a href=&#34;https://build.opensuse.org/package/show/devel:languages:go/lazygit&#34;&gt;devel:languages:go/lazygit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install lazygit on openSUSE Tumbleweed run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/devel:languages:go.repo&#xA;sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install lazygit on openSUSE Leap run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;source /etc/os-release&#xA;sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/$VERSION_ID/devel:languages:go.repo&#xA;sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NixOs&lt;/h3&gt; &#xA;&lt;p&gt;On NixOs lazygit is packaged with nix and distributed via nixpkgs. You can try the lazygit without installing it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nix-shell -p lazygit&#xA;# or with flakes enabled&#xA;nix run nixpkgs#lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can add lazygit to you &lt;code&gt;configuration.nix&lt;/code&gt; using the &lt;code&gt;environment.systemPackages&lt;/code&gt; option. More details can be found via NixOs search &lt;a href=&#34;https://search.nixos.org/&#34;&gt;page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Flox&lt;/h3&gt; &#xA;&lt;p&gt;Lazygit can be installed into a Flox environment as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flox install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More details about Flox can be found on &lt;a href=&#34;https://flox.dev/&#34;&gt;their website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Termux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conda&lt;/h3&gt; &#xA;&lt;p&gt;Released versions are available for different platforms, see &lt;a href=&#34;https://anaconda.org/conda-forge/lazygit&#34;&gt;https://anaconda.org/conda-forge/lazygit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda install -c conda-forge lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/jesseduffield/lazygit@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: If you get an error claiming that lazygit cannot be found or is not defined, you may need to add &lt;code&gt;~/go/bin&lt;/code&gt; to your $PATH (MacOS/Linux), or &lt;code&gt;%HOME%\go\bin&lt;/code&gt; (Windows). Not to be mistaken for &lt;code&gt;C:\Go\bin&lt;/code&gt; (which is for Go&#39;s own binaries, not apps like lazygit).&lt;/p&gt; &#xA;&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Winget (Windows 10 1709 or later)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using the &lt;code&gt;winget&lt;/code&gt; command in the Windows Terminal with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;winget install -e --id=JesseDuffield.lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;install Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazygit.git&#xA;cd lazygit&#xA;go install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Call &lt;code&gt;lazygit&lt;/code&gt; in your terminal inside a git repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want, you can also add an alias for this with &lt;code&gt;echo &#34;alias lg=&#39;lazygit&#39;&#34; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt; (or whichever rc file you&#39;re using).&lt;/p&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;You can check out the list of keybindings &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/keybindings&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Changing Directory On Exit&lt;/h3&gt; &#xA;&lt;p&gt;If you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your &lt;code&gt;~/.zshrc&lt;/code&gt; (or other rc file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lg()&#xA;{&#xA;    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir&#xA;&#xA;    lazygit &#34;$@&#34;&#xA;&#xA;    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then&#xA;            cd &#34;$(cat $LAZYGIT_NEW_DIR_FILE)&#34;&#xA;            rm -f $LAZYGIT_NEW_DIR_FILE &amp;gt; /dev/null&#xA;    fi&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;code&gt;source ~/.zshrc&lt;/code&gt; and from now on when you call &lt;code&gt;lg&lt;/code&gt; and exit you&#39;ll switch directories to whatever you were in inside lazygit. To override this behaviour you can exit using &lt;code&gt;shift+Q&lt;/code&gt; rather than just &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Undo/Redo&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Config.md&#34;&gt;configuration docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Pagers&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Pagers.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Commands&lt;/h3&gt; &#xA;&lt;p&gt;If lazygit is missing a feature, there&#39;s a good chance you can implement it yourself with a custom command!&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Git flow support&lt;/h3&gt; &#xA;&lt;p&gt;Lazygit supports &lt;a href=&#34;https://github.com/nvie/gitflow&#34;&gt;Gitflow&lt;/a&gt; if you have it installed. To understand how the Gitflow model works check out Vincent Driessen&#39;s original &lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;post&lt;/a&gt; explaining it. To view Gitflow options from within Lazygit, press &lt;code&gt;i&lt;/code&gt; from within the branches view.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love your input! Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the &lt;a href=&#34;https://discord.gg/ehwFt2t4wt&#34;&gt;discord channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ehwFt2t4wt&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/discord.png&#34; width=&#34;75&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://www.youtube.com/watch?v=kNavnhzZHtk&#34;&gt;video&lt;/a&gt; walking through the creation of a small feature in lazygit if you want an idea of where to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Locally&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;lazygit --debug&lt;/code&gt; in one terminal tab and &lt;code&gt;lazygit --logs&lt;/code&gt; in another to view the program and its log output side by side&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to support the development of lazygit, consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What do the commit colors represent?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Green: the commit is included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Yellow: the commit is not included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Red: the commit has not been pushed to the upstream branch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shameless Plug&lt;/h2&gt; &#xA;&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href=&#34;https://twitter.com/DuffieldJesse&#34;&gt;twitter&lt;/a&gt; or check out my &lt;a href=&#34;https://jesseduffield.com/&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;If you find that lazygit doesn&#39;t quite satisfy your requirements, these may be a better fit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Extrawurst/gitui&#34;&gt;GitUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonas/tig&#34;&gt;tig&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>