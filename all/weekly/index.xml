<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-20T01:40:19Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>strapi/strapi</title>
    <updated>2025-07-20T01:40:19Z</updated>
    <id>tag:github.com,2025-07-20:/strapi/strapi</id>
    <link href="https://github.com/strapi/strapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄ Strapi is the leading open-source headless CMS. It‚Äôs 100% JavaScript/TypeScript, fully customizable, and developer-first.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://strapi.io/#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://strapi.io/assets/strapi-logo-dark.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Strapi logo&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://strapi.io/#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://strapi.io/assets/strapi-logo-light.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Strapi logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Open-source headless CMS, self-hosted or Cloud you‚Äôre in control.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://cloud.strapi.io/signups?source=github1&#34;&gt;Cloud&lt;/a&gt; ¬∑ &lt;a href=&#34;https://strapi.io/demo?utm_campaign=Growth-Experiments&amp;amp;utm_source=strapi%2Fstrapi%20README.md&#34;&gt;Try live demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.org/package/@strapi/strapi&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@strapi/strapi/latest.svg?sanitize=true&#34; alt=&#34;NPM Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/strapi/strapi/actions/workflows/tests.yml&#34;&gt; &lt;img src=&#34;https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main&#34; alt=&#34;Tests&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.strapi.io&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/811989166782021633?label=Discord&#34; alt=&#34;Strapi on Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/strapi/strapi/actions/workflows/nightly.yml&#34;&gt; &lt;img src=&#34;https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Strapi Nightly Release Build Status&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://strapi.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif&#34; alt=&#34;Administration panel&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Strapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-hosted or Cloud&lt;/strong&gt;: You can host and scale Strapi projects the way you want. You can save time by deploying to &lt;a href=&#34;https://cloud.strapi.io/signups?source=github1&#34;&gt;Strapi Cloud&lt;/a&gt; or deploy to the hosting platform you want**: AWS, Azure, Google Cloud, DigitalOcean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Admin Panel&lt;/strong&gt;: Elegant, entirely customizable and a fully extensible admin panel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-database support&lt;/strong&gt;: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blazing Fast and Robust&lt;/strong&gt;: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Front-end Agnostic&lt;/strong&gt;: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure by default&lt;/strong&gt;: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful CLI&lt;/strong&gt;: Scaffold projects and APIs on the fly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html&#34; target=&#34;_blank&#34;&gt;Read the Getting Started tutorial&lt;/a&gt; or follow the steps below:&lt;/p&gt; &#xA;&lt;h3&gt;‚è≥ Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install Strapi with this &lt;strong&gt;Quickstart&lt;/strong&gt; command to create a Strapi project instantly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Use &lt;strong&gt;yarn&lt;/strong&gt; to install the Strapi project (recommended). &lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install/&#34;&gt;Install yarn with these docs&lt;/a&gt;.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn create strapi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Using npx to install the Strapi project.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-strapi@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp;amp; file upload).&lt;/p&gt; &#xA;&lt;p&gt;Enjoy üéâ&lt;/p&gt; &#xA;&lt;h3&gt;üñê Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Complete installation requirements can be found in the documentation under &lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html&#34;&gt;Installation Requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Recommended&lt;/th&gt; &#xA;   &lt;th&gt;Minimum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;24.04&lt;/td&gt; &#xA;   &lt;td&gt;LTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;LTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RHEL&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;LTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows Desktop&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows Server&lt;/td&gt; &#xA;   &lt;td&gt;No Support&lt;/td&gt; &#xA;   &lt;td&gt;No Support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Node:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Strapi only supports maintenance and LTS versions of Node.js. Please refer to the &lt;a href=&#34;https://nodejs.org/en/about/releases/&#34;&gt;Node.js release schedule&lt;/a&gt; for more information. NPM versions installed by default with Node.js are supported. Generally it&#39;s recommended to use yarn over npm where possible.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Strapi Version&lt;/th&gt; &#xA;   &lt;th&gt;Recommended&lt;/th&gt; &#xA;   &lt;th&gt;Minimum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.0.0 and up&lt;/td&gt; &#xA;   &lt;td&gt;20.x&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.14.5 and up&lt;/td&gt; &#xA;   &lt;td&gt;20.x&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.11.0 and up&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;   &lt;td&gt;16.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.3.9 to 4.10.x&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;   &lt;td&gt;14.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.0.x to 4.3.8&lt;/td&gt; &#xA;   &lt;td&gt;16.x&lt;/td&gt; &#xA;   &lt;td&gt;14.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Database:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Database&lt;/th&gt; &#xA;   &lt;th&gt;Recommended&lt;/th&gt; &#xA;   &lt;th&gt;Minimum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;8.0&lt;/td&gt; &#xA;   &lt;td&gt;8.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MariaDB&lt;/td&gt; &#xA;   &lt;td&gt;11.2&lt;/td&gt; &#xA;   &lt;td&gt;10.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;16.0&lt;/td&gt; &#xA;   &lt;td&gt;14.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;We recommend always using the latest version of Strapi stable to start your new projects&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Content Types Builder&lt;/strong&gt;: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with &lt;a href=&#34;https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields&#34;&gt;fields&lt;/a&gt;, components and &lt;a href=&#34;https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones&#34;&gt;Dynamic Zones&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Media Library&lt;/strong&gt;: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Internationalization&lt;/strong&gt;: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called &#34;locales&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role Based Access Control&lt;/strong&gt;: Create an unlimited number of custom roles and permissions for admin and end users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GraphQL or REST&lt;/strong&gt;: Consume the API using REST or GraphQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can unlock additional features such as SSO, Audit Logs, Review Workflows in &lt;a href=&#34;https://cloud.strapi.io/login?source=github1&#34;&gt;Strapi Cloud&lt;/a&gt; or &lt;a href=&#34;https://strapi.io/enterprise?source=github1&#34;&gt;Strapi Enterprise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://strapi.io/overview&#34;&gt;See more on our website&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/strapi/strapi/develop/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; before submitting a Pull Request to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Community support&lt;/h2&gt; &#xA;&lt;p&gt;For general help using Strapi, please refer to &lt;a href=&#34;https://docs.strapi.io&#34;&gt;the official Strapi documentation&lt;/a&gt;. For additional help, you can use one of these channels to ask a question:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.strapi.io&#34;&gt;Discord&lt;/a&gt; (For live discussion with the Community and Strapi team)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/strapi/strapi&#34;&gt;GitHub&lt;/a&gt; (Bug reports, Contributions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.strapi.io&#34;&gt;Community Forum&lt;/a&gt; (Questions and Discussions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://feedback.strapi.io&#34;&gt;Feedback section&lt;/a&gt; (Roadmap, Feature requests)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/strapijs&#34;&gt;Twitter&lt;/a&gt; (Get the news fast)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Strapi-616063331867161&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/strapi&#34;&gt;YouTube Channel&lt;/a&gt; (Learn from Video Tutorials)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;Follow our &lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html&#34;&gt;migration guides&lt;/a&gt; on the documentation to keep your projects up-to-date.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://feedback.strapi.io&#34;&gt;roadmap&lt;/a&gt; to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our dedicated &lt;a href=&#34;https://github.com/strapi/documentation&#34;&gt;repository&lt;/a&gt; for the Strapi documentation, or view our documentation live:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html&#34;&gt;Developer docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.strapi.io/user-docs/latest/getting-started/introduction.html&#34;&gt;User guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.strapi.io/cloud/intro&#34;&gt;Cloud guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Try live demo&lt;/h2&gt; &#xA;&lt;p&gt;See for yourself what&#39;s under the hood by getting access to a &lt;a href=&#34;https://strapi.io/demo&#34;&gt;hosted Strapi project&lt;/a&gt; with sample data.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/strapi/strapi/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for licensing information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gitleaks/gitleaks</title>
    <updated>2025-07-20T01:40:19Z</updated>
    <id>tag:github.com,2025-07-20:/gitleaks/gitleaks</id>
    <link href="https://github.com/gitleaks/gitleaks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Find secrets with Gitleaks üîë&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitleaks&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚îå‚îÄ‚óã‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ ‚îÇ‚ï≤  ‚îÇ&#xA;‚îÇ ‚îÇ ‚óã ‚îÇ&#xA;‚îÇ ‚óã ‚ñë ‚îÇ&#xA;‚îî‚îÄ‚ñë‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gitleaks/gitleaks/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/gitleaks/gitleaks/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/zricethezav/gitleaks&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg?sanitize=true&#34; alt=&#34;Docker Hub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitleaks.io/playground&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/gitleaks%20-playground-blue&#34; alt=&#34;Gitleaks Playground&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/protected%20by-gitleaks-blue&#34; alt=&#34;Gitleaks Action&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/zricethezav/gitleaks/v8&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/gitleaks/gitleaks/v8?status&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gitleaks/gitleaks/v8&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/gitleaks/gitleaks/v8&#34; alt=&#34;GoReportCard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gitleaks/gitleaks/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/gitleaks/gitleaks.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Join our Discord! &lt;a href=&#34;https://discord.gg/8Hzbrnkr7E&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1102689410522284044.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Gitleaks is a tool for &lt;strong&gt;detecting&lt;/strong&gt; secrets like passwords, API keys, and tokens in git repos, files, and whatever else you wanna throw at it via &lt;code&gt;stdin&lt;/code&gt;. If you wanna learn more about how the detection engine works check out this blog: &lt;a href=&#34;https://lookingatcomputer.substack.com/p/regex-is-almost-all-you-need&#34;&gt;Regex is (almost) all you need&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚ûú  ~/code(master) gitleaks git -v&#xA;&#xA;    ‚óã&#xA;    ‚îÇ‚ï≤&#xA;    ‚îÇ ‚óã&#xA;    ‚óã ‚ñë&#xA;    ‚ñë    gitleaks&#xA;&#xA;&#xA;Finding:     &#34;export BUNDLE_ENTERPRISE__CONTRIBSYS__COM=cafebabe:deadbeef&#34;,&#xA;Secret:      cafebabe:deadbeef&#xA;RuleID:      sidekiq-secret&#xA;Entropy:     2.609850&#xA;File:        cmd/generate/config/rules/sidekiq.go&#xA;Line:        23&#xA;Commit:      cd5226711335c68be1e720b318b7bc3135a30eb2&#xA;Author:      John&#xA;Email:       john@users.noreply.github.com&#xA;Date:        2022-08-03T12:31:40Z&#xA;Fingerprint: cd5226711335c68be1e720b318b7bc3135a30eb2:cmd/generate/config/rules/sidekiq.go:sidekiq-secret:23&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the &lt;a href=&#34;https://github.com/gitleaks/gitleaks/releases&#34;&gt;releases page&lt;/a&gt;. In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using &lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;Gitleaks-Action&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# MacOS&#xA;brew install gitleaks&#xA;&#xA;# Docker (DockerHub)&#xA;docker pull zricethezav/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]&#xA;&#xA;# Docker (ghcr.io)&#xA;docker pull ghcr.io/gitleaks/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]&#xA;&#xA;# From Source (make sure `go` is installed)&#xA;git clone https://github.com/gitleaks/gitleaks.git&#xA;cd gitleaks&#xA;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Action&lt;/h3&gt; &#xA;&lt;p&gt;Check out the official &lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;Gitleaks GitHub Action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;name: gitleaks&#xA;on: [pull_request, push, workflow_dispatch]&#xA;jobs:&#xA;  scan:&#xA;    name: gitleaks&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;        with:&#xA;          fetch-depth: 0&#xA;      - uses: gitleaks/gitleaks-action@v2&#xA;        env:&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-Commit&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install pre-commit from &lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;https://pre-commit.com/#install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; file at the root of your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;repos:&#xA;  - repo: https://github.com/gitleaks/gitleaks&#xA;    rev: v8.24.2&#xA;    hooks:&#xA;      - id: gitleaks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for a &lt;a href=&#34;https://github.com/gitleaks/gitleaks/releases&#34;&gt;native execution of gitleaks&lt;/a&gt; or use the &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/.pre-commit-hooks.yaml&#34;&gt;&lt;code&gt;gitleaks-docker&lt;/code&gt; pre-commit ID&lt;/a&gt; for executing gitleaks using the &lt;a href=&#34;https://raw.githubusercontent.com/gitleaks/gitleaks/master/#docker&#34;&gt;official Docker images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Auto-update the config to the latest repos&#39; versions by executing &lt;code&gt;pre-commit autoupdate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you&#39;re all set!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚ûú git commit -m &#34;this commit contains a secret&#34;&#xA;Detect hardcoded secrets.................................................Failed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: to disable the gitleaks pre-commit hook you can prepend &lt;code&gt;SKIP=gitleaks&lt;/code&gt; to the commit command and it will skip running gitleaks&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚ûú SKIP=gitleaks git commit -m &#34;skip gitleaks check&#34;&#xA;Detect hardcoded secrets................................................Skipped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  gitleaks [command]&#xA;&#xA;Available Commands:&#xA;  dir         scan directories or files for secrets&#xA;  git         scan git repositories for secrets&#xA;  help        Help about any command&#xA;  stdin       detect secrets from stdin&#xA;  version     display gitleaks version&#xA;&#xA;Flags:&#xA;  -b, --baseline-path string          path to baseline with issues that can be ignored&#xA;  -c, --config string                 config file path&#xA;                                      order of precedence:&#xA;                                      1. --config/-c&#xA;                                      2. env var GITLEAKS_CONFIG&#xA;                                      3. env var GITLEAKS_CONFIG_TOML with the file content&#xA;                                      4. (target path)/.gitleaks.toml&#xA;                                      If none of the four options are used, then gitleaks will use the default config&#xA;      --diagnostics string            enable diagnostics (comma-separated list: cpu,mem,trace). cpu=CPU profiling, mem=memory profiling, trace=execution tracing&#xA;      --diagnostics-dir string        directory to store diagnostics output files (defaults to current directory)&#xA;      --enable-rule strings           only enable specific rules by id&#xA;      --exit-code int                 exit code when leaks have been encountered (default 1)&#xA;  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default &#34;.&#34;)&#xA;  -h, --help                          help for gitleaks&#xA;      --ignore-gitleaks-allow         ignore gitleaks:allow comments&#xA;  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default &#34;info&#34;)&#xA;      --max-decode-depth int          allow recursive decoding up to this depth (default &#34;0&#34;, no decoding is done)&#xA;      --max-archive-depth int         allow scanning into nested archives up to this depth (default &#34;0&#34;, no archive traversal is done)&#xA;      --max-target-megabytes int      files larger than this will be skipped&#xA;      --no-banner                     suppress banner&#xA;      --no-color                      turn off color for verbose output&#xA;      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)&#xA;  -f, --report-format string          output format (json, csv, junit, sarif, template)&#xA;  -r, --report-path string            report file&#xA;      --report-template string        template file used to generate the report (implies --report-format=template)&#xA;  -v, --verbose                       show verbose output from scan&#xA;      --version                       version for gitleaks&#xA;&#xA;Use &#34;gitleaks [command] --help&#34; for more information about a command.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;‚ö†Ô∏è v8.19.0 introduced a change that deprecated &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;protect&lt;/code&gt;. Those commands are still available but are hidden in the &lt;code&gt;--help&lt;/code&gt; menu. Take a look at this &lt;a href=&#34;https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2&#34;&gt;gist&lt;/a&gt; for easy command translations. If you find v8.19.0 broke an existing command (&lt;code&gt;detect&lt;/code&gt;/&lt;code&gt;protect&lt;/code&gt;), please open an issue.&lt;/p&gt; &#xA;&lt;p&gt;There are three scanning modes: &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;dir&lt;/code&gt;, and &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Git&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;git&lt;/code&gt; command lets you scan local git repos. Under the hood, gitleaks uses the &lt;code&gt;git log -p&lt;/code&gt; command to scan patches. You can configure the behavior of &lt;code&gt;git log -p&lt;/code&gt; with the &lt;code&gt;log-opts&lt;/code&gt; option. For example, if you wanted to run gitleaks on a range of commits you could use the following command: &lt;code&gt;gitleaks git -v --log-opts=&#34;--all commitA..commitB&#34; path_to_repo&lt;/code&gt;. See the &lt;a href=&#34;https://git-scm.com/docs/git-log&#34;&gt;git log&lt;/a&gt; documentation for more information. If there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.&lt;/p&gt; &#xA;&lt;h4&gt;Dir&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;dir&lt;/code&gt; (aliases include &lt;code&gt;files&lt;/code&gt;, &lt;code&gt;directory&lt;/code&gt;) command lets you scan directories and files. Example: &lt;code&gt;gitleaks dir -v path_to_directory_or_file&lt;/code&gt;. If there is no target specified as a positional argument, then gitleaks will scan the current working directory.&lt;/p&gt; &#xA;&lt;h4&gt;Stdin&lt;/h4&gt; &#xA;&lt;p&gt;You can also stream data to gitleaks with the &lt;code&gt;stdin&lt;/code&gt; command. Example: &lt;code&gt;cat some_file | gitleaks -v stdin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Creating a baseline&lt;/h3&gt; &#xA;&lt;p&gt;When scanning large repositories or repositories with a long history, it can be convenient to use a baseline. When using a baseline, gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the &lt;code&gt;--report-path&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once as baseline is created it can be applied when running the detect command again:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gitleaks git --baseline-path gitleaks-report.json --report-path findings.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-Commit hook&lt;/h2&gt; &#xA;&lt;p&gt;You can run Gitleaks as a pre-commit hook by copying the example &lt;code&gt;pre-commit.py&lt;/code&gt; script into your &lt;code&gt;.git/hooks/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Load Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The order of precedence is:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--config/-c&lt;/code&gt; option: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gitleaks git --config /home/dev/customgitleaks.toml .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Environment variable &lt;code&gt;GITLEAKS_CONFIG&lt;/code&gt; with the file path: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GITLEAKS_CONFIG=&#34;/home/dev/customgitleaks.toml&#34;&#xA;gitleaks git .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Environment variable &lt;code&gt;GITLEAKS_CONFIG_TOML&lt;/code&gt; with the file content: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GITLEAKS_CONFIG_TOML=`cat customgitleaks.toml`&#xA;gitleaks git .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;.gitleaks.toml&lt;/code&gt; file within the target path: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gitleaks git .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If none of the four options are used, then gitleaks will use the default config.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks offers a configuration format you can follow to write your own secret detection rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# Title for the gitleaks configuration file.&#xA;title = &#34;Custom Gitleaks configuration&#34;&#xA;&#xA;# You have basically two options for your custom configuration:&#xA;#&#xA;# 1. define your own configuration, default rules do not apply&#xA;#&#xA;#    use e.g., the default configuration as starting point:&#xA;#    https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml&#xA;#&#xA;# 2. extend a configuration, the rules are overwritten or extended&#xA;#&#xA;#    When you extend a configuration the extended rules take precedence over the&#xA;#    default rules. I.e., if there are duplicate rules in both the extended&#xA;#    configuration and the default configuration the extended rules or&#xA;#    attributes of them will override the default rules.&#xA;#    Another thing to know with extending configurations is you can chain&#xA;#    together multiple configuration files to a depth of 2. Allowlist arrays are&#xA;#    appended and can contain duplicates.&#xA;&#xA;# useDefault and path can NOT be used at the same time. Choose one.&#xA;[extend]&#xA;# useDefault will extend the default gitleaks config built in to the binary&#xA;# the latest version is located at:&#xA;# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml&#xA;useDefault = true&#xA;# or you can provide a path to a configuration to extend from.&#xA;# The path is relative to where gitleaks was invoked,&#xA;# not the location of the base config.&#xA;# path = &#34;common_config.toml&#34;&#xA;# If there are any rules you don&#39;t want to inherit, they can be specified here.&#xA;disabledRules = [ &#34;generic-api-key&#34;]&#xA;&#xA;# An array of tables that contain information that define instructions&#xA;# on how to detect secrets&#xA;[[rules]]&#xA;# Unique identifier for this rule&#xA;id = &#34;awesome-rule-1&#34;&#xA;&#xA;# Short human-readable description of the rule.&#xA;description = &#34;awesome rule 1&#34;&#xA;&#xA;# Golang regular expression used to detect secrets. Note Golang&#39;s regex engine&#xA;# does not support lookaheads.&#xA;regex = &#39;&#39;&#39;one-go-style-regex-for-this-rule&#39;&#39;&#39;&#xA;&#xA;# Int used to extract secret from regex match and used as the group that will have&#xA;# its entropy checked if `entropy` is set.&#xA;secretGroup = 3&#xA;&#xA;# Float representing the minimum shannon entropy a regex group must have to be considered a secret.&#xA;entropy = 3.5&#xA;&#xA;# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used&#xA;# in conjunction with a valid `regex` entry.&#xA;path = &#39;&#39;&#39;a-file-path-regex&#39;&#39;&#39;&#xA;&#xA;# Keywords are used for pre-regex check filtering. Rules that contain&#xA;# keywords will perform a quick string compare check to make sure the&#xA;# keyword(s) are in the content being scanned. Ideally these values should&#xA;# either be part of the identiifer or unique strings specific to the rule&#39;s regex&#xA;# (introduced in v8.6.0)&#xA;keywords = [&#xA;  &#34;auth&#34;,&#xA;  &#34;password&#34;,&#xA;  &#34;token&#34;,&#xA;]&#xA;&#xA;# Array of strings used for metadata and reporting purposes.&#xA;tags = [&#34;tag&#34;,&#34;another tag&#34;]&#xA;&#xA;    # ‚ö†Ô∏è In v8.21.0 `[rules.allowlist]` was replaced with `[[rules.allowlists]]`.&#xA;    # This change was backwards-compatible: instances of `[rules.allowlist]` still  work.&#xA;    #&#xA;    # You can define multiple allowlists for a rule to reduce false positives.&#xA;    # A finding will be ignored if _ANY_ `[[rules.allowlists]]` matches.&#xA;    [[rules.allowlists]]&#xA;    description = &#34;ignore commit A&#34;&#xA;    # When multiple criteria are defined the default condition is &#34;OR&#34;.&#xA;    # e.g., this can match on |commits| OR |paths| OR |stopwords|.&#xA;    condition = &#34;OR&#34;&#xA;    commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;]&#xA;    paths = [&#xA;      &#39;&#39;&#39;go\.mod&#39;&#39;&#39;,&#xA;      &#39;&#39;&#39;go\.sum&#39;&#39;&#39;&#xA;    ]&#xA;    # note: stopwords targets the extracted secret, not the entire regex match&#xA;    # like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;    stopwords = [&#xA;      &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;      &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;    ]&#xA;&#xA;    [[rules.allowlists]]&#xA;    # The &#34;AND&#34; condition can be used to make sure all criteria match.&#xA;    # e.g., this matches if |regexes| AND |paths| are satisfied.&#xA;    condition = &#34;AND&#34;&#xA;    # note: |regexes| defaults to check the _Secret_ in the finding.&#xA;    # Acceptable values for |regexTarget| are &#34;secret&#34; (default), &#34;match&#34;, and &#34;line&#34;.&#xA;    regexTarget = &#34;match&#34;&#xA;    regexes = [ &#39;&#39;&#39;(?i)parseur[il]&#39;&#39;&#39; ]&#xA;    paths = [ &#39;&#39;&#39;package-lock\.json&#39;&#39;&#39; ]&#xA;&#xA;# You can extend a particular rule from the default config. e.g., gitlab-pat&#xA;# if you have defined a custom token prefix on your GitLab instance&#xA;[[rules]]&#xA;id = &#34;gitlab-pat&#34;&#xA;# all the other attributes from the default rule are inherited&#xA;&#xA;    [[rules.allowlists]]&#xA;    regexTarget = &#34;line&#34;&#xA;    regexes = [ &#39;&#39;&#39;MY-glpat-&#39;&#39;&#39; ]&#xA;&#xA;&#xA;# ‚ö†Ô∏è In v8.25.0 `[allowlist]` was replaced with `[[allowlists]]`.&#xA;#&#xA;# Global allowlists have a higher order of precedence than rule-specific allowlists.&#xA;# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no&#xA;# secrets will be detected for said commit. The same logic applies for regexes and paths.&#xA;[[allowlists]]&#xA;description = &#34;global allow list&#34;&#xA;commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;, &#34;commit-C&#34;]&#xA;paths = [&#xA;  &#39;&#39;&#39;gitleaks\.toml&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(.*?)(jpg|gif|doc)&#39;&#39;&#39;&#xA;]&#xA;# note: (global) regexTarget defaults to check the _Secret_ in the finding.&#xA;# Acceptable values for regexTarget are &#34;match&#34; and &#34;line&#34;&#xA;regexTarget = &#34;match&#34;&#xA;regexes = [&#xA;  &#39;&#39;&#39;219-09-9999&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;078-05-1120&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(9[0-9]{2}|666)-\d{2}-\d{4}&#39;&#39;&#39;,&#xA;]&#xA;# note: stopwords targets the extracted secret, not the entire regex match&#xA;# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;stopwords = [&#xA;  &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;]&#xA;&#xA;# ‚ö†Ô∏è In v8.25.0, `[[allowlists]]` have a new field called |targetRules|.&#xA;#&#xA;# Common allowlists can be defined once and assigned to multiple rules using |targetRules|.&#xA;# This will only run on the specified rules, not globally.&#xA;[[allowlists]]&#xA;targetRules = [&#34;awesome-rule-1&#34;, &#34;awesome-rule-2&#34;]&#xA;description = &#34;Our test assets trigger false-positives in a couple rules.&#34;&#xA;paths = [&#39;&#39;&#39;tests/expected/._\.json$&#39;&#39;&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the default &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/config/gitleaks.toml&#34;&gt;gitleaks config&lt;/a&gt; for examples or follow the &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; if you would like to contribute to the default configuration. Additionally, you can check out &lt;a href=&#34;https://blog.gitleaks.io/stop-leaking-secrets-configuration-2-3-aeed293b1fbf&#34;&gt;this gitleaks blog post&lt;/a&gt; which covers advanced configuration setups.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;gitleaks:allow&lt;/h4&gt; &#xA;&lt;p&gt;If you are knowingly committing a test secret that gitleaks will catch you can add a &lt;code&gt;gitleaks:allow&lt;/code&gt; comment to that line which will instruct gitleaks to ignore that secret. Ex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class CustomClass:&#xA;    discord_client_secret = &#39;8dyfuiRyq=vVc3RRr_edRk-fK__JItpZ&#39;  #gitleaks:allow&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.gitleaksignore&lt;/h4&gt; &#xA;&lt;p&gt;You can ignore specific findings by creating a &lt;code&gt;.gitleaksignore&lt;/code&gt; file at the root of your repo. In release v8.10.0 Gitleaks added a &lt;code&gt;Fingerprint&lt;/code&gt; value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the &lt;code&gt;.gitleaksignore&lt;/code&gt; file to ignore that specific secret. See Gitleaks&#39; &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/.gitleaksignore&#34;&gt;.gitleaksignore&lt;/a&gt; for an example. Note: this feature is experimental and is subject to change in the future.&lt;/p&gt; &#xA;&lt;h4&gt;Decoding&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes secrets are encoded in a way that can make them difficult to find with just regex. Now you can tell gitleaks to automatically find and decode encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; enables this feature (the default value &#34;0&#34; means the feature is disabled by default).&lt;/p&gt; &#xA;&lt;p&gt;Recursive decoding is supported since decoded text can also contain encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; sets the recursion limit. Recursion stops when there are no new segments of encoded text to decode, so setting a really high max depth doesn&#39;t mean it will make that many passes. It will only make as many as it needs to decode the text. Overall, decoding only minimally increases scan times.&lt;/p&gt; &#xA;&lt;p&gt;The findings for encoded text differ from normal findings in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The location points the bounds of the encoded text &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If the rule matches outside the encoded text, the bounds are adjusted to include that as well&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The match and secret contain the decoded value&lt;/li&gt; &#xA; &lt;li&gt;Two tags are added &lt;code&gt;decoded:&amp;lt;encoding&amp;gt;&lt;/code&gt; and &lt;code&gt;decode-depth:&amp;lt;depth&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently supported encodings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;percent&lt;/strong&gt; - Any printable ASCII percent encoded values&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hex&lt;/strong&gt; - Any printable ASCII hex encoded values &amp;gt;= 32 characters&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;base64&lt;/strong&gt; - Any printable ASCII base64 encoded values &amp;gt;= 16 characters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Archive Scanning&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes secrets are packaged within archive files like zip files or tarballs, making them difficult to discover. Now you can tell gitleaks to automatically extract and scan the contents of archives. The flag &lt;code&gt;--max-archive-depth&lt;/code&gt; enables this feature for both &lt;code&gt;dir&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; scan types. The default value of &#34;0&#34; means this feature is disabled by default.&lt;/p&gt; &#xA;&lt;p&gt;Recursive scanning is supported since archives can also contain other archives. The &lt;code&gt;--max-archive-depth&lt;/code&gt; flag sets the recursion limit. Recursion stops when there are no new archives to extract, so setting a very high max depth just sets the potential to go that deep. It will only go as deep as it needs to.&lt;/p&gt; &#xA;&lt;p&gt;The findings for secrets located within an archive will include the path to the file inside the archive. Inner paths are separated with &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example finding (shortened for brevity):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Finding:     DB_PASSWORD=8ae31cacf141669ddfb5da&#xA;...&#xA;File:        testdata/archives/nested.tar.gz!archives/files.tar!files/.env.prod&#xA;Line:        4&#xA;Commit:      6e6ee6596d337bb656496425fb98644eb62b4a82&#xA;...&#xA;Fingerprint: 6e6ee6596d337bb656496425fb98644eb62b4a82:testdata/archives/nested.tar.gz!archives/files.tar!files/.env.prod:generic-api-key:4&#xA;Link:        https://github.com/leaktk/gitleaks/blob/6e6ee6596d337bb656496425fb98644eb62b4a82/testdata/archives/nested.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This means a secret was detected on line 4 of &lt;code&gt;files/.env.prod.&lt;/code&gt; which is in &lt;code&gt;archives/files.tar&lt;/code&gt; which is in &lt;code&gt;testdata/archives/nested.tar.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently supported formats:&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/mholt/archives?tab=readme-ov-file#supported-compression-formats&#34;&gt;compression&lt;/a&gt; and &lt;a href=&#34;https://github.com/mholt/archives?tab=readme-ov-file#supported-archive-formats&#34;&gt;archive&lt;/a&gt; formats supported by mholt&#39;s &lt;a href=&#34;https://github.com/mholt/archives&#34;&gt;archives package&lt;/a&gt; are supported.&lt;/p&gt; &#xA;&lt;h4&gt;Reporting&lt;/h4&gt; &#xA;&lt;p&gt;Gitleaks has built-in support for several report formats: &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/json_simple.json&#34;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/csv_simple.csv?plain=1&#34;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/junit_simple.xml&#34;&gt;&lt;code&gt;junit&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/sarif_simple.sarif&#34;&gt;&lt;code&gt;sarif&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If none of these formats fit your need, you can create your own report format with a &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-templates-in-go#step-4-writing-a-template&#34;&gt;Go &lt;code&gt;text/template&lt;/code&gt; .tmpl file&lt;/a&gt; and the &lt;code&gt;--report-template&lt;/code&gt; flag. The template can use &lt;a href=&#34;https://masterminds.github.io/sprig/&#34;&gt;extended functionality from the &lt;code&gt;Masterminds/sprig&lt;/code&gt; template library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following template provides a custom JSON output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gotemplate&#34;&gt;# jsonextra.tmpl&#xA;[{{ $lastFinding := (sub (len . ) 1) }}&#xA;{{- range $i, $finding := . }}{{with $finding}}&#xA;    {&#xA;        &#34;Description&#34;: {{ quote .Description }},&#xA;        &#34;StartLine&#34;: {{ .StartLine }},&#xA;        &#34;EndLine&#34;: {{ .EndLine }},&#xA;        &#34;StartColumn&#34;: {{ .StartColumn }},&#xA;        &#34;EndColumn&#34;: {{ .EndColumn }},&#xA;        &#34;Line&#34;: {{ quote .Line }},&#xA;        &#34;Match&#34;: {{ quote .Match }},&#xA;        &#34;Secret&#34;: {{ quote .Secret }},&#xA;        &#34;File&#34;: &#34;{{ .File }}&#34;,&#xA;        &#34;SymlinkFile&#34;: {{ quote .SymlinkFile }},&#xA;        &#34;Commit&#34;: {{ quote .Commit }},&#xA;        &#34;Entropy&#34;: {{ .Entropy }},&#xA;        &#34;Author&#34;: {{ quote .Author }},&#xA;        &#34;Email&#34;: {{ quote .Email }},&#xA;        &#34;Date&#34;: {{ quote .Date }},&#xA;        &#34;Message&#34;: {{ quote .Message }},&#xA;        &#34;Tags&#34;: [{{ $lastTag := (sub (len .Tags ) 1) }}{{ range $j, $tag := .Tags }}{{ quote . }}{{ if ne $j $lastTag }},{{ end }}{{ end }}],&#xA;        &#34;RuleID&#34;: {{ quote .RuleID }},&#xA;        &#34;Fingerprint&#34;: {{ quote .Fingerprint }}&#xA;    }{{ if ne $i $lastFinding }},{{ end }}&#xA;{{- end}}{{ end }}&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gitleaks dir ~/leaky-repo/ --report-path &#34;report.json&#34; --report-format template --report-template testdata/report/jsonextra.tmpl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsorships&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;/p&gt;&#xA;&lt;h3&gt;&lt;a href=&#34;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&#34;&gt;coderabbit.ai&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;a href=&#34;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&#34;&gt; &lt;img alt=&#34;CodeRabbit.ai Sponsorship&#34; src=&#34;https://github.com/gitleaks/gitleaks/assets/15034943/76c30a85-887b-47ca-9956-17a8e55c6c41&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Exit Codes&lt;/h2&gt; &#xA;&lt;p&gt;You can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 - no leaks present&#xA;1 - leaks or error encountered&#xA;126 - unknown flag&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>gorhill/uBlock</title>
    <updated>2025-07-20T01:40:19Z</updated>
    <id>tag:github.com,2025-07-20:/gorhill/uBlock</id>
    <link href="https://github.com/gorhill/uBlock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits&#34; alt=&#34;Badge Commits&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/uBlockOrigin/uBlock-issues/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues&#34; alt=&#34;Badge Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/ublock&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg?sanitize=true&#34; alt=&#34;Badge Localization&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;Badge License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@gorhill/ubo-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@gorhill/ubo-core&#34; alt=&#34;Badge NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://addons.mozilla.org/addon/ublock-origin/&#34;&gt;&lt;img src=&#34;https://img.shields.io/amo/rating/ublock-origin?label=Firefox&#34; alt=&#34;Badge Mozilla&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&#34;&gt;&lt;img src=&#34;https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome&#34; alt=&#34;Badge Chrome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?label=Edge&amp;amp;color=brightgreen&amp;amp;query=%24.averageRating&amp;amp;suffix=%2F%35&amp;amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak&#34; alt=&#34;Badge Edge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;sub&gt; &lt;img src=&#34;https://github.com/gorhill/uBlock/raw/master/src/img/ublock.svg?sanitize=true&#34; height=&#34;38&#34; width=&#34;38&#34;&gt; &lt;/sub&gt; uBlock Origin (uBO) &lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Browser&lt;/th&gt; &#xA;   &lt;th&gt;Install from ...&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f&#34; alt=&#34;Get uBlock Origin for Firefox&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://addons.mozilla.org/addon/ublock-origin/&#34;&gt;Firefox Add-ons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox&#34;&gt;uBO works best on Firefox&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe&#34; alt=&#34;Get uBlock Origin for Microsoft Edge&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&#34;&gt;Edge Add-ons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6&#34; alt=&#34;Get uBlock Origin for Opera&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://addons.opera.com/extensions/details/ublock/&#34;&gt;Opera Add-ons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7&#34; alt=&#34;Get uBlock Origin for Chromium&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&#34;&gt;Chrome Web Store&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome&#39;s-%22This-extension-may-soon-no-longer-be-supported%22&#34;&gt;About Google Chrome&#39;s &#34;This extension may soon no longer be supported&#34;&lt;/a&gt;&lt;br&gt;End of support on Chrome 139&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff&#34; alt=&#34;Get uBlock Origin for Thunderbird&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://addons.thunderbird.net/en-Us/thunderbird/addon/ublock-origin/&#34;&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/uBlockOrigin/uBlock-issues/issues/2928&#34;&gt;No longer updated and stuck at 1.49.2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;uBlock Origin (uBO) is a CPU and memory-efficient &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Blocking-mode&#34;&gt;wide-spectrum content blocker&lt;/a&gt; for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using &lt;a href=&#34;https://easylist.to/#easylist&#34;&gt;EasyList&lt;/a&gt;, &lt;a href=&#34;https://easylist.to/#easyprivacy&#34;&gt;EasyPrivacy&lt;/a&gt;, &lt;a href=&#34;https://pgl.yoyo.org/adservers/&#34;&gt;Peter Lowe&#39;s Blocklist&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist&#34;&gt;Online Malicious URL Blocklist&lt;/a&gt;, and uBO &lt;a href=&#34;https://github.com/uBlockOrigin/uAssets/tree/master/filters&#34;&gt;filter lists&lt;/a&gt;. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax&#34;&gt;extends&lt;/a&gt; the syntax to work with custom rules and filters.&lt;/p&gt; &#xA;&lt;p&gt;You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.&lt;/p&gt; &#xA;&lt;p&gt;It is important to note that using a blocker is &lt;strong&gt;NOT&lt;/strong&gt; &lt;a href=&#34;https://x.com/LeaVerou/status/518154828166725632&#34;&gt;theft&lt;/a&gt;. Do not fall for this creepy idea. The &lt;em&gt;ultimate&lt;/em&gt; logical consequence of &lt;code&gt;blocking = theft&lt;/code&gt; is the criminalization of the inalienable right to privacy.&lt;/p&gt; &#xA;&lt;p&gt;Ads, &#34;unintrusive&#34; or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. &lt;strong&gt;uBO&#39;s primary goal is to help users neutralize these privacy-invading methods&lt;/strong&gt; in a way that welcomes those users who do not wish to use more technical means.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#firefox&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#thunderbird&#34;&gt;Thunderbird&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#chromium&#34;&gt;Chromium&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#all-programs&#34;&gt;All Programs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#enterprise-deployment&#34;&gt;Enterprise Deployment&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#release-history&#34;&gt;Release History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#translations&#34;&gt;Translations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Basic Mode&lt;/th&gt; &#xA;   &lt;th&gt;Advanced Mode&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&#34;&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&#34;&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki&#34;&gt;Wiki&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;p&gt;For support, questions, or help, visit &lt;a href=&#34;https://www.reddit.com/r/uBlockOrigin/&#34;&gt;/r/uBlockOrigin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Permissions&#34;&gt;Required Permissions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firefox&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/addon/ublock-origin/&#34;&gt;Firefox Add-ons&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/raw/master/dist/README.md#for-beta-version&#34;&gt;Development Builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;uBO &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox&#34;&gt;works best&lt;/a&gt; on Firefox and is available for desktop and Android versions.&lt;/p&gt; &#xA;&lt;h4&gt;Thunderbird&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://addons.thunderbird.net/thunderbird/addon/ublock-origin/&#34;&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In Thunderbird, uBlock Origin does not affect emails, just feeds.&lt;/p&gt; &#xA;&lt;h4&gt;Chromium&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&#34;&gt;Chrome Web Store&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&#34;&gt;Microsoft Edge Add-ons&lt;/a&gt; (Published by &lt;a href=&#34;https://github.com/nicole-ashley&#34;&gt;Nicole Rolls&lt;/a&gt; until version 1.62. Ownership transfer at version 1.64.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://addons.opera.com/extensions/details/ublock/&#34;&gt;Opera Add-ons&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii&#34;&gt;Development Builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;uBO should be compatible with any Chromium-based browser.&lt;/p&gt; &#xA;&lt;h4&gt;All Programs&lt;/h4&gt; &#xA;&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; use uBO with any other content blocker. uBO &lt;a href=&#34;https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance&#34;&gt;performs&lt;/a&gt; as well as or better than most popular blockers. Other blockers can prevent uBO&#39;s privacy or anti-blocker-defusing features from working correctly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/tree/master/dist#install&#34;&gt;Manual Installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Enterprise Deployment&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin&#34;&gt;Deploying uBO&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/releases&#34;&gt;Releases Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Help translate uBO via &lt;a href=&#34;https://crowdin.com/project/ublock&#34;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/MANIFESTO.md&#34;&gt;Manifesto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt&#34;&gt;GPLv3 License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Free. Open-source. For users by users. No donations sought.&lt;/p&gt; &#xA;&lt;p&gt;If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.&lt;/p&gt; &#xA;&lt;!----&gt; &#xA;&lt;!--[ Internal ]--------------------------------&gt; &#xA;&lt;!--[ Badges ]---------------------------------&gt;</summary>
  </entry>
</feed>