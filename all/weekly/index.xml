<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-02T01:42:35Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>clash-verge-rev/clash-verge-rev</title>
    <updated>2025-03-02T01:42:35Z</updated>
    <id>tag:github.com,2025-03-02:/clash-verge-rev/clash-verge-rev</id>
    <link href="https://github.com/clash-verge-rev/clash-verge-rev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/src-tauri/icons/icon.png&#34; alt=&#34;Clash&#34; width=&#34;128&#34;&gt; &lt;br&gt; Continuation of &lt;a href=&#34;https://github.com/zzzgydi/clash-verge&#34;&gt;Clash Verge&lt;/a&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; A Clash Meta GUI based on &lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;Tauri&lt;/a&gt;. &lt;/h3&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dark&lt;/th&gt; &#xA;   &lt;th&gt;Light&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_dark.png&#34; alt=&#34;预览&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_light.png&#34; alt=&#34;预览&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;请到发布页面下载对应的安装包：&lt;a href=&#34;https://github.com/clash-verge-rev/clash-verge-rev/releases&#34;&gt;Release page&lt;/a&gt;&lt;br&gt; Go to the &lt;a href=&#34;https://github.com/clash-verge-rev/clash-verge-rev/releases&#34;&gt;release page&lt;/a&gt; to download the corresponding installation package&lt;br&gt; Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).&lt;/p&gt; &#xA;&lt;h3&gt;安装说明和常见问题，请到&lt;a href=&#34;https://clash-verge-rev.github.io/&#34;&gt;文档页&lt;/a&gt;查看：&lt;a href=&#34;https://clash-verge-rev.github.io/&#34;&gt;Doc&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;TG 频道: &lt;a href=&#34;https://t.me/clash_verge_re&#34;&gt;@clash_verge_rev&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Promotion&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verge.dginv.click/#/register?code=oaxsAGo6&#34;&gt;狗狗加速 —— 技术流机场 Doggygo VPN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。&lt;/li&gt; &#xA; &lt;li&gt;使用 Clash Verge 专属邀请链接注册送 3 天，每天 1G 流量免费试用：&lt;a href=&#34;https://verge.dginv.click/#/register?code=oaxsAGo6&#34;&gt;点此注册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clash Verge 专属 8 折优惠码: verge20 (仅有 500 份)&lt;/li&gt; &#xA; &lt;li&gt;优惠套餐每月仅需 15.8 元，160G 流量，年付 8 折&lt;/li&gt; &#xA; &lt;li&gt;海外团队，无跑路风险，高达 50% 返佣&lt;/li&gt; &#xA; &lt;li&gt;集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开&lt;/li&gt; &#xA; &lt;li&gt;全球首家 Hysteria 协议机场，现已上线更快的 &lt;code&gt;Hysteria2&lt;/code&gt; 协议(Clash Verge 客户端最佳搭配)&lt;/li&gt; &#xA; &lt;li&gt;解锁流媒体及 ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;官网：&lt;a href=&#34;https://verge.dginv.click/#/register?code=oaxsAGo6&#34;&gt;https://狗狗加速.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基于性能强劲的 Rust 和 Tauri 2 框架&lt;/li&gt; &#xA; &lt;li&gt;内置&lt;a href=&#34;https://github.com/MetaCubeX/mihomo&#34;&gt;Clash.Meta(mihomo)&lt;/a&gt;内核，并支持切换 &lt;code&gt;Alpha&lt;/code&gt; 版本内核。&lt;/li&gt; &#xA; &lt;li&gt;简洁美观的用户界面，支持自定义主题颜色、代理组/托盘图标以及 &lt;code&gt;CSS Injection&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;配置文件管理和增强（Merge 和 Script），配置文件语法提示。&lt;/li&gt; &#xA; &lt;li&gt;系统代理和守卫、&lt;code&gt;TUN(虚拟网卡)&lt;/code&gt; 模式。&lt;/li&gt; &#xA; &lt;li&gt;可视化节点和规则编辑&lt;/li&gt; &#xA; &lt;li&gt;WebDav 配置备份和同步&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://clash-verge-rev.github.io/faq/windows.html&#34;&gt;Doc FAQ Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Donation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/clash-verge-rev&#34;&gt;捐助Clash Verge Rev的开发&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;To run the development server, execute the following commands after all prerequisites for &lt;strong&gt;Tauri&lt;/strong&gt; are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm i&#xA;pnpm run check&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Issue and PR welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;Clash Verge rev was based on or inspired by these projects and so on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zzzgydi/clash-verge&#34;&gt;zzzgydi/clash-verge&lt;/a&gt;: A Clash GUI based on tauri. Supports Windows, macOS and Linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;tauri-apps/tauri&lt;/a&gt;: Build smaller, faster, and more secure desktop applications with a web frontend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;Dreamacro/clash&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MetaCubeX/mihomo&#34;&gt;MetaCubeX/mihomo&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fndroid/clash_for_windows_pkg&#34;&gt;Fndroid/clash_for_windows_pkg&lt;/a&gt;: A Windows/macOS GUI based on Clash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite&#34;&gt;vitejs/vite&lt;/a&gt;: Next generation frontend tooling. It&#39;s fast!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL-3.0 License. See &lt;a href=&#34;https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/LICENSE&#34;&gt;License here&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>78/xiaozhi-esp32</title>
    <updated>2025-03-02T01:42:35Z</updated>
    <id>tag:github.com,2025-03-02:/78/xiaozhi-esp32</id>
    <link href="https://github.com/78/xiaozhi-esp32" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build your own AI friend&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;小智 AI 聊天机器人 （XiaoZhi AI Chatbot）&lt;/h1&gt; &#xA;&lt;p&gt;（中文 | &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/README_en.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/README_ja.md&#34;&gt;日本語&lt;/a&gt;）&lt;/p&gt; &#xA;&lt;p&gt;这是虾哥的第一个硬件作品。&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV11msTenEH3/&#34;&gt;ESP32+SenseVoice+Qwen72B打造你的AI聊天伴侣！【bilibili】&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1GQP6eNEFG/&#34;&gt;给小智装上 DeepSeek 的聪明大脑【bilibili】&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1XnmFYLEJN/&#34;&gt;手工打造你的 AI 女友，新手入门教程【bilibili】&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目目的&lt;/h2&gt; &#xA;&lt;p&gt;本项目是一个开源项目，以 MIT 许可证发布，允许任何人免费使用，并可以用于商业用途。&lt;/p&gt; &#xA;&lt;p&gt;我们希望通过这个项目，能够帮助更多人入门 AI 硬件开发，了解如何将当下飞速发展的大语言模型应用到实际的硬件设备中。无论你是对 AI 感兴趣的学生，还是想要探索新技术的开发者，都可以通过这个项目获得宝贵的学习经验。&lt;/p&gt; &#xA;&lt;p&gt;欢迎所有人参与到项目的开发和改进中来。如果你有任何想法或建议，请随时提出 Issue 或加入群聊。&lt;/p&gt; &#xA;&lt;p&gt;学习交流 QQ 群：376893254&lt;/p&gt; &#xA;&lt;h2&gt;已实现功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wi-Fi / ML307 Cat.1 4G&lt;/li&gt; &#xA; &lt;li&gt;BOOT 键唤醒和打断，支持点击和长按两种触发方式&lt;/li&gt; &#xA; &lt;li&gt;离线语音唤醒 &lt;a href=&#34;https://github.com/espressif/esp-sr&#34;&gt;ESP-SR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;流式语音对话（WebSocket 或 UDP 协议）&lt;/li&gt; &#xA; &lt;li&gt;支持国语、粤语、英语、日语、韩语 5 种语言识别 &lt;a href=&#34;https://github.com/FunAudioLLM/SenseVoice&#34;&gt;SenseVoice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;声纹识别，识别是谁在喊 AI 的名字 &lt;a href=&#34;https://github.com/modelscope/3D-Speaker&#34;&gt;3D Speaker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;大模型 TTS（火山引擎 或 CosyVoice）&lt;/li&gt; &#xA; &lt;li&gt;大模型 LLM（Qwen, DeepSeek, Doubao）&lt;/li&gt; &#xA; &lt;li&gt;可配置的提示词和音色（自定义角色）&lt;/li&gt; &#xA; &lt;li&gt;短期记忆，每轮对话后自我总结&lt;/li&gt; &#xA; &lt;li&gt;OLED / LCD 显示屏，显示信号强弱或对话内容&lt;/li&gt; &#xA; &lt;li&gt;支持 LCD 显示图片表情&lt;/li&gt; &#xA; &lt;li&gt;支持多语言（中文、英文）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;硬件部分&lt;/h2&gt; &#xA;&lt;h3&gt;面包板手工制作实践&lt;/h3&gt; &#xA;&lt;p&gt;详见飞书文档教程：&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://ccnphfhqs21z.feishu.cn/wiki/F5krwD16viZoF0kKkvDcrZNYnhb?from=from_copylink&#34;&gt;《小智 AI 聊天机器人百科全书》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;面包板效果图如下：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/wiring2.jpg&#34; alt=&#34;面包板效果图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;已支持的开源硬件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oshwhub.com/li-chuang-kai-fa-ban/li-chuang-shi-zhan-pai-esp32-s3-kai-fa-ban&#34; target=&#34;_blank&#34; title=&#34;立创·实战派 ESP32-S3 开发板&#34;&gt;立创·实战派 ESP32-S3 开发板&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/espressif/esp-box&#34; target=&#34;_blank&#34; title=&#34;乐鑫 ESP32-S3-BOX3&#34;&gt;乐鑫 ESP32-S3-BOX3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.m5stack.com/zh_CN/core/CoreS3&#34; target=&#34;_blank&#34; title=&#34;M5Stack CoreS3&#34;&gt;M5Stack CoreS3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.m5stack.com/en/atom/Atomic%20Echo%20Base&#34; target=&#34;_blank&#34; title=&#34;AtomS3R + Echo Base&#34;&gt;AtomS3R + Echo Base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.m5stack.com/en/core/ATOM%20Matrix&#34; target=&#34;_blank&#34; title=&#34;AtomMatrix + Echo Base&#34;&gt;AtomMatrix + Echo Base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gf.bilibili.com/item/detail/1108782064&#34; target=&#34;_blank&#34; title=&#34;神奇按钮 2.4&#34;&gt;神奇按钮 2.4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.waveshare.net/shop/ESP32-S3-Touch-AMOLED-1.8.htm&#34; target=&#34;_blank&#34; title=&#34;微雪电子 ESP32-S3-Touch-AMOLED-1.8&#34;&gt;微雪电子 ESP32-S3-Touch-AMOLED-1.8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xinyuan-LilyGO/T-Circle-S3&#34; target=&#34;_blank&#34; title=&#34;LILYGO T-Circle-S3&#34;&gt;LILYGO T-Circle-S3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oshwhub.com/tenclass01/xmini_c3&#34; target=&#34;_blank&#34; title=&#34;虾哥 Mini C3&#34;&gt;虾哥 Mini C3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oshwhub.com/movecall/moji-xiaozhi-ai-derivative-editi&#34; target=&#34;_blank&#34; title=&#34;Movecall Moji ESP32S3&#34;&gt;Moji 小智AI衍生版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WMnologo/xingzhi-ai&#34; target=&#34;_blank&#34; title=&#34;无名科技Nologo-星智-1.54&#34;&gt;无名科技Nologo-星智-1.54TFT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WMnologo/xingzhi-ai&#34; target=&#34;_blank&#34; title=&#34;无名科技Nologo-星智-0.96&#34;&gt;无名科技Nologo-星智-0.96TFT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div style=&#34;display: flex; justify-content: space-between;&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/lichuang-s3.jpg&#34; target=&#34;_blank&#34; title=&#34;立创·实战派 ESP32-S3 开发板&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/lichuang-s3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/espbox3.jpg&#34; target=&#34;_blank&#34; title=&#34;乐鑫 ESP32-S3-BOX3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/espbox3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/m5cores3.jpg&#34; target=&#34;_blank&#34; title=&#34;M5Stack CoreS3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/m5cores3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/atoms3r.jpg&#34; target=&#34;_blank&#34; title=&#34;AtomS3R + Echo Base&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/atoms3r.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/magiclick.jpg&#34; target=&#34;_blank&#34; title=&#34;神奇按钮 2.4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/magiclick.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/waveshare.jpg&#34; target=&#34;_blank&#34; title=&#34;微雪电子 ESP32-S3-Touch-AMOLED-1.8&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/waveshare.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/lilygo-t-circle-s3.jpg&#34; target=&#34;_blank&#34; title=&#34;LILYGO T-Circle-S3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/lilygo-t-circle-s3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/xmini-c3.jpg&#34; target=&#34;_blank&#34; title=&#34;虾哥 Mini C3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/xmini-c3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/movecall-moji-esp32s3.jpg&#34; target=&#34;_blank&#34; title=&#34;Movecall Moji 小智AI衍生版&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/movecall-moji-esp32s3.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/wmnologo_xingzhi_1.54.jpg&#34; target=&#34;_blank&#34; title=&#34;无名科技Nologo-星智-1.54&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/wmnologo_xingzhi_1.54.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/wmnologo_xingzhi_0.96.jpg&#34; target=&#34;_blank&#34; title=&#34;无名科技Nologo-星智-0.96&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/v1/wmnologo_xingzhi_0.96.jpg&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;固件部分&lt;/h2&gt; &#xA;&lt;h3&gt;免开发环境烧录&lt;/h3&gt; &#xA;&lt;p&gt;新手第一次操作建议先不要搭建开发环境，直接使用免开发环境烧录的固件。&lt;/p&gt; &#xA;&lt;p&gt;固件默认接入 &lt;a href=&#34;https://xiaozhi.me&#34;&gt;xiaozhi.me&lt;/a&gt; 官方服务器，目前个人用户注册账号可以免费使用 Qwen 实时模型。&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://ccnphfhqs21z.feishu.cn/wiki/Zpz4wXBtdimBrLk25WdcXzxcnNS&#34;&gt;Flash烧录固件（无IDF开发环境）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;开发环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cursor 或 VSCode&lt;/li&gt; &#xA; &lt;li&gt;安装 ESP-IDF 插件，选择 SDK 版本 5.3 或以上&lt;/li&gt; &#xA; &lt;li&gt;Linux 比 Windows 更好，编译速度快，也免去驱动问题的困扰&lt;/li&gt; &#xA; &lt;li&gt;使用 Google C++ 代码风格，提交代码时请确保符合规范&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;智能体配置&lt;/h2&gt; &#xA;&lt;p&gt;如果你已经拥有一个小智 AI 聊天机器人设备，可以登录 &lt;a href=&#34;https://xiaozhi.me&#34;&gt;xiaozhi.me&lt;/a&gt; 控制台进行配置。&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1jUCUY2EKM/&#34;&gt;后台操作视频教程（旧版界面）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;技术原理与私有化部署&lt;/h2&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://raw.githubusercontent.com/78/xiaozhi-esp32/main/docs/websocket.md&#34;&gt;一份详细的 WebSocket 通信协议文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在个人电脑上部署服务器，可以参考另一位作者同样以 MIT 许可证开源的项目 &lt;a href=&#34;https://github.com/xinnan-tech/xiaozhi-esp32-server&#34;&gt;xiaozhi-esp32-server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#78/xiaozhi-esp32&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=78/xiaozhi-esp32&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=78/xiaozhi-esp32&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=78/xiaozhi-esp32&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>mastra-ai/mastra</title>
    <updated>2025-03-02T01:42:35Z</updated>
    <id>tag:github.com,2025-03-02:/mastra-ai/mastra</id>
    <link href="https://github.com/mastra-ai/mastra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The TypeScript AI agent framework. ⚡ Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastra &lt;img align=&#34;cener&#34; alt=&#34;Project Status: Beta&#34; src=&#34;https://img.shields.io/badge/beta-status-blue&#34;&gt; &lt;img align=&#34;cener&#34; alt=&#34;Project Status: Alpha&#34; src=&#34;https://img.shields.io/badge/Y%20Combinator-W25-orange?style=flat-square&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Mastra is an opinionated Typescript framework that helps you build AI applications and features quickly. It gives you the set of primitives you need: workflows, agents, RAG, integrations and evals. You can run Mastra on your local machine, or deploy to a serverless cloud.&lt;/p&gt; &#xA;&lt;p&gt;The main Mastra features are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LLM Models&lt;/td&gt; &#xA;   &lt;td&gt;Mastra uses the &lt;a href=&#34;https://sdk.vercel.ai/docs/introduction&#34;&gt;Vercel AI SDK&lt;/a&gt; for model routing, providing a unified interface to interact with any LLM provider including OpenAI, Anthropic, and Google Gemini. You can choose the specific model and provider, and decide whether to stream the response.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/agents/00-overview&#34;&gt;Agents&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Agents are systems where the language model chooses a sequence of actions. In Mastra, agents provide LLM models with tools, workflows, and synced data. Agents can call your own functions or APIs of third-party integrations and access knowledge bases you build.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/agents/02-adding-tools&#34;&gt;Tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tools are typed functions that can be executed by agents or workflows, with built-in integration access and parameter validation. Each tool has a schema that defines its inputs, an executor function that implements its logic, and access to configured integrations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/workflows/00-overview&#34;&gt;Workflows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Workflows are durable graph-based state machines. They have loops, branching, wait for human input, embed other workflows, do error handling, retries, parsing and so on. They can be built in code or with a visual editor. Each step in a workflow has built-in OpenTelemetry tracing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/rag/overview&#34;&gt;RAG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Retrieval-augemented generation (RAG) lets you construct a knowledge base for agents. RAG is an ETL pipeline with specific querying techniques, including chunking, embedding, and vector search.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/local-dev/integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;In Mastra, integrations are auto-generated, type-safe API clients for third-party services that can be used as tools for agents or steps in workflows.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mastra.ai/docs/08-running-evals&#34;&gt;Evals&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Evals are automated tests that evaluate LLM outputs using model-graded, rule-based, and statistical methods. Each eval returns a normalized score between 0-1 that can be logged and compared. Evals can be customized with your own prompts and scoring functions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (v20.0+)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get an LLM provider API key&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t have an API key for an LLM provider, you can get one from the following services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.anthropic.com/settings/keys&#34;&gt;Anthropic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.google.dev/gemini-api/docs&#34;&gt;Google Gemini&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you don&#39;t have an account with these providers, you can sign up and get an API key. Anthropic require a credit card to get an API key. Some OpenAI models and Gemini do not and have a generous free tier for its API.&lt;/p&gt; &#xA;&lt;h2&gt;Create a new project&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started with Mastra is by using &lt;code&gt;create-mastra&lt;/code&gt;. This CLI tool enables you to quickly start building a new Mastra application, with everything set up for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-mastra@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run the script&lt;/h3&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;mastra dev&lt;/code&gt; to open the Mastra playground.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using Anthropic, set the &lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;. If you&#39;re using Gemini, set the &lt;code&gt;GOOGLE_GENERATIVE_AI_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Looking to contribute? All types of help are appreciated, from coding to testing and feature specification.&lt;/p&gt; &#xA;&lt;p&gt;If you are a developer and would like to contribute with code, please open an issue to discuss before opening a Pull Request.&lt;/p&gt; &#xA;&lt;p&gt;Information about the project setup can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/mastra-ai/mastra/main/DEVELOPMENT.md&#34;&gt;development documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;We have an &lt;a href=&#34;https://discord.gg/BTYqqHKUrf&#34;&gt;open community Discord&lt;/a&gt;. Come and say hello and let us know if you have any questions or need any help getting things running.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s also super helpful if you leave the project a star here at the &lt;a href=&#34;https://github.com/mastra-ai/mastra&#34;&gt;top of the page&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>