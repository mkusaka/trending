<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-18T01:43:44Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>danielgindi/Charts</title>
    <updated>2022-09-18T01:43:44Z</updated>
    <id>tag:github.com,2022-09-18:/danielgindi/Charts</id>
    <link href="https://github.com/danielgindi/Charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Version 4.0.0&lt;/strong&gt;, synced to &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/commit/f6a398b&#34;&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png&#34; alt=&#34;alt tag&#34;&gt; &lt;img src=&#34;https://img.shields.io/cocoapods/p/Charts.svg?sanitize=true&#34; alt=&#34;Supported Platforms&#34;&gt; &lt;a href=&#34;https://github.com/danielgindi/Charts/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/danielgindi/Charts.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Charts.svg?sanitize=true&#34; alt=&#34;Latest pod release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/danielgindi/Charts&#34;&gt;&lt;img src=&#34;https://travis-ci.org/danielgindi/Charts.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/danielgindi/Charts&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/danielgindi/Charts.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/danielgindi/Charts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Just a heads up: Charts 3.0 has some breaking changes. Please read &lt;a href=&#34;https://github.com/danielgindi/Charts/releases/tag/v3.0.0&#34;&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h3&gt;Another heads up: ChartsRealm is now in a &lt;a href=&#34;https://github.com/danielgindi/ChartsRealm&#34;&gt;separate repo&lt;/a&gt;. Pods is also now &lt;code&gt;Charts&lt;/code&gt; and &lt;code&gt;ChartsRealm&lt;/code&gt;, instead of &lt;del&gt;&lt;code&gt;Charts/Core&lt;/code&gt;&lt;/del&gt; and &lt;del&gt;&lt;code&gt;Charts/Realm&lt;/code&gt;&lt;/del&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn&#39;t check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 14 / Swift 5.7 (master branch)&lt;/li&gt; &#xA; &lt;li&gt;iOS &amp;gt;= 12.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt; &#xA; &lt;li&gt;tvOS &amp;gt;= 12.0&lt;/li&gt; &#xA; &lt;li&gt;macOS &amp;gt;= 10.13&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Okay so there&#39;s this beautiful library called &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/philippjahoda&#34;&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don&#39;t have to go around and re-invent the app to produce the same output with a different library. (And that&#39;s not even considering the fact that there&#39;s not really another good choice out there currently...)&lt;/p&gt; &#xA;&lt;h2&gt;Having trouble running the demo?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt; &#xA; &lt;li&gt;Make sure you are running a supported version of Xcode. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt; &#xA;   &lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt; &#xA; &lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you don&#39;t have Carthage - you can get it &lt;a href=&#34;https://github.com/Carthage/Carthage/releases&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In order to correctly compile:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;Charts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt; &#xA; &lt;li&gt;Go to your target&#39;s settings, hit the &#34;+&#34; under the &#34;Frameworks, Libraries, and Embedded Content&#34; section, and select the Charts.framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@import Charts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to import your Bridging Header. Usually it is &#34;&lt;em&gt;YourProject-Swift.h&lt;/em&gt;&#34;, so in ChartsDemo it&#39;s &#34;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&#34;. Do not try to actually include &#34;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&#34; in your project :-)&lt;/li&gt; &#xA; &lt;li&gt;(Xcode 8.1 and earlier) Under &#34;Build Options&#34;, mark &#34;Embedded Content Contains Swift Code&#34;&lt;/li&gt; &#xA; &lt;li&gt;(Xcode 8.2+) Under &#34;Build Options&#34;, mark &#34;Always Embed Swift Standard Libraries&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;When using &lt;a href=&#34;https://realm.io/&#34;&gt;Realm.io&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with Charts. We will do our best to always compile against the latest version.&lt;/li&gt; &#xA;   &lt;li&gt;You&#39;ll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;3rd party tutorials&lt;/h2&gt; &#xA;&lt;h4&gt;Video tutorials&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mWhwe_tLNE8&amp;amp;list=PL_csAAO9PQ8bjzg-wxEff1Fr0Y5W1hrum&amp;amp;index=5&#34;&gt;Chart in Swift - Setting Up a Basic Line Chart Using iOS Charts(Alex Nagy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/csd7pyfEXgw&#34;&gt;Charts Framework in SwiftUI - Bar Chart (Stewart Lynch)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Blog posts&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8&#34;&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e&#34;&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/annalizhaz/ChartsForSwiftBasic&#34;&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@HeyDaveTheDev/creating-a-radar-chart-in-swift-5791afcf92f0&#34;&gt;Creating a Radar Chart in Swift (David Piper)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@zzzzbh/plotting-in-ios-using-charts-framework-with-swiftui-222034a2bea6&#34;&gt;Plotting in IOS using Charts framework with SwiftUI (Evgeny Basisty)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@penny-huang/swift-setting-up-a-basic-bar-chart-using-ios-charts-afd6aad96ac&#34;&gt;Set Up a Basic Bar Chart Using iOS-Charts (Penny Huang)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@penny-huang/swift-ios-charts-tutorial-highlight-selected-value-with-a-custom-marker-30ccbf92aa1b&#34;&gt;iOS-Charts Tutorial: Highlight Selected Value With a Custom Marker (Penny Huang)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Want your tutorial to show here? Create a PR!&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h4&gt;Can&#39;t compile?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt; &#xA; &lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt; &#xA; &lt;li&gt;Search in the issues&lt;/li&gt; &#xA; &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Other problems / feature requests&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search in the issues&lt;/li&gt; &#xA; &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CocoaPods Install&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;pod &#39;Charts&#39;&lt;/code&gt; to your Podfile. &#34;Charts&#34; is the name of the library.&lt;br&gt; For &lt;a href=&#34;https://realm.io/&#34;&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod &#39;ChartsRealm&#39;&lt;/code&gt; too.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod &#39;ios-charts&#39;&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt; &#xA;&lt;h2&gt;Carthage Install&lt;/h2&gt; &#xA;&lt;p&gt;Charts now include Carthage prebuilt binaries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-carthage&#34;&gt;github &#34;danielgindi/Charts&#34; == 4.1.0&#xA;github &#34;danielgindi/Charts&#34; ~&amp;gt; 4.1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Swift Package Manager Install&lt;/h2&gt; &#xA;&lt;p&gt;Swift Package Manager&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/danielgindi/Charts.git&#34;, .upToNextMajor(from: &#34;4.1.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3rd party bindings&lt;/h2&gt; &#xA;&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href=&#34;https://github.com/Flash3001/iOSCharts.Xamarin&#34;&gt;GitHub&lt;/a&gt;/&lt;a href=&#34;https://www.nuget.org/packages/iOSCharts/&#34;&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href=&#34;https://github.com/Flash3001/MPAndroidChart.Xamarin&#34;&gt;GitHub&lt;/a&gt;/&lt;a href=&#34;https://www.nuget.org/packages/MPAndroidChart/&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt; &#xA; &lt;li&gt;Let people know this library exists (&lt;span&gt;🔥&lt;/span&gt; spread the word &lt;span&gt;🔥&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart#donations&#34;&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt; &#xA;&lt;h2&gt;Questions &amp;amp; Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href=&#34;https://github.com/danielgindi/Charts/releases&#34;&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Study the Android version&#39;s &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/wiki&#34;&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search or open questions on &lt;a href=&#34;http://stackoverflow.com/questions/tagged/ios-charts&#34;&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt; &#xA; &lt;li&gt;Search &lt;a href=&#34;https://github.com/danielgindi/Charts/issues&#34;&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt; &#xA; &lt;li&gt;Create new issues (please &lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;span&gt;🔥&lt;/span&gt;, do not create duplicate issues)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8 different chart types&lt;/li&gt; &#xA; &lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt; &#xA; &lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt; &#xA; &lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt; &#xA; &lt;li&gt;Dual (separate) Axes&lt;/li&gt; &#xA; &lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt; &#xA; &lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt; &#xA; &lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt; &#xA; &lt;li&gt;Predefined color templates&lt;/li&gt; &#xA; &lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt; &#xA; &lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt; &#xA; &lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt; &#xA; &lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt; &#xA; &lt;li&gt;Plotting data directly from &lt;a href=&#34;https://realm.io&#34;&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href=&#34;https://github.com/danielgindi/ChartsRealm&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Currently there&#39;s no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br&gt; You can read the official &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/wiki&#34;&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href=&#34;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS&#34;&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href=&#34;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS&#34;&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt; &#xA;&lt;h1&gt;Special Thanks&lt;/h1&gt; &#xA;&lt;p&gt;Goes to &lt;a href=&#34;https://github.com/liuxuan30&#34;&gt;@liuxuan30&lt;/a&gt;, &lt;a href=&#34;https://github.com/petester42&#34;&gt;@petester42&lt;/a&gt; and &lt;a href=&#34;https://github.com/AlBirdie&#34;&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn&#39;t respond to all of those without you.&lt;/p&gt; &#xA;&lt;h3&gt;Our amazing sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://debricked.com/&#34;&gt;Debricked&lt;/a&gt;: Use open source securely&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://debricked.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4375169/73585544-25bfa800-44dd-11ea-9661-82519a125302.jpg&#34; alt=&#34;debricked&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheAlgorithms/Python</title>
    <updated>2022-09-18T01:43:44Z</updated>
    <id>tag:github.com,2022-09-18:/TheAlgorithms/Python</id>
    <link href="https://github.com/TheAlgorithms/Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in Python&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- Title: --&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheAlgorithms/website/1cd824df116b27029f17c2d1b42d81731f28a920/public/logo.svg?sanitize=true&#34; height=&#34;100&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt;The Algorithms&lt;/a&gt; - Python&lt;/h1&gt; &#xA; &lt;!-- Labels: --&gt; &#xA; &lt;!-- First row: --&gt; &#xA; &lt;a href=&#34;https://gitpod.io/#https://github.com/TheAlgorithms/Python&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Contributions Welcome&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&amp;amp;style=flat-square&#34; height=&#34;20&#34;&gt; &#xA; &lt;a href=&#34;https://discord.gg/c7MnfGFGa6&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Discord chat&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&amp;amp;logo=gitter&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitter chat&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Second row: --&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/TheAlgorithms/Python/build?label=CI&amp;amp;logo=github&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://lgtm.com/projects/g/TheAlgorithms/Python/alerts&#34;&gt; &lt;img src=&#34;https://img.shields.io/lgtm/alerts/github/TheAlgorithms/Python.svg?label=LGTM&amp;amp;logo=LGTM&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;LGTM&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/pre-commit/pre-commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;pre-commit&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/psf/black&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=code%20style&amp;amp;message=black&amp;amp;color=black&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;code style: black&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Short description: --&gt; &#xA; &lt;h3&gt;All algorithms implemented in Python - for education&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Implementations are for learning purposes only. As they may be less efficient than the implementations in the Python standard library, use them at your discretion.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Community Channels&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on &lt;a href=&#34;https://discord.gg/c7MnfGFGa6&#34;&gt;Discord&lt;/a&gt; and &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;Gitter&lt;/a&gt;! Community channels are great for you to ask questions and get help. Please join us!&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt; for easier navigation and better overview of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taichi-dev/taichi</title>
    <updated>2022-09-18T01:43:44Z</updated>
    <id>tag:github.com,2022-09-18:/taichi-dev/taichi</id>
    <link href="https://github.com/taichi-dev/taichi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Productive &amp; portable high-performance programming in Python.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;500px&#34; src=&#34;https://github.com/taichi-dev/taichi/raw/master/misc/logo.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/taichi-dev/taichi?color=blue&amp;amp;label=Latest%20Release&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/taichi&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/taichi&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/taichi/actions/workflows/testing.yml&#34;&gt;&lt;img src=&#34;https://github.com/taichi-dev/taichi/actions/workflows/testing.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/taichi/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/taichi-dev/taichi/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/taichicommunity/shared_invite/zt-14ic8j6no-Fd~wKNpfskXLfqDr58Tddg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=red&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install taichi  # Install Taichi Lang&#xA;ti gallery          # Launch demo gallery&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is Taichi Lang?&lt;/h2&gt; &#xA;&lt;p&gt;Taichi Lang is an open-source, imperative, parallel programming language for high-performance numerical computation. It is embedded in Python and uses just-in-time (JIT) compiler frameworks, for example LLVM, to offload the compute-intensive Python code to the native GPU or CPU instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/python/taichi/examples/simulation/fractal.py#L1-L31&#34;&gt; &lt;img src=&#34;https://github.com/taichi-dev/public_files/raw/master/taichi/fractal_code.png&#34; height=&#34;270px&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/fractal_small.gif&#34; height=&#34;270px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The language has broad applications spanning real-time physical simulation, numerical computation, augmented reality, artificial intelligence, vision and robotics, visual effects in films and games, general-purpose computing, and much more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/python/taichi/examples/simulation/mpm128.py&#34;&gt;&lt;img src=&#34;https://github.com/taichi-dev/public_files/raw/master/taichi/mpm128.gif&#34; height=&#34;192px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/quantaichi&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/smoke_3d.gif&#34; height=&#34;192px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/python/taichi/examples/rendering/sdf_renderer.py&#34;&gt;&lt;img src=&#34;https://github.com/taichi-dev/public_files/raw/master/taichi/sdf_renderer.jpg&#34; height=&#34;192px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/python/taichi/examples/simulation/euler.py&#34;&gt;&lt;img src=&#34;https://github.com/taichi-dev/public_files/raw/master/taichi/euler.gif&#34; height=&#34;192px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/quantaichi&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/elastic_letters.gif&#34; height=&#34;213px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/quantaichi&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/fluid_with_bunnies.gif&#34; height=&#34;213px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/#demos&#34;&gt;...More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why Taichi Lang?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built around Python: Taichi Lang shares almost the same syntax with Python, allowing you to write algorithms with minimal language barrier. It is also well integrated into the Python ecosystem, including NumPy and PyTorch.&lt;/li&gt; &#xA; &lt;li&gt;Flexibility: Taichi Lang provides a set of generic data containers known as &lt;em&gt;SNode&lt;/em&gt; (/ˈsnoʊd/), an effective mechanism for composing hierarchical, multi-dimensional fields. This can cover many use patterns in numerical simulation (e.g. &lt;a href=&#34;https://docs.taichi-lang.org/docs/sparse&#34;&gt;spatially sparse computing&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Performance: With the &lt;code&gt;@ti.kernel&lt;/code&gt; decorator, Taichi Lang&#39;s JIT compiler automatically compiles your Python functions into efficient GPU or CPU machine code for parallel execution.&lt;/li&gt; &#xA; &lt;li&gt;Portability: Write your code once and run it everywhere. Currently, Taichi Lang supports most mainstream GPU APIs, such as CUDA and Vulkan.&lt;/li&gt; &#xA; &lt;li&gt;... and many more features! A cross-platform, Vulkan-based 3D visualizer, &lt;a href=&#34;https://docs.taichi-lang.org/docs/differentiable_programming&#34;&gt;differentiable programming&lt;/a&gt;, &lt;a href=&#34;https://github.com/taichi-dev/quantaichi&#34;&gt;quantized computation&lt;/a&gt; (experimental), etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prerequisites&lt;/summary&gt; &#xA; &lt;!--TODO: Precise OS versions--&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Operating systems &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Windows&lt;/li&gt; &#xA;    &lt;li&gt;Linux&lt;/li&gt; &#xA;    &lt;li&gt;macOS&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Python: 3.6 ~ 3.10 (64-bit only)&lt;/li&gt; &#xA;  &lt;li&gt;Compute backends &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;x64/ARM CPUs&lt;/li&gt; &#xA;    &lt;li&gt;CUDA&lt;/li&gt; &#xA;    &lt;li&gt;Vulkan&lt;/li&gt; &#xA;    &lt;li&gt;OpenGL (4.3+)&lt;/li&gt; &#xA;    &lt;li&gt;Apple Metal&lt;/li&gt; &#xA;    &lt;li&gt;WebAssembly (experiemental)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Use Python&#39;s package installer &lt;strong&gt;pip&lt;/strong&gt; to install Taichi Lang:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --upgrade taichi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;We also provide a nightly package. Note that nightly packages may crash because they are not fully tested. We cannot guarantee their validity, and you are at your own risk trying out our latest, untested features. The nightly packages can be installed from our self-hosted PyPI (Using self-hosted PyPI allows us to provide more frequent releases over a longer period of time)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -i https://pypi.taichi.graphics/simple/ taichi-nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run your &#34;Hello, world!&#34;&lt;/h3&gt; &#xA;&lt;p&gt;Here is how you can program a 2D fractal in Taichi:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# python/taichi/examples/simulation/fractal.py&#xA;&#xA;import taichi as ti&#xA;&#xA;ti.init(arch=ti.gpu)&#xA;&#xA;n = 320&#xA;pixels = ti.field(dtype=float, shape=(n * 2, n))&#xA;&#xA;&#xA;@ti.func&#xA;def complex_sqr(z):&#xA;    return ti.Vector([z[0]**2 - z[1]**2, z[1] * z[0] * 2])&#xA;&#xA;&#xA;@ti.kernel&#xA;def paint(t: float):&#xA;    for i, j in pixels:  # Parallelized over all pixels&#xA;        c = ti.Vector([-0.8, ti.cos(t) * 0.2])&#xA;        z = ti.Vector([i / n - 1, j / n - 0.5]) * 2&#xA;        iterations = 0&#xA;        while z.norm() &amp;lt; 20 and iterations &amp;lt; 50:&#xA;            z = complex_sqr(z) + c&#xA;            iterations += 1&#xA;        pixels[i, j] = 1 - iterations * 0.02&#xA;&#xA;&#xA;gui = ti.GUI(&#34;Julia Set&#34;, res=(n * 2, n))&#xA;&#xA;for i in range(1000000):&#xA;    paint(i * 0.03)&#xA;    gui.set_image(pixels)&#xA;    gui.show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;If Taichi Lang is properly installed, you should get the animation below 🎉:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/python/taichi/examples/simulation/fractal.py#L1-L31&#34;&gt; &lt;/a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/fractal_small.gif&#34; height=&#34;270px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.taichi-lang.org&#34;&gt;Get started&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to try our our experimental features or build Taichi Lang for your own environments, see &lt;a href=&#34;https://docs.taichi-lang.org/docs/dev_install&#34;&gt;Developer installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.taichi-lang.org/&#34;&gt;Technical documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.taichi-lang.org/api/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.taichi-lang.org/blog&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Kudos to all of our amazing contributors! Taichi Lang thrives through open-source. In that spirit, we welcome all kinds of contributions from the community. If you would like to participate, check out the &lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/graphs/contributors&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taichi-dev/public_files/master/taichi/contributors_taichi-dev_taichi_12.png&#34; width=&#34;800px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Contributor avatars are randomly shuffled.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Taichi Lang is distributed under the terms of Apache License (Version 2.0).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/taichi-dev/taichi/raw/master/LICENSE&#34;&gt;Apache License&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;Event&lt;/h3&gt; &#xA;&lt;p&gt;Voxel Challenge 2022 is open for &lt;a href=&#34;https://github.com/taichi-dev/voxel-challenge/issues/11&#34;&gt;submissions&lt;/a&gt; until 18th May. Find out more &lt;a href=&#34;https://github.com/taichi-dev/community/tree/main/events/voxel-challenge&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Join our discussions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/taichicommunity/shared_invite/zt-14ic8j6no-Fd~wKNpfskXLfqDr58Tddg&#34;&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.taichi.graphics/&#34;&gt;太极编程语言中文论坛&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Report an issue&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you spot an technical or documentation issue, file an issue at &lt;a href=&#34;https://github.com/taichi-dev/taichi/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you spot any security issue, mail directly to &lt;a href=&#34;mailto:security@taichi.graphics?subject = Taichi Security Problem&#34;&gt;&lt;/a&gt;&lt;a href=&#34;mailto:security@taichi.graphics&#34;&gt;security@taichi.graphics&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contact us&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://taichicommunity.slack.com/join/shared_invite/zt-14ic8j6no-Fd~wKNpfskXLfqDr58Tddg#/shared-invite/email&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WeChat: Drop us a message at &lt;a href=&#34;mailto:community@taichi.graphics&#34;&gt;&lt;/a&gt;&lt;a href=&#34;mailto:community@taichi.graphics&#34;&gt;community@taichi.graphics&lt;/a&gt; first, and we&#39;ll follow up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;Demos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi/tree/master/python/taichi/examples&#34;&gt;Taichi Lang examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/advanced_examples&#34;&gt;Advanced Taichi Lang examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/awesome-taichi&#34;&gt;Awesome Taichi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/difftaichi&#34;&gt;DiffTaichi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi_elements&#34;&gt;Taichi elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichi_houdini&#34;&gt;Taichi Houdini&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/misc/links.md&#34;&gt;More...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Lectures &amp;amp; talks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SIGGRAPH 2020 course on Taichi basics: &lt;a href=&#34;https://youtu.be/Y0-76n3aZFA&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://www.bilibili.com/video/BV1kA411n7jk/&#34;&gt;Bilibili&lt;/a&gt;, &lt;a href=&#34;https://yuanming.taichi.graphics/publication/2020-taichi-tutorial/taichi-tutorial.pdf&#34;&gt;slides (pdf)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Chinagraph 2020 用太极编写物理引擎: &lt;a href=&#34;https://www.bilibili.com/video/BV1gA411j7H5&#34;&gt;哔哩哔哩&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GAMES 201 高级物理引擎实战指南 2020: &lt;a href=&#34;https://github.com/taichi-dev/games201&#34;&gt;课件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;太极图形课第一季：&lt;a href=&#34;https://github.com/taichiCourse01&#34;&gt;课件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taichi-dev/taichicon&#34;&gt;TaichiCon&lt;/a&gt;: Taichi Developer Conferences&lt;/li&gt; &#xA; &lt;li&gt;More to come...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Citations&lt;/h3&gt; &#xA;&lt;p&gt;If you use Taichi Lang in your research, please cite the corresponding papers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yuanming.taichi.graphics/publication/2019-taichi/taichi-lang.pdf&#34;&gt;&lt;strong&gt;(SIGGRAPH Asia 2019) Taichi: High-Performance Computation on Sparse Data Structures&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/wKw8LMF3Djo&#34;&gt;[Video]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/misc/taichi_bibtex.txt&#34;&gt;[BibTex]&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/taichi&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.00935&#34;&gt;&lt;strong&gt;(ICLR 2020) DiffTaichi: Differentiable Programming for Physical Simulation&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=Z1xvAZve9aE&#34;&gt;[Video]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/misc/difftaichi_bibtex.txt&#34;&gt;[BibTex]&lt;/a&gt; &lt;a href=&#34;https://github.com/yuanming-hu/difftaichi&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yuanming.taichi.graphics/publication/2021-quantaichi/quantaichi.pdf&#34;&gt;&lt;strong&gt;(SIGGRAPH 2021) QuanTaichi: A Compiler for Quantized Simulations&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=0jdrAQOxJlY&#34;&gt;[Video]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/taichi-dev/taichi/master/misc/quantaichi_bibtex.txt&#34;&gt;[BibTex]&lt;/a&gt; &lt;a href=&#34;https://github.com/taichi-dev/quantaichi&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>