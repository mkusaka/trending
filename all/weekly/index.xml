<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-27T01:49:12Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>modelscope/facechain</title>
    <updated>2023-08-27T01:49:12Z</updated>
    <id>tag:github.com,2023-08-27:/modelscope/facechain</id>
    <link href="https://github.com/modelscope/facechain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FaceChain is a deep-learning toolchain for generating your Digital-Twin.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://modelscope.oss-cn-beijing.aliyuncs.com/modelscope.gif&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;h1&gt;FaceChain&lt;/h1&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÊÇ®ÁÜüÊÇâ‰∏≠ÊñáÔºåÂèØ‰ª•ÈòÖËØª&lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/README_ZH.md&#34;&gt;‰∏≠ÊñáÁâàÊú¨ÁöÑREADME&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;FaceChain is a deep-learning toolchain for generating your Digital-Twin. With a minimum of 1 portrait-photo, you can create a Digital-Twin of your own and start generating personal portraits in different settings (multiple styles now supported!). You may train your Digital-Twin model and generate photos via FaceChain&#39;s Python scripts, or via the familiar Gradio interface. FaceChain is powered by &lt;a href=&#34;https://github.com/modelscope/modelscope&#34;&gt;ModelScope&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ModelScope Studio &lt;a href=&#34;https://modelscope.cn/studios/CVstudio/cv_human_portrait/summary&#34;&gt;ü§ñ&lt;/a&gt;&lt;a&gt;&lt;/a&gt;&amp;nbsp; ÔΩú HuggingFace Space &lt;a href=&#34;https://huggingface.co/spaces/modelscope/FaceChain&#34;&gt;ü§ó&lt;/a&gt;&amp;nbsp; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/resources/git_cover.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;News&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HuggingFace Space is available now! You can experience FaceChain directly with &lt;a href=&#34;https://huggingface.co/spaces/modelscope/FaceChain&#34;&gt;ü§ó&lt;/a&gt; (August 25th, 2023 UTC)&lt;/li&gt; &#xA; &lt;li&gt;Add awesome prompts! Refer to: &lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/resources/awesome-prompts-facechain.txt&#34;&gt;awesome-prompts-facechain&lt;/a&gt; (August 18th, 2023 UTC)&lt;/li&gt; &#xA; &lt;li&gt;Support a series of new style models in a plug-and-play fashion. Refer to: &lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/#Features&#34;&gt;Features&lt;/a&gt; (August 16th, 2023 UTC)&lt;/li&gt; &#xA; &lt;li&gt;Support customizable prompts. Refer to: &lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/#Features&#34;&gt;Features&lt;/a&gt; (August 16th, 2023 UTC)&lt;/li&gt; &#xA; &lt;li&gt;Colab notebook is available now! You can experience FaceChain directly with &lt;a href=&#34;https://colab.research.google.com/drive/1cUhnVXseqD2EJiotZk3k7GsfQK9_yJu_?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;. (August 15th, 2023 UTC)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;To-Do List&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support existing style models (such as those on Civitai) in a plug-an-play fashion. --on-going&lt;/li&gt; &#xA; &lt;li&gt;Support customizable prompts (try on different outfits etc.) --on-going&lt;/li&gt; &#xA; &lt;li&gt;Support customizable poses, with controlnet or composer&lt;/li&gt; &#xA; &lt;li&gt;Support more beauty-retouch effects&lt;/li&gt; &#xA; &lt;li&gt;Support latest foundation models such as SDXL&lt;/li&gt; &#xA; &lt;li&gt;Provide WebUI compatibility&lt;/li&gt; &#xA; &lt;li&gt;Support template images inpainting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support a series of new style models in a plug-and-play fashion &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Description &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allow users to select different style models for training distinct types of Digital-Twins.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Installation &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/#installation-guide&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Usage &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Select &#34;Âá§ÂÜ†ÈúûÂ∏î(Chinese traditional gorgeous suit)&#34; on the &lt;code&gt;inference&lt;/code&gt; tab and change the prompt as you want.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Exampled outcomes &lt;img src=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/resources/style_lora_xiapei.jpg&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Reference &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.liblibai.com/modelinfo/f746450340a3a932c99be55c1a82d20c&#34;&gt;xiapei lora model&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;For more LoRA styles, refer to &lt;a href=&#34;https://civitai.com/&#34;&gt;Civitai&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support customizable prompts &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Description &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allow users to achieve various portrait styles with customized prompts.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Installation &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/#installation-guide&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Usage &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Edit the prompt on the &lt;code&gt;inference&lt;/code&gt; tab as you want.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Exampled outcomes &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;(prompt: The lord of the rings, ELF, Arwen Undomiel, beautiful, upper_body, best quality, Professional) &lt;img src=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/resources/prompt_elf_lord_of_rings.jpg&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Compatibility Verification&lt;/h2&gt; &#xA;&lt;p&gt;We have verified e2e execution on the following environment:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;python: py3.8, py3.10&lt;/li&gt; &#xA; &lt;li&gt;pytorch: torch2.0.0, torch2.0.1&lt;/li&gt; &#xA; &lt;li&gt;tensorflow: 2.8.0, tensorflow-cpu&lt;/li&gt; &#xA; &lt;li&gt;CUDA: 11.7&lt;/li&gt; &#xA; &lt;li&gt;CUDNN: 8+&lt;/li&gt; &#xA; &lt;li&gt;OS: Ubuntu 20.04, CentOS 7.9&lt;/li&gt; &#xA; &lt;li&gt;GPU: Nvidia-A10 24G&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resource Requirement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GPU: About 19G&lt;/li&gt; &#xA; &lt;li&gt;Disk: About 50GB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation Guide&lt;/h2&gt; &#xA;&lt;p&gt;The following installation methods are supported:&lt;/p&gt; &#xA;&lt;h3&gt;1. ModelScope notebook„Äêrecommended„Äë&lt;/h3&gt; &#xA;&lt;p&gt;The ModelScope Notebook offers a free-tier that allows ModelScope user to run the FaceChain application with minimum setup, refer to &lt;a href=&#34;https://modelscope.cn/my/mynotebook/preset&#34;&gt;ModelScope Notebook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Step1: ÊàëÁöÑnotebook -&amp;gt; PAI-DSW -&amp;gt; GPUÁéØÂ¢É&#xA;&#xA;# Step2: Entry the Notebook cellÔºåclone FaceChain from github:&#xA;!GIT_LFS_SKIP_SMUDGE=1 git clone https://github.com/modelscope/facechain.git --depth 1&#xA;&#xA;# Step3: Change the working directory to facechain:&#xA;import os&#xA;os.chdir(&#39;/mnt/workspace/facechain&#39;)    # You may change to your own path&#xA;print(os.getcwd())&#xA;&#xA;!pip3 install gradio&#xA;!python3 app.py&#xA;&#xA;&#xA;# Step4: click &#34;public URL&#34; or &#34;local URL&#34;, upload your images to &#xA;# train your own model and then generate your digital twin.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you may also purchase a &lt;a href=&#34;https://www.aliyun.com/activity/bigdata/pai/dsw&#34;&gt;PAI-DSW&lt;/a&gt; instance (using A10 resource), with the option of ModelScope image to run FaceChain following similar steps.&lt;/p&gt; &#xA;&lt;h3&gt;2. Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you are familiar with using docker, we recommend to use this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Step1: Prepare the environment with GPU on local or cloud, we recommend to use Alibaba Cloud ECS, refer to: https://www.aliyun.com/product/ecs&#xA;&#xA;# Step2: Download the docker image (for installing docker engine, refer to https://docs.docker.com/engine/install/Ôºâ&#xA;docker pull registry.cn-hangzhou.aliyuncs.com/modelscope-repo/modelscope:ubuntu20.04-cuda11.7.1-py38-torch2.0.1-tf1.15.5-1.8.0&#xA;&#xA;# Step3: run the docker container&#xA;docker run -it --name facechain -p 7860:7860 --gpus all registry.cn-hangzhou.aliyuncs.com/modelscope-repo/modelscope:ubuntu20.04-cuda11.7.1-py38-torch2.0.1-tf1.15.5-1.8.0 /bin/bash&#xA;(Note: you may need to install the nvidia-container-runtime, refer to https://github.com/NVIDIA/nvidia-container-runtime)&#xA;&#xA;# Step4: Install the gradio in the docker container:&#xA;pip3 install gradio&#xA;&#xA;# Step5 clone facechain from github&#xA;GIT_LFS_SKIP_SMUDGE=1 git clone https://github.com/modelscope/facechain.git --depth 1&#xA;cd facechain&#xA;python3 app.py&#xA;# Note: FaceChain currently assume single-GPU, if your environment has multiple GPU, please use the following instead:&#xA;# CUDA_VISIBLE_DEVICES=0 python3 app.py&#xA;&#xA;# Step6&#xA;Run the app server: click &#34;public URL&#34; --&amp;gt; in the form of: https://xxx.gradio.live&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Conda Virtual Environment&lt;/h3&gt; &#xA;&lt;p&gt;Use the conda virtual environment, and refer to &lt;a href=&#34;https://docs.anaconda.com/anaconda/install/&#34;&gt;Anaconda&lt;/a&gt; to manage your dependencies. After installation, execute the following commands: (Note: mmcv has strict environment requirements and might not be compatible in some cases. It&#39;s recommended to use Docker.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n facechain python=3.8    # Verified environments: 3.8 and 3.10&#xA;conda activate facechain&#xA;&#xA;GIT_LFS_SKIP_SMUDGE=1 git clone https://github.com/modelscope/facechain.git --depth 1&#xA;cd facechain&#xA;&#xA;pip3 install -r requirements.txt&#xA;pip3 install -U openmim &#xA;mim install mmcv-full==1.7.0&#xA;&#xA;# Navigate to the facechain directory and run:&#xA;python3 app.py&#xA;# Note: FaceChain currently assume single-GPU, if your environment has multiple GPU, please use the following instead:&#xA;# CUDA_VISIBLE_DEVICES=0 python3 app.py&#xA;&#xA;# Finally, click on the URL generated in the log to access the web page.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the app service is successfully launched, go to the URL in the log, enter the &#34;Image Customization&#34; tab, click &#34;Select Image to Upload&#34;, and choose at least one image with a face. Then, click &#34;Start Training&#34; to begin model training. After the training is completed, there will be corresponding displays in the log. Afterwards, switch to the &#34;Image Experience&#34; tab and click &#34;Start Inference&#34; to generate your own digital image.&lt;/p&gt; &#xA;&lt;h3&gt;4. Colab notebook&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Colab&lt;/th&gt; &#xA;   &lt;th&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1cUhnVXseqD2EJiotZk3k7GsfQK9_yJu_?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;FaceChain Installation on Colab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Script Execution&lt;/h1&gt; &#xA;&lt;p&gt;FaceChain supports direct training and inference in the python environment. Run the following command in the cloned folder to start training:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PYTHONPATH=. sh train_lora.sh &#34;ly261666/cv_portrait_model&#34; &#34;v2.0&#34; &#34;film/film&#34; &#34;./imgs&#34; &#34;./processed&#34; &#34;./output&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters description:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;ly261666/cv_portrait_model: The stable diffusion base model of the ModelScope model hub, which will be used for training, no need to be changed.&#xA;v2.0: The version number of this base model, no need to be changed&#xA;film/film: This base model may contains multiple subdirectories of different styles, currently we use film/film, no need to be changed&#xA;./imgs: This parameter needs to be replaced with the actual value. It means a local file directory that contains the original photos used for training and generation&#xA;./processed: The folder of the processed images after preprocessing, this parameter needs to be passed the same value in inference, no need to be changed&#xA;./output: The folder where the model weights stored after training, no need to be changed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for 5-20 minutes to complete the training. Users can also adjust other training hyperparameters. The hyperparameters supported by training can be viewed in the file of &lt;code&gt;train_lora.sh&lt;/code&gt;, or the complete hyperparameter list in &lt;code&gt;facechain/train_text_to_image_lora.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When inferring, please edit the code in run_inference.py:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Fill in the folder of the images after preprocessing above, it should be the same as during training&#xA;processed_dir = &#39;./processed&#39;&#xA;# The number of images to generate in inference&#xA;num_generate = 5&#xA;# The stable diffusion base model used in training, no need to be changed&#xA;base_model = &#39;ly261666/cv_portrait_model&#39;&#xA;# The version number of this base model, no need to be changed&#xA;revision = &#39;v2.0&#39;&#xA;# This base model may contains multiple subdirectories of different styles, currently we use film/film, no need to be changed&#xA;base_model_sub_dir = &#39;film/film&#39;&#xA;# The folder where the model weights stored after training, it must be the same as during training&#xA;train_output_dir = &#39;./output&#39;&#xA;# Specify a folder to save the generated images, this parameter can be modified as needed&#xA;output_dir = &#39;./generated&#39;&#xA;# Use Chinese style model, default False&#xA;use_style = False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python run_inference.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the generated personal digital image photos in the &lt;code&gt;output_dir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Algorithm Introduction&lt;/h1&gt; &#xA;&lt;h2&gt;Architectural Overview&lt;/h2&gt; &#xA;&lt;p&gt;The ability of the personal portrait generation evolves around the text-to-image capability of Stable Diffusion model. We consider the main factors that affect the generation effect of personal portraits: portrait style information and user character information. For this, we use the style LoRA model trained offline and the face LoRA model trained online to learn the above information. LoRA is a fine-tuning model with fewer trainable parameters. In Stable Diffusion, the information of the input image can be injected into the LoRA model by the way of text generation image training with a small amount of input image. Therefore, the ability of the personal portrait model is divided into training and inference stages. The training stage generates image and text label data for fine-tuning the Stable Diffusion model, and obtains the face LoRA model. The inference stage generates personal portrait images based on the face LoRA model and style LoRA model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/modelscope/facechain/main/resources/framework_eng.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;Input: User-uploaded images that contain clear face areas&lt;/p&gt; &#xA;&lt;p&gt;Output: Face LoRA model&lt;/p&gt; &#xA;&lt;p&gt;Description: First, we process the user-uploaded images using an image rotation model based on orientation judgment and a face refinement rotation method based on face detection and keypoint models, and obtain images containing forward faces. Next, we use a human body parsing model and a human portrait beautification model to obtain high-quality face training images. Afterwards, we use a face attribute model and a text annotation model, combined with tag post-processing methods, to generate fine-grained labels for training images. Finally, we use the above images and label data to fine-tune the Stable Diffusion model to obtain the face LoRA model.&lt;/p&gt; &#xA;&lt;h2&gt;Inference&lt;/h2&gt; &#xA;&lt;p&gt;Input: User-uploaded images in the training phase, preset input prompt words for generating personal portraits&lt;/p&gt; &#xA;&lt;p&gt;Output: Personal portrait image&lt;/p&gt; &#xA;&lt;p&gt;Description: First, we fuse the weights of the face LoRA model and style LoRA model into the Stable Diffusion model. Next, we use the text generation image function of the Stable Diffusion model to preliminarily generate personal portrait images based on the preset input prompt words. Then we further improve the face details of the above portrait image using the face fusion model. The template face used for fusion is selected from the training images through the face quality evaluation model. Finally, we use the face recognition model to calculate the similarity between the generated portrait image and the template face, and use this to sort the portrait images, and output the personal portrait image that ranks first as the final output result.&lt;/p&gt; &#xA;&lt;h2&gt;Model List&lt;/h2&gt; &#xA;&lt;p&gt;The models used in FaceChain:&lt;/p&gt; &#xA;&lt;p&gt;[1] Face detection model DamoFDÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_ddsar_face-detection_iclr23-damofd&#34;&gt;https://modelscope.cn/models/damo/cv_ddsar_face-detection_iclr23-damofd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[2] Image rotating model, offered in the ModelScope studio&lt;/p&gt; &#xA;&lt;p&gt;[3] Human parsing model M2FPÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_resnet101_image-multiple-human-parsing&#34;&gt;https://modelscope.cn/models/damo/cv_resnet101_image-multiple-human-parsing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[4] Skin retouching model ABPNÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_unet_skin-retouching&#34;&gt;https://modelscope.cn/models/damo/cv_unet_skin-retouching&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[5] Face attribute recognition model FairFaceÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_resnet34_face-attribute-recognition_fairface&#34;&gt;https://modelscope.cn/models/damo/cv_resnet34_face-attribute-recognition_fairface&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[6] DeepDanbooru modelÔºö&lt;a href=&#34;https://github.com/KichangKim/DeepDanbooru&#34;&gt;https://github.com/KichangKim/DeepDanbooru&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[7] Face quality assessment FQAÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_manual_face-quality-assessment_fqa&#34;&gt;https://modelscope.cn/models/damo/cv_manual_face-quality-assessment_fqa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[8] Face fusion modelÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_unet-image-face-fusion_damo&#34;&gt;https://modelscope.cn/models/damo/cv_unet-image-face-fusion_damo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[9] Face recognition model RTSÔºö&lt;a href=&#34;https://modelscope.cn/models/damo/cv_ir_face-recognition-ood_rts&#34;&gt;https://modelscope.cn/models/damo/cv_ir_face-recognition-ood_rts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;More Information&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/modelscope/modelscope/&#34;&gt;ModelScope library&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‚Äã ModelScope Library provides the foundation for building the model-ecosystem of ModelScope, including the interface and implementation to integrate various models into ModelScope.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://modelscope.cn/docs/ModelScope%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5%E6%B5%81%E7%A8%8B%E6%A6%82%E8%A7%88&#34;&gt;Contribute models to ModelScope&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/modelscope/modelscope/raw/master/LICENSE&#34;&gt;Apache License (Version 2.0)&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pedroslopez/whatsapp-web.js</title>
    <updated>2023-08-27T01:49:12Z</updated>
    <id>tag:github.com,2023-08-27:/pedroslopez/whatsapp-web.js</id>
    <link href="https://github.com/pedroslopez/whatsapp-web.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/whatsapp-web.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&#34;&gt;&lt;img src=&#34;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&#34; alt=&#34;Depfu&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/WhatsApp_Web-2.2333.11-brightgreen.svg?sanitize=true&#34; alt=&#34;WhatsApp_Web 2.2333.11&#34;&gt; &lt;a href=&#34;https://discord.gg/H7DqQs4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/698610475432411196.svg?logo=discord&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; &#xA;&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; &#xA;&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wwebjs.dev/guide&#34;&gt;Guide / Getting Started&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.wwebjs.dev/&#34;&gt;Reference documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pedroslopez/whatsapp-web.js&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://npmjs.org/package/whatsapp-web.js&#34;&gt;npm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; &#xA;&lt;h2&gt;Example usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);&#xA;&#xA;const client = new Client();&#xA;&#xA;client.on(&#39;qr&#39;, (qr) =&amp;gt; {&#xA;    // Generate and scan this code with your phone&#xA;    console.log(&#39;QR RECEIVED&#39;, qr);&#xA;});&#xA;&#xA;client.on(&#39;ready&#39;, () =&amp;gt; {&#xA;    console.log(&#39;Client is ready!&#39;);&#xA;});&#xA;&#xA;client.on(&#39;message&#39;, msg =&amp;gt; {&#xA;    if (msg.body == &#39;!ping&#39;) {&#xA;        msg.reply(&#39;pong&#39;);&#xA;    }&#xA;});&#xA;&#xA;client.initialize();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&#34;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; &#xA;&lt;p&gt;For more information on saving and restoring sessions, check out the available &lt;a href=&#34;https://wwebjs.dev/guide/authentication.html&#34;&gt;Authentication Strategies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi Device&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send messages&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Receive messages&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send media (video)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ &lt;a href=&#34;https://wwebjs.dev/guide/handling-attachments.html#caveat-for-sending-videos-and-gifs&#34;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send stickers&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send contact cards&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send location&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send buttons&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send lists&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ (business accounts not supported)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Receive location&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message replies&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Join groups by invite&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Get invite for group&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add group participants&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kick group participants&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Promote/demote group participants&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mention users&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mute/unmute chats&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Block/unblock contacts&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Get contact info&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Get profile pictures&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Set user status message&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React to messages&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; &#xA;&lt;h2&gt;Supporting the project&lt;/h2&gt; &#xA;&lt;p&gt;You can support the maintainer of this project through the links below&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/pedroslopez&#34;&gt;Support via GitHub Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/psla/&#34;&gt;Support via PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://m.do.co/c/73f906a36ed4&#34;&gt;Sign up for DigitalOcean&lt;/a&gt; and get $200 in credit when you sign up (Referral)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&#34;https://whatsapp.com&#34;&gt;https://whatsapp.com&lt;/a&gt;. &#34;WhatsApp&#34; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LorisYounger/VPet</title>
    <updated>2023-08-27T01:49:12Z</updated>
    <id>tag:github.com,2023-08-27:/LorisYounger/VPet</id>
    <link href="https://github.com/LorisYounger/VPet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô® ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑÊ°åÂÆ†ËΩØ‰ª∂, ÂèØ‰ª•ÂÜÖÁΩÆÂà∞‰ªª‰ΩïWPFÂ∫îÁî®Á®ãÂ∫è&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VPet-Simulator&lt;/h1&gt; &#xA;&lt;p&gt;ÁÆÄ‰Ωì‰∏≠Êñá | &lt;a href=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô® ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑÊ°åÂÆ†ËΩØ‰ª∂, ÂèØ‰ª•ÂÜÖÁΩÆÂà∞‰ªª‰ΩïWPFÂ∫îÁî®Á®ãÂ∫è&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/%E4%B8%BB%E5%9B%BE.png&#34; alt=&#34;‰∏ªÂõæ&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ëé∑ÂèñËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô® &lt;a href=&#34;https://store.steampowered.com/app/1920960/VPet&#34;&gt;OnSteam(ÂÖçË¥π)&lt;/a&gt; Êàñ ÈÄöËøá&lt;a href=&#34;https://www.nuget.org/packages/VPet-Simulator.Core&#34;&gt;Nuget&lt;/a&gt;ÂÜÖÁΩÆÂà∞‰Ω†ÁöÑWPFÂ∫îÁî®Á®ãÂ∫è&lt;/p&gt; &#xA;&lt;h2&gt;ËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô® ËØ¶ÁªÜ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;p&gt;ËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®ÊòØ‰∏ÄÊ¨æÊ°åÂÆ†ËΩØ‰ª∂,ÊîØÊåÅÂêÑÁßç‰∫íÂä®ÊäïÂñÇÁ≠â. ÂºÄÊ∫êÂÖçË¥πÂπ∂‰∏îÊîØÊåÅÂàõÊÑèÂ∑•Âùä.&lt;/p&gt; &#xA;&lt;p&gt;ÂèçÊ≠£ÂÖçË¥π‰∏∫Âï•‰∏çËØïËØïÂë¢(&lt;/p&gt; &#xA;&lt;p&gt;ËØ•Ê∏∏Êàè‰∏∫ &lt;a href=&#34;https://store.steampowered.com/app/1352140/_/&#34;&gt;ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®&lt;/a&gt; ÂÜÖÁΩÆÊ°åÂÆ†(ÊïôÁ®ã)Á®ãÂ∫èÁã¨Á´ãËÄåÊù•, Â¶ÇÊûúÂñúÊ¨¢ÁöÑËØùÊ¨¢ËøéÊ∑ªÂä† &lt;a href=&#34;https://store.steampowered.com/app/1352140/_/&#34;&gt;ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®&lt;/a&gt; Ëá≥ÊÑøÊúõÂçï&lt;/p&gt; &#xA;&lt;h3&gt;Ë∂ÖÂ§öÁöÑ‰∫íÂä®ÂíåÂä®Áîª&lt;/h3&gt; &#xA;&lt;p&gt;Â§öËææ 32(Áßç) * 4(Áä∂ÊÄÅ) * 3(Á±ªÂûã) ÁßçÂä®Áîª, &lt;em&gt;Ê≥®:ÈÉ®ÂàÜÁßçÁ±ªÊ≤°ÊúâÁîüÁóÖÁä∂ÊÄÅÊàñÂæ™ÁéØÁ≠âÂÜÖÂÆπ,ÂÆûÈôÖÂä®ÁîªÊï∞Èáè‰ºöÂÅèÂ∞ë&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;‰∏Ä‰∫õÂä®Áîª‰æãÂ≠ê:&lt;/h4&gt; &#xA;&lt;h5&gt;Êë∏Â§¥&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/ss0.gif&#34; alt=&#34;ss0&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;ÊèêËµ∑&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/ss4.gif&#34; alt=&#34;ss4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/ss8.gif&#34; alt=&#34;ss4&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Áà¨Â¢ô&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/ss7.gif&#34; alt=&#34;ss7&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ÂÖçË¥π&lt;/h3&gt; &#xA;&lt;p&gt;ËØ•Ê∏∏ÊàèÂÆåÂÖ®ÂÖçË¥π! ÂèçÊ≠£‰∏çË¶ÅÈí±,ËØïËØï‰∏çË¶ÅÁ¥ß(&lt;br&gt; ËØ•Ê∏∏Êàè‰∏ªË¶ÅÁõÆÁöÑÊòØÂÆ£‰º†‰∏ã &lt;a href=&#34;https://store.steampowered.com/app/1352140/_/&#34;&gt;ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®&lt;/a&gt;, Ê∏∏Êàè‰∏≠QÁâà‰∫∫Áâ©‰∏∫ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®ÁöÑ‰∏ª‰∫∫ÂÖ¨.&lt;/p&gt; &#xA;&lt;h3&gt;ÂºÄÊ∫ê&lt;/h3&gt; &#xA;&lt;p&gt;ËØ•Ê∏∏ÊàèÂú®github‰∏äÂºÄÊ∫ê, Ê¨¢ËøéÊèêÂá∫Ëá™Â∑±ÁöÑÊÉ≥Ê≥ï,ÂàõÊÑèÊàñËÄÖÂèÇ‰∏éÂºÄÂèë!&lt;br&gt; ÊÇ®ËøòÂèØ‰ª•‰øÆÊîπ‰ª£Á†ÅÊù•Âà∂‰ΩúËá™Â∑±‰∏ìÂ±ûÁöÑÊ°åÂÆ†!(ËôΩÁÑ∂ËØ¥Â§ßÈÉ®ÂàÜÂÜÖÂÆπÈÉΩÊîØÊåÅÂàõÊÑèÂ∑•Âùä,‰∏çÈúÄË¶Å‰øÆÊîπ‰ª£Á†Å)&lt;br&gt; È°πÁõÆÂú∞ÂùÄ: &lt;a href=&#34;https://github.com/LorisYounger/VPet&#34;&gt;https://github.com/LorisYounger/VPet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ÊîØÊåÅÂàõÊÑèÂ∑•Âùä&lt;/h3&gt; &#xA;&lt;p&gt;ËØ•Ê∏∏ÊàèÊîØÊåÅÂàõÊÑèÂ∑•Âùä,ÊÇ®ÂèØ‰ª•Âà∂‰ΩúÂà´ÁöÑ‰∫∫Áâ©Ê°åÂÆ†Âä®ÁîªÊàñËÄÖ‰∫íÂä®,Âπ∂‰∏ä‰º†Ëá≥ÂàõÊÑèÂ∑•ÂùäÂàÜ‰∫´ÁªôÊõ¥Â§ö‰∫∫‰ΩøÁî®.&lt;/p&gt; &#xA;&lt;p&gt;ÂàõÊÑèÂ∑•ÂùäÊîØÊåÅÊ∑ªÂä†/‰øÆÊîπ‰ª•‰∏ãÂÜÖÂÆπ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê°åÂÆ†Âä®Áîª&lt;/li&gt; &#xA; &lt;li&gt;Áâ©ÂìÅ/È£üÁâ©/È•ÆÊñôÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;Ëá™ÂÆö‰πâÊ°åÂÆ†Â∑•‰Ωú&lt;/li&gt; &#xA; &lt;li&gt;ËØ¥ËØùÊñáÊú¨&lt;/li&gt; &#xA; &lt;li&gt;‰∏ªÈ¢ò&lt;/li&gt; &#xA; &lt;li&gt;‰ª£Á†ÅÊèí‰ª∂ - ÈÄöËøáÁºñÂÜô‰ª£Á†ÅÁªôÊ°åÂÆ†Ê∑ªÂä†ÂÜÖÂÆπ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ê∑ªÂä†Êñ∞ÁöÑÂä®ÁîªÈÄªËæë/ÊòæÁ§∫ÊñπÊ°à (eg: l2d/spine Á≠â)&lt;/li&gt; &#xA;   &lt;li&gt;Ê∑ªÂä†Êñ∞ÂäüËÉΩ (ÈóπÈíü/ËÆ∞‰∫ãÊùøÁ≠âÁ≠â)&lt;/li&gt; &#xA;   &lt;li&gt;Âá†‰πéÊó†ÊâÄ‰∏çËÉΩ, Á§∫‰æã‰æãÂ≠êÂèÇËßÅ &lt;a href=&#34;https://github.com/LorisYounger/VPet.Plugin.Demo&#34;&gt;VPet.Plugin.Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÂèçÈ¶à&amp;amp;Âª∫ËÆÆ&amp;amp;ËÅîÁ≥ªÊàë‰ª¨&lt;/h3&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÊúâÂª∫ËÆÆÊàñËÄÖÊÑèËßÅ,ÂèØ‰ª•Âú®SteamÂïÜÂ∫óËØÑËÆ∫/Á§æÂå∫,Github Issue,ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®Ë¥¥Âêß,ËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®MODDerÁæ§(907101442)ÊàñËÄÖÈÇÆ‰ª∂ËÅîÁ≥ªÊàë &lt;a href=&#34;mailto:service@exlb.net&#34;&gt;mailto:service@exlb.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ËΩØ‰ª∂ÁªìÊûÑ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;VPet-Simulator.Windows: ÈÄÇÁî®‰∫éÊ°åÈù¢Á´ØÁöÑËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Function ÂäüËÉΩÊÄß‰ª£Á†ÅÂ≠òÊîæ‰ΩçÁΩÆ&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;CoreMOD ModÁÆ°ÁêÜÁ±ª&lt;/li&gt; &#xA;     &lt;li&gt;MWController Á™ó‰ΩìÊéßÂà∂Âô®&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;*WinDesign Á™óÂè£ÂíåUIËÆæËÆ°&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;winBetterBuy Êõ¥Â•Ω‰π∞Á™óÂè£&lt;/li&gt; &#xA;     &lt;li&gt;winCGPTSetting ChatGPT ËÆæÁΩÆ&lt;/li&gt; &#xA;     &lt;li&gt;winSetting ËΩØ‰ª∂ËÆæÁΩÆ/MOD Á™óÂè£&lt;/li&gt; &#xA;     &lt;li&gt;winConsole ÂºÄÂèëÊéßÂà∂Âè∞&lt;/li&gt; &#xA;     &lt;li&gt;winGameSetting Ê∏∏ÊàèËÆæÁΩÆ&lt;/li&gt; &#xA;     &lt;li&gt;winReport ÂèçÈ¶à‰∏≠ÂøÉ&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;MainWindows ‰∏ªÁ™ó‰Ωì,Â≠òÊîæÂíåÂ±ïÁ§∫Core&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;PetHelper Âø´ÈÄüÂàáÊç¢Â∞èÊ†á&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VPet-Simulator.Tool: Êñπ‰æøÂà∂‰ΩúMODÁöÑÂ∑•ÂÖ∑(eg:ÂõæÁâáÂ∏ßÁîüÊàê)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VPet-Simulator.Core: ËΩØ‰ª∂Ê†∏ÂøÉ Êñπ‰æøÂÜÖÁΩÆÂà∞‰ªª‰ΩïWPFÂ∫îÁî®Á®ãÂ∫è(‰æãÂ¶Ç:VUP-Simulator)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Handle Êé•Âè£‰∏éÊéß‰ª∂ &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;IController Á™ó‰ΩìÊéßÂà∂Âô® (Ë∞ÉÁî®Áõ∏ÂÖ≥ÂäüËÉΩÂíåËÆæÁΩÆ,‰æãÂ¶ÇÁßªÂä®Âà∞‰æßËæπÁ≠â)&lt;/li&gt; &#xA;     &lt;li&gt;Function ÈÄöÁî®ÂäüËÉΩ&lt;/li&gt; &#xA;     &lt;li&gt;GameCore Ê∏∏ÊàèÊ†∏ÂøÉ,ÂåÖÂê´ÂêÑÁßçÊï∞ÊçÆÁ≠âÂÜÖÂÆπ&lt;/li&gt; &#xA;     &lt;li&gt;GameSave Ê∏∏ÊàèÂ≠òÊ°£&lt;/li&gt; &#xA;     &lt;li&gt;IFood È£üÁâ©/Áâ©ÂìÅÊé•Âè£&lt;/li&gt; &#xA;     &lt;li&gt;PetLoader ÂÆ†Áâ©ÂõæÂΩ¢Âä†ËΩΩÂô®&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Graph ÂõæÂΩ¢Ê∏≤Êüì &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;IGraph Âä®ÁîªÂü∫Êú¨Êé•Âè£&lt;/li&gt; &#xA;     &lt;li&gt;GraphCore Âä®ÁîªÊòæÁ§∫Ê†∏ÂøÉ&lt;/li&gt; &#xA;     &lt;li&gt;GraphHelper Âä®ÁîªÂ∏ÆÂä©Á±ª&lt;/li&gt; &#xA;     &lt;li&gt;GraphInfo Âä®Áîª‰ø°ÊÅØ&lt;/li&gt; &#xA;     &lt;li&gt;FoodAnimation È£üÁâ©Âä®Áîª ÊîØÊåÅÊòæÁ§∫Ââç‰∏≠Âêé3Â±ÇÂ§πÂøÉÂä®Áîª ‰∏ç‰∏ÄÂÆöÂè™Áî®‰∫éÈ£üÁâ©,Âè™ÊòØÂè´Ëøô‰∏™ÂêçÂ≠ó&lt;/li&gt; &#xA;     &lt;li&gt;PNGAnimation Ê°åÂÆ†Âä®ÊÄÅÂä®ÁîªÁªÑ‰ª∂&lt;/li&gt; &#xA;     &lt;li&gt;Picture Ê°åÂÆ†ÈùôÊÄÅÂä®ÁîªÁªÑ‰ª∂&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Display ÊòæÁ§∫ &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;basestyle/Theme Âü∫Êú¨È£éÊ†º‰∏ªÈ¢ò&lt;/li&gt; &#xA;     &lt;li&gt;Main.xaml Ê†∏ÂøÉÊòæÁ§∫ÈÉ®‰ª∂ &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;MainDisplay Ê†∏ÂøÉÊòæÁ§∫ÊñπÊ≥ï&lt;/li&gt; &#xA;       &lt;li&gt;MainLogic Ê†∏ÂøÉÊòæÁ§∫ÈÄªËæë&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;ToolBar ÁÇπÂáª‰∫∫Áâ©Êó∂ÂÄôÁöÑÂ∑•ÂÖ∑Ê†è&lt;/li&gt; &#xA;     &lt;li&gt;MessageBar ‰∫∫Áâ©ËØ¥ËØùÊó∂ÂÄôÁöÑËØ¥ËØùÊ†è&lt;/li&gt; &#xA;     &lt;li&gt;WorkTimer Â∑•‰ΩúÊó∂Èíü&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÂèÇ‰∏éÂºÄÂèë&lt;/h2&gt; &#xA;&lt;p&gt;Ê¨¢ËøéÂèÇ‰∏éËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®ÁöÑÂºÄÂèë! ‰∏∫‰øùËØÅ‰ª£Á†ÅÂèØÁª¥Êä§Â∫¶ÂíåÊ∏∏ÊàèÊÄß,Â¶ÇÊûúÊÉ≥Ë¶ÅÂºÄÂèëÊñ∞ÁöÑÂäüËÉΩ,ËØ∑ÂÖà&lt;a href=&#34;mailto:zoujin.dev@exlb.org&#34;&gt;ÈÇÆ‰ª∂ËÅîÁ≥ª&lt;/a&gt;ÊàñÂèë&lt;a href=&#34;https://github.com/LorisYounger/VPet/issues&#34;&gt;Issues&lt;/a&gt;ÊàëÊÉ≥Ë¶ÅÊ∑ªÂä†ÁöÑÂäüËÉΩ/Áé©Ê≥ï, ‰ª•Á°Æ‰øùËØ•ÂäüËÉΩ/Áé©Ê≥ïÈÄÇÁî®‰∫éËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®. ‰ª•ÂÖçÊú™Êù•Êèê‰∫§Êó∂Âõ†‰∏çÂêàÈÄÇË¢´Êãí(ËÄåÈÄ†Êàê‰ª£Á†ÅÊµ™Ë¥π)&lt;br&gt; Â¶ÇÊûúÊòØ‰øÆÂ§çÈîôËØØÊàñËÄÖBUG,Êó†ÈúÄËÅîÁ≥ªÊàë,‰øÆÂ•ΩÂêéÁõ¥Êé•PRÂç≥ÂèØ&lt;/p&gt; &#xA;&lt;p&gt;ÂΩìÊÉ≥Ê≥ïÈÄöËøáÂêé,ÊÇ®ÂèØ‰ª•ÈÄöËøá &lt;a href=&#34;https://github.com/LorisYounger/VPet/fork&#34;&gt;fork&lt;/a&gt; ÂäüËÉΩÊã∑Ë¥ù‰ª£Á†ÅËá≥Ëá™Â∑±ÁöÑgithub‰ª•Êñπ‰æøÁºñÂÜôËá™Â∑±ÁöÑ‰ª£Á†Å, ÁºñÂÜôÂÆåÊØïÂêéÈÄöËøá&lt;a href=&#34;https://github.com/LorisYounger/VPet/compare&#34;&gt;pull requests&lt;/a&gt; Êèê‰∫§&lt;br&gt; Â¶ÇÊûúÊÇ®ÊÉ≥Ê≥ïÊ≤°ÊúâË¢´ÈÄöËøá,‰πüÂèØ‰ª•Âè¶Ëµ∑ÁÇâÁÅ∂,ÂÜô‰∏™‰∏çÂêåÁâàÊú¨ÂäüËÉΩÁöÑÊ°åÂÆ†ËΩØ‰ª∂. ‰ΩÜÈúÄÈÅµÂÆà &lt;a href=&#34;https://github.com/LorisYounger/VPet/raw/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt; ‰∏é &lt;a href=&#34;https://github.com/LorisYounger/VPet#%E5%8A%A8%E7%94%BB%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E4%B8%8E%E6%8E%88%E6%9D%83&#34;&gt;Âä®ÁîªÁâàÊùÉÂ£∞Êòé‰∏éÊéàÊùÉ&lt;/a&gt; Ê≥®: ‰∏ÄËà¨Êù•ËÆ≤, Ê∑ªÂä†Êñ∞ÂäüËÉΩÈÉΩÂèØ‰ª•ÈÄöËøáÁºñÂÜô‰ª£Á†ÅÊèí‰ª∂MODÂÆûÁé∞, ËØ¶ÊÉÖËØ∑ÂèÇËßÅ &lt;a href=&#34;https://github.com/LorisYounger/VPet.Plugin.Demo&#34;&gt;VPet.Plugin.Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÊàëÂèØËÉΩ‰ºöÂØπÊÇ®ÁöÑÊèê‰∫§ÁöÑ‰ª£Á†ÅËøõË°å‰øÆÊîπ,Âà†ÂáèÁ≠â‰ª•Á°Æ‰øùËØ•ÂäüËÉΩ/Áé©Ê≥ïÈÄÇÁî®‰∫éËôöÊãüÊ°åÂÆ†Ê®°ÊãüÂô®.&lt;/p&gt; &#xA;&lt;p&gt;ÊÑüË∞¢‰ª•‰∏ãÂèÇ‰∏éÁöÑÂºÄÂèë‰∫∫Âëò(ÊåâË¥°ÁåÆÁ®ãÂ∫¶ÊéíÂ∫è)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Wreathlit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;windofxy&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;bwnotfound&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;aalichao&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dobby233Liu&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;eltociear&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;yupix&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÂíåÊèê‰æõÁ§æÂå∫ÁøªËØëÂíåÊõ¥Â§öÂÜÖÂÆπÁöÑÂàõÊÑèÂ∑•Âùä‰∫∫Âëò&lt;/p&gt; &#xA;&lt;h2&gt;Âä®ÁîªÁâàÊùÉÂ£∞Êòé‰∏éÊéàÊùÉ&lt;/h2&gt; &#xA;&lt;p&gt;Âú®github‰∏≠ &lt;a href=&#34;https://github.com/LorisYounger/VPet/tree/main/VPet-Simulator.Windows/mod/0000_core/pet/vup&#34;&gt;Ê°åÂÆ†Âä®ÁîªÊñá‰ª∂&lt;/a&gt; Âä®ÁîªÁâàÊùÉÂΩí &lt;a href=&#34;https://www.exlb.net/VUP-Simulator&#34;&gt;ËôöÊãü‰∏ªÊí≠Ê®°ÊãüÂô®Âà∂‰ΩúÁªÑ&lt;/a&gt;ÊâÄÊúâ, ÂΩì‰ΩøÁî®Êú¨Á±ªÂ∫ìÊó∂,ÊÇ®ÂèØËÉΩÈúÄË¶ÅËá™Ë°åÂáÜÂ§áÂä®ÁîªÊñá‰ª∂,ÊàñÈÅµÂæ™‰ª•‰∏ãÂçèËÆÆ&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;**Ê≥® ** Êú¨Âä®ÁîªÂ£∞Êòé‰ªÖÈôê‰∫éÊ°åÂÆ†Ëá™Â∏¶ÁöÑÂä®Áîª, Ëã•ÊúâÁîªÂ∏à/ÂºÄÂèëËÄÖÁîªËá™Â∑±ÁöÑÂä®ÁîªÈÄÇÈÖçÁªôÊ°åÂÆ†,Âπ∂‰∏çÈÅµÂæ™Áî®Êú¨Â£∞Êòé&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;ÈùûÂïÜÁî®Áî®ÈÄîÊéàÊùÉ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÈúÄË¶ÅÂêëÁî®Êà∑ÂëäÁü•Âä®ÁîªÊñá‰ª∂Êù•Ê∫êÂπ∂Êèê‰æõËÆøÈóÆ &lt;a href=&#34;https://github.com/LorisYounger/VPet&#34;&gt;ËØ•È°µÈù¢&lt;/a&gt; ÁöÑÈìæÊé•&lt;/li&gt; &#xA; &lt;li&gt;ÂΩìÊÇ®ÂÆåÊàê‰ª•‰∏äË¶ÅÊ±ÇÂêé,ÊÇ®ÂèØ‰ª•ÂÖçË¥π‰ΩøÁî®Âä®ÁîªÊñá‰ª∂&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÂïÜÁî®Áî®ÈÄîÊéàÊùÉ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ÈúÄÂºπÁ™óÂπ∂ÈÜíÁõÆÁöÑÂêëÁî®Êà∑ÂëäÁü•Âä®ÁîªÊñá‰ª∂Êù•Ê∫êÂπ∂Êèê‰æõËÆøÈóÆ &lt;a href=&#34;https://github.com/LorisYounger/VPet&#34;&gt;ËØ•È°µÈù¢&lt;/a&gt; ÁöÑÈìæÊé•&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®Áõ∏Â∫îÈ°µÈù¢(Áî®Êà∑ÂèØ‰ª•Âø´Êç∑ËÆøÈóÆ)ÂêëÁî®Êà∑ÂëäÁü•Âä®ÁîªÊñá‰ª∂Êù•Ê∫êÂπ∂Êèê‰æõËÆøÈóÆ &lt;a href=&#34;https://github.com/LorisYounger/VPet&#34;&gt;ËØ•È°µÈù¢&lt;/a&gt; ÁöÑÈìæÊé•&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Á¶ÅÊ≠¢ÈÄöËøáÂá∫ÂîÆÂä®ÁîªÊñá‰ª∂ËøõË°åÁõàÂà©&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ËØ∑&lt;a href=&#34;mailto:zoujin.dev@exlb.org&#34;&gt;ÈÇÆ‰ª∂ËÅîÁ≥ª&lt;/a&gt;Êàë&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÂΩìÊÇ®ÂÆåÊàê‰ª•‰∏äË¶ÅÊ±ÇÂêé,ÊÇ®ÂèØ‰ª•ÂÖçË¥π‰ΩøÁî®Âä®ÁîªÊñá‰ª∂&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÂàÜÂèëÂä®ÁîªÊñá‰ª∂&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÈúÄË¶ÅÂëäÁü•‰ª•‰∏äÊâÄÊúâÊéàÊùÉ‰ø°ÊÅØ&lt;/li&gt; &#xA; &lt;li&gt;ÈúÄË¶ÅÊèê‰æõËÆøÈóÆ &lt;a href=&#34;https://github.com/LorisYounger/VPet&#34;&gt;ËØ•È°µÈù¢&lt;/a&gt; ÁöÑÈìæÊé•&lt;/li&gt; &#xA; &lt;li&gt;ÂàÜÂèëÂä®ÁîªÊñá‰ª∂Êó∂Á¶ÅÊ≠¢‰ªª‰Ωï‰ªòË¥π/Êî∂Ë¥πË°å‰∏∫&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ê°åÈù¢Á´ØÈÉ®ÁΩ≤ÊñπÊ≥ï&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;‰∏ãËΩΩÊú¨È°πÁõÆ, ÈÄöËøáVisualStudioÊâìÂºÄ &lt;code&gt;VPet.sln&lt;/code&gt; Êñá‰ª∂&lt;/li&gt; &#xA; &lt;li&gt;Âú®ÁîüÊàêÊ†è‰∏≠, ÈÄâÊã© ‰ΩçÊï∞‰∏∫ &lt;code&gt;x64&lt;/code&gt; ÂíåÁîüÊàêÈ°πÁõÆ‰∏∫ &lt;code&gt;Vpet-Simulator.Windows&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/LorisYounger/VPet/main/README.assets/image-20230208004330895.png&#34; alt=&#34;image-20230208004330895&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÁÇπÂáªÂêØÂä®, Â¶ÇÊûú‰∏ÄÂàáÊ≠£Â∏∏Âàô‰ºöÊä•Èîô &lt;code&gt;Áº∫Â∞ëÊ®°ÁªÑCore,Êó†Ê≥ïÂêØÂä®Ê°åÂÆ†&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å &lt;code&gt;mklink.bat&lt;/code&gt;, Ëøô‰ºöËÆ©modÊñá‰ª∂ÈìæÊé•Âà∞ÁîüÊàê‰ΩçÁΩÆ&lt;/li&gt; &#xA; &lt;li&gt;ÂÜçÊ¨°ÁÇπÂáªÂêØÂä®Âç≥ÂèØÊ≠£Â∏∏ËøêË°å&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>