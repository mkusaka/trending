<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-22T01:36:19Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>home-assistant/core</title>
    <updated>2024-09-22T01:36:19Z</updated>
    <id>tag:github.com,2024-09-22:/home-assistant/core</id>
    <link href="https://github.com/home-assistant/core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üè° Open source home automation that puts local control and privacy first.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant |Chat Status|&lt;/h1&gt; &#xA;&lt;p&gt;Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;code&gt;home-assistant.io &amp;lt;https://home-assistant.io&amp;gt;&lt;/code&gt;__ for &lt;code&gt;a demo &amp;lt;https://demo.home-assistant.io&amp;gt;&lt;/code&gt;&lt;strong&gt;, &lt;code&gt;installation instructions &amp;lt;https://home-assistant.io/getting-started/&amp;gt;&lt;/code&gt;&lt;/strong&gt;, &lt;code&gt;tutorials &amp;lt;https://home-assistant.io/getting-started/automation/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;documentation &amp;lt;https://home-assistant.io/docs/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;This is a project of the &lt;code&gt;Open Home Foundation &amp;lt;https://www.openhomefoundation.org/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;|screenshot-states|&lt;/p&gt; &#xA;&lt;h2&gt;Featured integrations&lt;/h2&gt; &#xA;&lt;p&gt;|screenshot-integrations|&lt;/p&gt; &#xA;&lt;p&gt;The system is built using a modular approach so support for other devices or actions can be implemented easily. See also the &lt;code&gt;section on architecture &amp;lt;https://developers.home-assistant.io/docs/architecture_index/&amp;gt;&lt;/code&gt;__ and the &lt;code&gt;section on creating your own components &amp;lt;https://developers.home-assistant.io/docs/creating_component_index/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;If you run into issues while using Home Assistant or during development of a component, check the &lt;code&gt;Home Assistant help section &amp;lt;https://home-assistant.io/help/&amp;gt;&lt;/code&gt;__ of our website for further help and information.&lt;/p&gt; &#xA;&lt;p&gt;.. |Chat Status| image:: &lt;a href=&#34;https://img.shields.io/discord/330944238910963714.svg&#34;&gt;https://img.shields.io/discord/330944238910963714.svg&lt;/a&gt; :target: &lt;a href=&#34;https://www.home-assistant.io/join-chat/&#34;&gt;https://www.home-assistant.io/join-chat/&lt;/a&gt; .. |screenshot-states| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/dev/.github/assets/screenshot-states.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/dev/.github/assets/screenshot-states.png&lt;/a&gt; :target: &lt;a href=&#34;https://demo.home-assistant.io&#34;&gt;https://demo.home-assistant.io&lt;/a&gt; .. |screenshot-integrations| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/dev/.github/assets/screenshot-integrations.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/dev/.github/assets/screenshot-integrations.png&lt;/a&gt; :target: &lt;a href=&#34;https://home-assistant.io/integrations/&#34;&gt;https://home-assistant.io/integrations/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>krayin/laravel-crm</title>
    <updated>2024-09-22T01:36:19Z</updated>
    <id>tag:github.com,2024-09-22:/krayin/laravel-crm</id>
    <link href="https://github.com/krayin/laravel-crm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free &amp; Opensource Laravel CRM solution for SMEs and Enterprises for complete customer lifecycle management.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://krayincrm.com&#34;&gt;&lt;img src=&#34;https://bagisto.com/wp-content/uploads/2021/06/bagisto-logo.png&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/krayin/laravel-crm&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/krayin/laravel-crm/d/total.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/krayin/laravel-crm&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/krayin/laravel-crm/v/stable.svg?sanitize=true&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/krayin/laravel-crm&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/krayin/laravel-crm/license.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/krayin/temp-media/master/dashboard.png&#34; alt=&#34;enter image description here&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Topics&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#installation-and-configuration&#34;&gt;Installation &amp;amp; Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krayin/laravel-crm/master/#security-vulnerabilities&#34;&gt;Security Vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://krayincrm.com&#34;&gt;Krayin CRM&lt;/a&gt; is a hand tailored CRM framework built on some of the hottest opensource technologies such as &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; (a &lt;a href=&#34;https://secure.php.net/&#34;&gt;PHP&lt;/a&gt; framework) and &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue.js&lt;/a&gt; a progressive Javascript framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Free &amp;amp; Opensource Laravel CRM solution for SMEs and Enterprises for complete customer lifecycle management.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read our documentation: &lt;a href=&#34;https://devdocs.krayincrm.com/&#34;&gt;Krayin CRM Docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We also have a forum for any type of concerns, feature requests, or discussions. Please visit: &lt;a href=&#34;https://forums.krayincrm.com/&#34;&gt;Krayin CRM Forums&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Visit our live &lt;a href=&#34;https://demo.krayincrm.com&#34;&gt;Demo&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;a href=&#34;javascript:void();&#34;&gt; &lt;img class=&#34;flag-img&#34; src=&#34;https://raw.githubusercontent.com/krayin/temp-media/master/visit-our-live-demo.png&#34; alt=&#34;Chinese&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;It packs in lots of features that will allow your E-Commerce business to scale in no time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Descriptive and Simple Admin Panel.&lt;/li&gt; &#xA; &lt;li&gt;Admin Dashboard.&lt;/li&gt; &#xA; &lt;li&gt;Custom Attributes.&lt;/li&gt; &#xA; &lt;li&gt;Built on Modular Approach.&lt;/li&gt; &#xA; &lt;li&gt;Email parsing via Sendgrid.&lt;/li&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://krayincrm.com/features/&#34;&gt;these features and more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Developers&lt;/strong&gt;: Take advantage of two of the hottest frameworks used in this project -- Laravel and Vue.js -- both of which have been used in Krayin CRM.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;h4&gt;Krayin Documentation &lt;a href=&#34;https://devdocs.krayincrm.com&#34;&gt;https://devdocs.krayincrm.com&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SERVER&lt;/strong&gt;: Apache 2 or NGINX.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: 3 GB or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PHP&lt;/strong&gt;: 8.1 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For MySQL users&lt;/strong&gt;: 5.7.23 or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For MariaDB users&lt;/strong&gt;: 10.2.7 or Higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node&lt;/strong&gt;: 8.11.3 LTS or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Composer&lt;/strong&gt;: 2.5 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation and Configuration&lt;/h3&gt; &#xA;&lt;h5&gt;Execute these commands below, in order&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;composer create-project krayin/laravel-crm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Find &lt;strong&gt;.env&lt;/strong&gt; file in root directory and change the &lt;strong&gt;APP_URL&lt;/strong&gt; param to your &lt;strong&gt;domain&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Also, Configure the &lt;strong&gt;Mail&lt;/strong&gt; and &lt;strong&gt;Database&lt;/strong&gt; parameters inside &lt;strong&gt;.env&lt;/strong&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan krayin-crm:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To execute Krayin&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;h5&gt;On server:&lt;/h5&gt; &#xA;&lt;p&gt;Warning: Before going into production mode we recommend you uninstall developer dependencies. In order to do that, run the command below:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;composer install --no-dev&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;Open the specified entry point in your hosts file in your browser or make an entry in hosts file if not done.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;On local:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan route:clear&#xA;php artisan serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to log in as admin:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;http(s)://example.com/admin/login&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;email:admin@example.com&#xA;password:admin123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;WhatsApp CRM Integration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://krayincrm.com/extensions/krayin-crm-whatsapp-extension/&#34;&gt;Krayin CRM WhatsApp&lt;/a&gt; Extension enables the store administrator to generate leads via their WhatsApp number.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/krayin/temp-media/master/krayin-crm-whatsapp-integration.png&#34; alt=&#34;enter image description here&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VoIP CRM Integration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://krayincrm.com/extensions/krayin-crm-voip/&#34;&gt;Krayin CRM VoIP&lt;/a&gt; extension allows the user to make Trunk calls over a broadband Internet connection and the user can also perform Inbound routes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/krayin/temp-media/master/krayin-voip.png&#34; alt=&#34;enter image description here&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Krayin CRM is a truly opensource CRM framework which will always be free under the &lt;a href=&#34;https://github.com/krayin/laravel-crm/raw/master/LICENSE.txt&#34;&gt;OSL-3.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Security Vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;Please don&#39;t disclose security vulnerabilities publicly. If you find any security vulnerability in Krayin CRM then please email us: &lt;a href=&#34;mailto:sales@krayincrm.com&#34;&gt;sales@krayincrm.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gojue/ecapture</title>
    <updated>2024-09-22T01:36:19Z</updated>
    <id>tag:github.com,2024-09-22:/gojue/ecapture</id>
    <link href="https://github.com/gojue/ecapture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Capturing SSL/TLS plaintext without a CA certificate using eBPF. Supported on Linux/Android kernels for amd64/arm64.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/ecapture-logo-400x400.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/README_CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | English | &lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/README_JA.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gojue/ecapture&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/gojue/ecapture.svg?label=Stars&amp;amp;logo=github&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/gojue/ecapture?label=Forks&amp;amp;logo=github&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/actions/workflows/code-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/gojue/ecapture/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/gojue/ecapture?display_name=tag&amp;amp;include_prereleases&amp;amp;sort=semver&#34; alt=&#34;Github Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;eCapture(ÊóÅËßÇËÄÖ): capture SSL/TLS text content without a CA certificate using eBPF.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Supports Linux/Android kernel versions x86_64 4.18 and above, &lt;strong&gt;aarch64 5.5&lt;/strong&gt; and above. Need ROOT permission. Does not support Windows and macOS system.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- MarkdownTOC autolink=&#34;true&#34; --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#download&#34;&gt;Download&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#elf-binary-file&#34;&gt;ELF binary file&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#docker-image&#34;&gt;Docker image&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#capture-openssl-text-content&#34;&gt;Capture openssl text content.&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#modules&#34;&gt;Modules&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#openssl-module&#34;&gt;OpenSSL Module&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#gotls-module&#34;&gt;GoTLS Module&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#bash-module&#34;&gt;Other Modules&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#videos&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#compilation&#34;&gt;Compilation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /MarkdownTOC --&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SSL/TLS plaintext capture, support openssl\libressl\boringssl\gnutls\nspr(nss) libraries.&lt;/li&gt; &#xA; &lt;li&gt;GoTLS plaintext support go tls library, which refers to encrypted communication in https/tls programs written in the golang language.&lt;/li&gt; &#xA; &lt;li&gt;bash audit, capture bash command for Host Security Audit.&lt;/li&gt; &#xA; &lt;li&gt;mysql query SQL audit, support mysqld 5.6\5.7\8.0, and mariadDB.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/ecapture-help-v0.7.4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;h3&gt;ELF binary file&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; support Linux/Android x86_64/aarch64.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Download ELF zip file &lt;a href=&#34;https://github.com/gojue/ecapture/releases&#34;&gt;release&lt;/a&gt; , unzip and use by command &lt;code&gt;sudo ecapture --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker image&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Linux only.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# pull docker image&#xA;docker pull gojue/ecapture:latest&#xA;# run&#xA;docker run --rm --privileged=true --net=host -v ${HOST_PATH}:${CONTAINER_PATH} gojue/ecapture ARGS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://hub.docker.com/r/gojue/ecapture&#34;&gt;Docker Hub&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Capture openssl text content.&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture tls&#xA;2024-09-15T11:51:31Z INF AppName=&#34;eCapture(ÊóÅËßÇËÄÖ)&#34;&#xA;2024-09-15T11:51:31Z INF HomePage=https://ecapture.cc&#xA;2024-09-15T11:51:31Z INF Repository=https://github.com/gojue/ecapture&#xA;2024-09-15T11:51:31Z INF Author=&#34;CFC4N &amp;lt;cfc4ncs@gmail.com&amp;gt;&#34;&#xA;2024-09-15T11:51:31Z INF Description=&#34;Capturing SSL/TLS plaintext without a CA certificate using eBPF. Supported on Linux/Android kernels for amd64/arm64.&#34;&#xA;2024-09-15T11:51:31Z INF Version=linux_arm64:0.8.6-20240915-d87ae48:5.15.0-113-generic&#xA;2024-09-15T11:51:31Z INF Listen=localhost:28256&#xA;2024-09-15T11:51:31Z INF eCapture running logs logger=&#xA;2024-09-15T11:51:31Z INF the file handler that receives the captured event eventCollector=&#xA;2024-09-15T11:51:31Z INF listen=localhost:28256&#xA;2024-09-15T11:51:31Z INF https server starting...You can update the configuration file via the HTTP interface.&#xA;2024-09-15T11:51:31Z WRN ========== module starting. ==========&#xA;2024-09-15T11:51:31Z INF Kernel Info=5.15.152 Pid=233698&#xA;2024-09-15T11:51:31Z INF BTF bytecode mode: CORE. btfMode=0&#xA;2024-09-15T11:51:31Z INF master key keylogger has been set. eBPFProgramType=Text keylogger=&#xA;2024-09-15T11:51:31Z INF module initialization. isReload=false moduleName=EBPFProbeOPENSSL&#xA;2024-09-15T11:51:31Z INF Module.Run()&#xA;2024-09-15T11:51:31Z WRN OpenSSL/BoringSSL version not found from shared library file, used default version OpenSSL Version=linux_default_3_0&#xA;2024-09-15T11:51:31Z INF Hook masterKey function ElfType=2 Functions=[&#34;SSL_get_wbio&#34;,&#34;SSL_in_before&#34;,&#34;SSL_do_handshake&#34;] binrayPath=/usr/lib/aarch64-linux-gnu/libssl.so.3&#xA;2024-09-15T11:51:31Z INF target all process.&#xA;2024-09-15T11:51:31Z INF target all users.&#xA;2024-09-15T11:51:31Z INF setupManagers eBPFProgramType=Text&#xA;2024-09-15T11:51:31Z INF BPF bytecode file is matched. bpfFileName=user/bytecode/openssl_3_0_0_kern_core.o&#xA;2024-09-15T11:51:32Z INF perfEventReader created mapSize(MB)=4&#xA;2024-09-15T11:51:32Z INF perfEventReader created mapSize(MB)=4&#xA;2024-09-15T11:51:32Z INF module started successfully. isReload=false moduleName=EBPFProbeOPENSSL&#xA;2024-09-15T11:51:53Z ??? UUID:233851_233851_curl_5_1_172.16.71.1:51837, Name:HTTP2Request, Type:2, Length:304&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;SETTINGS&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;WINDOW_UPDATE&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;HEADERS&#xA;header field &#34;:method&#34; = &#34;GET&#34;&#xA;header field &#34;:path&#34; = &#34;/&#34;&#xA;header field &#34;:scheme&#34; = &#34;https&#34;&#xA;header field &#34;:authority&#34; = &#34;google.com&#34;&#xA;header field &#34;user-agent&#34; = &#34;curl/7.81.0&#34;&#xA;header field &#34;accept&#34; = &#34;*/*&#34;&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;SETTINGS&#xA;&#xA;2024-09-15T11:51:53Z ??? UUID:233851_233851_curl_5_0_172.16.71.1:51837, Name:HTTP2Response, Type:4, Length:1160&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;SETTINGS&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;WINDOW_UPDATE&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;SETTINGS&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;HEADERS&#xA;header field &#34;:status&#34; = &#34;301&#34;&#xA;header field &#34;location&#34; = &#34;https://www.google.com/&#34;&#xA;header field &#34;content-type&#34; = &#34;text/html; charset=UTF-8&#34;&#xA;header field &#34;content-security-policy-report-only&#34; = &#34;object-src &#39;none&#39;;base-uri &#39;self&#39;;script-src &#39;nonce-qvZZ0XreBfeqRnUEV1WoYw&#39; &#39;strict-dynamic&#39; &#39;report-sample&#39; &#39;unsafe-eval&#39; &#39;unsafe-inline&#39; https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp&#34;&#xA;header field &#34;date&#34; = &#34;Sun, 15 Sep 2024 11:51:52 GMT&#34;&#xA;header field &#34;expires&#34; = &#34;Tue, 15 Oct 2024 11:51:52 GMT&#34;&#xA;header field &#34;cache-control&#34; = &#34;public, max-age=2592000&#34;&#xA;header field &#34;server&#34; = &#34;gws&#34;&#xA;header field &#34;content-length&#34; = &#34;220&#34;&#xA;header field &#34;x-xss-protection&#34; = &#34;0&#34;&#xA;header field &#34;x-frame-options&#34; = &#34;SAMEORIGIN&#34;&#xA;header field &#34;alt-svc&#34; = &#34;h3=\&#34;:443\&#34;; ma=2592000,h3-29=\&#34;:443\&#34;; ma=2592000&#34;&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;PING&#xA;&#xA;Frame Type&#x9;=&amp;gt;&#x9;DATA&#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html;charset=utf-8&#34;&amp;gt;&#xA;&amp;lt;TITLE&amp;gt;301 Moved&amp;lt;/TITLE&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;lt;BODY&amp;gt;&#xA;&amp;lt;H1&amp;gt;301 Moved&amp;lt;/H1&amp;gt;&#xA;The document has moved&#xA;&amp;lt;A HREF=&#34;https://www.google.com/&#34;&amp;gt;here&amp;lt;/A&amp;gt;.&#xA;&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;The eCapture tool comprises 8 modules that respectively support plaintext capture for TLS/SSL encryption libraries like OpenSSL, GnuTLS, NSPR, BoringSSL, and GoTLS. Additionally, it facilitates software audits for Bash, MySQL, and PostgreSQL applications.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bash capture bash command&lt;/li&gt; &#xA; &lt;li&gt;gnutls capture gnutls text content without CA cert for gnutls libraries.&lt;/li&gt; &#xA; &lt;li&gt;gotls Capturing plaintext communication from Golang programs encrypted with TLS/HTTPS.&lt;/li&gt; &#xA; &lt;li&gt;mysqld capture sql queries from mysqld 5.6/5.7/8.0 .&lt;/li&gt; &#xA; &lt;li&gt;nss capture nss/nspr encrypted text content without CA cert for nss/nspr libraries.&lt;/li&gt; &#xA; &lt;li&gt;postgres capture sql queries from postgres 10+.&lt;/li&gt; &#xA; &lt;li&gt;tls use to capture tls/ssl text content without CA cert. (Support openssl 1.0.x/1.1.x/3.0.x or newer). You can use &lt;code&gt;ecapture -h&lt;/code&gt; to view the list of subcommands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OpenSSL Module&lt;/h3&gt; &#xA;&lt;p&gt;eCapture search &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; file default, to search load directories of &lt;code&gt;SO&lt;/code&gt; file, and search &lt;code&gt;openssl&lt;/code&gt; shard libraries location. or you can use &lt;code&gt;--libssl&lt;/code&gt; flag to set shard library path.&lt;/p&gt; &#xA;&lt;p&gt;If target program is compile statically, you can set program path as &lt;code&gt;--libssl&lt;/code&gt; flag value directly„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;The OpenSSL module supports three capture modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pcap&lt;/code&gt;/&lt;code&gt;pcapng&lt;/code&gt; mode stores captured plaintext data in &lt;code&gt;pcap-NG&lt;/code&gt; format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;keylog&lt;/code&gt;/&lt;code&gt;key&lt;/code&gt; mode saves the TLS handshake keys to a file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;text&lt;/code&gt; mode directly captures plaintext data, either outputting to a specified file or printing to the command line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Pcap Mode&lt;/h4&gt; &#xA;&lt;p&gt;Supported TLS encrypted http &lt;code&gt;1.0/1.1/2.0&lt;/code&gt; over TCP, and http3 &lt;code&gt;QUIC&lt;/code&gt; protocol over UDP. You can specify &lt;code&gt;-m pcap&lt;/code&gt; or &lt;code&gt;-m pcapng&lt;/code&gt; and use it in conjunction with &lt;code&gt;--pcapfile&lt;/code&gt; and &lt;code&gt;-i&lt;/code&gt; parameters. The default value for &lt;code&gt;--pcapfile&lt;/code&gt; is &lt;code&gt;ecapture_openssl.pcapng&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture tls -m pcap -w ecap.pcapng -i ens160&#xA;2024-09-15T06:54:12Z INF AppName=&#34;eCapture(ÊóÅËßÇËÄÖ)&#34;&#xA;2024-09-15T06:54:12Z INF HomePage=https://ecapture.cc&#xA;2024-09-15T06:54:12Z INF Repository=https://github.com/gojue/ecapture&#xA;2024-09-15T06:54:12Z INF Author=&#34;CFC4N &amp;lt;cfc4ncs@gmail.com&amp;gt;&#34;&#xA;2024-09-15T06:54:12Z INF Description=&#34;Capturing SSL/TLS plaintext without a CA certificate using eBPF. Supported on Linux/Android kernels for amd64/arm64.&#34;&#xA;2024-09-15T06:54:12Z INF Version=linux_arm64:0.8.6-20240915-d87ae48:5.15.0-113-generic&#xA;2024-09-15T06:54:12Z INF Listen=localhost:28256&#xA;2024-09-15T06:54:12Z INF eCapture running logs logger=&#xA;2024-09-15T06:54:12Z INF the file handler that receives the captured event eventCollector=&#xA;2024-09-15T06:54:12Z WRN ========== module starting. ==========&#xA;2024-09-15T06:54:12Z INF Kernel Info=5.15.152 Pid=230440&#xA;2024-09-15T06:54:12Z INF BTF bytecode mode: CORE. btfMode=0&#xA;2024-09-15T06:54:12Z INF listen=localhost:28256&#xA;2024-09-15T06:54:12Z INF module initialization. isReload=false moduleName=EBPFProbeOPENSSL&#xA;2024-09-15T06:54:12Z INF Module.Run()&#xA;2024-09-15T06:54:12Z INF https server starting...You can update the configuration file via the HTTP interface.&#xA;2024-09-15T06:54:12Z WRN OpenSSL/BoringSSL version not found from shared library file, used default version OpenSSL Version=linux_default_3_0&#xA;2024-09-15T06:54:12Z INF HOOK type:Openssl elf ElfType=2 IFindex=2 IFname=ens160 PcapFilter= binrayPath=/usr/lib/aarch64-linux-gnu/libssl.so.3&#xA;2024-09-15T06:54:12Z INF Hook masterKey function Functions=[&#34;SSL_get_wbio&#34;,&#34;SSL_in_before&#34;,&#34;SSL_do_handshake&#34;]&#xA;2024-09-15T06:54:12Z INF target all process.&#xA;2024-09-15T06:54:12Z INF target all users.&#xA;2024-09-15T06:54:12Z INF setupManagers eBPFProgramType=PcapNG&#xA;2024-09-15T06:54:12Z INF BPF bytecode file is matched. bpfFileName=user/bytecode/openssl_3_0_0_kern_core.o&#xA;2024-09-15T06:54:12Z INF packets saved into pcapng file. pcapng path=/home/ecapture/ecap.pcapng&#xA;2024-09-15T06:54:12Z INF perfEventReader created mapSize(MB)=4&#xA;2024-09-15T06:54:12Z INF perfEventReader created mapSize(MB)=4&#xA;2024-09-15T06:54:12Z INF module started successfully. isReload=false moduleName=EBPFProbeOPENSSL&#xA;2024-09-15T06:54:14Z INF packets saved into pcapng file. count=4&#xA;2024-09-15T06:54:16Z INF non-TLSv1.3 cipher suite found CLientRandom=f08e8d784962d1693c042f9fe266345507ccfaba58b823904a357f30dbfa1e71 CipherId=0&#xA;2024-09-15T06:54:16Z INF non-TLSv1.3 cipher suite found CLientRandom=f08e8d784962d1693c042f9fe266345507ccfaba58b823904a357f30dbfa1e71 CipherId=0&#xA;2024-09-15T06:54:16Z INF packets saved into pcapng file. count=183&#xA;2024-09-15T06:54:16Z INF CLIENT_RANDOM save success CLientRandom=f08e8d784962d1693c042f9fe266345507ccfaba58b823904a357f30dbfa1e71 TlsVersion=TLS1_2_VERSION bytes=176&#xA;2024-09-15T06:54:18Z INF packets saved into pcapng file. count=65&#xA;^C2024-09-15T06:54:18Z INF module close.&#xA;2024-09-15T06:54:18Z INF packets saved into pcapng file. count=3&#xA;2024-09-15T06:54:18Z INF packets saved into pcapng file. count=255&#xA;2024-09-15T06:54:18Z INF Module closed,message recived from Context&#xA;2024-09-15T06:54:18Z INF iModule module close&#xA;2024-09-15T06:54:18Z INF bye bye.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Used &lt;code&gt;Wireshark&lt;/code&gt; to open &lt;code&gt;ecap.pcapng&lt;/code&gt; file to view the plaintext data packets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture tls -m pcap -i eth0 --pcapfile=ecapture.pcapng tcp port 443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command saves captured plaintext data packets as a pcapng file, which can be viewed using &lt;code&gt;Wireshark&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Keylog Mode&lt;/h4&gt; &#xA;&lt;p&gt;You can specify &lt;code&gt;-m keylog&lt;/code&gt; or &lt;code&gt;-m key&lt;/code&gt; and use it in conjunction with the &lt;code&gt;--keylogfile&lt;/code&gt; parameter, which defaults to &lt;code&gt;ecapture_masterkey.log&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The captured OpenSSL TLS &lt;code&gt;Master Secret&lt;/code&gt; information is saved to &lt;code&gt;--keylogfile&lt;/code&gt;. You can also enable &lt;code&gt;tcpdump&lt;/code&gt; packet capture and then use &lt;code&gt;Wireshark&lt;/code&gt; to open the file and set the &lt;code&gt;Master Secret&lt;/code&gt; path to view plaintext data packets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture tls -m keylog -keylogfile=openssl_keylog.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also directly use the &lt;code&gt;tshark&lt;/code&gt; software for real-time decryption and display:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tshark -o tls.keylog_file:ecapture_masterkey.log -Y http -T fields -e http.file_data -f &#34;port 443&#34; -i eth0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Text Mode&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo ecapture tls -m text&lt;/code&gt; will output all plaintext data packets. (Starting from v0.7.0, it no longer captures SSLKEYLOG information.)&lt;/p&gt; &#xA;&lt;h3&gt;GoTLS Module&lt;/h3&gt; &#xA;&lt;p&gt;Similar to the OpenSSL module.&lt;/p&gt; &#xA;&lt;h4&gt;check your server BTF configÔºö&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cfc4n@vm-server:~$# uname -r&#xA;4.18.0-305.3.1.el8.x86_64&#xA;cfc4n@vm-server:~$# cat /boot/config-`uname -r` | grep CONFIG_DEBUG_INFO_BTF&#xA;CONFIG_DEBUG_INFO_BTF=y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;gotls command&lt;/h4&gt; &#xA;&lt;p&gt;capture tls text context.&lt;/p&gt; &#xA;&lt;p&gt;Step 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture gotls --elfpath=/home/cfc4n/go_https_client --hex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/home/cfc4n/go_https_client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;more help&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ecapture gotls -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Modules&lt;/h3&gt; &#xA;&lt;p&gt;such as &lt;code&gt;bash\mysqld\postgres&lt;/code&gt; modules, you can use &lt;code&gt;ecapture -h&lt;/code&gt; to view the list of subcommands.&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Youtube video: &lt;a href=&#34;https://www.youtube.com/watch?v=CoDIjEQCvvA&#34; title=&#34;eCapture User Manual&#34;&gt;How to use eCapture v0.1.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@cfc4ncs/ecapture-supports-capturing-plaintext-of-golang-tls-https-traffic-f16874048269&#34;&gt;eCapture:supports capturing plaintext of Golang TLS/HTTPS traffic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/gojue/ecapture&#34;&gt;&lt;img src=&#34;https://starchart.cc/gojue/ecapture.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h1&gt;Compilation&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/COMPILATION.md&#34;&gt;COMPILATION&lt;/a&gt; for details on compiling the eCapture source code.&lt;/p&gt;</summary>
  </entry>
</feed>