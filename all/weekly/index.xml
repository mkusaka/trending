<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:00:23Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gz-yami/mall4cloud</title>
    <updated>2022-07-17T02:00:23Z</updated>
    <id>tag:github.com,2022-07-17:/gz-yami/mall4cloud</id>
    <link href="https://github.com/gz-yami/mall4cloud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⭐️⭐️⭐️ Springcloud商城 O2O商城 小程序商城 PC商城 H5商城 APP商城 Java商城 分销商城 多用户商城 uniapp商城 微服务商城&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211203094919.png&#34; alt=&#34;输入图片说明&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个基于Spring Cloud、Nacos、Seata、Mysql、Redis、RocketMQ、canal、ElasticSearch、minio的微服务B2B2C电商商城系统，采用主流的互联网技术架构、全新的UI设计、支持集群部署、服务注册和发现以及拥有完整的订单流程等，代码完全开源，没有任何二次封装，是一个非常适合二次开发的电商平台系统。&lt;/p&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;本商城致力于为中大型企业打造一个功能完整、易于维护的微服务B2B2C电商商城系统，采用主流微服务技术实现。后台管理系统包含平台管理，店铺管理、商品管理、订单管理、规格管理、权限管理、资源管理等模块。&lt;/p&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;这代码有没有文档呀？ 当然有啦，你已经下载了，在doc这个文件夹上，实在不知道，我就给链接出来咯：&lt;/p&gt; &#xA;&lt;p&gt;gitee：&lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud/tree/master/doc&#34;&gt;https://gitee.com/gz-yami/mall4cloud/tree/master/doc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目是一个极度遵守阿里巴巴代码规约的项目，以下是代码规约扫描结果&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/%E9%98%BF%E9%87%8C%E4%BB%A3%E7%A0%81%E8%A7%84%E7%BA%A6%E6%89%AB%E6%8F%8F%E7%BB%93%E6%9E%9C.png&#34; alt=&#34;阿里代码规约扫描结果&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;具体目录结构和代码规范，可以查看 &lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud/tree/master/doc/%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84&#34;&gt;https://gitee.com/gz-yami/mall4cloud/tree/master/doc/%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;授权&lt;/h2&gt; &#xA;&lt;p&gt;除开源版本外，本商城还提供商业版本的商城，欲知详情，请访问官网。&lt;/p&gt; &#xA;&lt;p&gt;商城官网：&lt;a href=&#34;https://www.mall4j.com&#34;&gt;https://www.mall4j.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;商城使用 AGPLv3 开源，请遵守 AGPLv3 的相关条款，或者联系作者获取商业授权(&lt;a href=&#34;https://www.mall4j.com&#34;&gt;https://www.mall4j.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;项目链接&lt;/h2&gt; &#xA;&lt;p&gt;JAVA后台：&lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud&#34;&gt;https://gitee.com/gz-yami/mall4cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;平台端：&lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud-platform&#34;&gt;https://gitee.com/gz-yami/mall4cloud-platform&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;商家端：&lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud-multishop&#34;&gt;https://gitee.com/gz-yami/mall4cloud-multishop&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;uni-app：&lt;a href=&#34;https://gitee.com/gz-yami/mall4cloud-uniapp&#34;&gt;https://gitee.com/gz-yami/mall4cloud-uniapp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;演示地址&lt;/h2&gt; &#xA;&lt;p&gt;商业版演示地址：&lt;/p&gt; &#xA;&lt;p&gt;pc端：&lt;a href=&#34;https://cloud-pc.mall4j.com&#34;&gt;https://cloud-pc.mall4j.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;H5端：&lt;a href=&#34;https://h5.mall4j.com/cloud&#34;&gt;https://h5.mall4j.com/cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;小程序：微信搜索 “mall4j微服务版”&lt;/p&gt; &#xA;&lt;h2&gt;目录结构规范&lt;/h2&gt; &#xA;&lt;p&gt;我们也有自己的目录结构&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gitee.com/gz-yami/mall4cloud/raw/master/doc/img/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%92%8C%E8%A7%84%E8%8C%83/%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%82.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VO（View Object）：显示层对象，通常是 Web 向模板渲染引擎层传输的对象。&lt;/li&gt; &#xA; &lt;li&gt;DTO（Data Transfer Object）：数据传输对象，前端像后台进行传输的对象，类似于param。&lt;/li&gt; &#xA; &lt;li&gt;BO（Business Object）：业务对象，内部业务对象，只在内部传递，不对外进行传递。&lt;/li&gt; &#xA; &lt;li&gt;Model：模型层，此对象与数据库表结构一一对应，通过 Mapper 层向上传输数据源对象。&lt;/li&gt; &#xA; &lt;li&gt;Controller：主要是对外部访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。为了简单起见，一些与事务无关的代码也在这里编写。&lt;/li&gt; &#xA; &lt;li&gt;FeignClient：由于微服务之间存在互相调用，这里是内部请求的接口。&lt;/li&gt; &#xA; &lt;li&gt;Controller：主要是对内部访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。为了简单起见，一些与事务无关的代码也在这里编写。&lt;/li&gt; &#xA; &lt;li&gt;Service 层：相对具体的业务逻辑服务层。&lt;/li&gt; &#xA; &lt;li&gt;Manager 层：通用业务处理层，它有如下特征： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1） 对第三方平台封装的层，预处理返回结果及转化异常信息，适配上层接口。&lt;/li&gt; &#xA;   &lt;li&gt;2） 对 Service 层通用能力的下沉，如缓存方案、中间件通用处理。&lt;/li&gt; &#xA;   &lt;li&gt;3） 与 DAO 层交互，对多个 DAO 的组合复用。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mapper持久层：数据访问层，与底层 MySQL进行数据交互。&lt;/li&gt; &#xA; &lt;li&gt;Listener：监听 &lt;code&gt;RocketMQ&lt;/code&gt; 进行处理，有时候会监听&lt;code&gt;easyexcel&lt;/code&gt;相关数据。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;关于&lt;code&gt;FeignClient&lt;/code&gt;，由于微服务之间存在互相调用，&lt;code&gt;Feign&lt;/code&gt; 是http协议，理论上是为了解耦，而实际上提供方接口进行修改，调用方却没有进行修改的时候，会造成异常，所以我们抽取出来。还有就是对内暴露的接口，是很多地方都公用的，所以我们还将接口抽取了出了一个模块，方便引用。可以看到&lt;code&gt;mall4cloud-api&lt;/code&gt;这个模块下是所有对内&lt;code&gt;feign&lt;/code&gt;接口的信息。&lt;/p&gt; &#xA;&lt;h2&gt;目录结构&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mall4cloud&#xA;├─mall4cloud-api -- 内网接口&#xA;│  ├─mall4cloud-api-auth  -- 授权对内接口&#xA;│  ├─mall4cloud-api-biz  -- biz对内接口&#xA;│  ├─mall4cloud-api-leaf  -- 美团分布式id生成接口&#xA;│  ├─mall4cloud-api-multishop  -- 店铺对内接口&#xA;│  ├─mall4cloud-api-order  -- 订单对内接口&#xA;│  ├─mall4cloud-api-platform  -- 平台对内接口&#xA;│  ├─mall4cloud-api-product  -- 商品对内接口&#xA;│  ├─mall4cloud-api-rbac  -- 用户角色权限对内接口&#xA;│  ├─mall4cloud-api-search  -- 搜索对内接口&#xA;│  └─mall4cloud-api-user  -- 用户对内接口&#xA;├─mall4cloud-auth  -- 授权校验模块&#xA;├─mall4cloud-biz  -- mall4cloud 业务代码。如图片上传/短信等&#xA;├─mall4cloud-common -- 一些公共的方法&#xA;│  ├─mall4cloud-common-cache  -- 缓存相关公共代码&#xA;│  ├─mall4cloud-common-core  -- 公共模块核心（公共中的公共代码）&#xA;│  ├─mall4cloud-common-database  -- 数据库连接相关公共代码&#xA;│  ├─mall4cloud-common-order  -- 订单相关公共代码&#xA;│  ├─mall4cloud-common-product  -- 商品相关公共代码&#xA;│  ├─mall4cloud-common-rocketmq  -- rocketmq相关公共代码&#xA;│  └─mall4cloud-common-security  -- 安全相关公共代码&#xA;├─mall4cloud-gateway  -- 网关&#xA;├─mall4cloud-leaf  -- 基于美团leaf的生成id服务&#xA;├─mall4cloud-multishop  -- 商家端&#xA;├─mall4cloud-order  -- 订单服务&#xA;├─mall4cloud-payment  -- 支付服务&#xA;├─mall4cloud-platform  -- 平台端&#xA;├─mall4cloud-product  -- 商品服务&#xA;├─mall4cloud-rbac  -- 用户角色权限模块&#xA;├─mall4cloud-search  -- 搜索模块&#xA;└─mall4cloud-user  -- 用户服务&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;技术选型&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6.png&#34; alt=&#34;技术框架&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;系统架构图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/%E6%9E%B6%E6%9E%84%E5%9B%BE.png&#34; alt=&#34;架构图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;商城部署后 API 地址&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;服务&lt;/th&gt; &#xA;   &lt;th&gt;地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-gatway 网关服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-auth 授权校验服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9101&#34;&gt;http://127.0.0.1:9101&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-biz 业务代码服务（如图片上传/短信等）&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-leaf 基于美团leaf的生成id服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9100&#34;&gt;http://127.0.0.1:9100&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-multishop 商家服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9103&#34;&gt;http://127.0.0.1:9103&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-order 订单服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9106&#34;&gt;http://127.0.0.1:9106&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-payment 支付服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9113&#34;&gt;http://127.0.0.1:9113&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-product 商品服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9112&#34;&gt;http://127.0.0.1:9112&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-rbac 用户角色服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9102&#34;&gt;http://127.0.0.1:9102&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-search 搜索服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9108&#34;&gt;http://127.0.0.1:9108&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mall4cloud-user 用户服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://127.0.0.1:9105&#34;&gt;http://127.0.0.1:9105&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;部署教程&lt;/h2&gt; &#xA;&lt;p&gt;部署教程请参考该文件夹下的&lt;code&gt;/基本开发文档/mall4cloud开发环境搭建.md&lt;/code&gt;以及&lt;code&gt;/开发环境搭建&lt;/code&gt;目录下的中间件安装。&lt;/p&gt; &#xA;&lt;h2&gt;代码运行相关截图&lt;/h2&gt; &#xA;&lt;h3&gt;1.后台截图&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;平台端&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/image-20210705152109738.png&#34; alt=&#34;image-20210705152109738&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;商家端&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/image-20210705151729559.png&#34; alt=&#34;image-20210705151729559&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/image-20210705151847270.png&#34; alt=&#34;image-20210705151847270&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.小程序截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/%E5%B0%8F%E7%A8%8B%E5%BA%8F.png&#34; alt=&#34;小程序-1625472143277&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.uni-app截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gz-yami/mall4cloud/master/doc/img/readme/uniapp.png&#34; alt=&#34;uniapp-1625469707350&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;提交反馈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mall4j官网 &lt;a href=&#34;https://www.mall4j.com&#34;&gt;https://www.mall4j.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mall4cloud开源技术QQ群：561496886&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如需购买商业版源码，请联系商务微信&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://19838323.s21i.faiusr.com/4/4/ABUIABAEGAAgksmNlAYojomK2gIwrAI4rAI!160x160.png&#34; alt=&#34;输入图片说明&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;springboot版本商城请点击&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/gz-yami/mall4j&#34;&gt;https://gitee.com/gz-yami/mall4j&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;你的点赞鼓励，是我们前进的动力~&lt;/h2&gt; &#xA;&lt;h2&gt;你的点赞鼓励，是我们前进的动力~&lt;/h2&gt; &#xA;&lt;h2&gt;你的点赞鼓励，是我们前进的动力~&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>unifyai/ivy</title>
    <updated>2022-07-17T02:00:23Z</updated>
    <id>tag:github.com,2022-07-17:/unifyai/ivy</id>
    <link href="https://github.com/unifyai/ivy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Unified Machine Learning Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/unifyai/unifyai.github.io/raw/master/img/externally_linked/repos/ivy/logo.png?raw=true&#34;&gt;https://github.com/unifyai/unifyai.github.io/blob/master/img/externally_linked/repos/ivy/logo.png?raw=true&lt;/a&gt; :width: 100%&lt;/p&gt; &#xA;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;br/&amp;gt;&#xA;&amp;lt;div align=&#34;center&#34;&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/issues&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/issues/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/network/members&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/forks/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/stargazers&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/stars/unifyai/ivy&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/pulls&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://pypi.org/project/ivy-core&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://badge.fury.io/py/ivy-core.svg&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/actions?query=workflow%3Adocs&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/workflow/status/unifyai/ivy/docs?label=docs&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/unifyai/ivy/actions?query=workflow%3Atest-ivy&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/github/workflow/status/unifyai/ivy/test-ivy?label=tests&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://discord.gg/G4aR9Q7DTN&#34;&amp;gt;&#xA;    &amp;lt;img style=&#34;float: left; padding-right: 4px; padding-bottom: 4px;&#34; src=&#34;https://img.shields.io/discord/799879767196958751?color=blue&amp;amp;label=%20&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&amp;lt;br clear=&#34;all&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;We’re on a mission to unify all ML frameworks 💥 + automate code conversions 🔄. pip install ivy-core 🚀, join our growing community 😊, and lets-unify.ai! 🦾&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&#34;display: block;&#34; align=&#34;center&#34;&amp;gt;&#xA;    &amp;lt;img width=&#34;3%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://jax.readthedocs.io&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/jax_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://www.tensorflow.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/tensorflow_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://mxnet.apache.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/mxnet_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://pytorch.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/pytorch_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;    &amp;lt;img width=&#34;6%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/empty.png&#34;&amp;gt;&#xA;    &amp;lt;a href=&#34;https://numpy.org&#34;&amp;gt;&#xA;        &amp;lt;img width=&#34;12%&#34; style=&#34;float: left;&#34; src=&#34;https://raw.githubusercontent.com/unifyai/unifyai.github.io/master/img/externally_linked/logos/supported/numpy_logo.png&#34;&amp;gt;&#xA;    &amp;lt;/a&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. _docs: &lt;a href=&#34;https://lets-unify.ai/ivy&#34;&gt;https://lets-unify.ai/ivy&lt;/a&gt; .. _Colabs: &lt;a href=&#34;https://drive.google.com/drive/folders/16Oeu25GrQsEJh8w2B0kSrD93w4cWjJAM?usp=sharing&#34;&gt;https://drive.google.com/drive/folders/16Oeu25GrQsEJh8w2B0kSrD93w4cWjJAM?usp=sharing&lt;/a&gt; .. _&lt;code&gt;contributor guide&lt;/code&gt;: &lt;a href=&#34;https://lets-unify.ai/ivy/contributing.html&#34;&gt;https://lets-unify.ai/ivy/contributing.html&lt;/a&gt; .. _&lt;code&gt;open tasks&lt;/code&gt;: &lt;a href=&#34;https://lets-unify.ai/ivy/contributing/4_open_tasks.html&#34;&gt;https://lets-unify.ai/ivy/contributing/4_open_tasks.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Overview&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Quick Start&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Background&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Design&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Extensions&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Roadmap&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Contributing&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Ivy is an ML framework that currently supports JAX, TensorFlow, PyTorch, MXNet, and Numpy. We’re very excited for you to try it out!&lt;/p&gt; &#xA;&lt;p&gt;Next on our roadmap is to support automatic code conversions between all frameworks 🔄, and add instant multi-framework support for all open-source libraries with only a few lines of code changed! Read on to learn more 😊&lt;/p&gt; &#xA;&lt;p&gt;The docs are split into a number of sub-pages explaining different aspects of why we created Ivy, how to use it, what we’ve got planned on our roadmap, and how to contribute! Click on the sub-headings below to check out these pages!&lt;/p&gt; &#xA;&lt;p&gt;We use 🚧 to indicate that the feature being discussed is in development. We use ✅ to indicate that it is already implemented!&lt;/p&gt; &#xA;&lt;p&gt;Check out the docs_ for more info, and check out our Google Colabs_ for some interactive demos!&lt;/p&gt; &#xA;&lt;p&gt;🚨 Ivy is still at a relatively early stage of development. Expect breaking changes and sharp edges until we release version 1.2.0 in the next few weeks!&lt;/p&gt; &#xA;&lt;p&gt;If you would like to contribute, please check out our &lt;code&gt;contributor guide&lt;/code&gt;&lt;em&gt;, and take a look at the &lt;code&gt;open tasks&lt;/code&gt;&lt;/em&gt; if you&#39;d like to dive straight in! 🧑‍💻&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to ask us questions, feel free to join in on any of our weekly &#34;Ask us Anything!&#34; online sessions! To see when the next one will be, check out the Events tab at the top left our &lt;code&gt;discord server &amp;lt;https://discord.gg/G4aR9Q7DTN&amp;gt;&lt;/code&gt;_ 🙂&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Ivy can be installed like so: &lt;code&gt;pip install ivy-core&lt;/code&gt; You can immediately use Ivy to train a neural network, using your favorite framework in the background, like so:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import ivy&#xA;&#xA;class MyModel(ivy.Module):&#xA;    def __init__(self):&#xA;        self.linear0 = ivy.Linear(3, 64)&#xA;        self.linear1 = ivy.Linear(64, 1)&#xA;        ivy.Module.__init__(self)&#xA;&#xA;    def _forward(self, x):&#xA;        x = ivy.relu(self.linear0(x))&#xA;        return ivy.sigmoid(self.linear1(x))&#xA;&#xA;ivy.set_backend(&#39;torch&#39;)  # change to any backend!&#xA;model = MyModel()&#xA;optimizer = ivy.Adam(1e-4)&#xA;x_in = ivy.array([1., 2., 3.])&#xA;target = ivy.array([0.])&#xA;&#xA;def loss_fn(v):&#xA;    out = model(x_in, v=v)&#xA;    return ivy.mean((out - target)**2)&#xA;&#xA;for step in range(100):&#xA;    loss, grads = ivy.execute_with_gradients(loss_fn, model.v)&#xA;    model.v = optimizer.step(model.v, grads)&#xA;    print(&#39;step {} loss {}&#39;.format(step, ivy.to_numpy(loss).item()))&#xA;&#xA;print(&#39;Finished training!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example uses PyTorch as a backend framework, but the backend can easily be changed to your favorite frameworks, such as TensorFlow, JAX, or MXNet.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Framework Agnostic Functions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the example below we show how Ivy&#39;s concatenation function is compatible with tensors from different frameworks. This is the same for ALL Ivy functions. They can accept tensors from any framework and return the correct result.&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jax.numpy as jnp&#xA;import tensorflow as tf&#xA;import numpy as np&#xA;import mxnet as mx&#xA;import torch&#xA;&#xA;import ivy&#xA;&#xA;jax_concatted   = ivy.concat((jnp.ones((1,)), jnp.ones((1,))), -1)&#xA;tf_concatted    = ivy.concat((tf.ones((1,)), tf.ones((1,))), -1)&#xA;np_concatted    = ivy.concat((np.ones((1,)), np.ones((1,))), -1)&#xA;mx_concatted    = ivy.concat((mx.nd.ones((1,)), mx.nd.ones((1,))), -1)&#xA;torch_concatted = ivy.concat((torch.ones((1,)), torch.ones((1,))), -1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see a list of all Ivy methods, type :code:&lt;code&gt;ivy.&lt;/code&gt; into a python command prompt and press :code:&lt;code&gt;tab&lt;/code&gt;. You should then see output like the following:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;ivy.Container( ivy.general ivy.reduce_min( ivy.abs( ivy.get_device( ivy.reduce_prod( ivy.acos( ivy.get_num_dims( ivy.reduce_sum( ivy.acosh( ivy.gradient_descent_update( ivy.reductions ivy.activations ivy.gradient_image( ivy.relu( ivy.arange( ivy.gradients ivy.reshape( ivy.argmax( ivy.identity( ivy.round( ivy.argmin( ivy.image ivy.scatter_nd( ivy.array( ivy.indices_where( ivy.seed( ivy.asin( ivy.inv( ivy.shape( ivy.asinh( ivy.layers ivy.shuffle( ivy.atan( ivy.leaky_relu( ivy.sigmoid( ivy.atan2( ivy.linalg ivy.sin( ivy.atanh( ivy.linear( ivy.sinh( ivy.bilinear_resample( ivy.linspace( ivy.softmax( ivy.cast( ivy.log( ivy.softplus( ivy.ceil( ivy.logic ivy.split( ivy.clip( ivy.logical_and( ivy.squeeze( ivy.concatenate( ivy.logical_not( ivy.stack(&lt;br&gt; ivy.container ivy.logical_or( ivy.stack_images( ivy.conv2d( ivy.math ivy.stop_gradient( ivy.core ivy.matmul( ivy.svd( ivy.cos( ivy.maximum( ivy.tan( ivy.cosh( ivy.minimum( ivy.tanh( ivy.cross( ivy.neural_net ivy.tile( ivy.cumsum( ivy.nn ivy.to_list( ivy.depthwise_conv2d( ivy.norm( ivy.to_numpy( ivy.dtype( ivy.one_hot( ivy.transpose( ivy.execute_with_gradients( ivy.ones( ivy.unstack( ivy.exp( ivy.ones_like( ivy.variable( ivy.expand_dims( ivy.pinv( ivy.vector_to_skew_symmetric_matrix( ivy.flip( ivy.randint( ivy.verbosity ivy.floor( ivy.random ivy.where( ivy.floormod( ivy.random_uniform( ivy.zero_pad( ivy.backend_handler ivy.reduce_max( ivy.zeros( ivy.gather_nd( ivy.reduce_mean( ivy.zeros_like(&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;ML Explosion &amp;lt;https://lets-unify.ai/ivy/background/ml_explosion.html&amp;gt;&lt;/code&gt;_ | A huge number of ML tools have exploded onto the scene! | | (b) &lt;code&gt;Why Unify? &amp;lt;https://lets-unify.ai/ivy/background/why_unify.html&amp;gt;&lt;/code&gt;_ | Why should we try to unify them? | | (c) &lt;code&gt;Standardization &amp;lt;https://lets-unify.ai/ivy/background/standardization.html&amp;gt;&lt;/code&gt;_ | We’re collaborating with The &lt;code&gt;Consortium for Python Data API Standards &amp;lt;https://data-apis.org&amp;gt;&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;| Ivy can fulfill two distinct purposes: | | 1. Serve as a transpiler between frameworks 🚧 | 2. Serve as a new ML framework with multi-framework support ✅ | | The Ivy codebase can then be split into three categories, and can be further split into 8 distinct submodules, each of which falls into one of these three categories as follows:&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/unifyai/unifyai.github.io/raw/master/img/externally_linked/submodule_dependency_graph.png?raw=true&#34;&gt;https://github.com/unifyai/unifyai.github.io/blob/master/img/externally_linked/submodule_dependency_graph.png?raw=true&lt;/a&gt; :align: center :width: 100%&lt;/p&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;Building Blocks &amp;lt;https://lets-unify.ai/ivy/design/building_blocks.html&amp;gt;&lt;/code&gt;_ | Back-end functional APIs ✅ | Ivy functional API ✅ | Framework Handler ✅ | Ivy Compiler 🚧 | | (b) &lt;code&gt;Ivy as a Transpiler &amp;lt;https://lets-unify.ai/ivy/design/ivy_as_a_transpiler.html&amp;gt;&lt;/code&gt;_ | Front-end functional APIs 🚧 | | (c) &lt;code&gt;Ivy as a Framework &amp;lt;https://lets-unify.ai/ivy/design/ivy_as_a_framework.html&amp;gt;&lt;/code&gt;_ | Ivy stateful API ✅ | Ivy Container ✅ | Ivy Array 🚧&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;| (a) &lt;code&gt;Applied Libraries &amp;lt;https://lets-unify.ai/ivy/extensions/applied_libraries.html&amp;gt;&lt;/code&gt;_ ✅ | Ivy libraries in mechanics, vision, robotics, memory, and other areas | | (b) &lt;strong&gt;Builder [page coming soon!]&lt;/strong&gt; ✅ | :code:&lt;code&gt;ivy.Trainer&lt;/code&gt;, :code:&lt;code&gt;ivy.Dataset&lt;/code&gt;, :code:&lt;code&gt;ivy.Dataloader&lt;/code&gt; and other helpful classes and functions for creating training workflows in only a few lines of code&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;| We strongly welcome and encourage contributions from the community as we take on this important journey towards ML framework unification. These posts will explain exactly how you can get involved 🙂 | | (a) &lt;strong&gt;Standardize [page coming soon!]&lt;/strong&gt; 🚧 | Align Ivy with the &lt;code&gt;Consortium for Python Data API Standards &amp;lt;https://data-apis.org&amp;gt;&lt;/code&gt;_ | | (b) &lt;strong&gt;Front-Ends [page coming soon!]&lt;/strong&gt; 🚧 | Create backend-specific front-ends for each supported ML framework | | (c) &lt;strong&gt;Transpiler [page coming soon!]&lt;/strong&gt; 🚧 | Verify code conversions work for each back-end and front-end combo | | (d) &lt;strong&gt;Ecosystem [page coming soon!]&lt;/strong&gt; 🚧 | Add multi-framework support to popular repos with a few lines changed&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join our community as a code contributor, and help accelerate our journey to unify all ML frameworks! Find out more in our &lt;code&gt;Contributing &amp;lt;https://lets-unify.ai/ivy/contributing.html&amp;gt;&lt;/code&gt;_ guide!&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{lenton2021ivy,&#xA;  title={Ivy: Templated deep learning for inter-framework portability},&#xA;  author={Lenton, Daniel and Pardo, Fabio and Falck, Fabian and James, Stephen and Clark, Ronald},&#xA;  journal={arXiv preprint arXiv:2102.02886},&#xA;  year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>programthink/zhao</title>
    <updated>2022-07-17T02:00:23Z</updated>
    <id>tag:github.com,2022-07-17:/programthink/zhao</id>
    <link href="https://github.com/programthink/zhao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;【编程随想】整理的《太子党关系网络》，专门揭露赵国的权贵&lt;/p&gt;&lt;hr&gt;&lt;p&gt;= 俺整理的《太子党关系网络》 =&lt;/p&gt; &#xA;&lt;p&gt;== 简介 ==&lt;/p&gt; &#xA;&lt;p&gt;此项目创建于2016年2月，专门用来揭露天朝的权贵（也就是传说中的“赵家人”）。&lt;/p&gt; &#xA;&lt;p&gt;俺把这几年收集整理的数据开源到 GitHub，便于多人协作——大伙儿群策群力，一起来曝光权贵家族。&lt;/p&gt; &#xA;&lt;p&gt;初次上传的数据包括：700多个数据文件（ &#39;&#39;&#39;对应700多人，130多个家族&#39;&#39;&#39; ），另有200多张图片（人物头像）。随着俺不断完善，数据会越来越多。&lt;/p&gt; &#xA;&lt;p&gt;对这个项目，俺会【持续更新】。比如朝廷每次换届的时候，俺都会补充新的素材。&lt;/p&gt; &#xA;&lt;p&gt;为了确保数据的可信度，俺主要参考“维基百科”以及一些国际权威媒体的报道（比如《纽约时报》、《华尔街日版》、《金融时报》等等）。&lt;/p&gt; &#xA;&lt;p&gt;另外，对于某些客观事实（比如：生卒年月、简历、亲戚关系），俺也参考了天朝政府的官方网站，以及墙内的“百度百科”。&lt;/p&gt; &#xA;&lt;p&gt;== 下载说明 ==&lt;/p&gt; &#xA;&lt;p&gt;GitHub 提供了“下载整个项目”的功能，但是会比较大。&lt;/p&gt; &#xA;&lt;p&gt;如果你仅仅想看《太子党关系网络》这份文档，只需在首页上方点击进入 &#39;&#39;&#39;download&#39;&#39;&#39; 这个目录。&lt;/p&gt; &#xA;&lt;p&gt;该目录下有 &#39;&#39;&#39;pdf&#39;&#39;&#39; 和 &#39;&#39;&#39;jpg&#39;&#39;&#39; 两个子目录，分别存放对应的 &#39;&#39;&#39;【文件类型】&#39;&#39;&#39; 。你想要看哪一种文件格式，就进入哪个子目录里面。&lt;/p&gt; &#xA;&lt;p&gt;进入【文件类型】的子目录之后，会看到一个文件列表（目前有13个文件）。先点击你想要的某个文件，会进入该文件的页面。&lt;/p&gt; &#xA;&lt;p&gt;然后在【右上方】你会看到一个 &#39;&#39;&#39;Raw 按钮&#39;&#39;&#39; ，在这个按钮上点【右键】，在【右键菜单】里面选“保存”或“另存为”，就可以把这个文件下载到你本机。&lt;/p&gt; &#xA;&lt;p&gt;== 多人协作说明 ==&lt;/p&gt; &#xA;&lt;p&gt;俺非常希望有更多的网友参与该项目，大伙儿一起来完善天朝权贵家族的资料。&lt;/p&gt; &#xA;&lt;p&gt;想要参与的同学，可以通过如下方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;到[https://program-think.blogspot.com/ 俺博客]留言进行反馈，补充信息或反馈错误。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在[https://github.com/programthink/zhao/issues 本项目发一个 issue]，补充信息或反馈错误。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork 该项目，进行修改，然后向俺发一个 Pull Request&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;（后面两种方式，你需要有 GitHub 的帐号）&lt;/p&gt; &#xA;&lt;p&gt;== 数据格式说明 ==&lt;/p&gt; &#xA;&lt;p&gt;本项目的数据文件，全部采用[https://zh.wikipedia.org/wiki/YAML YAML 格式]。这种格式非常简洁明了，有利于完全不懂技术的网友参与编辑。&lt;/p&gt; &#xA;&lt;p&gt;而且俺在每一个 YAML 格式的文件中都写了详细的注释，便于其他网友修改。&lt;/p&gt; &#xA;&lt;p&gt;== 目录说明 ==&lt;/p&gt; &#xA;&lt;p&gt;=== data 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;data 目录用来保存数据文件，该目录下另有如下三个子目录：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;person&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放个人的资料，每个人一个目录，目录名就是人名。对于偶尔有同名的情况，在目录名末尾追加数字序号来区分。&lt;/p&gt; &#xA;&lt;p&gt;每个目录下都有一个 brief.yaml 文件，包含此人的简介。&lt;/p&gt; &#xA;&lt;p&gt;有些目录下还有一个 portrait.png 文件，对应此人的头像。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;company&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放与太子党有关的公司或组织机构。目录结构与 person 类似。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;family&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放家族关系的信息。每个家族是一个 yaml 格式的文件。&lt;/p&gt; &#xA;&lt;p&gt;=== bin 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;该目录存放编译脚本。该脚本的使用参见下面的章节。&lt;/p&gt; &#xA;&lt;p&gt;=== download 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;该目录存放制作好的文件，目前先提供 jpg 和 pdf 两种格式。&lt;/p&gt; &#xA;&lt;p&gt;如果你需要其它格式，可以用 bin 目录下的编译脚本自行搞定（编译脚本的使用，参见下面的章节）。&lt;/p&gt; &#xA;&lt;p&gt;== 编译脚本使用说明 ==&lt;/p&gt; &#xA;&lt;p&gt;（俺是在 Linux 上编写该脚本，尚未在 Windows 上进行测试）&lt;/p&gt; &#xA;&lt;p&gt;如果你在 Windows 上使用碰到问题，可以到[https://program-think.blogspot.com/ 俺博客]留言进行反馈。也可以在[https://github.com/programthink/zhao/issues 本项目发一个 issue]。&lt;/p&gt; &#xA;&lt;p&gt;=== 脚本的命令行参数 ===&lt;/p&gt; &#xA;&lt;p&gt;俺使用 python 作为编译脚本，该脚本位于 bin 目录下。&lt;/p&gt; &#xA;&lt;p&gt;通过该脚本可以把原始数据生成为 dot 语言的脚本。然后再调用 Graphviz 把 dot 脚本生成各种格式（比如：pdf、jpeg）。&lt;/p&gt; &#xA;&lt;p&gt;要使用该脚本，先在命令行模式下进入 bin 目录，然后运行如下命令：&lt;/p&gt; &#xA;&lt;p&gt;（生成 pdf 格式的示例）&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py pdf&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;（生成 jpg 格式的示例）&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py jpg&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;=== 依赖的软件 ===&lt;/p&gt; &#xA;&lt;p&gt;要使用上述脚本，你需要事先安装相关的软件（如下）&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python（2 或 3）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;因为俺用的是 Python 脚本，所以你需要先安装 python 软件。&lt;/p&gt; &#xA;&lt;p&gt;目前 Python 有两种大版本——python2 和 python3——俺的编译脚本 &#39;&#39;&#39;【同时兼容】&#39;&#39;&#39; 这两种 Python 的大版本。&lt;/p&gt; &#xA;&lt;p&gt;对于 Python 的小版本，俺本人在 &#39;&#39;&#39;2.7&#39;&#39;&#39; 和 &#39;&#39;&#39;3.5&#39;&#39;&#39; 上测试通过。2.6 和 3.4 估计也可以。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyYAML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这是一个基于 python 开发的软件包，专门用来处理 YAML 格式的文件。&lt;/p&gt; &#xA;&lt;p&gt;你需要在你的 python 环境中安装该软件包。其官方链接如下：&lt;/p&gt; &#xA;&lt;p&gt;[http://pyyaml.org/wiki/PyYAML PyYAML 的官网的 wiki]&lt;/p&gt; &#xA;&lt;p&gt;[https://pypi.python.org/pypi/PyYAML Python 官网的 PYPI]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graphviz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个软件是用来生成【关系图】的。关于该这个软件，俺已经写了一篇扫盲教程：&lt;/p&gt; &#xA;&lt;p&gt;《[https://program-think.blogspot.com/2016/02/opensource-review-graphviz.html 开源项目：【自动】绘图工具Graphviz——《太子党关系网络》就是用它制作]》&lt;/p&gt; &#xA;&lt;p&gt;== 致“反对此项目的墙内程序员” ==&lt;/p&gt; &#xA;&lt;p&gt;本项目上线第二天，就收获 363 个 star 兼 88 个 fork，甚至还挤进 GitHub 的“当日 Trending”——俺很荣幸，也很高兴有这么多人给俺捧场。&lt;/p&gt; &#xA;&lt;p&gt;但是在[https://github.com/programthink/zhao/issues 本项目的 issue 列表]中也看到好几个反对此项目的程序员（应该都来自墙内），他们担心这个项目导致 GitHub 被 GFW 封杀。&lt;/p&gt; &#xA;&lt;p&gt;这几年来，类似的言论俺已经看了不少。就好比强盗拿刀杀人，围观者不但没有谴责强盗，反而去谴责卖刀的店家——这就是传说中的“斯德哥尔摩综合症”。&lt;/p&gt; &#xA;&lt;p&gt;有兴趣的同学，可以看俺之前的博文——《[https://program-think.blogspot.com/2012/06/stockholm-syndrome.html 天朝民众的心理分析：斯德哥尔摩综合症]》&lt;/p&gt;</summary>
  </entry>
</feed>