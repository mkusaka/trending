<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-13T01:39:01Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amnezia-vpn/amnezia-client</title>
    <updated>2024-10-13T01:39:01Z</updated>
    <id>tag:github.com,2024-10-13:/amnezia-vpn/amnezia-client</id>
    <link href="https://github.com/amnezia-vpn/amnezia-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Amnezia VPN Client (Desktop+Mobile)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amnezia VPN&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;em&gt;The best client for self-hosted VPN&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/actions/workflows/deploy.yml?query=branch:dev&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/actions/workflows/deploy.yml/badge.svg?branch=dev&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/amnezia-vpn/amnezia-client&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Amnezia is an open-source VPN client, with a key feature that enables you to deploy your own VPN server on your server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/uipic4.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/releases/download/4.7.0.0/AmneziaVPN_4.7.0.0_x64.exe&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/win.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/releases/download/4.7.0.0/AmneziaVPN_4.7.0.0.dmg&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/mac.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/releases/download/4.7.0.0/AmneziaVPN_Linux_4.7.0.0.tar.zip&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/lin.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/releases/tag/4.7.0.0&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/andr.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/search?q=amnezia+vpn&amp;amp;c=apps&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/play.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/us/app/amneziavpn/id1600529900&#34;&gt;&lt;img src=&#34;https://github.com/amnezia-vpn/amnezia-client/raw/dev/metadata/img-readme/apl.png&#34; width=&#34;150&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/releases&#34;&gt;All releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Very easy to use - enter your IP address, SSH login, password and Amnezia will automatically install VPN docker containers to your server and connect to the VPN.&lt;/li&gt; &#xA; &lt;li&gt;Classic VPN-protocols: OpenVPN, WireGuard and IKEv2 protocols.&lt;/li&gt; &#xA; &lt;li&gt;Protocols with traffic Masking (Obfuscation): OpenVPN over &lt;a href=&#34;https://github.com/cbeuw/Cloak&#34;&gt;Cloak&lt;/a&gt; plugin, Shadowsocks (OpenVPN over Shadowsocks), &lt;a href=&#34;https://docs.amnezia.org/documentation/amnezia-wg/&#34;&gt;AmneziaWG&lt;/a&gt; and XRay.&lt;/li&gt; &#xA; &lt;li&gt;Split tunneling support - add any sites to the client to enable VPN only for them or add Apps (only for Android and Desktop).&lt;/li&gt; &#xA; &lt;li&gt;Windows, MacOS, Linux, Android, iOS releases.&lt;/li&gt; &#xA; &lt;li&gt;Support for AmneziaWG protocol configuration on &lt;a href=&#34;https://docs.keenetic.com/ua/air/kn-1611/en/6319-latest-development-release.html#UUID-186c4108-5afd-c10b-f38a-cdff6c17fab3_section-idm33192196168192-improved&#34;&gt;Keenetic beta firmware&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amnezia.org&#34;&gt;https://amnezia.org&lt;/a&gt; - project website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/AmneziaVPN&#34;&gt;https://www.reddit.com/r/AmneziaVPN&lt;/a&gt; - Reddit&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/amnezia_vpn_en&#34;&gt;https://t.me/amnezia_vpn_en&lt;/a&gt; - Telegram support channel (English)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/amnezia_vpn_ir&#34;&gt;https://t.me/amnezia_vpn_ir&lt;/a&gt; - Telegram support channel (Farsi)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/amnezia_vpn_mm&#34;&gt;https://t.me/amnezia_vpn_mm&lt;/a&gt; - Telegram support channel (Myanmar)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/amnezia_vpn&#34;&gt;https://t.me/amnezia_vpn&lt;/a&gt; - Telegram support channel (Russian)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vpnpay.io/en/amnezia-premium/&#34;&gt;https://vpnpay.io/en/amnezia-premium/&lt;/a&gt; - Amnezia Premium&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech&lt;/h2&gt; &#xA;&lt;p&gt;AmneziaVPN uses several open-source projects to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openvpn.net/&#34;&gt;OpenVPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shadowsocks.org/&#34;&gt;Shadowsocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qt.io/&#34;&gt;Qt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libssh.org&#34;&gt;LibSsh&lt;/a&gt; - forked from Qt Creator&lt;/li&gt; &#xA; &lt;li&gt;and more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Checking out the source code&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to pull all submodules after checking out the repo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? Welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Help with translations&lt;/h3&gt; &#xA;&lt;p&gt;Download the most actual translation files.&lt;/p&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/amnezia-vpn/amnezia-client/actions?query=is%3Asuccess+branch%3Adev&#34;&gt;&#34;Actions&#34; tab&lt;/a&gt;, click on the first line. Then scroll down to the &#34;Artifacts&#34; section and download &#34;AmneziaVPN_translations&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Unzip this file. Each *.ts file contains strings for one corresponding language.&lt;/p&gt; &#xA;&lt;p&gt;Translate or correct some strings in one or multiple *.ts files and commit them back to this repository into the &lt;code&gt;client/translations&lt;/code&gt; folder. You can do it via a web-interface or any other method you&#39;re familiar with.&lt;/p&gt; &#xA;&lt;h3&gt;Building sources and deployment&lt;/h3&gt; &#xA;&lt;p&gt;Check deploy folder for build scripts.&lt;/p&gt; &#xA;&lt;h3&gt;How to build an iOS app from source code on MacOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;First, make sure you have &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;XCode&lt;/a&gt; installed, at least version 14 or higher.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We use QT to generate the XCode project. We need QT version 6.6.2. Install QT for MacOS &lt;a href=&#34;https://doc.qt.io/qt-6/macos.html&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://www.qt.io/download-open-source&#34;&gt;QT Online Installer&lt;/a&gt;. Required modules:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MacOS&lt;/li&gt; &#xA;   &lt;li&gt;iOS&lt;/li&gt; &#xA;   &lt;li&gt;Qt 5 Compatibility Module&lt;/li&gt; &#xA;   &lt;li&gt;Qt Shader Tools&lt;/li&gt; &#xA;   &lt;li&gt;Additional Libraries: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Qt Image Formats&lt;/li&gt; &#xA;     &lt;li&gt;Qt Multimedia&lt;/li&gt; &#xA;     &lt;li&gt;Qt Remote Objects&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install CMake if required. We recommend CMake version 3.25. You can install CMake &lt;a href=&#34;https://cmake.org/download/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You also need to install go &amp;gt;= v1.16. If you don&#39;t have it installed already, download go from the &lt;a href=&#34;https://golang.org/dl/&#34;&gt;official website&lt;/a&gt; or use Homebrew. The latest version is recommended. Install gomobile&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$PATH:~/go/bin&#xA;go install golang.org/x/mobile/cmd/gomobile@latest&#xA;gomobile init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Build the project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export QT_BIN_DIR=&#34;&amp;lt;PATH-TO-QT-FOLDER&amp;gt;/Qt/&amp;lt;QT-VERSION&amp;gt;/ios/bin&#34;&#xA;export QT_MACOS_ROOT_DIR=&#34;&amp;lt;PATH-TO-QT-FOLDER&amp;gt;/Qt/&amp;lt;QT-VERSION&amp;gt;/macos&#34;&#xA;export QT_IOS_BIN=$QT_BIN_DIR&#xA;export PATH=$PATH:~/go/bin&#xA;mkdir build-ios&#xA;$QT_IOS_BIN/qt-cmake . -B build-ios -GXcode -DQT_HOST_PATH=$QT_MACOS_ROOT_DIR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace PATH-TO-QT-FOLDER and QT-VERSION to your environment&lt;/p&gt; &#xA;&lt;p&gt;If you get &lt;code&gt;gomobile: command not found&lt;/code&gt; make sure to set PATH to the location of the bin folder where gomobile was installed. Usually, it&#39;s in &lt;code&gt;GOPATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$(PATH):/path/to/GOPATH/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Open the XCode project. You can then run /test/archive/ship the app.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If the build fails with the following error&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make: *** &#xA;[$(PROJECTDIR)/client/build/AmneziaVPN.build/Debug-iphoneos/wireguard-go-bridge/goroot/.prepared] &#xA;Error 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a user-defined variable to both AmneziaVPN and WireGuardNetworkExtension targets&#39; build settings with key &lt;code&gt;PATH&lt;/code&gt; and value &lt;code&gt;${PATH}/path/to/bin/folder/with/go/executable&lt;/code&gt;, e.g. &lt;code&gt;${PATH}:/usr/local/go/bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;if the above error persists on your M1 Mac, then most probably you need to install arch based CMake&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;arch -arm64 brew install cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build might fail with the &#34;source files not found&#34; error the first time you try it, because the modern XCode build system compiles dependencies in parallel, and some dependencies end up being built after the ones that require them. In this case, simply restart the build.&lt;/p&gt; &#xA;&lt;h2&gt;How to build the Android app&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tested on Mac OS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Android app has the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 11&lt;/li&gt; &#xA; &lt;li&gt;Android platform SDK 33&lt;/li&gt; &#xA; &lt;li&gt;CMake 3.25.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After you have installed QT, QT Creator, and Android Studio, you need to configure QT Creator correctly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click in the top menu bar on &lt;code&gt;QT Creator&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt; -&amp;gt; &lt;code&gt;Devices&lt;/code&gt; and select the tab &lt;code&gt;Android&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set path to JDK 11&lt;/li&gt; &#xA; &lt;li&gt;Set path to Android SDK (&lt;code&gt;$ANDROID_HOME&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you get errors regarding missing SDK or &#39;SDK manager not running&#39;, you cannot fix them by correcting the paths. If you have some spare GBs on your disk, you can let QT Creator install all requirements by choosing an empty folder for &lt;code&gt;Android SDK location&lt;/code&gt; and clicking on &lt;code&gt;Set Up SDK&lt;/code&gt;. Be aware: This will install a second Android SDK and NDK on your machine!&amp;nbsp; Double-check that the right CMake version is configured: &amp;nbsp;Click on &lt;code&gt;QT Creator&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt; and click on the side menu on &lt;code&gt;Kits&lt;/code&gt;. Under the center content view&#39;s &lt;code&gt;Kits&lt;/code&gt; tab, you&#39;ll find an entry for &lt;code&gt;CMake Tool&lt;/code&gt;. If the default selected CMake version is lower than 3.25.0, install on your system CMake &amp;gt;= 3.25.0 and choose &lt;code&gt;System CMake at &amp;lt;path&amp;gt;&lt;/code&gt; from the drop-down list. If this entry is missing, you either have not installed CMake yet or QT Creator hasn&#39;t found the path to it. In that case, click in the preferences window on the side menu item &lt;code&gt;CMake&lt;/code&gt;, then on the tab &lt;code&gt;Tools&lt;/code&gt; in the center content view, and finally on the button &lt;code&gt;Add&lt;/code&gt; to set the path to your installed CMake.&amp;nbsp; Please make sure that you have selected Android Platform SDK 33 for your project: click in the main view&#39;s side menu on &lt;code&gt;Projects&lt;/code&gt;, and on the left, you&#39;ll see a section &lt;code&gt;Build &amp;amp; Run&lt;/code&gt; showing different Android build targets. You can select any of them, Amnezia VPN&#39;s project setup is designed in a way that all Android targets will be built. Click on the targets submenu item &lt;code&gt;Build&lt;/code&gt; and scroll in the center content view to &lt;code&gt;Build Steps&lt;/code&gt;. Click on &lt;code&gt;Details&lt;/code&gt; at the end of the headline &lt;code&gt;Build Android APK&lt;/code&gt; (the &lt;code&gt;Details&lt;/code&gt; button might be hidden in case the QT Creator Window is not running in full screen!). Here we are: Choose &lt;code&gt;android-33&lt;/code&gt; as &lt;code&gt;Android Build Platform SDK&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it! You should be ready to compile the project from QT Creator!&lt;/p&gt; &#xA;&lt;h3&gt;Development flow&lt;/h3&gt; &#xA;&lt;p&gt;After you&#39;ve hit the build button, QT-Creator copies the whole project to a folder in the repository parent directory. The folder should look something like &lt;code&gt;build-amnezia-client-Android_Qt_&amp;lt;version&amp;gt;_Clang_&amp;lt;architecture&amp;gt;-&amp;lt;BuildType&amp;gt;&lt;/code&gt;. If you want to develop Amnezia VPNs Android components written in Kotlin, such as components using system APIs, you need to import the generated project in Android Studio with &lt;code&gt;build-amnezia-client-Android_Qt_&amp;lt;version&amp;gt;_Clang_&amp;lt;architecture&amp;gt;-&amp;lt;BuildType&amp;gt;/client/android-build&lt;/code&gt; as the projects root directory. While you should be able to compile the generated project from Android Studio, you cannot work directly in the repository&#39;s Android project. So whenever you are confident with your work in the generated project, you&#39;ll need to copy and paste the affected files to the corresponding path in the repository&#39;s Android project so that you can add and commit your changes!&lt;/p&gt; &#xA;&lt;p&gt;You may face compiling issues in QT Creator after you&#39;ve worked in Android Studio on the generated project. Just do a &lt;code&gt;./gradlew clean&lt;/code&gt; in the generated project&#39;s root directory (&lt;code&gt;&amp;lt;path&amp;gt;/client/android-build/.&lt;/code&gt;) and you should be good to go.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL v3.0&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Patreon: &lt;a href=&#34;https://www.patreon.com/amneziavpn&#34;&gt;https://www.patreon.com/amneziavpn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bitcoin: bc1q26eevjcg9j0wuyywd2e3uc9cs2w58lpkpjxq6p &lt;br&gt; USDT BEP20: 0x6abD576765a826f87D1D95183438f9408C901bE4 &lt;br&gt; USDT TRC20: TELAitazF1MZGmiNjTcnxDjEiH5oe7LC9d &lt;br&gt; XMR: 48spms39jt1L2L5vyw2RQW6CXD6odUd4jFu19GZcDyKKQV9U88wsJVjSbL4CfRys37jVMdoaWVPSvezCQPhHXUW5UKLqUp3&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;This project is tested with BrowserStack. We express our gratitude to &lt;a href=&#34;https://www.browserstack.com&#34;&gt;BrowserStack&lt;/a&gt; for supporting our project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ValdikSS/GoodbyeDPI</title>
    <updated>2024-10-13T01:39:01Z</updated>
    <id>tag:github.com,2024-10-13:/ValdikSS/GoodbyeDPI</id>
    <link href="https://github.com/ValdikSS/GoodbyeDPI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility (for Windows)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility&lt;/h1&gt; &#xA;&lt;p&gt;This software designed to bypass Deep Packet Inspection systems found in many Internet Service Providers which block access to certain websites.&lt;/p&gt; &#xA;&lt;p&gt;It handles DPI connected using optical splitter or port mirroring (&lt;strong&gt;Passive DPI&lt;/strong&gt;) which do not block any data but just replying faster than requested destination, and &lt;strong&gt;Active DPI&lt;/strong&gt; connected in sequence.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows 7, 8, 8.1, 10 or 11&lt;/strong&gt; with administrator privileges required.&lt;/p&gt; &#xA;&lt;h1&gt;Quick start&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Russia&lt;/strong&gt;: Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;1_russia_blacklist_dnsredir.cmd&lt;/strong&gt; script.&lt;/li&gt; &#xA; &lt;li&gt;For other countries: Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;2_any_country_dnsredir.cmd&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These scripts launch GoodbyeDPI in recommended mode with DNS resolver redirection to Yandex DNS on non-standard port (to prevent DNS poisoning).&lt;br&gt; If it works — congratulations! You can use it as-is or configure further.&lt;/p&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt; and run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: goodbyedpi.exe [OPTION...]&#xA; -p          block passive DPI&#xA; -q          block QUIC/HTTP3&#xA; -r          replace Host with hoSt&#xA; -s          remove space between host header and its value&#xA; -m          mix Host header case (test.com -&amp;gt; tEsT.cOm)&#xA; -f &amp;lt;value&amp;gt;  set HTTP fragmentation to value&#xA; -k &amp;lt;value&amp;gt;  enable HTTP persistent (keep-alive) fragmentation and set it to value&#xA; -n          do not wait for first segment ACK when -k is enabled&#xA; -e &amp;lt;value&amp;gt;  set HTTPS fragmentation to value&#xA; -a          additional space between Method and Request-URI (enables -s, may break sites)&#xA; -w          try to find and parse HTTP traffic on all processed ports (not only on port 80)&#xA; --port        &amp;lt;value&amp;gt;    additional TCP port to perform fragmentation on (and HTTP tricks with -w)&#xA; --ip-id       &amp;lt;value&amp;gt;    handle additional IP ID (decimal, drop redirects and TCP RSTs with this ID).&#xA;                          This option can be supplied multiple times.&#xA; --dns-addr    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied IP address (experimental)&#xA; --dns-port    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied port (53 by default)&#xA; --dnsv6-addr  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied IPv6 address (experimental)&#xA; --dnsv6-port  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied port (53 by default)&#xA; --dns-verb               print verbose DNS redirection messages&#xA; --blacklist   &amp;lt;txtfile&amp;gt;  perform circumvention tricks only to host names and subdomains from&#xA;                          supplied text file (HTTP Host/TLS SNI).&#xA;                          This option can be supplied multiple times.&#xA; --allow-no-sni           perform circumvention if TLS SNI can&#39;t be detected with --blacklist enabled.&#xA; --frag-by-sni            if SNI is detected in TLS packet, fragment the packet right before SNI value.&#xA; --set-ttl     &amp;lt;value&amp;gt;    activate Fake Request Mode and send it with supplied TTL value.&#xA;                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).&#xA; --auto-ttl    [a1-a2-m]  activate Fake Request Mode, automatically detect TTL and decrease&#xA;                          it based on a distance. If the distance is shorter than a2, TTL is decreased&#xA;                          by a2. If it&#39;s longer, (a1; a2) scale is used with the distance as a weight.&#xA;                          If the resulting TTL is more than m(ax), set it to m.&#xA;                          Default (if set): --auto-ttl 1-4-10. Also sets --min-ttl 3.&#xA;                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).&#xA; --min-ttl     &amp;lt;value&amp;gt;    minimum TTL distance (128/64 - TTL) for which to send Fake Request&#xA;                          in --set-ttl and --auto-ttl modes.&#xA; --wrong-chksum           activate Fake Request Mode and send it with incorrect TCP checksum.&#xA;                          May not work in a VM or with some routers, but is safer than set-ttl.&#xA; --wrong-seq              activate Fake Request Mode and send it with TCP SEQ/ACK in the past.&#xA; --native-frag            fragment (split) the packets by sending them in smaller packets, without&#xA;                          shrinking the Window Size. Works faster (does not slow down the connection)&#xA;                          and better.&#xA; --reverse-frag           fragment (split) the packets just as --native-frag, but send them in the&#xA;                          reversed order. Works with the websites which could not handle segmented&#xA;                          HTTPS TLS ClientHello (because they receive the TCP flow &#34;combined&#34;).&#xA; --fake-from-hex &amp;lt;value&amp;gt;  Load fake packets for Fake Request Mode from HEX values (like 1234abcDEF).&#xA;                          This option can be supplied multiple times, in this case each fake packet&#xA;                          would be sent on every request in the command line argument order.&#xA; --fake-with-sni &amp;lt;value&amp;gt;  Generate fake packets for Fake Request Mode with given SNI domain name.&#xA;                          The packets mimic Mozilla Firefox 130 TLS ClientHello packet&#xA;                          (with random generated fake SessionID, key shares and ECH grease).&#xA;                          Can be supplied multiple times for multiple fake packets.&#xA; --fake-gen &amp;lt;value&amp;gt;       Generate random-filled fake packets for Fake Request Mode, value of them&#xA;                          (up to 30).&#xA; --fake-resend &amp;lt;value&amp;gt;    Send each fake packet value number of times.&#xA;                          Default: 1 (send each packet once).&#xA; --max-payload [value]    packets with TCP payload data more than [value] won&#39;t be processed.&#xA;                          Use this option to reduce CPU usage by skipping huge amount of data&#xA;                          (like file transfers) in already established sessions.&#xA;                          May skip some huge HTTP requests from being processed.&#xA;                          Default (if set): --max-payload 1200.&#xA;&#xA;&#xA;LEGACY modesets:&#xA; -1          -p -r -s -f 2 -k 2 -n -e 2 (most compatible mode)&#xA; -2          -p -r -s -f 2 -k 2 -n -e 40 (better speed for HTTPS yet still compatible)&#xA; -3          -p -r -s -e 40 (better speed for HTTP and HTTPS)&#xA; -4          -p -r -s (best speed)&#xA;&#xA;Modern modesets (more stable, more compatible, faster):&#xA; -5          -f 2 -e 2 --auto-ttl --reverse-frag --max-payload&#xA; -6          -f 2 -e 2 --wrong-seq --reverse-frag --max-payload&#xA; -7          -f 2 -e 2 --wrong-chksum --reverse-frag --max-payload&#xA; -8          -f 2 -e 2 --wrong-seq --wrong-chksum --reverse-frag --max-payload&#xA; -9          -f 2 -e 2 --wrong-seq --wrong-chksum --reverse-frag --max-payload -q (this is the default)&#xA;&#xA; Note: combination of --wrong-seq and --wrong-chksum generates two different fake packets.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check if your ISP&#39;s DPI could be circumvented, first make sure that your provider does not poison DNS answers by enabling &#34;Secure DNS (DNS over HTTPS)&#34; option in your browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;: Settings → &lt;a href=&#34;chrome://settings/security&#34;&gt;Privacy and security&lt;/a&gt; → Use secure DNS → With: NextDNS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firefox&lt;/strong&gt;: &lt;a href=&#34;about:preferences&#34;&gt;Settings&lt;/a&gt; → Network Settings → Enable DNS over HTTPS → Use provider: NextDNS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then run the &lt;code&gt;goodbyedpi.exe&lt;/code&gt; executable without any options. If it works — congratulations! You can use it as-is or configure further, for example by using &lt;code&gt;--blacklist&lt;/code&gt; option if the list of blocked websites is known and available for your country.&lt;/p&gt; &#xA;&lt;p&gt;If your provider intercepts DNS requests, you may want to use &lt;code&gt;--dns-addr&lt;/code&gt; option to a public DNS resolver running on non-standard port (such as Yandex DNS &lt;code&gt;77.88.8.8:1253&lt;/code&gt;) or configure DNS over HTTPS/TLS using third-party applications.&lt;/p&gt; &#xA;&lt;p&gt;Check the .cmd scripts and modify it according to your preference and network conditions.&lt;/p&gt; &#xA;&lt;h1&gt;How does it work&lt;/h1&gt; &#xA;&lt;h3&gt;Passive DPI&lt;/h3&gt; &#xA;&lt;p&gt;Most Passive DPI send HTTP 302 Redirect if you try to access blocked website over HTTP and TCP Reset in case of HTTPS, faster than destination website. Packets sent by DPI usually have IP Identification field equal to &lt;code&gt;0x0000&lt;/code&gt; or &lt;code&gt;0x0001&lt;/code&gt;, as seen with Russian providers. These packets, if they redirect you to another website (censorship page), are blocked by GoodbyeDPI.&lt;/p&gt; &#xA;&lt;h3&gt;Active DPI&lt;/h3&gt; &#xA;&lt;p&gt;Active DPI is more tricky to fool. Currently the software uses 7 methods to circumvent Active DPI:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TCP-level fragmentation for first data packet&lt;/li&gt; &#xA; &lt;li&gt;TCP-level fragmentation for persistent (keep-alive) HTTP sessions&lt;/li&gt; &#xA; &lt;li&gt;Replacing &lt;code&gt;Host&lt;/code&gt; header with &lt;code&gt;hoSt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Removing space between header name and value in &lt;code&gt;Host&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;Adding additional space between HTTP Method (GET, POST etc) and URI&lt;/li&gt; &#xA; &lt;li&gt;Mixing case of Host header value&lt;/li&gt; &#xA; &lt;li&gt;Sending fake HTTP/HTTPS packets with low Time-To-Live value, incorrect checksum or incorrect TCP Sequence/Acknowledgement numbers to fool DPI and prevent delivering them to the destination&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These methods should not break any website as they&#39;re fully compatible with TCP and HTTP standards, yet it&#39;s sufficient to prevent DPI data classification and to circumvent censorship. Additional space may break some websites, although it&#39;s acceptable by HTTP/1.1 specification (see 19.3 Tolerant Applications).&lt;/p&gt; &#xA;&lt;p&gt;The program loads WinDivert driver which uses Windows Filtering Platform to set filters and redirect packets to the userspace. It&#39;s running as long as console window is visible and terminates when you close the window.&lt;/p&gt; &#xA;&lt;h1&gt;How to build from source&lt;/h1&gt; &#xA;&lt;p&gt;This project can be build using &lt;strong&gt;GNU Make&lt;/strong&gt; and &lt;a href=&#34;https://mingw-w64.org&#34;&gt;&lt;strong&gt;mingw&lt;/strong&gt;&lt;/a&gt;. The only dependency is &lt;a href=&#34;https://github.com/basil00/Divert&#34;&gt;WinDivert&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build x86 exe run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make CPREFIX=i686-w64-mingw32- WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/x86&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And for x86_64:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make CPREFIX=x86_64-w64-mingw32- BIT64=1 WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/amd64&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to install as Windows Service&lt;/h1&gt; &#xA;&lt;p&gt;Check examples in &lt;code&gt;service_install_russia_blacklist.cmd&lt;/code&gt;, &lt;code&gt;service_install_russia_blacklist_dnsredir.cmd&lt;/code&gt; and &lt;code&gt;service_remove.cmd&lt;/code&gt; scripts.&lt;/p&gt; &#xA;&lt;p&gt;Modify them according to your own needs.&lt;/p&gt; &#xA;&lt;h1&gt;Known issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Horribly outdated Windows 7 installations are not able to load WinDivert driver due to missing support for SHA256 digital signatures. Install KB3033929 &lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=46078&#34;&gt;x86&lt;/a&gt;/&lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=46148&#34;&gt;x64&lt;/a&gt;, or better, update the whole system using Windows Update.&lt;/li&gt; &#xA; &lt;li&gt;Intel/Qualcomm Killer network cards: &lt;code&gt;Advanced Stream Detect&lt;/code&gt; in Killer Control Center is incompatible with GoodbyeDPI, &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/541#issuecomment-2296038239&#34;&gt;disable it&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;QUIC trading software &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/677#issuecomment-2390595606&#34;&gt;may interfere with GoodbyeDPI&lt;/a&gt;. First start QUIC, then GoodbyeDPI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Some SSL/TLS stacks unable to process fragmented ClientHello packets, and HTTPS websites won&#39;t open. Bug: &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/4&#34;&gt;#4&lt;/a&gt;, &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/64&#34;&gt;#64&lt;/a&gt;.&lt;/del&gt; Fragmentation issues are fixed in v0.1.7.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;ESET Antivirus is incompatible with WinDivert driver &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/91&#34;&gt;#91&lt;/a&gt;. This is most probably antivirus bug, not WinDivert.&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Similar projects&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bol-van/zapret&#34;&gt;zapret&lt;/a&gt;&lt;/strong&gt; by @bol-van (for MacOS, Linux and Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/SadeghHayeri/GreenTunnel&#34;&gt;Green Tunnel&lt;/a&gt;&lt;/strong&gt; by @SadeghHayeri (for MacOS, Linux and Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/nomoresat/DPITunnel-cli&#34;&gt;DPI Tunnel CLI&lt;/a&gt;&lt;/strong&gt; by @zhenyolka (for Linux and routers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/nomoresat/DPITunnel-android&#34;&gt;DPI Tunnel for Android&lt;/a&gt;&lt;/strong&gt; by @zhenyolka (for Android)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/krlvm/PowerTunnel&#34;&gt;PowerTunnel&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Windows, MacOS and Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/krlvm/PowerTunnel-Android&#34;&gt;PowerTunnel for Android&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Android)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xvzc/SpoofDPI&#34;&gt;SpoofDPI&lt;/a&gt;&lt;/strong&gt; by @xvzc (for macOS and Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/r3pr3ss10n/SpoofDPI-Platform&#34;&gt;SpoofDPI-Platform&lt;/a&gt;&lt;/strong&gt; by @r3pr3ss10n (for Android, macOS, Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/macronut/ghostcp&#34;&gt;GhosTCP&lt;/a&gt;&lt;/strong&gt; by @macronut (for Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hufrea/byedpi&#34;&gt;ByeDPI&lt;/a&gt;&lt;/strong&gt; for Linux/Windows + &lt;strong&gt;&lt;a href=&#34;https://github.com/dovecoteescapee/ByeDPIAndroid/&#34;&gt;ByeDPIAndroid&lt;/a&gt;&lt;/strong&gt; for Android (no root)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Waujito/youtubeUnblock/&#34;&gt;youtubeUnblock&lt;/a&gt;&lt;/strong&gt; by @Waujito (for OpenWRT/Entware routers and Linux)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Kudos&lt;/h1&gt; &#xA;&lt;p&gt;Thanks @basil00 for &lt;a href=&#34;https://github.com/basil00/Divert&#34;&gt;WinDivert&lt;/a&gt;. That&#39;s the main part of this program.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for every &lt;a href=&#34;https://github.com/ValdikSS/blockcheck&#34;&gt;BlockCheck&lt;/a&gt; contributor. It would be impossible to understand DPI behaviour without this utility.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>livekit/agents</title>
    <updated>2024-10-13T01:39:01Z</updated>
    <id>tag:github.com,2024-10-13:/livekit/agents</id>
    <link href="https://github.com/livekit/agents" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build real-time multimodal AI applications 🤖🎙️📹&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/.github/banner_dark.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/.github/banner_light.png&#34;&gt; &#xA; &lt;img style=&#34;width:100%;&#34; alt=&#34;The LiveKit icon, the name of the repository and some sample code in the background.&#34; src=&#34;https://raw.githubusercontent.com/livekit/agents/main/.github/banner_light.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;!--END_BANNER_IMAGE--&gt; &#xA;&lt;!--BEGIN_DESCRIPTION--&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt; Looking for the JS/TS library? Check out &lt;a href=&#34;https://github.com/livekit/agents-js&#34;&gt;AgentsJS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ [NEW] OpenAI Realtime API support&lt;/h2&gt; &#xA;&lt;p&gt;We are partnering with OpenAI on a new &lt;code&gt;MultimodalAgent&lt;/code&gt; API in the Agents framework. This class completely wraps OpenAI’s Realtime API, abstracts away the raw wire protocol, and provide an ultra-low latency WebRTC transport between GPT-4o and your users’ devices. This same stack powers Advanced Voice in the ChatGPT app.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Try the Realtime API in our &lt;a href=&#34;https://playground.livekit.io/&#34;&gt;playground&lt;/a&gt; [&lt;a href=&#34;https://github.com/livekit-examples/realtime-playground&#34;&gt;code&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://docs.livekit.io/agents/openai&#34;&gt;guide&lt;/a&gt; to building your first app with this new API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Agents?&lt;/h2&gt; &#xA;&lt;p&gt;The Agents framework allows you to build AI-driven server programs that can see, hear, and speak in realtime. Your agent connects with end user devices through a LiveKit session. During that session, your agent can process text, audio, images, or video streaming from a user&#39;s device, and have an AI model generate any combination of those same modalities as output, and stream them back to the user.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plugins for popular LLMs, transcription and text-to-speech services, and RAG databases&lt;/li&gt; &#xA; &lt;li&gt;High-level abstractions for building voice agents or assistants with automatic turn detection, interruption handling, function calling, and transcriptions&lt;/li&gt; &#xA; &lt;li&gt;Compatible with LiveKit&#39;s &lt;a href=&#34;https://github.com/livekit/sip&#34;&gt;telephony stack&lt;/a&gt;, allowing your agent to make calls to or receive calls from phones&lt;/li&gt; &#xA; &lt;li&gt;Integrated load balancing system that manages pools of agents with edge-based dispatch, monitoring, and transparent failover&lt;/li&gt; &#xA; &lt;li&gt;Running your agents is identical across localhost, &lt;a href=&#34;https://github.com/livekit/livekit&#34;&gt;self-hosted&lt;/a&gt;, and &lt;a href=&#34;https://cloud.livekit.io&#34;&gt;LiveKit Cloud&lt;/a&gt; environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--END_DESCRIPTION--&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the core Agents library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install livekit-agents&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;The framework includes a variety of plugins that make it easy to process streaming input or generate output. For example, there are plugins for converting text-to-speech or running inference with popular LLMs. Here&#39;s how you can install a plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install livekit-plugins-openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following plugins are available today:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-anthropic/&#34;&gt;livekit-plugins-anthropic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-azure/&#34;&gt;livekit-plugins-azure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT, TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-deepgram/&#34;&gt;livekit-plugins-deepgram&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-cartesia/&#34;&gt;livekit-plugins-cartesia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-elevenlabs/&#34;&gt;livekit-plugins-elevenlabs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-playht/&#34;&gt;livekit-plugins-playht&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-google/&#34;&gt;livekit-plugins-google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STT, TTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-nltk/&#34;&gt;livekit-plugins-nltk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities for working with text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-rag/&#34;&gt;livekit-plugins-rag&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities for performing RAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-openai/&#34;&gt;livekit-plugins-openai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LLM, STT, TTS, Assistants API, Realtime API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/livekit-plugins-silero/&#34;&gt;livekit-plugins-silero&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VAD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation and guides&lt;/h2&gt; &#xA;&lt;p&gt;Documentation on the framework and how to use it can be found &lt;a href=&#34;https://docs.livekit.io/agents&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example agents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Demo Link&lt;/th&gt; &#xA;   &lt;th&gt;Code Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A basic voice agent using a pipeline of STT, LLM, and TTS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kitt.livekit.io&#34;&gt;demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/raw/main/examples/voice-pipeline-agent/minimal_assistant.py&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Voice agent using the new OpenAI Realtime API&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.livekit.io&#34;&gt;demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit-examples/realtime-playground&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Super fast voice agent using Cerebras hosted Llama 3.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cerebras.vercel.app&#34;&gt;demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dsa/fast-voice-assistant/&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Voice agent using Cartesia&#39;s Sonic model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cartesia-assistant.vercel.app/&#34;&gt;demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Agent that looks up the current weather via function call&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/raw/main/examples/voice-pipeline-agent/function_calling_weather.py&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Voice agent that performs a RAG-based lookup&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/voice-pipeline-agent/simple-rag&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Video agent that publishes a stream of RGB frames&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/simple-color&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transcription agent that generates text captions from a user&#39;s speech&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/speech-to-text&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A chat agent you can text who will respond back with generated speech&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/agents/tree/main/examples/text-to-speech&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Localhost multi-agent conference call&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dsa/multi-agent-meeting&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Moderation agent that uses Hive to detect spam/abusive video&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dsa/livekit-agents/tree/main/hive-moderation-agent&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The Agents framework is under active development in a rapidly evolving field. We welcome and appreciate contributions of any kind, be it feedback, bugfixes, features, new plugins and tools, or better documentation. You can file issues under this repo, open a PR, or chat with us in LiveKit&#39;s &lt;a href=&#34;https://livekit.io/join-slack&#34;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--BEGIN_REPO_NAV--&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;table&gt; &#xA; &lt;thead&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th colspan=&#34;2&#34;&gt;LiveKit Ecosystem&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Realtime SDKs&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-js&#34;&gt;Browser&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-swift&#34;&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-android&#34;&gt;Android&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-flutter&#34;&gt;Flutter&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-react-native&#34;&gt;React Native&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/rust-sdks&#34;&gt;Rust&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/node-sdks&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/python-sdks&#34;&gt;Python&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-unity&#34;&gt;Unity&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/client-sdk-unity-web&#34;&gt;Unity (WebGL)&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Server APIs&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/node-sdks&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-go&#34;&gt;Golang&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-ruby&#34;&gt;Ruby&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/server-sdk-kotlin&#34;&gt;Java/Kotlin&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/python-sdks&#34;&gt;Python&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/rust-sdks&#34;&gt;Rust&lt;/a&gt; · &lt;a href=&#34;https://github.com/agence104/livekit-server-sdk-php&#34;&gt;PHP (community)&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;UI Components&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/components-js&#34;&gt;React&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/components-android&#34;&gt;Android Compose&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/components-swift&#34;&gt;SwiftUI&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Agents Frameworks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;b&gt;Python&lt;/b&gt; · &lt;a href=&#34;https://github.com/livekit/agents-js&#34;&gt;Node.js&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/agent-playground&#34;&gt;Playground&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Services&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/livekit/livekit&#34;&gt;LiveKit server&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/egress&#34;&gt;Egress&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/ingress&#34;&gt;Ingress&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/sip&#34;&gt;SIP&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Resources&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.livekit.io&#34;&gt;Docs&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit-examples&#34;&gt;Example apps&lt;/a&gt; · &lt;a href=&#34;https://livekit.io/cloud&#34;&gt;Cloud&lt;/a&gt; · &lt;a href=&#34;https://docs.livekit.io/home/self-hosting/deployment&#34;&gt;Self-hosting&lt;/a&gt; · &lt;a href=&#34;https://github.com/livekit/livekit-cli&#34;&gt;CLI&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--END_REPO_NAV--&gt;</summary>
  </entry>
</feed>