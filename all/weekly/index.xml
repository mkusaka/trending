<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:40:25Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>streamich/react-use</title>
    <updated>2022-10-09T01:40:25Z</updated>
    <id>tag:github.com,2022-10-09:/streamich/react-use</id>
    <link href="https://github.com/streamich/react-use" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Hooks — 👍&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; &lt;br&gt; &lt;br&gt; 👍 &lt;br&gt; react-use &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/h1&gt; &#xA; &lt;sup&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-use&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/react-use.svg?sanitize=true&#34; alt=&#34;npm package&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/streamich/react-use&#34;&gt; &lt;img src=&#34;https://img.shields.io/circleci/project/github/streamich/react-use/master.svg?sanitize=true&#34; alt=&#34;CircleCI master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-use&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/react-use.svg?sanitize=true&#34; alt=&#34;npm downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://streamich.github.io/react-use&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/demos-🚀-yellow.svg&#34; alt=&#34;demos&#34;&gt; &lt;/a&gt; &lt;br&gt; Collection of essential &lt;a href=&#34;https://reactjs.org/docs/hooks-intro.html&#34;&gt;React Hooks&lt;/a&gt;. &lt;em&gt;Port of&lt;/em&gt; &lt;a href=&#34;https://github.com/streamich/libreact&#34;&gt;&lt;code&gt;libreact&lt;/code&gt;&lt;/a&gt;. &lt;br&gt; Translations: &lt;a href=&#34;https://github.com/zenghongtu/react-use-chinese/raw/master/README.md&#34;&gt;🇨🇳 汉语&lt;/a&gt; &lt;/sup&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;npm i &lt;a href=&#34;https://www.npmjs.com/package/react-use&#34;&gt;react-use&lt;/a&gt;&lt;/pre&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/Sensors.md&#34;&gt;&lt;strong&gt;Sensors&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useBattery.md&#34;&gt;&lt;code&gt;useBattery&lt;/code&gt;&lt;/a&gt; — tracks device battery state. &lt;a href=&#34;https://codesandbox.io/s/qlvn662zww&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useGeolocation.md&#34;&gt;&lt;code&gt;useGeolocation&lt;/code&gt;&lt;/a&gt; — tracks geo location state of user&#39;s device. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usegeolocation--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useHover.md&#34;&gt;&lt;code&gt;useHover&lt;/code&gt; and &lt;code&gt;useHoverDirty&lt;/code&gt;&lt;/a&gt; — tracks mouse hover state of some element. &lt;a href=&#34;https://codesandbox.io/s/zpn583rvx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useHash.md&#34;&gt;&lt;code&gt;useHash&lt;/code&gt;&lt;/a&gt; — tracks location hash value. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usehash--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useIdle.md&#34;&gt;&lt;code&gt;useIdle&lt;/code&gt;&lt;/a&gt; — tracks whether user is being inactive.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useIntersection.md&#34;&gt;&lt;code&gt;useIntersection&lt;/code&gt;&lt;/a&gt; — tracks an HTML element&#39;s intersection. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-useintersection--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useKey.md&#34;&gt;&lt;code&gt;useKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useKeyPress.md&#34;&gt;&lt;code&gt;useKeyPress&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useKeyboardJs.md&#34;&gt;&lt;code&gt;useKeyboardJs&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useKeyPressEvent.md&#34;&gt;&lt;code&gt;useKeyPressEvent&lt;/code&gt;&lt;/a&gt; — track keys. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usekeypressevent--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLocation.md&#34;&gt;&lt;code&gt;useLocation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSearchParam.md&#34;&gt;&lt;code&gt;useSearchParam&lt;/code&gt;&lt;/a&gt; — tracks page navigation bar location state.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLongPress.md&#34;&gt;&lt;code&gt;useLongPress&lt;/code&gt;&lt;/a&gt; — tracks long press gesture of some element.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMedia.md&#34;&gt;&lt;code&gt;useMedia&lt;/code&gt;&lt;/a&gt; — tracks state of a CSS media query. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usemedia--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMediaDevices.md&#34;&gt;&lt;code&gt;useMediaDevices&lt;/code&gt;&lt;/a&gt; — tracks state of connected hardware devices.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMotion.md&#34;&gt;&lt;code&gt;useMotion&lt;/code&gt;&lt;/a&gt; — tracks state of device&#39;s motion sensor.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMouse.md&#34;&gt;&lt;code&gt;useMouse&lt;/code&gt; and &lt;code&gt;useMouseHovered&lt;/code&gt;&lt;/a&gt; — tracks state of mouse position. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usemouse--docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMouseWheel.md&#34;&gt;&lt;code&gt;useMouseWheel&lt;/code&gt;&lt;/a&gt; — tracks deltaY of scrolled mouse wheel. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usemousewheel--docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useNetworkState.md&#34;&gt;&lt;code&gt;useNetworkState&lt;/code&gt;&lt;/a&gt; — tracks the state of browser&#39;s network connection. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usenetworkstate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useOrientation.md&#34;&gt;&lt;code&gt;useOrientation&lt;/code&gt;&lt;/a&gt; — tracks state of device&#39;s screen orientation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePageLeave.md&#34;&gt;&lt;code&gt;usePageLeave&lt;/code&gt;&lt;/a&gt; — triggers when mouse leaves page boundaries.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useScratch.md&#34;&gt;&lt;code&gt;useScratch&lt;/code&gt;&lt;/a&gt; — tracks mouse click-and-scrub state.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useScroll.md&#34;&gt;&lt;code&gt;useScroll&lt;/code&gt;&lt;/a&gt; — tracks an HTML element&#39;s scroll position. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usescroll--docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useScrolling.md&#34;&gt;&lt;code&gt;useScrolling&lt;/code&gt;&lt;/a&gt; — tracks whether HTML element is scrolling.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useStartTyping.md&#34;&gt;&lt;code&gt;useStartTyping&lt;/code&gt;&lt;/a&gt; — detects when user starts typing.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useWindowScroll.md&#34;&gt;&lt;code&gt;useWindowScroll&lt;/code&gt;&lt;/a&gt; — tracks &lt;code&gt;Window&lt;/code&gt; scroll position. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usewindowscroll--docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useWindowSize.md&#34;&gt;&lt;code&gt;useWindowSize&lt;/code&gt;&lt;/a&gt; — tracks &lt;code&gt;Window&lt;/code&gt; dimensions. &lt;a href=&#34;https://codesandbox.io/s/m7ln22668&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMeasure.md&#34;&gt;&lt;code&gt;useMeasure&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSize.md&#34;&gt;&lt;code&gt;useSize&lt;/code&gt;&lt;/a&gt; — tracks an HTML element&#39;s dimensions. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usemeasure--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createBreakpoint.md&#34;&gt;&lt;code&gt;createBreakpoint&lt;/code&gt;&lt;/a&gt; — tracks &lt;code&gt;innerWidth&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useScrollbarWidth.md&#34;&gt;&lt;code&gt;useScrollbarWidth&lt;/code&gt;&lt;/a&gt; — detects browser&#39;s native scrollbars width. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usescrollbarwidth--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePinchZoom.md&#34;&gt;&lt;code&gt;usePinchZoom&lt;/code&gt;&lt;/a&gt; — tracks pointer events to detect pinch zoom in and out status. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/sensors-usePinchZoom--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/UI.md&#34;&gt;&lt;strong&gt;UI&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useAudio.md&#34;&gt;&lt;code&gt;useAudio&lt;/code&gt;&lt;/a&gt; — plays audio and exposes its controls. &lt;a href=&#34;https://codesandbox.io/s/2o4lo6rqy&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useClickAway.md&#34;&gt;&lt;code&gt;useClickAway&lt;/code&gt;&lt;/a&gt; — triggers callback when user clicks outside target area.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useCss.md&#34;&gt;&lt;code&gt;useCss&lt;/code&gt;&lt;/a&gt; — dynamically adjusts CSS.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useDrop.md&#34;&gt;&lt;code&gt;useDrop&lt;/code&gt; and &lt;code&gt;useDropArea&lt;/code&gt;&lt;/a&gt; — tracks file, link and copy-paste drops.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useFullscreen.md&#34;&gt;&lt;code&gt;useFullscreen&lt;/code&gt;&lt;/a&gt; — display an element or video full-screen. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/ui-usefullscreen--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSlider.md&#34;&gt;&lt;code&gt;useSlider&lt;/code&gt;&lt;/a&gt; — provides slide behavior over any HTML element. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/ui-useslider--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSpeech.md&#34;&gt;&lt;code&gt;useSpeech&lt;/code&gt;&lt;/a&gt; — synthesizes speech from a text string. &lt;a href=&#34;https://codesandbox.io/s/n090mqz69m&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useVibrate.md&#34;&gt;&lt;code&gt;useVibrate&lt;/code&gt;&lt;/a&gt; — provide physical feedback using the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API&#34;&gt;Vibration API&lt;/a&gt;. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/ui-usevibrate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useVideo.md&#34;&gt;&lt;code&gt;useVideo&lt;/code&gt;&lt;/a&gt; — plays video, tracks its state, and exposes playback controls. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/ui-usevideo--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/Animations.md&#34;&gt;&lt;strong&gt;Animations&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useRaf.md&#34;&gt;&lt;code&gt;useRaf&lt;/code&gt;&lt;/a&gt; — re-renders component on each &lt;code&gt;requestAnimationFrame&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useInterval.md&#34;&gt;&lt;code&gt;useInterval&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useHarmonicIntervalFn.md&#34;&gt;&lt;code&gt;useHarmonicIntervalFn&lt;/code&gt;&lt;/a&gt; — re-renders component on a set interval using &lt;code&gt;setInterval&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSpring.md&#34;&gt;&lt;code&gt;useSpring&lt;/code&gt;&lt;/a&gt; — interpolates number over time according to spring dynamics.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useTimeout.md&#34;&gt;&lt;code&gt;useTimeout&lt;/code&gt;&lt;/a&gt; — re-renders component after a timeout.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useTimeoutFn.md&#34;&gt;&lt;code&gt;useTimeoutFn&lt;/code&gt;&lt;/a&gt; — calls given function after a timeout. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/animation-usetimeoutfn--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useTween.md&#34;&gt;&lt;code&gt;useTween&lt;/code&gt;&lt;/a&gt; — re-renders component, while tweening a number from 0 to 1. &lt;a href=&#34;https://codesandbox.io/s/52990wwzyl&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useUpdate.md&#34;&gt;&lt;code&gt;useUpdate&lt;/code&gt;&lt;/a&gt; — returns a callback, which re-renders component when called. &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/Side-effects.md&#34;&gt;&lt;strong&gt;Side-effects&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useAsync.md&#34;&gt;&lt;code&gt;useAsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useAsyncFn.md&#34;&gt;&lt;code&gt;useAsyncFn&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useAsyncRetry.md&#34;&gt;&lt;code&gt;useAsyncRetry&lt;/code&gt;&lt;/a&gt; — resolves an &lt;code&gt;async&lt;/code&gt; function.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useBeforeUnload.md&#34;&gt;&lt;code&gt;useBeforeUnload&lt;/code&gt;&lt;/a&gt; — shows browser alert when user try to reload or close the page.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useCookie.md&#34;&gt;&lt;code&gt;useCookie&lt;/code&gt;&lt;/a&gt; — provides way to read, update and delete a cookie. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/side-effects-usecookie--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useCopyToClipboard.md&#34;&gt;&lt;code&gt;useCopyToClipboard&lt;/code&gt;&lt;/a&gt; — copies text to clipboard.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useDebounce.md&#34;&gt;&lt;code&gt;useDebounce&lt;/code&gt;&lt;/a&gt; — debounces a function. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/side-effects-usedebounce--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useError.md&#34;&gt;&lt;code&gt;useError&lt;/code&gt;&lt;/a&gt; — error dispatcher. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/side-effects-useerror--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useFavicon.md&#34;&gt;&lt;code&gt;useFavicon&lt;/code&gt;&lt;/a&gt; — sets favicon of the page.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLocalStorage.md&#34;&gt;&lt;code&gt;useLocalStorage&lt;/code&gt;&lt;/a&gt; — manages a value in &lt;code&gt;localStorage&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLockBodyScroll.md&#34;&gt;&lt;code&gt;useLockBodyScroll&lt;/code&gt;&lt;/a&gt; — lock scrolling of the body element.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useRafLoop.md&#34;&gt;&lt;code&gt;useRafLoop&lt;/code&gt;&lt;/a&gt; — calls given function inside the RAF loop.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSessionStorage.md&#34;&gt;&lt;code&gt;useSessionStorage&lt;/code&gt;&lt;/a&gt; — manages a value in &lt;code&gt;sessionStorage&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useThrottle.md&#34;&gt;&lt;code&gt;useThrottle&lt;/code&gt; and &lt;code&gt;useThrottleFn&lt;/code&gt;&lt;/a&gt; — throttles a function. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/side-effects-usethrottle--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useTitle.md&#34;&gt;&lt;code&gt;useTitle&lt;/code&gt;&lt;/a&gt; — sets title of the page.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePermission.md&#34;&gt;&lt;code&gt;usePermission&lt;/code&gt;&lt;/a&gt; — query permission status for browser APIs. &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/Lifecycles.md&#34;&gt;&lt;strong&gt;Lifecycles&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useEffectOnce.md&#34;&gt;&lt;code&gt;useEffectOnce&lt;/code&gt;&lt;/a&gt; — a modified &lt;a href=&#34;https://reactjs.org/docs/hooks-reference.html#useeffect&#34;&gt;&lt;code&gt;useEffect&lt;/code&gt;&lt;/a&gt; hook that only runs once.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useEvent.md&#34;&gt;&lt;code&gt;useEvent&lt;/code&gt;&lt;/a&gt; — subscribe to events.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLifecycles.md&#34;&gt;&lt;code&gt;useLifecycles&lt;/code&gt;&lt;/a&gt; — calls &lt;code&gt;mount&lt;/code&gt; and &lt;code&gt;unmount&lt;/code&gt; callbacks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMountedState.md&#34;&gt;&lt;code&gt;useMountedState&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useUnmountPromise.md&#34;&gt;&lt;code&gt;useUnmountPromise&lt;/code&gt;&lt;/a&gt; — track if component is mounted.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePromise.md&#34;&gt;&lt;code&gt;usePromise&lt;/code&gt;&lt;/a&gt; — resolves promise only while component is mounted.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLogger.md&#34;&gt;&lt;code&gt;useLogger&lt;/code&gt;&lt;/a&gt; — logs in console as component goes through life-cycles.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMount.md&#34;&gt;&lt;code&gt;useMount&lt;/code&gt;&lt;/a&gt; — calls &lt;code&gt;mount&lt;/code&gt; callbacks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useUnmount.md&#34;&gt;&lt;code&gt;useUnmount&lt;/code&gt;&lt;/a&gt; — calls &lt;code&gt;unmount&lt;/code&gt; callbacks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useUpdateEffect.md&#34;&gt;&lt;code&gt;useUpdateEffect&lt;/code&gt;&lt;/a&gt; — run an &lt;code&gt;effect&lt;/code&gt; only on updates.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useIsomorphicLayoutEffect.md&#34;&gt;&lt;code&gt;useIsomorphicLayoutEffect&lt;/code&gt;&lt;/a&gt; — &lt;code&gt;useLayoutEffect&lt;/code&gt; that that works on server.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useDeepCompareEffect.md&#34;&gt;&lt;code&gt;useDeepCompareEffect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useShallowCompareEffect.md&#34;&gt;&lt;code&gt;useShallowCompareEffect&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useCustomCompareEffect.md&#34;&gt;&lt;code&gt;useCustomCompareEffect&lt;/code&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/State.md&#34;&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createMemo.md&#34;&gt;&lt;code&gt;createMemo&lt;/code&gt;&lt;/a&gt; — factory of memoized hooks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createReducer.md&#34;&gt;&lt;code&gt;createReducer&lt;/code&gt;&lt;/a&gt; — factory of reducer hooks with custom middleware.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createReducerContext.md&#34;&gt;&lt;code&gt;createReducerContext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createStateContext.md&#34;&gt;&lt;code&gt;createStateContext&lt;/code&gt;&lt;/a&gt; — factory of hooks for a sharing state between components.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useDefault.md&#34;&gt;&lt;code&gt;useDefault&lt;/code&gt;&lt;/a&gt; — returns the default value when state is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useGetSet.md&#34;&gt;&lt;code&gt;useGetSet&lt;/code&gt;&lt;/a&gt; — returns state getter &lt;code&gt;get()&lt;/code&gt; instead of raw state.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useGetSetState.md&#34;&gt;&lt;code&gt;useGetSetState&lt;/code&gt;&lt;/a&gt; — as if &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useGetSet.md&#34;&gt;&lt;code&gt;useGetSet&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSetState.md&#34;&gt;&lt;code&gt;useSetState&lt;/code&gt;&lt;/a&gt; had a baby.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useLatest.md&#34;&gt;&lt;code&gt;useLatest&lt;/code&gt;&lt;/a&gt; — returns the latest state or props&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePrevious.md&#34;&gt;&lt;code&gt;usePrevious&lt;/code&gt;&lt;/a&gt; — returns the previous state or props. &lt;a href=&#34;https://codesandbox.io/s/fervent-galileo-krgx6&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/usePreviousDistinct.md&#34;&gt;&lt;code&gt;usePreviousDistinct&lt;/code&gt;&lt;/a&gt; — like &lt;code&gt;usePrevious&lt;/code&gt; but with a predicate to determine if &lt;code&gt;previous&lt;/code&gt; should update.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useObservable.md&#34;&gt;&lt;code&gt;useObservable&lt;/code&gt;&lt;/a&gt; — tracks latest value of an &lt;code&gt;Observable&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useRafState.md&#34;&gt;&lt;code&gt;useRafState&lt;/code&gt;&lt;/a&gt; — creates &lt;code&gt;setState&lt;/code&gt; method which only updates after &lt;code&gt;requestAnimationFrame&lt;/code&gt;. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-userafstate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSetState.md&#34;&gt;&lt;code&gt;useSetState&lt;/code&gt;&lt;/a&gt; — creates &lt;code&gt;setState&lt;/code&gt; method which works like &lt;code&gt;this.setState&lt;/code&gt;. &lt;a href=&#34;https://codesandbox.io/s/n75zqn1xp0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useStateList.md&#34;&gt;&lt;code&gt;useStateList&lt;/code&gt;&lt;/a&gt; — circularly iterates over an array. &lt;a href=&#34;https://codesandbox.io/s/bold-dewdney-pjzkd&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useToggle.md&#34;&gt;&lt;code&gt;useToggle&lt;/code&gt; and &lt;code&gt;useBoolean&lt;/code&gt;&lt;/a&gt; — tracks state of a boolean. &lt;a href=&#34;https://codesandbox.io/s/focused-sammet-brw2d&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useCounter.md&#34;&gt;&lt;code&gt;useCounter&lt;/code&gt; and &lt;code&gt;useNumber&lt;/code&gt;&lt;/a&gt; — tracks state of a number. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usecounter--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useList.md&#34;&gt;&lt;code&gt;useList&lt;/code&gt;&lt;/a&gt; &lt;del&gt;and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useUpsert.md&#34;&gt;&lt;code&gt;useUpsert&lt;/code&gt;&lt;/a&gt;&lt;/del&gt; — tracks state of an array. &lt;a href=&#34;https://codesandbox.io/s/wonderful-mahavira-1sm0w&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMap.md&#34;&gt;&lt;code&gt;useMap&lt;/code&gt;&lt;/a&gt; — tracks state of an object. &lt;a href=&#34;https://codesandbox.io/s/quirky-dewdney-gi161&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useSet.md&#34;&gt;&lt;code&gt;useSet&lt;/code&gt;&lt;/a&gt; — tracks state of a Set. &lt;a href=&#34;https://codesandbox.io/s/bold-shtern-6jlgw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useQueue.md&#34;&gt;&lt;code&gt;useQueue&lt;/code&gt;&lt;/a&gt; — implements simple queue.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useStateValidator.md&#34;&gt;&lt;code&gt;useStateValidator&lt;/code&gt;&lt;/a&gt; — tracks state of an object. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usestatevalidator--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useStateWithHistory.md&#34;&gt;&lt;code&gt;useStateWithHistory&lt;/code&gt;&lt;/a&gt; — stores previous state values and provides handles to travel through them. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usestatewithhistory--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMultiStateValidator.md&#34;&gt;&lt;code&gt;useMultiStateValidator&lt;/code&gt;&lt;/a&gt; — alike the &lt;code&gt;useStateValidator&lt;/code&gt;, but tracks multiple states at a time. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usemultistatevalidator--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMediatedState.md&#34;&gt;&lt;code&gt;useMediatedState&lt;/code&gt;&lt;/a&gt; — like the regular &lt;code&gt;useState&lt;/code&gt; but with mediation by custom function. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usemediatedstate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useFirstMountState.md&#34;&gt;&lt;code&gt;useFirstMountState&lt;/code&gt;&lt;/a&gt; — check if current render is first. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usefirstmountstate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useRendersCount.md&#34;&gt;&lt;code&gt;useRendersCount&lt;/code&gt;&lt;/a&gt; — count component renders. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-userenderscount--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/createGlobalState.md&#34;&gt;&lt;code&gt;createGlobalState&lt;/code&gt;&lt;/a&gt; — cross component shared state.&lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-createglobalstate--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useMethods.md&#34;&gt;&lt;code&gt;useMethods&lt;/code&gt;&lt;/a&gt; — neat alternative to &lt;code&gt;useReducer&lt;/code&gt;. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-usemethods--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useEnsuredForwardedRef.md&#34;&gt;&lt;code&gt;useEnsuredForwardedRef&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/useEnsuredForwardedRef.md&#34;&gt;&lt;code&gt;ensuredForwardRef&lt;/code&gt;&lt;/a&gt; — use a React.forwardedRef safely. &lt;a href=&#34;https://streamich.github.io/react-use/?path=/story/state-useensuredforwardedref--demo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/docs/Usage.md&#34;&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/a&gt; — how to import. &lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/streamich/react-use/master/LICENSE&#34;&gt;&lt;strong&gt;Unlicense&lt;/strong&gt;&lt;/a&gt; — public domain. &lt;br&gt; &lt;a href=&#34;https://opencollective.com/react-use/contribute&#34;&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/a&gt; — add yourself to backer list below. &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/streamich/react-use/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/react-use/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>lkwq007/stablediffusion-infinity</title>
    <updated>2022-10-09T01:40:25Z</updated>
    <id>tag:github.com,2022-10-09:/lkwq007/stablediffusion-infinity</id>
    <link href="https://github.com/lkwq007/stablediffusion-infinity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Outpainting with Stable Diffusion on an infinite canvas&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stablediffusion-infinity&lt;/h1&gt; &#xA;&lt;p&gt;Outpainting with Stable Diffusion on an infinite canvas.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/lkwq007/stablediffusion-infinity/blob/master/stablediffusion_infinity_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/lnyan/stablediffusion-infinity&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start with init_image (updated demo in Gradio):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1665437/193394123-d202efc8-24a7-41b3-a5cf-6b2e0b60db28.mp4&#34;&gt;https://user-images.githubusercontent.com/1665437/193394123-d202efc8-24a7-41b3-a5cf-6b2e0b60db28.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start with text2img (&lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/ipycanvas&#34;&gt;ipycanvas&lt;/a&gt; version):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1665437/190212025-f4a82c46-0ff1-4ca2-b79b-6c81601e3eed.mp4&#34;&gt;https://user-images.githubusercontent.com/1665437/190212025-f4a82c46-0ff1-4ca2-b79b-6c81601e3eed.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web app might work on Windows (see this issue &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/issues/12&#34;&gt;https://github.com/lkwq007/stablediffusion-infinity/issues/12&lt;/a&gt; for more information) and Apple Silicon devices (untested, check guide here: &lt;a href=&#34;https://huggingface.co/docs/diffusers/optimization/mps&#34;&gt;https://huggingface.co/docs/diffusers/optimization/mps&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This project mainly works as a proof of concept. In that case, &lt;del&gt;the UI design is relatively weak&lt;/del&gt;, and the quality of results is not guaranteed. You may need to do prompt engineering or change the size of the selection box to get better outpainting results.&lt;/p&gt; &#xA;&lt;p&gt;The project now becomes a web app based on PyScript and Gradio. For Jupyter Notebook version, please check out the &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/ipycanvas&#34;&gt;ipycanvas&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests are welcome for better UI control, ideas to achieve better results, or any other improvements.&lt;/p&gt; &#xA;&lt;p&gt;Update: the project also supports &lt;a href=&#34;https://github.com/Jack000/glid-3-xl-stable&#34;&gt;glid-3-xl-stable&lt;/a&gt; as inpainting/outpainting model. Note that you have to restart the &lt;code&gt;app.py&lt;/code&gt; to change model. (not supported on colab)&lt;/p&gt; &#xA;&lt;p&gt;Update: the project add photometric correction to suppress seams, to use this feature, you need to install &lt;a href=&#34;https://github.com/Trinkle23897/Fast-Poisson-Image-Editing&#34;&gt;fpie&lt;/a&gt;: &lt;code&gt;pip install fpie&lt;/code&gt; (Linux/MacOS only)&lt;/p&gt; &#xA;&lt;h2&gt;Setup environment&lt;/h2&gt; &#xA;&lt;p&gt;setup with &lt;code&gt;environment.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/lkwq007/stablediffusion-infinity&#xA;cd stablediffusion-infinity&#xA;conda env create -f environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if the &lt;code&gt;environment.yml&lt;/code&gt; doesn&#39;t work for you, you may install dependencies manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create -n sd-inf python=3.10&#xA;conda activate sd-inf&#xA;conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch&#xA;conda install scipy scikit-image&#xA;conda install -c conda-forge diffusers transformers ftfy&#xA;pip install opencv-python&#xA;pip install gradio==3.4.0&#xA;pip install pytorch-lightning==1.7.7 einops==0.4.1 omegaconf==2.2.3&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For windows, you may need to replace &lt;code&gt;pip install opencv-python&lt;/code&gt; with &lt;code&gt;conda install -c conda-forge opencv&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CPP library (optional)&lt;/h2&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;opencv&lt;/code&gt; library (e.g. &lt;code&gt;libopencv-dev&lt;/code&gt;/&lt;code&gt;opencv-devel&lt;/code&gt;, the package name may differ on different distributions) is required for &lt;code&gt;PyPatchMatch&lt;/code&gt;. You may need to install &lt;code&gt;opencv&lt;/code&gt; by yourself. If no &lt;code&gt;opencv&lt;/code&gt; installed, the &lt;code&gt;patch_match&lt;/code&gt; option (usually better quality) won&#39;t work.&lt;/p&gt; &#xA;&lt;h2&gt;How-to&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda activate sd-inf&#xA;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running with Docker on Windows or Linux with NVIDIA GPU&lt;/h2&gt; &#xA;&lt;p&gt;On Windows 10 or 11 you can follow this guide to setting up Docker with WSL2 &lt;a href=&#34;https://www.youtube.com/watch?v=PB7zM3JrgkI&#34;&gt;https://www.youtube.com/watch?v=PB7zM3JrgkI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Native Linux&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd stablediffusion-infinity/docker&#xA;./docker-run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows 10,11 with WSL2 shell:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;open windows Command Prompt, type &#34;bash&#34;&lt;/li&gt; &#xA; &lt;li&gt;once in bash, type:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /mnt/c/PATH-TO-YOUR/stablediffusion-infinity/docker&#xA;./docker-run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &#34;&lt;a href=&#34;http://localhost:8888&#34;&gt;http://localhost:8888&lt;/a&gt;&#34; in your browser ( even though the log says &lt;a href=&#34;http://0.0.0.0:8888&#34;&gt;http://0.0.0.0:8888&lt;/a&gt; )&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Troubleshooting on Windows (outdated): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/issues/12&#34;&gt;https://github.com/lkwq007/stablediffusion-infinity/issues/12&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The result is a black square: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;False positive rate of safety checker is relatively high, you may disable the safety_checker&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;What is the init_mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;init_mode indicates how to fill the empty/masked region, usually &lt;code&gt;patch_match&lt;/code&gt; is better than others&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Why not use &lt;code&gt;postMessage&lt;/code&gt; for iframe interaction &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The iframe and the gradio are in the same origin. For &lt;code&gt;postMessage&lt;/code&gt; version, check out &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/gradio-space&#34;&gt;gradio-space&lt;/a&gt; version&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;The code of &lt;code&gt;perlin2d.py&lt;/code&gt; is from &lt;a href=&#34;https://stackoverflow.com/questions/42147776/producing-2d-perlin-noise-with-numpy/42154921#42154921&#34;&gt;https://stackoverflow.com/questions/42147776/producing-2d-perlin-noise-with-numpy/42154921#42154921&lt;/a&gt; and is &lt;strong&gt;not&lt;/strong&gt; included in the scope of LICENSE used in this repo.&lt;/p&gt; &#xA;&lt;p&gt;The submodule &lt;code&gt;glid_3_xl_stable&lt;/code&gt; is based on &lt;a href=&#34;https://github.com/Jack000/glid-3-xl-stable&#34;&gt;https://github.com/Jack000/glid-3-xl-stable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The submodule &lt;code&gt;PyPatchMatch&lt;/code&gt; is based on &lt;a href=&#34;https://github.com/vacancy/PyPatchMatch&#34;&gt;https://github.com/vacancy/PyPatchMatch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The code of &lt;code&gt;postprocess.py&lt;/code&gt; and &lt;code&gt;process.py&lt;/code&gt; is modified based on &lt;a href=&#34;https://github.com/Trinkle23897/Fast-Poisson-Image-Editing&#34;&gt;https://github.com/Trinkle23897/Fast-Poisson-Image-Editing&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JoePenna/Dreambooth-Stable-Diffusion</title>
    <updated>2022-10-09T01:40:25Z</updated>
    <id>tag:github.com,2022-10-09:/JoePenna/Dreambooth-Stable-Diffusion</id>
    <link href="https://github.com/JoePenna/Dreambooth-Stable-Diffusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Dreambooth (https://arxiv.org/abs/2208.12242) by way of Textual Inversion (https://arxiv.org/abs/2208.01618) for Stable Diffusion. Tweaks focused on training faces, objects, and styles.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Index&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#notes-by-joe-penna&#34;&gt;Notes by Joe Penna&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#easy-runpod-instructions&#34;&gt;Easy RunPod Instructions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#vast-ai-setup&#34;&gt;Vast.AI Setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#text-vs-dreamb&#34;&gt;Textual Inversion vs. Dreambooth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#using-the-generated-model&#34;&gt;Using the Generated Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#debugging-your-results&#34;&gt;Debugging Your Results&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#they-dont-look-like-you&#34;&gt;They don&#39;t look like you at all!&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#they-sorta-look-like-you-but-exactly-like-your-training-images&#34;&gt;They sorta look like you, but exactly like your training images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#they-look-like-you-but-not-when-you-try-different-styles&#34;&gt;They look like you, but not when you try different styles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#hugging-face-diffusers&#34;&gt;Hugging Face Diffusers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;The Repo Formerly Known As &#34;Dreambooth&#34;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192390551-cb89364f-af57-4aed-8f3d-f9eb9b61cf95.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;notes-by-joe-penna&#34;&gt;&lt;/a&gt; Notes by Joe Penna&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;INTRODUCTIONS!&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Hi! My name is Joe Penna.&lt;/p&gt; &#xA;&lt;p&gt;You might have seen a few YouTube videos of mine under &lt;em&gt;MysteryGuitarMan&lt;/em&gt;. I&#39;m now a feature film director. You might have seen &lt;a href=&#34;https://www.youtube.com/watch?v=N5aD9ppoQIo&amp;amp;t=6s&#34;&gt;ARCTIC&lt;/a&gt; or &lt;a href=&#34;https://www.youtube.com/watch?v=A_apvQkWsVY&#34;&gt;STOWAWAY&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For my movies, I need to be able to train specific actors, props, locations, etc. So, I did a bunch of changes to @XavierXiao&#39;s repo in order to train people&#39;s faces.&lt;/p&gt; &#xA;&lt;p&gt;I can&#39;t release all the tests for the movie I&#39;m working on, but when I test with my own face, I release those on my Twitter page - &lt;a href=&#34;https://twitter.com/MysteryGuitarM&#34;&gt;@MysteryGuitarM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Lots of these tests were done with a buddy of mine -- Niko from CorridorDigital. It might be how you found this repo!&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m not really a coder. I&#39;m just stubborn, and I&#39;m not afraid of googling. So, eventually, some really smart folks joined in and have been contributing. In this repo, specifically: &lt;a href=&#34;https://github.com/djbielejeski&#34;&gt;@djbielejeski&lt;/a&gt; @gammagec @MrSaad –– but so many others in our Discord!&lt;/p&gt; &#xA;&lt;p&gt;This is no longer my repo. This is the people-who-wanna-see-Dreambooth-on-SD-working-well&#39;s repo!&lt;/p&gt; &#xA;&lt;p&gt;Now, if you wanna try to do this... please read the warnings below first:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;WARNING!&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;This is bleeding edge stuff&lt;/strong&gt;... there is currently no easy way to run this. This repo is based on a repo based on another repo.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;At the moment, it takes a LOT of effort to create something that&#39;s basically duct tape and bubble gum -- but eventually works SUPER well.&lt;/li&gt; &#xA;   &lt;li&gt;Step in, please! Don&#39;t let that scare ya -- but please know that you&#39;re wading through the jungle at night, with no torch...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unfreezing the model takes a lot of juice.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;You&#39;re gonna need an A6000 / A40 / A100 (or similar top-of-the-line thousands-of-dollars GPU).&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You can now run this on a GPU with 24GB of VRAM (e.g. 3090). Training will be slower, and you&#39;ll need to be sure this is the &lt;em&gt;only&lt;/em&gt; program running.&lt;/li&gt; &#xA;   &lt;li&gt;If, like myself, you don&#39;t happen to own one of those, I&#39;m including a Jupyter notebook here to help you run it on a rented cloud computing platform.&lt;/li&gt; &#xA;   &lt;li&gt;It&#39;s currently tailored to &lt;a href=&#34;https://runpod.io?ref=n8yfwyum&#34;&gt;runpod.io&lt;/a&gt;, but can work on &lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#vast-ai-setup&#34;&gt;vast.ai&lt;/a&gt; / etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This implementation does not fully implement Google&#39;s ideas on how to preserve the latent space.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Most images that are similar to what you&#39;re training will be shifted towards that.&lt;/li&gt; &#xA;   &lt;li&gt;e.g. If you&#39;re training a person, all people will look like you. If you&#39;re training an object, anything in that class will look like your object.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There doesn&#39;t seem to be an easy way to train two subjects consecutively. You will end up with an &lt;code&gt;11-12GB&lt;/code&gt; file before pruning.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The provided notebook has a pruner that crunches it down to &lt;code&gt;~2gb&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Best practice is to change the &lt;strong&gt;token&lt;/strong&gt; to a celebrity name (&lt;em&gt;note: token, not class&lt;/em&gt; -- so your prompt would be something like: &lt;code&gt;Chris Evans person&lt;/code&gt;). Here&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#using-the-generated-model&#34;&gt;my wife trained with the exact same settings, except for the token&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;setup&#34;&gt;&lt;/a&gt; Setup&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;easy-runpod-instructions&#34;&gt;&lt;/a&gt; Easy RunPod Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for RunPod. Feel free to use my &lt;a href=&#34;https://runpod.io?ref=n8yfwyum&#34;&gt;referral link here&lt;/a&gt;, so that I don&#39;t have to pay for it (but you do).&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Deploy&lt;/strong&gt; on either &lt;code&gt;SECURE CLOUD&lt;/code&gt; or &lt;code&gt;COMMUNITY CLOUD&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow these video instructions here:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7m__xadX0z0#t=5m33.1s&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/7m__xadX0z0/0.jpg&#34; alt=&#34;VIDEO INSTRUCTIONS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;vast-ai-setup&#34;&gt;&lt;/a&gt; Vast.AI Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for &lt;a href=&#34;https://vast.ai/&#34;&gt;Vast.AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add some funds (I typically add them in $10 increments)&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;a href=&#34;https://vast.ai/console/create/&#34;&gt;Client - Create page&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Select pytorch/pytorch as your docker image, and the buttons &#34;Use Jupyter Lab Interface&#34; and &#34;Jupyter direct HTTPS&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step1-select-docker-image.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You will want to increase your disk space, and filter on GPU RAM (12gb checkpoint files + 4gb model file + regularization images + other stuff adds up fast) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I typically allocate 150GB&lt;/li&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step2-instance-filters.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Also good to check the Upload/Download speed for enough bandwidth so you don&#39;t spend all your money waiting for things to download.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Select the instance you want, and click &lt;code&gt;Rent&lt;/code&gt;, then head over to your &lt;a href=&#34;https://vast.ai/console/instances/&#34;&gt;Instances&lt;/a&gt; page and click &lt;code&gt;Open&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step3-instances.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You will get an unsafe certificate warning. Click past the warning or install the &lt;a href=&#34;https://vast.ai/static/jvastai_root.cer&#34;&gt;Vast cert&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Notebook -&amp;gt; Python 3&lt;/code&gt; (You can do this next step a number of ways, but I typically do this) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step4-get-repo.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone Joe&#39;s repo with this command &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;!git clone https://github.com/JoePenna/Dreambooth-Stable-Diffusion.git&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;code&gt;run&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step5-clone-repo.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigate into the new &lt;code&gt;Dreambooth-Stable-Diffusion&lt;/code&gt; directory on the left and open the &lt;code&gt;dreambooth_runpod_joepenna.ipynb&lt;/code&gt; file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/vast-ai-step6-open-notebook.png&#34; alt=&#34;img.png&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions in the workbook and start training&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;text-vs-dreamb&#34;&gt;&lt;/a&gt; Textual Inversion vs. Dreambooth&lt;/h1&gt; &#xA;&lt;p&gt;The majority of the code in this repo was written by Rinon Gal et. al, the authors of the Textual Inversion research paper. Though a few ideas about regularization images and prior loss preservation (ideas from &#34;Dreambooth&#34;) were added in, out of respect to both the MIT team and the Google researchers, I&#39;m renaming this fork to: &lt;em&gt;&#34;The Repo Formerly Known As &#34;Dreambooth&#34;&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For an alternate implementation , please see &lt;a href=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/#hugging-face-diffusers&#34;&gt;&#34;Alternate Option&#34;&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;using-the-generated-model&#34;&gt;&lt;/a&gt; Using the generated model&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;ground truth&lt;/code&gt; (real picture, caution: very beautiful woman) &lt;br&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192403948-8d1d0e50-3e9f-495f-b8ba-1bcb6b536fc8.png&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Same prompt for all of these images below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;code&gt;sks person&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;woman person&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;Natalie Portman person&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;Kate Mara person&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192403506-ab96c652-f7d0-47b0-98fa-267defa1e511.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192403491-cb258777-5091-4492-a6cc-82305fa729f4.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192403437-f9a93720-d41c-4334-8901-fa2d2a10fe36.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/100188076/192403461-1f6972d9-64d0-46b0-b2ed-737e47aae31e.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;debugging-your-results&#34;&gt;&lt;/a&gt; Debugging your results&lt;/h1&gt; &#xA;&lt;h3&gt;❗❗ THE NUMBER ONE MISTAKE PEOPLE MAKE ❗❗&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prompting with just your token. ie &#34;joepenna&#34; instead of &#34;joepenna person&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you trained with &lt;code&gt;joepenna&lt;/code&gt; under the class &lt;code&gt;person&lt;/code&gt;, the model should only know your face as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;joepenna person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Prompts:&lt;/p&gt; &#xA;&lt;p&gt;🚫 Incorrect (missing &lt;code&gt;person&lt;/code&gt; following &lt;code&gt;joepenna&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;portrait photograph of joepenna 35mm film vintage glass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;✅ This is right (&lt;code&gt;person&lt;/code&gt; is included after &lt;code&gt;joepenna&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;portrait photograph of joepenna person 35mm film vintage glass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might sometimes get someone who kinda looks like you with joepenna (especially if you trained for too many steps), but that&#39;s only because this current iteration of Dreambooth overtrains that token so much that it bleeds into that token.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;☢ Be careful with the types of images you train&lt;/h4&gt; &#xA;&lt;p&gt;While training, Stable doesn&#39;t know that you&#39;re a person. It&#39;s just going to mimic what it sees.&lt;/p&gt; &#xA;&lt;p&gt;So, if these are your training images look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/caution-training.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;re only going to get generations of you outside next to a spiky tree, wearing a white-and-gray shirt, in the style of... well, selfie photograph.&lt;/p&gt; &#xA;&lt;p&gt;Instead, this training set is much better:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoePenna/Dreambooth-Stable-Diffusion/main/readme-images/better-training-images.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The only thing that is consistent between images is the subject. So, Stable will look through the images and learn only your face, which will make &#34;editing&#34; it into other styles possible.&lt;/p&gt; &#xA;&lt;h2&gt;Oh no! You&#39;re not getting good generations!&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a name=&#34;they-dont-look-like-you&#34;&gt;&lt;/a&gt; OPTION 1: They&#39;re not looking like you at all! (Train longer, or get better training images)&lt;/h4&gt; &#xA;&lt;p&gt;Are you sure you&#39;re prompting it right?&lt;/p&gt; &#xA;&lt;p&gt;It should be &lt;code&gt;&amp;lt;token&amp;gt; &amp;lt;class&amp;gt;&lt;/code&gt;, not just &lt;code&gt;&amp;lt;token&amp;gt;&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;JoePenna person, portrait photograph, 85mm medium format photo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If it still doesn&#39;t look like you, you didn&#39;t train long enough.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;a name=&#34;they-sorta-look-like-you-but-exactly-like-your-training-images&#34;&gt;&lt;/a&gt; OPTION 2: They&#39;re looking like you, but are all looking like your training images. (Train for less steps, get better training images, fix with prompting)&lt;/h4&gt; &#xA;&lt;p&gt;Okay, a few reasons why: you might have trained too long... or your images were too similar... or you didn&#39;t train with enough images.&lt;/p&gt; &#xA;&lt;p&gt;No problem. We can fix that with the prompt. Stable Diffusion puts a LOT of merit to whatever you type first. So save it for later:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;an exquisite portrait photograph, 85mm medium format photo of JoePenna person with a classic haircut&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;a name=&#34;they-look-like-you-but-not-when-you-try-different-styles&#34;&gt;&lt;/a&gt; OPTION 3: They&#39;re looking like you, but not when you try different styles. (Train longer, get better training images)&lt;/h4&gt; &#xA;&lt;p&gt;You didn&#39;t train long enough...&lt;/p&gt; &#xA;&lt;p&gt;No problem. We can fix that with the prompt:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;JoePenna person in a portrait photograph, JoePenna person in a 85mm medium format photo of JoePenna person&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;More tips and help here: &lt;a href=&#34;https://discord.com/invite/qbMuXBXyHA&#34;&gt;Stable Diffusion Dreambooth Discord&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;hugging-face-diffusers&#34;&gt;&lt;/a&gt; Hugging Face Diffusers - Alternate Option&lt;/h1&gt; &#xA;&lt;p&gt;Dreambooth is now supported in HuggingFace Diffusers for training with Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;Try it out here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/huggingface/notebooks/blob/main/diffusers/sd_dreambooth_training.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>